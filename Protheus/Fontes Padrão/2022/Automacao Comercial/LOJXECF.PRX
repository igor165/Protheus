#INCLUDE "PROTHEUS.CH" 
#INCLUDE "LOJXECF.CH"
#INCLUDE "AUTODEF.CH"
#INCLUDE "TOTVS.CH"
#INCLUDE "FILEIO.CH"

#DEFINE TEF_DISCADO             "4"
#DEFINE CRLF					Chr(10)
#DEFINE F_NAME					1
#DEFINE VSPROTHEUS				11

Static nHnd			:= -1
Static aIsAutocom							// Indica que os equipamentos estão utilizando a AUTOCOM
Static oImpFisc 	:= Nil					//Objeto do tipo LJCImpressora
Static oTovsApi		:= Nil					//Objeto do tipo LJCTotvsApi
Static oRet			:= Nil					//Objeto do tipo LJCRetImpressora
Static lDescTot 	:= .F.					//Controla se ja foi efetuado o desconto do total
Static cLojMD5  	:= Nil		 			// MD5 do PAF-ECF gerado na Homologacao FrontLoja TotvsClient_PAF 
Static cLojRetMD5  	:= NIL
Static lHomTEF		:= ExistFunc("LJHOMTEF") .AND. LJMSSM0(SM0->M0_CGC)
Static lHomolPaf	:= LjHomolPaf()   		//Sinaliza processo de Homologacao
Static cNomCupom	:= ""
Static cEndCupom	:= ""
Static cCnpjCupom	:= ""
Static lIsRmt64		:= If(ExistFunc("IsRmt64"), IsRmt64(), .F. )
Static cDLLSIGALOJA	:= IIf(lIsRmt64,"SIGALOJA64.DLL","SIGALOJA.DLL")
Static cDLLAUTOCOM	:= IIf(lIsRmt64,"AUTOCOM64.DLL","AUTOCOM.DLL")
Static cDLLTOTVSAPI	:= IIf(lIsRmt64,"TOTVSAPI64.DLL","TOTVSAPI.DLL")
			 	
/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±³Fun‡Æo	 ³ CheckPaper³ Autor ³ Edney S. Souza        ³ Data ³ 13/03/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Verifica o Status do Papel na impressora Bematech.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Checkpaper(lMensagem) -> ExpL                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ lMensagem -> Imprime mensagem ou nÆo (.t. = DEFAULT)        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso 	     ³ SigaLoja (Venda R pida e Venda BalcÆo )                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³ E necessario atualizar o status enviando algum comando antes³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
// Nao se faz mais necessario a impressao da leitura X antes da troca de papel.
Function CheckPaper( lMensagem )
Local nRet 			:= 0                            // Retorno da Impressora 2- Pouco Papel 3- Sem Papel
Local cRet 			:= Space( 1 )					// Retorno do ECF
Local lMv_ljchkpp 	:= SuperGetMV( "MV_LJCHKPP" )	// Indica se faz checagem de papel
Local lRet	      	:= .T.							// Retorno Logico

DEFAULT lMensagem := .T.

If !lFiscal .OR. !lMv_ljchkpp
	lRet := .T.
Else
	nRet := IFStatus( nHdlECF, '3', @cRet )
	
	If lMensagem
		If nRet == 2
			If !MsgYesNo(STR0067, STR0004) 					//Pouco papel na impressora deseja continuar ?
				lRet := .F.
			EndIf	
		ElseIf nRet <> 0 
			MsgStop( OemToAnsi(STR0068), STR0004 )	// ""Impressora sem papel, Troque o papel para continuar.""
			lRet := .F.
		Endif
	Else
		If nRet <> 0 
			lRet := .F.
		EndIf			
	EndIf	
EndIf

Return lRet

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±³Fun‡ao	 ³ CheckIFData ³ Autor ³ VENDAS CLIENTES     ³ Data ³ 11/07/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Verifica se a data do sistema eh a mesma data da impressora ³±±
±±³			 ³ fiscal.													   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ CheckIFData -> ExpL    						       		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso 	     ³ SigaLoja (Venda R pida e Venda Balcao )					   ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CheckIFData()
Local nRet		:= 0		// Retorno da funcao da dll
Local lRet		:= .F.		// Variavel de controle
Local cRetorno	:= ""		// Retorno do ECF
Local lMvLjPdvPa:= LjxBGetPaf()[2] //Indica se é PDV
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e
 
If lFiscal .AND. (cPaisLoc == "MEX")
	lRet := .T.
ElseIf lFiscal
	If lEmitNFCe //Desvio ao utilizar NFC-e
		lRet := .T.
		Return lRet
	EndIf
	nRet := IFStatus( nHdlECF, '19', @cRetorno )
	If nRet == 0 .OR. nRet == 2
		If ( CtoD( cRetorno ) == dDataBase .AND. VerifHora() )
			lRet := .T.
		Else
			/* "Conforme previsto no Requisito XVII (Ato Cotepe/ICMS 9, de 13 de Março de 2013),
				para PAF-ECF admite-se somente uma tolerância em minutos entre a hora do Sistema e a hora do ECF,
				limitada a uma hora, desde que na mesma data." */
		   	If lMvLjPdvPa
				MsgStop( OemToAnsi( STR0090 ), OemToAnsi( STR0001 ) )     
			Else
				MsgStop( OemToAnsi( STR0034 ), OemToAnsi( STR0001 ) )     // Data da impressora fiscal diferente da data do sistema.
			EndIf
		Endif
	ElseIf nRet == 1
		nRet := IFStatus( nHdlECF, '2', @cRetorno )
		If nRet == 0
			If ( CtoD( cRetorno ) == dDataBase .AND. VerifHora() )
				lRet := .T.
			Else
				/* "Conforme previsto no Requisito XVII (Ato Cotepe/ICMS 9, de 13 de Março de 2013),
					para PAF-ECF admite-se somente uma tolerância em minutos entre a hora do Sistema e a hora do ECF,
					limitada a uma hora, desde que na mesma data." */
			    If lMvLjPdvPa
					MsgStop( OemToAnsi( STR0090 ), OemToAnsi( STR0001 ) )
				Else
					MsgStop( OemToAnsi( STR0034 ), OemToAnsi( STR0001 ) )     // Data da impressora fiscal diferente da data do sistema.
				EndIf
			Endif
		Else
			MsgStop( STR0073,STR0001 )     // "Erro de comunicação com o ECF."
		EndIf
	Else
		MsgStop( STR0073,STR0001 )     // "Erro de comunicação com o ECF."
	EndIf
EndIf

Return lRet

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±   
±±³Fun‡Æo	 ³ LjEnvSup  ³ Autor ³ Vendas Clientes       ³ Data ³ 10/04/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Verifica troco e envia suprimento para impressora Bematech. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ LjEnvSup(nTroco,nDinheiro) -> Expl    					   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nTroco -> Valor do Troco a ser pago ao cliente              ³±±
±±³          ³ nDinheiro -> Valor em Dinheiro pago pelo cliente     	   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SigaLoja (Venda R pida e Venda BalcÆo )					   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³ Funciona apenas com a versao 02.00 da Bematech              ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LjEnvSup( nTroco, nDinheiro )
Local lOpenCup						// Variavel de controle
Local nRet							// Retorno da funcao da dll
Local lRet		 	:= .T.			// Variavel de controle
Local nSuprimento	:= 0			// Armazena o indice do suprimento  
Local cSuprimento	:= Space(20)	// Recebe o indice do suprimento do ECF
Local cRet			:= Space(10)	// Recebe da dll se o cupom esta aberto

If nTroco > 0 .AND. Empty( nDinheiro )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se existe suprimento na impressora                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nRet := IFSupr( nHdlECF, 1, Str( nTroco, 14, 2 ) )
	If nRet == 9	// Suprimento insuficiente
		nRet := IFStatus( nHdlECF, '6', @cSuprimento )	// Pede o suprimento da impressora
		nSuprimento := Val( Alltrim( cSuprimento ) )
		// checar se o cupom está aberto ...
		nRet := IFStatus( nHdlECF, '5', @cRet )				// Verifica se o cupom está aberto
		If nRet == 7
			lOpenCup := .T.
		Else
			lOpenCup := .F.
		Endif
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ[¿
		//³Troco necessario para pagar o cliente                                                         ³
		//³troco disponivel na impressora fiscal                                                         ³
		//³vc. nao possui dinheiro em caixa sificiente para pegar este troco                             ³
		//³deseja registrar suprimento (entrada de dinheiro no caixa) automaticamente ?                  ³
		//³Ap¢s registrar este suprimento efetue novamente esta venda.                                   ³
		//³Se vocˆ optar por n„o registrar o suprimento, somente ser  poss¡vel efetuar vendas em         ³
		//³dinheiro ou com o troco dispon¡vel at‚ entrar algum valor de dinheiro via venda ou suprimento.³
		//³"Falta de Troco"                                                                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ[Ù
	
		If MsgYesNo( OemToAnsi( STR0005 + Ltrim( Str( nTroco, 14, 2 ) ) + ". " + ;
			STR0006 + Ltrim( Str( nSuprimento, 14, 2 ) ) + ". " +;
			STR0007 + ;
			STR0008 + If( lOpenCup, STR0009, "" ) + ;
			STR0010 + ;
			STR0011 ), STR0012 )
			If lOpenCup
				// cancelar o cupom
				nRet := IFCancCup( nHdlECF )
			Endif
			nRet := IFSupr( nHdlECF, 2, Str( nTroco-nSuprimento, 14, 2 ) )
			lRet := .T.
		Else
			lRet := .F.
		Endif
	Else
		lRet := .T.
	Endif
	
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ LjLeCmc7()  ³ Autor ³Vendas Clientes     ³ Data ³ 25.11.97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Le o Cmc7 e preenche variaveis dados cheque/cc/ag. 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExpL1 := L10SLeCmc7()									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ Nenhum													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function LjLeCmc7( nParcela )
Local aDados		:= {} 							// Array contendo dados do cheque
Local cBufCMC7 		:= ""							// String que recebera dados do cheque
Local aArea			:= GetArea()					// Array contendo informações da area
Local lLjLeCMC7		:= ExistBlock( "LJLECMC7" )		// Variavel logica que checa existencia do ponto de entrada LJLECMC7
Local lLjCMC7		:= ExistBlock( "LJCMC7" )		// Variavel logica que checa existencia do ponto de entrada LJCMC7
Local nRet                  						// Variavel retorno
Local xRet											// Variavel retorno do ponto de entrada LJLECMC7	

If lUsaCmc7
	If lLjCMC7
		aDados := ExecBlock( "LJCMC7",.F.,.F. )
	ElseIf nModulo <> 72
		cBufCmc7 := Space( 200 )
		
		MsgRun( OemToAnsi( STR0013 + Numeral( nParcela ) + STR0014 ),,;	// " Passe o"  "cheque e Aguarde a leitura..."
		{|| If( nParcela > 1, Sleep( 3000 ), ), nRet := CMC7LeD( nHdlCMC7, @cBufCMC7 ) } )
		If ( nRet == 1 ) .OR. Empty( cBufCMC7 )
			RestArea( aArea )
			Return( aDados )
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada para tratamento dos dados capturados  ³
		//³ pelo leitor de CMC7. Solicitado por Casa das Alian‡as  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lLjLeCmc7
			xRet  := ExecBlock( "LJLECMC7", .F., .F., { cBufCMC7 } )
			If ValType(xRet) == "C"
			   cBufCMC7  := xRet
			EndIf			
		EndIf
		AAdd( aDados, Subs( cBufCMC7, 2, 3 ) )	   		// cBanco
		AAdd( aDados, Subs( cBufCMC7, 14, 6 ) + " " )	// cNumCheque
		AAdd( aDados, Subs( cBufCMC7, 5, 4 ) )	   		// cAgencia
		AAdd( aDados, Subs( cBufCMC7, 25, 8 ) )	   		// cConta
		Aadd( aDados, Subs( cBufCMC7, 11, 3 ) )	  		// cCompensacao
		
	Endif
	If Len( aDados ) < 5
		Aadd( aDados, Space( 3 ) )		// cCompensacao
	EndIf
ElseIf LjComCMC7D()	
	//Chama a rotina que efetua a leitura o CMC7 a partir de um CMC7 direto (comunicacao USB)
	aDados := LjCMC7Direto()
EndIf

If AllTrim( Procname( 1 ) ) == "FA080TIT"
	cBanco	:= Space( 3 )
	cAgencia:= Space( 5 )
	cConta  := Space( 10 )
	cCheque := Space( 15 )
EndIf

RestArea( aArea )

Return aDados

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³DLL       ºAutor  ³Vendas Clientes     º Data ³  19/10/00   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcoes para utilizacao da sigaloja.dll                     º±±
±±º          ³                                                            º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
/* Verifica se a DLL ja esta aberta */
Function CheckDLLLj( lValidaID )
Local nRet			:= -1   		// Retorno da funcao da dll
Local cBuffer		:=	Space( 10 )	// Armazena o id da dll
Local cFrameIP		:= ""			// Armazena o servidor do TSC
Local cFramePort	:= ""			// Porta do TSC
Local cMsg			:= ""
Local lContinua		:= .T.

DEFAULT lValidaID 	:= .F.			// Flag para verificacao da versao da dll

If nHnd = -1
	nHnd := ExecInDLLOpen( cDLLSIGALOJA )
	
	If nHnd = -1

		If nModulo == 12 .Or. nModulo == 23
			LjGrvLog("CheckDLLLjEr5", " Rotina [" + ProcName(5) + "] - Linha ["+ cValToChar(ProcLine(5)) +"]")
			LjGrvLog("CheckDLLLjEr4", " Rotina [" + ProcName(4) + "] - Linha ["+ cValToChar(ProcLine(4)) +"]")
			LjGrvLog("CheckDLLLjEr3", " Rotina [" + ProcName(3) + "] - Linha ["+ cValToChar(ProcLine(3)) +"]")
			LjGrvLog("CheckDLLLjEr2", " Rotina [" + ProcName(2) + "] - Linha ["+ cValToChar(ProcLine(2)) +"]")
			LjGrvLog("CheckDLLLjEr1", " Rotina [" + ProcName(1) + "] - Linha ["+ cValToChar(ProcLine(1)) +"]")
			LjGrvLog("CheckDLLLjEr0", " Rotina [" + ProcName(0) + "] - Linha ["+ cValToChar(ProcLine(0)) +"]")
		Else
			Conout("LOJXECF - CheckDLLLj - Rotina [" + ProcName(5) + "] - Linha ["+ cValToChar(ProcLine(5)) +"]")
			Conout("LOJXECF - CheckDLLLj - Rotina [" + ProcName(4) + "] - Linha ["+ cValToChar(ProcLine(4)) +"]")
			Conout("LOJXECF - CheckDLLLj - Rotina [" + ProcName(3) + "] - Linha ["+ cValToChar(ProcLine(3)) +"]")
			Conout("LOJXECF - CheckDLLLj - Rotina [" + ProcName(2) + "] - Linha ["+ cValToChar(ProcLine(2)) +"]")
			Conout("LOJXECF - CheckDLLLj - Rotina [" + ProcName(1) + "] - Linha ["+ cValToChar(ProcLine(1)) +"]")
			Conout("LOJXECF - CheckDLLLj - Rotina [" + ProcName(0) + "] - Linha ["+ cValToChar(ProcLine(0)) +"]")
		EndIf
		
		/* "Erro ao abrir SIGALOJA.DLL" ### 
		STR0038 -> "Verifique se a SIGALOJA.DLL esta presente no diretório \BIN\REMOTE. Caso o módulo utilizado não tenha 
					acesso a dispositivos (Leitores de codigo de barras, leitoras de cheque, etc. ), será gerado log da pilha de chamadas para analise" */		
		cMsg := StrTran(STR0038,"SIGALOJA.DLL",cDLLSIGALOJA)
		
		//Leitor de CMC7 no módulo do Financeiro
		If GetMv("MV_CMC7FIN") == "S"
			/* "Ambiente configurado para utilizar leitor CMC7, caso não utilize desabilite o parâmetro MV_CMC7FIN
			 	. Corrija para que essa mensagem não seja emitida" */
			cMsg += CHR(10) + CHR(10) + STR0105
		EndIf
		
		Aviso( STR0037, cMsg, { "Ok" } )
		
		If nModulo == 12 .Or. nModulo == 23				
			Final( STR0037 )
		EndIf
		
		lContinua := .F.
	EndIf

	If lContinua .And. SuperGetMV( "MV_LJTSC" )
		cFrameIP   := LJGetStation( "TSCSRV" )
		cFramePort := LJGetStation( "TSCPORT" )
		If !Empty( cFrameIP ) .AND. !Empty( cFramePort )
			If ExeDLLRun2( nHnd, 998, AllTrim( cFrameIP ) + "," + AllTrim( cFramePort ) ) == -1				
				//³ "Não foi possível estabelecer conexão com o AP6 Terminal Services Client." ### "Atenção"³
				MsgStop( STR0035, STR0021 )
			Else				
				//³ E necessario esta mensagem para funcionar o MetaFrame.                 ³
				//³"Conexão estabelecida com o AP6 Terminal Services Client." ### "Atenção"³
				MsgStop( STR0036, STR0021 )
			EndIf
		EndIf
		
		lContinua := .F.
	EndIf
EndIf

If lContinua .And. nHnd <> -1 .AND. lValidaID
	cBuffer := Space(1000)
	nRet	:= ExecDLLRet(nHnd, 999, @cBuffer)
	LjxVldVrDLL(cBuffer,.F.,.F.)
EndIf

Return lContinua

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³IFAbrir   ºAutor  ³Microsiga           º Data ³  26/09/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Abre a comunicacao com a impressora				      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ LOJXECF                                                    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/                              
Function IFAbrir( cModelo, cPorta )
Local nRet		:=-1			// Retorno da funcao
Local nHdlMain	:= 0			// Handle do objeto da tela do protheus
Local oHdlMain 					// Objeto da janela
Local lComOk	:= .F.			//Controla se abriu comunicacao com a totvsapi
Local lContinua := .T.

/* Paises que nao utilizaM ECF : 
  PTG,ANG,CHI(Release 11.5)  */
If VldEcfPtg(@nRet)
	lContinua := .F.
EndIf

If lContinua
	/*Verifica se o tema eh FLAT ou normal*/
	oHdlMain := GetWndDefault()
	nHdlMain := oHdlMain:hWnd
	
	If !Empty( cModelo ) .AND. !Empty( cPorta )	
		If CriaTotApi()
			If ExistEquip(EQUIP_IMPFISCAL, cModelo, @lComOk)
				If lComOk
					oTovsApi := GetTotApi()
					oRet := oImpFisc:AbrirPorta(cModelo, cPorta, oTovsApi)
						
					If oRet:lRetorno
						nRet := 0
					Else
						oImpFisc := Nil
						SetTotApi(Nil)
					EndIf
				EndIf
				
				lContinua := .F.
			EndIf
		EndIf

		If lContinua
			If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
				CheckDLLLj( .T. )									// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2( nHnd, 0, cModelo +","+ cPorta + "," + AllTrim( Str( nHdlMain ) ) )
			Else		
				/*Chama o metodo para instanciar o objeto oAutocom */
				If CriaAutocom()
					/* Pesquisa se o modelo do equipamento existe na AUTOCOM                          
					  Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. */
					If IsAutocom( EQUIP_IMPFISCAL, cModelo ) == EQUIP_DLL_AUTOCOM 
						nRet := oAutocom:IFAbrir( cModelo, cPorta, nHdlMain )
					Else
						If IsAutocom( EQUIP_IMPFISCAL, cModelo ) == EQUIP_DLL_SIGALOJA
							aIsAutocom[ EQUIP_IMPFISCAL ] := EQUIP_DLL_SIGALOJA
							CheckDLLLj( .T. )								// Verifica se a SIGALOJA.DLL esta aberta
							nRet := ExeDLLRun2( nHnd, 0, cModelo + "," + cPorta + "," + AllTrim( Str( nHdlMain ) ) )
						EndIf
					EndIf
				EndIf	
			EndIf
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFFechar  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Fecha comunicacao com a impressora                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da dll                               º±± 
±±º          ³ EXPc1 - Informa a porta que esta sendo usada               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFFechar( nImpHnd, cPorta )
Local nRet		:= -1		// Retorno da funcao da dll
Local lContinua	:= .T.

//³Paises que nao utilizaM ECF :
//³PTG,ANG,CHI(Release 11.5)
If VldEcfPtg(@nRet)
	lContinua := .F.
EndIf

If lContinua .And. oImpFisc <> Nil
	oRet := oImpFisc:FechaPorta(cPorta)
	
	If oRet:lRetorno
		nRet := 0
	EndIf
	
	lContinua := .F.
EndIf

If lContinua
	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		CheckDLLLj( .F. )					 				// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2( nHnd, 1, Str( nImpHnd ) + "," + cPorta )
	Else
		//³Chama o metodo para isntanciar o objeto oAutocom
		If CriaAutocom()			
			//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          
			//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. 			
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
				nRet := oAutocom:IFFechar( cPorta )
			Else
				If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
					CheckDLLLj( .F. )			 				// Verifica se a SIGALOJA.DLL esta aberta
					nRet := ExeDLLRun2( nHnd, 1, Str( nImpHnd ) + "," + cPorta )
				EndIf
			EndIf
		Endif	
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFListar  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Lista os ECF's homologados pela sigaloja / autocom          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Armazena os perifericos que serao listados         º±± 
±±º          ³ EXPl1 - Indica se mostrara a mensagem                      º±±
±±º          ³ EXPL3 - Lista somente impressoras nao fiscais              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³  BOPS ³  Motivo da Alteracao                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºMauro S.  ³19/09/06³105627³Exibicao da versao da EPROM dos ECF's       º±±
±±ºConrado Q.³25/04/07³124924³Verifica se o objeto oAutoCom foi criado,   º±±
±±º          ³        ³      ³antes de utilizar o mesmo.                  º±±
±±ºMauro Sano³03/09/07³131833³Aumentado o tamanho do cBuffer da lista dos º±±
±±º          ³        ³      ³ECF's.                                      º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFListar( cBuffer, lMostraMsg , lOnlyImpNf )
Local nRet		:= -1   			// Retorno da funcao da dll
Local cBuffer1	:= Space( 8000 )	// Armazena a lista da Sigaloja
Local cBuffer2	:= Space( 8000 )	// Aramzena a lista da Autocom
Local nMVAUTOCOM:= ChkAutocom()  	// Captura o conteudo do MV_AUTOCOM, se e' sigaloja ou autocom
Local nCount 	:= 0    			//Variavel de controle contador
Local cBuffer3	:= ""               //Armazena a lista da Totvsapi
Local cBuffer4	:= Space( 8000 )	//Armazena impressoras nao-fiscais da Sigaloja

Default lOnlyImpNf := .F. 			//Lista somente impressoras não fiscais

If CriaTotApi()
	oTovsApi := GetTotApi()
	
	If !lOnlyImpNf
		// ***** Lista os ECF *****
		oRet := oTovsApi:ListarEcf()	
		
		For nCount := 1 To oRet:Count()
			cBuffer3 += '"' + oRet:Elements(nCount):cDescricao + '",' + oRet:Elements(nCount):cPais + ',"' + oRet:Elements(nCount):cCodEcf + '",'
		Next
	EndIf
	
	//****** Lista impressoras não fiscais para faturamento, paises localizados e NFC-e *****
	If lOnlyImpNf .OR. (nModulo == 5 .OR. nModulo == 51) .OR. INFLocaliz() .OR. ;
	   (LJAnalisaLeg(61)[1] .AND. (nModulo == 12 .OR. nModulo == 23))	//Tratamento NFC-e onde permite o uso de equipamento nao fiscal
		oRet := oTovsApi:ListarEcNf()
		For nCount := 1 To oRet:Count()
			cBuffer3 += '"' + oRet:Elements(nCount):cDescricao + '",' + oRet:Elements(nCount):cPais + ',"' + oRet:Elements(nCount):cCodEcf + '",'
		Next
	EndIf
EndIf

// Verifica o parametro MV_AUTOCOM
If nMVAUTOCOM == DLL_SIGALOJA .OR. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM
	//executa metodos da sigaloja.dll
	CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
	If !lOnlyImpNf									
		nRet := ExecDLLRet(nHnd, 2, @cBuffer1 )
	EndIf
	
	//**** Lista impressoras não fiscais para faturamento, paises localizados e NFC-e ****
	If lOnlyImpNf .OR. (nModulo == 5 .OR. nModulo == 51) .OR. INFLocaliz() .OR. ;
	   (LJAnalisaLeg(61)[1] .AND. (nModulo == 12 .OR. nModulo == 23))	//Tratamento NFC-e onde permite o uso de equipamento nao fiscal
	
		nRet := ExecDLLRet(nHnd, 130, @cBuffer4 )
		cBuffer3 += ',' + cBuffer4
	EndIf
Else
	nRet := 0
EndIf

If nRet == 0 .AND. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM .OR. nMVAUTOCOM == DLL_AUTOCOM
	//***** Chama o metodo para instanciar o objeto oAutocom  *****
	If CriaAutocom()
		If !lOnlyImpNf
			If GetRemoteType() == REMOTE_LINUX .AND. File( GetClientDir() + "libautocom.so" )
				nRet := oAutocom:IFListar()
				cBuffer2 := oAutocom:cBuffer
			Elseif	GetRemoteType() <> REMOTE_LINUX .AND. File( GetClientDir() + cDLLAUTOCOM )
		 		nRet := oAutocom:IFListar()
		 		cBuffer2 := oAutocom:cBuffer
			Endif
		EndIf
    Endif
EndIf

If nRet == 0
	If Empty(cBuffer1) .OR. nModulo == 5 .OR. nModulo == 51 .OR. lOnlyImpNf 
		cBuffer1 := cBuffer3
	Else
		If Substr(AllTrim(cBuffer1), Len(AllTrim(cBuffer1)), 1) == ','
			cBuffer1 += cBuffer3		
		Else
			cBuffer1 += ',' + cBuffer3
		EndIf
	EndIf
	cBuffer := JuntaLista( cBuffer1, cBuffer2, .T. )		// Junta as listas da SIGALOJA e da AUTOCOM
EndIf

Return nRet
                  
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFLeituraXºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Realiza a leitura X                                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFLeituraX( nImpHnd )
Local nRet := -1         			// Retorno da funcao da dll
/*As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina 
- LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais,
 pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo*/
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e
Local lContinua	:= .T.

/*Paises que nao utilizaM ECF : ³
	PTG,ANG,CHI(Release 11.5)	 */
If VldEcfPtg(@nRet) .OR. lEmitNFCe //Desvio ao utilizar NFC-e
	nRet := 0
	lContinua := .F.
EndIf

If lContinua
	If cPaisLoc == "MEX"
		LjImplCOO(@nRet)		//Implementa Numeracao quando Emulador
	EndIf
	
	If oImpFisc <> Nil
		If CheckPaper(.T.)
			oRet := oImpFisc:LeituraX()
			
			If oRet:lRetorno
				nRet := 0
			EndIf
		EndIf
		
		lContinua := .F.
	EndIf
	
	If lContinua	
		If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
			CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2( nHnd, 3, Str( nImpHnd ) )
			Endif	
		Else
			//Chama o metodo para instanciar o objeto oAutocom
			If CriaAutocom()
				/* Pesquisa se o modelo do equipamento existe na AUTOCOM                     
				 Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. */
				If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
					If CheckPaper( .T. )
						nRet := oAutocom:IFLeituraX()
					Endif	
				Else
					If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
						CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
						If CheckPaper( .T. )
							nRet := ExeDLLRun2( nHnd, 3, Str( nImpHnd ) )
						Endif	
					EndIf
				EndIf
			Endif
		EndIf
	EndIf
EndIf

Return nRet

/*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
±±³Fun‡„o	 ³ IFReducaoZ()³ Autor ³                    ³ Data ³ XX.XX.XX ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Emite Reducao Z									 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ Nenhum													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Progr.   ³ Data     BOPS   Descricao								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Adrianne  ³16/09/05³BOPS  ³ Corrigido erro na captura do dados do Mapa ³±± 
±±³          ³        ³86386 ³ Resumo.									  ³±±
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ*/
Function IFReducaoZ( nImpHnd, cBuffer )
Local nRet := -1  			// Retorno da funcao da dll                                                                              
Local cMapaRes := cBuffer	// Retorno com o conteudo gerado na reducao z para o mapa resumo

DEFAULT cBuffer := ""

/* Paises que nao utilizaM ECF :
PTG,ANG,CHI(Release 11.5)	 */
If VldEcfPtg(@nRet)
	Return nRet
EndIf

LjImplCOO(@nRet)		//Implementa Numeracao quando Emulador

If oImpFisc <> Nil
	If CheckPaper(.T.)
		oRet := oImpFisc:ReducaoZ()
		
		If oRet:lRetorno
			oRet := oImpFisc:DadosRedZ()
			
			If oRet:lRetorno
				cBuffer := LjTratRedZ(oRet:oRetorno)				
				nRet = 0
			EndIf
		EndIf
	EndIf
	Return nRet
EndIf

cBuffer := Str( nImpHnd )+ "," + cBuffer			// Envia um buffer e já prepara o recebimento
If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	If CheckPaper( .T. )
		nRet := ExecDLLRet( nHnd, 4, @cBuffer )
	Endif	
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Chama o metodo para isntanciar o objeto oAutocom             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If CriaAutocom()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
			If CheckPaper( .T. )
				nRet := oAutocom:IFReducaoZ( cMapaRes )
				cBuffer := oAutocom:cBuffer
			Endif	
		Else
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				If CheckPaper( .T. )
					nRet := ExecDLLRet( nHnd, 4, @cBuffer )
				Endif	
			EndIf
		EndIf
	Endif	
EndIf

If lHomolPaf //Insere uma espera para que o ECF possa estar habil a imprimir a LMF
	Sleep(5000)
EndIf

ChkDataMov() // Checa se e' a primeira reducao do mes e faz LMF

If File(GetClientDir() + "RPCFRONT.INI")
	WritePProString("RPC", "UltimoServer", "0", GetClientDir() + "RPCFRONT.INI")			
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFAbreCup ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Abre o cupom fiscal                                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Indica o cliente do cupom fiscal                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±± 
±±ºAnalista  ³ Data   ³  BOPS ³  Motivo da Alteracao                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºMauro S.  ³13/12/06³ 116017³Alterada a chamada da funcao CheckDLLLj    º±±
±±º          ³        ³       ³para nao realizar a verificacao da versao aº±±
±±º          ³        ³       ³cada inicio de cupom.                      º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFAbreCup( nImpHnd		, cCNPJ		, cCliente , cLojaCli ,;
				 	lImpCpfNpj 	, lVldSerie	, lNfeJoin , cMensagem,;
				 	nVlrTotal)

Local nRet 			:= -1   					// Retorno da funcao da dll
Local lDadosInf 	:= .F.     					// Variavel para controle de digitação de CPF/CNPJ
Local lLegCpf		:= .F.						// Esta na legislacao de Identificacao CPF/CNPJ
Local lContinua		:= .T.						// Prossegue?
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina
// - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para
// variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce		:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e
Local lVndCC	 	:= .F.	

DEFAULT cCNPJ    	:= ""	   					// Informa o codigo do cliente
DEFAULT cCliente  	:= SuperGetMV("MV_CLIPAD")  // Cliente Padrao
DEFAULT cLojaCli  	:= SuperGetMV("MV_LOJAPAD") // Loja Padrao   
DEFAULT cMensagem	:= ""						// Mensagem de Final de Cupom,deve ser passada antes da abertura do CF para Impressora Epson TMU220 Argentina
DEFAULT lImpCpfNpj	:= .F.						// Indica se for impresso o CPF/CNPJ no CF
DEFAULT lVldSerie	:= .T.						// Define se Valida a Serie
DEFAULT lNfeJoin	:= .F.						// Define se chama a tela de CNPJ para Joinville
Default nVlrTotal := 0

If lEmitNFCe //Desvio ao utilizar NFC-e
	nRet := 0
	lContinua := .F.
EndIf

/*Paises que nao utilizaM ECF: PTG,ANG,CHI(Release 11.5)	*/
If lContinua .And. VldEcfPtg(@nRet)  
	lContinua := .F.
EndIf

// Faz o tratamento do numero de serie
If lContinua .And. lVldSerie .And. !LjVldSerie()
	nRet := 1
	lContinua := .F.
EndIf

If lContinua .And. !CheckIFData()
	nRet := 1
	lContinua := .F.
EndIf

If lContinua

	cNomCupom	:= ""
	cEndCupom	:= ""
	cCnpjCupom	:= cCNPJ
	
	If LjNfPafEcf(SM0->M0_CGC)
		If  SL1->(ColumnPos("L1_CGCCLI")) > 0
			If !IsInCallStack("FR271CCanDav") .AND. !IsInCallStack("LOJA160") .AND. !IsInCallStack("Lj140ICOrc")
				//No PAF a venda é concomitante com isso o CPF deve ser pedido no inicio
				cCnpjCupom	:= LjxDInfCGC(cCliente, cLojaCli,@lDadosInf, nVlrTotal)  
				cNomCupom	:= LjRetNomeC()
				cEndCupom 	:= LjRetEndCli()
			EndIf
		EndIf

		If !Empty(cCnpjCupom)
			lImpCpfNpj	:= .T.					
		EndIf
		
		// Faz o tratamento da criptografia da venda bruta
		If  cPaisloc == "BRA" .OR. SuperGetMV( "MV_LJGRVVB", ,.F. ) 
			If !LJValGT() .OR. !LjVldSerie()
				nRet := 1
				lContinua := .F.
			Endif	
		Endif	
	Else
		/* Tratamento para NF Paulista */
		lLegCpf := (LjAnalisaLeg(30)[1] .OR.(LjAnalisaLeg(46)[1] .AND. lNfeJoin ))
		
		//FrontLoja ou PAF com concomitância
		lVndCC	:= nModulo == 23 .Or. (nModulo == 12 .And. LjVassConc(1))
	
		If Empty(cCNPJCupom) .AND. lLegCpf
			//lVndCC : na venda concomitante deve pedir o CPF/CNPJ na abertura, independente de qualquer configuração
			If lVndCC .Or. (LjInfDocCli() <> 2 )
				cCnpjCupom	:= LjxDInfCGC(cCliente, cLojaCli,	@lDadosInf, nVlrTotal)   
				
				If LJAnalisaLEG(58)[1] // Lei do RS que obriga a impressao CPF/CNPJ e nome do cliente
					cNomCupom	:= LjRetNomeC()
					cEndCupom	:= LjRetEndCli()
				EndIf
			EndIf
		 EndIf
		 
		/* Pergunta se o cliente desaja NF Paulista */
		If !Empty(cCNPJCupom) .AND. lLegCpf
			If !lDadosInf
				If !MsgYesNo(STR0069,STR0082)	//# "Deseja imprimir o CPF/CNPj no Cupom Fiscal?" # "Impressão do CPF/CNPJ"
					cCNPJCupom	:= ""
				Else
					lImpCpfNpj	:= .T.			
				EndIf
			Else
				lImpCpfNpj	:= .T.					
			EndIf
		EndIf
		
		// Faz o tratamento da criptografia da venda bruta
		If LJAnalisaLeg(20)[1] .OR. SuperGetMV( "MV_LJGRVVB", ,.F. ) 
			If !LJValGT()
				nRet := 1
				lContinua := .F.
			Endif	
		Endif	
	EndIf
	
	If lContinua    
	
		LjImplCOO(@nRet)		//Implementa Numeracao quando Emulador
		
		//Qdo chamado da funcao do Template de Posto deve limpar as variaveis 
		If lHomolPaf .AND. HasTemplate("PCL") .AND. IsInCallStack("T_TPLPCL10")
			cNomCupom	:= ""
			cEndCupom	:= ""
			cCnpjCupom	:= ""
			cMensagem	:= ""
		EndIf
		
		// Iguala cCNPJ devido a mesma ser passada por referencia
		cCNPJ := cCnpjCupom
		
		If oImpFisc <> Nil
			If CheckPaper(.T.)
				lDescTot := .F.
				
				oRet := oImpFisc:AbrirCF(cCNPJCupom, cNomCupom, cEndCupom)
				
				If oRet:lRetorno
					nRet := 0
					cBuffer := oRet:oRetorno
				EndIf
			EndIf
			
			lContinua := .F.
		EndIf
		
		If lContinua
			//Remove as ',' para evitar que seja interpretado pela DLL como outro parâmetro
			cEndCupom := StrTran(cEndCupom,","," ")
			cNomCupom:= StrTran(cNomCupom,","," ")
			
			If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
				CheckDLLLj( .F. )									// Verifica se a SIGALOJA.DLL esta aberta
				If CheckPaper( .T. )
					nRet := ExeDLLRun2(nHnd, 5, Str( nImpHnd )+ "," + cCNPJCupom + "|" + cNomCupom + "|" + cEndCupom + "," + cMensagem )		
				Endif	
			Else

				//Chama o metodo para instanciar o objeto oAutocom
				If CriaAutocom()
					/* Pesquisa se o modelo do equipamento existe na AUTOCOM                          
					  Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM.*/
					If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
						If CheckPaper( .T. )	
							nRet := oAutocom:IFAbreCup( cCNPJCupom + "|" + cNomCupom + "|" + cEndCupom )
						Endif	
					Else
						If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
							CheckDLLLj( .F. )								// Verifica se a SIGALOJA.DLL esta aberta
							If CheckPaper( .T. )
								nRet := ExeDLLRun2( nHnd, 5, Str( nImpHnd )+ "," + cCNPJCupom + "|" + cNomCupom + "|" + cEndCupom + "," + cMensagem)
							Endif	
						EndIf
					EndIf
				Endif
			EndIf
		EndIf
	EndIf
EndIf

Return nRet
	                        
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFPegCupomºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Lista os perifericos homologados pela sigaloja / autocom    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorna o numero do cupom fiscal                   º±±
±±º          ³ EXPc2 - Indica se ha o cancelamento do cupom fiscal        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/	
Function IFPegCupom( nImpHnd, cBuffer, cCancel )
Local lContinua	:= .T.
Local lTamCup	:= .F.
Local nRet 		:= -1										// Retorno da funcao da dll
Local cBuffTmp 	:= ""							 			// Variavel auxiliar
Local nVezes	:= 0							 			// Numero de tentativas para envio do comando
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

DEFAULT cCancel := "F"							   			// Indica se havera cancelamento
DEFAULT cBuffer := ""

//Não realiza operações com ECF quando NFC-e
If lEmitNfce
	lContinua	:= .F.
	nRet		:= 0
EndIf

/*Paises que nao utilizaM ECF : 
PTG,ANG,CHI(Release 11.5)*/	 
If lContinua .And. VldEcfPtg(@nRet)   
    cBuffer := ""
	lContinua := .F.
EndIf

If lContinua .And. oImpFisc <> Nil
	oRet := oImpFisc:Cupom()
	
	If oRet:lRetorno
		nRet := 0
		cBuffer := oRet:oRetorno
	EndIf
	
	lTamCup		:= .T.
	lContinua	:= .F. 
EndIf

If lContinua
	cBuffer := Str( nImpHnd )+ "," + cCancel + "," + cBuffer	// Envia um buffer e já prepara o recebimento
	
	/*  Verifica se esta sendo utilizado um Emulador ou um ECF       
		Se for um emulador pega o numero da nota do SLG - Cadastro  
		de estacoes.                                                
		Para utilizar uma impressora Emulando um ECF devera ser     
		utilizado uma estacao para cada caixa. Se a Loja tiver 5    
		caixas, o SLG devera conter 5 estacoes diferentes.  */
	If	ChkAutocom() == DLL_SIGALOJA	.Or.;
		IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA // Verifica o parametro MV_AUTOCOM
		
		//Verifica se a SIGALOJA.DLL esta aberta
		CheckDLLLj()
		cBuffTmp := cBuffer
	
		//Envia o comando para o ECF
		nRet := ExecDLLRet( nHnd, 6, @cBuffer )
	
		/* Faz um tratamento para repetir se o numero retornar em branco.
		 Verificamos que para alguns ECFs o numero volta em branco (intermi- 
		 tente) devido a alguma falha de hardware.                    */
		nVezes := 3
		While nRet == 0 .AND. Empty( cBuffer ) .AND. nVezes > 0
			Sleep( 500 )
			cBuffer := cBuffTmp
			nRet := ExecDLLRet( nHnd, 6, @cBuffer )
			nVezes --
		End
		
	Else
		/* Pesquisa se o modelo do equipamento existe na AUTOCOM
		 Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. */
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:IFPegCupom( cCancel )
			cBuffer := oAutocom:cBuffer
		EndIf
	EndIf
	
	lTamCup := .T.
EndIf

If lTamCup
	cBuffer := Padl( AllTrim(cBuffer) , LjxECFCupT(cBuffer) , "0" )	
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFPegSerieºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Captura o numero de serie do ECF                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorna o numero de serie do cupom fiscal          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/	
Function IFPegSerie( nImpHnd, cBuffer )
Local nRet := -1		// Retorno da funcao da dll
Local lContinua := .T.
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

If lEmitNFCe //Desvio ao utilizar NFC-e
	nRet := 0
	lContinua := .F.
EndIf

If lContinua .And. oImpFisc <> Nil
	oRet := oImpFisc:NumSerie()
	
	If oRet:lRetorno
		nRet := 0
		cBuffer := oRet:oRetorno
	EndIf
	
	lContinua := .F.
EndIf

If lContinua
	//Pega o numero de serie completo da ECF
	cBuffer := cValToChar( nImpHnd ) + ","
	cBuffer += Space(20 - Len(cBuffer))
	If ChkAutocom() == DLL_SIGALOJA			  			// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExecDLLRet( nHnd, 36, @cBuffer )
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:IFPegSerie()
			cBuffer := oAutocom:cBuffer
		Else
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExecDLLRet( nHnd, 36, @cBuffer )
			EndIf
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFPegPDV  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Captura o numero do PDV                                     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorna o numero do PDV                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/	
Function IFPegPDV( nImpHnd, cBuffer )
Local nRet := -1		// Retorno da funcao da dll
Local cRetorno := " "	// Retorna o numero do PDV
/*As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e
 cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o 
 cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam 
 o seu valor conforme o módulo*/
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e
Local lContinua	:= .T.

If lEmitNFCe //Desvio ao utilizar NFC-e
	cBuffer := AllTrim(LjGetStation("PDV"))
	nRet := 0
	lContinua := .F.
EndIf

/*Paises que nao utilizaM ECF :
PTG,ANG,CHI(Release 11.5) */
If lContinua .And. VldEcfPtg(@nRet)
	cBuffer := AllTrim(LjGetStation("PDV"))
	lContinua := .F.
EndIf

If lContinua	
	If IfStatus( nHdlECF, '11', @cRetorno ) == 0			// eh um Emulador
		cBuffer := cEstacao
		nRet := 0
	Else
		If oImpFisc <> Nil
			oRet := oImpFisc:NumeroEcf()
			
			If oRet:lRetorno
				nRet := 0
				cBuffer := oRet:oRetorno
			EndIf
			
			lContinua := .F.
		EndIf
		
		If lContinua
			If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
				cBuffer := Str( nImpHnd ) + "," + cBuffer		// Envia um buffer e já prepara o recebimento
				CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExecDLLRet( nHnd, 7, @cBuffer )
			Else
				/* Pesquisa se o modelo do equipamento existe na AUTOCOM 
				Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. */
				If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
					nRet := oAutocom:IFPegPDV()
					cBuffer := oAutocom:cBuffer
				Else
					If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
						cBuffer := Str( nImpHnd )+ "," + cBuffer		// Envia um buffer e já prepara o recebimento
						CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
						nRet := ExecDLLRet( nHnd, 7, @cBuffer )
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

Return nRet
                  
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFRegItem ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz o registros dos itens no cupom fiscal                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Codigo do Produto                                  º±±
±±º          ³ EXPc2 - Descricao do Produto                               º±±
±±º          ³ EXPc3 - Quantidade do Produto                              º±±
±±º          ³ EXPc4 - Valor Unitario o do PDV                            º±±
±±º          ³ EXPc5 - Valor do Desconto                                  º±±
±±º          ³ EXPc6 - Aliquota de Imposto do Item                        º±±
±±º          ³ EXPc7 - Total do item                                      º±±
±±º          ³ EXPc8 - Unidade de medida do item                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/	
Function IFRegItem( nImpHnd , cCodigo     , cDescricao, cQtde,;
					cVlrUnit, cVlrDesconto, cAliquota , cTotIt,;
					cUnidMed, cTipoTes )
					
Local nRet		:= -1		// Retorno da funcao da dll
Local cBuffer	:= ""		// Armazena os paramentros do registro do item
Local nValDes	:= 0
Local lContinua	:= .T.
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e 
//cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o
 //cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

DEFAULT cTotIt   := Alltrim(Str(Val(cQtde) * Val(cVlrUnit),14,TamSx3("L2_VLRITEM")[2]))	// Faz o calculo do total do item
DEFAULT cUnidMed := "UN"		// Unidade de medida utilizada na venda
DEFAULT cTipoTes := "2"

If lEmitNFCe  //Desvio ao utilizar NFC-e
	nRet := 0
	lContinua := .F.
EndIf

//Paises que nao utilizaM ECF :
//PTG,ANG,CHI(Release 11.5)
If lContinua .And. VldEcfPtg(@nRet)
	lContinua := .F.
EndIf

If lContinua
	If Val(cVlrDesconto) >= Val(cTotIt) .OR. Val(cVlrDesconto) < 0
		// Protecao para o cVlrDesconto que vem com valor negativo	
		If Val(cVlrDesconto) < 0
			nValDes := 0
			cVlrDesconto := Alltrim(Str(nValDes,10,2))
		Endif		
	Endif
	
	//Se o Campo TES estiver em Branco assume "2" Como Padrao
	If Empty(cTipoTes)
		cTipoTes := "2"
	Endif                                                       
	
	//Se o Campo Unidade Medida estiver em Branco assume "UN" Como Padrao 
	If Empty(cUnidMed)
		cUnidMed := "UN"
	Endif
	
	// Caracteres invalidos, não aceitos por diversas impressoras fiscais no campo descricao
	cDescricao := StrTran( cDescricao, ",", "." )
	cDescricao := StrTran( cDescricao, "'", "." )
	cDescricao := StrTran( cDescricao, '"', "." )
	cDescricao := StrTran( cDescricao, "&", "." )
	cDescricao := StrTran( cDescricao, "|", "." )
	
	If oImpFisc <> Nil 
		
		If CheckPaper(.T.)	
			If !Empty(cCodigo) .AND. !Empty(cDescricao) .AND. !Empty(cQtde) .AND. !Empty(cVlrUnit)
				oRet := oImpFisc:VenderItem(	cCodigo		, cDescricao	, cAliquota			, Val(Substr(cAliquota, 2 ,5))	, ;
												Val(cQtde)	, Val(cVlrUnit)	, Val(cVlrDesconto)	, Nil							, ;
				    							cUnidMed )
				If oRet:lRetorno
					nRet := 0
				EndIf
			Else
				If Val(cVlrDesconto) > 0
					oRet :=	oImpFisc:DescItem(Val(cVlrDesconto))
				
					If oRet:lRetorno
						nRet := 0
					EndIf
				Else
					nRet := 0
				EndIf
			EndIf
		EndIf
		
	Else
		cBuffer  := Str( nImpHnd ) + "," + cCodigo + "," + cDescricao + "," + cQtde +;
		 			"," + cVlrUnit + "," + cVlrDesconto + "," + cAliquota + "," + cTotIt +;
		 			"," + cUnidMed + "," + cTipoTes
		 			
		If ChkAutocom() == DLL_SIGALOJA		// Verifica o parametro MV_AUTOCOM
			CheckDLLLj()					// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2( nHnd, 8, cBuffer )
			Endif	
		Else
			/* Pesquisa se o modelo do equipamento existe na AUTOCOM                     
			 Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM.*/
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
				If CheckPaper( .T. )
					nRet := oAutocom:IFRegItem( cCodigo, cDescricao, cQtde, cVlrUnit, cVlrDesconto, cAliquota, cTotIt, cUnidMed )
				Endif	
			Else
				If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
					CheckDLLLj()				// Verifica se a SIGALOJA.DLL esta aberta
					If CheckPaper( .T. )
						nRet := ExeDLLRun2( nHnd, 8, cBuffer )
					Endif	
				EndIf
			EndIf
		EndIf
	EndIf

	If nRet == 0 .And. LjxItCCPaf()
		LJGrvCCGT( "SIGALOJA.VLD" )
	EndIf
EndIf

Return nRet 

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFLeAliq  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz a captura das aliquotas de ICMS do ECF                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorna as aliquotas do ECF                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/	
Function IFLeAliq( nImpHnd, cBuffer )
Local nRet := -1      // Retorno da funcao da dll
Local nCount 	:= 0		//Variavel de controle contador
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

If lEmitNFCe  //Desvio ao utilizar NFC-e
	Return 0
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises que nao utilizaM ECF : ³
//³PTG,ANG,CHI(Release 11.5)	 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VldEcfPtg(@nRet)
	Return nRet
EndIf

If oImpFisc <> Nil
	oRet := oImpFisc:Aliquotas()
	
	If oRet:lRetorno
		nRet := 0
		
		For nCount := 1 To oRet:oRetorno:Count()
			If !oRet:oRetorno:Elements(nCount):lIss
				cBuffer += AllTrim(StrTran(TransForm(oRet:oRetorno:Elements(nCount):nAliquota, "@E 99.99"), "," , ".")) + "|"
			EndIf
		Next
	EndIf
	
	Return nRet
EndIf

cBuffer := Str( nImpHnd ) + "," + cBuffer			// Envia um buffer e já prepara o recebimento

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet( nHnd, 9, @cBuffer )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFLeAliq()
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet( nHnd, 9, @cBuffer )
		EndIf
	EndIf
EndIf
Return nRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFLeAliqISºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz a captura das aliquotas de ISS do ECF                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorna as aliquotas do ECF                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Leitura das Aliquotas de ISS
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function IFLeAliIss( nImpHnd, cBuffer )
Local nRet := -1		// Retorno da funcao da dll
Local nCount 	:= 0		//Variavel de controle contador

If oImpFisc <> Nil
	oRet := oImpFisc:Aliquotas()
	
	If oRet:lRetorno
		nRet := 0
		
		For nCount := 1 To oRet:oRetorno:Count()
			If oRet:oRetorno:Elements(nCount):lIss
				cBuffer += AllTrim(StrTran(TransForm(oRet:oRetorno:Elements(nCount):nAliquota, "@E 99.99"), "," , ".")) + "|"
			EndIf
		Next
	EndIf
	
	Return nRet
EndIf

cBuffer := Str( nImpHnd ) + "," + cBuffer			// Envia um buffer e já prepara o recebimento

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet( nHnd, 10, @cBuffer )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFLeAliIss()
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet( nHnd, 10, @cBuffer )
		EndIf
	EndIf
EndIf

Return( nRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFLeConPagºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz a captura das formas de pagamento do ECF                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorna as formas de pagto. do ECF                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/	
Function IFLeConPag( nImpHnd, cBuffer )
Local nRet := -1		// Retorno da funcao da dll

cBuffer := Str( nImpHnd ) + "," + cBuffer					// Envia um buffer e já prepara o recebimento

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet( nHnd, 11, @cBuffer )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFLeConPag()
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet( nHnd, 11, @cBuffer )
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFGrvCondPºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz a gravacao das formas de pagamento do ECF               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Armazena a condicao que sera gravada no ECF        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IFGrvCondP( nImpHnd, cCondicao )
Local nRet := -1		// Retorno da funcao da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2( nHnd, 12, Str( nImpHnd ) + "," + cCondicao )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom( EQUIP_IMPFISCAL )  == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFGrvCondP( cCondicao )
	Else
		If IsAutocom( EQUIP_IMPFISCAL )  == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2( nHnd, 12, Str( nImpHnd ) + "," + cCondicao )
		EndIf
	EndIf
EndIf
Return nRet
             
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFCancItemºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Realiza o cancelamento do item registrado                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Numero do item                                     º±±
±±º          ³ EXPc2 - Codigo do item                                     º±±
±±º          ³ EXPc3 - Descricao do item                                  º±±
±±º          ³ EXPc4 - Quantidade do item                                 º±±
±±º          ³ EXPc5 - Valor do Unitario do item                          º±±
±±º          ³ EXPc6 - Valor do desconto do item                          º±±
±±º          ³ EXPc7 - Aliquota do item                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFCancItem( nImpHnd		,cNumItem		, cCodigo		, cDescricao,;
					 cQtde			,cVlrunit		, cVlrdesconto	, cAliquota ,;
					 cSupervisor 	,lImpIncl )
					 
Local nRet := -1		// Retorno da funcao da dll 
Local lContinua := .T.
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e
Local lLjNfPafEc:= .F.

DEFAULT cSupervisor := NIL
DEFAULT lImpIncl    := .T.

If lEmitNFCe  //Desvio ao utilizar NFC-e
	nRet := 0
	lContinua := .F.
EndIf

//³Release 11.5 - Localizacoes - F1CHI	 		³
//³Todas as validacoes de ECF serao ignoradas  	³
//³pois os seguintes paises nao utilizam	  	³    
//³ECF a partir do Release 11.5 :				³
//³- Chile	 					 				³
//³- Colombia	 								³
If lContinua .And. cPaisLoc$"CHI|COL"
	If VldEcfPtg(@nRet)   
		lContinua := .F.
	EndIf
EndIf  

If lContinua .And. oImpFisc <> Nil
	If CheckPaper(.T.)	
		oRet := oImpFisc:CancItem(cNumItem		, cCodigo		, cDescricao		,  Substr(cAliquota, 1 ,1)	, Val(Substr(cAliquota, 2 ,5))	, ;
								  Val(cQtde)	, Val(cVlrUnit)	, Val(cVlrDesconto)	, Nil)
		If oRet:lRetorno
			nRet := 0
		EndIf
    EndIf
	lContinua := .F.
EndIf

If lContinua
	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		If CheckPaper( .T. )
			nRet := ExeDLLRun2( nHnd, 13, Str( nImpHnd ) + "," + cNumItem + "," + cCodigo + "," + cDescricao + "," + cQtde + "," + cVlrunit + "," + cVlrdesconto + "," + cAliquota )
		Endif	
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
			If CheckPaper( .T. )
				nRet := oAutocom:IFCancItem( cNumItem, cCodigo, cDescricao, cQtde, cVlrunit, cVlrdesconto, cAliquota, cSupervisor, lImpIncl)
			Endif	
		Else
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				If CheckPaper( .T. )
					nRet := ExeDLLRun2( nHnd, 13, Str( nImpHnd ) + "," + cNumItem + "," + cCodigo + "," + cDescricao + "," + cQtde + "," + cVlrunit + "," + cVlrdesconto + "," + cAliquota )
				EndIf	
			EndIf
		EndIf
	EndIf
EndIf

If nRet == 0
	lLjNfPafEc := LjNfPafEcf(SM0->M0_CGC)
	If lLjNfPafEc
		LjLogItCC(.T.)
	EndIf

	If lLjNfPafEc .Or. LJAnalisaLeg(20)[1] .OR. SuperGetMV( "MV_LJGRVVB", ,.F. )
		LJGrvGT( "SIGALOJA.VLD" )
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFCancCup ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz o cancelamento do cupom fiscal                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Codigo do supervisor                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFCancCup( nImpHnd, cSupervisor , cCpCCDCanc)
Local nRet			:= -1			// Retorno da funcao da dll
Local cRet			:= ""			// Retorno do IfStatus
Local lCupAberto	:= .F.		// Verifica se o cupom esta aberto
Local cCupomArg		:= ""
Local cSerie		:= ""
Local lContinua		:= .T.
Local lLjNfPafECf	:= LjNfPafEcf(SM0->M0_CGC)
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce		:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

DEFAULT cSupervisor := ""	// Armazena Supervisor
DEFAULT cCpCCDCanc	:= ""
/*
Paises que nao utilizam ECF : 
- PTG						 
- ANG						 
- CHI (Release 11.5 )		 
- COL (Release 11.5 )
*/		 
If VldEcfPtg(@nRet)   
	lContinua := .F.
EndIf
          
If lContinua .And. lEmitNFCe  //Desvio ao utilizar NFC-e
	LjLogCanc( cSupervisor, Nil )
	nRet := 0
	lContinua := .F.
EndIf

If lContinua
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o Cupom esta aberto³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nRet := IFStatus( nHdlECF, '5', @cRet )				
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se nao estiver aberto (<> 7), e estiver utilizando uma impressora³
	//³nao fiscal, implementa o COO                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nRet <> 7
		lCupAberto := .F.
	Else
		lCupAberto := .T.
		If cPaisLoc == "ARG"
			cSerie := LjxDSerArg()
			nRet := IFPegCupom( nHdlECF, @cCupomArg, "D|" + cSerie )
		EndIf	
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Restaura o valor da variavel nRet, de acordo com a declaracao³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nRet := -1
	
	If oImpFisc <> Nil
	
		If CheckPaper(.T.)	
			oRet := oImpFisc:CancelaCF()
			
			If oRet:lRetorno
				nRet := 0
			EndIf
		EndIf
		
	Else
		If	ChkAutocom() == DLL_SIGALOJA .Or.;
			IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA		
			CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2(nHnd, 14, Str( nImpHnd ) + "," + cSupervisor )
			Endif	
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
			//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM .And. CheckPaper( .T. )
				nRet := oAutocom:IFCancCup(cSupervisor)
			EndIf
		EndIf
	EndIf
	
	If nRet == 0
		/*
			Em venda concomitante, para trazer os itens numa queda de energia
			no Registro do PAF, faço copia da SL2 e aqui mando deletar pois a venda
			foi cancelada com sucesso
		*/
		If lLjNfPafECf .And. LjxItCCPaf()
			LjLDelItcc()
		EndIf
		
		LjLogCanc( cSupervisor, Nil, lCupAberto, cCupomArg, {} ,cCpCCDCanc, .T.)
		LJGrvGT( "SIGALOJA.VLD" )
	EndIf
	                                   
	LjLogDevol()
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFFechaCupºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz o fechamento do cupom fiscal                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Mensagem do fechamento do cupom                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±± 
±±ºAnalista  ³ Data   ³  BOPS ³  Motivo da Alteracao                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºMauro S.  ³08/08/07³ 130509³Feita alteracao para montar o buffer com   º±±
±±º          ³        ³       ³2000 espacos apenas para Porto Rico e USA. º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFFechaCup( nImpHnd, cMens , lImpCpfNpj , nVlrTotal )
Local nRet		:= -1											// Retorno da funcao da dll
Local cBuffer	:= ""											// Armazena o comando de fechamento
Local cRetorno	:= " "											// Verifia se e' ECF ou Emulator
Local cArquivo	:= LJGetStation( "JOURNAL" )					// Armazena o conteudo do campo LG_JOURNAL
Local nHandle	:= 0											// Handle do cArquivo
Local cArq		:= "SIGALOJA.VLD"								// DEFAULT para gravacao da venda bruta criptografada
Local cSalvBuff	:= ""
Local cVlrTotal	:= ""											// Valor total da venda em caracter
Local cMsgFimCup	:= cMens                                        // Backup da mensagem de finalizaÃ§Ã£o do cupom
Local lLjNfPafEcf	:= LjNfPafEcf(SM0->M0_CGC)                     // Verifica se ambiente estÃ¡ no PAF
Local cNumCupom := ""

DEFAULT lImpCpfNpj	:= .F.										// Indica se for impresso o CPF/CNPJ no CF
DEFAULT nVlrTotal   := 0                                        // Valor total da venda	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises que nao utilizam ECF : ³
//³- PTG						 ³
//³- ANG						 ³
//³- CHI (Release 11.5 )		 ³
//³- COL (Release 11.5 )		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VldEcfPtg(@nRet)
	Return nRet
EndIf

cVlrTotal	:= cValToChar(nVlrTotal)

//Capturo o Numero do Cupom para efetuar a deleção dos logs gerados
If lLjNfPafEcf .And. LjxItCCPaf()
	IFPegCupom(nHdlECF,@cNumCupom)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Prepara mensagem de promocao do cupom.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (cPaisLoc $ "EUA|POR" )
	cMens += Chr(10) + STR0091	//"POWERED BY TOTVS"
	cBuffer := Str( nImpHnd ) + "," + cMens + "," + Space( 2000 )	// Armazena o comando de fechamento
Else
	If lLjNfPafEcf
		cMens := STR0089 + LjxMD5() // Insere para impressao o MD5 do PAF-ECF na primeira posicao  //"MD-5:"	
		/*
		HOMOLOGACAO PAF-ECF 2013
		a Ordem das Mensagens Impressas deve ser:
		 1 - MD5 ; 2 - Msg do TPL PCL ou DAV/PRE-VENDA XXXXX ; 3 - Msgs dos Estados (Minas Legal, Cupom Mania etc.)
		 4 - mensagens adicionais
		*/
		cMens += Chr(10) + AllTrim(cMsgFimCup) + STBFMModPaf() + " " + STBVerPAFECF("VERSAOAPLIC")
	EndIf

	cMens += Chr(10) + STR0091	//"POWERED BY TOTVS"
	cBuffer := Str( nImpHnd ) + "|" + cMens 						// Armazena o comando de fechamento		
EndIf

If oImpFisc <> Nil

	If CheckPaper(.T.)		
		oMsg := PrepMsgPro(cMens)
			
		oRet := oImpFisc:FecharCF(oMsg)
		If oRet:lRetorno
			nRet := 0
		EndIf
	EndIf
	
Else
	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		If CheckPaper( .T. )
			nRet := ExecDLLRet( nHnd, 15, @cBuffer )
		Endif	
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
			If CheckPaper( .T. )
				nRet := oAutocom:IFFechaCup( cMens , cVlrTotal )          
				cBuffer := oAutocom:cBuffer
			Endif	
		Else
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				If CheckPaper( .T. )
					cSalvBuff := cBuffer
					nRet := ExecDLLRet( nHnd, 15, @cBuffer )
					If nRet <> 0
						cBuffer := cSalvBuff
					Endif
					LJVerHomol(nHnd, 15, cBuffer, 1, Nil, @nRet)
				EndIf
			EndIf
		EndIf
	EndIf
	
	Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   // Trava teclado
	
	//Verifica se é um emulador de ECF para pegar o Journal
	//Journal eh uma copia do cupom
	If IfStatus( nHdlECF, '11', @cRetorno ) == 0	// eh um Emulador
		If ExistBlock( "LjJournal" )
			ExecBlock( "LjJournal", .F., .F., { cBuffer } )
		Else
			If !Empty( cArquivo )
				If !File( cArquivo )
					nHandle := FCreate( cArquivo )
				Else
					nHandle := FOpen( cArquivo, 1 )
					FSeek( nHandle, 0, 2 )
				Endif
				FWrite( nHandle, cBuffer, Len( cBuffer ) )
				FClose( nHandle )
			Endif
		Endif
	Endif
EndIf

If nRet == 0
	If lLjNfPafEcf .Or. LJAnalisaLeg(20)[1] .OR. SuperGetMV( "MV_LJGRVVB", ,.F. )	
		LJGrvGT( cArq )
		
		If lLjNfPafEcf
			/*
				Em venda concomitante, para trazer os itens numa queda de energia
				no Registro do PAF, faço copia da SL2 e aqui mando deletar pois a venda
				foi finalizada com sucesso
			*/
			If !Empty( AllTrim(cNumCupom) ) .And. ExistFunc("LjLDelItcc")
				LjLDelItcc(cNumCupom)
			EndIf
	
			LjxGrvMdz("PV", 0, "REGPAF", "", "") //Registra o primeiro movimento, caso exista não grava duas vezes		
		EndIf
	Endif	
EndIf

Iif(cTipTef == TEF_DISCADO .AND. lUsaTef .and. !LjxImpFisc(), ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFIdClienteºAutor  ³Microsiga           º Data ³            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz a impressão dos dados do cliente                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ lEXPc1 - Valida se foi impresso o cpf/cnpj				  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±± 
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFIdCliente( nImpHnd , lImpCpfNpj , aDadosCli)
Local nRet			:= 0
Local cBuffer		:= ""
Local oRet			:= NIL

DEFAULT lImpCpfNpj	:= .F.
Default aDadosCli	:= {} 

If lImpCpfNpj
	If Len(aDadosCli) > 0
		cCnpjCupom	:= aDadosCli[1]
		cNomCupom	:= aDadosCli[2]
		cEndCupom	:= aDadosCli[3]
	EndIf
	
	If oImpFisc <> Nil
		If CheckPaper(.T.)
			oRet := oImpFisc:IdCliente(cCNPJCupom, cNomCupom, cEndCupom)
			
			If oRet:lRetorno
				nRet	:= 0
				cBuffer	:= oRet:oRetorno
			EndIf
		EndIf
	Else
		If  ChkAutocom() == DLL_SIGALOJA	.Or.;
			IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
			
			CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExecDLLRet( nHnd, 127, Str(nImpHnd) + "," + cCnpjCupom + "," + cNomCupom + "," + cEndCupom )
			Endif	
		Else
			/* Pesquisa se o modelo do equipamento existe na AUTOCOM                         
			   Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM.*/
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
				//Comando não existe nesta dll
				nRet := 0
			EndIf
		EndIf
	EndIf
EndIf

//Zera as variaveis caso o modelo de ECF tenha a opção de 
//identificar o cliente na finalização do Cupom
cNomCupom	:= ""
cEndCupom	:= ""
cCnpjCupom	:= ""

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFPagto   ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Registra o fechamento do cupom                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Informa a forma de pagamento                       º±±
±±º          ³ EXPc2 - Flag para vinculacao do cupom                      º±±
±±º          ³ EXPc3 - Valor total do pagamento                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±± 
±±ºAnalista  ³ Data   ³  BOPS ³  Motivo da Alteracao                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºErik B.   ³26/07/07³ 129754³alteração do DEFAULT que estava como       º±±
±±º          ³        ³       ³DEFAULT nDecLoc := nDecimais para DEFAULT  º±±
±±º          ³        ³       ³nDecLoc := 2                               º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFPagto( nImpHnd	, cPagto		, cVinculado	, nVlrTotal,;
				   nDecLoc	, cPercepcion	, aImpsSL1 )

Local nRet		:= -1													// Retorno da funcao da dll
Local cImpsLoc	:= ""
Local nVlrMerc	:= 0													// Valor da mercadoria
Local aAreaSFB	:= {}													// Array contendo informações sobre o SFB
Local aImpsTes	:= {}													// Array contendo os imposta da TES
Local nX		:= 0													// controle de loop
Local nY		:= 0													// controle de loop
Local nI		:= 0													// controle de loop
Local nPosSL1	:= 0													// Buscando posição no SL1
Local nPosTes	:= 0													// Buscando posição na TES
Local nCount	:= 0
Local lContinua := .T.

DEFAULT cVinculado	:= "0"
DEFAULT nVlrTotal	:= 0
DEFAULT nDecLoc		:= 2                          
DEFAULT cPercepcion	:= ""
DEFAULT aImpsSL1	:= {}

//----------------------------------------------------------------------------
//|Cria string com os dados necessarios para a impressao do cupom fiscal para|
//|paises diferentes de Brasil...                                            |
//----------------------------------------------------------------------------
If cPaisLoc <> "BRA"
	If ( nModulo == 12 .OR. nModulo == 72 ) .AND. ( AllTrim( FunName() ) <> "LOJA701" ) .AND. ( AllTrim( FunName() ) <> "LOJA720" ) // SigaLoja - Venda Balcao
		LjGrvLog("LojxEcf", " Rotina [" + ProcName(5) + "] - FunName() = ["+ Alltrim(FunName()) +"]")
		LjGrvLog("LojxEcf", " Tipo de variável em aImps = ["+ Type("aImps") +"]")
		For nX := 1 To Len( aImps )
			For nY := 1 To Len( aImps[ nX ][ 6 ] ) 
			    nPosSL1  := Ascan( aImpsSL1,{ |x| x[ 1 ] == aImps[ nX ][ 6 ][ nY ][ 1 ] } )  
			    nPosTes  := Ascan( aHeader,{ |X| Alltrim( Substr( X[ 2 ], 3, 8 ) ) == "_TES" } )
			    aImpsTes := TesImpInf( aCols[ nX ][ nPosTes ] )
				If nPosSL1 == 0
       				AAdd( aImpsSL1,{ aImps[ nX ][ 6 ][ nY ][ 1 ],"L1_" + Substr( aImps[ nX ][ 6 ][ nY ][ 8 ], 4, 7 ), aImps[ nX ][ 6 ][ nY ][ 4 ], "L1_" + Substr( aImps[ nX ][ 6 ][ nY ][ 9 ], 4, 7 ), aImps[ nX ][ 6 ][ nY ][ 3 ], aImpsTes[ nX ][ 3 ], aImpsTes[ nX ][ 9 ] } )
       			Else
       				aImpsSL1[ nPosSL1 ][ 3 ] += aImps[ nX ][ 6 ][ nY ][ 4 ]
       				aImpsSL1[ nPosSL1 ][ 5 ] += aImps[ nX ][ 6 ][ nY ][ 3 ]
       			Endif		
			Next nY
		Next nX				
	Endif
    nVlrMerc := nVlrTotal
	//Calcula o valor da mercadoria...
	aEval( aImpsSL1,{ |x,y| nVlrMerc -= IIf( aImpsSL1[ y ][ 6 ] =="1", aImpsSL1[ y ][ 3 ], 0 ) } )
	//Valor da Mercadoria...
	cImpsLoc := cImpsLoc + AllTrim( Str( nVlrMerc, TAMSX3( "L1_VALMERC" )[ 1 ], nDecLoc ) ) + "|"
	//Valor Bruto...
	cImpsLoc := cImpsLoc + AllTrim( Str( nVlrTotal, TAMSX3( "L1_VLRTOT" )[ 1 ], nDecLoc ) ) + "|"	
    //Dados dos Impostos da venda...
    aAreaSFB := SFB->(GetArea())
	SFB->(DbSetOrder(1))
	For nI := 1 To Len(aImpsSL1)
		If aImpsSL1[nI][3] > 0     
			If SL1->( ColumnPos( aImpsSL1[nI][2] ) ) > 0		
				SFB->(DBSeek(xFilial("SFB")+aImpsSL1[nI][1]))
				cImpsLoc := cImpsLoc+aImpsSL1[nI][6]+;
				            SubStr(SFB->FB_DESCR,1,10)+;
				            SubStr(StrZero(aImpsSL1[nI][7],5,2),1,2)+;
			    	        SubStr(StrZero(aImpsSL1[nI][7],5,2),4,2)+;
			        	    AllTrim(Str(aImpsSL1[nI][3],TAMSX3(aImpsSL1[nI][2])[1],TAMSX3(aImpsSL1[nI][2])[2]))+"|"			        	    
			Else
				Conout( STR0078 + aImpsSL1[nI][2] + STR0079 ) // "Campo " + aImpsSL1[nI][2] + " não existe na base."
				LjGrvLog( NIL, STR0078 + aImpsSL1[nI][2] + STR0079)
			EndIf			
		EndIf
	Next nI
	RestArea(aAreaSFB)
	
	//--------------------------------
	//|Paises que nao utilizam ECF : |
	//|- PTG						 |
	//|- ANG						 |
	//|- CHI (Release 11.5 )		 |
	//| COL (Release 11.5 )		     |
	//--------------------------------
	If VldEcfPtg(@nRet)
		lContinua := .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Coloca a moeda corrente na ultima posicao  		 ³
//³ Atendendo situacao onde ha outra forma de  		 ³
//³ pagamento com dinheiro, pois sera gerado o       ³
//³ troco no ECF na ultima forma de pagamento envida ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContinua .And. cPaisLoc $ "BRA" .And. nModulo <> 23
	cPagto := AjustaPG(cPagto) 
EndIf

If lContinua

	If oImpFisc <> Nil
		If CheckPaper(.T.)	
			aFormas := CarregForm(cPagto)
			
			For nCount := 1 To Len(aFormas)
				oRet := oImpFisc:Pagamento(aFormas[nCount][1], aFormas[nCount][2])
				
				If oRet:lRetorno
					nRet := 0
				Else
					nRet := -1
					Exit
				EndIf
			Next
		EndIf
	Else
		If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
			CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2(nHnd, 37, Str(nImpHnd)+ "," + cImpsLoc)
				nRet := ExeDLLRun2(nHnd, 16, Str(nImpHnd)+","+cPagto+","+cVinculado+","+cPercepcion)
			Endif	
		Else
			//----------------------------------------------------------------------------------
			//| Pesquisa se o modelo do equipamento existe na AUTOCOM                          |
			//| Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. |
			//----------------------------------------------------------------------------------
			If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
				If CheckPaper( .T. )
					nRet := oAutocom:IFPagto(cPagto, cVinculado, nVlrTotal,aImpsSL1)
				Endif	
			Else
				If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
					CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
					If CheckPaper( .T. )
						nRet := ExeDLLRun2(nHnd, 37, Str(nImpHnd)+ "," + cImpsLoc)
						LJVerHomol(Nil, Nil, Nil, 5, Nil, Nil)
						nRet := ExeDLLRun2(nHnd, 16, Str(nImpHnd)+","+cPagto+","+cVinculado+","+cPercepcion)
						LJVerHomol(nHnd, 16, Str(nImpHnd)+","+cPagto+","+cVinculado+","+cPercepcion, 2, Nil, @nRet)	// Se for homologação e perder comunicação com a impressora
					Endif	
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFDescTot ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Registra o desconto total do cupom fiscal                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Informa os parametros do desconto                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFDescTot( nImpHnd, cDesc , cVlrTotal,	cTipoCli)
Local nRet := -1		// Retorno da funcao da dll
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

DEFAULT cVlrTotal := Nil
DEFAULT cTipoCli  := "2"			// Tipo do cliente
                  
//Não realiza operações com ECF quando NFC-e
If lEmitNfce
	Return 0
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises que nao utilizam ECF : ³
//³- PTG						 ³
//³- ANG						 ³
//³- CHI (Release 11.5 )		 ³
//³- COL (Release 11.5 )		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VldEcfPtg(@nRet)
	Return nRet
EndIf

If oImpFisc <> Nil
	If !lDescTot
		If CheckPaper(.T.)
			oRet := oImpFisc:DescTotal(Val(cDesc))
			
			If oRet:lRetorno
				nRet := 0
				lDescTot := .T.
			EndIf
		EndIf
	EndIf    

	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	If CheckPaper( .T. )
		nRet := ExeDLLRun2(nHnd, 17, Str(nImpHnd)+","+ cDesc + "," + cTipoCli) 
	Endif
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		If CheckPaper( .T. )
			nRet := oAutocom:IFDescTot(cDesc , cVlrTotal)
		Endif	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2(nHnd, 17, Str(nImpHnd)+","+ cDesc + "," + cTipoCli)   
			Endif	
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFAcresTotºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Registra o acrescimo no total do cupom fiscal               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Informa os parametros do acrescimo                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IFAcresTot( nImpHnd, cAcres )
Local nRet := -1		// Retorno da funcao da dll
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

//Não realiza operações com ECF quando NFC-e
If lEmitNfce
	Return 0
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises que nao utilizam ECF : ³
//³- PTG						 ³
//³- ANG						 ³
//³- CHI (Release 11.5 )		 ³
//³- COL (Release 11.5 )		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VldEcfPtg(@nRet)
	Return nRet
EndIf

If oImpFisc <> Nil
	If CheckPaper(.T.)	
		oRet := oImpFisc:AcresTotal(Val(cAcres))
		
		If oRet:lRetorno
			nRet := 0
		EndIf
	EndIf
	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	If CheckPaper( .T. )
		nRet := ExeDLLRun2(nHnd, 18, Str(nImpHnd)+","+cAcres)
	Endif	
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		If CheckPaper( .T. )
			nRet := oAutocom:IFAcresTot(cAcres)
		Endif	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2(nHnd, 18, Str(nImpHnd)+","+cAcres)
			Endif	
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFMemFisc ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Imprime leitura de memoria fiscal                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Data inicial                                       º±±
±±º          ³ EXPc2 - Data Final                                         º±±
±±º          ³ EXPc3 - Reducao Z Inicial                                  º±±
±±º          ³ EXPc4 - Reducao Z Final                                    º±±
±±º          ³ EXPc5 - Tipo da leitura                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFMemFisc( nImpHnd, cDataIni, cDataFim,cReducIni,cReducFim,cCheck )
Local nRet 		:= -1		// Retorno da funcao da dll
Local cPath 	:= ""      	// Caminho onde a TotvsAPI ira gravar o arquivo de Memoria Fiscal quando PAF-ECF
Local cAux  	:= ""		// Variavel auxiliar que contera o path para a gravacao do arquivo
Local cTipoMF   := ""		// Define o tipo da Memoria Fiscal geradao C = Completa / S = Simplificada

cReducIni := AllTrim(cReducIni)
cReducFim := AllTrim(cReducFim)

If oImpFisc <> Nil
	If CheckPaper(.T.)	
		
		//Tipo da Memoria Fiscal
		cTipoMF := SubStr(cCheck, 2, 1)
		
		If !Empty(cReducIni) .AND. !Empty(cReducFim)
			oRet := oImpFisc:MFReducao(AllTrim(cReducIni), AllTrim(cReducFim), IIF("I" $ cCheck, "I", "A"), cTipoMF)
		Else
			oRet := oImpFisc:MFData(CTOD(cDataIni), CTOD(cDataFim), IIF("I" $ cCheck, "I", "A"), cTipoMF)
		EndIf
			
		If oRet:lRetorno              

			//Arquivo
			If ("A" $ cCheck)
				//Pega o Path do arquivo gerado	
				oRet := oImpFisc:PegPathMF()
				
				If oRet:lRetorno			
					cAux := AllTrim(oRet:oRetorno)
				    If cAux == "C:\" .OR. Empty(cAux)
						cAux := "C:\LeituraMF.txt"
				    EndIf
		
					If LjNfPafEcf(SM0->M0_CGC)
						If LjxGerPath( @cPath )
							If __CopyFile(cAux, cPath + "LMF" + cTipoMF + ".TXT")
								nRet := 0
							EndIf	
						EndIf	
					Else
						MsgInfo(STR0076 + cAux, "Arquivo MF") //"Arquivo Gerado com Sucesso, pasta: "					
						nRet := 0 
					EndIf
				EndIf	
				
			Else          
				//Impressao
				nRet := 0 
			EndIf
			
		EndIf
	EndIf
	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	If CheckPaper( .T. )
		nRet := ExeDLLRun2(nHnd, 19, Str(nImpHnd)+","+cDataIni+","+cDataFim+","+cReducIni+","+cReducFim+","+cCheck)
	Endif
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		If CheckPaper( .T. )
			nRet := oAutocom:IFMemFisc(cDataIni, cDataFim, cReducIni, cReducFim, cCheck)
		Endif	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2(nHnd, 19, Str(nImpHnd)+","+cDataIni+","+cDataFim+","+cReducIni+","+cReducFim+","+cCheck)
			Endif	
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFAdicAliqºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Adiciona aliquotas na impressora                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Informa a descricao da aliquota                    º±± 
±±º          ³ EXPc2 - Informa o tipo da aliquota S ou T                  º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFAdicAliq( nImpHnd, cAliquota, cTipo )
Local nRet := -1		// Retorno da funcao da dll

If oImpFisc <> Nil
	
	oRet := oImpFisc:ConfigAliq(Val(cAliquota), IIF(cTipo == "2", "S", "N"))

	If oRet:lRetorno
		nRet := 0
	EndIf

	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 20, Str(nImpHnd)+","+cAliquota+","+cTipo)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFAdicAliq(cAliquota, cTipo)
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 20, Str(nImpHnd)+","+cAliquota+","+cTipo)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFAbrCNFisºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz a abertura do cupom nao fiscal                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Condicao de pagto. do nao fiscal                   º±± 
±±º          ³ EXPc2 - Valor do CNF                                       º±± 
±±º          ³ EXPc3 - Totalizador NF que sera gravado                    º±± 
±±º          ³ EXPc4 - Texto impresso no NF                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±          
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºThiago H. ³07/02/07³118810³Adicionado o paramtro nParcelas que contem  º±±
±±º          ³        ³      ³o numero de parcelas na qual a venda foi    º±±
±±º          ³        ³      ³finalizada.				 				  º±±
±±º          ³        ³      ³Numeracao impressa no CUPOM NAO FISCAL	  º±±
±±º          ³        ³      ³Somente para o AUTOCOM.prw           		  º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFAbrCNFis(	nImpHnd	, cCondicao	, cValor	, cTotalizador	,;
 						cTexto	, nParcelas )
 						
Local nRet 		:= -1						// Retorno da funcao da dll
Local cTipTef 	:= LjGetStation("TIPTEF")	// Tipo de tef utilizado 
Local lUsaTef 	:= LJProFile(2)				// Configuracao do caixa
Local cTotOrig								// Totalizador original
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

DEFAULT cTexto    := ""	// Texto a ser impresso
DEFAULT nParcelas := 1	// Numero de parcelas na qual a venda foi finalizada - impressa no CUPOM NAO FISCAL

//Não realiza operações com ECF quando NFC-e ou Venda Direta
If lEmitNfce .Or. nModulo == 5
	Return 0
EndIf

LjImplCOO(@nRet)		//Implementa Numeracao quando Emulador
               
cTexto := StrTran( cTexto, Chr(13), '') //Remove CHR(13)

If oImpFisc <> Nil
	If CheckPaper(.T.)	
		cTotOrig := cTotalizador
		
		cTotalizador := DscTotaliz(cTotalizador)
		
		oRet := oImpFisc:AbrirCNFV(Val(cValor), cCondicao, cTotalizador, cTotOrig)
	
		If oRet:lRetorno
			nRet := 0
		EndIf
	EndIf
	
	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	If CheckPaper( .T. )
		Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
		nRet := ExeDLLRun2(nHnd, 21, Str(nImpHnd)+","+cCondicao+","+cValor+","+cTotalizador+","+cTexto)
		Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
	Endif	
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		If CheckPaper( .T. )
			nRet := oAutocom:IFAbrCNFis(cCondicao, cValor, cTotalizador, cTexto, nParcelas)
		Endif	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
				nRet := ExeDLLRun2(nHnd, 21, Str(nImpHnd)+","+cCondicao+","+cValor+","+cTotalizador+","+cTexto)
				Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
			Endif	
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFTxtNFis ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz a impressao do cupom nao fiscal                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Texto a ser impresso                               º±± 
±±º          ³ EXPc2 - Numero de vias                                     º±± 
±±º          ³ EXPl1 - Faturamento ou Impressora Não-Fiscal               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFTxtNFis( nImpHnd, cTexto, nVias, lFaturamento,  lRelGer )
Local nRet			:= -1								// Retorno da funcao da dll
Local cTipTef		:= LjGetStation("TIPTEF")			// Tipo de tef utilizado 
Local lUsaTef		:= LJProFile(2)						// Configuracao do caixa
Local oRelatorio	:= Nil								// Relatorio que sera impresso
Local lAmbLinux		:= GetRemoteType() == REMOTE_LINUX	// Verifica Ambiente/Sistema Operacional esta sendo executado em Linux
Local lContinua		:= .T.
Local cRet			:= " "								// Texto de impressora
Local nCont			:= 0
Local nRetSta 		:= -1
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()							// Sinaliza se utiliza NFC-e
         
Default nVias 		:= 1						// Numero de vias do texto
Default lFaturamento:= (nModulo == 5)			// Faturamento será default
DEFAULT lRelGer 	:= .F.						// Relatorio gerencial

cTexto := StrTran( cTexto, Chr(13), '')			//Remove CHR(13)

//Não realiza operações com ECF quando NFC-e ou Venda Direta
If lEmitNfce .Or. lFaturamento
	cTexto		:= LjxLJ7101(cTexto)
	For nCont := 1 to nVias 
		nRet	:= INFTexto(cTexto)  //Envia comando para a Impressora nao fiscal
		If nRet == 0
			nRet	:= INFCutPpr()
		EndIf
		If nRet <> 0
			Exit
		EndIf
	Next nCont
	lContinua	:= .F.
EndIf

If lContinua .And. oImpFisc <> Nil
	If CheckPaper(.T.)	
		oRelatorio := PrepRel(cTexto, nVias)

		If lRelGer
			oRet := oImpFisc:ImpRelGer(oRelatorio, cTexto, .F.)
		Else
			oRet := oImpFisc:ImpTxtNF(oRelatorio, .F.)
		EndIf
		
		If oRet:lRetorno
			nRet := 0
		EndIf
	EndIf
	lContinua := .F.
EndIf

If lContinua
	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		If CheckPaper( .T. )
			Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
			nRet := ExeDLLRun2(nHnd, 23, Str(nImpHnd)+'|'+cTexto+'|'+Str(nVias)+'|')
			Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
		Endif	
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
			If CheckPaper( .T. )
				nRet := oAutocom:IFTxtNFis(cTexto, nVias )
			Endif	
		Else
			If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				If CheckPaper( .T. )
					Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
	
					If !LJVerHomol(nHnd, 23, cTexto, 3, nVias, @nRet)
						// Em ambiente Linux esta sendo tratado o retorno de nRet
						If lAmbLinux                                  
							// Se a impressora nao estiver on-line, nRet vai ser diferente de zero
							nRet := IFStatus( nHdlECF, '2', @nRet )
						Endif
						If (nRet == 0 .And. lAmbLinux) .Or. !lAmbLinux
							nRet := ExeDLLRun2(nHnd, 23, Str(nImpHnd)+'|'+cTexto+'|'+Str(nVias)+'|')
						Endif	
					EndIf
	
				 	Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
				Endif	
			EndIf
		EndIf
	EndIf

	Do While nCont < 5 
		nRetSta := IFStatus(nHdlECF, "9", @cRet)			// Verifica o Status do ECF
		If nRetSta == 0
			Exit
		Endif
		nCont++
		Sleep(1000)
	Enddo
	
	lContinua := .F.
EndIf

Return nRet
              
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFFchCNFisºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz o fechamento do cupom nao fiscal                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFFchCNFis( nImpHnd )
Local nRet 		:= -1						// Retorno da funcao da dll
Local cTipTef 	:= LjGetStation("TIPTEF")	// Tipo de tef utilizado 
Local lUsaTef 	:= LJProFile(2)				// Configuracao do caixa
Local cRet		:= " "						// Texto de impressora
Local nCont		:= 0
Local nRetSta 	:= -1
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e
 
//Não realiza operações com ECF quando NFC-e ou Venda Direta
If lEmitNfce .Or. nModulo == 5
	Return 0
EndIf

If oImpFisc <> Nil
	If CheckPaper(.T.)	
		oRet := oImpFisc:FecharCNFV()
	
		If oRet:lRetorno
			nRet := 0
		EndIf
	EndIf
	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	If CheckPaper( .T. )
		Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
		nRet := ExeDLLRun2(nHnd, 24, Str( nImpHnd ))
		Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
	Endif	
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		If CheckPaper( .T. )
			nRet := oAutocom:IFFchCNFis()
		Endif	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
					LJVerHomol(Nil, Nil, Nil, 5, Nil, Nil)
					If lHomTEF
						Sleep(3000)
					EndIf
					nRet := ExeDLLRun2(nHnd, 24, Str( nImpHnd ))
				Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
			Endif	
		EndIf
	EndIf
EndIf

Do While nCont < 5 
	nRetSta := IFStatus(nHdlECF, "9", @cRet)			// Verifica o Status do ECF
	If nRetSta == 0
		Exit
	Endif
	nCont++
	Sleep(1000)
Enddo	

Return nRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFStatus  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz leitura do Status da impressora                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Tipo do status pedido                              º±± 
±±º          ³ EXPc2 - Retorno do Status do ECF                           º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IFStatus( nImpHnd, cTipo, cBuffer )
Local nRet := -1		// Retorno da funcao da dll
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e
                
//Não realiza operações com ECF quando NFC-e
If lEmitNfce
	Return 0
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises que nao utilizam ECF : ³
//³- PTG						 ³
//³- ANG						 ³
//³- CHI (Release 11.5 )		 ³
//³- COL (Release 11.5 )		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VldEcfPtg(@nRet)
	nRet := TrtStaPtg(cTipo, @cBuffer) 
	Return nRet
EndIf

If oImpFisc <> Nil
	oRet := oImpFisc:InfoEcf(cTipo)
	
	If oRet == Nil
	    Return nRet
	ElseIf oRet:lRetorno
		nRet := 0
		cBuffer := TratStatus(oRet:oRetorno, cTipo, @nRet)
	EndIf
	
	Return nRet
EndIf

cBuffer := Str( nImpHnd )+","+cTipo+","+Space(500)
If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 25, @cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet 	:= oAutocom:IFStatus(cTipo)
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 25, @cBuffer)
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Trata os retornos.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nRet == 0
	nRet := TrataRet(cTipo, @cBuffer)
EndIf   

Return nRet
              
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFTotNFis ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Grava totalizadores nao fiscais                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Numero do Totalizador                              º±± 
±±º          ³ EXPc2 - Descricao do totalizador                           º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IFTotNFis( nImpHnd, cNum, cDescr )
Local nRet := -1		// Retorno da funcao da dll
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

//Não realiza operações com ECF quando NFC-e
If lEmitNfce
	Return 0
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 26, Str(nImpHnd)+","+cNum+","+cDescr)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFTotNFis(cNum, cDescr)
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 26, Str(nImpHnd)+","+cNum+","+cDescr)
		EndIf
	EndIf
EndIf
Return( nRet )
              
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFAutenticºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz a autenticacao de documentos                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Numero de vezes da autenticacao                    º±± 
±±º          ³ EXPc2 - Valor a ser autenticado                            º±± 
±±º          ³ EXPc3 - Texto da autenticacao                              º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IFAutentic( nImpHnd, cVezes, cValor, cTexto )
Local nRet := -1		// Retorno da funcao da dll

If oImpFisc <> Nil
	
	oRet := oImpFisc:Autenticar(cTexto)

	If oRet:lRetorno
		nRet := 0
	EndIf

	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 27, Str(nImpHnd)+","+cVezes+","+cValor+","+cTexto)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFAutentic(cVezes, cValor, cTexto )
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 27, Str(nImpHnd)+","+cVezes+","+cValor+","+cTexto)
		EndIf
	EndIf
EndIf
Return( nRet )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFGaveta  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz a abertura da gaveta via ECF                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFGaveta( nImpHnd )
Local nRet := -1		// Retorno da funcao da dll
Local lContinua := .T.
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

If oImpFisc <> Nil
	oRet := oImpFisc:AbrirGavet()
	
	If oRet:lRetorno
		nRet := 0
	EndIf
	
	lContinua := .F.
EndIf 

If lEmitNfce
	If lContinua
		If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
			CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 137, Str( nImpHnd ))
		Else
			// Pesquisa se o modelo do equipamento existe na AUTOCOM
			// Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM.
			If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
				nRet := 0
			Else
				If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
					CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
					nRet := ExeDLLRun2(nHnd,137, Str( nImpHnd ))
				EndIf
			EndIf
		EndIf
	EndIf

ElseIf lContinua

	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 28, Str( nImpHnd ))
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:IFGaveta()
		Else
			If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 28, Str( nImpHnd ))
			EndIf
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFCheque  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz a abertura da gaveta via ECF                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Numero do Banco                                    º±± 
±±º          ³ EXPc2 - Valor do Cheque                                    º±± 
±±º          ³ EXPc3 - Favorecido do Cheque                               º±± 
±±º          ³ EXPc4 - Cidade do Cheque                                   º±± 
±±º          ³ EXPc5 - Data do cheque                                     º±± 
±±º          ³ EXPc6 - Mensagem                                           º±± 
±±º          ³ EXPc7 - Impresso do verso do cheque                        º±± 
±±º          ³ EXPc8 - Extenso do cheque                                  º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Faz a impressao de cheques                                                ³
//³ MANTIDA APENAS POR COMPATIBILIDADE!!!                                     ³
//³ Toda a Impressao de Cheque Deve Ser Feita Pela CHImprime().               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function IFCheque( nImpHnd, cBanco, cValor, cFavorec, cCidade, cData, cMensagem, cVerso, cExtenso )
Local nRet := -1		// Retorno da funcao da dll

nRet := CHImprime( nHdlCH, cBanco, StrZero(Val(cValor),12,2), cFavorec, cCidade, DTOS(CToD(cData,"ddmmyy")), cMensagem, cVerso, cExtenso )

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFAbrECF  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz a abertura do ECF (utilizada somente no inicio do dia) º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFAbrECF( nImpHnd )
Local nRet		:= -1		// Retorno da funcao da dll
/* As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD()
 e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, 
 pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo*/
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e
Local lContinua := .T.

If lEmitNFCe  //Desvio ao utilizar NFC-e
	nRet := 0
	lContinua := .F.
EndIf

/*
Paises que nao utilizam ECF :
- PTG				
- ANG				
- CHI (Release 11.5 )
- COL (Release 11.5 )
*/
If lContinua .And. VldEcfPtg(@nRet)
	lContinua := .F.
EndIf

If lContinua .And. (oImpFisc <> Nil)
	oRet := oImpFisc:AbrirDia()
	
	If oRet:lRetorno
		nRet := 0
	EndIf
	
	lContinua := .F.
EndIf

If lContinua
	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()
											// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 30, Str( nImpHnd ))
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:IFAbrECF()
		Else
			If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 30, Str( nImpHnd ))
			EndIf
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFFchECF  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz o fechamento do Dia ( utilizada no fim do dia )        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFFchECF( nImpHnd )
Local nRet := -1		// Retorno da funcao da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 31, Str( nImpHnd ))
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFFchECF()
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 31, Str( nImpHnd ))
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Fun‡„o	 ³ IFSupr()	   ³ Autor ³                    ³ Data ³ XX.XX.XX ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Faz a inclusao de suprimento (entrada de troco)	 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ nTipo = 1 -> Le o suprimento da impressora				  ³±±
±±³          ³         2 -> Grava suprimento na impressora				  ³±±
±±³          ³         3 -> Efetua sangria								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Progr.   ³ Data     BOPS   Descricao								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Adrianne  ³16/09/05³BOPS  ³ Corrigido erro na passagem de parametros pa³±± 
±±³          ³        ³86386 ³ ra a camada AUTOCOM.PRW					  ³±± 
±±³Mauro S.  ³14/09/06³107241³ Corrigida a passagem de parametro qdo o    ³±± 
±±³          ³        ³      ³ parametro MV_AUTOCOM = 1                   ³±± 
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFSupr( nImpHnd, nTipo, cValor, cPagto , cTotal, nModo, cFormSup )
Local   nRet   		:= -1
Local   oFormas     := Nil		// Objeto do tipo LJCFormasECF
Local	lContinua	:= .T.
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

DEFAULT cPagto 		:= ""		// Forma de pagamento (dinheiro, cheque, cartao)
DEFAULT cTotal 		:= ""                                               
DEFAULT cFormSup	:= ""		// Impressao das formas de pagamento no CUPOM
DEFAULT nModo       := 0
            
If lEmitNfce .Or. nModulo == 5
	nRet := INFSup(nTipo,Val(cValor))
Else
	If ("DARUMA FS345" $ LjGetStation("IMPFISC")) .AND. Empty(GetPvProfString("DARUMA", "SUPRIMENTO", "", GetClientDir()+"sigaloja.ini"))
		MsgAlert(STR0071)			// "Operação não efetuada. Cadastre no arquivo SIGALOJA.INI a seção [DARUMA] e a
									// chave SUPRIMENTO=FORMA DE PAGAMENTO, onde FORMA DE PAGAMENTO é a forma utilizada
									// para realizar o suprimento. Para maiores detalhes verifique o boletim técnico
									// referente a FNC 00000005817/2008." 
		lContinua := .F.
	EndIf
	
	If lContinua
	
		If oImpFisc <> Nil
			If CheckPaper(.T.)
				//Carrega as formas 	
				oFormas := PrepSupSan(cFormSup, Val(cValor))
				If nTipo == 3
					oRet := oImpFisc:Sangria(oFormas)
				ElseIf nTipo == 2
					oRet := oImpFisc:Suprimento(oFormas)	
				Else
					Return 8
				EndIf
				
				If oRet:lRetorno
					nRet := 0
				EndIf
			EndIf
			
			lContinua := .F.
		EndIf
		
		If lContinua
			If ChkAutocom() == DLL_SIGALOJA .Or. IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
				If CheckPaper( .T. )
					nRet := ExeDLLRun2(	nHnd,; 
										32	,; 
										Str(nImpHnd)+","+;
										Str(nTipo)  +","+;
										cValor		+","+;
										cPagto		+","+;
										cTotal		+","+;
										Str(nModo)  +","+;
										cFormSup)
				EndIf						
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
				//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
					nRet := oAutocom:IFSupr(nTipo, cValor, cPagto, cTotal)
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFHrVerao ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Ajusto o ECF conforme horario de Verao                     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Informa se e' entrada ou saida do horario de verao º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFHrVerao( nImpHnd, cTipo )
Local nRet := -1		// Retorno da funcao da dll

If oImpFisc <> Nil
	If CheckPaper(.T.)	
		oRet := oImpFisc:ConfVerao(IIF(cTipo == "+", "E", "S"))
		
		If oRet:lRetorno
			nRet := 0
		EndIf
	EndIf	
	
	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	If CheckPaper( .T. )
		nRet := ExeDLLRun2(nHnd, 33, Str(nImpHnd)+","+cTipo)
	Endif	
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		If CheckPaper( .T. )
			nRet := oAutocom:IFHrVerao( cTipo )
		Endif	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2(nHnd, 33, Str(nImpHnd)+","+cTipo)
			Endif	
		EndIf
	EndIf
EndIf
Return  nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFRelGer  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz impressao do relatorio gerencial                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Texto a ser impresso no relatorio                  º±± 
±±º          ³ EXPc2 - Numero de vias do texto                            º±± 
±±º          ³ EXPc3 - Imagem QRCode                                      º±± 
±±º          ³ EXPl1 - Faturamento ou Impressora Não-Fiscal               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFRelGer( nImpHnd, cTexto ,nVias , cImgQrCode, lFaturamento)
Local nRet			:= -1						// Retorno da funcao da dll
Local cTipTef		:= LjGetStation("TIPTEF")  //tipo de tef utilizado 
Local lMenFisOnLog	:= IsInCallStack("LjMenFiLog") //Valida se foi chamado Menu Fiscal da Tela de Login
Local lUsaTef		:= lMenFisOnLog .OR. LJProFile(2)				//configuracao do caixa
Local lContinua		:= .T.
Local oRelatorio	:= Nil						//Relatorio que sera impresso
Local nX			:= 1
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe teve seu escopo alterado para variavel
//local, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essa variavel muda o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

Default nVias		:= 1				//Numero de Vias
Default cImgQrCode	:= ""
Default lFaturamento:= (nModulo == 5)	//Faturamento como Default

//Não realiza operações com ECF quando NFC-e
If lEmitNfce .Or. lFaturamento
	cTexto		:= LjxLJ7101(cTexto)
	For nX:= 1 to nVias
		nRet	:= INFTexto(cTexto)  //Envia comando para a Impressora nao fiscal
		If nRet == 0
			nRet	:= INFCutPpr()
		EndIf
		If nRet <> 0
			Exit
		EndIf
	Next nX
	lContinua	:= .F.
EndIf

// Caso cTexto igual a vazio, retorna verdadeiro
// Este tratamento evita erro nos casos em que o PBM esta retornando vazio 
If lContinua .And. Empty(Alltrim(cTexto))
	nRet := 0
	lContinua := .T.
Endif
		
/* Paises que nao utilizam ECF : 
- PTG						
- ANG						
- CHI (Release 11.5 )		
- COL (Release 11.5 )*/
If lContinua .And. VldEcfPtg(@nRet)
	lContinua := .F.
EndIf

If lContinua
	LjImplCOO(@nRet)		//Implementa Numeracao quando Emulador
	cTexto := StrTran( cTexto, Chr(13), '') //Remove CHR(13)
	
	If lHomTEF
		Sleep(6000)
	EndIf
	
	If oImpFisc <> Nil
		If CheckPaper(.T.)	
			oRelatorio := PrepRel(cTexto, nVias)
			
			oRet := oImpFisc:ImpRelGer(oRelatorio, Nil, .F.)
			
			If oRet:lRetorno
				nRet := 0
			EndIf
		EndIf
			
		lContinua := .F.
	EndIf

	If lContinua
		If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
			CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
				nRet := ExeDLLRun2(nHnd, 34, Str(nImpHnd)+'|'+cTexto+'|'+Str(nVias)+'|'+cImgQrCode+"|")
				Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
			Endif	
		Else
			// Pesquisa se o modelo do equipamento existe na AUTOCOM                          
			// Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM
			If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
				If CheckPaper( .T. )
					nRet := oAutocom:IFRelGer(cTexto,nVias)
				Endif	
			Else
				If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
					CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
					If CheckPaper( .T. )
						Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
		
						If !LJVerHomol(nHnd, 34, cTexto, 4, nVias, @nRet)
							nRet := ExeDLLRun2(nHnd, 34, Str(nImpHnd)+'|'+cTexto+'|'+Str(nVias)+'|'+cImgQrCode+'|')
						EndIf
		
						Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
					Endif	
				EndIf
			EndIf
		EndIf
		lContinua := .F.
	EndIf  
	
	//PAF-ECF: Armazena na tabela de apoio(MDZ), emissão de relatório gerencial
	LjxGrvMdz("RG")
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFCodBar  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz impressao de um relatorio gerencial com codigo de      º±±
±±º          ³ barras.                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Texto a ser impresso no relatorio                  º±± 
±±º          ³ EXPc2 - Numero de vias do texto                            º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFCodBar( nImpHnd, cCabecalho, cCodBarras, cRodape ,nVias)
Local nRet			:= -1						// Retorno da funcao da dll
Local cTipTef		:= LjGetStation("TIPTEF")  //tipo de tef utilizado 
Local lMenFisOnLog	:= IsInCallStack("LjMenFiLog") //Valida se foi chamado Menu Fiscal da Tela de Login
Local lUsaTef		:= lMenFisOnLog .OR. LJProFile(2)				//configuracao do caixa
Local oCabecalho	:= Nil						//Cabecalho que sera impresso
Local oRodape		:= Nil						//Rodape que sera impresso
Local lContinua		:= .T.

DEFAULT cCabecalho	:= ""						// Cabecalho do relatorio gerencial contendo o codigo de barras
DEFAULT cRodape		:= ""						// Rodape do relatorio gerencial contendo o codigo de barras
DEFAULT nVias		:= 1						// Numero de Vias

/* Paises que nao utilizam ECF : 
- PTG						
- ANG						
- CHI (Release 11.5 )		
- COL (Release 11.5 )*/
If VldEcfPtg(@nRet)
	lContinua := .F.
EndIf

If lContinua
	LjImplCOO(@nRet)		//Implementa Numeracao quando Emulador
	cCodBarras := StrTran( cCodBarras, Chr(13), '') //Remove CHR(13)
	
	If lHomTEF
		Sleep(6000)
	EndIf
	
	If oImpFisc <> Nil
		If CheckPaper(.T.)	
			oCabecalho := PrepRel(cCabecalho, 1)
			oRodape    := PrepRel(cRodape, 1)
			
			oRet := oImpFisc:ImpCodBar(oCabecalho,cCodBarras, oRodape, Nil, .F.)
			
			If oRet:lRetorno
				nRet := 0
			EndIf
		EndIf
			
		lContinua := .F.
	EndIf
EndIf
	
If lContinua
	If ChkAutocom() == DLL_SIGALOJA	.Or. IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
		CheckDLLLj()	// Verifica se a SIGALOJA.DLL esta aberta
		If CheckPaper( .T. )
			Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
			nRet := ExeDLLRun2(nHnd, 126, Str(nImpHnd)+'|'+cCabecalho+'|'+cCodBarras+'|'+cRodape+'|'+Str(nVias)+'|')
			Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
		Endif
	ElseIf IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		MsgAlert(STR0075) // "Funcão não implementada para essa impressora." 
		nRet := 0
	EndIf
	
	//PAF-ECF: Armazena na tabela de apoio(MDZ), emissão de relatório gerencial
	LjxGrvMdz("RG")
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFSubTotalºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o subtotal do cupom                                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorno do subtotal                                º±± 
±±º          ³ EXPc2 - Falg de impressao                                  º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFSubTotal( nImpHnd, cBuffer, cImprime )
Local nRet := -1			// Retorno da funcao da dll  
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e
                   
DEFAULT cImprime := " "		// Indica se imprime subtotal

If lEmitNFCe //Desvio ao utilizar NFC-e
	Return 0
EndIf

If oImpFisc <> Nil
	oRet := oImpFisc:SubTotal()
	
	If oRet:lRetorno
		nRet := 0
		cBuffer := Str(oRet:oRetorno * 100)
	EndIf
	
	Return nRet
EndIf

cBuffer := Str(nImpHnd)+','+ cImprime + ','+cBuffer
If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 80, @cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFSubTotal(cImprime)
		cBuffer := oAutocom:cBuffer	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 80, @cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFNumItem ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o numero de itens impressos                        º±± 
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorna o numero de itrend vendidos                º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFNumItem( nImpHnd, cBuffer )
Local nRet := -1		// Retorno da funcao da dll
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

If lEmitNFCe  //Desvio ao utilizar NFC-e
	Return 0
EndIf

If oImpFisc <> Nil
	oRet := oImpFisc:NumeroItem()
	
	If oRet:lRetorno
		nRet := 0
		cBuffer := oRet:oRetorno
	EndIf
	
	Return nRet
EndIf

cBuffer := Str(nImpHnd)+','+cBuffer

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 81, @cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFNumItem()
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 81, @cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFEmulEcf ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Alimenta as properties da sigaloja.dll                     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Numero do PDV                                      º±± 
±±º          ³ EXPc2 - Numero do Caixa                                    º±± 
±±º          ³ EXPc3 - Nome do Caixa                                      º±± 
±±º          ³ EXPc4 - Numero do cupom                                    º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFEmulEcf( nImpHnd, NumPdv, NumCaixa, NomeCaixa, NumCupom )
Local nRet := -1		// Retorno da funcao da dll
Local cBuffer := Str(nImpHnd)+','+NumPdv+','+NumCaixa+','+NomeCaixa+','+NumCupom		// alimenta as prop. da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 35, cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFAlimProp(NumPdv, NumCaixa, NomeCaixa, NumCupom)
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 35, cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFPedido  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza a venda com pedido                                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Indica se a venda possui TEF                       º±± 
±±º          ³ EXPc2 - Texto a ser impresso no pedido                     º±±  
±±º          ³ EXPc3 - Valor do pedido                                    º±± 
±±º          ³ EXPc4 - Condicao de pagamento em caso de TEF               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFPedido( nImpHnd, Tef, Texto, Valor, cCondPgTEF )
Local nRet := -1		// Retorno da funcao 
Local cBuffer := Str(nImpHnd)+','+' '+','+Tef+','+Texto+','+Valor+','+cCondPgTEF		// Monta o comando do Pedido
Local oRelatorio := Nil	//Relatorio que sera impresso


If cPaisLoc == "MEX"
	LjImplCOO(@nRet)    //Implementa Numeracao quando Emulador
EndIf


Texto := StrTran( Texto, Chr(13), '') //Remove CHR(13)
If oImpFisc <> Nil
	If CheckPaper(.T.)	
		
		oRelatorio := PrepRel(Texto, 1)

		oRet := oImpFisc:ImpPedido(Tef, oRelatorio, Val(Valor))
	
		If oRet:lRetorno
			nRet := 0
		EndIf
	EndIf

	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	If CheckPaper( .T. )
		nRet := ExeDLLRun2(nHnd, 38, cBuffer)
	Endif	
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		If CheckPaper( .T. )
			nRet := oAutocom:IFPedido(Tef, Texto, Valor, cCondPgTEF )
		Endif	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2(nHnd, 38, cBuffer)
			Endif	
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFRecebNFiºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza o recebimento nao fiscal                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Totalizador do recebimento                         º±± 
±±º          ³ EXPc2 - Valor do recebimento                               º±± 
±±º          ³ EXPc3 - Forma de Pagamento do recebimento                  º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFRecebNFis( nImpHnd, cTotalizador, nValor, cForma )
Local nRet := -1		// Retorno da funcao da dll
Local cBuffer := Str(nImpHnd)+','+cTotalizador+','+Str(nValor,14,2)+','+cForma		// Monta o comando do recebimento
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

//Não realiza operações com ECF quando NFC-e ou quando for venda direta (faturamento)
If lEmitNfce .Or. nModulo == 5
	Return 0
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises que nao utilizam ECF : ³
//³- PTG						 ³
//³- ANG						 ³
//³- CHI (Release 11.5 )		 ³
//³- COL (Release 11.5 )		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VldEcfPtg(@nRet)
	Return nRet
EndIf

If oImpFisc <> Nil
	If CheckPaper(.T.)	 
		cTotalizador := DscTotaliz(cTotalizador)
		
		oRet := oImpFisc:AbrirCNF(nValor, cForma, cTotalizador)
	
		If oRet:lRetorno                                                                                                                     
			nRet := 0
		EndIf
	EndIf

	Return nRet
EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	If CheckPaper( .T. )
		nRet := ExeDLLRun2(nHnd, 40, cBuffer)
	Endif	
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		If CheckPaper( .T. )
			nRet := oAutocom:IFRecbNFis(cTotalizador, Str(nValor,14,2), cForma )
		Endif	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2(nHnd, 40, cBuffer)
			Endif	
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFDownMFD ºAutor  ³Mauro Sano	         º Data ³17/11/2006   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz o download da memoria de fita detalhe                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Informa o tipo do parametro (COO ou Data)          º±± 
±±º          ³ EXPc2 - Parametro inical                                   º±± 
±±º          ³ EXPc3 - Parametro final                                    º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFDownMFD( nImpHnd, cTipo, cInicio, cFinal )
Local nRet		:= -1		// Retorno da funcao da dll
Local nY		:= 0
Local cPath		:= ""     	// Caminho onde a TotvsAPI ira gravar o arquivo de Memoria Fita Detalhe quando for PAF-ECF
Local cAux		:= ""		// Variavel auxiliar que contera o path para a gravacao do arquivo
Local cSerieIF	:= AllTrim(LjGetStation("SERPDV"))
Local cArqExt	:= ""
Local cPathArq	:= ""
Local cNomArq	:= ""
Local cPathMFD	:= PAF_ARQMFD + "\"
Local lLjNfPafEcf:= LjNfPafEcf(SM0->M0_CGC)
Local aArqsDir	:= {}

cInicio := AllTrim(cInicio)
cFinal := AllTrim(cFinal)

If lLjNfPafEcf
	STBFMGerPath( @cPathArq )
	If File(cPathArq + "DOWNLOAD.MFD")
		FErase(cPathArq + "DOWNLOAD.MFD")
	EndIf
EndIf 

If oImpFisc <> Nil
	
	If cTipo == "1"
		oRet := oImpFisc:MFDData(CTOD(cInicio), CTOD(cFinal))
	Else
		oRet := oImpFisc:MFDCoo(AllTrim(cInicio), AllTrim(cFinal))
	EndIf
	
	If oRet:lRetorno
		//Pega o Path do arquivo gerado	
		oRet := oImpFisc:PegPathMFD()
		
		If oRet:lRetorno
			cAux := AllTrim(oRet:oRetorno)
		    If cAux == "C:\" .OR. Empty(cAux)
				cAux := "C:\LeituraMFD_ESP.txt"
		    EndIf

			If lLjNfPafEcf
				If LjxGerPath( @cPath ) 
					If __CopyFile(cAux, cPath + "DOWNLOAD.MFD")
						nRet := 0
					EndIf	
				EndIf	
			Else
				MsgInfo(STR0076 + cAux,"Arquivo MFD") //"Arquivo Gerado com Sucesso, pasta: "
				nRet := 0 
			EndIf
		EndIf
	EndIf
Else
	If ChkAutocom() == DLL_SIGALOJA .Or. IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA // Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 118, Str(nImpHnd)+","+cTipo+","+cInicio+","+cFinal)
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:IFDownMFD( cTipo, cInicio, cFinal )
		EndIf
	EndIf
EndIf

If nRet == 0 .And. lLjNfPafEcf
	/*Para Arquivo MFD*/
	cNomArq := cSerieIF + "_"
	cNomArq += Dtos(Date()) + "_"
	
	/*Deleto somente arquivos MFD criados no mesmo dia*/
	aArqsDir := Directory(cPathArq + "*.MFD")   //Lista os arquivos .TXT do diretorio
	For nY:= 1 To Len(aArqsDir)
		If Upper(cNomArq) $ Upper(aArqsDir[nY][F_NAME])
			FErase(cPathArq + aArqsDir[nY][F_NAME])
		EndIf
	Next nY
	
	/*Para Arquivo MFD - termina de preencher o nome para gravação final*/
	cNomArq += StrTran( Time(), ":")	
	cArqExt := ".MFD"
		
	If File(cPathArq + "DOWNLOAD.MFD")
		FRenameEx(cPathArq + "DOWNLOAD.MFD",cPathArq + cPathMFD + cNomArq + cArqExt, NIL)
		STBFMSignPaf(cPathArq + cPathMFD + cNomArq + cArqExt,.F.,.T.)
		FErase(cPathArq + "DOWNLOAD.MFD")
		MsgInfo("Arquivo Gerado com sucesso - Tipo MFD","Arquivo MFD")
	Else
		LjGrvLog(NIL,"Arquivo MFD não localizado. Verifique -> Arquivo [" + cPathArq + "DOWNLOAD.MFD" + "]")
		If lHomolPaf
			Conout("Arquivo MFD não localizado. Verifique -> Arquivo [" + cPathArq + "DOWNLOAD.MFD" + "]")
		EndIf
	EndIf
EndIf

Return nRet

//-----------------------------------------------------------
/*/{Protheus.doc} IFMFDown()
Realiza o Download da memoria fiscal

@version 	P11.8
@since   	15/06/2015
@autor		Vendas CRM
/*/
//-----------------------------------------------------------
Function IFMFDown(nImpHnd,cTipo,cDadoIni,cDadoFinal)
Local nRet		:=	-1
Local cPath		:= ""     		// Caminho onde a TotvsAPI ira gravar o arquivo de Memoria Fiscal quando PAF-ECF
Local cAux		:= ""		// Variavel auxiliar que contera o path para a gravacao do arquivo
Local oRet		:= NIL		// retorno
Local lContinua	:= .T.
Local cArqMF	:= "MFISCAL"
Local cSerieIF	:= AllTrim(LjGetStation("SERPDV"))
Local cArqExt	:= ""
Local cPathArq	:= ""
Local cNomArq	:= ""
Local lLjNfPafEc:= LjNfPafEcf(SM0->M0_CGC)
/*
cTipo:
1 - por Data
2 - por RZ
3 - por Total
*/
If oImpFisc <> Nil
	oRet := oImpFisc:DownMF()
	
	If oRet:lRetorno
		//Pega o Path do arquivo gerado	
		oRet := oImpFisc:PegPathMFBin()
		If oRet:lRetorno
			cAux := AllTrim(oRet:oRetorno)
			If Right(cAux,1)  == "\"
				cAux += "mfiscal.bin"					
			ElseIf (cAux == "C:\") .OR. Empty(cAux)
				cAux := "C:\mfiscal.bin"
			ElseIf !(Upper("mfiscal.bin") $ Upper(cAux))
				cAux += "\mfiscal.bin"
			EndIf

			If lLjNfPafEc
				If LjxGerPath( @cPath ) 
					If __CopyFile(cAux, cPath + "mfiscal.bin")
						nRet := 0
					EndIf
				EndIf
			Else
				MsgInfo(STR0076 + cAux,"Arquivo MF") //"Arquivo Gerado com Sucesso, pasta: "
				nRet	:=	0
			EndIf
		EndIf
	EndIf
	
	lContinua := .F.
EndIf

If lContinua
	If (ChkAutocom() == DLL_SIGALOJA) .Or. (IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA)
		CheckDLLLj() //Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 125, AllTrim( Str( nImpHnd ) ) + "," + cTipo + "," + cDadoIni + "," + cDadoFinal)
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:IFDownMF()
		EndIf
	EndIf
EndIf

If nRet == 0 .And. lLjNfPafEc
	STBFMGerPath( @cPathArq )
	
	/*Para Arquivo MF*/
	cNomArq := cSerieIF + "_"
	cNomArq += Dtos(Date()) + "_"
	cNomArq += StrTran( Time(), ":")
	cArqExt := ".BIN"

	If File(cPathArq + cArqMF + ".BIN")
		__CopyFile(cPathArq + cArqMF + ".BIN", cPathArq + cNomArq + cArqExt)
		STBFMSignPaf(cPathArq + cNomArq + cArqExt,.F.,.T.)
		FErase(cPathArq + cArqMF + ".BIN")
		MsgInfo("Arquivo Gerado com sucesso - Tipo MF","Arquivo MF")
	Else
		LjGrvLog(NIL,"Arquivo de MF não localizado. Verifique")
		If lHomolPaf
			Conout("Arquivo de MF não localizado. Verifique")
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³ExecHsr   ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Envia comando direto para a impressora Hasar               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Comando a ser executado                            º±± 
±±º          ³ EXPc2 - Parametro do comando a ser executado               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ExecHsr(cComando, cPosicao)
Local nRet := -1
Local aRet  := {}
Local cBuffer
Local xReturn
DEFAULT cPosicao := '0'
//caracter ","(virgula) eh invalido para a impressora
cComando := StrTran(cComando,","," ")

//Eh necessario agregar espacos ao final da var cBuffer para que o retorno nao seja truncado
CheckDLLLj()
cBuffer := Str(nHdlECF) + "," + cComando + "," + cPosicao + "," + Space(115)
nRet    := ExecDLLRet(nHnd, 39, @cBuffer )
aRet    := LjStr2Array( cBuffer )

If ValType( cPosicao ) == 'C'
   If Val( cPosicao ) > 0 .AND. Len( aRet ) >= Val( cPosicao )
      xReturn  := aRet[ Val( cPosicao ) ]
   Else
      xReturn  := AClone( aRet )
   EndIf
Else
   xReturn  := AClone( aRet )
EndIf

Return xReturn

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³PinpadLis ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Lista os pinpads                                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Retorna a lista de pinpads                         º±± 
±±º          ³ EXPl1 - Flag de exibicao de msg                            º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºConrado Q.³25/04/07³124924³Verifica se o objeto oAutoCom foi criado,   º±±
±±º          ³        ³      ³antes de utilizar o mesmo.                  º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PinpadLis( cBuffer, lMostraMsg )
Local nRet := -1			   		// Retorno da funcao da dll
Local cBuffer1 := Space(2000) 		// Armazena a lista de pinpads da sigaloja
Local cBuffer2 := Space(2000) 		// Armazena a lista de pinpads da Autocom
Local nMVAUTOCOM := ChkAutocom()	// Verifica o parametro MV_AUTOCOM

If nMVAUTOCOM == DLL_SIGALOJA .OR. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM
	//executa metodos da sigaloja.dll
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 50, @cBuffer1 )
Else
	nRet := 0
EndIf

If nRet==0 .AND. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM .OR. nMVAUTOCOM == DLL_AUTOCOM 
	//|Chama o metodo para instanciar o objeto oAutocom|
	If CriaAutocom() 
		If GetRemoteType() == REMOTE_LINUX .AND. File(GetClientDir()+"libautocom.so")
			nRet := oAutocom:PinpadLis()
			cBuffer2 := oAutocom:cBuffer
		Elseif	GetRemoteType() <> REMOTE_LINUX .And. File( GetClientDir() + cDLLAUTOCOM )
	 		nRet := oAutocom:PinpadLis()
	 		cBuffer2 := oAutocom:cBuffer
		Endif
	EndIf
EndIf
If nRet==0
	cBuffer := JuntaLista(cBuffer1, cBuffer2)
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³PinPadAbr ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Abre comunicacao com o pinpad                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Modelo do Pinpad                                   º±± 
±±º          ³ EXPc2 - Porta de uso do pinpad                             º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PinPadAbr( cModelo, cPorta )
Local nRet := -1		// Retorno da funcao da dll

If !Empty(cModelo) .AND. !Empty(cPorta)
	If ChkAutocom() == DLL_SIGALOJA								// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()						 							// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 51, cModelo+","+cPorta)
	ElseIf CriaAutocom()    								      // Chama o metodo para instanciar o objeto oAutocom
		// Pesquisa se o modelo do equipamento existe na AUTOCOM                         
		// Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM
		If IsAutocom(EQUIP_PINPAD, cModelo) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:PinPadAbr( cModelo, cPorta )
		Else
			If IsAutocom(EQUIP_PINPAD, cModelo) == EQUIP_DLL_SIGALOJA
				aIsAutocom[EQUIP_PINPAD] := EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 51, cModelo+","+cPorta)
			EndIf
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³PinPadLeC ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Solicita a passagem do cartao no pinpad                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Modalidade da leitura do cartao                    º±± 
±±º          ³ EXPc2 - Retorno da leitura do cartao                       º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PinPadLeC( nPinHnd, cModalidade, cBuffer )
Local nRet := -1		// Retorno da funcao da dll

cBuffer := Str(nPinHnd)+","+cModalidade+","+cBuffer
If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 52, @cBuffer)
Else
	//Pesquisa se o modelo do equipamento existe na AUTOCOM
	//Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM.
	If IsAutocom(EQUIP_PINPAD) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:PinPadLeC(cModalidade)
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_PINPAD) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 52, @cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³PinpadLeS ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Solicita a senha do Pinpad                                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Leitura da trilha do cartao                        º±± 
±±º          ³ EXPc2 - Mensagem do cartao                                 º±± 
±±º          ³ EXPc3 - Work                                               º±± 
±±º          ³ EXPc4 - Status da transacao                                º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PinpadLeS( nPinHnd, cTrilha2, cMsg, cWork, cStatus )
Local nRet := -1 			// Retorno da funcao da dll
Local nPos					
Local nPosAnt := 1
Local cBuffer := Str(nPinHnd)+","+cTrilha2+","+cMsg+","+cWork+","+cStatus
If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 53, @cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_PINPAD) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:PinPadLeS(cTrilha2+","+cMsg+","+cWork+","+cStatus)
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_PINPAD) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 53, @cBuffer)
		EndIf
	EndIf
EndIf

// cBuffer retarna uma string separada por "," para destinguir as variáveis.
// Abaixo quebra a string e atualiza as variáveis de retorno por referencia
nPos := At( ",", cBuffer )
cTrilha2 := Substr(cBuffer,nPosAnt,nPos-1)
nPosAnt := nPos+1

nPos := At( ",", Substr(cBuffer,nPosAnt,Len(cBuffer)))
cMsg     := Substr(cBuffer,nPosAnt,nPos-1)
nPosAnt += nPos

nPos := At( ",", Substr(cBuffer,nPosAnt,Len(cBuffer)))
cWork    := Substr(cBuffer,nPosAnt,nPos-1)
nPosAnt += nPos

cStatus  := Substr(cBuffer,nPosAnt,Len(cBuffer))

Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³PinpadFin ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Finaliza a comunicacao com o pinpad                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function PinpadFin( nPinHnd )
Local nRet := -1		// Retorno da funcao da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj(.F.)									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 54, Str(nPinHnd))
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_PINPAD) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:PinPadFin()
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_PINPAD) == EQUIP_DLL_SIGALOJA
			CheckDLLLj(.F.)								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 54, Str(nPinHnd))
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³CMC7Lis   ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Lista os leiotores de CMC7                                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Retorno dos modelos de leitores de CMC7            º±± 
±±º          ³ EXPl1 - Flag de exibicao da msg                            º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºConrado Q.³25/04/07³124924³Verifica se o objeto oAutoCom foi criado,   º±±
±±º          ³        ³      ³antes de utilizar o mesmo.                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CMC7Lis( cBuffer, lMostraMsg )
Local nRet := -1        			// Retorno da funcao da dll
Local cBuffer1 := Space(2000)		// Armazena lista da SIGALOJA.DLL
Local cBuffer2 := Space(2000)		// Armazena lista a AUTOCOM
Local cBuffer3 := ""				// Recebe a lista da TOTVSAPI
Local nMVAUTOCOM := ChkAutocom()	// Verifica o parametro MV_AUTOCOM
Local nCount   := 1					// Variavel utiliza no For...

If CriaTotApi()
	oTovsApi := GetTotApi() 
	oRet := oTovsApi:ListarCMC7()	
	
	For nCount := 1 To oRet:Count()
		cBuffer3 += '"' + oRet:Elements(nCount):cDescricao + '",' + oRet:Elements(nCount):cPais + ','
	Next
EndIf

If nMVAUTOCOM == DLL_SIGALOJA .OR. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 55, @cBuffer1 )
Else
	nRet := 0
EndIf

If nRet==0 .AND. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM .OR. nMVAUTOCOM == DLL_AUTOCOM
	//Chama o metodo para instanciar o objeto oAutocom
	If CriaAutocom() 
		If GetRemoteType() == REMOTE_LINUX .AND. File(GetClientDir()+"libautocom.so")
			nRet := oAutocom:CMC7Lis()
			cBuffer2 := oAutocom:cBuffer
		Elseif	GetRemoteType() <> REMOTE_LINUX .And. File( GetClientDir() + cDLLAUTOCOM )
	 		nRet := oAutocom:CMC7Lis()
	 		cBuffer2 := oAutocom:cBuffer
		Endif
	EndIf
EndIf
If nRet==0 
	If Empty(cBuffer1)
		cBuffer1 := cBuffer3 	
	Else
		If Substr(AllTrim(cBuffer1), Len(AllTrim(cBuffer1)), 1) == ','
			cBuffer1 += cBuffer3		
		Else
			cBuffer1 += ',' + cBuffer3
		EndIf
	EndIf
	cBuffer := JuntaLista(cBuffer1, cBuffer2)
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³CMC7Abr   ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Estabelece comunicacao com o CMC7                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Modelo do leitor de CMC7                           º±± 
±±º          ³ EXPc2 - Porta de comunicacao do leitor                     º±± 
±±º          ³ EXPc3 - Mensagem do leitor                                 º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CMC7Abr( cModelo, cPorta, cMensagem )
Local nRet 		:= -1			// Retorno da funcao da dll
Local lComOk	:= .F.			// Controla se abriu comunicacao com a totvsapi
DEFAULT cMensagem := 'S'		// Define a exibicao da mensagem
  
If !Empty(cModelo) .AND. !Empty(cPorta)
	If CriaTotApi()
		If ExistEquip(EQUIP_CMC7, cModelo, @lComOk)
			If lComOk	
				nRet := 0
			EndIf
			
			Return nRet
		EndIf
	EndIf

	If ChkAutocom() == DLL_SIGALOJA			// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()						// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 56, cModelo+","+cPorta+","+cMensagem)
	ElseIf CriaAutocom()        // Chama o metodo para instanciar o objeto oAutocom
		//| Pesquisa se o modelo do equipamento existe na AUTOCOM                          |
		//| Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. |		
		If IsAutocom(EQUIP_CMC7, cModelo) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:CMC7Abr( cModelo, cPorta, cMensagem )
		Else
			If IsAutocom(EQUIP_CMC7, cModelo) == EQUIP_DLL_SIGALOJA
				aIsAutocom[EQUIP_CMC7] := EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 56, cModelo+","+cPorta+","+cMensagem)
			EndIf
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³CMC7Fec   ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Fecha comunicacao com o CMC7                               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta do leitor de CMC7                            º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CMC7Fec( nCmc7Hnd, cPorta )
Local nRet		:= -1		// Retorno da funcao da dll
Local lContinua := .T.

If oImpFisc <> Nil
	nRet		:= 0
	lContinua	:= .F.
EndIf

If lContinua .And. nCmc7Hnd == -1
	lContinua := .F.
EndIf

If lContinua
	If ChkAutocom() == DLL_SIGALOJA .Or. IsAutocom(EQUIP_CMC7) == EQUIP_DLL_SIGALOJA
		CheckDLLLj(.F.)									// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 57, Str(nCmc7Hnd)+","+cPorta)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom(EQUIP_CMC7) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:CMC7Fec( cPorta )
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³CMC7LeD   ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz a leitura de documentos                                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorno da leitura do CMC7                         º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CMC7LeD( nCmc7Hnd, cBuffer )
Local nRet := -1		// REtorno da funcao da dll

MsgInfo(STR0072)									//"Insira o documento no leitor de CMC7."
cBuffer := Str(nCmc7Hnd)+","+cBuffer 
If oImpFisc <> Nil
	oRet := oImpFisc:LeCMC7()
	
	If oRet:lRetorno
		cBuffer := oRet:oRetorno
		nRet := 0
	EndIf
	
	Return nRet
EndIf    

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 58, @cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_CMC7) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:CMC7LeD()
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_CMC7) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 58, @cBuffer)
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³CMC7LeDC  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz leitura completa do documento do CMC7                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorno da leitura do CMC7                         º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CMC7LeDC( nCmc7Hnd, cBuffer )
Local nRet := -1		// REtorno da funcao da dll

cBuffer := Str(nCmc7Hnd)+","+cBuffer

If oImpFisc <> Nil
	oRet := oImpFisc:LeCMC7()
	
	If oRet:lRetorno
		cBuffer := oRet:oRetorno
		nRet := 0
	EndIf
	
	Return nRet
EndIf    

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 82, @cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_CMC7) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:CMC7LeDC()
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_CMC7) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 82, @cBuffer)
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³GavetaLis ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Lista as gavetas ( Serial )                                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Retorno da lista dos pinpads                       º±± 
±±º          ³ EXPl1 - Flag de exibicao da msg                            º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºConrado Q.³25/04/07³124924³Verifica se o objeto oAutoCom foi criado,   º±±
±±º          ³        ³      ³antes de utilizar o mesmo.                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GavetaLis( cBuffer, lMostraMsg )
Local nRet := -1					// Retorno da funcao da dll
Local cBuffer1 := Space(2000)		// Armazena a lista de gavetas da sigaloja.dll
Local cBuffer2 := Space(2000)		// Armazena a lista de gavetas da autocom
Local nMVAUTOCOM := ChkAutocom()	// Verifica o parametro MV_AUTOCOM

If nMVAUTOCOM == DLL_SIGALOJA .OR. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM     
	//executa metodos da sigaloja.dll
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 59, @cBuffer1 )
Else
	nRet := 0
EndIf
If nRet==0 .AND. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM .OR. nMVAUTOCOM == DLL_AUTOCOM
	//Chama o metodo para instanciar o objeto oAutocom
	If CriaAutocom() 
		If GetRemoteType() == REMOTE_LINUX .AND. File(GetClientDir()+"libautocom.so")
		nRet := oAutocom:GavetaLis()
		cBuffer2 := oAutocom:cBuffer
		Elseif	GetRemoteType() <> REMOTE_LINUX .And. File( GetClientDir() + cDLLAUTOCOM )
	 		nRet := oAutocom:GavetaLis()
	 		cBuffer2 := oAutocom:cBuffer
		Endif
	EndIf
EndIf
If nRet==0
	cBuffer := JuntaLista(cBuffer1, cBuffer2)
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³GavetaAbr ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Estabelece comunicacao com a gaveta                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Modelo da gaveta utilizada                         º±± 
±±º          ³ EXPc2 - Porta utilizada para conexao da gaveta             º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GavetaAbr( cModelo, cPorta )
Local nRet := -1		// Retorno da funcao da dll

If !Empty(cModelo) .AND. !Empty(cPorta)
	If ChkAutocom() == DLL_SIGALOJA								// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()													// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 60, cModelo+","+cPorta)
	ElseIf CriaAutocom()    								      // Chama o metodo para instanciar o objeto oAutocom
		//| Pesquisa se o modelo do equipamento existe na AUTOCOM                          |
		//| Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. |
		If IsAutocom(EQUIP_GAVETA, cModelo) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:GavetaAbr( cModelo, cPorta )
		Else
			If IsAutocom(EQUIP_GAVETA, cModelo) == EQUIP_DLL_SIGALOJA
				aIsAutocom[EQUIP_GAVETA] := EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 60, cModelo+","+cPorta)
			EndIf
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³GavetaFec ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz fechamento da porta da gaveta serial                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta de conexao da gaveta                         º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GavetaFec( nGavHnd, cPorta )
Local nRet := -1		// REtorno da funcao da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj(.F.)									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 61, Str(nGavHnd)+","+cPorta)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_GAVETA) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:GavetaFec( cPorta )
	Else
		If IsAutocom(EQUIP_GAVETA) == EQUIP_DLL_SIGALOJA
			CheckDLLLj(.F.)							// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 61, Str(nGavHnd)+","+cPorta)
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³GavetaAci ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz o acionamento da gaveta                                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta de conexao da gaveta                         º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GavetaAci( nGavHnd, cPorta )
Local nRet := -1		// Retorno da funcao da dll 

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 62, Str(nGavHnd)+","+cPorta)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_GAVETA) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:GavetaAci( cPorta )
	Else
		If IsAutocom(EQUIP_GAVETA) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 62, Str(nGavHnd)+","+cPorta)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³GavetaStatºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz leitura do status da gaveta                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta de conexao da gaveta                         º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GavetaStat( nGavHnd, cPorta )
Local nRet := -1		// retorno da funcao da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 83, Str(nGavHnd)+","+cPorta)
Else
	//| Pesquisa se o modelo do equipamento existe na AUTOCOM                          |
	//| Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. |
	If IsAutocom(EQUIP_GAVETA) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:GavetaStat( cPorta )
	Else
		If IsAutocom(EQUIP_GAVETA) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 83, Str(nGavHnd)+","+cPorta)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³ImpCupLis ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Lista as impressoras de cupom                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Retorna a lista de impressoras de cupom            º±± 
±±º          ³ EXPl1 - Flag de exibicao da msg                            º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºConrado Q.³25/04/07³124924³Verifica se o objeto oAutoCom foi criado,   º±±
±±º          ³        ³      ³antes de utilizar o mesmo.                  º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ImpCupLis( cBuffer, lMostraMsg )	
Local nRet := -1					// Retorno da funcao da dll			
Local cBuffer1 := Space(2000)		// Armazena a lista vinda da sigaloja.dll
Local cBuffer2 := Space(2000)		// Armazena a lista vinda da autocom
Local nMVAUTOCOM := ChkAutocom()	// Verifica o parametro MV_AUTOCOM

If nMVAUTOCOM == DLL_SIGALOJA .OR. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM     
	//executa metodos da sigaloja.dll
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 63, @cBuffer1 )
Else
	nRet := 0
EndIf

If nRet==0 .AND. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM .OR. nMVAUTOCOM == DLL_AUTOCOM
	//Chama o metodo para instanciar o objeto oAutocom
	If CriaAutocom() 
		If GetRemoteType() == REMOTE_LINUX .AND. File(GetClientDir()+"libautocom.so")
			nRet := oAutocom:ImpCupLis()
			cBuffer2 := oAutocom:cBuffer
		Elseif	GetRemoteType() <> REMOTE_LINUX .And. File( GetClientDir() + cDLLAUTOCOM )
	 		nRet := oAutocom:ImpCupLis()
	 		cBuffer2 := oAutocom:cBuffer
		Endif
	EndIf
EndIf
If nRet==0
	cBuffer := JuntaLista(cBuffer1, cBuffer2)
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³ImpCupAbr ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Estabelece comunicacao com a Impressora de Cupom           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Modelo da impressora de cupom                      º±± 
±±º          ³ EXPc2 - Porta de conexao do cupom                          º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ImpCupAbr( cModelo, cPorta )
Local nRet := -1		// Retorno da funcao da dll

If !Empty(cModelo) .AND. !Empty(cPorta)
	If ChkAutocom() == DLL_SIGALOJA								// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()													// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 64, cModelo+","+cPorta)
	ElseIf CriaAutocom()    								      // Chama o metodo para instanciar o objeto oAutocom
		//| Pesquisa se o modelo do equipamento existe na AUTOCOM                          |
		//| Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. |
		If IsAutocom(EQUIP_IMPCUPOM, cModelo) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:ImpCupAbr( cModelo, cPorta )
		Else
			If IsAutocom(EQUIP_IMPCUPOM, cModelo) == EQUIP_DLL_SIGALOJA
				aIsAutocom[EQUIP_IMPCUPOM] := EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 64, cModelo+","+cPorta)
			EndIf
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³ImpCupFec ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Fecha a comunicao com a Impressora de cupom                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta de conxeao da impressora                     º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ImpCupFec( nCupHnd, cPorta )
Local nRet := -1		// Retorno da funcao da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj(.F.)									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 65, Str(nCupHnd)+","+cPorta)
Else
	//| Pesquisa se o modelo do equipamento existe na AUTOCOM                          |
	//| Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. |
	If IsAutocom(EQUIP_IMPCUPOM) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:ImpCupFec( cPorta )
	Else
		If IsAutocom(EQUIP_IMPCUPOM) == EQUIP_DLL_SIGALOJA
			CheckDLLLj(.F.)							// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 65, Str(nCupHnd)+","+cPorta)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³ImpCupImp ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz a impressao em cupom nao fiscal                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Texto a ser impresso                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ImpCupImp( nCupHnd, cBuffer )
Local nRet := -1		// Retorno da funcao da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 66, Str(nCupHnd)+'|'+cBuffer+'|')
Else
	//| Pesquisa se o modelo do equipamento existe na AUTOCOM                          |
	//| Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. |
	If IsAutocom(EQUIP_IMPCUPOM) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:ImpCupImp( '|'+cBuffer+'|' )
	Else
		If IsAutocom(EQUIP_IMPCUPOM) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 66, Str(nCupHnd)+'|'+cBuffer+'|')
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³LeitorLis ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³  Lista os Leitores Seriais                                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Texto a ser impresso no relatorio                  º±± 
±±º          ³ EXPc2 - Numero de vias do texto                            º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºConrado Q.³25/04/07³124924³Verifica se o objeto oAutoCom foi criado,   º±±
±±º          ³        ³      ³antes de utilizar o mesmo.                  º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LeitorLis( cBuffer, lMostraMsg )
Local nRet := -1					// Retorno da funcao da dll
Local cBuffer1 := Space(2000)		// Armazena a lista vinda da sigaloja
Local cBuffer2 := Space(2000)		// Armazena a lista vinda da autocom
Local nMVAUTOCOM := ChkAutocom()	// Verifica o parametro MV_AUTOCOM

If nMVAUTOCOM == DLL_SIGALOJA .OR. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM     
	//executa metodos da sigaloja.dll
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 67, @cBuffer1 )
Else
	nRet := 0
EndIf
If nRet==0 .AND. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM .OR. nMVAUTOCOM == DLL_AUTOCOM
	//Chama o metodo para instanciar o objeto oAutocom
	If CriaAutocom() 
		If GetRemoteType() == REMOTE_LINUX .AND. File(GetClientDir()+"libautocom.so")
			nRet := oAutocom:LeitorLis()
			cBuffer2 := oAutocom:cBuffer
		Elseif	GetRemoteType() <> REMOTE_LINUX .And. File( GetClientDir() + cDLLAUTOCOM )
	 		nRet := oAutocom:LeitorLis()
	 		cBuffer2 := oAutocom:cBuffer
		Endif
	EndIf
EndIf
If nRet==0
	cBuffer := JuntaLista(cBuffer1, cBuffer2)
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³LeitorAbr ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Estabelece a comunicacao com o leitor                      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta de comunicacao                               º±± 
±±º          ³ EXPc2 - Foco do leitor                                     º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Analista  ³ Data   º  BOPS º  Motivo da Alteracao                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Mauro S.  ³09/02/07º 119010ºAlterada da chamada isAutocom c/ modelo    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LeitorAbr( cModelo, cPorta, cFoco )
Local nRet := -1		// Retorno da funcao da dll

If !Empty(cModelo) .AND. !Empty(cPorta)
	If ChkAutocom() == DLL_SIGALOJA								// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()													// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 68, cModelo+","+cPorta+","+cFoco )
	ElseIf CriaAutocom()    								      // Chama o metodo para instanciar o objeto oAutocom
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		If IsAutocom( EQUIP_LEITOR, cModelo ) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:LeitorAbr( cModelo, cPorta, cFoco )
		Else
			If IsAutocom( EQUIP_LEITOR, cModelo ) == EQUIP_DLL_SIGALOJA
				aIsAutocom[EQUIP_LEITOR] := EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 68, cModelo+","+cPorta+","+cFoco )
			EndIf
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³LeitorFec ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Fecha comunicacao com o Leitor                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta de comunicacao                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LeitorFec( nLeitHnd, cPorta )
Local nRet := -1		// Retorno da funcao da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj(.F.)									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 69, Str(nLeitHnd)+","+cPorta)
Else
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	If IsAutocom(EQUIP_LEITOR) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:LeitorFec( cPorta )
	Else
		If IsAutocom(EQUIP_LEITOR) == EQUIP_DLL_SIGALOJA
			CheckDLLLj(.F.)							// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 69, Str(nLeitHnd)+","+cPorta)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³LeitorFocoºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Indica para a Thread do Leitor se eh ou nao para enviar    º±±
±±º          ³ o codigo para o protheus                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPl1 - Modo de leitura                                    º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LeitorFoco( nLeitHnd, lModo )
Local nRet := -1		// Retorno da funcao da dll

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 70, Str(nLeitHnd)+","+Iif(lModo,"1","0"))
Else
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	If IsAutocom(EQUIP_LEITOR) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:LeitorFoco( lModo )
	Else
		If IsAutocom(EQUIP_LEITOR) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 70, Str(nLeitHnd)+","+Iif(lModo,"1","0"))
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³BalancaLisºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Lista as Balancas Seriais                                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Lista de balancas                                  º±± 
±±º          ³ EXPl1 - Flag da exibicao das msg                           º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºConrado Q.³25/04/07³124924³Verifica se o objeto oAutoCom foi criado,   º±±
±±º          ³        ³      ³antes de utilizar o mesmo.                  º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function BalancaLis( cBuffer, lMostraMsg )
Local nRet := -1					// Retorno da funcao da dll 		
Local cBuffer1 := Space(5000)		// Armazena a lista vinda da sigaloja
Local cBuffer2 := Space(5000)		// Armazena a lista vinda da autocom
Local nMVAUTOCOM := ChkAutocom()	// Verifica o parametro MV_AUTOCOM

If nMVAUTOCOM == DLL_SIGALOJA .OR. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM     
	//executa metodos da sigaloja.dll
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 88, @cBuffer1 )
Else
	nRet := 0
EndIf
If nRet==0 .AND. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM .OR. nMVAUTOCOM == DLL_AUTOCOM
	//Chama o metodo para instanciar o objeto oAutocom
	If CriaAutocom() 
		If GetRemoteType() == REMOTE_LINUX .AND. File(GetClientDir()+"libautocom.so")
			nRet := oAutocom:BalancaLis()
			cBuffer2 := oAutocom:cBuffer
		Elseif	GetRemoteType() <> REMOTE_LINUX .And. File( GetClientDir() + cDLLAUTOCOM )
	 		nRet := oAutocom:BalancaLis()
	 		cBuffer2 := oAutocom:cBuffer
		Endif
	EndIf
EndIf
If nRet==0
	cBuffer := JuntaLista(cBuffer1, cBuffer2)
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³BalancaAbrºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Estabelece comunicacao com a Balanca                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Modelo da balanca                                  º±± 
±±º          ³ EXPc2 - Porta de comunicacao da balanca                    º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function BalancaAbr( cModelo, cPorta )
Local nRet := -1		// Retorno da funcao da dll

If !Empty(cModelo) .AND. !Empty(cPorta)
	If ChkAutocom() == DLL_SIGALOJA								// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()													// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 86, cModelo+","+cPorta)
	ElseIf CriaAutocom()    								      // Chama o metodo para instanciar o objeto oAutocom
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom(EQUIP_BALANCA, cModelo) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:BalancaAbr( cModelo, cPorta )
		Else
			If IsAutocom(EQUIP_BALANCA, cModelo) == EQUIP_DLL_SIGALOJA
				aIsAutocom[EQUIP_BALANCA] := EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 86, cModelo+","+cPorta)
			EndIf
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³BalancaFecºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Fecha comunicacao com a Balanca                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta de comunicacao                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function BalancaFec( nBalanHnd, cPorta )
Local nRet := -1		// Retorno da funcao da dll    

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 87, Str(nBalanHnd)+","+cPorta)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_BALANCA) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:BalancaFec()
	Else
		If IsAutocom(EQUIP_BALANCA) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 87, Str(nBalanHnd)+","+cPorta)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³BalancaPegºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Captura o peso da balanca                                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorna o peso da balanca                          º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function BalancaPegaPeso( nBalanHnd, cBuffer )
Local nRet := -1		// retorno da funcao da dll                     

cBuffer := AllTrim(Str(nBalanHnd))+","+cBuffer
If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 85, @cBuffer )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_BALANCA) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:BalancaPegaPeso()
		cBuffer := oAutocom:cBuffer	
	Else
		If IsAutocom(EQUIP_BALANCA) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 85, @cBuffer )
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³DisplayLisºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Lista os Displays Homologados                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Texto a ser impresso no relatorio                  º±± 
±±º          ³ EXPc2 - Numero de vias do texto                            º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºConrado Q.³25/04/07³124924³Verifica se o objeto oAutoCom foi criado,   º±±
±±º          ³        ³      ³antes de utilizar o mesmo.                  º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function DisplayLis( cBuffer, lMostraMsg )
Local nRet := -1			   		// Retorno da funcao da dll
Local cBuffer1 := Space(2000)  		// Recebe a lista da SIGALOJA.DLL
Local cBuffer2 := Space(2000) 		// Recebe a lista da AUTOCOM
Local nMVAUTOCOM := ChkAutocom()	// Verifica o parametro MV_AUTOCOM

If nMVAUTOCOM == DLL_SIGALOJA .OR. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 72, @cBuffer1 )
Else
	nRet := 0
EndIf

If nRet==0 .AND. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM .OR. nMVAUTOCOM == DLL_AUTOCOM
	//Chama o metodo para instanciar o objeto oAutocom
	If CriaAutocom() 
		If GetRemoteType() == REMOTE_LINUX .AND. File(GetClientDir() + "libautocom.so")
			nRet := oAutocom:DisplayLis()
			cBuffer2 := oAutocom:cBuffer
		Elseif	GetRemoteType() <> REMOTE_LINUX .And. File( GetClientDir() + cDLLAUTOCOM )
	 		nRet := oAutocom:DisplayLis()
	 		cBuffer2 := oAutocom:cBuffer
		Endif
	EndIf
EndIf
If nRet==0
	cBuffer := JuntaLista(cBuffer1, cBuffer2)
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³DisplayAbrºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz a abertura do display                                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Modelo do display                                  º±± 
±±º          ³ EXPc2 - Porta de comunicacao do display                    º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function DisplayAbr( cModelo, cPorta )
Local nRet := -1		// Retorno da funcao da dll

If !Empty(cModelo) .AND. !Empty(cPorta)
	If ChkAutocom() == DLL_SIGALOJA								// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()		  											// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 73, cModelo+","+cPorta)
	ElseIf CriaAutocom()    								      // Chama o metodo para instanciar o objeto oAutocom
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom(EQUIP_DISPLAY, cModelo) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:DisplayAbr( cModelo, cPorta )
		Else
			If IsAutocom(EQUIP_DISPLAY, cModelo) == EQUIP_DLL_SIGALOJA
				aIsAutocom[EQUIP_DISPLAY] := EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 73, cModelo+","+cPorta)
			EndIf
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³DisplayFecºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza o fechamento do display                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta de comunicacao que sera fechada              º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function DisplayFec( nDisHnd, cPorta )
Local nRet := -1		// Retorno da funcao da dll        

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj(.F.)									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 74, Str(nDisHnd)+","+cPorta)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_DISPLAY) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:DisplayFec( cPorta )
	Else
		If IsAutocom(EQUIP_DISPLAY) == EQUIP_DLL_SIGALOJA
			CheckDLLLj(.F.)								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 74, Str(nDisHnd)+","+cPorta)
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³DisplayEnvºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Envia texto para o display                                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Texto a ser enviado para o display                 º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function DisplayEnv( nDisHnd, cTexto )
Local nRet := -1		// Retorno da funcao da dll

// Retirar acentuacao do texto
cTexto := FwNoAccent(cTexto)

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 75, Str( nDisHnd )+','+cTexto)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_DISPLAY) == 	EQUIP_DLL_AUTOCOM
		nRet := oAutocom:DisplayEnv( cTexto )
	Else
		If IsAutocom(EQUIP_DISPLAY) == 	EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 75, Str( nDisHnd )+','+cTexto)
		EndIf
	EndIf
EndIf
Return nRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³MsgDisplayºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Envia texto padrao para o Display                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPa1 - Array com parametros para execucao do P. Entrada   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MsgDisplay( nTipo, aPARAMIXB )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel utilizada para armazenagem do texto	|
//³ que sera apresentado no display do leitor		|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cMsg := ""		// Recebe a msg a ser exibida
Local cAux				// Auxiliar na montagem da msg

If lUsaDisplay
	If ExistBlock("MSGDISPLAY")
		cMsg := ExecBlock("MSGDISPLAY",.F.,.F.,{nTipo,aPARAMIXB})
		If ValType(cMsg) <> "C"
			cMsg := ""
		EndIf
	Else
		If nTipo == 1					// Apos Abrir o Display
			// "AP FRONT LOJA"
			cMsg := STR0023
		ElseIf nTipo == 2				// Antes de Fechar o Display
			// "AP FRONT LOJA" ### "TERMINO NORMAL"
			cMsg := PadR(STR0023,20) + Chr(10) + PadL(STR0024,20)
		ElseIf nTipo == 3				// Apos Abrir o Caixa
			// "CAIXA" ### "DISPONIVEL"
			cMsg := PadC(STR0025,20) + Chr(10) + PadC(STR0026,20)
		ElseIf nTipo == 4				// Apos Fechar o Caixa
			// "CAIXA" ### "FECHADO"
			DisplayEnv(StatDisplay(), "1C"+ STR0025 + ' ' + STR0027  )      
			DisplayEnv(StatDisplay(), "2C"+ " "  )    				
			cMsg := PadC(STR0025,20) + Chr(10) + PadC(STR0027,20)
		ElseIf nTipo == 5				// Apos Registrar o Item
			cAux := AllTrim(Transform(aPARAMIXB[4],PesqPictQt("L2_QUANT",7)))
			cMsg := Left(aPARAMIXB[3],20) + Chr(10) + ;
			cAux + PadL(SuperGetMV("MV_SIMB1") + " " + AllTrim(Transform(aPARAMIXB[4]*aPARAMIXB[5],PesqPict("SL1","L1_VLRTOT",12))), 20-Len(cAux))
		ElseIf nTipo == 6				// Quando Teclar SubTotal (F9)
			// "SUB-TOTAL:"
			cMsg := STR0028 + Chr(10) + SuperGetMV("MV_SIMB1") + Transform(aPARAMIXB[1],PesqPict("SL1","L1_VLRTOT",16))
		ElseIf nTipo == 7				// Quando Houver Troco
			// "TROCO:"
			cMsg := STR0029 + Chr(10) + SuperGetMV("MV_SIMB1") + Transform(aPARAMIXB[1],PesqPict("SL1","L1_VLRTOT",16))
		ElseIf nTipo == 8				// Apos Fechar o Cupom
			// "OBRIGADO." ### "VOLTE SEMPRE!"
			cMsg := PadC(STR0030,20) + Chr(10) + PadC(STR0031,20)
		EndIf
	EndIf
	If Len(cMsg) > 0
		DisplayEnv(StatDisplay(), '0C'+cMsg)
	EndIf
EndIf
Return NIL

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³CHAbir    ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza a abertura da impressora de cheque                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Modelo da impressora de cheque                     º±± 
±±º          ³ EXPc2 - Porta a ser utilizada para impressora de cheque    º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Analista  ³ Data   º  BOPS º  Motivo da Alteracao                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Mauro S.  ³09/02/07³ 119010³Alterada da chamada isAutocom c/ modelo    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CHAbrir( cModelo, cPorta )
Local nRet 		:= -1		// Retorno da funcao da dll
Local lComOk	:= .F.		// Controla se abriu comunicacao com a totvsapi

If !Empty(cModelo) .AND. !Empty(cPorta)
	
	If CriaTotApi()
		If ExistEquip(EQUIP_CMC7, cModelo, @lComOk)
			If lComOk	
				nRet := 0
			EndIf
			
			Return nRet
		EndIf
	EndIf

	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 76, cModelo+","+cPorta)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If CriaAutocom()
			If IsAutocom( EQUIP_IMPCHEQUE, cModelo ) == EQUIP_DLL_AUTOCOM
				nRet := oAutocom:CHAbrir( cModelo, cPorta )
			Else       
				If IsAutocom( EQUIP_IMPCHEQUE, cModelo ) == EQUIP_DLL_SIGALOJA								
				    aIsAutocom[EQUIP_IMPCHEQUE] := EQUIP_DLL_SIGALOJA
					CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
					nRet := ExeDLLRun2(nHnd, 76, cModelo+","+cPorta)
				EndIf
			EndIf                                                        
		Endif	
	EndIf
EndIf
Return nRet 

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³ChStatus  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Status da impressora de cheque                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Tipo da impressora utilizada                       º±± 
±±º          ³ EXPc2 - Retorno do status da impressora de cheque          º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ChStatus( nImpHnd, cTipo, cBuffer )
Local nRet := -1		// Retorno da funcao da dll

cBuffer := Str( nImpHnd )+","+cTipo+","+cBuffer
If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 84, @cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPCHEQUE) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:CHStatus( cTipo )
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_IMPCHEQUE) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 84, @cBuffer)
		EndIf
	EndIf
EndIf
Return nRet
 
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³CHImprime ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza a impressao do cheque                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Indica qual eh o banco do cheque                   º±± 
±±º          ³ EXPc2 - Valor do cheque                                    º±± 
±±º          ³ EXPc3 - Favorecido do cheque                               º±± 
±±º          ³ EXPc4 - Municipio do cheque                                º±± 
±±º          ³ EXPc5 - Data do cheque                                     º±± 
±±º          ³ EXPc6 - Mensagem a ser impressa no cheque                  º±± 
±±º          ³ EXPc7 - Mensagem a ser impressa no verso do cheque         º±± 
±±º          ³ EXPc8 - Valor por extenso do cheque                        º±± 
±±º          ³ EXPc9 - Texto da chancela do cheque                        º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data/Bops/Ver ³Manutencao Efetuada                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºConrado Q ³05/04/07³10    ³BOPS 122711: Alterada a utilização da cham. º±±
±±º          ³        ³      ³SubStr(cUsuario,7,15) por cUserName         º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CHImprime( nImpHnd, cBanco, cValor, cFavorec, cCidade,;
 					cData, cMensagem, cVerso, cExtenso, cChancela )
Local nRet		:= -1										// Retorno da funcao da dll
Local cRet		:= Space(1)									// Retorno do status da impressora
Local cParam	:= ""										// Concatena o comando antes de ser enviado
Local aDadosUsu	:= {}										// Armazena os dados do usuario
Local cUsu		:= cUserName								// Recebe dados do usuario                          
Local nAno		:= 4										// Recebe a qtde de digitos de anos do usuario
Local cMoedaS	:= SuperGetMV( "MV_MOEDA1", ,"REAL" )
Local cMoedaP	:= SuperGetMV( "MV_MOEDAP1", ,"REAIS" )
Local cDataOrig	:= cData  

DEFAULT cExtenso := Space(10)			// Recebe valor por extenso do cheque
DEFAULT cChancela := 'N'				// Verifica se imprimirá chancela

nRet := ChStatus( nImpHnd, '01', @cRet )

 If (CPaisLoc <> 'BRA') .OR. (nRet == 0)
 	  cExtenso:=Extenso(Val(cValor),.F.,,,,.T.,,)
 EndIf
        
// Busca dados do usuário para saber qtos digitos usa no ANO.
 PswOrder(2)
 If PswSeek( cUsu, .T. )
   aDadosUsu := PswRet() // Retorna vetor com informações do usuário
   nAno:= aDadosUsu[1][18]
 EndIf
                                         
 If nAno == 2 
 	cData := SubStr(cData,3,6)
 EndIf

cParam := Str(nImpHnd)+"|"+cBanco+"|"+cValor+"|"+cFavorec+"|"+cCidade+"|"+cData+"|"+cMensagem+"|"+cVerso+"|"+cExtenso+"|"+cChancela+"|"+cPaisLoc

If oImpFisc <> Nil
	
	If Type("oImpFisc:oEcf:lImpCheque") <> "U" .AND. oImpFisc:oEcf:lImpCheque
		oRet := oImpFisc:ImpCheque(	cBanco	, Val(cValor)	, cDataOrig	, cFavorec	,;
									cCidade	, cMensagem		, cExtenso	, cMoedaS	,;
				 					cMoedaP	, cPaisLoc)

		If oRet:lRetorno
			nRet := 0
		EndIf
		
		Return nRet
	EndIf

EndIf

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 77, cParam)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPCHEQUE) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:CHImprime(cBanco, cValor, cFavorec, cCidade, cData, cMensagem, cVerso, cExtenso, cChancela )
	Else
		If IsAutocom(EQUIP_IMPCHEQUE) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 77, cParam)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³CHImprTranºAutor  ³Luiz Felipe Couto    º Data ³  09/11/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza a Impressao de Cheque Transferencia                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³                                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SigaLoja                                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data/Bops/Ver ³Manutencao Efetuada                      	   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºConrado Q ³05/04/07³10    ³BOPS 122711: Alterada a utilização da cham.  º±±
±±º          ³        ³      ³SubStr(cUsuario,7,15) por cUserName          º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CHImprTransf( nImpHnd, cBanco, cValor, cCidade, cData, cAgencia, cConta, cMensagem )

Local nRet 		:= -1 							// Retorno da funcao da dll
Local cRet 		:= Space( 1 )					// Retorno do status da impressora de cheque
Local cParam	:= ""							// Concatena os comandos antes de enviar
Local aDadosUsu := {}							// Armazena os dados do usuario
Local cUsu 		:= cUserName					// Recebe dados do usuario
Local nAno 		:= 4 							// Recebe a qtde de digitos de anos do usuario

nRet := CHStatus( nImpHnd, "01", @cRet )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Busca dados do usuário para saber qtos digitos usa no ANO.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PswOrder( 2 )

If PswSeek( cUsu, .T. )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Retorna vetor com informacoes do usuario³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aDadosUsu 	:= PswRet()
	nAno		:= aDadosUsu[1][18]
Endif
                                         
If nAno == 2 
	cData := SubStr( cData, 3, 6 )
Endif

cParam := Str( nImpHnd ) + "|" + cBanco + "|" + cValor + "|" + cCidade + "|" + cData + "|" + cAgencia + "|" + cConta + "|" + cMensagem

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica o parametro MV_AUTOCOM³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ChkAutocom() == DLL_SIGALOJA
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se a SIGALOJA.DLL esta aberta³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	CheckDLLLj()

	nRet := ExeDLLRun2( nHnd, 113, cParam )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom( EQUIP_IMPCHEQUE ) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:CHImprTransf( cBanco, cValor, cCidade, cData, cAgencia, cConta, cMensagem )
	Else
		If IsAutocom( EQUIP_IMPCHEQUE ) == EQUIP_DLL_SIGALOJA
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se a SIGALOJA.DLL esta aberta³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			CheckDLLLj()

			nRet := ExeDLLRun2( nHnd, 113, cParam )
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³CHFechar  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza o fechamento da impressora de cheque               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Porta de comunicacao usada pela impressora cheque  º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CHFechar( nImpHnd, cPorta )
Local nRet := -1		// funcao de retorno da dll

If oImpFisc <> Nil
	nRet := 0
	Return nRet
EndIf    

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj(.F.)									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExeDLLRun2(nHnd, 78, Str(nImpHnd)+","+cPorta)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPCHEQUE) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:CHFechar( cPorta )
	Else
		If IsAutocom(EQUIP_IMPCHEQUE) == EQUIP_DLL_SIGALOJA
			CheckDLLLj(.F.)								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2(nHnd, 78, Str(nImpHnd)+","+cPorta)
		EndIf
	EndIf
EndIf

nHdlCH := -1
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³CHListar  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Lista as impressoras de cheques disponiveis                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Recebe as impressoras homologadas pela SIGALOJA.DLLº±± 
±±º          ³ EXPl1 - Flag que controla exibicao de msg                  º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador³ Data   ³  BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Thiago H.  ³09/04/07³ 121704³Chama a funcao CriaAutocom() para         ³±±
±±³           ³        ³       ³instanciar objeto oAutocom                ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CHListar( cBuffer, lMostraMsg )
Local nRet := -1					// Retorno da funcao da dll
Local cBuffer1 := Space(2000)		// Recebe a lista da SIGALOJA.DLL
Local cBuffer2 := Space(2000)		// Recebe a lista da AUTOCOM
Local cBuffer3 := ""				// Recebe a lista da TOTVSAPI
Local nMVAUTOCOM := ChkAutocom()	// Verifica o parametro MV_AUTOCOM
Local nCount   := 1					// Variavel utiliza no For...

If CriaTotApi()
	oTovsApi := GetTotApi() 
	oRet := oTovsApi:ListImpChq()	
	
	For nCount := 1 To oRet:Count()
		cBuffer3 += '"' + oRet:Elements(nCount):cDescricao + '",' + oRet:Elements(nCount):cPais + ','
	Next
EndIf

If nMVAUTOCOM == DLL_SIGALOJA .OR. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM
	//executa metodos da sigaloja.dll
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 79, @cBuffer1 )
Else
	nRet := 0
EndIf

If nRet==0 .AND. nMVAUTOCOM == DLL_SIGALOJA_AUTOCOM .OR. nMVAUTOCOM == DLL_AUTOCOM
	//Chama o metodo para isntanciar o objeto oAutocom
	If CriaAutocom()
		If GetRemoteType() == REMOTE_LINUX .AND. File(GetClientDir()+"libautocom.so")
			nRet := oAutocom:CHListar()
			cBuffer2 := oAutocom:cBuffer
		Elseif	GetRemoteType() <> REMOTE_LINUX .And. File( GetClientDir() + cDLLAUTOCOM )
	 		nRet := oAutocom:CHListar()
	 		cBuffer2 := oAutocom:cBuffer
		Endif
	Endif
EndIf

If nRet==0
	If Empty(cBuffer1)
		cBuffer1 := cBuffer3 	
	Else
		If Substr(AllTrim(cBuffer1), Len(AllTrim(cBuffer1)), 1) == ','
			cBuffer1 += cBuffer3		
		Else
			cBuffer1 += ',' + cBuffer3
		EndIf
	EndIf
	cBuffer := JuntaLista(cBuffer1, cBuffer2)		// Junta as listas da SIGALOJA e AUTOCOM
EndIf

Return nRet

//-------------------------------------------------------------------
/*/{Protheus.doc} LJDLLVer
Controle de versoes da DLL Fiscal
@type Function
@param lAutoCom , lógico , Verifica versao da AutoCom.dll ?
@param lTotvsApi , lógico , Verifica versao da TotvsApi.dll ?
@author  Varejo
@version P11.8
@since   16/04/2001
@return  cRet , caracter , versao da DLL
@sample

	9.9.99.99
	- - -- --
	| |  |  |
	| |  |  +--> Build
	| |  +-----> Release
	| +--------> Versão
	+----------> ID Interno

Nova Regra para alteração da versão da todas as DLL's:

--> Build : será alterado sempre que houver uma alteração simples ou pontual na DLL 
(o checkin de DLL)

--> Release : quando houver uma grande alteração que necessita da atualização
da atualização geral, está se faz maior e impede a entrada do sistema além de 
zerar a build.

Ex.: 
	Alteração de Build: 0.3.139.35 para 0.3.139.36 - permite entrada no sistema
	  					sem atualizar
	  					
	Alteração de Release: 0.3.139.XX para 0.3.140.XX - alem de mudar Release 
						( 139 para 140 ), zero a build para esta release.
						Ex.: 0.3.139.35 para 0.3.140.01
/*/
//-------------------------------------------------------------------
FUNCTION LJDLLVER(lAutocom, lTotvsApi)
Local cRet:= ""

DEFAULT lAutocom	:= .F.
DEFAULT lTotvsApi	:= .F.

If ExistFunc("IsRmt64") .AND. IsRmt64()
	cRet := "0.4.0.0"
	
	If lAutocom
		cRet:= "4.0.0.0"
	EndIf
	
	If lTotvsApi
		cRet:= "2.0.0.0"
	EndIf
Else
	cRet := "0.3.145.10"
	
	If lAutocom
		cRet:= "3.4.1.7"
	EndIf
	
	If lTotvsApi
		cRet:= "1.0.17.2"
	EndIf
EndIf

Return cRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Fun‡„o	 ³GavetaCup	³ Autor ³ Mauro Mancio  	    ³ Data ³ 21/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Abre a gaveta de dinheiro conectada na Impressora nFiscal   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³Sigaloja										              ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GavetaCup
Lj010InitPrint("C")
@ PRow(), PCol() PSay Chr(27) + Chr(118) + Chr(140)
LJ010EndPrint("C")
Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³LJPaisLoc	³ Autor ³ Gustavo Henrique	    ³ Data ³ 21/08/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Disponibiliza para utilizacao apenas os equipamentos do pais³±±
±±³          ³especificado em cPaisLoc.                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³Sigaloja										              ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LJPaisLoc( cBuffer, lEcf )
Local cNovoBuffer := ""		// Buffer com o tratamento de localizacao
Local cPeriferico := ""		// Periferico
Local cPaises	  := ""		// Lista de Paises do periferico
Local cCodEcf     := ""     // Codigo do ECF junto ao PAF-ECF 
Local nPos		  := 0		// Posicao de termino do nome do periferico
Local nPosPais	  := 0		// Posicao de termino da lista dos paises
Local nPosCodEcf  := 0		// Posicao de termino do codigo do ECF
   
Default lEcf := .F.
                 
While Len( cBuffer ) # 0

	nPos        := At( ",", cBuffer )			
	cPeriferico := SubStr( cBuffer, 1, (nPos-1) )	// Nome do periferico
	
	nPosPais    := At( ",", SubStr( cBuffer, nPos + 1 ) )
	cPaises     := SubStr( cBuffer, nPos+1, IIf( nPosPais == 0, Len( cBuffer ), nPosPais-1 ) )	
	
	If !(cPaisLoc$cPaises .OR. cPaises == "")
		cBuffer := SubStr( cBuffer, IIf( nPosPais == 0, Len(cBuffer)+1, nPos+1 ) )
		Loop
	EndIf
		
	If lEcf 
		nPosCodEcf  := At( ",", SubStr( cBuffer, nPos + nPosPais + 1 ) )
		cCodEcf     := SubStr( cBuffer, nPos+nPosPais+1, IIf( nPosCodEcf == 0, Len( cBuffer ), nPosCodEcf-1 ) )	
		
		cBuffer := SubStr( cBuffer, IIf( nPosCodEcf  == 0, Len(cBuffer)+1, nPosCodEcf+nPosPais+nPos+1 ) )
	Else
		cBuffer := SubStr( cBuffer, IIf( nPosPais == 0, Len(cBuffer)+1, nPosPais+nPos+1 ) )
	EndIf
	
	If (cPaisLoc $ cPaises) .OR. Empty( cPaises )
		cNovoBuffer += cPeriferico + ","
	EndIf
	
End

// Retorna apenas os perifericos do pais em cPaisLoc
cBuffer := Left( cNovoBuffer, Len( cNovoBuffer ) - 1 )

Return NIL

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Fun‡„o    ³ExecDLLRet³ Autor ³ Cesar Eduardo Valadao ³ Data ³12/12/2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Executa uma Funcao na DLL, Tratando o Retorno, Pois na 6.09 ³±±
±±³          ³Chr(0) Eh Permitido.                                        ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ExecDLLRet( nHnd, nFuncao, cBuffer )
Local nRet := -1 		// Retorno da funcao da dll

DEFAULT cBuffer := ""	// Concatena os parametros da funcao

If nHnd >= 0 
	nRet    := ExeDLLRun2(nHnd, nFuncao, @cBuffer)
	If At(Chr(0),cBuffer) > 0
		cBuffer := Substr(cBuffer, 1, At(Chr(0),cBuffer)-1)
	Endif
Endif
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³CodSitef  ºAutor  ³Mauro Mancio        º Data ³  03/09/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para utilizacao da SIGALOJA.DLL                      º±±
±±º          ³Codifica as mensagens enviadas ao SITEF                     º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CodSitef( cBuffer )
Local nRet  := -1  				// Retorno da funcao da dll
Local nSize := Len(cBuffer)		// Variave lde controle de looping
Local nPos  := 0 				// controle de loop
Local cTemp := ""				// Retorno da funcao

// A partir do ID 0.2.67.22, o LOJXECF passa a enviar para a DLL somente numeros decimais
// representando o caracter atraves das funcoes CodSitef() e DecSitef().
// Ex: Foi gerado a string Chr(0)+Chr(48)+Chr(1)...
//     O LOJXECF envia a string '000'+'048'+'001'... Esta string de numeros
// eh tratada dentro da SIGALOJA.DLL

For nPos := 1 To nSize
	cTemp += StrZero(Asc(Substr(cBuffer,nPos,1)),3,0)
Next nPos

cBuffer := cTemp
CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta    
nRet := ExeDLLRun2(nHnd, 90, @cBuffer)
cTemp := ""

For nPos := 0 To (nSize)-1
	cTemp += Chr(Val(Substr(cBuffer,(nPos*3)+1,3)))
Next nPos

Return cTemp

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DecSitef  ºAutor  ³Mauro Mancio        º Data ³  03/09/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para utilizacao da SIGALOJA.DLL                      º±±
±±º          ³Decodifica as mensagens recebidas do SITEF                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function DecSitef( cBuffer )
Local nRet  := -1 				// Retorno da funcao da dll 
Local nSize := 	Len(cBuffer)	// Controle de loop
Local nPos  := 0 				// controle de loop
Local cTemp := ""				// Retorno da funcao

// A partir do ID 0.2.67.22, o LOJXECF passa a enviar para a DLL somente numeros decimais
// representando o caracter atraves das funcoes CodSitef() e DecSitef().
// Ex: Foi gerado a string Chr(0)+Chr(48)+Chr(1)...
//     O LOJXECF envia a string '000'+'048'+'001'... Esta string de numeros
// eh tratada dentro da SIGALOJA.DLL

For nPos := 1 To nSize
	cTemp += StrZero(Asc(Substr(cBuffer,nPos,1)),3,0)
Next nPos

cBuffer := cTemp
CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta    
nRet := ExeDLLRun2(nHnd, 91, @cBuffer)
cTemp := ""                         

For nPos := 0 To (nSize)-1
	cTemp += Chr(Val(Substr(cBuffer,(nPos*3)+1,3)))
Next nPos

Return( cTemp )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³LjStr2ArraºAutor  ³Vendas Cliente      º Data ³  06/02/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³Funcao que converte string em array desconsiderando o carac-º±±
±±º          ³ter "|"(pipe)                                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Loc. Argentina                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function LjStr2Array( cString )
Local aReturn := { }		// Armazena o retorno da funcao
Local cAux    := cString 	// Variavel auxiliar
Local nPos    := 0			// Variavel auxiliar

If cPaisLoc == "ARG" .AND. AllTrim(LjGetStation("LG_IMPFISC")) == "ECF EMULATOR"
	While At( "|", cAux ) > 0
		nPos := At( "|", cAux )
		Aadd( aReturn, SubStr( cAux, 1, nPos-1 ) )
		cAux := SubStr( cAux, nPos+1 )
	End
Else
	While At( chr(28), cAux ) > 0
		nPos := At( chr(28), cAux )
		Aadd( aReturn, SubStr( cAux, 1, nPos-1 ) )
		cAux := SubStr( cAux, nPos+1 )
	End
EndIf

Aadd( aReturn, cAux )

Return( aReturn )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFPercepcaºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Percepcoes - Resgistra as percepcoes (Loc. Argentina)      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Aliquota de IVA                                    º±± 
±±º          ³ EXPc2 - Texto a ser impresso                               º±± 
±±º          ³ EXPc3 - Valor do comprovante                               º±± 
±±º          ³ EXPa1 - Exclusivo para Autocom                             º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IFPercepcao(nImpHnd, cAliqIVA, cTexto, cValor, aRet)
Local nRet := -1		// Retorno da funcao da dll
Local cBuffer  := Str(nImpHnd)+"|"+cAliqIVA+"|"+cTexto+"|"+cValor		// Concatena o comando antes do envio

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 41, @cBuffer)    
	aRet := LjStr2Array(cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFPercepcao(cAliqIVA, cTexto, cValor, aRet)
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 41, @cBuffer)    
			aRet := LjStr2Array(cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFAbrirDNFºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Abrir documento nao fiscal hoologado (Loc. Argentina)      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Tipo do documento                                  º±± 
±±º          ³ EXPc2 - Cliente do documento                               º±±   
±±º          ³ EXPc3 - Cabecalho do comprovante                           º±± 
±±º          ³ EXPc1 - Origem do documento nao fiscal                     º±± 
±±º          ³ EXPa1 - Retorno da funcao                                  º±±    
±±º          ³ EXPc5 - cTipoImp - Tipo de Impressão T: Ticket  
±±º          ³                     S: Página Completa (default)           º±±    
±±º          ³ EXPc6 - cIdDoc = "x"  texto de até 20 caracteres           º±±    
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼*/
Function IFAbrirDNFH(nImpHnd, cTipoDoc, cCliente, cCabec, cDocOrigem, aRet, cTipoImp, cIdDoc )
Local nRet := -1 		// Retorno da funcao da dll
Local cBuffer := "" 	// Concatena o comando antes de enviar
Local nPos    := 0		// Variavel auxiliar
DEFAULT cTipoImp := ""        
DEFAULT cIdDoc   := ""

While .T.
	nPos := At(",",cCliente)
	If nPos == 0
		Exit
	Else
		cCliente := Stuff(cCliente,nPos,1," ")
	EndIf
End 

cBuffer  := Str(nImpHnd)+","+cTipoDoc+","+cCliente+","+cCabec+","+cDocOrigem+","+cTipoImp+","+cIdDoc 
If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 42, @cBuffer)    
	aRet := LjStr2Array( cBuffer )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFAbreDNFH(cTipoDoc, cCliente, cCabec, cDocOrigem,cTipoImp,cIdDoc )          
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 42, @cBuffer)    
			aRet := LjStr2Array( cBuffer )
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³CloseDNFH ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Fechar documento nao-fiscal homologado (Loc. Argentina)    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPa1 - Retorno da LjStr2Array                             º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IFFecharDNFH(nImpHnd, aRet)
Local nRet := -1 				// Retorno da funcao da dll
Local cBuffer  := Str(nImpHnd)	// Retorno da impressora

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 43, @cBuffer)    
	aRet := LjStr2Array( cBuffer )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFFechDNFH() 
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 43, @cBuffer)    
			aRet := LjStr2Array( cBuffer )
		EndIf
	EndIf
EndIf
Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³Reprint   ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Reimpressao do ultimo documento emitido (loc. Argentina)   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IFReimprime(nImpHnd)
Local nRet := -1  				// Retorno da funcao da dll
Local cBuffer := Str(nImpHnd)	// Retorno da impressora

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 45, @cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFReimprime() 
		cBuffer := oAutocom:cBuffer
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 45, @cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³ReceiptTexºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Imprime linhas no recibo (Loc. Argentina)                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Texto a ser impresso no recibo                     º±± 
±±º          ³ EXPa1 - Retorno da LjStr2Array                             º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFRecibo(nImpHnd, cTexto, aRet)
Local nRet := -1   							// Retorno da funcao da dll
Local cBuffer  := Str(nImpHnd)+","+cTexto	// Concatena antes de enviar o comando

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 44, @cBuffer)    
	aRet  := LjStr2Array(cBuffer)
Else
	//----------------------------------------------------------------------------------
	//| Pesquisa se o modelo do equipamento existe na AUTOCOM                          |
	//| Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. |
	//----------------------------------------------------------------------------------
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFRecibo(cTexto)
		cBuffer := oAutocom:cBuffer	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 44, @cBuffer)    
			aRet  := LjStr2Array(cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFMemTrab ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Consulta a memoria de trabalho                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPa1 - Retorno da LjStr2Array                             º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFMemTrab(nImpHnd, aRet)
Local nRet := -1								// Retorno da funcao da dll
Local cBuffer  := Str(nImpHnd)+","+Space(1000)	// Concatena o comando antes de enviar

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet  := ExecDLLRet(nHnd, 46, @cBuffer)    
	aRet  := LjStr2Array(cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFMemTrab()
		cBuffer := oAutocom:cBuffer	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet  := ExecDLLRet(nHnd, 46, @cBuffer)    
			aRet  := LjStr2Array(cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFCapacityºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Capacidade restante (Loc. Argentina)                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPa1 - Retorno da LjStr2Array                             º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFCapacity(nImpHnd, aRet)
Local nRet := -1 								// Retorno da funcao da dll
Local cBuffer  := Str(nImpHnd)+","+Space(1000)	// Concatena antes de enviar o comando

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet  := ExecDLLRet(nHnd, 47, @cBuffer)    
	aRet  := LjStr2Array(cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFCapacity()
		cBuffer := oAutocom:cBuffer	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet  := ExecDLLRet(nHnd, 47, @cBuffer)    
			aRet  := LjStr2Array(cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFAbreNotaºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Abertura do documento Nota de Debito                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Retorno da impressora                              º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFAbreNota( nImpHnd, cBuffer )
Local nRet := -1  						// Retorno da funcao da dll
cBuffer := Str(nImpHnd)+","+cBuffer		// Envia um buffer e já prepara o recebimento

If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
	CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 48, @cBuffer)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
	//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
		nRet := oAutocom:IFAbreNota(cCliente)
		cBuffer := oAutocom:cBuffer	
	Else
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
			CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExecDLLRet(nHnd, 48, @cBuffer)
		EndIf
	EndIf
EndIf
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFRAbrCp  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz a abertura do cupom de restaurante                     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Informa a mesa que sera aberta                     º±± 
±±º          ³ EXPc2 - Informa o cliente da mesa                          º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFRAbrCp( nImpHnd, cMesa, cCliente )
Local nRet := -1		// Retorno da funcao da dll

cBuffer := Str(nImpHnd)+","+cMesa+","+cCliente

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 100, @cBuffer)

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IfRRegIt  ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Registra itens de venda em impressora de restaurante       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Mesa do registro do item                           º±± 
±±º          ³ EXPc2 - Codigo do item                                     º±± 
±±º          ³ EXPc3 - Descricao do item                                  º±± 
±±º          ³ EXPc4 - Aliquota do item                                   º±±
±±º          ³ EXPc5 - Quantidade do item                                 º±± 
±±º          ³ EXPc6 - Valor do item                                      º±±
±±º          ³ EXPc7 - Acrescimo                                          º±± 
±±º          ³ EXPc8 - Desconto                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFRRegIt( nImpHnd, cMesa, cCodigo, cDescricao, cAliquota, cQtde, cVlrUnit, Acres, Desc )
Local nRet := -1		// Retorno da funcao da dll
DEFAULT Acres := "0"	// Valor do acrescimo
DEFAULT Desc := "0"		// Valor do desconto

cBuffer := Str(nImpHnd)+","+cMesa+","+cCodigo+","+cDescricao+","+cAliquota+","+cQtde+","+cVlrUnit+","+Acres+","+Desc

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 101, @cBuffer)

Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³IFRCancIt ºAutor  ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Cancela itens de venda em impressora restaurante           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Mesa do item cancelado                             º±± 
±±º          ³ EXPc2 - Codigo do item cancelado                           º±± 
±±º          ³ EXPc1 - Descricao do item cancelado                        º±± 
±±º          ³ EXPc2 - Aliquota do item cancelado                         º±± 
±±º          ³ EXPc1 - Quantidade do item cancelado                       º±± 
±±º          ³ EXPc2 - Valor do item cancelado                            º±± 
±±º          ³ EXPc1 - Acrescimo                                          º±± 
±±º          ³ EXPc2 - Desconto                                           º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IFRCancIt( nImpHnd, cMesa, cCodigo, cDescricao, cAliquota, cQtde, cVlrUnit, Acres, Desc )
Local nRet := -1      	// Retorno da funcao da dll
DEFAULT Acres := "0"	// Valor do acrescimo
DEFAULT Desc := "0"		// Valor do desconto

cBuffer := Str(nImpHnd)+","+cMesa+","+cCodigo+","+cDescricao+","+cAliquota+","+cQtde+","+cVlrUnit+","+Acres+","+Desc

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 111, @cBuffer)

Return( nRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o	 |IFRConfM    ºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Faz a conferencia dos itens vendidos em uma mesa              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA/FRONT LOJA                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Function IFRConfM( nImpHnd, cMesa, Acres, Desc )
Local nRet := -1		// Retorno da funcao da dll
DEFAULT Acres := "0"	// Valor do acrescimo
DEFAULT Desc  := "0"	// Valor do desconto

cBuffer := Str(nImpHnd)+","+cMesa+","+Acres+","+Desc

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 102, @cBuffer)

Return( nRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o	 |IFRImpCdp   ºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Faz a impressao do cardapio                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA/FRONT LOJA                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Function IFRImpCdp( nImpHnd )
Local nRet := -1		// Retorno da funcao da dll

cBuffer := Str(nImpHnd)

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 103, @cBuffer)

Return( nRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o	 |IFRLeCdp    ºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Faz a leitura do cardapio via porta serial                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA/FRONT LOJA                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Function IFRLeCdp( nImpHnd )
Local nRet := -1		// Retorno da funcao da dll

cBuffer := Str(nImpHnd)

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 104, @cBuffer)

Return( nRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o	 |IFRLeMesas  ºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Faz a leitura das mesas abertas                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA/FRONT LOJA                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Function IFRLeMesas( nImpHnd, cBuffer )
Local nRet := -1		// Retorno da funcao da dll

cBuffer := Str(nImpHnd)+','+ Space(2000)

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 105, @cBuffer)

Return( nRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o	 |IFRRelMes   ºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Imprime relatorio das mesas que estao abertas                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA/FRONT LOJA                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Function IFRRelMes( nImpHnd, cTipo )
Local nRet := -1		// Retorno da funcao da dll
DEFAULT cTipo := "0"	// Tipo do relatorio

cBuffer := Str(nImpHnd)+","+cTipo

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 112, @cBuffer)

Return( nRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o	 |IFRLeRegVendºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Retorna os registros de venda da mesa pela porta serial.      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA/FRONT LOJA                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Function IFRLeRegVend( nImpHnd, cMesa )
Local nRet := -1		// Retorno da funcao da dll

cBuffer := Str(nImpHnd)+","+cMesa

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 106, @cBuffer)

Return( nRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o	 |IFRFchCup   ºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Fecha o cupom fiscal na impressora restaurante com acréscimo  º±±
±±º          ³ou desconto, usando apenas uma forma de pagamento		        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Function IFRFchCup( nImpHnd, cPagamento, cAcres, cDesc, cMensagem )
Local nRet := -1		// Retorno da funcao da dll
DEFAULT cAcres := "0"	// Valor do acrescimo
DEFAULT cDesc  := "0"	// Valor do desconto

cBuffer := Str(nImpHnd)+","+cPagamento+","+cAcres+","+cDesc+","+cMensagem

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 107, @cBuffer)

Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o	 |IFRFCDiv    ºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Permite fechar o cupom fiscal com formas de pagamento e permitº±±
±±º          ³dividir a conta por todos os clientes. (no maximo 20)         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Function IFRFCDiv( nImpHnd   , cNumeroCupons, cAcres  , cDesc, ;
                   cPagamento, cValorCliente, cCliente )
Local nRet := -1		// Retorno da funcao da dll
DEFAULT cAcres := "0"	// Valor do acrescimo
DEFAULT cDesc  := "0"	// Valor do desconto

cBuffer := Str(nImpHnd)+","+cNumeroCupons+","+cAcres+","+cDesc+","+cPagamento+","+cValorCliente+","+cCliente

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 108, @cBuffer)

Return( nRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o	 |IFRTrfMesa  ºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Faz a transferência dos registros de venda da mesa de origem  º±±
±±º          ³para a mesa de destino 								        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Function IFRTrfMesa( nImpHnd, cOrigem, cDestino )
Local nRet := -1		// Retorno da funcao da dll

cBuffer := Str(nImpHnd)+","+cOrigem+","+cDestino

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 109, @cBuffer)

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFun‡„o	 |IFRTrfItem  ºAutor  ³Microsiga           º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Faz a transferência dos registros de venda da mesa de origem  º±±
±±º          ³para a mesa de destino 								        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA                                                     º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Function IFRTrfItem( nImpHnd  , cOrigem , cCodigo , cDescricao, ;
                     cAliquota, cQtde   , cVlrUnit, cAcres    , ;
                     cDesc    , cDestino )
Local nRet := -1		// Retorno da funcao da dll
DEFAULT cAcres := "0"	// Valor do Acrescimo
DEFAULT cDesc  := "0"	// Valor do desconto

cBuffer := Str(nImpHnd)+","+cOrigem+","+cCodigo+","+cDescricao+","+cAliquota+","+cQtde+","+cVlrUnit+","+cAcres+","+cDesc+","+cDestino

CheckDLLLj() // Verifica se a SIGALOJA.DLL esta aberta
nRet := ExecDLLRet(nHnd, 110, @cBuffer)

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFGerRegTipoEºAutor  ³Venda & Crm         º Data ³ 11.08.2009  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gera Arquivo de Registro Tipo E para Ato Cotepe 17/04       	 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                                  º±± 
±±º          ³ EXPc1 - Informa o tipo do parametro (Data ou CRZ)             º±± 
±±º          ³ EXPc2 - Parametro inical                                      º±± 
±±º          ³ EXPc3 - Parametro final                                       º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK      º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                          º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFGerRegTipoE( nImpHnd, cTipo, cInicio, cFinal , cBinario)
Local aFile  := {}   	// Array com todos os aquivos de uma determinada pasta
Local nRet   := -1		// Retorno da funcao da dll
Local nX	 := 0
Local cRazao := ""
Local cEnd   := ""  
Local cPath  := ""		// Caminho onde devera ser salvo o arquivo do Paf-Ecf
Local cPathMFD:=""
Local cAux   := ""		// Pega caminho e nome do arquivo gerado pela impressora
Local cNameFile := ""
Local cArqINI	:= ""
Local cPathOrig	:= ""
Local cPathBin	:= ""
Local cNomeArqBin:= 'DOWNLOAD.BIN'
Local lContinua	:= .T.
Local lExecDownMFD:= .F.
Local cModelo	:= ""
Local lLjNfPafEcf:= LjNfPafEcf(SM0->M0_CGC)

cInicio := AllTrim(cInicio)
cFinal	:= AllTrim(cFinal)

If oImpFisc <> Nil
	If lLjNfPafEcf
		cArqINI	:= GetClientDir() +"SIGALOJA.INI"
		cPathOrig:= GetPvProfString("PAF-ECF","patharqmfd"	, PAF_DirDef , cArqINI) + "\"
		
		/*Apaga os arquivos gerados pelo ECF*/
		cPath := cPathOrig
		aFile := Directory(cPath + "*.*")
		If Len(aFile) > 0
			AEVAL( aFile, {|aFile| FERASE(cPath + aFile[F_NAME])} )
		EndIf
		
		/*Pega path onde sera salvo arquivo e Apaga todos os arquivos do diretorio */
		cPath := GetPvProfString("PAF-ECF","patharquivo", PAF_DirDef , cArqINI) + PAF_ARQMFD + "\"
		cPathMFD := cPath	
		aFile := Directory(cPath + "*.*")
		If Len(aFile) > 0
			AEVAL( aFile, {|aFile| FERASE(cPath + aFile[F_NAME])} )
		EndIf
	EndIf
	
	/*Somente o modelo novo da Epson contem esse comando*/
	cModelo := AllTrim(LjGetStation("IMPFISC"))
	If (LJDLLVER( .F. , .T. ) >= "1.0.17.1") .And. ("EPSON" $ cModelo) .And.;
	 	cBinario == "1" .And. (("T800" $ cModelo) .OR. ("T900" $ cModelo))
	 	  
		lExecDownMFD := .T.
	EndIf
	
	//Pega o Path do arquivo gerado	
	oRet := oImpFisc:PegPathTipoE(cBinario)
	
	If oRet:lRetorno
		//Pega caminho e nome do arquivo gerado pela impressora				
		cAux := AllTrim(oRet:oRetorno)
	    If cAux == "C:\" .OR. Empty(cAux)
	    	If lExecDownMFD
	    		cAux := "C:\" + cNomeArqBin
	    	Else
	    		cAux := "C:\Cotepe1704_CTP.txt"
	    	EndIf
	    EndIf
	    
	    If lExecDownMFD
	    	oRet := oImpFisc:DownloadMFD(cBinario,cTipo,cInicio,cFinal)
	    Else
			If cTipo == "1"
				oRet := oImpFisc:TipoEData(cInicio, cFinal,cAux)	
			Else
				oRet := oImpFisc:TipoECrz(cInicio, cFinal,cAux)
			EndIf
		EndIf
				
		If oRet:lRetorno
			//Verifica se eh Paf-Ecf
			If lLjNfPafEcf
				If cBinario == "1"
					cPathBin := cPathOrig + "*.bin"
					aFile := Directory(cPathBin)
					For nX := 1 to Len(aFile)
						If "BIN" $ Upper(aFile[nX][F_NAME])
							cPathBin := cPathOrig + aFile[nX][F_NAME]
							Exit
						EndIf
					Next nX
					
					If File(cPathBin)
						If __CopyFile(cPathBin,cPathMFD+cNomeArqBin)
							LjGrvLog( Nil, " Arquivo copiado com sucesso [" + cPathMFD + cNomeArqBin + "]")
							Conout(" Arquivo copiado com sucesso [" + cPathMFD + cNomeArqBin + "]")
						EndIf
					Else
						LjGrvLog(Nil,"Arquivo .BIN não encontrado no caminho [" + cPathBin + "]")
						ConOut("Arquivo .BIN não encontrado no caminho [" + cPathBin + "]")
					EndIf
				Else				    
				    cNameFile := Space(30)
				    IFPegSerie(nHdlECF, @cNameFile)
				    
				    //Nome do Arquivo no padrão do PAF-ECF
				    cNameFile := "MFD" + cNameFile + "_" +  StrTran(DtoC(dDatabase),'/') + "_" + StrTran(Time(),":") + ".TXT"
			    	
					//Copia e renomeia arquivo para a pasta do Paf-Ecf		
					If __CopyFile(cAux, cPathMFD + cNameFile)
						nRet := 0
					EndIf
				EndIf
			Else
				MsgInfo(STR0076 + cAux,"Arquivo MFD") //"Arquivo Gerado com Sucesso, pasta: "
				nRet := 0 
			EndIf
		EndIf
	EndIf
	
	lContinua := .F.
EndIf

If lContinua
	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2(nHnd, 121, Str(nImpHnd)+","+cTipo+","+cInicio+","+cFinal+","+cRazao+","+cEnd+","+cBinario)
	Else		
		/* Pesquisa se o modelo do equipamento existe na AUTOCOM                        
		 Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. */
		If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
			/*Necessario Implementar dentro da Autocom. */
			nRet := oAutocom:IFGerRegTipoE( cTipo, cInicio, cFinal, cRazao, cEnd , cBinario)
		Else                                             	
			If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				nRet := ExeDLLRun2(nHnd, 121, Str(nImpHnd)+","+cTipo+","+cInicio+","+cFinal+","+cRazao+","+cEnd+","+cBinario)
			EndIf
		EndIf
	EndIf     
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFun‡„o	 |LJMsgDll	  ºAutor  ³Cleber Martinez     º Data ³  17/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³ Tela de Mensagem c/ detalhes sobre atualizacao da dll		º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA                                                     º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Function LJMsgDll(cDllVer, nTipoMsg)
Local oDlgDll
Local oFntMsg
Local oFntTit
// variaveis para o texto de detalhe
Local oMsgDet
Local cMsgDet := ''
Local oBmp
Local lTelaDetalhe :=.F.
Local cAviso := ""

If nTipoMsg == 1
	// "Existe incompatibilidades entre a versão do Repositório Protheus e a DLL Fiscal."
	// "Por favor, atualize a DLL Fiscal."	
	cAviso := STR0018+Chr(10)+STR0019+CHR(10)+cDllVer+CHR(10)
ElseIf nTipoMsg == 2
	// "Existe incompatibilidades entre a versão do Repositório Protheus e a DLL Fiscal."
	// "Por favor, atualize o Repositório Protheus."	
	cAviso := STR0018+Chr(10)+STR0020+CHR(10)+cDllVer+CHR(10)	
Endif

cMsgDet := STR0039 + Chr(10) //'O controle de identificação das DLLs Fiscais é composto da seguinte forma: '
cMsgDet += STR0040 + Chr(10) //'x.yy.ww.zz, onde: '
cMsgDet += STR0041 + Chr(10) //"x - ID Interno"
cMsgDet += STR0042 + Chr(10) //'Não é possível efetuar o controle sem essa primeira parte da numeração. '
cMsgDet += STR0043 + Chr(10) //'yy - Versão '
cMsgDet += STR0044 + Chr(10) //'ww - Release : Identificador para novos modelos, novas funções na DLL' 
cMsgDet += STR0045 + Chr(10) //'zz - Build : Identificador que permite compatibilização das funções do RPO com as contidas na DLL.'
cMsgDet += STR0046 + Chr(10) //'A verificação da build (ZZ) será efetuada ao entrar no sistema, e se os números forem incompatíveis o acesso será permitido.'
cMsgDet += STR0047 + Chr(10) //'A validação da Release (WW) será efetuada e se números forem incompatíveis o acesso NÃO será permitido. '
cMsgDet += STR0048 + Chr(10) //'assim, quando o protheus estiver utilizando a Build 0.2.40.01 poderá ser utilizada a SIGALOJA.DLL com identificação 0.2.40.XX.'

DEFINE MSDIALOG oDlgDll TITLE OemtoAnsi(STR0021) FROM 0,0 TO 130,600 PIXEL
DEFINE FONT oFntTit NAME "Arial"  SIZE 6,16	BOLD
DEFINE FONT oFntMsg NAME "Arial"  SIZE 5,15	

@ 0,0  BITMAP oBmp RESNAME "LOGIN" oF oDlgDll SIZE 100,600 NOBORDER WHEN .F. PIXEL
@05,55 TO 45,300 PROMPT OemtoAnsi(STR0049) PIXEL		//"AJUDA"
@10,60 SAY OemtoAnsi(cAviso) PIXEL SIZE 240,200 FONT oFntMsg    

@50,200 BUTTON STR0050 PIXEL ACTION oDlgDll:End()		//"Ok"
@50,230 BUTTON STR0051 PIXEL ACTION If(!lTelaDetalhe,;	//"Detalhes"
		(oDlgDll:ReadClientCoors(.T.),oDlgDll:Move(oDlgDll:nTop,oDlgDll:nLeft,oDlgDll:nWidth,oDlgDll:nHeight+165,,.T.),lTelaDetalhe:=.T.),;
		(oDlgDll:ReadClientCoors(.T.),oDlgDll:Move(oDlgDll:nTop,oDlgDll:nLeft,oDlgDll:nWidth,oDlgDll:nHeight-165,,.T.),lTelaDetalhe:=.F.))

@ 67,55 TO 140,300 PROMPT OemtoAnsi(STR0052) PIXEL		//'Informações da DLL Fiscal'
@ 73,55 GET oMsgDet VAR cMsgDet FONT oFntMsg MEMO size 245,65  PIXEL 

ACTIVATE MSDIALOG oDlgDll CENTERED

Return NIL

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³LJStrToArr³ Autor ³ Cesar Eduardo Valadao ³ Data ³01/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Transforma uma lista separada por "," em array             ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LJStrToArr(cLista)
Local nPos				// Variavel de loop
Local aLista := {}		// Retorno da funcao

While Len(cLista)<>0
	If (nPos:=At(",",cLista))<>0
		aAdd(aLista, Subs(cLista, 2, nPos-3))
		cLista := Subs(cLista, nPos+1 )
	Else
		If Left(cLista,1)=='"'
			aAdd(aLista, Subs(cLista, 2, len(cLista)-2) )
		Else
			aAdd(aLista, cLista )
		EndIf
		cLista := ""
	EndIf
End

Return aLista

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³LJArrToStr³ Autor ³ Cesar Eduardo Valadao ³ Data ³01/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Transforma um array em uma lista separada por ","          ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LJArrToStr(aLista)
Local nI   := 0		// controle de loop 
Local cRet := ""	// Retorno da funcao

For nI := 1 To Len(aLista)
	cRet += '"'+aLista[nI]+'",'
Next nI

cRet := Substr(cRet, 1, Len(cRet)-1)

Return cRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³JuntaLista³ Autor ³ Cesar Eduardo Valadao ³ Data ³01/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Junta a lista de equipamentos homologados na               ³±±
±±³          ³ AUTOCOM.DLL/SO com a SIGALOJA.DLL                          ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function JuntaLista(cBuffer1, cBuffer2, lEcf)
Local nI 		:= 0	// controle de loop
Local aSIGALOJA := {}	// retorno da funcao LJStrToArr (SIGALOJA.DLL)
Local aAutocom  := {}	// retorno da funcao LJStrToArr (AUTOCOM)	
Local cRet		:= ""	// Retorno da funcao

Default lEcf := .F.

LjPaisLoc( @cBuffer1, lEcf )						// Retorna apenas os perifericos utilizados em cPaisLoc
aSIGALOJA := LJStrToArr(cBuffer1)					// // Transforma a string em array
LjPaisLoc( @cBuffer2, lEcf )						// Retorna apenas os perifericos utilizados em cPaisLoc
aAutocom  := LJStrToArr(cBuffer2)					// Transforma a string em array

For nI := 1 To Len(aAutocom)							// Se o equipamento ja estiver homologado na SIGALOJA nao exibe duplicado
	If !Empty(aAutocom[nI]) .AND. AScan(aSIGALOJA, aAutocom[nI]) == 0
		AAdd(aSIGALOJA, aAutocom[nI])
	EndIf
Next nI

ASort(aSIGALOJA)									// Ordena a lista
cRet := LJArrToStr(aSIGALOJA)						// Transforma o array ordenado em string

Return cRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³ChkAutocom³ Autor ³ Cesar Eduardo Valadao ³ Data ³01/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Realiza a validacao do parametro MV_AUTOCOM                ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ChkAutocom()
Static nChkAutocom		// Retorno do parametro MV_AUTOCOM

If ValType(nChkAutocom) == "U"
	nChkAutocom := GetNewPar("MV_AUTOCOM", 1)
	If GetRemoteType() == REMOTE_LINUX	   				// Caso a plataforma seja LINUX, somente a AUTOCOM esta homologada
		nChkAutocom := DLL_AUTOCOM
	EndIf
EndIf  

Return nChkAutocom

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³IsAutocom ³ Autor ³ Cesar Eduardo Valadao ³ Data ³01/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Verifica se o equipamento em questao esta homologado na    ³±±
±±³          ³ AUTOCOM.DLL/SO ou na SIGALOJA.DLL                          ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function IsAutocom(nTipo, cModelo)
Local nMVAUTOCOM := ChkAutocom()					// Verifica o parametro MV_AUTOCOM
Local aAutocom
Local lEcf       := .F.

If ValType(aIsAutocom) == "U"
	aIsAutocom := {EQUIP_DLL_NENHUM, EQUIP_DLL_NENHUM, EQUIP_DLL_NENHUM, EQUIP_DLL_NENHUM, EQUIP_DLL_NENHUM, EQUIP_DLL_NENHUM, EQUIP_DLL_NENHUM, EQUIP_DLL_NENHUM, EQUIP_DLL_NENHUM}
EndIf
If nMVAUTOCOM == DLL_SIGALOJA						// Somente SIGALOJA.DLL
	Return( EQUIP_DLL_SIGALOJA )
EndIf
If cModelo == NIL									// Se nao passou nenhum parametro, somente retorna o conteudo
	Return( aIsAutocom[nTipo] )
Else
	If nTipo == EQUIP_IMPFISCAL						// Retorna os equipamentos homologados na AUTOCOM
		nRet := oAutocom:IFListar()					// de cada categoria 
		lEcf := .T.
	ElseIf nTipo == EQUIP_PINPAD
		nRet := oAutocom:PinPadLis()
	ElseIf nTipo == EQUIP_CMC7
		nRet := oAutocom:CMC7Lis()
	ElseIf nTipo == EQUIP_GAVETA
		nRet := oAutocom:GavetaLis()
	ElseIf nTipo == EQUIP_IMPCUPOM
		nRet := oAutocom:ImpCupLis()
	ElseIf nTipo == EQUIP_LEITOR
		nRet := oAutocom:LeitorLis()
	ElseIf nTipo == EQUIP_BALANCA
		nRet := oAutocom:BalancaLis()
	ElseIf nTipo == EQUIP_DISPLAY
		nRet := oAutocom:DisplayLis()
	ElseIf nTipo == EQUIP_IMPCHEQUE
		nRet := oAutocom:CHListar()
	EndIf
	LjPaisLoc( @oAutocom:cBuffer, lEcf )			// Retorna apenas os perifericos utilizados em cPaisLoc
	aAutocom  := LJStrToArr(oAutocom:cBuffer)		// Transforma a string em array
	If AScan(aAutocom, {|x| AllTrim(Upper(cModelo))==AllTrim(Upper(x))}) == 0
		aIsAutocom[nTipo] := EQUIP_DLL_SIGALOJA		// O modelo nao esta homologado na AUTOCOM
		If nMVAUTOCOM == DLL_AUTOCOM
			Aviso("AUTOCOM", "O equipamento "+cModelo+" não está homologado para trabalhar com a AUTOCOM. Configure corretamente o Cadastro de Estações.", {"Ok"},, "Equipamento não homologado")
		EndIf
		Return(aIsAutocom[nTipo])
	Else
		aIsAutocom[nTipo] := EQUIP_DLL_AUTOCOM		// O modelo esta homologado
	EndIf
EndIf

Return aIsAutocom[nTipo]

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³ChkDataMov³ Autor ³ Mauro Sano            ³ Data ³05/05/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Retorna se imprime a LMF                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Valida a data da reducao, se for a primeira do mes, emite  ³±±   
±±³          ³ a leitura de MF completa do mes anterior.                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador³ Data   ³  BOPS ³  Motivo da Alteracao                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Mauro S.   ³28/11/06³ 107676³Alterada a captura da data caso o SL1      ³±±
±±³           ³        |       ³esteja sem nenhum registro                 ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ChkDataMov()
Local dUltMov	:= dDatabase	// Armazena o ultimo movimento
Local cFim		:= ""         	// Data final da LMF	
Local cIni		:= ""  		  	// Data Inicial da LMF
Local nRet		:= 0			// Retorno do comando de LMF
Local lRet		:= .F. 			// Retorno da funcao	
Local lSai		:= .F.			// Controla de sai do while
Local lLjNfPafEcf:= LjNfPafEcf(SM0->M0_CGC)
Local cData		:= DToS( CToD( "31/12/2999" ) )

DbSelectArea( "SL1" )
SL1->(DbSetOrder( 7 )) //L1_FILIAL, L1_EMISSAO, L1_HORA
SL1->(DBSeek(xFilial() + cData , .T.)) // Para posicionar no ultimo registro
SL1->(DbSkip( -1 ))

If DtoC( SL1->L1_EMISSAO ) == DtoC(CtoD( '' ))
	dUltMov := dDatabase
Else
	dUltMov := SL1->L1_EMISSAO          
Endif	

If LJAnalisaLeg(21)[1] .OR. lLjNfPafEcf
	While !lSai
		lSai := .F.
		// Ignora se o mes for igual, significa que nao e' a primeira do mes
 		If SubStr( DToS( dUltMov ),5, 2 ) = SubStr( DToS( dDatabase ), 5, 2 )  
			If dUltMov < dDatabase // Se estiver no msm mes e com a data menor tem q sair pois nao e' a primeira 
				If SL1->(DBSeek( xFilial( "SL1" ) + DToS( dUltMov ) ))   
					lSai := .T.
				Endif
			Endif
		Endif	
		
		// Se o mes e' menor imprime a LMF
		If SubStr( DToS( dUltMov ),5, 2 ) < SubStr( DToS( dDatabase ), 5, 2 )  
		    lRet := .T.
		Endif
	    
	    If !lRet
	    	dUltMov -= 1
	    Else
	    	cFim := SubStr( DToS( LastDay( dUltMov ) ), 7, 2 )
	    	cFim := cFim + "/" + SubStr( DToS( dUltMov ), 5, 2 ) + "/" + SubStr( DToS( dUltMov ), 3, 2 )
	    	cIni := "01/" + SubStr( DToS( dUltMov ), 5, 2 ) + "/" + SubStr( DToS( dUltMov ), 3, 2 )
	    	 
			nRet := IFMemFisc(nHdlECF, cIni , cFim, " ", " ", IIF(lLjNfPafEcf, "IC", "I"))
			
			If lLjNfPafEcf
				LJMsgRun("Aguardando Impressão...",,{|| Sleep(10000)}) //Espero terminar imprimir a Memoria Fiscal
				
				If !(AllTrim(SM0->M0_ESTCOB) == "SC") // Em Santa Catarina não aceita o Requisito XII - Ato ER 02.05
					StbReqXIIZ(.F.,cIni,cFim) //Requisito XII
				EndIf
				
				If STBPEnvXML()
					LPXFiscoEstMen(.F.,.F.,LastDay(dUltMov,0),,dDatabase) //Deve passar o ultimo dia do mes
					LPXVlEnvFi( .F.,.T.,"E",.T.,,.F.)
				EndIf
			EndIf
			
			lSai := .T. 
		Endif    
		
		If lSai 
			lRet := .F.
		Endif
	End  
Endif	

Return lRet
	        
/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±³Fun‡ao	 ³ LjEcfIFData ³ Autor ³ Danilo Calil        ³ Data ³ 20/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Verifica se a data do movimento da impressora, eh a mesma   ³±±
±±³			 ³ data do sistema											   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ LjEcfIFData -> ExpL1   						       		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ lExp1 -> Se utiliza a funcao Verifhora() no LOJA701D        ³±±
±±³          ³ lExp2 -> Se executa a funcao Verifhora()                    ³±±
±±³          ³ lExp3 -> Se a origem e de impressao de ECF                  ³±±
±±³          ³ lExp4 -> Se utiliza o ponto de entrada no LojxFunC          ³±±
±±³          ³ lExp5 -> Data de retorno a ser utilizada no LojxFunC        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet -> Comando da impressora         	   				   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso 	     ³ SigaLoja (Venda Assistida e FrontLoja)                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador³ Data   ³  BOPS ³  Motivo da Alteracao                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Danilo     ³20/07/06³100967 ³Verifica se a data do movimento eh a mesma ³±±
±±³           ³        |       ³do sistema. Caso nao seja, eh entendido que³±±
±±³           ³        ³       ³nao foi realizado a Reduzao Z do dia ante- ³±±
±±³           ³        ³       ³rior, portanto, a dDataBase eh assumida pe-³±±
±±³           ³        ³       ³la data do movimento da impressora.        ³±±
±±³Danilo     ³28/07/06³104250 ³Realizada a adequação para o retorno quando³±±
±±³           ³        ³       ³for 1, na consulta da impressora           ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LjEcfIFData( 	lFunImp  ,  lVerHora  ,  lFunVenda  ,   lAtualiz  , ;
						cRetData  )
Local nRet	   		:= 0					// Retorno da verificao do ECF
Local lRet     		:= .T.					// Retorno da funcao
Local cRetorno 		:= ""					// Data de retorno do ECF
//As variáveis lEmitNfce - alimentada pela rotina LjEmitNFCe, lFtvdVer12 - alimentada pela rotina - LjFTVD() e cNomeProg - alimentada pela variável  lFtvdVer12  tiveram seu escopo alterado para variáveis locais, pois o cliente pode mudar de modulo para o SigaFAT através do SIGAADV e essas variáveis mudam o seu valor conforme o módulo
Local lEmitNfce	:= LjEmitNFCe()		// Sinaliza se utiliza NFC-e

DEFAULT lFunImp 	:= .F.					// Se precisa utilizar a funcao VerifHora dentro da funcao ou no retorno()
DEFAULT lVerHora	:= .F.					// Se vai chamar a funcao VerifHora()
DEFAULT lFunVenda	:= .F.					// Verifica se a origem eh de funcao de impressao
DEFAULT lAtualiz	:= .T.					// Variavel utilizada para retornar se chama Ponto de Entrada na LojxFunc
DEFAULT cRetData	:= ""					// Retorno da Data para ser utilizado no LojxFunc desde que o lAtualiz retorne .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises que nao utilizam ECF : ³
//³- PTG						 ³
//³- ANG						 ³
//³- CHI (Release 11.5 )		 ³
//³- COL (Release 11.5 )		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VldEcfPtg(@nRet)
	lFunImp	:= .T. 
	lVerHora:= .T.
	Return .T.
EndIf

If lFiscal .AND. !lEmitNFCe
	nRet := IFStatus( nHdlECF, '19', @cRetorno )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³No comando 19 da DLL, se retorna 0, eh porque³
	//³nao foi realizada a reducao z do dia anterior³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nRet == 0 
        If CtoD(cRetorno) <> dDataBase .AND. (cRetorno == "  /  /  "  .OR. cRetorno <> "000000")
			//"A database do sistema sera atualizada com o movimento do dia : " + cRetorno				
			MsgAlert(STR0053 + cRetorno)
			dDataBase := CtoD(cRetorno)
			If lFunVenda
				cRetData := cRetorno
			EndIf
		ElseIf lFunVenda
			lAtualiz := .F.
		EndIf                      
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³No comando 19 da DLL, se retorna 2, eh porque  ³
		//³foi realizada a reducao z, portanto, a database³
		//³assume a data da impresso                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ElseIf nRet == 2
			If dDataBase <> CtoD(cRetorno) .AND. (cRetorno == "  /  /  "  .OR. cRetorno <> "000000")
				//"A database do sistema sera atualizada com a data corrente : " + cDataPos
				MsgAlert(STR0054 + cRetorno)
				dDataBase := CtoD(cRetorno)
				If lFunVenda
					cRetData := cRetorno
				EndIf
			ElseIf lFunVenda
				lAtualiz := .F.				
			EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³No comando 19 da DLL, se der algum erro,³
	//³retorna -1                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ElseIf nRet < 0
			If lFunVenda
				//"Erro com a Impressora Fiscal. Operação não efetuada.","Atenção"
				MsgAlert(STR0055,STR0056)
				lRet := .F.        
			EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³nRet == 1, nao encontrou o comando 19 na DLL³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³As impressoras que utilizam o comando 19 sao a   ³
		//³Bematech e Sweda. Caso as outras impressoras nao ³
		//³tenham o comando 19, entao executa o comando 2   ³
		//³(como antes).                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !lVerHora
			If lFunVenda
				nRet := IFStatus( nHdlECF, '2', @cRetorno )
				If nRet == 0
					If CtoD(cRetorno) <> dDataBase
						cRetData  := cRetorno
					Else
						lAtualiz := .F.
					EndIf
				EndIf
			EndIf
		Else
			lVerHora:= CheckIFData()
			lFunImp := .T.
		EndIf
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DispTorLis ºAutor  ³Thiago Honorato     º Data ³  23/08/06  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Lista os displays torre homologados						  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / SIGAFRT - Chamada a partir da funcao ManutEst() º±±
±±º          ³                      (LOJA121.prw)              		      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ExpC1 - Lista de equipamentos homologados                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ExpN1 - Indica sucesso(0) ou fracasso(1)                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º          ³        ³      ³                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function DispTorLis( cBuffer )
Local nRet := -1 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se a DLL esta aberta³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
CheckDLLLj()

nRet := ExecDLLRet(nHnd, 114, @cBuffer)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Retorna apenas os perifericos utilizados em cPaisLoc³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LjPaisLoc( @cBuffer )

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³DispTorAbr ºAutor  ³Thiago Honorato     º Data ³  23/08/06  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz a abertura de porta do display torre					  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / SIGAFRT - chamada a partir da funcao 		      º±±
±±º          ³                      LjOpenDevices() (LOJXFUNB.prw)	      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ExpC1 - Indica o modelo a ser utilizado                     º±±
±±º          ³ExpC2 - Indica a porta que sera' utilizada para comunicacao º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ExpN1 - Indica sucesso(0) ou fracasso(1)                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º          ³        ³      ³                                            º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function DispTorAbr( cModelo, cPorta )
Local nRet := -1

//Verifica se a DLL esta aberta
CheckDLLLj() 

nRet := ExeDLLRun2(nHnd, 115, cModelo+","+cPorta)

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³DispTorFec ºAutor  ³Thiago Honorato     º Data ³  23/08/06  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz o fechamento da porta do display torre				  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / SIGAFRT -                         		      º±±
±±º          ³                                                		      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ExpN1 - Handle da SIGALOJA.DLL                      		  º±±
±±º          ³ExpC2 - Indica a porta que sera' utilizada para comunicacao º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ExpN1 - Indica sucesso(0) ou fracasso(1)                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º          ³        ³      ³                                            º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function DispTorFec( nDisTHnd, cPorta )
Local nRet := -1

//|Verifica se a DLL esta aberta|
CheckDLLLj( .F. )

nRet := ExeDLLRun2(nHnd, 116, Str(nDisTHnd)+","+cPorta)

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³DispTorEnv ºAutor  ³Thiago Honorato     º Data ³  23/08/06  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Envia mensagem para o display torre						  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / SIGAFRT - chamada a partir da funcao 		      º±±
±±º          ³                      MsgDispTor() (LOJXECF.prw) 		      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ExpN1 - Handle da SIGALOJA.DLL                      		  º±±
±±º          ³ExpC2 - Texto da mensagem                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ExpN1 - Indica sucesso(0) ou fracasso(1)                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º          ³        ³      ³                                            º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function DispTorEnv( nDisTHnd, cTexto )
Local nRet := -1

//Verifica se a DLL esta aberta
CheckDLLLj()

nRet := ExeDLLRun2(nHnd, 117, Str( nDisTHnd )+','+cTexto)

Return nRet

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ºPrograma  ³MsgDispTor ºAutor  ³Thiago Honorato     º Data ³  23/08/06  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Mensagem padrao para exibicao no display torre			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / SIGAFRT - chamada a partir da funcao		      º±±
±±º          ³                      LjOpenDevices() - (LOJXFUNB.prw)      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ExpN1 - Tipo da mensagem a ser enviada              		  º±±
±±º          ³ExpA1 - Array com os parametros do Ponto de Entrada         º±±
±±º          ³        "MSGDISLAY"                                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ 															  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAnalista  ³ Data   ³Bops  ³Manutencao Efetuada                      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºMauro Sano³04/09/07³131321³Alterada as mgs enviadas ao display torre.  º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function MsgDispTor( nTipo, aPARAMIXB )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel utilizada para armazenagem do texto	|
//³ que sera apresentado no display do leitor		|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cMsg := ""
Local cAux

If StatDispTor() <> -1
	If ExistBlock("MSGDISPLAY")
		cMsg := ExecBlock("MSGDISPLAY",.F.,.F.,{nTipo,aPARAMIXB})
		If ValType(cMsg) <> "C"
			cMsg := ""
		EndIf
	Else
		// Apos Abrir o Display
		If nTipo == 1					
			cMsg := STR0057													// "AP FRONT LOJA"
		ElseIf nTipo == 2 // Antes de Fechar o Display				
			cMsg := PadR(STR0057,16) + PadL(STR0058,16)			// "AP FRONT LOJA" ### "TERMINO NORMAL"
		ElseIf nTipo == 3 // Apos Abrir o Caixa
			cMsg := PadC(STR0059,16) + PadC(STR0060,16)			// "CAIXA" ### "DISPONIVEL"
		ElseIf nTipo == 4 // Apos Fechar o Caixa
			DispTorEnv(StatDispTor(), STR0059 + ' ' + STR0061  )	    	// "CAIXA" ### "FECHADO"
			DispTorEnv(StatDispTor(), " "  )    				
			cMsg := PadC(STR0059,16) + PadC(STR0061,16)			// "CAIXA" ### "FECHADO"
		ElseIf nTipo == 5 // Apos Registrar o Item
			cAux := AllTrim(Transform(aPARAMIXB[4],PesqPictQt("L2_QUANT",7)))
			cMsg := Left(aPARAMIXB[3],16) + ;
					cAux + PadL(SuperGetMv("MV_SIMB1") + " " +;
					AllTrim(Transform(aPARAMIXB[4]*aPARAMIXB[5],PesqPict("SL1","L1_VLRTOT",12))), 16-Len(cAux))
		ElseIf nTipo == 6 // Quando Teclar SubTotal (F9)
			cMsg := STR0062 + SuperGetMv("MV_SIMB1") + Transform(aPARAMIXB[1],PesqPict("SL1","L1_VLRTOT",16))  			// "SUB-TOTAL:"
		ElseIf nTipo == 7 // Quando Houver Troco
			cMsg := STR0063 + SuperGetMv("MV_SIMB1") + Transform(aPARAMIXB[1],PesqPict("SL1","L1_VLRTOT",16))			// "TROCO:"
		ElseIf nTipo == 8 // Apos Fechar o Cupom
			cMsg := PadC(STR0064,16) + PadC(STR0065,16)			// "OBRIGADO." ### "VOLTE SEMPRE!"
		EndIf
	EndIf
	If Len(cMsg) > 0                   
		cMsg := StrTran( cMsg, ',', '.' )
		DispTorEnv(StatDispTor(), cMsg)
	EndIf
EndIf

Return NIL

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±³Fun‡ao	 ³ LjEcfIFCNPJ ³ Autor ³ Danilo Calil        ³ Data ³ 20/09/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Verifica se o CNPJ cadastrado na impressora, eh o mesmo do  ³±±
±±³			 ³ SIGAMAT.       											   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ LjEcfIFCNPJ()          						       		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nil                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet -> Retorno da funcao             	   				   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso 	     ³ SigaLoja (Venda Assistida e FrontLoja)                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador³ Data   ³  BOPS ³  Motivo da Alteracao                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³D. Calil   ³20/09/07³133320 ³Verifica se o CNPJ cadastrado na impresso- ³±±
±±³           ³        |       ³ra eh o mesmo cadastrado no SIGAMAT.       ³±±
±±³           ³        |       ³Homologado para Bematechs e Daruma.        ³±±
±±³D. Calil   ³20/09/07³133320 ³Realizado tratamento do retorno da string, ³±±
±±³           ³        |       ³caso retorne com sujeira.                  ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LjEcfIFCNPJ()
Local nRet	   		:= 0					// Retorno da verificao do ECF
Local lRet     		:= .F.					// Retorno da funcao
Local cRetorno 		:= ""					// Data de retorno do ECF
Local lSTBPAfNfce	:= ExistFunc("STBPafNfce")

If lFiscal .And. (!lSTBPAfNfce .Or. (lSTBPAfNfce .And. !STBPafNfce()))
   	nRet := IFStatus( nHdlECF, '20', @cRetorno )	
	//³No comando 20 da DLL, se retorna 0, eh porque   
	//³existe a funcao de retornar o CNPJ na impressora
	If nRet == 0
		//³Se o Val do cRetorno for igual a zero, significa que a impressora 
		//³esta em modo de Treinamento. Desta forma, prossegue com a operação		
		If Val(cRetorno) <> 0

			cRetorno := StrTran( cRetorno, ".", "" )
			cRetorno := StrTran( cRetorno, "/", "" )
			cRetorno := StrTran( cRetorno, "-", "" )
			cRetorno := Alltrim(cRetorno)

			If cRetorno <> RTRIM(SM0->M0_CGC) 
				//"CNPJ cadastrado na impressora não é o mesmo do arquivo de empresas. Favor entrar em contato com o Administrador do sistema"
				MsgStop(STR0066)
			Else
				lRet := .T.
			EndIf
		Else
			lRet := .T.
		EndIf
	
	//³Se for -1, significa erro no comando 20 do StatusImp	
	ElseIf nRet < 0
		//"Erro com a Impressora Fiscal. Operação não efetuada.","Atenção"
		MsgAlert(STR0055,STR0056)
		//³Caso contrario (retorno 1), significa que a impressora utilizada nao tem
		//³ou nao esta preparada para retornar o CNPJ
	Else
		lRet := .T.	
	EndIf
	
ElseIf (LjNfPafEcf(SM0->M0_CGC) .AND. !LjxBGetPaf()[2]) .Or. (lSTBPAfNfce .And. STBPafNfce()) 
	lRet := .T.
EndIf

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³LjImplCOO ºAutor  ³Guilherme Santos    º Data ³  20/09/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Controla a numeracao para o Emulador do ECF                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ LOJXECF                                                    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LjImplCOO(nRet)
Local cRetorno		:= " "		// Verifica se eh ECF ou Emulator
Local cNumCupFis	:= ""		// Numero do COO
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se esta sendo utilizado um Emulador ou um ECF       ³
//³Se for um emulador pega o numero da nota do SLG - Cadastro   ³
//³de estacoes.                                                 ³
//³Para utilizar uma impressora Emulando um ECF devera ser      ³
//³utilizado uma estacao para cada caixa. Se a Loja tiver 5     ³
//³caixas, o SLG devera conter 5 estacoes diferentes.           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If IfStatus(nHdlECF, '11', @cRetorno) == 0	//eh um Emulador
	xNumCaixa()
	If SLG->(DBSeek(xFilial("SLG") + cEstacao))
		cNumCupFis := StrZero(Val(SLG->LG_COO), TamSx3("LG_COO")[1],0)
		RecLock("SLG", .F.)
		SLG->LG_COO := StrZero(Val(cNumCupFis) + 1, TamSx3("LG_COO")[1], 0)
		MsUnlock("SLG")
	Else
		cNumCupFis := StrZero(0, TamSx3("L1_NUMCFIS")[1], 0)
	Endif
	nRet := IFEmulEcf(nHdlECF, cEstacao, SA6->A6_COD, SA6->A6_NOME, cNumCupFis)
EndIf

Return Nil

//-------------------------------------------------------------------
/*{Protheus.doc} LjxECFCupT
Retorna o tamanho do número do cupom
@param   Nil
@author  Varejo
@version P11.8
@since   26/09/2015
@return  nTamCup , numerico, tamanho do numero do cupom
*/
//-------------------------------------------------------------------
Function LjxECFCupT(cBuffer)
Local nTamcup	:= 0	// Verifica o tamanho do Cupom Fiscal na Impressora

Default cBuffer := Space(6) //Padrão do ECF Conv. ICMS 85/01

nTamCup	:= Len(cBuffer)

If cPaisLoc $ "ARG|URU"
	nTamcup	:= 8
ElseIf cPaisLoc <> "BRA"
	nTamcup	:= TamSx3("F2_DOC")[1]
EndIf
                                                          
Return nTamcup

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³ExistEquip³ Autor ³ Cesar Eduardo Valadao ³ Data ³01/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Verifica se o equipamento em questao esta homologado na    ³±±
±±³          ³ TotvsApi.DLL/SO											  ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ExistEquip(nTipo, cModelo, lComOk)

	Local cBuffer 	:= ""											//Retorno dos perifericos
	Local nCount 	:= 0    										//Variavel de controle contador
	Local aPerife	:= {}											//Array com os perifericos retornados    
	Local lRetorno	:= .F.											//Retorno da funcao    
	Local lEcf      := .F.											
	
	DEFAULT nTipo	:= 0
	DEFAULT cModelo	:= ""
	DEFAULT lComOk	:= .F.
	
	oTovsApi := GetTotApi()     

	If nTipo == EQUIP_IMPFISCAL
		oRet := oTovsApi:ListarEcf()					
		lEcf := .T.
	ElseIf nTipo == EQUIP_PINPAD
		oRet := oTovsApi:ListPinPad()
	ElseIf nTipo == EQUIP_CMC7
		oRet := oTovsApi:ListarCMC7() 
		lEcf := .T.		
	ElseIf nTipo == EQUIP_GAVETA
		oRet := oTovsApi:ListGaveta()
	ElseIf nTipo == EQUIP_IMPCUPOM
		oRet := oTovsApi:ListImpCup()
	ElseIf nTipo == EQUIP_LEITOR
		oRet := oTovsApi:ListLeitor()
	ElseIf nTipo == EQUIP_BALANCA
		oRet := oTovsApi:ListBalanc()
	ElseIf nTipo == EQUIP_DISPLAY
		oRet := oTovsApi:LstDisplay()
	ElseIf nTipo == EQUIP_IMPCHEQUE
		oRet := oTovsApi:ListImpChq()
		lEcf := .T.		
	ElseIf nTipo == EQUIP_IMPNAOFISCAL	
		oRet := oTovsApi:ListarEcNf()
		lEcf := .T.  
	EndIf
    
	For nCount := 1 To oRet:Count()
		cBuffer += '"' + oRet:Elements(nCount):cDescricao + '",' + oRet:Elements(nCount):cPais + ',"' + oRet:Elements(nCount):cCodEcf + '",'
	Next
    
	//Retorna apenas os perifericos utilizados em cPaisLoc
	LjPaisLoc(@cBuffer, lEcf)					
	
	//Transforma a string em array	
	aPerife  := LJStrToArr(cBuffer)		
	
	If Ascan(aPerife, {|x| AllTrim(Upper(cModelo))==AllTrim(Upper(x))}) != 0
		//Abre comunicacao com a totvsapi
		If oTovsApi:AbrirCom() <> -1
			//Instancia o objeto LJCImpressora 
			
			If nTipo == EQUIP_IMPNAOFISCAL
				If ValType(oImpFisc)=="U"
					oImpFisc := LJCImpNFiscal():New()
				EndIf
			Else			
				oImpFisc := LJCImpressora():New()
			EndIf
			
			lRetorno := .T.
			lComOk := .T.			
		Else
			MsgAlert(STR0077)//"Problemas ao abrir comunicação com a DLL TotvsApi"
		EndIf
	EndIf

Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³TratStatus³ Autor ³ Vendas Cliente        ³ Data ³15/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Trata as informacoes retornadas pelo ecf	na TotvsApi	      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function TratStatus(oValor, cTipo, nRet)

	Local cRetorno	:= ""			//Retorno da funcao
	Local nRetEcf	:= 0			//verifica se comando executado
	Local cRetEcf	:= ""			//Retorno da impressora
	
	Do Case
		
		Case cTipo == "1"					
			//Obtem a Hora da Impressora dd/mm/aaaa hh:mm:SS (19 bytes)
        	cRetorno := SubStr(oValor, 12, 8)

		Case cTipo == "2"					
			//Obtem a Data da Impressora dd/mm/aaaa hh:mm:SS (19 bytes)
			cRetorno := SubStr(oValor, 1, 10)
		
		Case cTipo == "3"					
			//Verifica se tem Papel 
			If oValor:lPapelAcab .Or. oValor:lFimPapel
				cRetorno := 0
				nRet := 1
			Else
				cRetorno := 1
			EndIf
				
		Case cTipo == "4"					
			//Verifica se eh possivel cancelar TODOS ou so o ULTIMO item registrado
			cRetorno := oValor
			
		Case cTipo == "5"					
			//Se o Cupom esta Fechado
			If oValor:lCfAberto
				cRetorno := 1
				nRet := 7
			Else
				cRetorno := 0
			EndIf	
			
		Case cTipo == "6"					
			//Retorna o suprimento da impressora
			cRetorno := oValor
		
		Case cTipo == "7"					
			//ECF permite desconto por item
			If oValor
				cRetorno := 0
			Else
				cRetorno := 1
			EndIf			

		Case cTipo == "8" 					
			//Verifica se o dia anterior foi fechado, reducaoz pendente
			If oValor:lRedZPend
				cRetorno := 0
				nRet := 10
			Else
				cRetorno := 1
			EndIf

		Case cTipo ==  "9"					
			//Verifica o Status do ECF
			cRetorno := 0
		
		Case cTipo == "10"	   				
			//Verifica se todos os itens foram impressos
			If oValor
				cRetorno := 0
			Else
				cRetorno := 1
				nRet := 1				
			EndIf	
		
		Case cTipo == "11"					
			//Retorna se eh um Emulador de ECF (0=Emulador / 1=ECF)
			If oValor
				cRetorno := 1
				nRet := 1
			Else
				cRetorno := 0
			EndIf	
		
		Case cTipo == "12"					
			//Verifica se o ECF possui as funcoes IFNumItem e IFSubTotal (1=Nao / 0=Sim)
			If oValor
				cRetorno := 0
			Else
				cRetorno := 1
				nRet := 1
			EndIf
		
		Case cTipo == "13" 					
			//Verifica se o ECF Arredonda o Valor do Item
			If oValor == "A"
				cRetorno := 0
			Else
				cRetorno := 1
				nRet := 1
			EndIf
		
		Case cTipo == "14"					
			//Verifica se a Gaveta Acoplada ao ECF esta (0=Fechada / 1=Aberta)
			If oValor:lGavAberta
				cRetorno := 1
				nRet := 1
			Else
				cRetorno := 0
			EndIf
		
		Case cTipo == "15"					
			//Verifica se o ECF permite desconto apos registrar o item (0=Permite) 
			If oValor
				cRetorno := 0
			Else
				cRetorno := 1
				nRet := 1
			EndIf
		
		Case cTipo == "16" 					
			//Verifica se exige o extenso do cheque
			If oValor
				cRetorno := 0
			Else
				cRetorno := 1
			EndIf
		Case cTipo == "17" 					
			//Retorna o valor da venda bruta em caracter
			cRetorno := StrZero(oValor)
		Case cTipo == "18" 					
			//Retorna o valor do GT em string
			cRetorno := oValor
		Case cTipo == "19" 					
			//Obtem a Data do movimento dd/mm/aaaa hh:mm:SS (19 bytes)
			cRetorno	:= SubStr(oValor, 1, 10)
			
			nRetEcf := IFStatus(nHdlECF, '2', @cRetEcf)
			
			If nRetEcf == 0
				If	Ctod(cRetorno) < ctod(cRetEcf)    // reducao pendente
					nRet		:= 0
				Else
					cRetorno	:= cRetEcf
					nRet		:= 2
				EndIf
			EndIf
		
		Case cTipo == "20" 					
			//Retorna o CNPJ	
			cRetorno := oValor
			
		Case cTipo == "21"
			//Retorna o IE 
			cRetorno := oValor
		
		Case cTipo == "22"
			//Retorna o CRZ	
			cRetorno := oValor
			
		Case cTipo == "23"
			//Retorna o CRO
			cRetorno := oValor
			
		Case cTipo == "24"
			//Retorna a letra indicativa de MF adicional
			cRetorno := oValor 
			
		Case cTipo == "25"
			//Retorna Tipo de ECF
			cRetorno := oValor
			
		Case cTipo == "26"
			//Retorna Marca do ECF
			cRetorno := oValor
		
		Case cTipo == "27"
			//Retorna Modelo do ECF    
			cRetorno := oValor
		
		Case cTipo == "28"
			//Retorna o Versão atual do Software Básico do ECF gravada na MF
			cRetorno := oValor
		
		Case cTipo == "29"
			//Retorna a Data de instalacao da versao atual do Software Basico gravada na Memoria Fiscal do ECF
			cRetorno := StrTran( SubStr(oValor, 1, 10) , "/", "")
		
		Case cTipo == "30"	
			//Retorna o Horario de instalacao da versao atual do Software Básico gravada na Memoria Fiscal do ECF
			cRetorno := StrTran( SubStr(oValor, 1, 8), "/", "")
		
		Case cTipo == "31"
			//Retorna o Numero de ordem sequencial do ECF no estabelecimento usuario
			cRetorno := oValor
		
		Case cTipo == "32"
			//Retorna o Grande Total Inicial
			cRetorno := oValor 
		
		Case cTipo == "33"
			//Retorna o Grande Total Final
			cRetorno := oValor
		
		Case cTipo == "34"
			//Retorna a Venda Bruta Diaria
			cRetorno := oValor
		
		Case cTipo == "35"
			//Retorna o Contador de Cupom Fiscal CCF
			cRetorno := oValor
		
		Case cTipo == "36"
			//Retorna o Contador Geral de Operacao Nao Fiscal
			cRetorno := oValor
					
		Case cTipo == "37"
			//Retorna o Contador Geral de Relatorio Gerencial
			cRetorno := oValor
		
		Case cTipo == "38"
			//Retorna o Contador de Comprovante de Credito ou Debito
			cRetorno := oValor			
		
		Case cTipo == "39"
			//Retorna a Data e Hora do ultimo Documento Armazenado na MFD no formato ddmmaahhmmss (12 bytes)
			cRetorno := StrTran(oValor, "/", "")
			cRetorno += StrTran(oValor, ":", "")
			
		Case cTipo == "40"
			//Retorna o Codigo da Impressora Referente a TABELA NACIONAL DE CODIGOS DE IDENTIFICACAO DE ECF
			cRetorno := SubStr(oValor, 1, 6)	
		
		Case cTipo == "42"
			//Retorna o Subtotal da Impressora
			cRetorno := StrZero(oValor*100)

	EndCase
		
Return cRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³CarregForm³ Autor ³ Vendas Cliente        ³ Data ³15/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Prepara o array com as formas						      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CarregForm(cDados)

	Local aRetorno := {}				//Retorno do metodo
	Local cDelimit := "|"				//Delimitador
	Local cForma	:= ""				//Forma de pagamento
	Local nValor	:= 0				//Valor do pagamento
	Local lLoop		:= .T.				//Variavel de controle do While
		
	//Retira o delimitador do inicio da string
	If Substr(cDados, 1, 1) == cDelimit
		cDados := Substr(cDados, 2)
	EndIf

	//Retira o delimitador do fim da string
	If Substr(cDados, Len(cDados), 1) == cDelimit
		cDados := Substr(cDados, 1, Len(cDados) - 1)
	EndIf
	
	While lLoop
	    //Procura o delimitador na string
		nPos := At(cDelimit, cDados)
	    
	    //Verifica se encontrou o delimitador
		If nPos > 0 
			cForma := Substr(cDados, 1, nPos-1)
			cDados := Substr(cDados, nPos + 1)
			
			//Procura o delimitador na string
			nPos := At(cDelimit, cDados)
	    
		    //Verifica se encontrou o delimitador
			If nPos > 0 
				nValor := Val(Substr(cDados, 1, nPos-1))
				cDados := Substr(cDados, nPos + 1)
				
				AADD(aRetorno, {cForma, nValor})			
			Else
				AADD(aRetorno, {cForma, Val(cDados)})
				lLoop := .F.
			EndIf
		Else
			lLoop := .F.
		EndIf
	End    

Return aRetorno

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³TratRedZ  ³ Autor ³ Vendas Cliente        ³ Data ³15/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Prepara a string com os dados da reducaoZ			      ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LjTratRedZ(oDadosRedZ)
Local cRetorno 	:= ""				//Retorno da funcao
Local cAux		:= ""				//Variavel auxiliar	
Local Separador := "|"				//Separador da string
Local nCount	:= 0				//Variavel auxiliar contador
	
//Data movimento
cRetorno += DTOC(oDadosRedZ:dDataMov) + Separador
//Numero do ecf
cRetorno += oDadosRedZ:cNumEcf + Separador
//Numero de serie
cRetorno += oDadosRedZ:cNrSerie  + Separador
//Numero de reducoes
cRetorno += oDadosRedZ:cNumRedZ + Separador
//GrandTotal
cRetorno += AllTrim(Str(oDadosRedZ:nGranTotal)) + Separador
//Cupom inicial
cRetorno +=	oDadosRedZ:cNumCupIni + Separador
//Cupom Final
cRetorno +=	oDadosRedZ:cNumCupFim + Separador
//Cancelados
cRetorno +=	AllTrim(Str(oDadosRedZ:nTotCancel)) + Separador
//Venda liquida
cRetorno +=	AllTrim(Str(oDadosRedZ:nVendaLiq)) + Separador
//Descontos
cRetorno += AllTrim(Str(oDadosRedZ:nTotDesc)) + Separador
//Substituidos
cRetorno += AllTrim(Str(oDadosRedZ:nTotSubst)) + Separador
//Isento
cRetorno += AllTrim(Str(oDadosRedZ:nTotIsent)) + Separador
//Nao tributado
cRetorno += AllTrim(Str(oDadosRedZ:nTotNTrib)) + Separador
//Data da reducao
cRetorno += DTOC(oDadosRedZ:dDataRed) + Separador
//Numero do cupo da ReducaoZ
cRetorno += oDadosRedZ:cCoo + Separador
//Outros recebimentos
cRetorno += Replicate("0", 16) + Separador

//Iss
cAux := ""
//Aliquota + Base de calculo + imposto pago "S05,00 00000000070.00 0000000003.5"
For nCount := 1 to oDadosRedZ:oImpISS:Count()
	cAux += StrTran( "S" + Transform(oDadosRedZ:oImpISS:Elements(nCount):nAliquota, "@E 99.99"), " ","0")
	cAux += Space(1) + Padl(AllTrim(StrTran(Transform(oDadosRedZ:oImpISS:Elements(nCount):nBase, "@E 99999999999.99"), ",", ".")), 14, "0")
	cAux += Space(1) + Padl(AllTrim(StrTran(Transform(oDadosRedZ:oImpISS:Elements(nCount):nImposto, "@E 99999999999.99"), ",", ".")), 14, "0") + ";"
Next

cAux += "IS1"
cAux += Space(1) + Padl(AllTrim(StrTran(Transform( oDadosRedZ:nTotIssIse, "@E 99999999999.99"), ",", ".")), 14, "0")
cAux += Space(1) + Padl(AllTrim(StrTran(Transform( 0 , "@E 99999999999.99"), ",", ".")), 14, "0") + ";"

cAux += "NS1" 
cAux += Space(1) + Padl(AllTrim(StrTran(Transform( oDadosRedZ:nTotIssNTr, "@E 99999999999.99"), ",", ".")), 14, "0")
cAux += Space(1) + Padl(AllTrim(StrTran(Transform( 0 , "@E 99999999999.99"), ",", ".")), 14, "0") + ";"

cAux += "FS1" 
cAux += Space(1) + Padl(AllTrim(StrTran(Transform( oDadosRedZ:nTotIssSub, "@E 99999999999.99"), ",", ".")), 14, "0")
cAux += Space(1) + Padl(AllTrim(StrTran(Transform( 0 , "@E 99999999999.99"), ",", ".")), 14, "0") + ";"

cRetorno += Padl(AllTrim(Str(oDadosRedZ:nTotIss)), 14, "0") + ";" + cAux + Separador

//Cro - contador de reinicio de operacoes
cRetorno += Padl(AllTrim(Str(Val(oDadosRedZ:cCro))), 3, "0") + Separador

//Total de desconto de ISS
cRetorno += AllTrim(Str(oDadosRedZ:nTotDesISS)) + Separador

//Total de cancelamento de ISS
cRetorno += AllTrim(Str(oDadosRedZ:nTotCanISS)) + Separador

//Quantidade de aliquota tributadas cadastradas no ecf
cRetorno += AllTrim(Str(oDadosRedZ:oImpostos:Count())) + Separador

//Aliquota + Base de calculo + imposto pago "T18,00 00000000003.93 0000000000.70"
For nCount := 1 To oDadosRedZ:oImpostos:Count()
	cRetorno += "T" + Transform(oDadosRedZ:oImpostos:Elements(nCount):nAliquota, "@E 99.99")
	cRetorno += Space(1) + Padl(AllTrim(StrTran(Transform(oDadosRedZ:oImpostos:Elements(nCount):nBase, "@E 99999999999.99"), ",", ".")), 14, "0")
	cRetorno += Space(1) + Padl(AllTrim(StrTran(Transform(oDadosRedZ:oImpostos:Elements(nCount):nImposto, "@E 99999999999.99"), ",", ".")), 14, "0") + Separador
Next
		
Return cRetorno

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³PrepRel   ³ Autor ³ Vendas Cliente        ³ Data ³15/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Prepara o relatorio para o ecf						      ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function PrepRel(cDados, nVias)
	
	Local oRetorno 	:= Nil					//Retorno da funcao do tipo LJCRelatoriosEcf
	Local cDelimit 	:= CHR(10)				//Delimitador
	Local cDelimit13:= CHR(13)				//Delimitador sera retirado da string 
	Local lLoop		:= .T.					//Variavel de controle do While
	Local cAux		:= ""				    //Variavel para guardar linha a linha do relatorio
   	Local nCount	:= 1					//Variavel de controle contador
   	Local nViasAux	:= 1					//Controla o numero de vias
   	Local cTexto	:= ""					//Guarda o conteudo da variavel cDados
   	
   	//Instancia o objeto LJCRelatoriosEcf
   	oRetorno := LJCRelatoriosEcf():New() 
   			
	//Retira o delimitador do inicio da string
	If Substr(cDados, 1, 1) == cDelimit
		cDados := Substr(cDados, 2)
	EndIf

	//Retira o delimitador do fim da string
	If Substr(cDados, Len(cDados), 1) == cDelimit
		cDados := Substr(cDados, 1, Len(cDados) - 1)
	EndIf
	
	//Guarda o conteudo original
	cTexto := cDados
	
	While lLoop
	    //Procura o delimitador na string
		nPos := At(cDelimit, cDados)
	    
	    //Verifica se encontrou o delimitador
		If nPos > 0 
			cAux := Substr(cDados, 1, nPos-1)
			cDados := Substr(cDados, nPos + 1)
			
			If cAux == cDelimit .OR. cAux == cDelimit13
				oRetorno:ADD(nCount++, " ")
			Else
				//Retira esse caracter para nao apresentar erro na impressora
				cAux := Alltrim( StrTran(cAux, cDelimit13, " "))
				oRetorno:ADD(nCount++, cAux)
			Endif
		Else         
			//Retira esse caracter para nao apresentar erro na impressora
			cDados := Alltrim( StrTran(cDados, cDelimit13, " "))
		
			oRetorno:ADD(nCount++, cDados)	
			
			If nViasAux == nVias
				lLoop := .F.
			Else
				//Adiciona a proxima via
				nViasAux++
				
				oRetorno:ADD(nCount++, Space(40))
				oRetorno:ADD(nCount++, Replicate("-", 15) + AllTrim(Str(nViasAux)) + " Via" + Replicate("-", 15))
				oRetorno:ADD(nCount++, Space(40))
				
				cDados := cTexto
			EndIf
		EndIf
	End    
	
Return oRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³DscTotaliz³ Autor ³ Vendas Cliente        ³ Data ³15/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Retorna a descricao do totalizador					      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function DscTotaliz(cTotaliz)
	
	Local cRetorno 	:= ""						//Retorno da funcao
	Local oGlobal	:= Nil						//Objeto do tipo LJCGlobal
	Local oTotaliz	:= Nil						//Objeto do tipo LJCTotalizadoresEcf
	Local oRetorno	:= Nil						//Retorno da impressora do tipo LJCRetImpressora
	Local nCount	:= 1						//Variavel auxiliar do tipo contador
	
	oGlobal := LJCGlobal():Global()
	
	If oGlobal:Funcoes():IsNumeric(cTotaliz)
		
		oRetorno := oImpFisc:Totaliz()
		
		oTotaliz := oRetorno:oRetorno
		
		For nCount := 1 To oTotaliz:Count()
			If Val(oTotaliz:Elements(nCount):cIndice) == Val(cTotaliz)
				cRetorno := oTotaliz:Elements(nCount):cTotaliz
				Exit
			EndIf
		Next
	Else
		cRetorno := cTotaliz
	EndIf
	
Return cRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³PrepMsgPro³ Autor ³ Vendas Cliente        ³ Data ³15/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Prepara o relatorio para o ecf						      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PrepMsgPro(cDados)
	
	Local oRetorno 	:= Nil					//Retorno da funcao do tipo LJCMensagensPromocionais
	Local cDelimit 	:= CHR(10)				//Delimitador
	Local cDelimit13:= CHR(13)				//CHR(13) sera retirado
	Local lLoop		:= .T.					//Variavel de controle do While
	Local cAux		:= ""				    //Variavel para guardar linha a linha do relatorio
   	Local nCount	:= 1					//Variavel de controle contador
   	
   	//Instancia o objeto LJCMensagensPromocionais
   	oRetorno := LJCMensagensPromocionais():New()
   			
	//Retira o delimitador do inicio da string
	If Substr(cDados, 1, 1) == cDelimit
		cDados := Substr(cDados, 2)
	EndIf

	//Retira o delimitador do fim da string
	If Substr(cDados, Len(cDados), 1) == cDelimit
		cDados := Substr(cDados, 1, Len(cDados) - 1)
	EndIf
	
	While lLoop
	    //Procura o delimitador na string
		nPos := At(cDelimit, cDados)
		
	    //Verifica se encontrou o delimitador
		If nPos > 0 
			cAux := Substr(cDados, 1, nPos-1)
			cDados := Substr(cDados, nPos + 1)
			
			If cAux != cDelimit .AND. !Empty(cAux)
				//Retira esse caracter para nao apresentar erro na impressora
				cAux := Alltrim( StrTran(cAux, cDelimit13, " "))
				
				oRetorno:ADD(nCount++, cAux)
				cAux := ""
			Endif
		Else
			//Retira esse caracter para nao apresentar erro na impressora
			cDados := Alltrim( StrTran(cDados, cDelimit13, " "))

			oRetorno:ADD(nCount++, cDados)
			lLoop := .F.						
		EndIf
	End    
	
Return oRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³PrepSupSan³ Autor ³ Vendas Cliente        ³ Data ³10/03/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Prepara as formas de pagamento para suprimento e a sangria ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PrepSupSan(cDados, nVlrTotal)
	
	Local oRetorno 	:= Nil					//Retorno da funcao do tipo LJCFormasECF
	Local cDelimit 	:= "|"					//Delimitador
	Local lLoop		:= .T.					//Variavel de controle do While
   	Local nCount	:= 1					//Variavel de controle contador
   	Local oForma    := Nil					//Objeto da funcao do tipo LJCFormaECF
   	Local cForma    := ""					//Descricao da forma de pagamento
   	Local nValor    := 0					//Valor da forma da pagamento
   	Local cIndice   := ""					//Indice de insercao da forma de pagamento
   	
   	//Instancia o objeto LJCFormasECF
   	oRetorno := LJCFormasECF():New()  
   	
	//Envia forma de pagamento padrao caso nao chegue nenhuma
   	If Empty(cDados)   
	    //Carrega indice da forma, seguencia
		cIndice := cValToChar(nCount) 
	    //Carrega descricao da forma
		cForma	:= "DINHEIRO"              
		//Carrega valor pago por essa forma
		nValor  := nVlrTotal
			    
		//Instancia objeto com o forma
		oForma 	:= LJCFormaEcf():New(cIndice, cForma, .F., nValor)
		                          
		//Adiciona objeto a lista de formas de pagamento					
		oRetorno:ADD(Upper(AllTrim(cForma)), oForma, .T.) 
		
		Return oRetorno
   	EndIf
   			
	//Retira o delimitador do inicio da string
	If Substr(cDados, 1, 1) == cDelimit
		cDados := Substr(cDados, 2)
	EndIf

	//Retira o delimitador do fim da string
	If Substr(cDados, Len(cDados), 1) == cDelimit
		cDados := Substr(cDados, 1, Len(cDados) - 1)
	EndIf
	
	cDados := AllTrim(cDados)

	While lLoop
	    //Procura o delimitador na string
		nPos := At(cDelimit, cDados)
	    
	    //Verifica se encontrou o delimitador
		If nPos > 0 
		    //Carrega descricao da forma
			cForma := Substr(cDados, 1, nPos-1)
			cDados := Substr(cDados, nPos + 1)
			                           
			nPos := At(cDelimit, cDados)
			
			//Carrega valor pago por essa forma
			If nPos > 0 
				nValor := Val(Substr(cDados, 1, nPos-1))
			Else
				nValor := Val(cDados)
			EndIf	
			
			cDados := Substr(cDados, nPos + 1)
			
			If cForma <> cDelimit .AND. cForma <> CHR(13) .AND. !Empty(cForma)   
			    //Carrega indice da forma, seguencia
				cIndice := cValToChar(nCount)
				//Instancia objeto com o forma
				oForma := LJCFormaEcf():New(cIndice, cForma, .F., nValor)
				//Adiciona objeto a lista de formas de pagamento					
				oRetorno:ADD(Upper(AllTrim(cForma)), oForma, .T.)
				
				cForma := ""
				nValor := 0 
				nCount++  
			Endif
		Else
			lLoop := .F.						
		EndIf
	End    
	
Return oRetorno

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³LjxMD5    ºAutor  ³  Vendas & CRM      º Data ³  07/05/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza o retorno do codigo MD5 do PAF-ECF                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametro ³ Nil                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ ExpC1 - MD5                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FRONTLOJA                                                  º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LjxMD5()               

//PAF-ECF: MD-5 do Cupom Fiscal deve ser capturado do arquivo Criptografado, em producao armazena MD-5 em Static para otimizar processo de Emissao do Cupom Fiscal
If cLojMD5 == Nil .OR. lHomolPaf
	cLojMD5 := TrataMd5() 	
EndIf

Return cLojMD5

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³TrataRet	³ Autor ³ Vendas Cliente        ³ Data ³16/10/2009³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Trata as informacoes retornadas pelo ecf	todas ecfs	      ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function TrataRet(cTipo, cBuffer)
Local nRet 		:= 0					//Retorno da funcao
Local nTamCoo 	:= TamSx3("L1_CONTDOC")[1]
Local nTamCnf 	:= TamSx3("L1_CONTONF")[1]
Local nTamCgr 	:= TamSx3("L1_CONTRG")[1]
Local nTamCdc 	:= TamSx3("L1_CONTCDC")[1]

Default cTipo	:= ""	// verifica tipo de tratamento
Default cBuffer := "" 	// verifica conteudo a impressara.
	
Do Case
	//Retorna o Contador de Cupom Fiscal
	Case cTipo == "35"					
    	cBuffer := PadL(cBuffer, nTamCoo, "0")
    
	// Retorna o Contador Geral de Operação Não Fiscal
	Case cTipo == "36"					
	    cBuffer := PadL(cBuffer, nTamCnf, "0")
	
    // Retorna o Contador Geral de Relatório Gerencial
	Case cTipo == "37"					    
	    cBuffer := PadL(cBuffer, nTamCgr, "0")

	// Retorna o Contador de Comprovante de Debito ou Credito					
	Case cTipo == "38"					    
	    cBuffer := PadL(cBuffer, nTamCdc, "0")
EndCase
	
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³TrataMd5	³ Autor ³ Vendas Cliente        ³ Data ³16/10/2009³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Trata MD5                                        	      ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function TrataMd5()
Local cRet := ""

cRet := STBMd5CF()

Return cRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³TrataRetMd5³ Autor ³ Vendas Cliente       ³ Data ³16/10/2009³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Trata MD5 Retaguarda                             	      ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function TrataRetMd5()
Local cRet := ""

cRet := STBVerPAFECF("MD5LISTA")

Return cRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³VldEcfPtg	³ Autor ³ Vendas Cliente        ³ Data ³11/06/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Valida se nao utilizara ECF em Portugal.					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³ExpN1 - Retorno da funcao que chamou essa funcao.			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1 - Indica que nao utilizara ECF em Portugal.			  ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function VldEcfPtg(nRet)
Local lRet := .F. 				// Indica que nao utilizara ECF em Portugal

lRet := LjNfPtgNEcf(SM0->M0_CGC)

If lRet
	nRet := 0
EndIf

Return lRet
    
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³TrtStaPtg	³ Autor ³ Vendas Cliente        ³ Data ³11/06/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Trata os status que precisao de retorno para a aplicacao    ³±±
±±³			 ³quando for Portugal.										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³ExpC1 - Indica qual o status solicitado					  ³±±
±±³			 ³ExpC2 - Retorna o informacao desejada pelo cStatus		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC1 - Retorna o status solicitado						  ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function TrtStaPtg(cStatus, cBuffer)
Local nRet := 0 					// Contem o retorno da funcao
  
Do Case

	//  2 - Obtem a Data da Impressora	
	Case cStatus == "2"					
		cBuffer := DtoC(dDataBase)     

	//  5 - Cupom Fechado ?		
	Case cStatus == "5"
		// Posiciona no ultimo registro caso nao esteja entrando no atendimento
		If !IsInCallStack("FR271RESUME")
			SL1->(DbGoBottom())  
		EndIf         
		
		// Aberto
		If Empty(SL1->L1_DOC)
			nRet := 7
		Endif	

	// 10 - Verifica se todos os itens foram impressos.
	Case cStatus == "10"
		nRet := 0	
		
	// 12 - Verifica se o ECF possui as funcoes IFNumItem e IFSubTotal (1=Nao / 0=Sim)
	Case cStatus == "12"
		nRet := 1	
		
	// 19 - Retorna a data do movimento da impressora		
	Case cStatus == '19'
		cBuffer := DtoC(dDataBase)
		
End Case	
  
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³LjxImpFiscºAutor  ³  Vendas & CRM      º Data ³  16/09/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Indica se esta utilizando a AUTOCOM			              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametro ³ Nil                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ .T. se utilizando AUTOCOM								  º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA                                                   º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LjxImpFisc()
Local lRet := oImpFisc <> Nil
Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³INFAbrir   ºAutor  ³Microsiga           º Data ³  26/09/05  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Abre a comunicacao com a impressora				      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ LOJXECF                                                    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/                              
Function INFAbrir( cModelo, cPorta ) 
Local lRet		:= .T.
Local nRet		:=-1			// Retorno da funcao
Local nHdlMain	:= 0			// Handle do objeto da tela do protheus
Local oHdlMain 					// Objeto da janela
Local lComOk	:= .F.			//Controla se abriu comunicacao com a totvsapi

//Velocidade da porta - foi colocado aqui para facilitar a manutenção senão seria colocada dentro da sigaloja(p/ evitar compilacao de dll) 
//inserido dentro da camada da impressora Epson Nao Fiscal essa validação das velocidades de porta
Local cVelocidade:= GetPvProfString("LogDll", "VelPorta", "0" , GetClientDir() + "sigaloja.ini")

Default cModelo := ""
Default cPorta  := ""

/*Verifica se o tema eh FLAT ou normal*/
oHdlMain := GetWndDefault()
//Tratamento ExecAuto, GetWndDefault() nao tem retorno quando executado dessa forma(execauto)
If ValType(oHdlMain) == "O"
	nHdlMain := oHdlMain:hWnd
EndIf

If !Empty( cModelo ) .AND. !Empty( cPorta )
	
	If CriaTotApi()
		If ExistEquip(EQUIP_IMPNAOFISCAL, cModelo, @lComOk)
			If lComOk
				oTovsApi := GetTotApi()
				oRet := oImpFisc:AbrirPorta(cModelo, cPorta, oTovsApi)					
				If oRet:lRetorno			
					nRet := 0
				Else
					nRet := -1
					oImpFisc := Nil
					SetTotApi(Nil)						
				EndIf
				lRet := .F.		
				
				// Após a verificação da função ExistEquip, o objeto oImpFisc, que estava com conteúdo igual NIl, muda para Object
				// Nas funções onde são feitas as comparações "oImpFisc <> Nil", está validando e chamando funções de impressora fiscal.
				// Aqui muda o tipo de objeto oImpFisc para Nil, devido estar sendo utilizada uma impressora não fiscal
				// No módulo SIGAFAT, não utiliza impressora Fiscal
				If nModulo == 5 .AND. ValType(oImpFisc) == "O"
					oImpFisc := Nil	
				EndIf
			EndIf
		EndIf
	EndIf
    
	If lRet
		If CriaAutocom() .And. (ChkAutocom() == DLL_SIGALOJA .Or. IsAutocom( EQUIP_IMPFISCAL, cModelo ) == EQUIP_DLL_SIGALOJA)
			If IsAutocom( EQUIP_IMPFISCAL, cModelo ) == EQUIP_DLL_SIGALOJA
				aIsAutocom[ EQUIP_IMPFISCAL ] := EQUIP_DLL_SIGALOJA
			EndIf
			oImpFisc := NIL			//Seta como NIL para impedir que tente acessar quando estiver usando a SIGALOJA			
			CheckDLLLj( .T. )		// Verifica se a SIGALOJA.DLL esta aberta
			nRet := ExeDLLRun2( nHnd, 131, cModelo + "," + cPorta + "," + cVelocidade + "," + AllTrim( Str( nHdlMain ) ) )
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³INFFechar ºAutor  ³Microsiga           º Data ³  26/09/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Abre a comunicacao com a impressora				      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ LOJXECF                                                    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/                              
Function INFFechar(cPorta)
Local lRet		:= .T. 
Local nRet		:=-1			// Retorno da funcao
Local oRet		:= Nil

Default cPorta := LjGetStation("PORTIF") 

If oImpFisc <> Nil
	oRet := oImpFisc:FechaPorta()
	
	If oRet:lRetorno
		nRet := 0
	Else
		Sleep(1000)
		nRet := -1
	EndIf
	
	lRet := .F.
EndIf
                     
If lRet
	If ChkAutocom() == DLL_SIGALOJA .Or. IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
		CheckDLLLj( .F. )					 				// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2( nHnd, 132,'0' + "," + cPorta )
	EndIf
EndIf

Return nRet


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³INFTexto  ºAutor  ³Microsiga           º Data ³  26/09/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Imp texto nao fiscal                         	      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ LOJXECF                                                    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/                              
Function INFTexto( cTexto , lOpenComAut )
Local lContinua		:= .T.
Local lComOk		:= .F.
Local nRet			:= 0							// Retorno
Local oRet			:= Nil							// Objeto de retorno 
Local cModelo		:= LjGetStation("IMPFISC")
Local cPorta		:= LjGetStation("PORTIF")
Local cNumCaixa 	:= xNumCaixa()
Local cAuxTexto		:= ""

Default cTexto 			:= ""
Default lOpenComAut		:= .F.

LjxCtImpRD( .T. , .F.)

If ( nModulo==5 .OR. lOpenComAut ) .And. oImpFisc==Nil .And. IsCaixaLoja( cNumCaixa )
	If !Empty( cModelo ) .AND. !Empty( cPorta ) .AND. ;
		CriaTotApi() .AND. ExistEquip(EQUIP_IMPNAOFISCAL, cModelo, @lComOk)

		If lComOk
			oImpFisc := LJCImpNFiscal():New()
			nRet := INFAbrir( cModelo, cPorta )	
		EndIf
	EndIf
EndIf

If oImpFisc <> NIL
	If nRet == 0
		oRet := oImpFisc:ImpTextoNf(cTexto)
	Endif	
	
	If nRet == 0 .And. oRet:lRetorno			
		nRet := 0
	Else
		Sleep(3000)
		nRet := -1
	EndIf
	
	lContinua := .F.
EndIf

If lContinua .AND. !Empty(AllTrim(cTexto))
	cAuxTexto	:=  cTexto
	While At('\',cAuxTexto) > 0
		cAuxTexto := RemoveChar(cAuxTexto,"\","-")
	End
	
	If ChkAutocom() == DLL_SIGALOJA .Or. IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
		CheckDLLLj( .F. )					 				// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2( nHnd, 133, "0" + "\" + cAuxTexto )
	EndIf
EndIf

LjxCtImpRD( .F. , .F.)

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³INFAbrirTkºAutor  ³Microsiga           º Data ³  26/09/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Imp texto nao fiscal                         	      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ LOJXECF                                                    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/                              
Function INFAbrirTk() 

Local nRet := 0 		// Retorno
Local oRet := Nil       // Objeto de retorno

oRet := oImpFisc:AbrirCNF()

If oRet:lRetorno			
	nRet := 0
Else
	Sleep(3000)
	nRet := -1
EndIf

Return nRet     

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³INFFechaTkºAutor  ³Microsiga           º Data ³  26/09/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Imp texto nao fiscal                         	      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ LOJXECF                                                    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/                              
Function INFFechaTk() 

Local nRet := 0 		// Retorno
Local oRet := Nil       // Objeto de retorno

oRet := oImpFisc:FechaCNF()

If oRet:lRetorno			
	nRet := 0
Else
	Sleep(3000)
	nRet := -1
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³INFCodeBarºAutor  ³Microsiga           º Data ³  11/06/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Impressao de código de barras(Imp Não Fiscal)   	      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ LOJXECF                                                    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function INFCodeBar(cTipo,cTexto)

Local nRet := 0 		// Retorno
Local oRet := Nil       // Objeto de retorno
Local cModelo		:= LjGetStation("IMPFISC")
Local cPorta		:= LjGetStation("PORTIF")
Local cNumCaixa 	:= xNumCaixa()
Local cAuxTexto		:= ""
Local lRet			:= .T.
Local lComOk		:= .F.

Default cTexto	:= ""
Default cTipo	:= ""


If Empty(AllTrim(cTipo)) .OR. Empty(AllTrim(cTexto))
	MsgAlert("Conteudo dos parametros Tipo e/ou Texto está(ão) vazio(s)",STR0056) //"Conteudo dos parametros Tipo e/ou Texto está(ão) vazio(s)" / "Atenção"
	lRet := .F.
EndIf


If lRet .AND. nModulo==5 .And. oImpFisc==Nil .And. IsCaixaLoja( cNumCaixa )
	If !Empty( cModelo ) .AND. !Empty( cPorta ) .AND. ;
		CriaTotApi() .AND. ExistEquip(EQUIP_IMPNAOFISCAL, cModelo, @lComOk)

		If lComOk
			oImpFisc := LJCImpNFiscal():New()
			nRet := INFAbrir( cModelo, cPorta )	
		EndIf
	EndIf
EndIf

If lRet .AND. oImpFisc <> NIL
	oRet := oImpFisc:ImpCodeBar(Lower(cTipo),cTexto)
	
	If oRet:lRetorno
		nRet := 0
	Else
		Sleep(3000)
		nRet := -1
	EndIf
	lRet := .F.
EndIf

If lRet        
	cAuxTexto := cTexto
	If FindFunction("RemoveChar")
		While At(',',cAuxTexto) > 0
			cAuxTexto := RemoveChar(cAuxTexto,",",".")
		End
	Else
		cAuxTexto := StrTran(cTexto,",",".")
	EndIf
	
	If ChkAutocom() == DLL_SIGALOJA .Or. IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
		CheckDLLLj( .F. )					 				// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2( nHnd, 135, "0" + "," + Lower(cTipo) + "," + cAuxTexto )
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³INFImpBmp ºAutor  ³Microsiga           º Data ³  05/09/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Impressão de imagem extensao .bmp (Imp Nao Fiscal)		  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ LOJXECF                                                    º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/              
Function INFImpBmp(cCaminho,cArquivo)
Local nRet			:= 0						// Retorno
Local lRet			:= .T.
Local lComOk		:= .F.
Local oRet			:= Nil						// Objeto de retorno
Local cSep			:= "\"
Local cModelo		:= LjGetStation("IMPFISC")
Local cPorta		:= LjGetStation("PORTIF")
Local cNumCaixa 	:= xNumCaixa()

Default cCaminho	:= ""
Default cArquivo	:= ""

If lRet .AND. nModulo==5 .And. oImpFisc==Nil .And. IsCaixaLoja( cNumCaixa )
	If !Empty( cModelo ) .AND. !Empty( cPorta ) .AND. ;
		CriaTotApi() .AND. ExistEquip(EQUIP_IMPNAOFISCAL, cModelo, @lComOk)

		If lComOk
			oImpFisc := LJCImpNFiscal():New()
			nRet := INFAbrir( cModelo, cPorta )	
		EndIf
	EndIf
EndIf

If Substr(cCaminho,Len(cCaminho)-1,1) == "\"
	cSep := ""
EndIf

If Empty(AllTrim(cCaminho)) .OR. Empty(AllTrim(cArquivo))
	lRet := .F.
	nRet := -1
EndIf

If lRet .AND. !File(cCaminho + cSep + cArquivo)
	MsgAlert(" Arquivo : " + cArquivo + " não foi encontrado no caminho : " + cCaminho + ". Verifique",STR0056) //"ATENÇÃO"
	lRet := .F.
	nRet := -1
EndIf

If lRet .AND. oImpFisc <> NIL
	oRet := oImpFisc:ImpBitMap(cCaminho+cSep+cArquivo)
	
	If oRet:lRetorno
		nRet := 0
	Else
		Sleep(3000)
		nRet := -1
	EndIf
	lRet := .F.
EndIf

If lRet
	If ChkAutocom() == DLL_SIGALOJA .Or. IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
		CheckDLLLj( .F. )					 				// Verifica se a SIGALOJA.DLL esta aberta
		nRet := ExeDLLRun2( nHnd, 134, "0" + "," + cCaminho+cSep+cArquivo )
	EndIf
EndIf
	
Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³LjCMC7DiretoºAutor³Vendas Clientes     º Data ³  06/30/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina que abre uma tela para leitura do CMC7 do Cheque paraº±±
±±º          ³leitoras com comunicacao direta (USB)						  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno	 ³aDados - Array contendo os dados do cheque lido distribuido º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function LjCMC7Direto()
Local aDados	:= {}							//Array contendo os dados do cheque distribuidos por tipo
Local cBufCmc7	:= Space( 100 )					//Variavel de retorno da leitura do cheque (CMC7)
Local lLjLeCMC7	:= ExistBlock( "LJLECMC7" )		// Variavel logica que checa existencia do ponto de entrada LJLECMC7
Local oBufCmc7									//Objeto do GET de leitura do CMC7
Local oSay										//Objeto do Say
Local oDlg										//Objeto da Tela de Leitura
Local oBtnOK									//Objeto do botao de Ok.

DEFINE MSDIALOG oDlg TITLE STR0080 FROM 000, 000  TO 100, 400 COLORS 0, 16777215 PIXEL	//"Leitura do CMC7 por Leitoras Diretas"

	@ 011, 004 SAY oSay PROMPT STR0081 SIZE 034, 011 OF oDlg COLORS 0, 16777215 PIXEL	//"Chave CMC7"
	@ 010, 040 MSGET oBufCmc7 VAR cBufCMC7 	SIZE 120, 010 OF oDlg VALID LjVldCMC7Dir(@cBufCMC7,@oDlg) COLORS 0, 16777215 PIXEL
	
	DEFINE SBUTTON oBtnOK FROM 030, 220 TYPE 01 OF oDlg ENABLE Action oDlg:End()
	
ACTIVATE MSDIALOG oDlg CENTERED

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para tratamento dos dados capturados  ³
//³ pelo leitor de CMC7. Solicitado por Casa das Alian‡as  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(cBufCMC7)
	If lLjLeCmc7
		xRet  := ExecBlock( "LJLECMC7", .F., .F., { cBufCMC7 } )
		If ValType(xRet) == "C"
		   cBufCMC7  := xRet
		EndIf			
	EndIf
	
	AAdd( aDados, Subs( cBufCMC7, 02, 3 ) )	   		// cBanco
	AAdd( aDados, Subs( cBufCMC7, 15, 6 ) + " " )	// cNumCheque
	AAdd( aDados, Subs( cBufCMC7, 05, 4 ) )	   		// cAgencia
	AAdd( aDados, Subs( cBufCMC7, 25, 8 ) )	   		// cConta
	Aadd( aDados, Subs( cBufCMC7, 11, 3 ) )	  		// cCompensacao
EndIf

Return aDados

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³LjVldCMC7DirºAutor³Vendas Clientes	 º Data ³  06/30/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Efetua a validacao do CMC7 lido							  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³cBufCMC7 - Chave do CMC7									  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function LjVldCMC7Dir(cBufCMC7,oDlg)

Local lRet	:= .T.				//Variavel de validacao para o retorno

Default cBufCMC7	:= ""		//codigo do CMC7 lido
Default oDlg		:= Nil		//Objeto da janela de leitura do CMC7

cBufCMC7 := Alltrim(cBufCMC7)

If SubStr(cBufCMC7,1,1) <> "<"
	cBufCMC7	:= SubStr(cBufCMC7,2,Len(cBufCMC7) - 1)
EndIf

If Len(cBufCMC7) <> 34
	cBufCMC7	:= ""
EndIf

If oDlg <> NIL
	oDlg:End()
EndIf

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³LOJXECF   ºAutor  ³Vendas Clientes	 º Data ³  06/30/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Determina se a estacao trabalha com CMC7 Direto			  º±±
±±º          ³ e se o campo existe										  º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function LjComCMC7D()
Local lRet	:= .F.

IF SLG->( ColumnPos("LG_CMC7DIR")) > 0
	lRet := LJGetStation("CMC7DIR") == "1"
Else
	lRet := .F.
EndIf

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³IFArqMFD	³ Autor ³ Vendas Cliente        ³ Data ³30/12/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Gera Arquivo MFD/PAFECF Ato Cotepe 17/04                   ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFArqMFD( nImpHnd, cDataIni, cDataFim, cCooIni ,;
					cCooFim, cPathNomeArq )
Local cDadoIni 
Local cDadoFim 
Local cTipoDown	:= ""  
Local nRet		:= -1

If !Empty(cCooIni) .AND. !Empty(cCooFim)
	cTipoDown 	:= "C"
	cDadoIni 	:= cCooIni
	cDadoFim 	:= cCooFim
Else
	cTipoDown	:= "D"           
	cDadoIni 	:= cDataIni
	cDadoFim 	:= cDataFim
EndIf

If oImpFisc <> Nil
	If CheckPaper(.T.)
		oRet := oImpFisc:TipoEData(cDadoIni,cDadoFim, cPathNomeArq)
		
		If oRet:lRetorno
			nRet := 0
		EndIf
	EndIf
Else	
	If ChkAutocom() == DLL_SIGALOJA			  			// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		If CheckPaper( .T. )
			nRet := ExeDLLRun2(nHnd, 123, Str(nImpHnd)+ "," + cDadoIni + "," + cDadoFim + "," + cTipoDown )
		Endif
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
			nRet := oAutocom:IFGerRegTipoE( Iif( cTipoDown="C", "2", "1"), cDadoIni, cDadoFim, "", "", cPathNomeArq)
		Else
			If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				If CheckPaper( .T. )
					Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
						nRet := ExeDLLRun2(nHnd, 123, Str(nImpHnd)+ "," + cDadoIni + "," + cDadoFim + "," + cTipoDown ) 
					Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
				Endif	
			EndIf
		EndIf
	EndIf
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³INFLocaliz³ Autor ³ Vendas Cliente        ³ Data ³30/12/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Valida se usa Imp não fiscal			                      ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function INFLocaliz() 

Local aPaisNf 	:= {}		// Paises com localização
Local lRet		:= 	.F.		// Retorno

Aadd(aPaisNf, {"CHI"} ) 
Aadd(aPaisNf, {"COL"} ) 
Aadd(aPaisNf, {"MEX"} ) 
Aadd(aPaisNf, {"EUA"} ) 
Aadd(aPaisNf, {"POR"} ) 
Aadd(aPaisNf, {"PAR"} ) 
Aadd(aPaisNf, {"AUS"} ) 

lRet := Ascan( aPaisNf, { |x| x[1] == cPaisLoc } ) > 0

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³DllVsProth³ Autor ³ Vendas Cliente        ³ Data ³06/01/2012³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Verifica a versao do protheus compativel nas DLLs	   	  ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function DllVsProtheus()
Local cMensagem	:= ""				 	// Mensagem para o usuario
Local aTotvsAPI	:= DllIdProtheus(1)	 	// Array de versao TOTVSAPI
Local aAutocom	:= DllIdProtheus(2)	 	// Array de versao AUTOCOM
Local aSigaloja	:= DllIdProtheus(3)	 	// Array de versao SIGALOJA
Local cNewLine	:= CHR(13) + CHR(10)	// Quebra de linha

If aTotvsAPI[1] > -1 .AND. aTotvsAPI[2] > -1 .AND. aTotvsAPI[2] <> VSPROTHEUS
	cMensagem += "- TOTVSAPI (VS " + AllTrim(Str(aTotvsAPI[2])) + ")" + cNewLine
EndIf

If aAutocom[1] > -1 .AND. aAutocom[2] > -1 .AND. aAutocom[2] <> VSPROTHEUS
	cMensagem += "- AUTOCOM (VS " + AllTrim(Str(aAutocom[2])) + ")" + cNewLine
EndIf

If aSigaloja[1] > -1 .AND. aSigaloja[2] > -1 .AND. aSigaloja[2] <> VSPROTHEUS
	cMensagem += "- SIGALOJA (VS " + AllTrim(Str(aSigaloja[2])) + ")" + cNewLine
EndIf

If !Empty(cMensagem)
	MsgStop(STR0083 + AllTrim(Str(VSPROTHEUS)) + ":" + cNewLine + cMensagem + cNewLine + STR0084, STR0085)
	Final(STR0022)
EndIf          

Return Nil
  

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³DllIdProth³ Autor ³ Vendas Cliente        ³ Data ³06/01/2012³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Conecta na DLL buscando o ID e a versão do Protheus	   	  ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function DllIdProtheus(nTipo)
Local aRet 		:= {}					// Array de retorno {VersaoID, VersaoProtheus)
Local cDLL 		:= ""					// Nome da DLL a ser consultada
Local cBuffer 	:= ""					// Buffer de parâmetro da DLL
Local cDelimit  := "<@#DELIMIT#@>"		// Delimitador de parametros da TOTVSAPI
Local cFimStr	:= "<@#FIMSTR#@>" 		// Indica final de parâmetros na TOTVSAPI
Local lContinua := .T.					// Controla se deve continuar ou sair da rotina - para IDs antigos a DLL é compativel para qualquer versão
Local nHandle	:= -999					// Handle da DLL carregada na memória
Local cNewLine	:= CHR(13) + CHR(10)	// Quebra de linha

DEFAULT nTipo 	:= 1 					// 1 - TotvsAPI / 2 - Autocom / 3 - Sigaloja

// Obtem o caminho da DLL
Do Case
	Case nTipo == 1
		cDLL := GetClientDir() + IIF(GetRemoteType() == REMOTE_LINUX, "totvsapi.so", cDLLTOTVSAPI)
	Case nTipo == 2
		cDLL := GetClientDir() + IIF(GetRemoteType() == REMOTE_LINUX, "libautocom.so", cDLLAUTOCOM)
	Case nTipo == 3
		cDLL := GetClientDir() + IIF(GetRemoteType() == REMOTE_LINUX, "sigaloja.so", cDLLSIGALOJA )
EndCase

// Verifica se a DLL existe no diretório
If File(cDLL)
	// Carrega DLL na memória
	nHandle := ExecInDLLOpen(cDLL)

	// Verifica se a DLL foi carregada
	If nHandle > 0
		// Obtem a versão de ID da DLL
		//  - TotvsAPI utiliza função 1, passa-se como parametro 999
		//  - Sigaloja e Autocom utilizam a função 999	
		If nTipo == 1
			cBuffer	:= Encode64("999" + cDelimit + "VERSAO" + cDelimit + cDelimit + cFimStr)
			ExeDLLRun2(nHandle, 1, @cBuffer) 
			cBuffer	:= Decode64(cBuffer)
			cBuffer := SubStr(cBuffer, At(cDelimit, cBuffer) + Len(cDelimit))
			cBuffer := Substr(cBuffer, 1, At(cFimStr, cBuffer) -1)
		Else
			cBuffer	:= Space(1000)
			ExeDLLRun2(nHandle, 999, @cBuffer) 
			cBuffer := AllTrim(RemoveASC0(cBuffer))
		EndIf
		
		// Grava o ID na primeira posicao do array de retorno
		If !Empty(cBuffer)
			AAdd(aRet, Val(SubStr(cBuffer, Len(cBuffer), 1)))
		Else
			AAdd(aRet, -1)
		EndIf
			
		If ExistFunc("IsRmt64") .AND. IsRmt64()
			lContinua := .T.
		Else
			// Somente faz a validação a partir das versões: 
			// 1 - TOTVSAPI	- 1.0.12.1
			// 2 - AUTOCOM	- 3.4.1.3
			// 3 - SIGALOJA	- 0.3.132.9			
			Do Case
				Case nTipo == 1
					lContinua := (aRet[1] >= 1)
				Case nTipo == 2
					lContinua := (aRet[1] >= 3)
				Case nTipo == 3
					lContinua := (aRet[1] >= 9)
			EndCase
		EndIf
		
		If lContinua 
			// Obtem a versão do Protheus compatível com a DLL
			//  - TotvsAPI utiliza função 1, passa-se como parametro 997
			//  - Sigaloja e Autocom utilizam a função 997
			If nTipo == 1
				cBuffer	:= Encode64("997" + cDelimit + "VERSAO" + cDelimit + cDelimit + cFimStr)
				ExeDLLRun2(nHandle, 1, @cBuffer) 
				cBuffer	:= Decode64(cBuffer)
				cBuffer := SubStr(cBuffer, At(cDelimit, cBuffer) + Len(cDelimit))
				cBuffer := Substr(cBuffer, 1, At(cFimStr, cBuffer) -1)
			Else 
				cBuffer	:= Space(10)
				ExeDLLRun2(nHandle, 997, @cBuffer) 
				cBuffer	:= AllTrim(RemoveASC0(cBuffer))
			EndIf
			
			// Grava a versão do Protheus na segunda posicao do array de retorno
			If !Empty(cBuffer)
				AAdd(aRet, Val(cBuffer))
			Else
				AAdd(aRet, -1)
			EndIf 
		Else
			AAdd(aRet, -1)
		EndIf
	Else
		AAdd(aRet, -1)
		AAdd(aRet, -1)             

		// Emite mensagem de DLL corrompida:
		MsgStop(STR0086  + cNewLine + cDLL + cNewLine + cNewLine + STR0087, STR0088)
	EndIf
Else
	AAdd(aRet, -1)
	AAdd(aRet, -1)
EndIf

Return aRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Funcao    ³RemoveASC0³ Autor ³ Vendas Cliente       ³ Data ³06/01/2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Substritui caractere ASC 0 por espaços em branco	   		  ³±±
±±³          ³ Comando Replace() nao funciona para ASC 0       			  ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function RemoveASC0(cBuffer, cChar)
Local nFor := 0 		// Contador 
Local cRet := ""		// Retorno

Default cBuffer := ""
Default cChar   := " "

For nFor := 1 To Len(cBuffer)
	If Asc(SubStr(cBuffer, nFor, 1)) == 0
		cRet += cChar
	Else
		cRet += SubStr(cBuffer, nFor, 1)
	EndIf
Next nFor

Return cRet


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±   
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡Æo	 ³ AjustaPG  ³ Autor ³ Vendas Clientes       ³ Data ³ 21/03/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Coloca a forma de pagamento do tipo Moeda na ultima posicao ³±±
±±³          ³ para que o ECF gere troco com o valor excedente             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cFormaPagto -> Formas de pagamento | valor	               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ cRet -> Devolve a variavel com a moeda ultima posicao	   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AjustaPG(cFormaPagto)
Local aTmpPag 			:= {}			// Array de pagamentos temporario
Local cFormaMoeda		:= ""			// Forma de pagamento do tipo moeda
Local nI 				:= 0			// Contador
Local nPosMoeda			:= 0			// Posicao da forma de pagamento do tipo moeda no array
Local cRet				:= ""			// Retorno da funcao
Local nTmpMoedacor		:= -1			// Moeda corrente utilizada
Local cSimbolo			:= ""			// Simbolo da moeda corrente
Local aArea				:= GetArea()	// Save da area
    
Default cFormaPagto 	:= ""

// Captura a moeda corrente, por padrão = 1
If Type("nMoedacor") = "N"
    nTmpMoedacor := nMoedacor
Else
	nTmpMoedacor := 1
EndIf
    
cSimbolo := SuperGetMV( "MV_SIMB" + AllTrim(Str(nTmpMoedacor)), , "R$" ) 

DbSelectArea("SX5")
IF SX5->(DbSeek(xFilial("SX5") + "24" + cSimbolo))
	cFormaMoeda := AllTrim(SX5->X5_DESCRI)
Else
	cFormaMoeda	:= "DINHEIRO"
EndIf

// Gera um array com as formas de pagamento e os valores
aTmpPag := StrTokArr(cFormaPagto, "|")
nPosMoeda := Ascan(aTmpPag, {|x| x == cFormaMoeda})
    
// Remonta a string, jogando a forma de pagamento moeda na ultima posicao
If nPosMoeda > 0
    For nI := 1 To Len(aTmpPag) Step 2
    	If nI <> nPosMoeda
	    	cRet += aTmpPag[nI] + "|" + aTmpPag[nI + 1] + "|"
	    EndIf
	Next nI

	cRet += aTmpPag[nPosMoeda] + "|" + aTmpPag[nPosMoeda + 1] + "|"
Else
	cRet := cFormaPagto
EndIf
 
RestArea(aArea)
Return cRet

/*/ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFRelMFiscºAutor  ³Vendas Cliente      º Data 29/08/12      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Faz impressao do relatorio gerencial dos itens do Menu     º±±
±±º          ³ Fiscal do PAF-ECF segundo Exigência de Requisito           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc2 - Titulo do relatorio gerencial a ser impresso   	  º±± 
±±º          ³ EXPc3 - Texto a ser impresso no relatorio				  º±± 
±±º          ³ EXPc4 - Numero de vias do texto                            º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function IFRelMFisc( nImpHnd, cIndTotalizador, cTexto ,nVias ,;
					cImgQrCode)
Local nRet			:= -1						// Retorno da funcao da dll
Local cTipTef		:= LjGetStation("TIPTEF")  //tipo de tef utilizado 
Local lMenFisOnLog	:= IsInCallStack("LjMenFiLog")  //Valida se foi chamado Menu Fiscal da Tela de Login
Local lUsaTef		:= lMenFisOnLog .OR. LJProFile(2) //configuracao do caixa
Local lContinua		:= .T.
Local oRelatorio	:= Nil						//Relatorio que sera impresso

DEFAULT nVias		:= 1						// Numero de Vias
Default cImgQrCode	:= ""

/* PTG e ANG - Nao Utilizara ECF */
If VldEcfPtg(@nRet)
	lContinua := .F.
EndIf

If lContinua

	LjImplCOO(@nRet)		//Implementa Numeracao quando Emulador

	cTexto := StrTran( cTexto, Chr(13), '')			                  	                  
	If lHomTEF
		Sleep(6000)
	EndIf
	
	If oImpFisc <> Nil
		If CheckPaper(.T.)	
			oRelatorio := PrepRel(cTexto, nVias)
			
			oRet := oImpFisc:ImpRelGer(oRelatorio, cIndTotalizador, .F.)
			
			If oRet:lRetorno                                     
				nRet := 0
			EndIf
		EndIf
			
		lContinua := .F.
	EndIf
	
	If lContinua
		If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
			CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
				nRet := ExeDLLRun2(nHnd, 49, Str(nImpHnd)+'|'+cIndTotalizador+'|'+cTexto+'|'+Str(nVias)+'|'+cImgQrCode+"|")
				Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
			Endif	
		Else
			/* Pesquisa se o modelo do equipamento existe na AUTOCOM                        
			 Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM */
			If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_AUTOCOM
				If CheckPaper( .T. )
					nRet := oAutocom:IFRelGer(cTexto,nVias)
				Endif	
			Else
				If IsAutocom(EQUIP_IMPFISCAL) == EQUIP_DLL_SIGALOJA
					CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
					If CheckPaper( .T. )
						Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 119, Str(nImpHnd)), Nil)	   //Trava Teclado
							nRet := ExeDLLRun2(nHnd, 49, Str(nImpHnd)+'|'+cIndTotalizador+'|'+cTexto+'|'+Str(nVias)+'|'+cImgQrCode+"|")
						Iif(cTipTef == TEF_DISCADO .AND. lUsaTef, ExeDLLRun2(nHnd, 120, Str(nImpHnd)), Nil)	   //Destrava Teclado
					Endif	
				EndIf
			EndIf
		EndIf
	EndIf
	
	//PAF-ECF: Armazena na tabela de apoio(MDZ), emissão de relatório gerencial
	LjxGrvMdz("RG")
EndIf

Return nRet 

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFTipoEcNfºAutor  ³Vendas Cliente      º Data 26/03/13      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se modelo da impressora eh nao fiscal		      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPc1 - Modelo da Impressora                               º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPl1 - .T. indica modelo nao fiscal  					  º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFTipoEcNf(cModelo)

Local lRet 		:= .F.			//indica se o modelo existe na lista de impressoras não fiscais
Local cBuffer	:= Space( 0 )	//variavel auxiliar para uso nas funções da SIGALOJA.DLL
Local aImpNaoFis:= {}			//array com as impressoras não fiscais homologadas na SIGALOJA.DLL

//TOTVSAPI.DLL
If CriaTotApi()
	lRet := ExistEquip(EQUIP_IMPNAOFISCAL, cModelo)
EndIf

//SIGALOJA.DLL
If !lRet
	If ( ChkAutocom() == DLL_SIGALOJA_AUTOCOM ) .OR. ( ChkAutocom() == DLL_SIGALOJA )
		//obtemos a lista de impressoras não fiscais da SIGALOJA.DLL
		nRet := ExeDLLRun2( nHnd, 130, @cBuffer )

		LJPaisLoc(@cBuffer)						//organizamos a lista de impressoras, conforme o país
		aImpNaoFis := LJStrToArr(cBuffer)		//transforma a lista em um array
		cModelo := AllTrim(cModelo)				//retiramos os espaços do modelo

		//verifica se o modelo existe na lista de impressoras
		lRet := aScan(aImpNaoFis, {|x| x == cModelo}) > 0
	EndIf
EndIf

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFEstornVincºAutor³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz o cancelamento do cupom fiscal                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPn1 - Handle de uso da DLL                               º±± 
±±º          ³ EXPc1 - Codigo do supervisor                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFEstornVinc( nImpHnd, cCpfCnpj , cNomeCli , cEndereco , cMensagem , cCOOCCD)
Local nRet := -1			// Retorno da funcao da dll
Local cRet := ""			// Retorno do IfStatus
Local lCupAberto := .F.		// Verifica se o cupom esta aberto
Local cCupomArg		:= ""
Local cSerie		:= ""

If Len(cCpfCnpj) > 0
	cCpfCnpj := AllTrim(cCpfCnpj)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises que nao utilizam ECF : ³
//³- PTG						 ³
//³- ANG						 ³
//³- CHI (Release 11.5 )		 ³
//³- COL (Release 11.5 )		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VldEcfPtg(@nRet)   
	cPegCupom := ""
	Return nRet
EndIf          

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Cupom esta aberto³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nRet := IFStatus( nHdlECF, '5', @cRet )
				
//Se nao estiver aberto (<> 7), e estiver utilizando uma impressora nao fiscal, implementa o COO
If nRet <> 7
	lCupAberto := .F.
Else
	lCupAberto := .T.
	If cPaisLoc == "ARG"
		cSerie := LjxDSerArg()
		nRet := IFPegCupom( nHdlECF, @cCupomArg, "D|" + cSerie )
	EndIf	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura o valor da variavel nRet, de acordo com a declaracao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nRet := -1

If oImpFisc <> Nil

	If CheckPaper(.T.)	
		oRet := oImpFisc:EstNFiscVinc(cCpfCnpj , cNomeCli , cEndereco , cMensagem , cCOOCCD)
		
		If oRet:lRetorno
			nRet := 0
		EndIf
	EndIf
	
Else

	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		If CheckPaper( .T. )
			nRet := ExecDLLRet( nHnd, 128, Str(nImpHnd) + "," + cCpfCnpj + "," + cNomeCli + "," + cEndereco + "," + cMensagem + "," + cCOOCCD)
		Endif	
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
			//Comando não existe nesta dll
		Else
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
				CheckDLLLj()				// Verifica se a SIGALOJA.DLL esta aberta
				If CheckPaper( .T. )
					nRet := ExecDLLRet( nHnd, 128, Str(nImpHnd) + "," + cCpfCnpj + "," + cNomeCli + "," + cEndereco + "," + cMensagem + "," + cCOOCCD)
				EndIf
			EndIf
		EndIf
	EndIf 
	
EndIf

Return nRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºFuncao    ³IFImpTxtFisºAutor ³Microsiga           º Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Envio de texto fiscal antes da impressão do item - Argentinaº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ nImpHnd - Handle de uso da DLL                             º±± 
±±º          ³ cTexto - Texto que será impresso                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPn1 - Indica sucesso da execucao - 0 = OK / 1 = Nao OK   º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGALOJA / FRONTLOJA                                       º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IFImpTxtFis( nImpHnd, cTexto)
Local nRet       := -1		// Retorno da funcao da dll
Local cBuffer    := ""		// Armazena os paramentros do registro do item

DEFAULT cTexto   := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Paises que nao utilizaM ECF : ³
//³PTG,ANG,CHI(Release 11.5)	 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VldEcfPtg(@nRet)
	Return nRet
EndIf

If oImpFisc <> Nil
	If CheckPaper(.T.)	
		//Não existe impressora homologada na TOTVSAPI
	EndIf
Else
	If ChkAutocom() == DLL_SIGALOJA						// Verifica o parametro MV_AUTOCOM
		cBuffer    := Str( nImpHnd ) + "," + cTexto
		CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
		If CheckPaper( .T. )
			nRet := ExeDLLRun2( nHnd, 136, cBuffer )
		Endif	
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa se o modelo do equipamento existe na AUTOCOM                          ³
		//³ Caso houver equipamento homologado nas duas DLLs, a prioridade sera a AUTOCOM. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
			If CheckPaper( .T. )
				//Não existe impressora homologada na AUTOCOM
			Endif	
		Else
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
				cBuffer    := Str( nImpHnd ) + "," + cTexto
				CheckDLLLj()								// Verifica se a SIGALOJA.DLL esta aberta
				If CheckPaper( .T. )
					nRet := ExeDLLRun2( nHnd, 136, cBuffer )
				Endif	
			EndIf
		EndIf
	EndIf     
	
EndIf

Return nRet

//-----------------------------------------------------------
/*/{Protheus.doc} INFCutPpr()
Efetua a quebra e o corte do papel para impressora não fiscal

@version 	P11.8
@since   	02/03/2015
@autor		Vendas CRM
/*/
//-----------------------------------------------------------
Function INFCutPpr()
Local nRet	:= 0
Local lGuil	:= SuperGetMV("MV_FTTEFGU",, .T.)  // Ativa guilhotina

If lGuil	// Ativa guilhotina
	IF STFIsPOS()
		nRet := STWPrintTextNotFiscal(TAG_GUIL_INI+TAG_GUIL_FIM)
	Else
		nRet := INFTexto(TAG_GUIL_INI+TAG_GUIL_FIM)
	EndIf
EndIf

Return nRet

//-----------------------------------------------------------
/*/{Protheus.doc} IFVenda()
Função que valida se ECF pode fazer venda

Retorno : lRet - Permite Venda?

@version 	P11.8
@since   	30/06/2015
@autor		Vendas CRM
/*/
//-----------------------------------------------------------
Function IFVenda(lEfetuaRedZ,lMsg)
Local lRet	:= .T.
Local cRet	:= ""

Default lEfetuaRedZ := .F.
Default lMsg		:= .F.

//Valida se Reducao Z pendente
If IFStatus(nHdlECF, "8", @cRet) == 10
	lRet := .F.
	lEfetuaRedZ	:= .T.
	
	If lMsg
		Alert("Redução Z Pendente")
	EndIf
EndIf

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} INFSup
Impressão de Suprimento/Sangria na impressora não fiscal

@param1 nOperacao -  1 Sangria / 2 - Troco
@param2 nTotal - valor 
@author  Varejo
@version P11.8
@since   29/10/2014
@return
@obs
@sample
/*/
//-------------------------------------------------------------------
Function INFSup(nOperacao, nTotal)
Local nRet		:= -1		// Retorno da função
Local cTexto	:= ""		// Texto que será impresso
Local cTotal	:= ""		// Total recebido
Local aID		:= LjInfoCxAt(1,.F.,.T.)	//[1]-CAIXA [2]-ESTACAO [3]-SERIE [4]-PDV
Local cNumMov	:= AllTrim(LjNumMov())		//Numero do movimento
Local cPLinha	:= CHR(10)+CHR(13)

Default nOperacao	:= 0
Default	nTotal		:= 0

cTotal := AllTrim(Str(nTotal))
If AT(".",cTotal)  == 0
	cTotal += ".00"
ElseIf Len(SubsTr(cTotal, AT(".",cTotal)+1)) == 1
	cTotal += "0"
EndIf     
cTotal := StrTran(cTotal,".", ",")

cTexto +=  SM0->M0_NOMECOM + cPLinha + cPLinha

If nOperacao == 3 //"SANGRIA"
	cTexto +=  TAG_CENTER_INI+TAG_NEGRITO_INI+ STR0094 + " " + STR0095 +TAG_NEGRITO_FIM+TAG_CENTER_FIM + cPLinha //"SANGRIA DE CAIXA" ### "(Acumulado)"
ElseIf nOperacao == 2 //"TROCO"
	cTexto += STR0096 + " " + STR0095 + cPLinha //"SUPRIMENTO DE CAIXA" ### "(Acumulado)"
EndIf
cTexto += "- - - - - - - - - - - - - - - - - - - - - -" + cPLinha

cTexto += STR0097	+ cTotal 		+ cPLinha					//"VALOR        : R$ "
cTexto += STR0098	+ DtoC(Date()) + " - " + Time()	+ cPLinha	//"DATA         : "
cTexto += STR0099 	+ aID[1][1]		+ cPLinha					//"CAIXA        : "
cTexto += STR0100	+ "      : "	+ aID[2][1] 	+ cPLinha	//"ESTACAO"
cTexto += STR0101	+ aID[4][1] 	+ cPLinha					//"PDV          : "
cTexto += STR0102 + "     : "	+ cNumMov 		+ cPLinha		//"NUM.MOV."
cTexto += "- - - - - - - - - - - - - - - - - - - - - -" + cPLinha
cTexto += STR0103 + " ________________________________" + Replic(cPLinha,2) //"Ass. Caixa   :"
cTexto += STR0104 + " ________________________________" + Replic(cPLinha,6) //"Ass. Superior:"

nRet := INFTexto(cTexto)


If nRet == 0
	nRet	:= INFCutPpr()
EndIf

Return nRet

//-------------------------------------------------------------------
/*/{Protheus.doc} LjxLJ7101
Criada para tratar o PE LJ7101

@param1 cTexto - conteudo da impressão
@author  Varejo
@version P11.8
@since   25/02/2015
@return  cRetLJ7101 - retorno do PE
/*/
//-------------------------------------------------------------------
Function LjxLJ7101( cTexto )
Local lLJ7101	:= ExistBlock("LJ7101")
Local aRetPE	:= {}
Local cAuxTexto	:= ""
Local cRetLJ7101:= cTexto 
Local nX		:= 0

Default cTexto	:= "" 

If lLJ7101 .And. !Empty(cTexto) .And. (AllTrim(cTexto) <> TAG_GUIL_INI+TAG_GUIL_FIM) 

	LjGrvLog("LJ7101INFT1", "Ponto de Entrada Encontrado")
	
	cAuxTexto	:= ""
    nX			:= 4
	While nX >= 0 
		cAuxTexto += " INFTexto - Pilha de chamada PE LJ7101 - Rotina " + ;
						ProcName(nX) + " - Linha [" + cValToChar(ProcLine(nX)) + "]"  + CRLF
		nX -= 1
	End
	
	LjGrvLog("LJ7101INFT2", cAuxTexto)
	cAuxTexto	:= ""
	aRetPE := ExecBlock( "LJ7101", .F., .F., {cTexto} )
	
	LjGrvLog("LJ7101INFT3", "Retorno do PE LJ7101:", aRetPE)
	
	If ValType(aRetPE) == "A"
		cRetLJ7101 := ""
		
		LjGrvLog("LJ7101INFT4", "Retorno normal" )
		
		If Len(aRetPE) > 0 .And. ValType(aRetPE[1]) == "C"
			cRetLJ7101 := aRetPE[1]
		EndIf
		
		 cRetLJ7101 += cTexto 
		 
		 If Len(aRetPE) > 1 .And. ValType(aRetPE[2]) == "C"
		 	cRetLJ7101 += aRetPE[2]
		 EndIf
	Else
		LjGrvLog("LJ7101INFT4", "Retorno incorreto, verifique documentação do PE LJ7101" ,aRetPE )
	EndIf
EndIf

Return cRetLJ7101

//-------------------------------------------------------------------
/*/{Protheus.doc} LjxVldVrDLL
Valida a versão da DLL e se permite prosseguir com a DLL desatualizada
@type Function
@param cTexto , caracter , conteudo da impressão
@author  Varejo
@version P11.8
@since   20/07/2016
@return  lContinua , lógico, Se prossegue ou não
@obs
@sample
/*/
//-------------------------------------------------------------------
Function LjxVldVrDLL(cVersao,lAutoCom,lTotvsApi)
Local lContinua	:= .T.
Local lFechaLoja:= .F.
Local lPos		:= STFIsPOS()
Local cNomeDLL	:= "SIGALOJA"
Local cVerDLLRpo:= ""
Local aVerDLLRpo:= {}
Local aVersao	:= {}
Local aRet		:= {}
Local nTipoMSG	:= 0

Default	cVersao		:= ""
Default lAutoCom	:= .F.
Default lTotvsApi	:= .F.

If !Empty(AllTrim(cVersao))
	aVersao		:= StrToKArr( cVersao, "." )

	If !lPos
		cVerDLLRpo	:= LJDLLVER(lAutoCom,lTotvsApi)
	Else
		aRet := STFFireEvent(ProcName(0),"STDLLVersionControl",{lAutoCom,lTotvsApi})
		If Len(aRet) > 0 .AND. !Empty(aRet[1])
		    cVerDLLRpo	:= aRet[1]
		EndIf   
	EndIf
	
	aVerDLLRpo	:= StrToKArr(cVerDLLRpo, ".")
	
	If lAutoCom
		cNomeDLL := "Autocom"
	ElseIf lTotvsApi
		cNomeDLL := "TotvsApi"
	EndIf
	
	If Len(aVersao) > 0 .And. Len(aVerDLLRpo) > 0
		If aVersao[3] <> aVerDLLRpo[3] // Valida a Release da DLL, caso esteja diferente não permite prosseguir
			nTipoMSG	:= IIf(Val(aVersao[3]) > Val(aVerDLLRpo[3]),2,1)
			lFechaLoja	:= .T.
			lContinua	:= .F.
		ElseIf aVersao[4] <> aVerDLLRpo[4] // Valida a Build da DLL, caso esteja diferente permite prosseguir
			nTipoMSG	:= IIf(Val(aVersao[4]) > Val(aVerDLLRpo[4]),2,1)
			lContinua	:= .T.
		EndIf
	Else
		lContinua := .T.
	EndIf
	
	If nTipoMSG > 0
		LJMsgDll(cVersao, nTipoMsg)
		
		MsgInfo(STR0106 + CHR(10) +; // "Conforme informado existe incompatibilidade da versão entre a DLL Fiscal e o RPO do Protheus. "
				" DLL Fiscal " + cNomeDLL + CHR(10) +;
				" Versão do RPO (" + cVerDLLRpo + ")" + CHR(10) +;
				" Versão da DLL ("+ cVersao +")" + CHR(10) +;
				STR0107 )			 //	"Efetue as atualizações necessárias assim que possível."

		If lFechaLoja
			Final("Termino Normal")
		EndIf		
	EndIf
EndIf

Return lContinua

//-----------------------------------------------------------
/*/{Protheus.doc} IFQrCode()
Salva o QrCode em Arquivo

Retorno : nRet - Retorno da DLL

@version 	P11.8
@since   	30/06/2015
@autor		Vendas CRM
/*/
//-----------------------------------------------------------
Function IFQrCode(nImpHnd,cArquivo,cQrCode)
Local nRet	:= -1
Local lRet	:= .T.

Default cArquivo	:= ""
Default cQrCode	:= ""

If VldEcfPtg(@nRet)
	lRet := .F.
EndIf

If lRet
	If oImpFisc <> Nil
		If CheckPaper(.T.)	
			//Não existe comando na TOTVSAPI
		EndIf
	Else
		If ChkAutocom() == DLL_SIGALOJA	 .Or. IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
			cBuffer    := Str( nImpHnd ) + "," + cArquivo + "," + cQrCode
			CheckDLLLj()									// Verifica se a SIGALOJA.DLL esta aberta
			If CheckPaper( .T. )
				nRet := ExeDLLRun2( nHnd, 138, cBuffer )
			Endif	
		Else
			If IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_AUTOCOM
				If CheckPaper( .T. )
					//Não existe comando na AUTOCOM
				Endif	
			EndIf
		EndIf
	EndIf
EndIf

Return nRet

//-----------------------------------------------
/*/{Protheus.doc} INFIs
Verifica se ambiente ou o modelo cadastrado esta listado como não-fiscal
@param		cModel - Modelo de Impressora não-fiscal
@author  	fabiana.silva@totvs.com.br
@version 	P11.8
@since   	08/02/2012
@sample
@return  	lRet - é impressora não-fiscal
/*/
//-----------------------------------------------
Function INFIs(cModel)
Local lRet 		:= .F. //Retorno da Rotina
Local cLista	:= Space(10000) //lista de Impressoras não-fiscais
Local aLista  	:= {} //Array com lista de impressoras não-fiscais
Default cModel	:= LjGetStation("IMPFISC")

If  nModulo == 5 .OR. nModulo == 51 .OR. LjUseSat() .OR. LjEmitNFCe()
	//Se for módulo faturamento ou Gestão hospitalar ou SAT ou NFCe, automaticamente é impressora não-fiscal
	lRet := .T.
ElseIf IFListar( @cLista, .F. , .T. ) = 0
	cModel := Upper(AllTrim(cModel))
	aLista := LJStrToArr(Upper(AllTrim(cLista)))	
	lRet := aScan(aLista, {|e| AllTrim(e) == cModel}) > 0
EndIf

Return lRet

//-----------------------------------------------
/*/{Protheus.doc} INFCon
Verifica se existe conexão com a impressora não-fiscal
@param		lAskTry - Pergunta se deseja imprimir novamente
@author  	fabiana.silva@totvs.com.br
@version 	P11.8
@since   	19/07/2017
@sample
@return  	lConnected - Impressora conectada
/*/
//-----------------------------------------------
Function INFCon(lAskTry)
Local lConnected := .T.
Local nRet := 0
Local cModelo		:= LjGetStation("IMPFISC")
Local cPorta		:= LjGetStation("PORTIF")

Default lAskTry := .F.
nRet := INFTexto(".")

If nRet <> 0 
	lConnected := .F.
	Do While lAskTry
		lAskTry := MSGYESNO( "Impressora não responde. Tentar novamente?", "ERRO" )
		If lAskTry
			INFFechar()
			nRet := INFAbrir( cModelo, cPorta )
			If nRet == 0
				nRet := INFTexto(".")
			EndIf
			lAskTry  := nRet <> 0
			lConnected := !lAskTry
		EndIf
	EndDo
EndIf

Return lConnected

//-----------------------------------------------------------
/*/{Protheus.doc} IFRetUlCup()
Retorna o numero do cupom

Retorno : cNumCup - numero do cupom atual

@version 	P11.8
@since   	26/09/2017
@autor		julio.nery
/*/
//-----------------------------------------------------------
Function IFRetUlCup()
Local cNumCup	:= ""
Local nRet		:= -1

nRet := IFPegCupom( nHdlEcf, @cNumCup )
If nRet <> 0
	cNumCup := "ERROR"
	LjGrvLog( Nil, "Erro ao tentar capturar numero do cupom")
EndIf 

Return cNumCup

//-----------------------------------------------------------
/*/{Protheus.doc} INFTamQrCd()
Melhoria para personalizar o tamanho do QrCode.

- Deve-se configurar o arquivo SIGALOJA.INI
- Valido para os modelos: Daruma e Epson ( Não Fiscal ) 
- Impressora Bematech foi alterada dentro da DLL SIGALOJA
- o tamanho do QrCode mesmo sendo P,M,G pode variar de acordo
  com a quantidade de caracteres presentes no texto 

@version 	P11.8
@since   	26/09/2017
@autor		julio.nery
/*/
//-----------------------------------------------------------
Function INFTamQrCd(cModelo,cDocSaida,aParam)
Local cRet	:= ""
Local cTam	:= "P"
Local nTam	:= 4
Local nPasso:= 2
Local lTotBema := .F. //Bematech da TotvsAPI - LOJA1345
Local lAutomato := If(Type("lAutomatoX")<>"L",.F.,lAutomatoX)

If cDocSaida == "NFCE"
	If "EPSON" $ cModelo
		nTam := 5 //O QrCode 5 é o tamanho minimo da NFC-e pra Epson
	EndIf
ElseIf cDocSaida == "SAT" //o QrCode no SAT é maior devido a qtde de caracteres
	nPasso := 1 //Senão chego no limite de tamanho da Daruma que é o G, valor 7 acima disso o QrCode não aumenta
EndIf

If !lAutomato
	cTam := Upper(AllTrim((GetPvProfString("logdll", "tamqrcode", cTam, GetClientDir()+"sigaloja.ini"))))
Else
	cTam := ""
Endif	

/* No caso da Bematech da TOTVSAPI.DLL precisa devolver um array e os
	valores seguem conforme deixado na SIGALOJA.DLL.
Caso altere o tamanho do QrCode na SIGALOJA.DLL, altere o fonte LOJA1345 que é da TOTVSAPI.DLL */
If ("BEMA" $ cModelo) .And. (ValType(aParam) == "A") .And.;
 	(Len(aParam) > 0) .And. (Upper(aParam[1]) == "TOTVSAPI")
 	
 	nPasso := 0
	If aParam[2] > 200 //devido a qtde de caracteres, deve aumentar o padrão para verificar diferença de tamanhos
		nPasso := 3
	EndIf
	
	aParam := {}
	aParam := Array(5)
	aParam[1] := "1"
	aParam[2] := "4"
	aParam[3] := "0"
	aParam[4] := cValToChar(14+nPasso)
	aParam[5] := "1" 
	lTotBema := .T.
EndIf

If cTam == "M"
	If lTotBema
		aParam[4] := cValToChar(17+nPasso)
	Else
		nTam += nPasso
	EndIf
ElseIf cTam == "G"
	If lTotBema
		aParam[4] := cValToChar(20+nPasso)
	Else
		nTam += nPasso+1
	EndIf
EndIf

If !("BEMA" $ cModelo)
	cRet := TAG_LMODULO_INI + cValToChar(nTam) + TAG_LMODULO_FIM 
Endif 

Return cRet

//-----------------------------------------------------------
/*/{Protheus.doc} LjxItCCPaf()
Valida se tem impressão de item concomitante no PAF
Criada para otimizar a impressão do item 
que estava demorando

@type function
@param lReset, lógico, valida se reseta variavel
@return lItCCPAF, lógico, é venda concomitante ?
@version 	P12
@since   	07/06/2019
@autor		julio.nery
/*/
//-----------------------------------------------------------
Function LjxItCCPaf(lReset)

Default lReset := .F.

Static lItCCPAF := NIL

If lItCCPAF == NIL
	lItCCPAF := LjxBGetPaf()[2] .Or. LjVassConc()
EndIf

If lReset
	lItCCPAF := NIL
EndIf

Return lItCCPAF

//-----------------------------------------------------------
/*/{Protheus.doc} LjxRetPort()
Retorna a porta da impressora

@type function
@param lIsTotvsPD, lógico, provem do totvspdv ?
@param lTrataPort, lógico, Valida se é imp em rede ?
@return lItCCPAF, lógico, é venda concomitante ?
@version 	P12
@since   	29/11/2019
@autor		julio.nery
/*/
//-----------------------------------------------------------
Function LjxRetPort(lIsTotvsPD,lTrataPort)
Local cPorta := ""
Local cImpres:= ""
Local aRet	 := {} 

Default lTrataPort := .F.
	
If lIsTotvsPD
	cPorta := AllTrim(STFGetStat("PORTIF"))
	cImpres:= STFGetStat("IMPFISC")
Else
	cPorta := AllTrim(LJGetStation("PORTIF"))
	cImpres:= LJGetStation("IMPFISC")
EndIf

If lTrataPort
	If Upper(cPorta) == "REDE" .And. LjxImpRede(lIsTotvsPD)
		cPorta := LjxEqPIPRD()[2]
	EndIf
EndIf

aRet := {cPorta,cImpres}

Return aRet

//-----------------------------------------------------------
/*/{Protheus.doc} LjxImpRede()
Criada para validar se efetua comunicação em rede
com a impressora e ativa os outros comandos

@type function
@param lIsTotvsPD, lógico, provem do totvspdv ?
@param lLimpaVar, lógico, limpa vairavel ?
@param lReLeCFG, lógico, re-le a configuração ?
@return lLjxImpRD, lógico, Usa Impressora em Rede ?
@version 	P12
@since   	07/11/2019
@autor		julio.nery
/*/
//-----------------------------------------------------------
Function LjxImpRede(lIsTotvsPD,lLimpaVar,lReLeCFG)

Default lIsTotvsPD	:= STFIsPOS()
Default lLimpaVar	:= .F.
Default lReLeCFG	:= .F.

Static lLG_IPIMPRD	:= SLG->(ColumnPos("LG_IPIMPRD")) > 0
Static lLjxImpRD	:= NIL
Static cLjxPortaIP	:= "" 
Static cLjxModelIP	:= ""

If lReLeCFG //Para re-ler as informacoes da estacao
	lLjxImpRD := NIL
EndIf

If (lLjxImpRD == NIL) .And. lLG_IPIMPRD
	
	If lIsTotvsPD
		cLjxPortaIP := AllTrim(STFGetStat("IPIMPRD"))
		cLjxModelIP := STFGetStat("IMPFISC")
	Else
		cLjxPortaIP := AllTrim(LJGetStation("IPIMPRD"))
		cLjxModelIP := LJGetStation("IMPFISC")
	EndIf
	
	lLjxImpRD := ! Empty(cLjxPortaIP)
EndIf

If lLimpaVar
	lLjxImpRD	:= NIL
	cLjxPortaIP	:= ""
	cLjxModelIP := ""
EndIf

Return lLjxImpRD

//-----------------------------------------------------------
/*/{Protheus.doc} LjxEqPIPRD()
Retorna Impressora e IP da Impressora em Rede

@type function
@param nenhum
@return aRet, array, {Modelo Imp , Porta IP da Imp }
@version 	P12
@since   	07/11/2019
@autor		julio.nery
/*/
//-----------------------------------------------------------
Function LjxEqPIPRD()
Local aRet := {cLjxModelIP,cLjxPortaIP}

Return aRet

//-----------------------------------------------------------
/*/{Protheus.doc} LjxCtImpRD()
Criada para validar se efetua faz tratamento de Impressora 
em Rede

@type function
@param lAbreCom, lógico, Abre Porta ? Se não , fecha
@param lIsTotvsPD, lógico, Provem do TotvsPDV ?
@return nRet, numerico, retorno do comando
@version 	P12
@since   	07/11/2019
@autor		julio.nery
/*/
//-----------------------------------------------------------
Function LjxCtImpRD(lAbreCom,lIsTotvsPD)
Local nRet := -1

If LjxImpRede(lIsTotvsPD)
	If lAbreCom
		nRet := LjxINFACom(lIsTotvsPD)
	Else
		nRet := LjxINFFCom(lIsTotvsPD)
	EndIf
EndIf

Return nRet

//-----------------------------------------------------------
/*/{Protheus.doc} LjxINFACom()
Trata a abertura da porta IP

@type function
@param lIsTotvsPD, lógico, Provem do TotvsPDV ?
@return nRet, numerico, retorno do comando
@version 	P12
@since   	07/11/2019
@autor		julio.nery
/*/
//-----------------------------------------------------------
Function LjxINFACom(lIsTotvsPD)
Local nRet := -1

If lIsTotvsPD
	nRet := STWOpenPrintCommunication(cLjxModelIP, cLjxPortaIP)
Else
	nRet := INFAbrir(cLjxModelIP, cLjxPortaIP)
EndIf

Return nRet

//-----------------------------------------------------------
/*/{Protheus.doc} LjxINFACom()
Trata a fechamento da porta IP

@type function
@param lIsTotvsPD, lógico, Provem do TotvsPDV ?
@return nRet, numerico, retorno do comando
@version 	P12
@since   	07/11/2019
@autor		julio.nery
/*/
//-----------------------------------------------------------
Function LjxINFFCom(lIsTotvsPD)
Local nRet := -1

If lIsTotvsPD
	nRet := STWClosePrintCommunication(cLjxModelIP, cLjxPortaIP)
Else
	nRet := INFFechar(cLjxPortaIP)
EndIf

Return nRet

///-------------------------------------------------------------------
/*/{Protheus.doc} IFNStatus
Retorna a versão do Firmware da impressora não fiscal

@param   	nImpHnd	- Handle de uso da DLL
@param   	cTipo 	- Tipo de Operação
@param   	cBuffer	- Retorno da Função da DLL
@author  	eduardo.sales
@version 	P12
@since   	27/03/2020
@return		nRet - Retorno do comando
/*/
//-------------------------------------------------------------------
Function IFNStatus( nImpHnd, cTipo, cBuffer )

Local nRet	:= -1		// Retorno da funcao da dll

cBuffer := Str( nImpHnd ) + "," + cTipo + "," + Space(500)

If ChkAutocom() == DLL_SIGALOJA	.Or. IsAutocom( EQUIP_IMPFISCAL ) == EQUIP_DLL_SIGALOJA
	CheckDLLLj()	// Verifica se a SIGALOJA.DLL esta aberta
	nRet := ExecDLLRet(nHnd, 143, @cBuffer)
EndIf

Return nRet

//-------------------------------------------------------------------
/*/{Protheus.doc} LjVerFirm
Redireciona para a função específica de acordo com o modulo, para
consultar a versão do Firmware

@param   	nImpHnd	- Handle de uso da DLL
@param   	cTipo 	- Tipo de Operação
@param   	cBuffer	- Retorno da Função da DLL
@author  	eduardo.sales
@version 	P12
@since   	27/03/2020
@return		cVerFirm - Versão do Firmware da Impressora NF
/*/
//-------------------------------------------------------------------
Function LjVerFirm(nHdlECF, cTipo)
Local lPos		:= STFIsPOS()
Local cVerFirm 	:= ""

If lPos
	// Descomentar quando subir a implementação para o TotvsPDV
	// STWVerFrm(cTipo, @cVerFirm)
Else	
	IFNStatus(nHdlECF, cTipo, @cVerFirm)
EndIf

Return cVerFirm



//--------------------------------------------------------
/*/{Protheus.doc} LjRstEcf
Reseta todas as variaveis staticas deste fonte

@type function
@param 		nil
@author  	marisa.cruz
@since   	11/06/2020
@version 	P12
@return		Nil
/*/
//--------------------------------------------------------
Function LjRstEcf()

//Variáveis Static
nHnd		:= -1					//Handle ECF
aIsAutocom	:= nil					// Indica que os equipamentos estão utilizando a AUTOCOM
oImpFisc 	:= Nil					//Objeto do tipo LJCImpressora
oTovsApi	:= Nil					//Objeto do tipo LJCTotvsApi
oRet		:= Nil					//Objeto do tipo LJCRetImpressora
lDescTot 	:= .F.					//Controla se ja foi efetuado o desconto do total
cLojMD5  	:= Nil		 			// MD5 do PAF-ECF gerado na Homologacao FrontLoja TotvsClient_PAF 
cLojRetMD5  := NIL
cNomCupom	:= ""
cEndCupom	:= ""
cCnpjCupom	:= ""

nChkAutocom := NIL					//Retorno do parametro MV_AUTOCOM

Return nil
