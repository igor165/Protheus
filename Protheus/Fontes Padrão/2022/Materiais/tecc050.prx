#INCLUDE "PROTHEUS.CH"
#INCLUDE "TECC050.CH"
#INCLUDE "DBTREE.CH"

#DEFINE  CCADASTRO STR0001

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³TECC050   ³ Autor ³ Sergio Silveira       ³ Data ³27/09/2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Service Tracker - Rastreador da assistencia tecnica        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±       
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 -> Array opcional para pesquisa de item              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function TECC050( aMens, lSigaCRM )

Local aArea	   := GetArea()
Local aPosObj  := {} 
Local aObjects := {}                        
Local aSize    := MsAdvSize( .F. ) 

Local nLinIni  := 0 
Local nRight   := 0 

Local oDlg
Local oSay
Local oTimer
Local oMenu
                       
Local oTree

Default lSigaCRM := .F.

Private lFiltroCRM := lSigaCRM 

lPergunte := If( Valtype( aMens ) == "A", .T., Pergunte( "ATC050", .T., STR0025 ) ) 

If lPergunte // "Parametros de filtro - Service Tracker"  

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Constroi a Janela da Consulta                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	aObjects := {} 
	AAdd( aObjects, { 100, 100, .t., .t. } )
	AAdd( aObjects, {  50, 100, .f., .t. } )
	
	aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 4, 4 } 
	aPosObj := MsObjSize( aInfo, aObjects, , .t. ) 
	
	DEFINE MSDIALOG oDlg FROM	aSize[7],00 TO aSize[6],aSize[5] TITLE CCADASTRO OF oMainWnd PIXEL
	oTree := DbTree():New(aPosObj[1,1],aPosObj[1,2],aPosObj[1,3],aPosObj[1,4], oDlg,,,.T.)
	oTree:lShowHint := .F. 
	
	oTree:bRClicked := { || MaPrepView(oTree) } 
	
	oTimer:= TTimer():New(SuperGetMv("MV_ATTMPOS")*60*1000,{|| atc050proc(oTimer,oTree,oDlg,oSay)},oDlg)
	                               
	nLinIni := aPosObj[2,1] 
	nRight  := aPosObj[2,2] + 5
	
	@ aPosObj[2,1],aPosObj[2,2] TO aPosObj[2,3],aPosObj[2,4] OF oDlg PIXEL	 //"Mensagem"
	
	@ nLinIni +  8, nRight BUTTON STR0003 SIZE 040,012 FONT oDlg:oFont ACTION Atc050Param(oTimer,oTree,oDlg,oSay) OF oDlg PIXEL //"Parametros"
	@ nLinIni + 23, nRight BUTTON STR0004 SIZE 040,012 FONT oDlg:oFont ACTION MaPrepView(oTree)	OF oDlg PIXEL //"Visualizar"
	@ nLinIni + 38, nRight BUTTON STR0005 SIZE 040,012 FONT oDlg:oFont ACTION atc050Pesq(oTree)	OF oDlg PIXEL //"Pesquisar"
	
	MENU oMenu POPUP 
		MENUITEM STR0003 Action Atc050Param(oTimer,oTree,oDlg,oSay)  
		MENUITEM STR0004 Action MaPrepView(oTree)	                    
		MENUITEM STR0005 Action Atc050Pesq(oTree)              
	ENDMENU
	
	oTree:bRClicked  := { |oObject,nx,ny| oMenu:Activate( nX, nY, oObject ) }
	
	DEFINE SBUTTON FROM aPosObj[2,3] - 20, nRight+5 TYPE 1 ENABLE OF oDlg ACTION ( oDlg:End() )
	          
	Atc050proc(oTimer,oTree,oDlg,oSay, .T., aMens )
	
	ACTIVATE MSDIALOG oDlg 

EndIf
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a situacao de entrada                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea( aArea ) 

Return(Nil)
                                               
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Atc050Proc³ Autor ³ Sergio Silveira       ³ Data ³06/10/2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Constroi a regua de processamento                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oTimer : Objeto Timer                                      ³±±
±±³          ³ oTree  : Objeto Tree                                       ³±±
±±³          ³ oDlg	  : Objeto da Janela                                 ³±±
±±³          ³ oSay	  : Objeto do Say                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Atc050Proc(oTimer,oTree,oDlg,oSay,lOk,aParam)

Processa({||Atc050Reca(oTimer,oTree,oDlg,oSay,aParam)})
                                            
Return( .T. ) 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Atc050Reca³ Autor ³ Sergio Silveira       ³ Data ³27/09/2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Recalcula os sinalizadores do Tree                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oTimer : Objeto Timer                                      ³±±
±±³          ³ oTree  : Objeto Tree                                       ³±±
±±³          ³ oDlg	  : Objeto da Janela                                 ³±±
±±³          ³ oSay	  : Objeto do Say                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Atc050Reca(oTimer,oTree,oDlg,oSay,aParam)

LOCAL cCond      := ""
LOCAL cIndexKey  := ""
LOCAL cIndTrab   := ""
LOCAL cQuery     := ""
LOCAL cCondicao  := ""
LOCAL lParam     := .F. 
LOCAL nLevel     := 0 
Local cOperador  := IIf(Trim(Upper(TcGetDb())) $ "ORACLE,POSTGRES,DB2,INFORMIX","||","+")

/* 

Parametros 

MV_PAR01 - Arvore de Chamados 
MV_PAR02 - Arvore de O.S.
MV_PAR03 - Arvore de Orcamentos 
MV_PAR04 - Arvore de Projetos 
MV_PAR05 - Data de 
MV_PAR06 - Date ate 
MV_PAR07 - Cliente de
MV_PAR08 - Cliente ate 
MV_PAR09 - Produto de
MV_PAR10 - Produto ate 
MV_PAR11 - Serie de 
MV_PAR12 - Serie ate 
MV_PAR13 - Chamado de 
MV_PAR14 - Chamado ate
MV_PAR15 - O.S. de  
MV_PAR16 - O.S. ate
MV_PAR17 - Orcamento de 
MV_PAR18 - Orcamento ate 
MV_PAR19 - Projeto de 
MV_PAR20 - Projeto ate 
*/
	        
oTree:BeginUpdate()	
oTree:Reset()      
oTree:EndUpdate()

oTree:BeginUpdate()

If ValType( aParam ) == "A"
	lParam   := .T.
	MV_PAR01 := 2
	MV_PAR02 := 2
	MV_PAR03 := 2
	MV_PAR04 := 2			
	
	If !Empty( nScanAB2 := Ascan( aParam, { |x| x[1] == "AB2" } ) )   
		MV_PAR01 := 1 
	EndIf 
	
EndIf 
   
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria a arvore dos chamados                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If MV_PAR01 == 1 

	If !lParam 

		#IFDEF TOP 
	        
			cQuery := ""
			cQuery += "SELECT AB2.R_E_C_N_O_ AB2RECNO, AB2_NRCHAM, AB2_ITEM, A1_NOME FROM "+RetSqlName("AB1")+" AB1,"
			cQuery += RetSqlName("AB2") + " AB2,"
			cQuery += RetSqlName("SA1") + " SA1 "        	
			
			If lFiltroCRM
				cQuery += "INNER JOIN " + RetSqlName( "AO4" ) + " ON (A1_FILIAL " + cOperador + " A1_COD " + cOperador + " A1_LOJA) = AO4_CHVREG "			
			EndIf
			
			cQuery += "WHERE "                                             
			cQuery += "AB1_FILIAL='"  + xFilial( "AB1" ) + "' AND "
			cQuery += "AB1_CODCLI>='" + MV_PAR07         + "' AND "
			cQuery += "AB1_CODCLI<='" + MV_PAR08         + "' AND "	
			cQuery += "AB1_NRCHAM>='" + MV_PAR13         + "' AND "
			cQuery += "AB1_NRCHAM<='" + MV_PAR14         + "' AND "	
			cQuery += "AB1_EMISSA>='" + DTOS(MV_PAR05)   + "' AND "
			cQuery += "AB1_EMISSA<='" + DTOS(MV_PAR06)   + "' AND "
			           
			/*         
			// Implementacao futura 
			If MV_PAR21 == 2 
				cQuery += "AB1_STATUS='A' AND " 
			ElseIf MV_PAR21 == 3
				cQuery += "AB1_STATUS<>'A' AND "
			EndIf 
			*/
			
			cQuery += "AB1.D_E_L_E_T_<>'*' AND "
			cQuery += "AB1_NRCHAM=AB2_NRCHAM AND "				
			cQuery += "AB2_FILIAL='"  + xFilial( "AB2" ) + "' AND "
			cQuery += "AB2_CODPRO>='" + MV_PAR09         + "' AND "
			cQuery += "AB2_CODPRO<='" + MV_PAR10         + "' AND "
			cQuery += "AB2_NUMSER>='" + MV_PAR11         + "' AND "
			cQuery += "AB2_NUMSER<='" + MV_PAR12         + "' AND "  
			
			cQuery += "(( AB2_NUMOS>='" + MV_PAR15 + "  " + "' AND "
			cQuery += "AB2_NUMOS<='"    + MV_PAR16 + "zz" + "' ) OR " 
			cQuery += "AB2_NUMOS='"     + Space( Len( AB2->AB2_NUMOS ) ) + "' ) AND "
			
			cQuery += "(( AB2_NUMORC>='"+ MV_PAR17 + "  " + "' AND "
			cQuery += "AB2_NUMORC<='"   + MV_PAR18 + "zz" + "' ) OR " 
			cQuery += "AB2_NUMORC='"    + Space( Len( AB2->AB2_NUMORC ) ) + "' ) AND "
		
			cQuery += "AB2.D_E_L_E_T_<>'*' AND "
			cQuery += "A1_FILIAL='"   + xFilial( "SA1" ) + "' AND "
			
			//Aplicação de filtro para o SIGACRM
			If lFiltroCRM
				cCondicao := CRMXFilEnt( "SA1" , .T. )
				If !Empty( cCondicao )
					cQuery += cCondicao + " AND "
				EndIf
			EndIf
		
			cQuery += "AB1_CODCLI=A1_COD AND AB1_LOJA=A1_LOJA AND "
			cQuery += "SA1.D_E_L_E_T_<>'*' "
			
			cQuery += "ORDER BY " + SqlOrder( AB2->( IndexKey() ) ) 				
			
			cQuery := ChangeQuery( cQuery ) 
			
			dbUseArea( .T., "TOPCONN", TcGenQry( ,, cQuery ), "QUERY1", .F., .T. ) 
			
			If Alias() == "QUERY1"
				TcSetField( "QUERY1", "AB2RECNO", "N", 8, 0 ) 
				While !QUERY1->( Eof() ) 
					AB2->( dbGoto( QUERY1->AB2RECNO ) ) 
					MaTrkAB2( QUERY1->AB2_NRCHAM + QUERY1->AB2_ITEM, oTree, STR0027 + QUERY1->A1_NOME, @nLevel ) 
				 	oTree:TreeSeek( "" ) 
				 	oTree:CurrentNodeId := ""
					QUERY1->( dbSkip() ) 
				EndDo     
				QUERY1->( dbCloseArea() ) 
				dbSelectArea( "AB2" ) 
		    EndIf 
			
		#ELSE
	
			cIndTrab  := CriaTrab( , .F. ) 
			cIndexKey := AB1->( IndexKey() ) 
			cCond     := ""
			cCond     += "AB1_FILIAL == '" + xFilial( "AB1" ) + "' .AND. "
			cCond     += "AB1_CODCLI >= '" + MV_PAR07         + "' .AND. "
			cCond     += "AB1_CODCLI <= '" + MV_PAR08         + "' .AND. "	
			cCond     += "AB1_NRCHAM >= '" + MV_PAR13         + "' .AND. "
			cCond     += "AB1_NRCHAM <= '" + MV_PAR14         + "' .AND. "	
			           
			/*         
			// Implementacao futura 
			If MV_PAR21 == 2 
				cCond += "AB1_STATUS='A' .AND. " 
			ElseIf MV_PAR21 == 3
				cCond += "AB1_STATUS<>'A' .AND. " 				
			EndIf 
			*/
			
			cCond     += "DTOS(AB1_EMISSA)>='" + DTOS(MV_PAR05) + "' .AND. "
			cCond     += "DTOS(AB1_EMISSA)<='" + DTOS(MV_PAR06) + "'"
			 
			IndRegua( "AB1", cIndTrab, cIndexKey, , cCond )  
			
			AB1->( dbSetIndex( cIndTrab + OrdBagExt() ) ) 
			AB1->( dbGoTop() ) 
			
			While !AB1->( Eof() ) 
			
				cSeekAB2 := xFilial( "AB2" ) + AB1->AB1_NRCHAM 
				AB2->( dbSetOrder( 1 ) ) 
				AB2->( DbSeek( cSeekAB2 ) )
				
				SA1->( dbSetOrder( 1 ) )
				SA1->( DbSeek( xFilial( "SA1" ) + AB1->AB1_CODCLI + AB1->AB1_LOJA ) ) 
				
				While !AB2->( Eof() ) .And. AB2->AB2_FILIAL + AB2->AB2_NRCHAM == cSeekAB2 
				
					If AB2->AB2_CODPRO >= MV_PAR09 .And. AB2->AB2_CODPRO <= MV_PAR10 .And.;
						AB2->AB2_NUMSER >= MV_PAR11 .And. AB2->AB2_NUMSER <= MV_PAR12  .And.;					
							( ( AB2->AB2_NUMOS >= MV_PAR15 + "  " .And. AB2->AB2_NUMOS <= MV_PAR16 + "zz" ) .Or. ;
							AB2->AB2_NUMOS==Space( Len( AB2->AB2_NUMOS ) ) ) .And. ;
							( ( AB2->AB2_NUMORC >= MV_PAR17 + "  " .And. AB2->AB2_NUMORC <= MV_PAR18 + "zz" ) .Or. ;
							AB2->AB2_NUMORC==Space( Len( AB2->AB2_NUMORC ) ) )					
						
						MaTrkAB2( AB2->AB2_NRCHAM + AB2->AB2_ITEM, oTree, STR0027 + SA1->A1_NOME, @nLevel ) 
						oTree:TreeSeek( "" ) 
					 	oTree:CurrentNodeId := ""
					EndIf 	
					AB2->( dbSkip() ) 			
				EndDo
				  
				AB1->( dbSkip() ) 
			EndDo 	
			
			AB1->( dbClearIndex() ) 	
			RetIndex( "AB1" ) 		
		
		#ENDIF 	
					
	Else 
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria apenas o chamado do parametro                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		AB1->( dbSetOrder( 1 ) ) 
		If AB1->( DbSeek( xFilial( "AB1" ) + aParam[ nScanAB2, 2 ] ) ) 
			cSeekAB2 := xFilial( "AB2" ) + AB1->AB1_NRCHAM 
			SA1->( dbSetOrder( 1 ) ) 
			SA1->( DbSeek( xFilial( "SA1" ) + AB1->AB1_CODCLI + AB1->AB1_LOJA ) ) 
			If AB2->( DbSeek( cSeekAB2 ) )			
				MaTrkAB2( AB2->AB2_NRCHAM + AB2->AB2_ITEM, oTree, STR0027 + SA1->A1_NOME, @nLevel ) 
				oTree:TreeSeek( "" ) 
			 	oTree:CurrentNodeId := ""
			EndIf 			
		EndIf 			
	EndIf 				     
		
EndIf 
   
If MV_PAR02 == 1 		
				
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria a arvore das OS ( Ordens de servico criadas do zero )             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	  
	#IFDEF TOP 
		
		AB7->( dbSetOrder( 1 ) ) 
        
		cQuery := ""
		cQuery += "SELECT AB7.R_E_C_N_O_ AB7RECNO, AB7_NUMOS, AB7_ITEM, A1_NOME FROM "+RetSqlName("AB6")+" AB6,"
		cQuery += RetSqlName("AB7") + " AB7,"
		cQuery += RetSqlName("SA1") + " SA1 "
		
		If lFiltroCRM
			cQuery += "INNER JOIN " + RetSqlName( "AO4" ) + " ON (A1_FILIAL " + cOperador + " A1_COD " + cOperador + " A1_LOJA) = AO4_CHVREG "
		EndIf
		
		cQuery += "WHERE "                                             
		cQuery += "AB6_FILIAL='"  + xFilial( "AB6" ) + "' AND "
		cQuery += "AB6_CODCLI>='" + MV_PAR07         + "' AND "
		cQuery += "AB6_CODCLI<='" + MV_PAR08         + "' AND "	
		cQuery += "AB6_NUMOS>='"  + MV_PAR15         + "' AND "
		cQuery += "AB6_NUMOS<='"  + MV_PAR16         + "' AND "	
		cQuery += "AB6_EMISSA>='" + DTOS(MV_PAR05)   + "' AND "
		cQuery += "AB6_EMISSA<='" + DTOS(MV_PAR06)   + "' AND "
		           
		/*         
		// Implementacao futura 
		If MV_PAR21 == 2 
			cQuery += "AB6_STATUS='A' AND " 
		ElseIf MV_PAR21 == 3
			cQuery += "AB6_STATUS<>'A' AND " 				
		EndIf 
		*/
		
		cQuery += "AB6.D_E_L_E_T_<>'*' AND "
		cQuery += "AB6_NUMOS=AB7_NUMOS AND "				
		cQuery += "AB7_FILIAL='"  + xFilial( "AB7" ) + "' AND "
		cQuery += "AB7_CODPRO>='" + MV_PAR09         + "' AND "
		cQuery += "AB7_CODPRO<='" + MV_PAR10         + "' AND "
		cQuery += "AB7_NUMSER>='" + MV_PAR11         + "' AND "
		cQuery += "AB7_NUMSER<='" + MV_PAR12         + "' AND "
		cQuery += "AB7_NRCHAM='"  + Space(Len(AB7->AB7_NRCHAM)) + "' AND "
		cQuery += "AB7_NUMORC='"  + Space(Len(AB7->AB7_NUMORC)) + "' AND "				
		cQuery += "AB7_NUMHDE='"  + Space(Len(AB7->AB7_NUMHDE)) + "' AND "				
		cQuery += "NOT EXISTS ( SELECT ABI_NUMOS FROM " + RetSqlName( "ABI" )
		cQuery += " ABI WHERE ABI_FILIAL='"+xFilial("ABI")+"'"
		cQuery += " AND SUBSTRING(ABI.ABI_NUMOS,1,"+ALLTRIM(STR(LEN(AB7->AB7_NUMOS)))+")=AB7.AB7_NUMOS"
		cQuery += " AND SUBSTRING(ABI.ABI_NUMOS,"+ALLTRIM(STR(LEN(AB7->AB7_NUMOS)+1))+","+ALLTRIM(STR(LEN(AB7->AB7_ITEM)))+")=AB7.AB7_ITEM AND "
		cQuery += "ABI.D_E_L_E_T_<>'*' ) AND "
		cQuery += "AB7.D_E_L_E_T_<>'*' AND "
		cQuery += "A1_FILIAL='"   + xFilial( "SA1" ) + "' AND "
		
		//Aplicação de filtro para o SIGACRM
		If lFiltroCRM
			cCondicao := CRMXFilEnt( "SA1", .T. )
			If !Empty( cCondicao )
				cQuery += cCondicao + " AND "
			EndIf
		EndIf 
					
		cQuery += "AB6_CODCLI=A1_COD AND AB6_LOJA=A1_LOJA AND "
		cQuery += "SA1.D_E_L_E_T_<>'*' "
		cQuery += "ORDER BY " + SqlOrder( AB7->( IndexKey() ) )
		
		cQuery := ChangeQuery( cQuery )
		
		dbUseArea( .T., "TOPCONN", TcGenQry( ,, cQuery ), "QUERY2", .F., .T. ) 
		
		If Alias() == "QUERY2"
					
			TcSetField( "QUERY2", "AB7RECNO", "N", 8, 0 ) 

			While !QUERY2->( Eof() )
				AB7->( dbGoto( QUERY2->AB7RECNO ) ) 
				MaTrkAB7( AB7->AB7_NUMOS + AB7->AB7_ITEM, oTree, STR0027 + QUERY2->A1_NOME, @nLevel ) 
			 	oTree:TreeSeek( "" ) 
			 	oTree:CurrentNodeId := ""
				QUERY2->( dbSkip() ) 
			EndDo
			QUERY2->( dbCloseArea() ) 
			dbSelectArea( "AB7" ) 
		EndIf 
		
	#ELSE

		AB6->( dbSetOrder( 1 ) )  
	
		cIndTrab  := CriaTrab( , .F. )
		cIndexKey := AB6->( IndexKey() ) 
		cCond     := ""
		cCond     += "AB6_FILIAL == '" + xFilial( "AB6" ) + "' .AND. "
		cCond     += "AB6_CODCLI >= '" + MV_PAR07         + "' .AND. "
		cCond     += "AB6_CODCLI <= '" + MV_PAR08         + "' .AND. "	
		cCond     += "AB6_NUMOS  >= '" + MV_PAR15         + "' .AND. "
		cCond     += "AB6_NUMOS  <= '" + MV_PAR16         + "' .AND. "	
		           
		/*         
		// Implementacao futura 

		If MV_PAR21 == 2 
			cCond += "AB6_STATUS='A' .AND. " 
		ElseIf MV_PAR21 == 3
			cCond += "AB6_STATUS<>'A' .AND. " 				
		EndIf 
		*/
		
		cCond     += "DTOS(AB6_EMISSA)>='" + DTOS(MV_PAR05) + "' .AND. "
		cCond     += "DTOS(AB6_EMISSA)<='" + DTOS(MV_PAR06) + "'"
		 
		IndRegua( "AB6", cIndTrab, cIndexKey, , cCond )  
		
		AB6->( dbSetIndex( cIndTrab + OrdBagExt() ) ) 
		AB6->( dbGoTop() ) 
		
		While !AB6->( Eof() ) 
			cSeekAB7 := xFilial( "AB7" ) + AB6->AB6_NUMOS  
			AB7->( dbSetOrder( 1 ) ) 
			AB7->( DbSeek( cSeekAB7 ) )
			
			SA1->( dbSetOrder( 1 ) )
			SA1->( DbSeek( xFilial( "SA1" ) + AB6->AB6_CODCLI + AB6->AB6_LOJA ) ) 
			
			While !AB7->( Eof() ) .And. AB7->AB7_FILIAL + AB7->AB7_NUMOS == cSeekAB7 
				If Empty( AB7->AB7_NRCHAM ) .And. Empty( AB7->AB7_NUMORC ) .And. ;
					Empty( AB7->AB7_NUMHDE ) .And. AB7->AB7_CODPRO >= MV_PAR09 .And. ;
					AB7->AB7_CODPRO <= MV_PAR10 .And. AB7->AB7_NUMSER >= MV_PAR11 .And. ; 
					AB7->AB7_NUMSER <= MV_PAR12					
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica se esta OS nao foi criada atraves de um projeto               ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					ABI->( dbSetOrder( 2 ) ) 
					If !ABI->( DbSeek( xFilial( "ABI" ) + AB7->AB7_NUMOS + AB7->AB7_ITEM ) ) 
						MaTrkAB7( AB7->AB7_NUMOS + AB7->AB7_ITEM, oTree, STR0027 + SA1->A1_NOME, @nLevel ) 
						oTree:TreeSeek( "" ) 
					 	oTree:CurrentNodeId := ""
					EndIf 	
				EndIf 		
				AB7->( dbSkip() ) 	
			EndDo
			AB6->( dbSkip() ) 			
		EndDo 	

		AB6->( dbClearIndex() ) 	
		RetIndex( "AB6" ) 		
		
	#ENDIF 				
		
EndIf 	
		
If MV_PAR03 == 1 
		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria a arvore dos orcamentos ( orcamentos criados do zero )     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	#IFDEF TOP 
        
		cQuery := ""
		cQuery += "SELECT AB4.R_E_C_N_O_ AB4RECNO, AB4_NUMORC, AB4_ITEM, A1_NOME FROM "+RetSqlName("AB3")+" AB3,"
		cQuery += RetSqlName("AB4") + " AB4,"
		cQuery += RetSqlName("SA1") + " SA1 "        	
		
		If lFiltroCRM
			cQuery += "INNER JOIN " + RetSqlName( "AO4" ) + " ON (A1_FILIAL " + cOperador + " A1_COD " + cOperador + " A1_LOJA) = AO4_CHVREG "
		EndIf
		
		cQuery += "WHERE "                                             
		cQuery += "AB3_FILIAL='"  + xFilial( "AB3" ) + "' AND "
		cQuery += "AB3_CODCLI>='" + MV_PAR07         + "' AND "
		cQuery += "AB3_CODCLI<='" + MV_PAR08         + "' AND "	
		cQuery += "AB3_NUMORC>='" + MV_PAR17         + "' AND "
		cQuery += "AB3_NUMORC<='" + MV_PAR18         + "' AND "	
		           
		/*         
		// Implementacao futura 
		If MV_PAR21 == 2 
			cQuery += "AB3_STATUS='A' AND " 
		ElseIf MV_PAR21 == 3
			cQuery += "AB3_STATUS<>'A' AND " 				
		EndIf 
		*/
		
		cQuery += "AB3_EMISSA>='" + DTOS(MV_PAR05)   + "' AND "
		cQuery += "AB3_EMISSA<='" + DTOS(MV_PAR06)   + "' AND "
		cQuery += "AB3.D_E_L_E_T_<>'*' AND "
		cQuery += "AB3_NUMORC=AB4_NUMORC AND "				
		cQuery += "AB4_FILIAL='"  + xFilial( "AB4" ) + "' AND "
		cQuery += "AB4_CODPRO>='" + MV_PAR09         + "' AND "
		cQuery += "AB4_CODPRO<='" + MV_PAR10         + "' AND "
		cQuery += "AB4_NUMSER>='" + MV_PAR11         + "' AND "
		cQuery += "AB4_NUMSER<='" + MV_PAR12         + "' AND "        
		cQuery += "AB4_NRCHAM='"  + Space(Len(AB4->AB4_NRCHAM)) + "' AND "			
		cQuery += "AB4_OSORIG='"  + Space(Len(AB4->AB4_OSORIG)) + "' AND "								
		
		cQuery += "(( AB4_NUMOS>='" + MV_PAR15 + "  " + "' AND "
		cQuery += "AB4_NUMOS<='"    + MV_PAR16 + "zz" + "' ) OR " 
		cQuery += "AB4_NUMOS='"     + Space( Len( AB4->AB4_NUMOS ) ) + "' ) AND "														
		
		cQuery += "AB4.D_E_L_E_T_<>'*' AND "
		cQuery += "A1_FILIAL='"   + xFilial( "SA1" ) + "' AND "
		
		//Aplicação de filtro para o SIGACRM
		If lFiltroCRM
			cCondicao := CRMXFilEnt( "SA1", .T. )
			If !Empty( cCondicao )
				cQuery += cCondicao + " AND "
			EndIf
		EndIf 
					
		cQuery += "AB3_CODCLI=A1_COD AND AB3_LOJA=A1_LOJA AND "
		cQuery += "SA1.D_E_L_E_T_<>'*' "
		cQuery += "ORDER BY " + SqlOrder( AB4->( IndexKey() ) )  				
		
		cQuery := ChangeQuery( cQuery ) 
		
		dbUseArea( .T., "TOPCONN", TcGenQry( ,, cQuery ), "QUERY3", .F., .T. ) 
		
		If Alias() == "QUERY3"
			TcSetField( "QUERY3", "AB4RECNO", "N", 8, 0 ) 

			While !QUERY3->( Eof() ) 
				AB4->( dbGoto( QUERY3->AB4RECNO ) ) 
				MaTrkAB4( AB4->AB4_NUMORC + AB4->AB4_ITEM, oTree, STR0027 + QUERY3->A1_NOME, @nLevel ) 
			 	oTree:TreeSeek( "" ) 
			 	oTree:CurrentNodeId := ""			 	
				QUERY3->( dbSkip() ) 
			EndDo 
			QUERY3->( dbCloseArea() ) 
			dbSelectArea( "AB4" ) 
		EndIf 
		
	#ELSE

		AB3->( dbSetOrder( 1 ) ) 
		cIndTrab  := CriaTrab( , .F. ) 
		cIndexKey := AB3->( IndexKey() ) 
		cCond     := ""
		cCond     += "AB3_FILIAL == '" + xFilial( "AB3" ) + "' .AND. "
		cCond     += "AB3_CODCLI >= '" + MV_PAR07         + "' .AND. "
		cCond     += "AB3_CODCLI <= '" + MV_PAR08         + "' .AND. "	
		cCond     += "AB3_NUMORC >= '" + MV_PAR17         + "' .AND. "
		cCond     += "AB3_NUMORC <= '" + MV_PAR18         + "' .AND. "	
	           
		/*         
		// Implementacao futura 
		If MV_PAR21 == 2 
			cCond += "AB3_STATUS='A' .AND. " 
		ElseIf MV_PAR21 == 3
			cCond += "AB3_STATUS<>'A' .AND. " 				
		EndIf 
		*/
		
		cCond     += "DTOS(AB3_EMISSA)>='" + DTOS(MV_PAR05) + "' .AND. "
		cCond     += "DTOS(AB3_EMISSA)<='" + DTOS(MV_PAR06) + "'"
		 
		IndRegua( "AB3", cIndTrab, cIndexKey, , cCond )  
		
		AB3->( dbSetIndex( cIndTrab + OrdBagExt() ) ) 
		AB3->( dbGoTop() ) 
	        
		AB4->( dbSetOrder( 1 ) ) 
		While !AB3->( Eof() ) 	
			cSeekAB4 := xFilial( "AB4" ) + AB3->AB3_NUMORC 
			AB4->( dbSetOrder( 1 ) ) 
			AB4->( DbSeek( cSeekAB4 ) )
			
			SA1->( dbSetOrder( 1 ) ) 
			SA1->( DbSeek( xFilial( "SA1" ) + AB3->AB3_CODCLI + AB3->AB3_LOJA ) ) 
			
			While !AB4->( Eof() ) .And. AB4->AB4_FILIAL + AB4->AB4_NUMORC == cSeekAB4 
				If Empty( AB4->AB4_NRCHAM ) .And. Empty( AB4->AB4_OSORIG ) .And. AB4->AB4_CODPRO >= MV_PAR09 .And. ;
					AB4->AB4_CODPRO <= MV_PAR10 .And. AB4->AB4_NUMSER >= MV_PAR11 .And. ; 
					AB4->AB4_NUMSER <= MV_PAR12 .And. ;
					(( AB4->AB4_NUMOS>= MV_PAR15 + "  " .And. AB4->AB4_NUMOS <= MV_PAR16 + "zz" ) .Or. ; 
					AB4->AB4_NUMOS==Space( Len( AB4->AB4_NUMOS ) ) )
									
					MaTrkAB4( AB4->AB4_NUMORC + AB4->AB4_ITEM, oTree, STR0027 + SA1->A1_NOME, @nLevel ) 
					oTree:TreeSeek( "" ) 
				 	oTree:CurrentNodeId := ""
				EndIf 		
				AB4->( dbSkip() ) 	
			EndDo
			AB3->( dbSkip() )
		EndDo 		  
		
		AB3->( dbClearIndex() ) 	
	
		RetIndex( "AB3" ) 		
		
	#ENDIF 				
		
EndIf 	 
	  
If MV_PAR04 == 1 	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria a arvore dos projetos ( projetos criados do zero )     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	#IFDEF TOP 
        
		cQuery := ""
		cQuery += "SELECT ABI.R_E_C_N_O_ ABIRECNO, ABI_PROJET, ABI_ITEM, A1_NOME FROM "+RetSqlName("ABH")+" ABH,"
		cQuery += RetSqlName("ABI") + " ABI,"          
		cQuery += RetSqlName("SA1") + " SA1 "        	        	
		
		If lFiltroCRM
			cQuery += "INNER JOIN " + RetSqlName( "AO4" ) + " ON (A1_FILIAL " + cOperador + "A1_COD " + cOperador + " A1_LOJA) = AO4_CHVREG "
		EndIf
		
		cQuery += "WHERE "                                             
		cQuery += "ABH_FILIAL='"  + xFilial( "ABH" ) + "' AND "
		cQuery += "ABH_CODCLI>='" + MV_PAR07         + "' AND "
		cQuery += "ABH_CODCLI<='" + MV_PAR08         + "' AND "	
		cQuery += "ABH_PROJET>='" + MV_PAR19         + "' AND "
		cQuery += "ABH_PROJET<='" + MV_PAR20         + "' AND "	
		cQuery += "ABH_REFER>='"  + DTOS(MV_PAR05)   + "' AND "
		cQuery += "ABH_REFER<='"  + DTOS(MV_PAR06)   + "' AND "
		cQuery += "ABH_CODPRO>='" + MV_PAR09         + "' AND "
		cQuery += "ABH_CODPRO<='" + MV_PAR10         + "' AND "
		           
		/*         
		// Implementacao futura 
		If MV_PAR21 == 2 
			cQuery += "ABH_SITUAC='1' AND " 
		ElseIf MV_PAR21 == 3
			cQuery += "ABH_SITUAC<>'1' AND " 				
		EndIf 
		*/
		
		cQuery += "ABH.D_E_L_E_T_<>'*' AND "
		cQuery += "ABH_PROJET=ABI_PROJET AND "				
		
		cQuery += "(( ABI_NUMOS>='" + MV_PAR15 + "  " + "' AND "
		cQuery += "ABI_NUMOS<='"    + MV_PAR16 + "zz" + "' ) OR " 
		cQuery += "ABI_NUMOS='"     + Space( Len( ABI->ABI_NUMOS ) ) + "' ) AND "
		
		cQuery += "ABI.D_E_L_E_T_<>'*' AND "
		cQuery += "A1_FILIAL='"   + xFilial( "SA1" ) + "' AND "
		
		//Aplicação de filtro para o SIGACRM
		If lFiltroCRM 
			cCondicao := CRMXFilEnt( "SA1", .T. )
			If !Empty( cCondicao )
				cQuery += cCondicao + " AND "
			EndIf
		EndIf 
					
		cQuery += "ABH_CODCLI=A1_COD AND ABH_LOJA=A1_LOJA AND "
		cQuery += "SA1.D_E_L_E_T_<>'*' "
		cQuery += "ORDER BY " + SqlOrder( ABI->( IndexKey() ) )  				
		
		cQuery := ChangeQuery( cQuery ) 
		
		dbUseArea( .T., "TOPCONN", TcGenQry( ,, cQuery ), "QUERY8", .F., .T. ) 
		
		If Alias() == "QUERY8"
			TcSetField( "QUERY8", "ABIRECNO", "N", 8, 0 ) 
			While !QUERY8->( Eof() ) 
				ABI->( dbGoto( QUERY8->ABIRECNO ) ) 
				MaTrkABI( ABI->ABI_PROJET + ABI->ABI_ITEM, oTree, STR0027 + QUERY8->A1_NOME, @nLevel ) 
			 	oTree:TreeSeek( "" ) 
			 	oTree:CurrentNodeId := ""
				QUERY8->( dbSkip() ) 
			EndDo 
			QUERY8->( dbCloseArea() ) 
			dbSelectArea( "ABI" ) 
		EndIf 
		
	#ELSE	
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria a arvore dos Projetos                                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		ABH->( dbSetOrder( 1 ) ) 
		cIndTrab  := CriaTrab( , .F. ) 
		cIndexKey := ABH->( IndexKey() ) 
		cCond     := ""
		cCond     += "ABH_FILIAL == '" + xFilial( "ABH" ) + "' .AND. "
		cCond     += "ABH_CODCLI >= '" + MV_PAR07         + "' .AND. "
		cCond     += "ABH_CODCLI <= '" + MV_PAR08         + "' .AND. "	
		cCond     += "ABH_PROJET >= '" + MV_PAR19         + "' .AND. "
		cCond     += "ABH_PROJET <= '" + MV_PAR20         + "' .AND. "	
		           
		/*         
		// Implementacao futura 
		If MV_PAR21 == 2 
			cCond += "ABH_SITUAC='1' .AND. " 
		ElseIf MV_PAR21 == 3
			cCond += "ABH_SITUAC<>'1' .AND. " 				
		EndIf 
		*/
		
		cCond     += "DTOS(ABH_REFER)>='" + DTOS(MV_PAR05)+ "' .AND. "
		cCond     += "DTOS(ABH_REFER)<='" + DTOS(MV_PAR06)+ "'"
		 
		IndRegua( "ABH", cIndTrab, cIndexKey, , cCond )  
		
		ABH->( dbSetIndex( cIndTrab + OrdBagExt() ) ) 
		ABH->( dbGoTop() ) 
		
		oTree:TreeSeek( "" ) 
	 	oTree:CurrentNodeId := ""
		
		While !ABH->( Eof() ) 	
			SA1->( dbSetOrder( 1 ) ) 
			SA1->( DbSeek( xFilial( "SA1" ) + ABH->ABH_CODCLI + ABH->ABH_LOJA ) ) 
			 
			cSeekABI := xFilial( "ABI" ) + ABH->ABH_PROJET 
			
			ABI->( dbSetOrder( 1 ) ) 
			ABI->( DbSeek( cSeekABI ) )
			While !ABI->( Eof() ) .And. ABI->ABI_FILIAL + ABI->ABI_PROJET == cSeekABI 
				If (( ABI->ABI_NUMOS>= MV_PAR15 + "  " .And. ABI->ABI_NUMOS <= MV_PAR16 + "zz" ) .Or. ; 
					ABI->ABI_NUMOS==Space( Len( ABI->ABI_NUMOS ) ) )
		
					MaTrkABI( ABI->ABI_PROJET + ABI->ABI_ITEM, oTree, STR0027 + SA1->A1_NOME, @nLevel ) 
				 	oTree:TreeSeek( "" ) 				
				 	
				EndIf  	
				ABI->( dbSkip() ) 
			EndDo

			ABH->( dbSkip() ) 	                 
		EndDo 	
		
	#ENDIF 				
	
EndIf             

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Encerra a montagem do tree                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oTree:EndUpdate() 
	
Return( .T. ) 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Atc050Pesq³ Autor ³ Sergio Silveira       ³ Data ³27/09/2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pesquisa por entidades no Tree                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oTree: Objeto Tree                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Atc050Pesq( oTree )                                                       

LOCAL aItems     := {} 
LOCAL aSeek      := {} 

LOCAL cChavePesq := Space( 20 )        
LOCAL cChave     := Space( 20 )        		
LOCAL cVar       := ""

LOCAL nCombo     := 1 
LOCAL nOpca      := 0 

LOCAL oCombo          
LOCAL oDlg   
LOCAL oBut1 
LOCAL oBut2 
LOCAL oGetPesq 

AAdd( aItems, STR0014 ) // "Chamado Tecnico"
AAdd( aItems, STR0015 ) // "Ordem de Servico" 
AAdd( aItems, STR0016 ) // "Orcamento"
AAdd( aItems, STR0017 ) // "Fila de Help Desk"
AAdd( aItems, STR0018 ) // "Atendimento Help Desk"
AAdd( aItems, STR0019 ) // "Atendimento OS / Laudo"
AAdd( aItems, STR0020 ) // "Projeto"
AAdd( aItems, STR0021 ) // "Pedido de Venda"         
AAdd( aItems, STR0045 ) //"Notas fiscais"
AAdd( aItems, STR0029 ) // "Requisicoes / OS"
AAdd( aItems, STR0032 ) // "Alocacoes / OS"

AAdd( aSeek, { "AB2", 1, "@R XXXXXXXX/XX", STR0035   } )  //"Chamado + Item"
AAdd( aSeek, { "AB7", 1, "@R XXXXXX/XX"  , STR0036   } )  //"O.S. + Item"
AAdd( aSeek, { "AB4", 1, "@R XXXXXX/XX"  , STR0037   } )  //"Orcamento + Item"
AAdd( aSeek, { "ABL", 1, "@R XXXXXXXX"   , STR0038   } )  //"Help Desk"
AAdd( aSeek, { "ABK", 1, "@R XXXXXXXXXX/XX", STR0039 } )  //"H.D. + Item + Sequencia"
AAdd( aSeek, { "AB9", 1, "@R XXXXXX/XX/XXXXXX/XX", STR0040 } )  //"O.S. + Item + Tecnico + Seq."
AAdd( aSeek, { "ABI", 1, "@R XXXXXX/XX", STR0041     } )  //"Projeto + Item"
AAdd( aSeek, { "SC6", 1, "@R XXXXXX/XX", STR0042     } )  //"Pedido + Item"
AAdd( aSeek, { "SD2", 1, "@R XXXXXX/XXX/" + Replicate( "X", Len( SA1->A1_COD )) + ;
			"/" +  Replicate( "X", Len( SA1->A1_LOJA ) ), STR0046 } )   //"NF + Serie + Cliente + Loja + Item"
AAdd( aSeek, { "ABF", 1, "@R XXXXXX/XX/XX", STR0043  } )  //"O.S. + Item + Seq.RC"
AAdd( aSeek, { "ABB", 1, "@R XXXXXX/XXXXXX/99X99X99", STR0044 } ) //"O.S. + Tecnico + Data"

DEFINE MSDIALOG oDlg TITLE CCADASTRO FROM 09,0 TO 21.2,43.5 OF oMainWnd

DEFINE FONT oBold NAME "Arial" SIZE 0, -13 BOLD
@   0, 0 BITMAP oBmp RESNAME "LOGIN" oF oDlg SIZE 30, 120 NOBORDER WHEN .F. PIXEL

@ 03, 40 SAY STR0022 FONT oBold PIXEL // "Pesquisar entidade"

@ 14, 50 TO 16 ,400 LABEL '' OF oDlg   PIXEL

@ 23, 40 SAY STR0023 SIZE 40, 09 PIXEL // "Entidade"
@ 23, 80 COMBOBOX oCombo VAR cVar ITEMS aItems SIZE 80, 10 OF oDlg PIXEL 
                                                      
@ 35, 40 SAY STR0024  SIZE 40, 09    PIXEL // "Chave "
@ 35, 80 MSGET oGetPesq1 VAR cChave WHEN .F. SIZE 80, 10 VALID .T. PIXEL 

@ 48, 40 SAY STR0034 SIZE 40, 09    PIXEL // "Pesquisa "
@ 48, 80 MSGET oGetPesq VAR cChavePesq SIZE 80, 10 VALID .T. PIXEL 

oGetPesq:bGotFocus := { || oGetPesq:oGet:Picture := aSeek[ oCombo:nAt, 3 ], cChave := aSeek[ oCombo:nAt, 4 ], oGetPesq1:Refresh() }   

DEFINE SBUTTON oBut1 FROM 67,  99  TYPE 1 ACTION ( nOpca := 1, nCombo := oCombo:nAt,;
		oDlg:End() ) ENABLE of oDlg

DEFINE SBUTTON oBut2 FROM 67, 132   TYPE 2 ACTION ( nOpca := 0,;
		oDlg:End() ) ENABLE of oDlg

ACTIVATE MSDIALOG oDlg CENTERED  
 
If nOpca == 1
	cChavePesq := RTRIM( cChavePesq ) 
	If !oTree:TreeSeek( aSeek[ nCombo, 1 ] + "-" + cChavePesq ) 
		Help( " ", 1, "ATC050ENTI" ) // "Entidade nao encontrada !"
	EndIf 
EndIf 

Return( .T. ) 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Atc050Param³ Autor ³ Sergio Silveira       ³ Data ³06/10/2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Altera os parametros e redesenha o tree                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oTree: Objeto Tree                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Atc050Param(oTimer,oTree,oDlg,oSay)

If Pergunte( "ATC050", .T., STR0025 ) // "Parametros de filtro - Service Tracker"   
	Atc050proc(oTimer,oTree,oDlg,oSay)  
EndIf 

Return( .T. ) 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ Atc050Age ³ Autor ³ Sergio Silveira       ³ Data ³04/12/2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Faz a visualizacao dos itens agendados                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Atc050Age( ExpC1 )                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 -> Chave do Tree                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³26/01/2007³ Conrado Q.    ³Bops 115760: Montagem do aCols e aHeader     ³±±
±±³          ³               ³através da rotina FillGetDados.              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Atc050Age( cAlias, nRecno, nOpcx )  

Local aArea		:= GetArea()
Local oDlg		:= Nil
Local oGetd2	:= Nil
Local cCadastro := STR0033 		//"Agendamento"
Local cSeek		:= ""			// Seek para montagem do aCols
Local cWhile	:= ""			// While para montagem do aCols

Private aCols	:= {}
Private aHeader	:= {}                       
Private aRotina := MenuDef()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Variaveis utilizados no inicializador padrao                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private INCLUI  := .F.
Private ALTERA  := .F.
Private dData	 := dDataBase

dbSelectArea("SA1")
dbSetOrder(1)
dbSeek(xFilial("SA1")+AB6->AB6_CODCLI+AB6->AB6_LOJA)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Montagem aHeader e aCols, com adição do campo ABB_CODTEC³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX3")
dbSetOrder(1)
dbSeek("ABB")
While ( !Eof() .And. SX3->X3_ARQUIVO=="ABB" )
	If ( AllTrim(SX3->X3_CAMPO)$"ABB_CODTEC" )
		aadd(aHeader,{ AllTrim(SX3->X3_TITULO),;
							SX3->X3_CAMPO,;
							SX3->X3_PICTURE,;
							SX3->X3_TAMANHO,;
							SX3->X3_DECIMAL,;
							SX3->X3_VALID,;
							SX3->X3_USADO,;
							SX3->X3_TIPO,;
							SX3->X3_ARQUIVO,;
							SX3->X3_CONTEXT } )
	EndIf
	dbSelectArea("SX3")
	dbSkip()
Enddo

cSeek	:= xFilial("ABB")+AB6->AB6_NUMOS
cWhile	:= "ABB->ABB_FILIAL+ABB->ABB_NUMOS"

FillGetDados(	1				,"ABB"			,3				,cSeek				,;
   				{|| &cWhile }	,{|| .T. }		,{"ABB_CODTEC"}	,/*aYesFields*/		,; 
   				/*lOnlyYes*/	,/*cQuery*/		,/*bMontCols*/	,/*lEmpty*/			,;
   				/*aHeaderAux*/	,/*aColsAux*/	,/*bAfterCols*/	,/*bBeforeCols*/	)

If ( aCols[ 1 ][ aScan( aHeader, {|x| x[2] == "ABB_REC_WT"} ) ] <> 0 )
	DEFINE MSDIALOG oDlg TITLE cCadastro FROM 09,0 TO 28,80 OF oMainWnd
	@ 015,010 SAY   RetTitle("AB6_CODCLI") 	SIZE 040,009 	OF oDlg PIXEL
	@ 015,050 MSGET SA1->A1_NOME			SIZE 136,009 	OF oDlg PIXEL WHEN .F.
	oGetd2:=MsGetDados():New(030,005,138,314,2,"","","",.F.)
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||oDlg:End()},{||oDlg:End()})
Else
	Help(" ",1,"AT450NALO") //Hedit2
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a entrada da rotina                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

RestArea( aArea ) 

Return(Nil)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³ MenuDef  ³ Autor ³ Conrado Q. Gomes      ³ Data ³ 12.12.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Definição do aRotina (Menu funcional)                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MenuDef()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ TECC050                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
	Local aRotina := {	{STR0002	,"AxPesqui"		,0	,1	,0	,.F.	}	,;	//"Pesquisar"
						{STR0003	,"AT450Visua"	,0	,2	,0	,.T.	}	}	//"Visualizar"
Return(aRotina)
