#INCLUDE "PROTHEUS.CH"
#INCLUDE "LOCXFUNA.CH"
#INCLUDE "FWEVENTVIEWCONSTS.CH"

#DEFINE CRLF CHR(13)+CHR(10)

Static aDetFac	:= {}
Static aDatosCP := {}
Static aMercCP  := {} //Mercancías para Carta Porte
Static aImpFact	:= {}
Static aImpTras	:= {}
Static aImpRet	:= {}
Static aTrasLoc	:= {}
Static aRetLoc	:= {}
Static _a_CFDI	:= {}	// Array de retorno para consulta estándar SD1XML
Static lFamad 	:= SA2->(ColumnPos("A2_RECFMD")) > 0 .and. SE2->(ColumnPos("E2_FAMAD")) > 0 .and. SE2->(ColumnPos("E2_PARCFAM"))  > 0
Static nDesCPorte := 0
Static nImpCPorte := 0
Static nTotExen := 0

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410CalcDesc³ Autor ³ Lucas	            ³ Data ³ 16.04.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcular los descuentos para Presupuesto y Pedido de Ventas ³±±
±±³          ³el precio de venta sugerido es basado en A410Tabela().      ³±±
±±³          ³          					                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpX1: Cuando llamado por CJ_DESCn igual a .T.              ³±±
±±³          ³       Si llamado por CK_PRODUTO o CK_DESCONT igual nPrcVen ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Ninguno                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Llamado   ³Gatillos de CK_PRODUTO,X3_VALID de CJ_DESCn para Presupesto ³±±
±±³          ³            C6_PRODUTO,X3_VALID de C5_DESCn para Ped. Venta ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³Data    ³ BOPS     ³ Motivo da Alteracao                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Alf. Medrano³24/07/15³PCREQ-4256³ Se eliminan los PutSx1 y PutSX1Help  ³±±
±±³            ³        ³          ³ de la función CFDMultDoc()adecuacion ³±±
±±³            ³        ³          ³ estructuras SX Version 12.           ³±±
±±³Alf. Medrano³19/11/15³PCREQ-4263³ se realiza merge 12.1.8              ³±±
±±³Jonathan Glz³29/11/16³SERINN001-³ Se elimina funcion CriaTabSUS y uso  ³±±
±±³            ³        ³       383³ de criatrab.                         ³±±
±±³Dora Vega   ³08/06/17³ MMI-6003 ³Se modifica en la funcion ChkFolARG   ³±±
±±³            ³        ³ MMI-6016 ³validacion para punto de venta.(ARG)  ³±±
±±³L. Samaniego³22/09/17³TSSERMI01 ³Factura Electronica CFDI 3.3          ³±±
±±³            ³        ³ 1-149    ³                                      ³±±
±±³L.Samaniego ³22/11/17³DMICNS-798³Agrupar correctamente los impuestos   ³±±
±±³            ³        ³          ³retenidos y trasladados. México       ³±±
±±³  Marco A.  ³19/02/18³DMINA-556 ³Se replican para V12.1.17, los issues:³±±
±±³            ³        ³          ³ DMINA-385, DMINA-602,  DMINA-723,    ³±±
±±³            ³        ³          ³ DMINA-814, DMINA-1171, DMINA-1223,   ³±±
±±³            ³        ³          ³ DMINA-1255, DMINA-1166 y DMINA-1093; ³±±
±±³            ³        ³          ³ para Complemento de Pago - CFDI 3.3  ³±±
±±³  Marco A.  ³06/03/18³DMINA-726 ³Se replican para V12.1.17, los issues:³±±
±±³            ³        ³          ³ DMINA-64, DMINA-445, DMINA-871,      ³±±
±±³            ³        ³          ³ DMINA-817, DMINA-1082 y DMINA-1337;  ³±±
±±³            ³        ³          ³ para Esquema CFDI 3.3 (MEX)          ³±±
±±³A.Rodriguez ³20/05/18³DMINA-3107³Réplica de DMINA-2753, DMINA-2978     ³±±
±±³            ³        ³          ³Localización de CFDGerXml para        ³±±
±±³            ³        ³          ³facturación electrónica de COL        ³±±
±±³A.Rodriguez ³30/05/18³DMINA-3107³Réplica DMINA-3099 CFDGerXml genera   ³±±
±±³            ³        ³          ³XML de fac-e de exportación COL.      ³±±
±±³LuisEnríquez³26/06/18³DMINA-2624³Concepto de acuerdo a Anexo 20 Factura³±±
±±³            ³        ³          ³Global. (MEX)                         ³±±
±±³            ³        ³          ³Se ajustan lím. de impuestos p/después³±±
±±³            ³        ³          ³hacer ajuste de centavos si existe dif³±±
±±³            ³        ³          ³en función fImptosD. (MEX)            ³±±
±±³Oscar Garcia³05/07/18³DMINA-3507³fTotalImps(),fXMLFun()-Omitir del nodo³±±
±±³            ³        ³          ³Impuestos el atributo TotalImpuestosT-³±±
±±³            ³        ³          ³rasladados si no hay impuestos en el  ³±±
±±³            ³        ³          ³detalle de Conceptos.                 ³±±
±±³  Marco A.  ³25/07/18³DMANSISTE-³Se modifica funcionalidad para timbra-³±±
±±³            ³        ³23        ³de NCC, debido a que era necesario    ³±±
±±³            ³        ³          ³realizar el timbrado de la NCC antes  ³±±
±±³            ³        ³          ³de solicitar Compensacion. (MEX)      ³±±
±±³A.Rodriguez ³21/08/18³DMINA-3967³Fac-e v2.0; CFDExcXml() Nombre xml,   ³±±
±±³            ³        ³          ³CFDVerific(COL) Validación parámetros ³±±
±±³            ³        ³          ³CfdGerXml() corrección para determinar³±±
±±³            ³        ³          ³si es factura de exportación. (COL)   ³±±
±±³            ³        ³          ³CfdGerXml() corrección inconsistencia ³±±
±±³            ³        ³          ³de cambio en Sistemico DMANSISTE-23   ³±±
±±³  Marco A.  ³18/09/18³DMINA-4225³Se replica solucion realizada en issue³±±
±±³            ³        ³          ³DMINA-1414 (V11.8). Consiste en acti- ³±±
±±³            ³        ³          ³var grupo de preguntas LJA701 en base ³±±
±±³            ³        ³          ³a valor del parametro MV_NOPERL. (MEX)³±±
±±³LuisEnríquez³21/09/18³DMINA-4216³Se modifica CFDVerific para agregar la³±±
±±³            ³        ³          ³validación de parám. para FE de EQU,  ³±±
±±³            ³        ³          ³y en CFDChkFol se recuperan campos p/ ³±±
±±³            ³        ³          ³pto de emis. y estableciemiento. (EQU)³±±
±±³Verónica F. ³31/10/18³DMINA-4390³Se replica solucion realizada en issue³±±
±±³            ³        ³          ³DMINA-3766          				  ³±±
±±³            ³        ³          ³Así como se agrega nueva validación de³±±
±±³            ³        ³          ³cuando no contiene timbre fiscal.(MEX)³±±
±±³Alf. Medrano³14/01/19³TSMI01-33³En func fImptosD se obtene nValUnit y  ³±±
±±³            ³        ³          ³nImporte con MV_DESCSAI  = 1 se sumar ³±±
±±³            ³        ³          ³el descuento Solo para las NCC’s      ³±±
±±³Oscar Garcia³30/01/19³DMINA-5523³En fun. CFDGerXml se implementa funci-³±±
±±³            ³        ³          ³onalidad de Param. MV_CFDUSO.(MEX)    ³±±
±±³Oscar Garcia³25/02/19³DMINA-6068³Creación de PE M475IMPPER para impres-³±±
±±³            ³        ³          ³ion usando formato personalizado.(MEX)³±±
±±³Oscar Garcia³26/03/19³DMINA-6319³Se homologa comportamiento con param. ³±±
±±³            ³        ³          ³MV_CFDUSO al realizar venta asistida  ³±±
±±³            ³        ³          ³desde SIGALOJA. (MEX)                 ³±±
±±³Alf. Medrano³09/07/19³DMINA-6966³En fun FXMLFun cuando es cadena Org.  ³±±
±±³            ³        ³          ³se asigna fun CFDCarEsp a la desccrip.³±±
±±³            ³        ³          ³del concepto.                         ³±±
±±³Oscar Garcia³05/08/19³DMINA-6674³Se agrega parám. MV_CFDMSG para omitir³±±
±±³            ³        ³          ³mensaje de notificacion al realizar un³±±
±±³            ³        ³          ³timbre fiscal desde SIGALOJA.(MEX)    ³±±
±±³  Marco A.  ³29/08/19³DMINA-7215³Se modifica funcion LxVldRFC, para va-³±±
±±³            ³        ³          ³lidar correctamente el campo D1_UUID, ³±±
±±³            ³        ³          ³al informar un Folio Fiscal. (MEX)    ³±±
±±³  Marco A.  ³17/10/19³DMINA-7327³Se realiza tratamiento para el trata- ³±±
±±³  Luis E.   ³        ³          ³miento de descuentos, cuando se utili-³±±
±±³            ³        ³          ³za MV_DESCSAI en 2. (MEX)             ³±±
±±³LuisEnríquez³07/11/19³DMINA-7002³Se elimina pregunta de generación del ³±±
±±³            ³        ³          ³XML al guardar doc en LOCXNF. (COL)   ³±±
±±³Alf. Medrano³04/12/19³DMINA-5912³modifica fun. CFDGerXml se excluye el ³±±
±±³            ³        ³          ³campo F1_APROFOL, en fun CFDVerific se³±±
±±³            ³        ³          ³excluye val del param MV_CFDFTSE (BOL)³±±
±±³LuisEnríquez³23/12/19³DMINA-7936³Se activa funcionalidad de generación ³±±
±±³            ³        ³          ³de XML por .INI para Perú.            ³±±
±±³  Marco A.  ³19/03/20³DMINA-8523³Modificion de generacion de nodo      ³±±
±±³            ³        ³          ³Impuestos y Cadena Orinal. Tambien se ³±±
±±³            ³        ³          ³eliminan funciones no utilizadas.     ³±±
±±³Jose Glez   ³08/04/20³DMINA-8682³Se agrega el Pais Bol en la funcion   ³±±
±±³            ³        ³          ³CFDVerific donde  valida el parametro ³±±
±±³            ³        ³          ³MV_CFDUSO para Fac. Electronica (BOL) ³±±
±±³Eduardo Prz ³15/07/20³DMINA-9164³Se activa PE LOCXCONCEP en la función ³±±
±±³            ³        ³          ³fXMLFun que permite modificar campos  ³±±
±±³            ³        ³          ³en el nodo cfdi:Concepto del XML      ³±±
±±³Eduardo Prz ³29/07/20³DMINA-9642³Se reemplaza el uso de Funcion  ASize ³±±
±±³            ³        ³          ³en la funcion fImptosD para que no se ³±±
±±³            ³        ³          ³pierdan los datos correspondientes    ³±±
±±³            ³        ³          ³a las estructuras del producto.       ³±±
±±³  Marco A.  ³04/08/20³DMINA-9589³Modificion de generacion de los nodos ³±±
±±³            ³        ³          ³Traslados y Retenciones a nivel de    ³±±
±±³            ³        ³          ³Conceptos.                            ³±±
±±³LuisEnríquez³26/09/20³DMINA-    ³Correción de nodo cfdi:Traslado con el³±±
±±³            ³        ³10238     ³tipo de factor Exento (MEX)           ³±±
±±³Eduardo Prz ³30/09/20³DMINA-9914³Se realiza ajuste en función fXMLFun  ³±±
±±³            ³        ³          ³para que cuadre la sumatoria de los   ³±±
±±³            ³        ³          ³descuentos con el total desc  en XML  ³±±
±±³Veronica F. ³16/10/20³DMINA-    ³Se realiza ajuste en función fXMLFun  ³±±
±±³            ³        ³10258     ³para que segun el parametro MV_CFDSTRU³±±
±±³            ³        ³          ³imprime el nodo cfdi:parte            ³±±
±±³Veronica F. ³11/12/20³DMINA-    ³Se realiza ajuste en función fImptosD ³±±
±±³            ³        ³10756     ³y se crean dos funciones LxfBusTES y  ³±±
±±³            ³        ³          ³fSumBC() para TES bonificacion(MEX)   ³±±
±±³Alf. Medrano³17/12/20³DMINA-    ³En Fun fImptosD en array aDetFac se   ³±±
±±³            ³        ³10865     ³agrega valor de D2_ITEM/D1_ITEM.En fun³±±
±±³            ³        ³          ³fXMLFun se ordena aDetFac por ítem Asc³±±
±±³LuisEnríquez³09/02/21³DMINA-    ³juste en fun. ChkFolDOM, para cambiar ³±±
±±³            ³        ³10582     ³forma de obtener la Secuencia de Núm. ³±±
±±³            ³        ³          ³de Comprobantes Fiscales(NCF). (DOM)  ³±±
±±³Verónica F. ³11/02/21³DMINA-    ³Se modifica la función fImptosD()     ³±±
±±³            ³        ³11045     ³cuando son los impuestos locales tipo ³±±
±±³            ³        ³          ³traslados y retenciones.(MEX)         ³±±
±±³ Marco A.   ³11/03/21³DMINA-    ³Se modifica la función fXMLFun, para  ³±±
±±³            ³        ³11226     ³agregar el tamaño del campo a la gene-³±±
±±³            ³        ³          ³ración de los atributos ValorUnitario ³±±
±±³            ³        ³          ³e Importe en base a tamaño del Precio ³±±
±±³            ³        ³          ³Unitario y Total de SD1/SD2. (MEX)    ³±±
±±³Oscar Garcia³11/06/21³DMINA-    ³Se crea fun. LxAjusPr() para ajustar  ³±±
±±³            ³        ³     12430³prorrateo de NF Gastos Imp. (MEX)     ³±±
±±³  Marco A.  ³22/07/21³DMINA-    ³Se crean las funciones LxVldBaixa() y ³±±
±±³            ³        ³    12860 ³LxCanDelCP().                         ³±±
±±³Bibiana R.  ³25/07/22³DMINA-    ³Correccion del nodo Impuestos para la ³±±
±±³            ³        ³    16274 ³generación del atributo 			  ³±±
±±³            ³        ³		   ³TotalImpuestosTrasladados cuando solo ³±±
±±³            ³        ³		   ³se calcula IV0.						  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410CalcDesc()
Local aArea			:= GetArea()
Local aAreaSX3		:= SX3->(GetArea())
Local nCntFor 		:= 0
Local nPosProd		:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "CK_PRODUTO|C6_PRODUTO"})
Local nPosPrUnit	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "CK_PRUNIT|C6_PRUNIT"})
Local nPosPrcVen	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "CK_PRCVEN|C6_PRCVEN"})
Local nPosDescon	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "CK_DESCONT|C6_DESCONT"})
Local nPosVlDesc	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "CK_VALDESC|C6_VALDESC"})
Local nPosQtdVen	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "CK_QTDVEN|C6_QTDVEN"})
Local nPosValor		:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "CK_VALOR|C6_VALOR"})
Local nPosDesPro	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "CK_DESCPRO|C6_DESCPRO"})
Local nPosRecarg	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "CK_RECARGO|C6_RECARGO"})
Local nValorItem    := 0
Local nValorDesc    := 0
Local nValRecarg    := 0
Local nVlDscItem    := 0
Local cVar          := ReadVar()
Local xRet
Local nPercVar      := 0.00
Local nI            := 1
Local nPercDesc     := 0.00
Local nPercItem     := 0.00
Local nDescItem     := 0.00
Local nPercCargo    := 0.00


If AllTrim(cVar) $ "NDESC467|CLISTA|M->D2_COD|M->D2_PRCVEN|M->D2_QUANT|M->D2_DESC|M->D2_DESCON|M->D2_RECARGO"
	Return( A467CalcDesc() )
Else	
	nPercVar      := &(ReadVar())
	nPercDesc     := If(Subs(cVar,1,10)$"M->C5_DESC|M->CJ_DESC",nPercVar,0.00)
	nPercItem     := If(AllTrim(cVar)$"M->CK_DESCONT|M->C6_DESCONT",nPercVar,0.00)
	nDescItem     := If(AllTrim(cVar)$"M->CK_VALDESC|M->C6_VALDESC",nPercVar,0.00)
	nPercCargo    := If(AllTrim(cVar)$"M->CK_RECARGO|M->C6_RECARGO",nPercVar,0.00)
EndIf


If Subs(cVar,1,10) $ "M->C5_DESC|M->CJ_DESC" .or.;
	Subs(cVar,1,12) $ "M->C5_TABELA|M->CJ_TABELA"
	
	If Subs(cVar,1,12) $ "M->C5_TABELA"
		nPercDesc := M->C5_DESC1+M->C5_DESC2+M->C5_DESC3+M->C5_DESC4
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Retornar o precio de tabla caso esta sea cambiada.      	      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nPosProd > 0 .and. nPosPrUnit > 0 )
			For nCntFor := 1 To Len(aCols)
				If ! Empty(aCols[nCntFor][nPosProd]) .and. ExistBlock("CliXArt")		
					aCols[nCntFor][nPosPrUnit] := 	ExecBlock("CliXArt",.F.,.F.,{aCols[nCntFor][nPosProd],M->C5_CLIENTE+M->C5_LOJACLI,M->C5_TABELA,1})
				EndIf
			Next nCntFor
		EndIf
		
	ElseIf Subs(cVar,1,12) $ "M->CJ_TABELA"
		nPercDesc := M->CJ_DESC1+M->CJ_DESC2+M->CJ_DESC3+M->CJ_DESC4
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Retornar o precio de tabla caso esta sea cambiada.      	     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nPosProd > 0 .and. nPosPrUnit > 0 )
			For nCntFor := 1 To Len(aCols)
				If ! Empty(aCols[nCntFor][nPosProd]) .and. ExistBlock("CliXArt")
					aCols[nCntFor][nPosPrUnit] :=  ExecBlock("CliXArt",.F.,.F., {aCols[nCntFor][nPosProd],M->CJ_CLIENTE+M->CJ_LOJA,M->CJ_TABELA,1}  )
				EndIf
			Next nCntFor
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular descuento despues digitado los percentuales del encabecado.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ! Empty(aCols[1][2])
		
		For nCntFor := 1 to Len(aCols)
			If ( nPosPrcVen > 0 )
				
				nValorItem := aCols[nCntFor][nPosPrUnit]
				
				nPercItem := aCols[nCntFor][nPosDescon]
				nPercCargo:= aCols[nCntFor][nPosRecarg]
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Subtrair descuento por Item si este existir...                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( nPosVlDesc > 0.00 .and. nValorItem >= 0.00 )
					If nPosDescon > 0.00
						nVlDscItem := nValorItem * (nPercItem/100)
						nVlDscItem -= nValorItem * (aCols[nCntFor][nPosRecarg]/100)
					EndIf
					If nVlDscItem > 0
						nValorItem := nValorItem - nVlDscItem
						aCols[nCntFor][nPosVlDesc] := nVlDscItem
					EndIf
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Somar Recargo si este existir...                                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nPosRecargo > 0
					nValRecarg := nValorItem * (nPercCargo/100)
					nValRecarg -= nValorItem * ( aCols[nCntFor][nPosVlDesc]/100)
				EndIf
				If nValRecarg > 0
					nValorItem := nValorItem + nValRecarg
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Tomar o desconto por Total...                                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( nValorItem >= 0.00 )
					nValorDesc := nValorItem *(nPercDesc/100)
				EndIf
				If nPosVlDesc > 0 .and. nValorDesc > 0
					nValorItem := nValorItem - nValorDesc
				EndIf
				
				aCols[nCntFor][nPosPrcVen] := nValorItem
				
				If aCols[nCntFor][nPosQtdVen] > 0
					aCols[nCntFor][nPosVlDesc] := aCols[nCntFor][nPosVlDesc] * aCols[nCntFor][nPosQtdVen]
				EndIf
				
				If ( nPosDesPro != 0.00 )
					If aCols[n][nPosQtdVen] > 0
						aCols[nCntFor][nPosDesPro] := aCols[nCntFor][nPosVlDesc] + nValorDesc
						If aCols[nCntFor][nPosQtdVen] > 0
							aCols[nCntFor][nPosDesPro] := aCols[nCntFor][nPosDesPro] * aCols[nCntFor][nPosQtdVen]
						EndIf
					Else
						aCols[nCntFor][nPosDesPro] := 0.00
					EndIf
				EndIf
			EndIf
		Next nCntFor
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reflejar los campos de Valor Total y Valores de Descuentos.	   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nCntFor := 1 to Len(aCols)
			If nPosQtdVen > 0
				If aCols[nCntFor][nPosQtdVen] > 0
					aCols[nCntFor][nPosValor] := aCols[nCntFor][nPosPrcVen] * aCols[nCntFor][nPosQtdVen]
				EndIf
			EndIf
		Next nCntFor
		oGetDad:ForceRefresh()
	EndIf
	If Subs(cVar,1,10) $ "M->C5_DESC|M->CJ_DESC"
		xRet := .T.
	ElseIf Subs(cVar,1,12) $ "M->C5_TABELA|M->CJ_TABELA"
		xRet := 0.00
	EndIf
	
ElseIf AllTrim(cVar) $ "M->C6_PRODUTO|M->CK_PRODUTO" .or.;
	AllTrim(cVar) $ "M->C6_QTDVEN|M->CK_QTDVEN"
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular descuento despues digitacion del Codigo de Producto.          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AllTrim(cVar) $ "M->C6_PRODUTO|M->C6_QTDVEN|M->C6_RECARGO"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualizar precio com base en las tablas de Precio de Rex.              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If AllTrim(cVar) $ "M->C6_PRODUTO"
			If ExistBlock("CliXArt")
				aCols[n][nPosPrUnit] := ExecBlock("CliXArt",.F.,.F.,{aCols[n][nPosProd],M->C5_CLIENTE+M->C5_LOJACLI,M->C5_TABELA,1} )
				nPercItem :=ExecBlock("CliXArt",.F.,.F.,{aCols[n][nPosProd],M->C5_CLIENTE+M->C5_LOJACLI,M->C5_TABELA,2 })
			EndIF
			If aCols[n][nPosQtdVen] == 0
				aCols[n][nPosQtdVen] := 1
			EndIf
		EndIf
		
		nPercDesc := M->C5_DESC1+M->C5_DESC2+M->C5_DESC3+M->C5_DESC4
		
	ElseIf AllTrim(cVar) $ "M->CK_PRODUTO|M->CK_QTDVEN|M->CK_RECARGO"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualizar precio com base en las tablas de Precio de Rex.              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If AllTrim(cVar) $ "M->CK_PRODUTO"
			If ExistBlock("CliXArt")
				aCols[n][nPosPrUnit] := ExecBlock("CliXArt",.F.,.F.,  {aCols[n][nPosProd],M->CJ_CLIENTE+M->CJ_LOJA,M->CJ_TABELA,1} )
				nPercItem := ExecBlock("CliXArt",.F.,.F.,  {M->CK_PRODUTO,M->CJ_CLIENTE+M->CJ_LOJA,M->CJ_TABELA,2} )
			EndIF
			If aCols[n][nPosQtdVen] == 0
				aCols[n][nPosQtdVen] := 1
			EndIf
		EndIf
		
		nPercDesc := M->CJ_DESC1+M->CJ_DESC2+M->CJ_DESC3+M->CJ_DESC4
		
	EndIf
	
	If nPosPrUnit > 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar como base siempre Preco de Lista...   				        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]
		
		If AllTrim(cVar) $ "M->C6_PRODUTO|M->CK_PRODUTO"
			nPercItem := 0.00 //aCols[n][nPosDescon]
			nPercCargo:= 0.00 //aCols[n][nPosRecarg]
			aCols[n][nPosDescon] := 0.00
			aCols[n][nPosVlDesc] := 0.00
			aCols[n][nPosRecarg] := 0.00
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Somar Descuento por Item...                                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nPosVlDesc > 0.00 .and. nValorItem >= 0.00 )
			If nPosDescon > 0.00
				nVlDscItem := nValorItem * (nPercItem/100)
				nVlDscItem -= nValorItem * (aCols[n][nPosRecarg]/100)
			EndIf
			If nVlDscItem > 0
				nValorItem := nValorItem - nVlDscItem
				aCols[n][nPosVlDesc] := nVlDscItem
			EndIf
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Somar Recargo si este existir...                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPosRecargo > 0
			nValRecarg := nValorItem * (nPercCargo/100)
			nValRecarg -= nValorItem * ( aCols[n][nPosVlDesc]/100)
		EndIf
		If nValRecarg > 0
			nValorItem := nValorItem + nValRecarg
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar o desconto por Total...                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nValorItem >= 0.00 )
			nValorDesc := nValorItem *(nPercDesc/100)
		EndIf
		If nPosVlDesc > 0 .and. nValorDesc > 0
			nValorItem := nValorItem - nValorDesc
		EndIf
		
		aCols[n][nPosPrcVen] := nValorItem
		
		If aCols[n][nPosQtdVen] > 0
			aCols[n][nPosVlDesc] := aCols[n][nPosVlDesc] * aCols[n][nPosQtdVen]
		EndIf
		
		If ( nPosDesPro != 0.00 .and. nValorDesc != 0.00 )
			aCols[n][nPosDesPro] := aCols[n][nPosVlDesc] + nValorDesc
			If aCols[n][nPosQtdVen] > 0
				aCols[n][nPosDesPro] := aCols[n][nPosDesPro] * aCols[n][nPosQtdVen]
			EndIf
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reflejar los campos de Valor Total y Valores de Descuentos.			   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPosQtdVen > 0
			If aCols[n][nPosQtdVen] > 0
				For nI := 1 To Len(aHeader)
					aCols[n][nPosValor] := aCols[n][nPosPrcVen] * aCols[n][nPosQtdVen]
					//aCols[n][nPosVlDesc]:= (aCols[n][nPosPrUnit]-aCols[n][nPosPrcVen]) * aCols[n][nPosQtdVen]
				Next nI
			EndIf
		EndIf
	EndIf
	xRet := aCols[n][nPosPrcVen]
	
ElseIf AllTrim(cVar) $ "M->C6_DESCONT|M->CK_DESCONT"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular descuento despues digitacion de Descuneto por Item.           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AllTrim(cVar) $ "M->C6_DESCONT|M6->C6_VALDESC"
		nPercDesc := M->C5_DESC1+M->C5_DESC2+M->C5_DESC3+M->C5_DESC4
	Else
		nPercDesc := M->CJ_DESC1+M->CJ_DESC2+M->CJ_DESC3+M->CJ_DESC4
	EndIf
	
	If nPosDescon > 0 .and. nPosVlDesc> 0
		aCols[n][nPosDescon] := If(nPercItem > 0,nPercItem,0.00)
		aCols[n][nPosVlDesc] := If(nDescItem > 0,nDescItem,0.00)
	EndIf
	
	aCols[n][nPosRecarg] := aCols[n][nPosRecarg]
	nPercCargo := aCols[n][nPosRecarg]
	
	If ( nPosPrcVen > 0 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar como base siempre Preco de Lista...						      	³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Somar Recargo si este existir...                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPercCargo >= nPercItem
			nPercCargo := ( nPercCargo - nPercItem )
			aCols[n][nPosRecarg] := nPercCargo + nPercItem
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Somar Recargo si este existir...                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPercCargo >= 0
				nValRecarg := nValorItem * (nPercCargo/100)
			EndIf
			If nValRecarg >= 0
				aCols[n][nPosPrcVen] := nValorItem + nValRecarg
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Figurar o desconto com base no percentual digitado...               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPercItem >= 0
				nValorItem := aCols[n][nPosPrUnit]
				nVlDscItem := nValorItem * (nPercItem/100)
				If nVlDscItem != 0
					aCols[n][nPosVlDesc] := nVlDscItem
					aCols[n][nPosDescon] := nPercItem
				EndIf
			EndIf
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Subtrair descuento por Item si este existir...                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nPosDescon > 0 .and. nPosVlDesc > 0 )
				aCols[n][nPosVlDesc] := ( nValorItem * (nPercItem/100) )
				If nPercItem >= nPercCargo
					nPercItem := nPercItem - nPercCargo
				EndIf
				If nPercItem >=  0.00
					nVlDscItem := nValorItem * (nPercItem/100)
					If nVlDscItem >= 0
						aCols[n][nPosPrcVen] := nValorItem - nVlDscItem
					EndIf
				EndIf
			EndIf
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar o desconto por Total...                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrcVen]
		If ( nValorItem >= 0.00 )
			nValorDesc := nValorItem *(nPercDesc/100)
		EndIf
		If nPosVlDesc > 0 .and. nValorDesc > 0
			nValorItem := nValorItem - nValorDesc
		EndIf
		aCols[n][nPosPrcVen] := nValorItem
		
		If ( nPosVlDesc > 0.00 .and. nPosQtdVen > 0.00 )
			If aCols[n][nPosQtdVen] > 0
				aCols[n][nPosVlDesc] := aCols[n][nPosVlDesc] * aCols[n][nPosQtdVen]
			EndIf
		EndIf
		If nPosDesPro >= 0.00
			aCols[n][nPosDesPro] := aCols[n][nPosVlDesc] + nValorDesc
			aCols[n][nPosDesPro] := aCols[n][nPosDesPro] * aCols[n][nPosQtdVen]
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Reflejar los campos de Cantidad, Valor Total y Valores de Descuentos.  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nPosQtdVen > 0
		If aCols[n][nPosQtdVen] > 0
			aCols[n][nPosValor] := aCols[n][nPosPrcVen] * aCols[n][nPosQtdVen]
		EndIf
	EndIf
	xRet := aCols[n][nPosVlDesc]
	
ElseIf AllTrim(cVar) $ "M->C6_VALDESC|M->CK_VALDESC"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular descuento despues digitacion de Descuneto por Item.           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AllTrim(cVar) $ "M->C6_DESCONT|M6->C6_VALDESC"
		nPercDesc := M->C5_DESC1+M->C5_DESC2+M->C5_DESC3+M->C5_DESC4
	Else
		nPercDesc := M->CJ_DESC1+M->CJ_DESC2+M->CJ_DESC3+M->CJ_DESC4
	EndIf
	
	If nPosDescon > 0 .and. nPosVlDesc> 0
		aCols[n][nPosDescon] := If(nPercItem > 0,nPercItem,0.00)
		aCols[n][nPosVlDesc] := If(nDescItem > 0,nDescItem,0.00)
	EndIf
	
	aCols[n][nPosRecarg] := aCols[n][nPosRecarg]
	nPercCargo := aCols[n][nPosRecarg]
	
	If ( nPosPrcVen > 0 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar como base siempre Preco de Lista...						      	³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcular percentual de descuento caundo digitado el Valor...        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]
		nPercItem  := (nDescItem/nValorItem)*100
		
		If nPercCargo >= nPercItem
			nPercCargo := ( nPercCargo - nPercItem )
			aCols[n][nPosDescon] := nPercItem
			aCols[n][nPosRecarg] := nPercCargo + nPercItem
			If nPercCargo >= 0
				nValRecarg := nValorItem * (nPercCargo/100)
			EndIf
			If nValRecarg >= 0
				nValorItem := nValorItem + nValRecarg
			EndIf
		Else
			aCols[n][nPosDescon] := nPercItem
			aCols[n][nPosVlDesc] := nValorItem * (nPercItem/100)
			nVlDscItem := nValorItem * (nPercItem/100)
			If nVlDscItem >= 0
				nValorItem := nValorItem - nVlDscItem
			EndIf
		EndIf
		aCols[n][nPosPrcVen] := nValorItem
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar o desconto por Total...                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nValorItem >= 0.00 )
			nValorDesc := nValorItem *(nPercDesc/100)
		EndIf
		If nPosVlDesc > 0 .and. nValorDesc > 0
			nValorItem := nValorItem - nValorDesc
		EndIf
		aCols[n][nPosPrcVen] := nValorItem
		
		If ( nPosVlDesc > 0.00 .and. nPosQtdVen > 0.00 )
			If aCols[n][nPosQtdVen] > 0
				aCols[n][nPosVlDesc] := aCols[n][nPosVlDesc] * aCols[n][nPosQtdVen]
			EndIf
		EndIf
		If nPosDesPro >= 0.00
			aCols[n][nPosDesPro] := aCols[n][nPosVlDesc] + nValorDesc
			aCols[n][nPosDesPro] := aCols[n][nPosDesPro] * aCols[n][nPosQtdVen]
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Reflejar los campos de Cantidad, Valor Total y Valores de Descuentos.  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nPosQtdVen > 0
		If aCols[n][nPosQtdVen] > 0
			aCols[n][nPosValor] := aCols[n][nPosPrcVen] * aCols[n][nPosQtdVen]
		EndIf
	EndIf
	xRet := aCols[n][nPosDescon]
	
ElseIf AllTrim(cVar) $ "M->C6_RECARGO|M->CK_RECARGO"
	
	If ( nPosPrcVen > 0 .and. nPosPrUnit > 0 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar como base siempre Preco de Lista...   				            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]
		
		nPercItem := aCols[n][nPosDescon]
		nPercCargo:= aCols[n][nPosRecarg]
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Somar Recargo si este existir...                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPercCargo > nPercItem
			nPercCargo := ( nPercCargo - nPercItem )
			aCols[n][nPosRecarg] := nPercCargo + nPercItem
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Somar Recargo si este existir...                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPercCargo != 0
				nValRecarg := nValorItem * (nPercCargo/100)
			EndIf
			If nValRecarg != 0
				aCols[n][nPosPrcVen] := nValorItem + nValRecarg
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Figurar o desconto com base no percentual digitado...               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPercItem != 0
				nValorItem := aCols[n][nPosPrUnit]
				nVlDscItem := nValorItem * (nPercItem/100)
				If nVlDscItem != 0
					aCols[n][nPosVlDesc] := nVlDscItem
					aCols[n][nPosDescon] := nPercItem
				EndIf
			EndIf
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Subtrair descuento por Item si este existir...                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nPosDescon > 0 .and. nPosVlDesc > 0 )
				If nPercItem >= nPercCargo
					aCols[n][nPosVlDesc] := nValorItem * (nPercItem/100)
					nPercItem := nPercItem - nPercCargo
				EndIf
				If nPercItem >=  0.00
					nVlDscItem := nValorItem * (nPercItem/100)
					aCols[n][nPosPrcVen] := nValorItem - nVlDscItem
				EndIf
			EndIf
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar o desconto por Total...                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nValorItem >= 0.00 )
			nValorDesc := nValorItem *(nPercDesc/100)
		EndIf
		If nPosVlDesc > 0 .and. nValorDesc > 0
			nValorItem := nValorItem - nValorDesc
			aCols[n][nPosPrcVen] := nValorItem
		EndIf
		
		If aCols[n][nPosQtdVen] > 0
			aCols[n][nPosVlDesc] := aCols[n][nPosVlDesc] * aCols[n][nPosQtdVen]
		EndIf
		
		If ( nPosDesPro != 0.00 .and. nValorDesc != 0.00 )
			aCols[n][nPosDesPro] := aCols[n][nPosVlDesc] + nValorDesc
			If aCols[n][nPosQtdVen] > 0
				aCols[n][nPosDesPro] := aCols[n][nPosDesPro] * aCols[n][nPosQtdVen]
			EndIf
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reflejar los campos de Valor Total y Valores de Descuentos.			   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPosQtdVen > 0
			If aCols[n][nPosQtdVen] > 0
				For nI := 1 To Len(aHeader)
					aCols[n][nPosValor] := aCols[n][nPosPrcVen] * aCols[n][nPosQtdVen]
					//aCols[n][nPosVlDesc]:= (aCols[n][nPosPrUnit]-aCols[n][nPosPrcVen]) * aCols[n][nPosQtdVen]
				Next nI
			EndIf
		EndIf
	EndIf
	xRet := aCols[n][nPosPrcVen]
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Retorna o estado de entrada da rotina                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaSX3)
RestArea(aArea)
Return(xRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A467CalcDesc ³ Autor ³ Lucas		        ³ Data ³ 16.04.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcular los descuentos para Factura Manual MATA467         ³±±
±±³          ³el precio de venta sugerido es basado en CliXArt() y        ³±±
±±³          ³CalPrec2().					              		          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpX1: Cuando llamado por NDESC igual a .T.             	  ³±±
±±³          ³       Si llamado por D2_PRODUTO retorna nPrcVen            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Ninguno                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Llamado   ³Gatillos de D2_PRODUTO,X3_VALID de NDESC e CTABELA       	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A467CalcDesc()
Local aArea			:= GetArea()
Local aAreaSX3		:= SX3->(GetArea())
Local ni			:= 0
Local nCntFor 		:= 0
Local nPosProd		:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "D2_COD"})
Local nPosPrUnit	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "D2_PRUNIT"})
Local nPosPrcVen	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "D2_PRCVEN"})
Local nPosDescon	:= Ascan(aHeader,{|x| Subs(x[2],1,10)$"D2_DESC   "})
Local nPosVlDesc	:= Ascan(aHeader,{|x| Subs(x[2],1,10)$"D2_DESCON "})
Local nPosQtdVen	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "D2_QUANT"})
Local nPosValor		:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "D2_TOTAL"})
Local nPosDesPro	:= Ascan(aHeader,{|x| Subs(x[2],1,10)$"D2_DESCPRO"})
Local nPosRecarg	:= Ascan(aHeader,{|x| AllTrim(x[2]) $ "D2_RECARGO"})
Local nValorItem  	:= 0
Local nValorDesc  	:= 0
Local nValRecarg  	:= 0
Local nVlDscItem  	:= 0
Local cVar        	:= ReadVar()
Local nPercVar    	:= &(ReadVar())
Local nPercDesc   	:= If(AllTrim(cVar) $ "NDESC467",nPercVar,0.00)
Local nPercItem   	:= If(AllTrim(cVar) $ "M->D2_DESC",nPercVar,0.00)
Local nDescItem   	:= If(AllTrim(cVar) $ "M->D2_VALDESC",nPercVar,0.00)
Local nPercCargo  	:= If(AllTrim(cVar) $ "M->D2_RECARGO",nPercVar,0.00)
Local aLista 		:= {"Lista 1","Lista 2","Lista 3","Lista 4","Lista 5","Lista 6","Lista 7"}
Local nLista 		:= 1
Local xRet

If Empty(cLista)
	If !Empty(cA467Cli)
		cLista := aLista[Val(SA1->A1_TABELA)]
	EndIf
EndIf

nLista := Ascan(aLista,cLista)
nLista := If( nLista > 0,nLista,1 )
nPercDesc := M->NDESC467

If Empty(SA1->A1_TABELA)
	MsgStop(STR0020,STR0021) //"Cliente no tiene Lista de Precio cadastrada..."###"Atencion"
EndIf	

If Alltrim(cVar) $ "CA467CLI" .or. AllTrim(cVar) $ "CLOJA"

	cLista := aLista[If(Empty(SA1->A1_TABELA),1,Val(SA1->A1_TABELA))]
	nLista := Ascan(aLista,cLista)
	nLista := If( nLista > 0,nLista,1 )
    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Retornar o precio de tabla caso esta sea cambiada.      	      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( nPosProd > 0 .and. nPosPrUnit > 0 )
		For nCntFor := 1 To Len(aCols)
			If ! Empty(aCols[nCntFor][nPosProd]) .and. ExistBlock("CliXArt")
				aCols[nCntFor][nPosPrUnit] := ExecBlock("CliXArt",.F.,.F.,{aCols[nCntFor][nPosProd],cA467Cli+cLoja,StrZero(nLista,1),1} )
			EndIf
		Next nCntFor
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular descuento despues digitado los percentuales del encabecado.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ! Empty(aCols[1][nPosProd])
		
		For nCntFor := 1 to Len(aCols)
			If ( nPosPrcVen > 0 )
				
				nValorItem := aCols[nCntFor][nPosPrUnit]
				
				nPercItem := aCols[nCntFor][nPosDescon]
				nPercCargo:= aCols[nCntFor][nPosRecarg]
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Subtrair descuento por Item si este existir...                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( nPosVlDesc > 0.00 .and. nValorItem >= 0.00 )
					If nPosDescon > 0.00
						nVlDscItem := nValorItem * (nPercItem/100)
						nVlDscItem -= nValorItem * (aCols[nCntFor][nPosRecarg]/100)
					EndIf
					If nVlDscItem > 0
						nValorItem := nValorItem - nVlDscItem
						aCols[nCntFor][nPosVlDesc] := nVlDscItem
					EndIf
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Somar Recargo si este existir...                                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nPosRecargo > 0
					nValRecarg := nValorItem * (nPercCargo/100)
					nValRecarg -= nValorItem * ( aCols[nCntFor][nPosVlDesc]/100)
				EndIf
				If nValRecarg > 0
					nValorItem := nValorItem + nValRecarg
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Tomar o desconto por Total...                                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( nValorItem >= 0.00 )
					nValorDesc := nValorItem *(nPercDesc/100)
				EndIf
				If nPosVlDesc > 0 .and. nValorDesc > 0
					nValorItem := nValorItem - nValorDesc
				EndIf
				
				aCols[nCntFor][nPosPrcVen] := nValorItem
				
				If aCols[nCntFor][nPosQtdVen] > 0
					aCols[nCntFor][nPosVlDesc] := aCols[nCntFor][nPosVlDesc] * aCols[nCntFor][nPosQtdVen]
				EndIf
				
				If ( nPosDesPro != 0.00 )
					If aCols[n][nPosQtdVen] > 0
						aCols[nCntFor][nPosDesPro] := nValorDesc
						If aCols[nCntFor][nPosQtdVen] > 0
							aCols[nCntFor][nPosDesPro] := aCols[nCntFor][nPosDesPro] * aCols[nCntFor][nPosQtdVen]
						EndIf
					Else
						aCols[nCntFor][nPosDesPro] := 0.00
					EndIf
				EndIf
			EndIf
		Next nCntFor
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reflejar los campos de Valor Total y Valores de Descuentos.	   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nCntFor := 1 to Len(aCols)
			If nPosQtdVen > 0
				If aCols[nCntFor][nPosQtdVen] > 0
					aCols[nCntFor][nPosValor] := aCols[nCntFor][nPosPrcVen] * aCols[nCntFor][nPosQtdVen]
				EndIf
			EndIf
		Next nCntFor
		oGetDad:ForceRefresh()
	EndIf
	xRet := .T.

ElseIf Alltrim(cVar) $ "NDESC467" .or. AllTrim(cVar) $ "CLISTA"
	
	If AllTrim(cVar) $ "CLISTA"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Retornar o precio de tabla caso esta sea cambiada.      	      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nPosProd > 0 .and. nPosPrUnit > 0 )
			For nCntFor := 1 To Len(aCols)
				If ! Empty(aCols[nCntFor][nPosProd]) .and.  ExistBlock("CliXArt")
					aCols[nCntFor][nPosPrUnit] :=	ExecBlock("CliXArt",.F.,.F.,  {aCols[nCntFor][nPosProd],cA467Cli+cLoja,StrZero(nLista,1),1} )
				EndIf
			Next nCntFor
		EndIf
	EndIf		
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular descuento despues digitado los percentuales del encabecado.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ! Empty(aCols[1][nPosProd])
		
		For nCntFor := 1 to Len(aCols)
			If ( nPosPrcVen > 0 )
				
				nValorItem := aCols[nCntFor][nPosPrUnit]
				
				nPercItem := aCols[nCntFor][nPosDescon]
				nPercCargo:= aCols[nCntFor][nPosRecarg]
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Subtrair descuento por Item si este existir...                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( nPosVlDesc > 0.00 .and. nValorItem >= 0.00 )
					If nPosDescon > 0.00
						nVlDscItem := nValorItem * (nPercItem/100)
						nVlDscItem -= nValorItem * (aCols[nCntFor][nPosRecarg]/100)
					EndIf
					If nVlDscItem > 0
						nValorItem := nValorItem - nVlDscItem
						aCols[nCntFor][nPosVlDesc] := nVlDscItem
					EndIf
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Somar Recargo si este existir...                                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nPosRecargo > 0
					nValRecarg := nValorItem * (nPercCargo/100)
					nValRecarg -= nValorItem * ( aCols[nCntFor][nPosVlDesc]/100)
				EndIf
				If nValRecarg > 0
					nValorItem := nValorItem + nValRecarg
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Tomar o desconto por Total...                                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( nValorItem >= 0.00 )
					nValorDesc := nValorItem *(nPercDesc/100)
				EndIf
				If nPosVlDesc > 0 .and. nValorDesc > 0
					nValorItem := nValorItem - nValorDesc
				EndIf
				
				aCols[nCntFor][nPosPrcVen] := nValorItem
				
				If aCols[nCntFor][nPosQtdVen] > 0
					aCols[nCntFor][nPosVlDesc] := aCols[nCntFor][nPosVlDesc] * aCols[nCntFor][nPosQtdVen]
				EndIf
				
				If ( nPosDesPro != 0.00 )
					If aCols[n][nPosQtdVen] > 0
						aCols[nCntFor][nPosDesPro] := nValorDesc
						If aCols[nCntFor][nPosQtdVen] > 0
							aCols[nCntFor][nPosDesPro] := aCols[nCntFor][nPosDesPro] * aCols[nCntFor][nPosQtdVen]
						EndIf
					Else
						aCols[nCntFor][nPosDesPro] := 0.00
					EndIf
				EndIf
			EndIf
		Next nCntFor
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reflejar los campos de Valor Total y Valores de Descuentos.	   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nCntFor := 1 to Len(aCols)
			If nPosQtdVen > 0
				If aCols[nCntFor][nPosQtdVen] > 0
					aCols[nCntFor][nPosValor] := aCols[nCntFor][nPosPrcVen] * aCols[nCntFor][nPosQtdVen]
				EndIf
			EndIf
		Next nCntFor
		oGetDad:ForceRefresh()
	EndIf
	If Subs(cVar,1,08) $ "NDESC467"
		xRet := .T.
	ElseIf Subs(cVar,1,06) $ "NLISTA"
		xRet := 0.00
	EndIf
	
ElseIf AllTrim(cVar) $ "M->D2_COD" .or.;
	    AllTrim(cVar) $ "M->D2_QUANT"

	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular descuento despues digitacion del Codigo de Producto.          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AllTrim(cVar) $ "M->D2_COD|M->D2_QUANT"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualizar precio com base en las tablas de Precio de Rex.              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If AllTrim(cVar) $ "M->D2_COD"
			If ExistBlock("CliXArt")
				aCols[n][nPosPrUnit] := ExecBlock("CliXArt",.F.,.F.,  {aCols[n][nPosProd],cA467Cli+cLoja,StrZero(nLista,1),1} )
				nPercItem := ExecBlock("CliXArt",.F.,.F.,  {aCols[n][nPosProd],cA467Cli+cLoja,StrZero(nLista,1),2} )
			EndIF
			If aCols[n][nPosQtdVen] == 0
				aCols[n][nPosQtdVen] := 1
			EndIf
		EndIf
		
		nPercDesc := M->NDESC467
		
	EndIf

	If nPosPrUnit > 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar como base siempre Preco de Lista...   				        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]
		
		If AllTrim(cVar) $ "M->D2_COD"	
			nPercItem 	:= 0.00 //aCols[n][nPosDescon]
			nPercCargo	:= 0.00 //aCols[n][nPosRecarg]
			aCols[n][nPosDescon] := 0.00
			aCols[n][nPosVlDesc] := 0.00
			aCols[n][nPosRecarg] := 0.00
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Somar Descuento por Item...                                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nPosVlDesc > 0.00 .and. nValorItem >= 0.00 )
			If nPosDescon > 0.00
				nVlDscItem := nValorItem * (nPercItem/100)
				nVlDscItem -= nValorItem * (aCols[n][nPosRecarg]/100)
			EndIf
			If nVlDscItem > 0
				nValorItem := nValorItem - nVlDscItem
				aCols[n][nPosVlDesc] := nVlDscItem
			EndIf
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Somar Recargo si este existir...                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPosRecargo > 0
			nValRecarg := nValorItem * (nPercCargo/100)
			nValRecarg -= nValorItem * ( aCols[n][nPosVlDesc]/100)
		EndIf
		If nValRecarg > 0
			nValorItem := nValorItem + nValRecarg
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar o desconto por Total...                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nValorItem >= 0.00 )
			nValorDesc := nValorItem *(nPercDesc/100)
		EndIf
		If nPosVlDesc > 0 .and. nValorDesc > 0
			nValorItem := nValorItem - nValorDesc
		EndIf
		
		aCols[n][nPosPrcVen] := nValorItem
		
		If aCols[n][nPosQtdVen] > 0
			aCols[n][nPosVlDesc] := aCols[n][nPosVlDesc] * aCols[n][nPosQtdVen]
		EndIf
		
		If ( nPosDesPro != 0.00 .and. nValorDesc != 0.00 )
			aCols[n][nPosDesPro] := nValorDesc
			If aCols[n][nPosQtdVen] > 0
				aCols[n][nPosDesPro] := aCols[n][nPosDesPro] * aCols[n][nPosQtdVen]
			EndIf
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reflejar los campos de Valor Total y Valores de Descuentos.			   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPosQtdVen > 0
			If aCols[n][nPosQtdVen] > 0
				For nI := 1 To Len(aHeader)
					aCols[n][nPosValor] := aCols[n][nPosPrcVen] * aCols[n][nPosQtdVen]
					//aCols[n][nPosVlDesc]:= (aCols[n][nPosPrUnit]-aCols[n][nPosPrcVen]) * aCols[n][nPosQtdVen]
				Next nI
			EndIf
		EndIf
	EndIf
	xRet := aCols[n][nPosPrcVen]
	
ElseIf AllTrim(cVar) $ "M->D2_DESC"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular descuento despues digitacion de Descuneto por Item.           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPercDesc := M->NDESC467
	
	If nPosDescon > 0 .and. nPosVlDesc> 0
		aCols[n][nPosDescon] := If(nPercItem > 0,nPercItem,0.00)
		aCols[n][nPosVlDesc] := If(nDescItem > 0,nDescItem,0.00)
	EndIf
	
	aCols[n][nPosRecarg] := aCols[n][nPosRecarg]
	nPercCargo := aCols[n][nPosRecarg]
	
	If ( nPosPrcVen > 0 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar como base siempre Preco de Lista...						      	³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Somar Recargo si este existir...                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPercCargo >= nPercItem
			nPercCargo := ( nPercCargo - nPercItem )
			aCols[n][nPosRecarg] := nPercCargo + nPercItem
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Somar Recargo si este existir...                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPercCargo >= 0
				nValRecarg := nValorItem * (nPercCargo/100)
			EndIf
			If nValRecarg >= 0
				aCols[n][nPosPrcVen] := nValorItem + nValRecarg	
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Figurar o desconto com base no percentual digitado...               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPercItem >= 0
				nValorItem := aCols[n][nPosPrUnit]
				nVlDscItem := nValorItem * (nPercItem/100)
				If nVlDscItem != 0
					aCols[n][nPosVlDesc] := nVlDscItem
					aCols[n][nPosDescon] := nPercItem
				EndIf
			EndIf
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Subtrair descuento por Item si este existir...                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nPosDescon > 0 .and. nPosVlDesc > 0 )
				aCols[n][nPosVlDesc] := ( nValorItem * (nPercItem/100) )
				If nPercItem >= nPercCargo
					nPercItem := nPercItem - nPercCargo
				EndIf
				If nPercItem >=  0.00
					nVlDscItem := nValorItem * (nPercItem/100)
					If nVlDscItem >= 0
						aCols[n][nPosPrcVen] := nValorItem - nVlDscItem
					EndIf	
				EndIf
			EndIf			
		EndIf
			
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar o desconto por Total...                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrcVen]
		If ( nValorItem >= 0.00 )
			nValorDesc := nValorItem *(nPercDesc/100)
		EndIf
		If nPosVlDesc > 0 .and. nValorDesc > 0
			nValorItem := nValorItem - nValorDesc
		EndIf
		aCols[n][nPosPrcVen] := nValorItem
		
		If ( nPosVlDesc > 0.00 .and. nPosQtdVen > 0.00 )
			If aCols[n][nPosQtdVen] > 0
				aCols[n][nPosVlDesc] := aCols[n][nPosVlDesc] * aCols[n][nPosQtdVen]
			EndIf
		EndIf
		If nPosDesPro >= 0.00
			aCols[n][nPosDesPro] := nValorDesc
			aCols[n][nPosDesPro] := aCols[n][nPosDesPro] * aCols[n][nPosQtdVen]
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Reflejar los campos de Cantidad, Valor Total y Valores de Descuentos.  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nPosQtdVen > 0
		If aCols[n][nPosQtdVen] > 0
			aCols[n][nPosValor] := aCols[n][nPosPrcVen] * aCols[n][nPosQtdVen]
		EndIf
	EndIf
	xRet := aCols[n][nPosVlDesc]

ElseIf AllTrim(cVar) $ "M->D2_DESCON"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular descuento despues digitacion de Descuneto por Item.           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPercDesc := M->NDESC467
	
	If nPosDescon > 0 .and. nPosVlDesc> 0
		aCols[n][nPosDescon] := If(nPercItem > 0,nPercItem,0.00)
		aCols[n][nPosVlDesc] := If(nDescItem > 0,nDescItem,0.00)
	EndIf
	
	aCols[n][nPosRecarg] := aCols[n][nPosRecarg]
	nPercCargo := aCols[n][nPosRecarg]
	
	If ( nPosPrcVen > 0 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar como base siempre Preco de Lista...						      	³ 
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcular percentual de descuento caundo digitado el Valor...        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]
		nPercItem  := (nDescItem/nValorItem)*100
		
		If nPercCargo >= nPercItem
			nPercCargo := ( nPercCargo - nPercItem )
			aCols[n][nPosDescon] := nPercItem
			aCols[n][nPosRecarg] := nPercCargo + nPercItem
			If nPercCargo >= 0
				nValRecarg := nValorItem * (nPercCargo/100)
			EndIf
			If nValRecarg >= 0
				nValorItem := nValorItem + nValRecarg
			EndIf
   	   	Else
			aCols[n][nPosDescon] := nPercItem
			aCols[n][nPosVlDesc] := nValorItem * (nPercItem/100)
			nVlDscItem := nValorItem * (nPercItem/100)
			If nVlDscItem >= 0
				nValorItem := nValorItem - nVlDscItem
			EndIf
		EndIf	
		aCols[n][nPosPrcVen] := nValorItem	

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar o desconto por Total...                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nValorItem >= 0.00 )
			nValorDesc := nValorItem *(nPercDesc/100)
		EndIf
		If nPosVlDesc > 0 .and. nValorDesc > 0
			nValorItem := nValorItem - nValorDesc
		EndIf
		aCols[n][nPosPrcVen] := nValorItem		
		
		If ( nPosVlDesc > 0.00 .and. nPosQtdVen > 0.00 )
			If aCols[n][nPosQtdVen] > 0
				aCols[n][nPosVlDesc] := aCols[n][nPosVlDesc] * aCols[n][nPosQtdVen]
			EndIf
		EndIf
		If nPosDesPro >= 0.00
			aCols[n][nPosDesPro] := nValorDesc
			aCols[n][nPosDesPro] := aCols[n][nPosDesPro] * aCols[n][nPosQtdVen]
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Reflejar los campos de Cantidad, Valor Total y Valores de Descuentos.  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nPosQtdVen > 0
		If aCols[n][nPosQtdVen] > 0
			aCols[n][nPosValor] := aCols[n][nPosPrcVen] * aCols[n][nPosQtdVen]
		EndIf
	EndIf
	xRet := aCols[n][nPosDescon]

ElseIf AllTrim(cVar) $ "M->D2_RECARGO"
	
	If ( nPosPrcVen > 0 .and. nPosPrUnit > 0 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar como base siempre Preco de Lista...   				            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorItem := aCols[n][nPosPrUnit]
		
		nPercItem := aCols[n][nPosDescon]
		nPercCargo:= aCols[n][nPosRecarg]
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Somar Recargo si este existir...                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPercCargo > nPercItem
			nPercCargo := ( nPercCargo - nPercItem )
			aCols[n][nPosRecarg] := nPercCargo + nPercItem
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Somar Recargo si este existir...                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPercCargo != 0
				nValRecarg := nValorItem * (nPercCargo/100)
			EndIf
			If nValRecarg != 0
				aCols[n][nPosPrcVen] := nValorItem + nValRecarg
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Figurar o desconto com base no percentual digitado...               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPercItem != 0
				nValorItem := aCols[n][nPosPrUnit]
				nVlDscItem := nValorItem * (nPercItem/100)
				If nVlDscItem != 0
					aCols[n][nPosVlDesc] := nVlDscItem
					aCols[n][nPosDescon] := nPercItem
				EndIf
			EndIf		
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Subtrair descuento por Item si este existir...                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nPosDescon > 0 .and. nPosVlDesc > 0 )
				If nPercItem >= nPercCargo
					aCols[n][nPosVlDesc] := nValorItem * (nPercItem/100)
					nPercItem := nPercItem - nPercCargo
				EndIf
				If nPercItem >=  0.00
					nVlDscItem := nValorItem * (nPercItem/100)
					aCols[n][nPosPrcVen] := nValorItem - nVlDscItem
				EndIf	
			EndIf		
		EndIf
			
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tomar o desconto por Total...                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nValorItem >= 0.00 )
			nValorDesc := nValorItem *(nPercDesc/100)
		EndIf
		If nPosVlDesc > 0 .and. nValorDesc > 0
			nValorItem := nValorItem - nValorDesc
			aCols[n][nPosPrcVen] := nValorItem
		EndIf
		
		If aCols[n][nPosQtdVen] > 0
			aCols[n][nPosVlDesc] := aCols[n][nPosVlDesc] * aCols[n][nPosQtdVen]
		EndIf
		
		If ( nPosDesPro != 0.00 .and. nValorDesc != 0.00 )
			aCols[n][nPosDesPro] := nValorDesc
			If aCols[n][nPosQtdVen] > 0
				aCols[n][nPosDesPro] := aCols[n][nPosDesPro] * aCols[n][nPosQtdVen]
			EndIf
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reflejar los campos de Valor Total y Valores de Descuentos.			   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPosQtdVen > 0
			If aCols[n][nPosQtdVen] > 0
				For nI := 1 To Len(aHeader)
					aCols[n][nPosValor] := aCols[n][nPosPrcVen] * aCols[n][nPosQtdVen]
					//aCols[n][nPosVlDesc]:= (aCols[n][nPosPrUnit]-aCols[n][nPosPrcVen]) * aCols[n][nPosQtdVen]
				Next nI
			EndIf
		EndIf
	EndIf
	xRet := aCols[n][nPosPrcVen]
	
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Retorna o estado de entrada da rotina                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaSX3)
RestArea(aArea)
Return(xRet)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma415aBar ³ Autor ³ Lucas                 ³ Data ³ 16.04.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ EnchoiceBar especifica do Mata415a                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1: Objeto Dialog                                       ³±±
±±³          ³ ExpB2: Code Block para o Evento Ok                         ³±±
±±³          ³ ExpB3: Code Block para o Evento Cancel                     ³±±
±±³          ³ ExpN4: nOpc transmitido pela mbrowse                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma415aBar( oDlg, bOk, bCancel, nOpc )
Local aButtons := {}

If ( RpcCheckTbi() )
	aadd(aButtons,{"VENDEDOR",{|| Ma415aTbiCl()},OemToAnsi(STR0003)}) //"Inclusao de cliente TBI" //"Inclusao de cliente TBI"
EndIf

Return (EnchoiceBar(oDlg,bOK,bcancel,,aButtons))
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma415aTbiCl³ Autor ³ Lucas                ³ Data ³ 16.04.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina de atualizacao do Orcamento para clientes nao cadas- ³±±
±±³          ³trados quando vindos do TBI.                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma415aTbiCl()
Local aArea				:= GetArea()
Local lIncSA1			:= .F.

If ( Empty(M->CJ_CLIENTE) .And. !Empty(M->CJ_CNPJCLI) )
	DbSelectArea("SA1")
	DbSetOrder(3)
	If ( !DbSeek(xFilial("SA1")+M->CJ_CNPJCLI) )
		cCadastro := OemToAnsi(STR0003) //"Inclusao de cliente TBI"
		//Processa({|| lIncSA1 := TbSocioCli(M->CJ_CNPJCLI)}) se cancela por funcion TBSOCIOCLI no compilada
		If ( lIncSA1 )
			DbSelectArea("SA1")
			DbSetOrder(3)
			DbSeek(xFilial("SA1")+M->CJ_CNPJCLI)
			M->CJ_CLIENTE := SA1->A1_COD
			M->CJ_LOJA := SA1->A1_LOJA
			M->CJ_NOMCLI	:= SA1->A1_NOME
		Else
			Help(" ",1,"TBIFAULT")
		EndIf
	Else
		M->CJ_CLIENTE	:= SA1->A1_COD
		M->CJ_LOJA		:= SA1->A1_LOJA
		M->CJ_NOMCLI	:= SA1->A1_NOME
	EndIf
EndIf
lRefresh := .T.
RestArea(aArea)
Return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ DbClosePrt() ³ Autor ³ Lucas             ³ Data ³ 16.04.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Fechar comunicao com a impressora e forcar um RollBack.    ³±±
±±³          ³ Rotina usada em conjunto com Scripts de impressao,		  ³±±
±±³          ³ abandonando a operacao caso a impressora tenha erros.      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ LOCXFUN - LOJA010D, FINA087, LOJA021A                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function DbClosePrt()
LOCAL cPrinter := SuperGetMv("MV_IMPFIS")

If cPaisLoc == "ARG"
	If cPrinter == "HASAR SMH/P-PR4F"
		If __TTSInUse
			aRet  := ExecHsr( 'E' )  //Comando para fechar Impressora
			__TTSBREAK := .t.
			Help(" ",1,"ROLLBACK")
			Final(STR0002)
		Else
			aRet  := ExecHsr( 'E' ) //Comando para fechar Impressora
			MsgInfo(STR0001)
		EndIf
	EndIf
	
EndIf
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³REMTOSF     ³Autor ³ Gilson Da Silva   ³ Data ³ 11-06-2002    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Esta funcao Atualiza os arquivos SD1/SD2/SF1/SF2, pelo SCM/SCN³±±
±±³          ³Isto feito para Converter os arquivos SCM/SCN da versão 6.09  ³±±
±±³          ³para os arquivos SD1/SF1 e SD2/SF2 da versão 7.10.            ³±±
±±³          ³Grava o campo F1_TIPODOC e o Campo F2_TIPODOC.                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function REMTOSF()
CONVSCM() 
CONVSCN() 
GRAVASF1TPDOC()
GRAVASF2TPDOC()
GRAVASD1TPDOC()
GRAVASD2TPDOC()
LimpaRem()     
/*
MsgInfo(STR0011+CHR(13)+CHR(10)+CHR(13)+CHR(10)+; //" Processo finalizado com sucesso"
			STR0012+CHR(13)+CHR(10)+; //" Por favor analise as customizacoes que envolvem as taberlas SCM,SCN,SF1,SF2,SD1,SD2 "
			STR0013+CHR(13)+CHR(10)) //" de acordo com a documentacao oferecia pela Microsiga Software. "
*/
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³CONVSCM ³Autor	³ Gilson Da Silva   		  ³ Data ³ 11-06-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³VARRE TODO O ARQUIVO <SCM - REMITOS DE ENTRADA> E TRANSFERE OS³±±
±±³          ³ REGISTROS PARA OS ARQUIVOS <SF1/SD1>, QUANDO TRATAR DE UM  	 ³±±
±±³          ³REMITO NORMAL, OU SEJA REMITO DE ENTRADA COM A TES IGUAL OU   ³±±
±±³          ³MENOR QUE 500, OU TRANSFERE OS REGISTROS PARA OS ARQUIVOS     ³±±
±±³          ³<SD2/SF2>, QUANDO TRATAR DE REMITO DE DEVOLUÇÃO, OU SEJA      ³±±
±±³          ³REMITO DE ENTRADA COM A TES MAIOR QUE 500.							 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CONVSCM()
Local cCond		:= ""
Local cAuxPaisL := "ANG|ARG|AUS|BOL|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN"

UpdSet01(SCM->(RecCount()))

DbSelectArea("SCM")
DbSetOrder(1)
DbSeek(xFilial())
While !Eof() .And. CM_FILIAL == xFilial()
	If Empty(xFilial())
		UpdInc01( STR0022+GetDescRem()+STR0023 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF + GetDescRem()+' : ' + CM_REMITO + CRLF + STR0025 + CM_ITEM, .T. ) //'Convertendo '###' de entrada'###'Empresa : '###'Item : '
	Else
	UpdInc01( STR0022+GetDescRem()+STR0023 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF+ STR0026 + SM0->M0_FILIAL + CRLF + GetDescRem()+' : ' + CM_REMITO + CRLF + STR0025 + CM_ITEM, .T. ) //'Convertendo '###' de entrada'###'Empresa : '###'Filial : '###'Item : '
	EndIf
	If Empty(CM_REMITO)
		DbSkip()
		Loop
	EndIf
	
	//Posiciona no arquivo de Fornecedor para verificar Condição de pagamento e Estado.
	SA2->(DbSetOrder(1))
	SA2->(DbSeek(xFilial("SA2")+SCM->CM_FORNECE+SCM->CM_LOJA))
	
	//Posiciona no arquivo de Entrada e Saída para verificar se Poder de 3ros
	SF4->(DbSetOrder(1))
	SF4->(DbSeek(xFilial("SF4")+SCM->CM_TES))

	//Posiciona o produto, para verificar o grupo do produto.
	SB1->(DbSetOrder(1))
	SB1->(DbSeek(xfilial("SB1")+SCM->CM_PRODUTO))
	
	If CM_TES <= "500"     //QUANDO REMITO DE ENTRADA NORMAL TRANSFERE OS REGISTROS DO SCM PARA O SD1/SF1.
		DbSelectArea("SF1")
		DbSetOrder(1)
		If !DbSeek(xFilial("SF1")+SCM->CM_REMITO+SCM->CM_SERIE+SCM->CM_FORNECE+SCM->CM_LOJA)
			RecLock("SF1",.T.)
			REPLACE F1_FILIAL		WITH	xFilial("SF1")
			REPLACE F1_DOC          WITH 	SCM->CM_REMITO
			REPLACE F1_SERIE        WITH 	SCM->CM_SERIE 
			REPLACE F1_FORNECE      WITH 	SCM->CM_FORNECE
			REPLACE F1_LOJA         WITH 	SCM->CM_LOJA
			If !Empty(SCM->CM_PEDIDO)  // Se o Remito tem pedido, pega a condição de pagamento do Pedido.
				SC7->(DbSetOrder(1))
				If SC7->(DbSeek(xFilial("SC7")+SCM->CM_PEDIDO+SCM->CM_ITEMPED))
					cCond:=	SC7->C7_COND
				EndIf
			Else
				cCond:=	SA2->A2_COND
			EndIf
			REPLACE F1_COND      WITH 	cCond
			REPLACE F1_EMISSAO   WITH  SCM->CM_EMISSAO
			REPLACE F1_DTDIGIT   WITH  SCM->CM_EMISSAO
			REPLACE F1_EST     	WITH	SA2->A2_EST
			REPLACE F1_VALMERC 	WITH	SCM->CM_TOTAL
			REPLACE F1_VALBRUT 	WITH	SCM->CM_TOTAL
			REPLACE F1_DTLANC		WITH	SCM->CM_DTLANC
			REPLACE F1_OK			WITH 	SCM->CM_OK
			REPLACE F1_MOEDA		WITH  SCM->CM_MOEDA
			REPLACE F1_NATUREZ	WITH 	SCM->CM_NATUREZ
			REPLACE F1_TXMOEDA	WITH 	SCM->CM_TXMOEDA
			REPLACE F1_DESP    	WITH	SCM->CM_DESP
			REPLACE F1_ORT	 		WITH	SCM->CM_ORT
			REPLACE F1_NUMDES		WITH	SCM->CM_NUMDES
			REPLACE F1_LOJADP		WITH 	SCM->CM_LOJADP
			REPLACE F1_CONTAIN   WITH  SCM->CM_CONTAIN
			REPLACE F1_TRANS		WITH 	SCM->CM_TRANS
			If cPaisLoc == "CHI" .And. 	SCM->CM_TIPOREM == '3' //Incluido Alexandre
				REPLACE F1_TIPOREM	WITH	'6'
    		Else
				REPLACE F1_TIPOREM	WITH 	SCM->CM_TIPOREM
			EndIf				
			If SF4->F4_PODER3="R"
				REPLACE F1_TIPO     WITH    "B"
				REPLACE F1_ESPECIE  WITH    "RCB"
			Else
				REPLACE F1_TIPO     WITH    "N"
				REPLACE F1_ESPECIE  WITH    "RCN"
			EndIf
			IF F1_FORNECE == "TRANSF" .And. F1_LOJA == "00"
				REPLACE F1_TIPO     WITH    "N"
				REPLACE F1_ESPECIE  WITH    "RTE"
			EndIf
				
		Else
			RecLock("SF1",.F.)
			REPLACE F1_VALMERC 		WITH	F1_VALMERC+SCM->CM_TOTAL
			REPLACE F1_VALBRUT 		WITH	F1_VALBRUT+SCM->CM_TOTAL
		EndIf
		MsUnLock()
		
		DbSelectArea("SD1")
		DbSetOrder(1)
		If !DbSeek(xFilial("SD1")+SCM->CM_REMITO+SCM->CM_SERIE+SCM->CM_FORNECE+SCM->CM_LOJA+SCM->CM_PRODUTO+SCM->CM_ITEM)
			RecLock("SD1",.T.)
			REPLACE D1_FILIAL		WITH	xFilial("SD1")
			REPLACE D1_COD    	WITH 	SCM->CM_PRODUTO
			REPLACE D1_UM     	WITH 	SCM->CM_UM
			REPLACE D1_SEGUM   	WITH 	SCM->CM_SEGUM
			REPLACE D1_QUANT   	WITH 	SCM->CM_QUANT
			REPLACE D1_VUNIT		WITH	SCM->CM_VUNIT
			REPLACE D1_TOTAL   	WITH 	SCM->CM_TOTAL
			REPLACE D1_TES     	WITH 	SCM->CM_TES
			REPLACE D1_CF	  		WITH 	SCM->CM_CF
			REPLACE D1_CONTA   	WITH 	SCM->CM_CONTA
			REPLACE D1_CC			WITH	SCM->CM_CC
			If cPaisLoc $ cAuxPaisL
				REPLACE D1_OP    	WITH 	SCM->CM_OP
			EndIf
			REPLACE D1_PEDIDO  	WITH 	SCM->CM_PEDIDO
			REPLACE D1_ITEMPC  	WITH 	SCM->CM_ITEMPED
			REPLACE D1_FORNECE	WITH 	SCM->CM_FORNECE
			REPLACE D1_LOJA		WITH	SCM->CM_LOJA
			REPLACE D1_LOCAL   	WITH 	SCM->CM_LOCAL
			REPLACE D1_DOC     	WITH 	SCM->CM_REMITO
			REPLACE D1_EMISSAO 	WITH 	SCM->CM_EMISSAO
			REPLACE D1_DTDIGIT 	WITH 	SCM->CM_EMISSAO
			REPLACE D1_SERIE		WITH	SCM->CM_SERIE 
			REPLACE D1_CUSORI 	WITH 	SCM->CM_CUSTO1
			REPLACE D1_CUSTO  	WITH 	SCM->CM_CUSTO1
			REPLACE D1_CUSTO2  	WITH 	SCM->CM_CUSTO2
			REPLACE D1_CUSTO3  	WITH 	SCM->CM_CUSTO3
			REPLACE D1_CUSTO4  	WITH 	SCM->CM_CUSTO4
			REPLACE D1_CUSTO5		WITH	SCM->CM_CUSTO5
			REPLACE D1_QTSEGUM 	WITH 	SCM->CM_QTSEGUM
			REPLACE D1_NUMSEQ  	WITH 	SCM->CM_NUMSEQ
			REPLACE D1_QTDEDEV  	WITH 	SCM->CM_QTDDEV
			REPLACE D1_NUMCQ  	WITH 	SCM->CM_NUMCQ
			REPLACE D1_IDENTB6	WITH	SCM->CM_IDENTB6
			REPLACE D1_LOTEFOR 	WITH 	SCM->CM_LOTEFOR
			REPLACE D1_SEQCALC 	WITH 	SCM->CM_SEQCALC
			REPLACE D1_LOTECTL 	WITH 	SCM->CM_LOTECTL
			REPLACE D1_NUMLOTE	WITH 	SCM->CM_NUMLOTE
			REPLACE D1_DTVALID	WITH	SCM->CM_DTVALID
			REPLACE D1_CUSFF1  	WITH 	SCM->CM_CUSFF1
			REPLACE D1_CUSFF2  	WITH 	SCM->CM_CUSFF2
			REPLACE D1_CUSFF3 	WITH 	SCM->CM_CUSFF3
			REPLACE D1_CUSFF4 	WITH 	SCM->CM_CUSFF4
			REPLACE D1_CUSFF5 	WITH 	SCM->CM_CUSFF5
			REPLACE D1_ITEM 		WITH 	SCM->CM_ITEM
			If cPaisLoc $ cAuxPaisL
				REPLACE D1_ENDER		WITH 	SCM->CM_ENDER
			EndIf
			If cPaisLoc $ cAuxPaisL
				REPLACE D1_LOCALIZ	WITH 	SCM->CM_LOCALIZ
				REPLACE D1_SERVIC		WITH	SCM->CM_SERVIC
				REPLACE D1_STSERV  	WITH 	SCM->CM_STSERV
				REPLACE D1_TPESTR  	WITH 	SCM->CM_TPESTR
			EndIf
			If Empty(SCM->CM_NFISCAL)
				REPLACE D1_QTDACLA 		WITH 	SCM->CM_QTDACLA
			EndIf
			REPLACE D1_NFORI			WITH 	SCM->CM_REMORI   	//O remito original vai para o campo NFORI
			REPLACE D1_ITEMORI 		WITH 	SCM->CM_ITEMORI	//O ITEM do remito original vai para o campo ITEMORI
			REPLACE D1_GRUPO			WITH  SB1->B1_GRUPO
			If SF4->F4_PODER3="R"
				REPLACE D1_TIPO     WITH    "B"
				REPLACE D1_ESPECIE  WITH    "RCB"
			Else
				REPLACE D1_TIPO     WITH    "N"
				REPLACE D1_ESPECIE  WITH    "RCN"
			EndIf
			IF D1_FORNECE == "TRANSF" .And. D1_LOJA == "00"
				REPLACE D1_TIPO     WITH    "N"
				REPLACE D1_ESPECIE  WITH    "RTE"
			EndIf
			MsUnLock()
		EndIf
	Else  //QUANDO REMITO DE ENTRADA DEVOLUÇÃO, OS REGISTRO SERÃO TRANSFERIDOS DO SCM PARA O  <SD2/SF2>.
		DbSelectArea("SF2")
		DbSetOrder(1)
		If !DbSeek(xFilial("SF2")+SCM->CM_REMITO+SCM->CM_SERIE+SCM->CM_FORNECE+SCM->CM_LOJA)
			RecLock("SF2",.T.)
			REPLACE F2_DOC       WITH 	SCM->CM_REMITO
			REPLACE F2_SERIE     WITH 	SCM->CM_SERIE 
			REPLACE F2_CLIENTE   WITH 	SCM->CM_FORNECE
			REPLACE F2_LOJA      WITH 	SCM->CM_LOJA
			REPLACE F2_COND      WITH  SA2->A2_COND
			REPLACE F2_EMISSAO   WITH  SCM->CM_EMISSAO
			REPLACE F2_EST     	WITH  SA2->A2_EST
			REPLACE F2_VALBRUT 	WITH	SCM->CM_TOTAL
			REPLACE F2_VALMERC 	WITH	SCM->CM_TOTAL
			REPLACE F2_OK			WITH 	SCM->CM_OK
			REPLACE F2_DTLANC		WITH	SCM->CM_DTLANC
			REPLACE F2_FILIAL		WITH	xFilial("SF2")
			REPLACE F2_MOEDA		WITH  SCM->CM_MOEDA
			REPLACE F2_NATUREZ	WITH 	SCM->CM_NATUREZ
			REPLACE F2_TXMOEDA	WITH 	SCM->CM_TXMOEDA
			If cPaisLoc == "CHI" .And. 	SCM->CM_TIPOREM == 3 //Incluido Alexandre
				REPLACE F2_TIPOREM	WITH	6
    		Else
				REPLACE F2_TIPOREM	WITH 	SCM->CM_TIPOREM
			EndIf				
			REPLACE F2_TIPO  		WITH  "D"
			REPLACE F2_ESPECIE   WITH  "RCD"
		Else
			RecLock("SF2",.F.)
			REPLACE F2_VALBRUT 		WITH	F2_VALBRUT+SCM->CM_TOTAL
			REPLACE F2_VALMERC 		WITH	F2_VALMERC+SCM->CM_TOTAL
		EndIf
		MsUnLock()
		
		DbSelectArea("SD2")
		DbSetOrder(3)
		If !DbSeek(xFilial("SD2")+SCM->CM_REMITO+SCM->CM_SERIE+SCM->CM_FORNECE+SCM->CM_LOJA+SCM->CM_PRODUTO+SCM->CM_ITEM)
			RecLock("SD2",.T.)
			REPLACE D2_FILIAL		WITH	xFilial("SD2")
			REPLACE D2_ITEM 		WITH 	SCM->CM_ITEM
			REPLACE D2_COD    	WITH 	SCM->CM_PRODUTO
			REPLACE D2_UM     	WITH 	SCM->CM_UM
			REPLACE D2_SEGUM   	WITH 	SCM->CM_SEGUM
			REPLACE D2_QUANT   	WITH 	SCM->CM_QUANT
			REPLACE D2_PRCVEN		WITH	SCM->CM_VUNIT
			REPLACE D2_TOTAL   	WITH 	SCM->CM_TOTAL
			REPLACE D2_TES     	WITH 	SCM->CM_TES
			REPLACE D2_CF	  		WITH 	SCM->CM_CF
			REPLACE D2_CONTA   	WITH 	SCM->CM_CONTA
			If cPaisLoc $ cAuxPaisL
				REPLACE D2_OP    	WITH 	SCM->CM_OP
			EndIf
			REPLACE D2_PEDIDO  	WITH 	SCM->CM_PEDIDO
			REPLACE D2_ITEMPV  	WITH 	SCM->CM_ITEMPED
			REPLACE D2_CLIENTE	WITH 	SCM->CM_FORNECE
			REPLACE D2_LOJA		WITH	SCM->CM_LOJA
			REPLACE D2_LOCAL   	WITH 	SCM->CM_LOCAL
			REPLACE D2_DOC     	WITH 	SCM->CM_REMITO
			REPLACE D2_EMISSAO 	WITH 	SCM->CM_EMISSAO
			REPLACE D2_SERIE		WITH	SCM->CM_SERIE 
			REPLACE D2_CUSTO1  	WITH 	SCM->CM_CUSTO1
			REPLACE D2_CUSTO2  	WITH 	SCM->CM_CUSTO2
			REPLACE D2_CUSTO3  	WITH 	SCM->CM_CUSTO3
			REPLACE D2_CUSTO4  	WITH 	SCM->CM_CUSTO4
			REPLACE D2_CUSTO5		WITH	SCM->CM_CUSTO5
			REPLACE D2_PRUNIT    WITH  SCM->CM_VUNIT
			REPLACE D2_QTSEGUM 	WITH 	SCM->CM_QTSEGUM
			REPLACE D2_NUMSEQ  	WITH 	SCM->CM_NUMSEQ
			REPLACE D2_EST     	WITH	SA2->A2_EST
			REPLACE D2_QTDEDEV 	WITH 	SCM->CM_QTDDEV
			REPLACE D2_IDENTB6	WITH	SCM->CM_IDENTB6
			REPLACE D2_SEQCALC 	WITH 	SCM->CM_SEQCALC
			REPLACE D2_LOTECTL 	WITH 	SCM->CM_LOTECTL
			REPLACE D2_NUMLOTE	WITH 	SCM->CM_NUMLOTE
			REPLACE D2_DTVALID	WITH	SCM->CM_DTVALID
			REPLACE D2_DTLCTCT 	WITH 	SCM->CM_DTLANC
			REPLACE D2_CUSFF1  	WITH 	SCM->CM_CUSFF1
			REPLACE D2_CUSFF2  	WITH 	SCM->CM_CUSFF2
			REPLACE D2_CUSFF3 	WITH 	SCM->CM_CUSFF3
			REPLACE D2_CUSFF4 	WITH 	SCM->CM_CUSFF4
			REPLACE D2_CUSFF5 	WITH 	SCM->CM_CUSFF5
			REPLACE D2_CCUSTO    WITH  SCM->CM_CC
			If cPaisLoc $ cAuxPaisL
				REPLACE D2_ENDER  	WITH 	SCM->CM_ENDER
				REPLACE D2_LOCALIZ	WITH 	SCM->CM_LOCALIZ
				REPLACE D2_SERVIC		WITH	SCM->CM_SERVIC
				REPLACE D2_STSERV  	WITH 	SCM->CM_STSERV
				REPLACE D2_TPESTR  	WITH 	SCM->CM_TPESTR
			EndIf
			REPLACE D2_NFORI 		WITH 	SCM->CM_REMORI   //Bruno
			REPLACE D2_ITEMORI 	WITH 	SCM->CM_ITEMORI  //Bruno
			REPLACE D2_TIPO      WITH  "D"
			REPLACE D2_ESPECIE   WITH  "RCD"
			MsUnLock()
		EndIf
	EndIf
	DbSelectArea("SCM")
	DbSkip()
End
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³CONVSCN ³Autor	³ Gilson Da Silva   		  ³ Data ³ 11-06-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³VARRE TODO O ARQUIVO <SCN - REMITOS DE SAIDA  > E TRANSFERE OS³±±
±±³          ³ REGISTROS PARA OS ARQUIVOS <SF2/SD2>, QUANDO TRATAR DE UM  	 ³±±
±±³          ³REMITO NORMAL, OU SEJA REMITO DE SAIDA   COM A TES MAIOR      ³±±
±±³          ³QUE 500, OU TRANSFERE OS REGISTROS PARA OS ARQUIVOS           ³±±
±±³          ³<SD1/SF1>, QUANDO TRATAR DE REMITO DE DEVOLUCAO, OU SEJA      ³±±
±±³          ³REMITO DE ENTRADA COM A MENOR OU IGUAL QUE 500.		 			 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CONVSCN()
Local cCond		:= ""
Local cAuxPaisL := "ANG|ARG|AUS|BOL|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN"
UpdSet01(SCN->(RecCount()))

DbSelectArea("SCN")
DbSetOrder(1)
DbSeek(xFilial())
While !Eof() .And. CN_FILIAL == xFilial()
	If Empty(xFilial())
		UpdInc01( STR0022+GetDescRem()+STR0027 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF + GetDescRem()+' : ' + CN_REMITO + CRLF + STR0025 + CN_ITEM, .T. ) //'Convertendo '###' de saida'###'Empresa : '###'Item : '
	Else
		UpdInc01( STR0022+GetDescRem()+STR0027 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF+ STR0026 + SM0->M0_FILIAL + CRLF + GetDescRem()+' : ' + CN_REMITO + CRLF + STR0025 + CN_ITEM, .T. ) //'Convertendo '###' de saida'###'Empresa : '###'Filial : '###'Item : '
	EndIf

	If Empty(CN_REMITO)
		DbSkip()
		Loop
	EndIf
	
	//Posiciona no arquivo de Clientes para verificar Condição de pagamento e Estado.
	SA1->(DbSetOrder(1))
	SA1->(DbSeek(xFilial("SA1")+SCN->CN_CLIENTE+SCN->CN_LOJA))
	
	//Posiciona no arquivo de Entrada e Saída para verificar se Poder de 3º
	SF4->(DbSetOrder(1))
	SF4->(DbSeek(xFilial("SF4")+SCN->CN_TES))
	
	If CN_TES > "500"     //REMITO DE SAÍDA NORMAL
		DbSelectArea("SF2")
		DbSetOrder(1)
		If !DbSeek(xFilial("SF2")+SCN->CN_REMITO+SCN->CN_SERIE+SCN->CN_CLIENTE+SCN->CN_LOJA)
			RecLock("SF2",.T.)
			REPLACE F2_DOC       WITH 	SCN->CN_REMITO
			REPLACE F2_SERIE     WITH 	SCN->CN_SERIE 
			REPLACE F2_CLIENTE   WITH 	SCN->CN_CLIENTE
			REPLACE F2_LOJA      WITH 	SCN->CN_LOJA
			If !Empty(SCN->CN_PEDIDO)  // Se o Remito tem pedido, pega a condição de pagamento do Pedido.
				SC5->(DbSetOrder(1))
				If SC5->(DbSeek(xFilial("SC5")+SCN->CN_PEDIDO))
					cCond:=	SC5->C5_CONDPAG
				EndIf
			Else
				cCond:=	SA1->A1_COND
			EndIf
			REPLACE F2_COND     	WITH  cCond
			REPLACE F2_EMISSAO  	WITH  SCN->CN_EMISSAO
			REPLACE F2_EST      	WITH	SA1->A1_EST
			REPLACE F2_TIPOCLI  	WITH  SCN->CN_TIPOCLI
			REPLACE F2_VALBRUT  	WITH	SCN->CN_TOTAL
			REPLACE F2_VALMERC 	WITH	SCN->CN_TOTAL
			REPLACE F2_OK			WITH 	SCN->CN_OK
			REPLACE F2_DTLANC		WITH	SCN->CN_DTLANC
			REPLACE F2_FILIAL		WITH	xFilial("SF2")
			REPLACE F2_MOEDA		WITH  SCN->CN_MOEDA
			REPLACE F2_NATUREZ	WITH 	SCN->CN_NATUREZ
			REPLACE F2_TXMOEDA	WITH 	SCN->CN_TXMOEDA
			REPLACE F2_CARGA		WITH  SCN->CN_CARGA
			REPLACE F2_SEQCAR		WITH 	SCN->CN_SEQCAR
			REPLACE F2_CONTRAT   WITH  SCN->CN_CONTRAT  
			REPLACE F2_TIPOCLI 	WITH  SA1->A1_TIPO   //Alexandre
			REPLACE F2_FORMUL		WITH  "S"//Alexandre
			If cPaisLoc == "CHI" .And. 	SCN->CN_TIPOREM == 3 //Incluido Alexandre
				REPLACE F2_TIPOREM	WITH	6
    		Else
				REPLACE F2_TIPOREM	WITH 	SCN->CN_TIPOREM
			EndIf				
			If SF4->F4_PODER3="R"
				REPLACE F2_TIPO     WITH    "B"
				REPLACE F2_ESPECIE  WITH    "RFB"
			Else
				REPLACE F2_TIPO     WITH    "N"
				REPLACE F2_ESPECIE  WITH    "RFN"
			EndIf
			IF SF2->F2_TIPOREM == '6'
				REPLACE F2_TIPO     WITH    "N"
				REPLACE F2_ESPECIE  WITH    "RTS"
			EndIf
		Else
			RecLock("SF2",.F.)
			REPLACE F2_VALBRUT 		WITH	F2_VALBRUT+SCN->CN_TOTAL
			REPLACE F2_VALMERC 		WITH	F2_VALMERC+SCN->CN_TOTAL
		EndIf
		MsUnLock()
		
		DbSelectArea("SD2")
		DbSetOrder(3)
		If !DbSeek(xFilial("SD2")+SCN->CN_REMITO+SCN->CN_SERIE+SCN->CN_CLIENTE+SCN->CN_LOJA+SCN->CN_PRODUTO+SCN->CN_ITEM)
			RecLock("SD2",.T.)
			REPLACE D2_FILIAL		WITH	xFilial("SD2")
			REPLACE D2_ITEM 		WITH 	SCN->CN_ITEM
			REPLACE D2_COD    	WITH 	SCN->CN_PRODUTO
			REPLACE D2_UM     	WITH 	SCN->CN_UM
			REPLACE D2_SEGUM   	WITH 	SCN->CN_SEGUM
			REPLACE D2_QUANT   	WITH 	SCN->CN_QUANT
			REPLACE D2_PRCVEN		WITH	SCN->CN_PRCVEN
			REPLACE D2_TOTAL   	WITH 	SCN->CN_TOTAL
			REPLACE D2_TES     	WITH 	SCN->CN_TES
			REPLACE D2_CF	  		WITH 	SCN->CN_CF
			REPLACE D2_CONTA   	WITH 	SCN->CN_CONTA
			REPLACE D2_PEDIDO  	WITH 	SCN->CN_PEDIDO
			REPLACE D2_ITEMPV  	WITH 	SCN->CN_ITEMPED
			REPLACE D2_CLIENTE	WITH 	SCN->CN_CLIENTE
			REPLACE D2_LOJA		WITH	SCN->CN_LOJA
			REPLACE D2_LOCAL   	WITH 	SCN->CN_LOCAL
			REPLACE D2_DOC     	WITH 	SCN->CN_REMITO
			REPLACE D2_EMISSAO 	WITH 	SCN->CN_EMISSAO
			REPLACE D2_SERIE		WITH	SCN->CN_SERIE 
			REPLACE D2_GRUPO     WITH  SCN->CN_GRUPO
			REPLACE D2_TP        WITH 	SCN->CN_TIPO
			REPLACE D2_CUSTO1  	WITH 	SCN->CN_CUSTO1
			REPLACE D2_CUSTO2 	WITH 	SCN->CN_CUSTO2
			REPLACE D2_CUSTO3  	WITH 	SCN->CN_CUSTO3
			REPLACE D2_CUSTO4  	WITH 	SCN->CN_CUSTO4
			REPLACE D2_CUSTO5		WITH	SCN->CN_CUSTO5
			REPLACE D2_PRUNIT    WITH 	SCN->CN_VUNIT
			REPLACE D2_QTSEGUM 	WITH 	SCN->CN_QTSEGUM
			REPLACE D2_NUMSEQ  	WITH 	SCN->CN_NUMSEQ
			REPLACE D2_EST     	WITH	SA1->A1_EST
			REPLACE D2_QTDEDEV 	WITH 	SCN->CN_QTDDEV
			REPLACE D2_IDENTB6	WITH	SCN->CN_IDENTB6
			REPLACE D2_SEQCALC 	WITH 	SCN->CN_SEQCALC
			REPLACE D2_LOTECTL 	WITH 	SCN->CN_LOTECTL
			REPLACE D2_NUMLOTE	WITH 	SCN->CN_NUMLOTE
			REPLACE D2_DTVALID	WITH	SCN->CN_DTVALID
			If cPaisLoc $ cAuxPaisL
				REPLACE D2_NUMSERI     WITH    SCN->CN_NUMSERI
			EndIf
			REPLACE D2_DTLCTCT 	WITH 	SCN->CN_DTLANC
			REPLACE D2_CUSFF1  	WITH 	SCN->CN_CUSFF1
			REPLACE D2_CUSFF2  	WITH 	SCN->CN_CUSFF2
			REPLACE D2_CUSFF3 	WITH 	SCN->CN_CUSFF3
			REPLACE D2_CUSFF4 	WITH 	SCN->CN_CUSFF4
			REPLACE D2_CUSFF5 	WITH 	SCN->CN_CUSFF5
			REPLACE D2_CCUSTO    WITH  SCN->CN_CC
			REPLACE D2_ITEMCC    WITH  SCN->CN_ITEMCON
			REPLACE D2_LOCALIZ	WITH 	SCN->CN_LOCALIZ
			If cPaisLoc $ cAuxPaisL
				REPLACE D2_SERVIC		WITH	SCN->CN_SERVIC
				REPLACE D2_STSERV  	WITH 	SCN->CN_STSERV
				REPLACE D2_PROJPMS  WITH  	SCN->CN_PROJPMS
			EndIf
			If (SCN->(FieldPos("CN_TASKPMS")))>0
				REPLACE D2_TASKPMS  WITH  	SCN->CN_TASKPMS
			EndIf
			If (SCN->(FieldPos("CN_EDTPMS")))>0
				REPLACE D2_EDTPMS   WITH  	SCN->CN_EDTPMS
			EndIf
			REPLACE D2_GERANF  	WITH  SCN->CN_GERANF
			REPLACE D2_QTDEFAT   WITH  SCN->CN_QTDEFAT
			REPLACE D2_LOCDEST   WITH  SCN->CN_LOCDEST
			REPLACE D2_NUMDEST   WITH  SCN->CN_NUMDEST
			REPLACE D2_QTDAFAT   WITH  SCN->CN_QTDAFAT
			REPLACE D2_AGREG     WITH  SCN->CN_AGREG
			REPLACE D2_SLDLIB    WITH  SCN->CN_SLDLIB
			If  cPaisLoc $ cAuxPaisL
				REPLACE D2_TPESTR 	WITH 	SCN->CN_TPESTR
			EndIf
			//Considerar 
			If SA1->A1_CONFREM == "1" .AND. CN_QTDAFAT > 0
				REPLACE D2_CONFOR WITH 	"1"
			EndIf				
			REPLACE D2_NFORI		WITH 	SCN->CN_REMORI
			REPLACE D2_ITEMORI 	WITH 	SCN->CN_ITEMORI
			REPLACE D2_SEQUEN    WITH 	SCN->CN_SEQUEN
			REPLACE D2_FORMUL		WITH  "S"
			If SF4->F4_PODER3="R"
				REPLACE D2_TIPO   	WITH    "B"
				REPLACE D2_ESPECIE  	WITH    "RFB"
			Else
				REPLACE D2_TIPO     	WITH    "N"
				REPLACE D2_ESPECIE  	WITH    "RFN"
			EndIf
			IF SF2->F2_TIPOREM == '6'
				REPLACE D2_TIPO     WITH    "N"
				REPLACE D2_ESPECIE  WITH    "RTS"
				If SCN->CN_QTDAFAT = -1
					REPLACE D2_QTDAFAT   WITH  SCN->CN_QUANT
				EndIf
			EndIf
			MsUnLock()
		EndIf
	Else  //OS REMITO DE SAÍDA QDO DEVOLUÇÃO, OS REGISTRO SERÃO GRAVADOS NO SD1 E SF1.
		DbSelectArea("SF1")
		DbSetOrder(1)
		If !DbSeek(xFilial("SF1")+SCN->CN_REMITO+SCN->CN_SERIE+SCN->CN_CLIENTE+SCN->CN_LOJA)
			RecLock("SF1",.T.)
			REPLACE F1_FILIAL		WITH	xFilial("SF1")
			REPLACE F1_DOC       WITH 	SCN->CN_REMITO
			REPLACE F1_SERIE     WITH 	SCN->CN_SERIE 
			REPLACE F1_FORNECE   WITH 	SCN->CN_CLIENTE
			REPLACE F1_LOJA      WITH 	SCN->CN_LOJA
			REPLACE F1_COND      WITH 	SA1->A1_COND
			REPLACE F1_EMISSAO   WITH  SCN->CN_EMISSAO
			REPLACE F1_DTDIGIT   WITH  SCN->CN_EMISSAO
			REPLACE F1_EST     	WITH	SA1->A1_EST
			REPLACE F1_VALMERC 	WITH	SCN->CN_TOTAL
			REPLACE F1_VALBRUT 	WITH	SCN->CN_TOTAL
			REPLACE F1_DTLANC		WITH	SCN->CN_DTLANC
			REPLACE F1_OK			WITH 	SCN->CN_OK
			REPLACE F1_MOEDA		WITH  SCN->CN_MOEDA
			REPLACE F1_NATUREZ	WITH 	SCN->CN_NATUREZ
			REPLACE F1_TXMOEDA	WITH 	SCN->CN_TXMOEDA
			If cPaisLoc == "CHI" .And. 	SCN->CN_TIPOREM == 3 //Incluido Alexandre
				REPLACE F1_TIPOREM	WITH	6
    		Else
				REPLACE F1_TIPOREM	WITH 	SCN->CN_TIPOREM
			EndIf				

			REPLACE F1_TIPO      WITH    "D"
			REPLACE F1_ESPECIE   WITH    "RFD"
		Else
			RecLock("SF1",.F.)
			REPLACE F1_VALMERC 	WITH	F1_VALMERC+SCN->CN_TOTAL
			REPLACE F1_VALBRUT 	WITH	F1_VALBRUT+SCN->CN_TOTAL
		EndIf
		MsUnLock()
		
		DbSelectArea("SD1")
		DbSetOrder(1)
		If !DbSeek(xFilial("SD1")+SCN->CN_REMITO+SCN->CN_SERIE+SCN->CN_CLIENTE+SCN->CN_LOJA+SCN->CN_PRODUTO+SCN->CN_ITEM)
			RecLock("SD1",.T.)
			REPLACE D1_FILIAL		WITH	xFilial("SD1")
			REPLACE D1_COD    	WITH 	SCN->CN_PRODUTO
			REPLACE D1_UM     	WITH 	SCN->CN_UM
			REPLACE D1_SEGUM   	WITH 	SCN->CN_SEGUM
			REPLACE D1_QUANT   	WITH 	SCN->CN_QUANT
			REPLACE D1_VUNIT		WITH	SCN->CN_PRCVEN
			REPLACE D1_TOTAL   	WITH 	SCN->CN_TOTAL
			REPLACE D1_TES     	WITH 	SCN->CN_TES
			REPLACE D1_CF	  		WITH 	SCN->CN_CF
			REPLACE D1_CONTA   	WITH 	SCN->CN_CONTA
			REPLACE D1_ITEMCTA	WITH  SCN->CN_ITEMCON
			REPLACE D1_CC			WITH	SCN->CN_CC
			REPLACE D1_FORNECE	WITH 	SCN->CN_CLIENTE
			REPLACE D1_LOJA		WITH	SCN->CN_LOJA
			REPLACE D1_LOCAL   	WITH 	SCN->CN_LOCAL
			REPLACE D1_DOC     	WITH 	SCN->CN_REMITO
			REPLACE D1_EMISSAO 	WITH 	SCN->CN_EMISSAO
			REPLACE D1_DTDIGIT 	WITH 	SCN->CN_EMISSAO
			REPLACE D1_SERIE		WITH	SCN->CN_SERIE 
			REPLACE D1_GRUPO     WITH 	SCN->CN_GRUPO
			REPLACE D1_CUSTO  	WITH 	SCN->CN_CUSTO1
			REPLACE D1_CUSTO2  	WITH 	SCN->CN_CUSTO2
			REPLACE D1_CUSTO3  	WITH 	SCN->CN_CUSTO3
			REPLACE D1_CUSTO4  	WITH 	SCN->CN_CUSTO4
			REPLACE D1_CUSTO5		WITH	SCN->CN_CUSTO5
			REPLACE D1_TP        WITH  SCN->CN_TIPO
			REPLACE D1_QTSEGUM 	WITH 	SCN->CN_QTSEGUM
			REPLACE D1_QTDEDEV  	WITH 	SCN->CN_QTDDEV
			REPLACE D1_NUMCQ  	WITH 	SCN->CN_NUMCQ
			REPLACE D1_IDENTB6	WITH	SCN->CN_IDENTB6
			REPLACE D1_SEQCALC 	WITH 	SCN->CN_SEQCALC
			REPLACE D1_LOTECTL 	WITH 	SCN->CN_LOTECTL
			REPLACE D1_NUMLOTE	WITH 	SCN->CN_NUMLOTE
			REPLACE D1_DTVALID	WITH	SCN->CN_DTVALID
			REPLACE D1_CUSFF1  	WITH 	SCN->CN_CUSFF1
			REPLACE D1_CUSFF2  	WITH 	SCN->CN_CUSFF2
			REPLACE D1_CUSFF3 	WITH 	SCN->CN_CUSFF3
			REPLACE D1_CUSFF4 	WITH 	SCN->CN_CUSFF4
			REPLACE D1_CUSFF5 	WITH 	SCN->CN_CUSFF5
			REPLACE D1_ITEM 		WITH 	SCN->CN_ITEM
			If cPaisLoc $ cAuxPaisL
				REPLACE D1_NUMSERI 	WITH    SCN->CN_NUMSERI
			EndIf
			REPLACE D1_LOCALIZ		WITH 	SCN->CN_LOCALIZ
			If cPaisLoc $ cAuxPaisL
				REPLACE D1_SERVIC		WITH	SCN->CN_SERVIC
				REPLACE D1_STSERV  	WITH 	SCN->CN_STSERV
				REPLACE D1_TPESTR 	WITH 	SCN->CN_TPESTR
			EndIf
			REPLACE D1_NFORI		WITH 	SCN->CN_REMORI
			REPLACE D1_ITEMORI 	WITH 	SCN->CN_ITEMORI
			REPLACE D1_TIPO      WITH   "D"
			REPLACE D1_ESPECIE   WITH   "RFD"
			MsUnLock()
		EndIf
	EndIf
	DbSelectArea("SCN")
	DbSkip()
End
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³GRAVASF1TPDOC³Autor³ Gilson Da Silva 	  ³ Data ³ 11-06-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Varre todo o SF1(Cabeçalho da Fatura de Entrada), para gravar ³±±
±±³          ³o novo campo F1_TIPODOC, condicionando-o ao F1_TIPO e 			 ³±±
±±³          ³F1_ESPECIE.				                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GRAVASF1TPDOC()
Local cPoder3	:= ""
Local lAchou 	:= .T.
Local cTipoDoc	:= ""

UpdSet01(SF1->(RecCount()))

DbSelectArea("SF1")
DbSetOrder(1)
DbSeek(xFilial())
While !Eof() .And. F1_FILIAL == xFilial()
	If Empty(xFilial())
		UpdInc01( STR0028 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF + STR0029 + substr(F1_SERIE,1,3) + CRLF + STR0030 + F1_DOC, .T. ) //'Compatibilizando tipo de documento (cabecalho - entradas)'###'Empresa : '###'Serie : '###'Documento : ' 
	Else
		UpdInc01( STR0028 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF+ STR0026 + SM0->M0_FILIAL + CRLF + STR0029 + substr(F1_SERIE,1,3) + CRLF + STR0030 + F1_DOC, .T. ) //'Compatibilizando tipo de documento (cabecalho - entradas)'###'Empresa : '###'Filial : '###'Serie : '###'Documento : '
	EndIf

	If Empty(F1_DOC)
		DbSkip()
		Loop
	EndIf
	
	RecLock("SF1",.F.)
	
	If AllTrim(F1_ESPECIE)==MVNOTAFIS
		lAchou:=.T.
		//Posiciona no arquivo de Itens da NF de Entrada (SD1), para localizar a TES e ler o SF4.
		SD1->(DbSetOrder(1))
		If SD1->(DbSeek(xFilial("SD1")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA))
			//Posiciona no arquivo de Entrada e Saída para verificar se Poder de 3º,  Envio(R) ou Devolução(D)
			SF4->(DbSetOrder(1))
			If SF4->(DbSeek(xFilial("SF4")+SD1->D1_TES))
				cPoder3:= SF4->F4_PODER3
			Else
				UpdEventLog( 65, { "UPDSF1", SD1->D1_TES+STR0014 } )
				lAchou:=.F.
			EndIf
		Else
			UpdEventLog( 65, { "UPDSF1", STR0015+SF1->F1_DOC} )
			lAchou:=.F.
		EndIf
		
		If lAchou
			If cPoder3==     "R"
				cTipoDoc:=   "12"
			Else
				cTipoDoc:=   "10"
			EndIf
		EndIf
	ElseIf  AllTrim(F1_ESPECIE)==GetSESNew("NCC")
		cTipoDoc:=   "04"
	ElseIf  AllTrim(F1_ESPECIE)==GetSESNew("NDE")
		cTipoDoc:=   "05"
	ElseIf  AllTrim(F1_ESPECIE)==GetSESNew("NCI")
		cTipoDoc:=   "08"
	ElseIf  AllTrim(F1_ESPECIE)==GetSESNew("NDP")
		cTipoDoc:=   "09"
	ElseIf  AllTrim(F1_ESPECIE)=="RFD"
		cTipoDoc:=   "51"
	ElseIf  AllTrim(F1_ESPECIE)=="RCN"
		cTipoDoc:=   "60"
	ElseIf  AllTrim(F1_ESPECIE)=="RCB"
		cTipoDoc:=   "62"
	ElseIf  AllTrim(F1_ESPECIE)==GetSESNew("RTE")
		cTipoDoc:=   "64"
	Else
		cTipoDoc:=   "10"
	EndIf
	
	REPLACE F1_TIPODOC 	WITH cTipoDoc
	MsUnLock()
	DbSkip()
End
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³GRAVASF2TPDOC³Autor³ Gilson Da Silva 	  ³ Data ³ 11-06-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Varre todo o SF2(Cabeçalho da Fatura de saida  ), para gravar ³±±
±±³          ³o novo campo F2_TIPODOC, condicionando-o ao F2_TIPO e 			 ³±±
±±³          ³F2_ESPECIE.				                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GRAVASF2TPDOC()
Local cPoder3	:= ""
Local lAchou 	:= .T.
Local cTipoDoc	:= ""

UpdSet01(SF2->(RecCount()))

DbSelectArea("SF2")
DbSetOrder(1)
DbSeek(xFilial())
While !Eof() .And. F2_FILIAL == xFilial()
	If Empty(xFilial())
		UpdInc01( STR0031 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF + STR0029 + substr(F2_SERIE,1,3) + CRLF + STR0030 + F2_DOC, .T. ) //'Compatibilizando tipo de documento (cabecalho - saidas)'###'Empresa : '###'Serie : '###'Documento : ' 
	Else
		UpdInc01( STR0031 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF+ STR0026 + SM0->M0_FILIAL + CRLF + STR0029 + substr(F2_SERIE,1,3) + CRLF + STR0030 + F2_DOC, .T. ) //'Compatibilizando tipo de documento (cabecalho - saidas)'###'Empresa : '###'Filial : '###'Serie : '###'Documento : '
	EndIf
	If Empty(F2_DOC)
		DbSkip()
		Loop
	EndIf
	
	RecLock("SF2",.F.)
	If AllTrim(F2_ESPECIE)==MVNOTAFIS
		lAchou:=.T.
		//Posiciona no arquivo de Itens da NF de Saída (SD2), para localizar a TES e ler o SF4.
		SD2->(DbSetOrder(3))
		If SD2->(DbSeek(xFilial("SD2")+SF2->F2_DOC+SF2->F2_SERIE+SF2->F2_CLIENTE+SF2->F2_LOJA))
			//Posiciona no arquivo de Entrada e Saída para verificar se Poder de 3º,  Envio(R) ou Devolução(D)
			SF4->(DbSetOrder(1))
			If SF4->(DbSeek(xFilial("SF4")+SD2->D2_TES))
				cPoder3:= SF4->F4_PODER3
			Else
				UpdEventLog( 65, { "UPDSF2", SD2->D2_TES+STR0014 } )
				lAchou:=.F.
			EndIf
		Else
			UpdEventLog( 65, { "UPDSF2", STR0016+SF2->F2_DOC} )
			lAchou:=.F.
		EndIf
		
		If lAchou
			If cPoder3==     "R"
				cTipoDoc:=   "11"
			Else
				cTipoDoc:=   "1"
			EndIf
		EndIf
	ElseIf  AllTrim(F2_ESPECIE)==GetSESNew("NDC")
		cTipoDoc:=   "02"
	ElseIf  AllTrim(F2_ESPECIE)==GetSESNew("NCE")
		cTipoDoc:=   "03"
	ElseIf  AllTrim(F2_ESPECIE)==GetSESNew("NDI")
		cTipoDoc:=   "06"
	ElseIf  AllTrim(F2_ESPECIE)==GetSESNew("NCP")
		cTipoDoc:=   "07"
	ElseIf  AllTrim(F2_ESPECIE)==GetSESNew("RTS")
		cTipoDoc:=   "54"
	ElseIf  AllTrim(F2_ESPECIE)=="RFN"
		cTipoDoc:=   "50"
	ElseIf  AllTrim(F2_ESPECIE)=="RFB"
		cTipoDoc:=   "52"
	ElseIf  AllTrim(F2_ESPECIE)=="RCD"
		cTipoDoc:=   "61"
	Else
		cTipoDoc:=   "01"
	EndIf
	REPLACE F2_TIPODOC 	WITH cTipoDoc
	MsUnLock()
	DbSkip()
End
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³GRAVASD1TPDOC³Autor³ Gilson Da Silva 	  ³ Data ³ 11-06-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Varre todo o SD1(Itens     da Fatura de Entrada), para gravar ³±±
±±³          ³o novo campo D1_TIPODOC, condicionando-o ao D1_TIPO e 			 ³±±
±±³          ³D1_ESPECIE.				                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GRAVASD1TPDOC()
Local cPoder3	:= ""
Local lAchou 	:= .T.
Local cTipoDoc	:= ""

UpdSet01(SD1->(RecCount()))

DbSelectArea("SD1")
DbSetOrder(1)
DbSeek(xFilial())
While !Eof() .And. D1_FILIAL == xFilial()
	If Empty(xFilial()) 
		UpdInc01( STR0032 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF + STR0029 + substr(D1_SERIE,1,3) + CRLF + STR0030 + D1_DOC + CRLF + STR0025 + D1_ITEM, .T. ) //'Compatibilizando tipo de documento (itens - entradas)'###'Empresa : '###'Serie : '###'Documento : '###'Item : '
	Else
		UpdInc01( STR0032 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF+ STR0026 + SM0->M0_FILIAL + CRLF + STR0029 + substr(D1_SERIE,1,3) + CRLF + STR0030 + D1_DOC + CRLF + STR0025 + D1_ITEM, .T. ) //'Compatibilizando tipo de documento (itens - entradas)'###'Empresa : '###'Filial : '###'Serie : '###'Documento : '###'Item : '
	EndIf
	If Empty(D1_DOC)
		DbSkip()
		Loop
	EndIf
	
	RecLock("SD1",.F.)
	
	If AllTrim(D1_ESPECIE)==MVNOTAFIS
		lAchou:=.T.
		//Posiciona no arquivo de Itens da NF de Entrada (SD1), para localizar a TES e ler o SF4.
		SF4->(DbSetOrder(1))
		If SF4->(DbSeek(xFilial("SF4")+SD1->D1_TES))
			cPoder3:= SF4->F4_PODER3
		Else
			UpdEventLog( 65, { "UPDSD1", SD1->D1_TES+STR0014 } )
			lAchou:=.F.
		EndIf
		
		If lAchou
			If cPoder3==     "R"
				cTipoDoc:=   "12"
			Else
				cTipoDoc:=   "10"
			EndIf
		EndIf
	ElseIf  AllTrim(D1_ESPECIE)==GetSESNew("NCC")
		cTipoDoc:=   "04"
	ElseIf  AllTrim(D1_ESPECIE)==GetSESNew("NDE")
		cTipoDoc:=   "05"
	ElseIf  AllTrim(D1_ESPECIE)==GetSESNew("NCI")
		cTipoDoc:=   "08"
	ElseIf  AllTrim(D1_ESPECIE)==GetSESNew("NDP")
		cTipoDoc:=   "09"
	ElseIf  AllTrim(D1_ESPECIE)==GetSESNew("RTE")
		cTipoDoc:=   "64"
	ElseIf  AllTrim(D1_ESPECIE)=="RFD"
		cTipoDoc:=   "51"
	ElseIf  AllTrim(D1_ESPECIE)=="RCN"
		cTipoDoc:=   "60"
	ElseIf  AllTrim(D1_ESPECIE)=="RCB"
		cTipoDoc:=   "62"
	Else
		cTipoDoc:=   "10"
	EndIf
	
	REPLACE D1_TIPODOC 	WITH cTipoDoc
	MsUnLock()
	DbSkip()
End
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³GRAVASD2TPDOC³Autor³ Gilson Da Silva 	  ³ Data ³ 11-06-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Varre todo o SD2(Itens     da Fatura de saida  ), para gravar ³±±
±±³          ³o novo campo D2_TIPODOC, condicionando-o ao D2_TIPO e 			 ³±±
±±³          ³D2_ESPECIE.				                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GRAVASD2TPDOC()
Local cPoder3	:= ""
Local lAchou 	:= .T.
Local cTipoDoc	:= ""

UpdSet01(SD2->(RecCount()))

SCN->(DbSetOrder(1))

DbSelectArea("SD2")
DbSetOrder(1)
DbSeek(xFilial())
While !Eof() .And. D2_FILIAL == xFilial()
	If Empty(xFilial()) 
		UpdInc01( STR0033 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF + STR0029 + substr(D2_SERIE,1,3) + CRLF + STR0030 + D2_DOC + CRLF + STR0025 + D2_ITEM, .T. ) //'Compatibilizando tipo de documento (itens - saidas)'###'Empresa : '###'Serie : '###'Documento : '###'Item : '
	Else
		UpdInc01( STR0033 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF+ STR0026 + SM0->M0_FILIAL + CRLF + STR0029 + substr(D2_SERIE,1,3) + CRLF + STR0030 + D2_DOC + CRLF + STR0025 + D2_ITEM, .T. ) //'Compatibilizando tipo de documento (itens - saidas)'###'Empresa : '###'Filial : '###'Serie : '###'Documento : '###'Item : '
	EndIf
	If Empty(D2_DOC)
		DbSkip()
		Loop
	EndIf
	
	RecLock("SD2",.F.)
	If AllTrim(D2_ESPECIE)==MVNOTAFIS
		lAchou:=.T.
		//Posiciona no arquivo de Itens da NF de Saída (SD2), para localizar a TES e ler o SF4.
		SF4->(DbSetOrder(1))
		If SF4->(DbSeek(xFilial("SF4")+SD2->D2_TES))
			cPoder3:= SF4->F4_PODER3
		Else
			UpdEventLog( 65, { "UPDSD2", SD2->D2_TES+STR0014 } )
			lAchou:=.F.
		EndIf
		If lAchou
			If cPoder3==     "R"
				cTipoDoc:=   "11"
			Else
				cTipoDoc:=   "1"
			EndIf
		EndIf
		If !Empty(SD2->D2_REMITO) .And. SCN->(DbSeek(xFilial()+SD2->D2_REMITO+D2_ITEMREM))
			REPLACE D2_TPDCENV	WITH 	SCN->CN_TIPOREM
   	EndIf	
	ElseIf  AllTrim(D2_ESPECIE)==GetSESNew("NDC")
		cTipoDoc:=   "02"
	ElseIf  AllTrim(D2_ESPECIE)==GetSESNew("NCE")
		cTipoDoc:=   "03"
	ElseIf  AllTrim(D2_ESPECIE)==GetSESNew("NDI")
		cTipoDoc:=   "06"
	ElseIf  AllTrim(D2_ESPECIE)==GetSESNew("NCP")
		cTipoDoc:=   "07"
	ElseIf  AllTrim(D2_ESPECIE)==GetSESNew("RTS")
		cTipoDoc:=   "54"
	ElseIf  AllTrim(D2_ESPECIE)=="RFN"
		cTipoDoc:=   "50"
	ElseIf  AllTrim(D2_ESPECIE)=="RFB"
		cTipoDoc:=   "52"
	ElseIf  AllTrim(D2_ESPECIE)=="RCD"
		cTipoDoc:=   "61"
	Else
		cTipoDoc:=   "01"
	EndIf
	REPLACE D2_TIPODOC 	WITH cTipoDoc
	MsUnLock()
	DbSkip()
EndDo
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³LimpaREM     ³Autor³ Bruno Sobieski  	  ³ Data ³ 11-06-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Varre todo o SCM e SCN e grava no campo _FILIAL o string 'X'+f³±±
±±³          ³para que nao seja mais considerado pelo sistema.      			 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function LimpaRem()

UpdSet01(SCM->(RecCount()))

DbSelectArea('SCM')
DbSeek(xFilial())
While !EOF().And. xFilial() == CM_FILIAL
	UpdInc01( STR0034 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF+ STR0026 + SM0->M0_FILIAL, .T. ) //'Eliminando tabelas antigas'###'Empresa : '###'Filial : '
	RECLOCK('SCM',.F.)
	DbDelete()
	MsUnLock()
	DbSkip()
EndDO

UpdSet01(SCN->(RecCount()))

DbSelectArea('SCN')
DbSeek(xFilial())
While !EOF().And. xFilial() == CN_FILIAL
	UpdInc01( STR0034 + CRLF + STR0024 + SM0->M0_CODIGO + CRLF+ STR0026 + SM0->M0_FILIAL, .T. ) //'Eliminando tabelas antigas'###'Empresa : '###'Filial : '
	RECLOCK('SCN',.F.)
	DbDelete()
	MsUnLock()
	DbSkip()
EndDo
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³LjRatFrete ³ Autor ³ Julio Cesar          ³ Data ³ 01.08.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Realiza o rateio do frete, entre os diversos itens da      ³±±
±±³          ³ venda, para que o calculo do imposto seja realizado		  ³±±
±±³          ³ corretamente.                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpX1 => Valor do frete para o item.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 => Indica se esta sendo calculado o imposto do       ³±± 
±±³          ³          primeiro item da venda.                           ³±±  
±±³          ³ ExpN2 => Informa para qual item da venda esta sendo        ³±± 
±±³          ³          realizado o calculo do imposto.                   ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Venda Balcao                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function LjRatFrete( lPrimer, nItem )
Static aDespFrete 

Local nVlrTot     := 0
Local nVlrTotFrt  := 0
Local nCountFrt	  := 0
Local nPerTotal   := 0
Local nVlrFrete   := 0
Local nVlrSeguro  := 0
Local nVlrDespesa := 0
Local nPosVlrItem := aScan(aHeader,{|x| Alltrim(Upper(x[2]))=="L2_VLRITEM"})
Local nI

If lPrimer          
	aDespFrete := Array(Len(aCols),3)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Faz o rateio do frete, seguro e desp.acessórias pelos itens vendidos ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nVlrTotFrt 	:= 0
	nCountFrt	:= 0
	For nI := 1 to Len(aCols)
		If !(aCols[nI][Len(aCols[nI])])
			nVlrTotFrt += aCols[nI][nPosVlrItem]
			nCountFrt ++
		EndIf
	Next nI
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Faz o rateio ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nI := 1 to Len(aDespFrete)
		aFill( aDespFrete[nI], 0 )
	Next nI
	
	For nI := 1 to Len(aCols)
		If !(aCols[nI][Len(aCols[nI])])
			nPerTotal := aCols[nI][nPosVlrItem] / nVlrTotFrt
			aDespFrete[nI][1] := Round(nPerTotal * M->L1_FRETE,nDecimais)
			aDespFrete[nI][2] := Round(nPerTotal * M->L1_SEGURO,nDecimais)
			aDespFrete[nI][3] := Round(nPerTotal * M->L1_DESPESA,nDecimais)
		EndIf
	Next nI
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica o arredondamento dos valores do frete, seguro e desp.acessorias ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nVlrFrete 	:= 0
	nVlrSeguro	:= 0
	nVlrDespesa	:= 0
	
	aEval(aDespFrete, {|x| (nVlrFrete+=x[1], nVlrSeguro+=x[2], nVlrDespesa+=x[3]) })
	
	nFrete 		:= Mod((M->L1_FRETE - nVlrFrete), nCountFrt)
	nSeguro 	:= Mod((M->L1_SEGURO - nVlrSeguro), nCountFrt)
	nDespesa 	:= Mod((M->L1_DESPESA - nVlrDespesa), nCountFrt)
	
	aDespFrete[Len(aDespFrete)][1] += nFrete
	aDespFrete[Len(aDespFrete)][2] += nSeguro
	aDespFrete[Len(aDespFrete)][3] += nDespesa
EndIf

nVlrTot := aDespFrete[nItem][1]+aDespFrete[nItem][2]+aDespFrete[nItem][3]

Return(nVlrTot)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³CalcValTrc ³ Autor ³ Julio Cesar          ³ Data ³ 05.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calcula o valor que deve ser dado e troco e atualiza a     ³±±
±±³          ³ a exibicao do mesmo na tela.    		                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ aMoedas - Array com os dados das moedas atualizado         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 - Valor Bruto da Venda                               ³±± 
±±³          ³ ExpA2 - Array contendo as parcelas da venda                ³±± 
±±³          ³ ExpC3 - Simbolo do Cheque                                  ³±±
±±³          ³ ExpA4 - Array com as informacoes das moedas do sistema     ³±±
±±³          ³ ExpA5 - Array que ira armazenar o troco nas moedas do sist.³±±
±±³          ³ ExpN6 - Indica se foi escolhida a opcao de orcamento ou de ³±± 
±±³          ³         finalizacao da venda.                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Venda Balcao                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CalcValTrc( nVlrBruto, aPgtos, cSimbCheq, aMoedas,;
					 aTroco	  , nOpcx , nNCCUsada )

Local aValTrc    := {}						// Troco em todas as moedas
Local aValTotTrc := {}						// Totais dos trocos em todas as moedas
Local nValRec    := 0						// Valor recebido em dinheiro e cheque
Local nValRecFin := 0						// Valor recebido em cartao, financiado, etc.
Local nValTrc    := 0						// Valor do troco
Local nX         := 0						// Auxiliar de loop
Local nI									// Auxiliar de loop
Local nDif       := 0						// Diferencas de arredondamento
Local nDecs      := MsDecimais(nMoedaCor)	// Quantidade de casas decimais
Local lZeraTudo  := .F.						// Zera as informacoes das moedas
Local lProcessa	 := .T.						// Verifica se ira processar a funcao novamente.

DEFAULT nNCCUsada:= 0      					// Valor default da variavel nNCCUsada

If nOpcx == Nil
	nOpcx := 0
EndIf

For nI := 1 to Len(aMoedas)
	If (aMoedas[nI][2] == 0 .AND. aMoedas[nI][3] > 0)
		lProcessa := .F.
	EndIf
Next nI

If lProcessa
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³nVlrBruto  += nVlrAcrs³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nVlrBruto  += aDadosJur[1]
		
	If ExistBlock("FORMSTRC")
		aAux := ExecBlock("FORMSTRC",.F.,.F.)
	ElseIf nModulo <> 72                              
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Caso nao exista o PE FORMSTRC podera ser gerado troco para todas ³
		//³as moedas mais cheque                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	  	aAux := {SuperGetMv("MV_SIMB1")}
	  	For nI := 2 To MoedFin()
			Aadd(aAux,SuperGetMv("MV_SIMB"+STR(nI,1),.F.,"") )
		Next
		Aadd(aAux,cSimbCheq)
	EndIf
		
	For nI := 1 To Len(aPgtos)
		If Ascan(aAux,{|x| Trim(x) == Trim(aPgtos[nI][3])}) > 0
			If FunName() <> "LOJA701" .AND. FunName() <> "LOJA720"
				nValRec += Round(xMoeda(aPgtos[nI][2],aPgtos[nI][4],nMoedaCor,dDataBase,nDecs+1),nDecs)
			Else
				nValRec += Round(xMoeda(aPgtos[nI][2],aPgtos[nI][6],nMoedaCor,dDataBase,nDecs+1),nDecs) 
			EndIf
		Else
			If FunName() <> "LOJA701" .AND. FunName() <> "LOJA720"
				nValRecFin	+= Round(xMoeda(aPgtos[nI][2],aPgtos[nI][4],nMoedaCor,dDataBase,nDecs+1),nDecs)
			Else
				nValRecFin	+= Round(xMoeda(aPgtos[nI][2],aPgtos[nI][6],nMoedaCor,dDataBase,nDecs+1),nDecs) 
			EndIf
		EndIf
	Next nI
	If FunName() == "LOJA701"
	    nValRec += nNCCUsada
	EndIf
	For nX := 1 To Len(aMoedas)                              
	   If nOpcx == 4
	      nPos := SL1->(FieldPos("L1_TROCO"+Alltrim(STR(nX)))) 
	      AAdd(aValTrc,SL1->(FieldGet(nPos)))  
		  nValTrc += xMoeda(SL1->(FieldGet(nPos)),nX,nMoedaCor,dDataBase)
	   Else
	      AAdd(aValTrc,0)     	  
	   EndIf	  
	Next nX
	
	For nX := 1 To Len(aMoedas)
		AAdd(aValTotTrc,Round(xMoeda(nValTrc,1,nX,dDataBase,MsDecimais(nX)+1),MsDecimais(nX)))
	Next nX
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Testa se eh possivel devolver troco³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Abs(nVlrBruto - nValRecFin - nValRec ) <= nValRec
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ativa o objeto que exibe o troco localizado, caso ele esteja desabilitado...³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !oLBBaixa:lActive
			oLBBaixa:Enable()
			oLBBaixa:Show()
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Usar um arredondamento maior que MV_CENT devido a validacao da tolerancia permitida³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nX := 1 To Len(aMoedas)
		    nDecs := MsDecimais(nX)
	    	aMoedas[nX][2] := xMoeda(Abs(nVlrBruto-nValRecFin-nValRec),nMoedaCor,aMoedas[nX][6],dDataBase,nDecs+1)-aValTotTrc[nX]
			If nOpcx > 0
		    	If (aMoedas[nX][2] < (1/(10**nDecs)))
					nDif := aMoedas[nX][2]
					aMoedas[nX][2]:= 0
					lZeraTudo     := .T.
				ElseIf lZeraTudo
					nDif := aMoedas[nX][2]
					aMoedas[nX][2] := 0			
				EndIf
				aMoedas[nX][3] := aValTrc[nX]
				aMoedas[nX][4] := 0 
				aTroco[nX]     := aValTrc[nX]   
			EndIf
			aMoedas[nX][5] := Round(xMoeda(Abs(nVlrBruto-nValRecFin-nValRec),nMoedaCor,aMoedas[nX][6],dDataBase,nDecs+1)+nDif,nDecs)
			nDif := 0
		Next nX   
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Se apenas uma moeda esta ativa e o parametro MV_LJTRAUT esta setado para .T.³
		//³preenche o troco automaticamente                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Len(aMoedas) == 1 .And. SuperGetMv("MV_LJTRAUT",,.T.)  
		   aMoedas[Len(aMoedas)][3]  := aMoedas[Len(aMoedas)][2]
		   aMoedas[Len(aMoedas)][2]  := 0  //Zerar o saldo a devolver ao cliente
		EndIf	
		oLBBaixa:SetArray(aMoedas)
		oLBBaixa:bLine:= {|| {aMoedas[oLBBaixa:nAT][1],Transform(aMoedas[oLBBaixa:nAT][2],PesqPict("SL1","L1_TROCO1",18,oLBBaixa:nAT)) ,Transform(aMoedas[oLBBaixa:nAT][3],PesqPict("SL1","L1_TROCO1",18,oLBBaixa:nAT)) }}
		oLBBaixa:Refresh()	
	Else
		For nX := 1 To Len(aMoedas)
	    	aMoedas[nX][2] := 0
			aMoedas[nX][3] := 0
			aMoedas[nX][4] := 0 
			aMoedas[nX][5] := 0
			aTroco[nX]     := 0
		Next nX
		oLBBaixa:SetArray(aMoedas)
		oLBBaixa:bLine:= {|| {aMoedas[oLBBaixa:nAT][1],Transform(aMoedas[oLBBaixa:nAT][2],PesqPict("SL1","L1_TROCO1",18,oLBBaixa:nAT)) ,Transform(aMoedas[oLBBaixa:nAT][3],PesqPict("SL1","L1_TROCO1",18,oLBBaixa:nAT)) }}
		oLBBaixa:Refresh()	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Desativa o objeto do troco localizado, para que o troco padrao seja exibido...³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oLBBaixa:Disable()
		oLBBaixa:Hide()
	EndIf
EndIf

Return(aMoedas)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³LjMontaTela³ Autor ³ Julio Cesar          ³ Data ³ 05.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Monta a tela para calculo do troco no Front Office         ³±±
±±³          ³ e na Venda Rapida.  	                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 - Moeda para a qual esta sendo calculado o troco     ³±± 
±±³          ³ ExpN2 - Posicao na qual deve ser exibido o valor do troco  ³±± 
±±³          ³ ExpO3 - Objetos da tela                                    ³±±
±±³          ³ ExpC4 - Traco que vai ser impresso na tela                 ³±±
±±³          ³ ExpA5 - Array no qual o valor do troco eh armazenado       ³±±
±±³          ³ ExpA6 - Array com as informacoes das moedas do sistema     ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Front Office e Venda Rapida                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function LjMontaTela( nI	, nLin, aObjs, cTraco,;
					  aTroco, aMoedas )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Troco para a moeda nI ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
@ nLin,010 SAY aObjs[nI][1] VAR aObjs[nI][2] FONT oFntMda PIXEL SIZE 200,25 COLOR CLR_BLACK,CLR_WHITE
nLin += 5
@ nLin,010 SAY oTraco VAR cTraco FONT oFntMda PIXEL SIZE 200,10 COLOR CLR_BLACK,CLR_WHITE
nLin += 4

@ nLin,010 SAY aObjs[nI][3] VAR Transform(aObjs[nI][4],PesqPict("SL1","L1_TROCO1",18,aObjs[nI][7])) ; //WILLIAM
FONT oFntVal PIXEL RIGHT SIZE 110,15 COLOR CLR_BLUE,CLR_WHITE

@ nLin,165 MSGET aObjs[nI][5] VAR aObjs[nI][6] FONT oFntGet PIXEL Valid LjAtuObj(@aObjs,@aTroco,nI,aMoedas) ;
SIZE 100,15 COLOR CLR_WHITE,CLR_BLACK PICTURE PesqPict("SL1","L1_TROCO1",18,aObjs[nI][7]) NOBORDER  // WILLIAM
nLin += 21

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³LjAtuObj   ³ Autor ³ Julio Cesar          ³ Data ³ 05.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Realiza o calculo do troco e atualiza os dados na tela     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 - Objetos da tela                                    ³±± 
±±³          ³ ExpA2 - Array no qual o valor do troco eh armazenado       ³±± 
±±³          ³ ExpN3 - Moeda que esta sendo atualizo o troco              ³±±
±±³          ³ ExpA4 - Array com as informacoes das moedas do sistema     ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Front Office e Venda Rapida                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function LjAtuObj( aObjs, aTroco, nPos, aMoedas )
Local nI        := 0
Local nDifer    := 0   
Local nSomaTrc  := 0
Local nValOrig  := Val(aObjs[nPos][5]:cCaption)
Local nDecs     := MsDecimais(aTroco[nPos][04])
Local lZeraTudo := .F.

If Type("nDecimais")=="U"
   nDecimais := MsDecimais(nMoedaCor)		
EndIf  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Troco digitado e maior que o valor original   aTroco[nPos][1] william³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (aTroco[nPos][03]-aObjs[nPos][6]) < 0  
    If Round(aObjs[nPos][6]-aTroco[nPos][03],nDecs) >= (1/(10**aMoedas[nPos][4]))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ 1/(10**nDecimais) -> Tolerancia de arredondamento                                  ³
		//³ Se a diferenca entre o troco e o saldo for maior que a tolerancia 1/(10**nDecimais)³
		//³ entao exibe mensagem que troco e maior                                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		MsgStop(STR0017)  //"O troco e maior que o saldo"
		aObjs[nPos][6] := nValOrig
		aObjs[nPos][5]:Refresh() 
		Return(.F.) 
	EndIf 
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Totaliza o troco na moeda corrente da venda...³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aEval(aObjs,{|x,y| nSomaTrc += xMoeda(aObjs[y][6],aObjs[y][7],nMoedaCor,dDatabase,;
                   nDecimais+1,aMoedas[y][03],aMoedas[1][03])})

For nI := 1 To Len(aObjs)                         
	nDifer := Abs(Round(aTroco[nI][01]-xMoeda(nSomaTrc,nMoedaCor,aMoedas[nI][5],dDatabase,;
	              aMoedas[nI][4]+1,aMoedas[1][3],aMoedas[nI][03]),aMoedas[nI][4]))

	If (nDifer < (1/(10**aMoedas[nI][4]))) .or. lZeraTudo
		aObjs[nI][04]  := 0
		lZeraTudo := .T.
	Else		
		aObjs[nI][04]:= nDifer
	EndIf
	aTroco[nI][02] := aObjs[nI][6] 
	aTroco[nI][03] := nDifer
	aObjs[nI][03]:Refresh()
Next nI
             
If lZeraTudo
	For nI := 1 To Len(aObjs)
    	aObjs[nI][04]  := 0 
    Next nI	
EndIf

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ValidTrc   ³ Autor ³ Julio Cesar          ³ Data ³ 05.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida o troco calculado                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet - Informa se prossegue o processo ou nao              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 - Objetos da tela                                    ³±± 
±±³          ³ ExpA2 - Array no qual o valor do troco eh armazenado       ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Venda Balcao                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ValidTrc( aObjs, aTroco, cRotina )
Local lRet := .T.
Local nI   := 0

For nI := 1 To Len(aObjs)
	//Indica que o troco foi pago pago parcialmente...
	If aObjs[nI][04] > 0
		lRet := MsgYesNo(STR0018)//"Existe uma diferenca no troco. Continua?"
		Exit
	EndIf
Next nI

Return(lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³CancTroco  ³ Autor ³ Julio Cesar          ³ Data ³ 05.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cancela o calculo do troco                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet - Informa se prossegue o processo ou nao              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 - Array com o troco calculado                        ³±± 
±±³          ³ ExpA2 - Array com os valores originais, antes do calculo   ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Venda Balcao                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CancTroco( aTroco, aTrocoBkp )
Local lRet := .T.

lRet := MsgYesNo(STR0019) //"Deseja realmente sair da rotina?"
If lRet
	//Volta o array aTroco para o seu estado original. Dessa forma
	//quando a base for atualizada sera visivel que nenhum troco foi
	//dado para a venda em questao.
	aTroco := aClone(aTrocoBkp)
EndIf	

Return(lRet) 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ISREMITO  ºAutor  ³Silvia Taguti       º Data ³  08/07/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se o documento e' Remito                           º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nOpcao = 1-Avalia o registro atual                         ³±±
±±³          ³        = 2-Retorna Expressao para indregua                 ³±±
±±³          ³        = 3-Retorna Expressao para query                    ³±±
±±³          ³ cCampo = Campo que deve ser avaliado                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ºUso       ³ AP7                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IsRemito( nOpcao, cCampo )
Local xRet 

If nOpcao == 1
	If cPaisLoc == "BRA"	
      xRet	:=	.F.
	Else
		xRet := (&(cCampo) >= "50")  
		If cPaisLoc=="PTG"
			If (&(cCampo)== "65")
				xRet:=.F.
			EndIf
		EndIf
	EndIf
ElseIf nOpcao == 2
	xRet :=  cCampo+ " >= '50' "
Else              
	xRet :=  cCampo+ " >= '50' "
EndIf

Return xRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Lj010SimSD2ºAutor  ³Bruno              º Data ³  07/31/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Preparacao de array para gravacao de impostos               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Venda Balcao/Front Office                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Lj010SimSD2( cTes )
Local nX
Local aInfo	  := TesImpInf(cTes)
Local aReturn := {0,0,0,0,0,{}}
Local nPosALQIMP := 0
Local nPosBASIMP := 0
Local nPosVALIMP := 0

If cPaisLoc == "COL"
   aReturn	:=	{0,0,0,0,0,{},""}
   SA1->(DbSetOrder(1))
   If SA1->(DbSeek(xFilial("SA1")+SL1->L1_CLIENTE+SL1->L1_LOJA))
      aReturn[7]	:=	SA1->A1_CGC
   EndIf   
EndIf

aReturn[1]	:=	SL2->L2_QUANT
aReturn[2]	:=	SL2->L2_VRUNIT
aReturn[3]	:=	SL2->L2_VLRITEM
aReturn[4]	:=	0
aReturn[5]	:=	0
For nX	:=	1	To	Len(aInfo)
	AAdd(aReturn[6],Array(18))
	aReturn[6][nX][1]	:= aInfo[nX][1]

	If ( nPosALQIMP := SL2->(FieldPos("L2_ALQIMP"+Alltrim(Substr(aInfo[nX][2],10)))) ) > 0
		aReturn[6][nX][2]	:= SL2->(FieldGet(nPosALQIMP))
	Else
		aReturn[6][nX][2]	:= 0
	EndIf

	If ( nPosBASIMP := SL2->(FieldPos("L2_BASIMP"+Alltrim(Substr(aInfo[nX][2],10)))) ) > 0
		aReturn[6][nX][3]	:= SL2->(FieldGet(nPosBASIMP))
	Else
		aReturn[6][nX][3]	:= 0		
	EndIf

	If ( nPosVALIMP := SL2->(FieldPos("L2_VALIMP"+Alltrim(Substr(aInfo[nX][2],10)))) ) > 0
		aReturn[6][nX][4]	:= SL2->(FieldGet(nPosVALIMP))
	Else
		aReturn[6][nX][4]	:= 0
	EndIf

	aReturn[6][nX][5]	:= aInfo[nX][3]+aInfo[nX][4]+aInfo[nX][5]
	aReturn[6][nX][6]	:= "D2_VALIMP"+Alltrim(Substr(aInfo[nX][2],10))
	aReturn[6][nX][7]	:= "D2_BASIMP"+Alltrim(Substr(aInfo[nX][2],10))
	aReturn[6][nX][8]	:= "F2_VALIMP"+Alltrim(Substr(aInfo[nX][2],10))
	aReturn[6][nX][9]	:= "F2_BASIMP"+Alltrim(Substr(aInfo[nX][2],10))
	aReturn[6][nX][17]	:= Alltrim(Substr(aInfo[nX][2],10))
Next nX

Return(aReturn)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GravaLivroºAutor  ³Bruno               º Data ³  07/31/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gravacao de Livros Fiscais / Localizacao                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Venda Balcao/Front Office                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GravaLivro( aLivro		, cSerie, cNumNota, cCGCCli	,;
					 lNfManual 	)
Local nY
Local nX
Local nPosTES       := 0
Local aPosImps      := {}
Local aPosBases     := {}
Local aTesSD2       := {}    //Contem codigo do TES que ja foram analisados
Local nPosValCont	:=	0,nValCont	:=	0
Local lReutiliza    := SuperGetMv("MV_USAMNUM",,.T.)
Local lArredonda    := .T.
Local cTipContNF    := Iif(ValType(lFiscal)== "L" .And. lFiscal,SuperGetMv("MV_CONTNFI",,"I"),SuperGetMv("MV_CONTNF"))
Local cEspec        := MVNOTAFIS
Local cEspTmp	    := MVNOTAFIS+"|"+GetSESNew('NDC','1')+"|"+GetSESNew('NDI','2')+"|"+GetSESNew('NCI','2')+"|"+GetSESNew('NCC','2')
Local nTamF3_DOC 	:= TamSX3("F3_NFISCAL")[1]     							// Tamanho do campo F1_DOC      
Local aRetCF		:= {}
Local aDados		:= {}
Local lContrFol		:= 	cPaisloc == "BOL" .And.	GetNewPar("MV_CTRLFOL",.F.) 	// Controle de Folios 						
Local nTamCodCTR	:= 0	// Tamanho do Campo Codigo de Controle						

DEFAULT cCGCCli		:= ""
DEFAULT lNfManual	:= .F.

cNumNota         := PadR(cNumNota,nTamF3_DOC)                                                   

If cPaisloc $ "BOL|URU"
	nTamCodCTR	:=  TamSx3("F2_CODCTR")[1]        		
Endif

DbSelectArea("SF3")
DbSetOrder(5)
If DbSeek( xFilial("SF3")+cSerie+cNumNota) 
	While !Eof() .And. (xFilial("SF3")+cSerie+cNumNota) == (SF3->F3_FILIAL+SF3->F3_SERIE+SF3->F3_NFISCAL) 
	   If !Empty(SF3->F3_DTCANC) .And. lReutiliza
	      If cTipContNF == "M" .And. Alltrim(F3_ESPECIE)$ cEspTmp .Or. (cTipContNF == "I" .And. Alltrim(F3_ESPECIE)==	Alltrim(cEspec))	   	   
		     RecLock("SF3",.F.)
			 dbDelete()
			 MsUnLock()
		  EndIf
	   EndIf
	   SF3->(DbSkip())
	End
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se todo TES dos itens da NF geram Livro. Caso contrario, nao faz arredondamento ³
//³baseado no SF2                                                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SD2->(DbSetOrder(3))
If SD2->(DbSeek(xFilial("SD2")+SF2->F2_DOC+SF2->F2_SERIE))
   While lArredonda .And. !SD2->(Eof()) .And. SF2->F2_DOC+SF2->F2_SERIE == SD2->D2_DOC+SD2->D2_SERIE   
      If AllTrim(SD2->D2_ESPECIE) == "NF"
         nPosTES  := Ascan(aTesSD2,SD2->D2_TES)
         If nPosTES == 0   //Verifica se o TES ja nao foi analisado
            SF4->(DbSetOrder(1))   
            If SF4->(DbSeek(xFilial("SF4")+SD2->D2_TES))
               If SF4->F4_GERALF == "2"   //Nao gera livro, logo, nao fazer o arredondamento baseado no SF2
                  lArredonda  := .F.
               EndIf
            EndIf   
            Aadd(aTesSD2,SD2->D2_TES)                           
         EndIf
      EndIf
      SD2->(DbSkip())
   EndDo
EndIf

If lArredonda
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Acertar os arredondamentos e conversao de outras moedas no livro.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aPosBases:=	{}
	aPosImps :=	{}
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Procurar campos de bases e valores³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX := 1 To Len(aLivro[1])
		If Substr(aLivro[1][nX],4,6) == "BASIMP"
			Aadd(aPosBases,{nX,0})
		ElseIf Substr(aLivro[1][nX],4,6) == "VALIMP"
			Aadd(aPosImps ,{nX,0})
		ElseIf Alltrim(aLivro[1][nX]) == "F3_VALCONT"
			nPosValCont		:=	nX
		EndIf
	Next nX
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Acumular os valores que estao no aLivro para bases e valores para comparar com o SF2³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX:=2	To Len(aLivro)
		For nY := 1	To	Len(aPosBases)
			aPosBases[nY][2]+=	aLivro[nX][aPosBases[nY][1]]
		Next nY
		For nY := 1	To	Len(aPosImps)
			aPosImps[nY][2] +=	aLivro[nX][aPosImps[nY][1]]
		Next nY
		nValCont +=	aLivro[nX][nPosValCont]
	Next nX
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Acertar as bases no aLivro³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX := 1	To Len(aPosBases)
		If (nPos :=	SF2->(FieldPos("F2_"+Substr(aLivro[1][aPosBases[nX][1]],4,7) ))) > 0
			nDif :=	Round(xMoeda(SF2->(FieldGet(nPos)),SF2->F2_MOEDA,1,,nDecimais+1,SF2->F2_TXMOEDA ),nDecimais) - aPosBases[nX][2]
			If nDif <> 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Procuro a Primeira ocorrencia da base trata no aLivro³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				For nY := 2 To Len(aLivro)
					If aLivro[nY][aPosBases[nX][1]] > 0
						aLivro[nY][aPosBases[nX][1]] += nDif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Forcar a saida do LAco³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nY := Len(aLivro)+1
					EndIf
				Next nY
			EndIf
		EndIf
	Next nX
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Acertar os valores dos impostos no aLivro³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX := 1	To Len(aPosImps)
		If (nPos :=	SF2->(FieldPos("F2_"+Substr(aLivro[1][aPosImps[nX][1]],4,7) ))) > 0
			nDif :=	Round(xMoeda(SF2->(FieldGet(nPos)),SF2->F2_MOEDA,1,,nDecimais+1,SF2->F2_TXMOEDA ),nDecimais) - aPosImps[nX][2]
			If nDif <> 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Procuro a Primeira ocorrencia da base trata no aLivro³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				For nY := 2 To Len(aLivro)
					If aLivro[nY][aPosImps[nX][1]] > 0
						aLivro[nY][aPosImps[nX][1]] +=	nDif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Forcar a saida do LAco³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nY := Len(aLivro)+1
					EndIf
				Next nY
			EndIf
		EndIf
	Next nX
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Acerta o F3_VALCONT Baseado no F2_VALBRUT³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nDif := Round(xMoeda(SF2->F2_VALBRUT,SF2->F2_MOEDA,1,,nDecimais+1,SF2->F2_TXMOEDA ),nDecimais) - nValCont
	If (nDif <> 0) .and. (Len(aLivro) > 1)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Acerto a diferenca no primeiro iten do aLivro³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aLivro[2][nPosValCont] += nDif
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Gravar o Livro Fiscal³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nX := 2 To Len( aLivro )
	RecLock( "SF3",.T. )
	For nY := 1 To Len( aLivro[1] )
		SF3->( FieldPut(FieldPos(aLivro[1,nY]),aLivro[nX,nY]) )
	Next
	
	REPLACE SF3->F3_FILIAL  WITH xFilial("SF3")
	REPLACE SF3->F3_FORMUL  WITH "S"		
	REPLACE SF3->F3_NFISCAL WITH cNumNota
	
	If lContrFol
	
		aDados := Array(6)
	
		aDados[1] := SF2->F2_SERIE 
		aDados[2] := SF2->F2_ESPECIE
		aDados[3] := SF2->F2_DOC 
		If Empty(cCGCCli)
			If Alltrim(aDados[2]) $ "NDI/NCP"
				aDados[4] := GetAdvFVal("SA2","A2_CGC",xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA,1,"")
			Else
				aDados[4] := GetAdvFVal("SA1","A1_CGC",xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA,1,"")
			Endif
		Else 
			aDados[4] := cCGCCli
		EndIf
		aDados[5] := DtoS(SF2->F2_EMISSAO)
		aDados[6] := Round(SF2->F2_VALBRUT,0)
		
		aRetCF := RetCF(aDados,cFilAnt)
		
		REPLACE SF3->F3_NUMAUT	WITH aRetCF[1]	//Numero de Autorizacao
		
		If lNfManual
			REPLACE SF3->F3_CODCTR	WITH Replicate("0", nTamCodCTR )	//Codigo de Controle		
		Else
			REPLACE SF3->F3_CODCTR	WITH aRetCF[2]	//Codigo de Controle
		Endif
	
	EndIf
	
	MsUnLock()
Next

Return( Nil )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ ATUALSEL   ³ Autor ³ Paulo Augusto         ³ Data ³ 06.09.02³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Prog. para acertar no SEL os Campos de Cliente/Loja Original ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ATUALSEL                                                   	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
/*/
Function ATUALISEL()
DbSelectArea ("SEL")
DbSetOrder(7) 
DbGoTop()
UpdSet01(RecCount())
While !Eof()
	UpdInc01( STR0011 + CRLF + STR0024 + SM0->M0_CODIGO, .T. ) //'Atualizando cliente original nos recibos'###'Empresa : '
	RecLock("SEL",.F.)
	EL_CLIORIG  	:= EL_CLIENTE // Cod. Cliente  
	EL_LOJORIG  	:=	EL_LOJA		// C¢d. Loja
	MsUnlock() 
   DbSkip()  
EndDo
Return 

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ LjLocAtuSX5³ Autor ³ Fernando Machima    ³ Data ³ 06/11/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Atualizacao da numeracao da NF no SX5 no uso da funcao     ³±±
±±³          ³ MayIUseCode para multiplas faturas                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ LOJA010/LOJA220                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function LjLocAtuSX5( lSeqEspecie, cDocSerie )
Local lRet   := .T.
Local aArea  := GetArea()
Local nTamNF := TamSX3("F2_DOC")[1] 

DEFAULT lSeqEspecie  := .F.
DEFAULT cDocSerie    := "NF "

DbSelectArea("SX5")
If !lSeqEspecie
   DbSeek( xFilial("SX5") + "01" + cSerie )
Else 
   DbSeek( xFilial("SX5")+"AC"+cDocSerie )
EndIf   
If Found()
   If Val(SX5->X5_DESCRI) <= Val(cNumNota)
      RecLock("SX5",.F.)
      SX5->X5_DESCRI  := PadR( StrZero(Val(cNumNota)+1,Len(cNumNota)) , nTamNf )         // --> Alterado LAVOR  (Tratamento tamanho Nota Fiscal)   Era: StrZero(Val(cNumNota)+1,nTamNf)
	  SX5->X5_DESCSPA := PadR( StrZero(Val(cNumNota)+1,Len(cNumNota)) , nTamNf )         // --> Alterado LAVOR  (Tratamento tamanho Nota Fiscal)   Era: StrZero(Val(cNumNota)+1,nTamNf)
	  SX5->X5_DESCENG := PadR( StrZero(Val(cNumNota)+1,Len(cNumNota)) , nTamNf )         // --> Alterado LAVOR  (Tratamento tamanho Nota Fiscal)   Era: StrZero(Val(cNumNota)+1,nTamNf)
	  SX5->(dbCommit())
	  If __TTSInUse
	     MsUnlock()
      Else
	     MsRUnlock()
	  EndIf
   EndIf
Else
   lRet := .F.
EndIf	   	   
RestArea(aArea)

Return (lRet)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ LocVldRF   ³ Autor ³ Fernando Machima    ³ Data ³ 25/11/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Validacao da existencia do numero do Registro Fiscal(RF) e ³±±
±±³          ³ NIT(Guatemala)                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de Cliente,Fornecedor(Loc.El Salvador e Guatemala)³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function LocVldRF( cCampoRF, cFilialRF, nOrdemRF )
Local lRet      := .T.
Local lCod      := .T.
Local cAliasCpo := ""
Local cCampo    := ""
Local cCpoCodM  := ""
Local cCpoCodA  := ""
Local cCpoLojA  := ""
Local cLoja     := ""
Local cCodigo   := ""
Local cNome     := ""
Local cNumRF    := &(cCampoRF)
Local cNumFil   := &(cFilialRF)
Local aArea     := GetArea()

If Inclui .And. !Empty(cNumRF)
   cAliasCpo := "S"+Substr(cCampoRF,4,2)
   cCampo    := cAliasCpo+"->"+Subs(cCampoRF,4,10)
   cCpoCodM  := Substr(cCampoRF,1,6)+"COD"
   cCpoCodA  := cAliasCpo+"->"+Subs(cCampoRF,4,3)+"COD"	
   If cAliasCpo == "SA1" .Or. cAliasCpo == "SA2"
      cCpoLojA := Substr(cCampoRF,4,3)+"LOJA"
   	  cLoja    := "01"
   EndIf
   lCod := .T.
   DbSelectArea(cAliasCpo)
   DbSetOrder(nOrdemRF)
   If DbSeek(cNumFil+cNumRF)
      While Alltrim(&(cCampo)) == Alltrim(cNumRF) .And. !Eof()
         If &(cCpoCodM) != &(cCpoCodA)
            cCodigo := &(cCpoCodA)
            lCod := .F.
         EndIf
		 If cAliasCpo == "SA1"
            cLoja := StrZero(Val( A1_LOJA )+1, 2 ) 
         ElseIf cAliasCpo == "SA2"
            cLoja := StrZero(Val( A2_LOJA )+1, 2 ) 
		 Else
		    Exit	
         EndIf			
         DbSkip()						
      EndDo
   EndIf
   If !lCod                
      If cAliasCpo == "SA1"
	     cNome := OemToAnsi(STR0035)  // "cliente."
	  ElseIf cAliasCpo == "SA2"
	     cNome := OemToAnsi(STR0036)  // "fornecedor."
	  ElseIf cAliasCpo == "SA3"
	     cNome := OemToAnsi(STR0037)  // "vendedor."
	  ElseIf cAliasCpo == "SA4"
   	     cNome := OemToAnsi(STR0038)  // "transportadora."
   	  Else
   	     cNome := ""
      EndIf
			
      If cAliasCpo =="SA1" .Or. cAliasCpo == "SA2"
         //"Ja existe codigo para este(a) "###"Devera usar Codigo: "###" e Loja: "                                                      
	     MsgStop( OemToAnsi(STR0039)+cNome+OemToAnsi(STR0040)+cCodigo+OemToAnsi(STR0041)+cLoja)              
	     lRet := .F.
	  Else                                
         //"Ja existe codigo para este(a) "###"Codigo encontrado :"                  
         MsgStop( OemToAnsi(STR0039)+cNome+OemToAnsi(STR0042)+cCodigo)   
         lRet := .F.
      EndIf
	  If cAliasCpo == "SA1"
	     M->A1_COD  := cCodigo
	     M->A1_LOJA := cLoja
	  ElseIf cAliasCpo == "SA2"
         M->A2_COD  := cCodigo
         M->A2_LOJA := cLoja				
	  EndIf					
   EndIf
ElseIf Altera .And. !Empty(cNumRF)
   cAliasCpo := "S"+Substr(cCampoRF,4,2)
   cCampo    := cAliasCpo+"->"+Substr(cCampoRF,4,10)
   cCpoCodM  := Subs(cCampoRF,1,6)+"COD"
   cCpoCodA  := cAliasCpo+"->"+Subs(cCampoRF,4,3)+"COD"
   If cAliasCpo == "SA1" .Or. cAliasCpo == "SA2"
      cCpoLojA := Subs(cCampoRF,4,3)+"LOJA"
   	  cLoja    := "01"
   EndIf
   lCod := .T.
   DbSelectArea(cAliasCpo)
   DbSetOrder(nOrdemRF)			
   If DbSeek(cNumFil+cNumRF)
      While Alltrim(&(cCampo)) == Alltrim(cNumRF) .And. !Eof()
         If &(cCpoCodM) != &(cCpoCodA)
            cCodigo := &(cCpoCodA)
            lCod := .F.
         EndIf
		 If cAliasCpo == "SA1"
            cLoja := StrZero(Val( A1_LOJA )+1, 2 ) 
         ElseIf cAliasCpo == "SA2"
            cLoja := StrZero(Val( A2_LOJA )+1, 2 ) 
		 Else
		    Exit	
         EndIf			
         DbSkip()
      EndDo
   EndIf
   If !lCod                
      If cAliasCpo == "SA1"
	     cNome := OemToAnsi(STR0035)  // "cliente."
	  ElseIf cAliasCpo == "SA2"
	     cNome := OemToAnsi(STR0036)  // "fornecedor."
	  ElseIf cAliasCpo == "SA3"
	     cNome := OemToAnsi(STR0037)  // "vendedor."
	  ElseIf cAliasCpo == "SA4"
   	     cNome := OemToAnsi(STR0038)  // "transportadora."
   	  Else
   	     cNome := ""
      EndIf
			
	  If cAliasCpo == "SA1" .Or. cAliasCpo == "SA2"
         //"Ja existe codigo para este(a) "###"Devera usar Codigo: "###" e Loja: "                                                      
	     MsgStop( OemToAnsi(STR0039)+cNome+OemToAnsi(STR0040)+cCodigo+OemToAnsi(STR0041)+cLoja)              
	     lRet := .F.
	  Else
         //"Ja existe codigo para este(a) "###"Codigo encontrado :"                  
         MsgStop( OemToAnsi(STR0039)+cNome+OemToAnsi(STR0042)+cCodigo)   
         lRet := .F.
	  EndIf
   EndIf		
EndIf	
RestArea(aArea)

Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³LjCriaSeri³ Autor ³ Fernando Machima      ³ Data ³ 01/12/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Cria um registro de serie caso tenha atingido o limite ma- ³±±
±±³          ³ ximo (Loc. El Salvador)                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ ExpC1 - Serie atual                                        ³±±
±±³          ³ ExpC2 - Tipo de docto.(0-Credito Fiscal,1-Fatura,2-Nota de)³±±
±±³          ³ Remissao,3-NCC,4-NDC)                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ LOJA010, LOJA220                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function LjCriaSerie( cSerAtu, cTipoDoc, nRegSX5 )
Local cNovaSerie  := ""
Local lExclui     := ValType(nRegSX5) == "N"
Local lCriaSerie  := .F.

If lExclui
	//Exclui o registro do SX5 atual pois ja atingiu a numeracao maxima para aquela serie
	cSerAtu  := Soma1(cSerAtu,len(cSerAtu)) 
	SX5->(DbGoto(nRegSX5))
	RecLock("SX5",.F.)
	DbDelete()
	MsUnlock()
Else
    cSerAtu    := Soma1(cSerAtu,len(cSerAtu))  
	cNovaSerie := cTipoDoc + PadR(cSerAtu,2)
	
	If !SX5->(DbSeek(xFilial("SX5")+"01"+cNovaSerie))
		SX5->(RecLock("SX5",.T.))
		SX5->X5_FILIAL := xFilial("SX5")
		SX5->X5_TABELA := "01"
		SX5->X5_CHAVE  := cNovaSerie
		SX5->X5_DESCRI := Strzero(1,TamSx3("L1_DOC")[1])
		SX5->X5_DESCSPA:= Strzero(1,TamSx3("L1_DOC")[1])
		SX5->X5_DESCENG:= Strzero(1,TamSx3("L1_DOC")[1])
		SX5->(dbCommit())
		SX5->(MsUnlock())
		lCriaSerie  := .T.
	EndIf
EndIf

RETURN( lCriaSerie )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³LjGetMaxIt³ Autor ³ Fernando Machima      ³ Data ³ 17/02/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Busca o numero maximo de itens de acordo com a serie do do-³±±
±±³          ³ cumento (Loc. El Salvador)                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ ExpC1 - Serie                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ LOJA010, LOJA220, LOCXNF                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function LjGetMaxIt( cSerieDoc )
Local nMaxItem  := 0

//Verifica se o parametro existe
If SuperGetMv("MV_SER"+cSerieDoc,.T.) 
   nMaxItem  := SuperGetMv("MV_SER"+cSerieDoc,.F.,SuperGetMv("MV_NUMITEN"))
ElseIf cPaisLoc == "SAL"
   //Busca por aproximacao considerando o tipo do documento de saida("0" ou "1") 
   If SX6->(DbSeek(xFilial("SX6")+"MV_SER"+Substr(cSerieDoc,1,1),.T.))
      nMaxItem  := Val(SX6->X6_CONTEUD)
   Else   
      nMaxItem  := SuperGetMv("MV_NUMITEN")         
   EndIf	  
Else
   nMaxItem  := SuperGetMv("MV_NUMITEN")         
EndIf

//Validacao para os casos em que exista no SX6 algum parametro cujo nome coincida com 
//MV_SER+<Serie> e que nao seja numerico, mas que nao esteja relacionado ao numero 
//maximo de itens na NF
If ValType(nMaxItem)<>"N"
   nMaxItem  := SuperGetMv("MV_NUMITEN")         
EndIf

Return (nMaxItem)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ValNumSAT ³ Autor ³ Fernando Machima      ³ Data ³ 15/04/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Validacao da numeracao do documento(NF, NCC ou NDC) de a-  ³±±
±±³          ³ cordo com a resolucao emitida pela SAT (Loc. Guatemala)    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ ExpC1 - Serie                                              ³±±
±±³          ³ ExpC2 - Numero do documento                                ³±±
±±³          ³ ExpC3 - Tipo do documento(1=NF, 2=NCC, 3=NDC)              ³±±
±±³          ³ ExpL4 - NF manual?                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ LOJA010, LOJA021, LOJA220, LOCXNF                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ValNumSAT( cSerieDoc, cNumDoc, cTipoDoc, lNotaManual )
Local lRet  := .F.
Local aArea := GetArea()

DEFAULT lNotaManual  := .F.

If lNotaManual
	lRet  := .T.
Else
	cNumDoc    := Padr(AllTrim(cNumDoc),TamSX3("FQ_DOCINI")[1])
	cSerieDoc  := Padr(AllTrim(cSerieDoc),TamSX3("FQ_SERIE")[1])   
	cNumResol  := Space(TamSX3("FQ_RESOLUC")[1])
	DbSelectArea("SFQ")
	DbSetOrder(2)
	If DbSeek(xFilial("SFQ")+cTipoDoc+cSerieDoc)  //GUATEMALA, fora de uso
		While !Eof() .And. xFilial("SFQ") == SFQ->FQ_FILIAL .And. cTipoDoc+cSerieDoc == ;  //- GUATEMALA NÃO ESTÁ EM USO
			SFQ->FQ_TIPO + SFQ->FQ_SERIE .And. !lRet
			
			//Nao considerar as resolucoes inativas
			If SFQ->FQ_ATIVO == "2"
				DbSkip()
				Loop
			EndIf
			
			lRet  := (cNumDoc >= SFQ->FQ_DOCINI .And. cNumDoc <= SFQ->FQ_DOCFIM)
			
			If lRet
				cNumResol  := SFQ->FQ_RESOLUC
			Else
				DbSkip()
			EndIf
		EndDo
	EndIf
EndIf

RestArea(aArea)

Return (lRet)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ArgRG1702 	ºAutor  ³Adilson             ºFecha ³ 07/11/2004  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Obtem string de 40 posicoes para ser comparado a a string      º±±
±±º          ³da nota Fiscal                                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ cAlias                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ String de 40 Posicoes contendo                                º±±
±±º          ³   - CUIT                          C 11                        º±±
±±º          ³   - Codigo de tipo de comprovante C  2                        º±±
±±º          ³   - Ponto de Venda                C  4                        º±±
±±º          ³   - CAI                           C 14                        º±±
±±º          ³   - Data de Vencimento            C  8                        º±±
±±º          ³   - DV (modulo10)                 C  1                        º±±
±±º          ³                                    ----                       º±±
±±º          ³                                   C 40                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Compras e Faturacao                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ArgRG1702( cAlias, cFilUso, cSerie, cEspecie,;
					cDocumento )
Local cRet 		 := ""
Local aCAI		 := {}
Local aAreaAtu   := GetArea()
Local aAreaSFP   := {"",""}

cRet	+=	Padl(Substr(AllTrim(SM0->M0_CGC),1,11),11,"0")
cRet	+=	M991TpComp(cAlias,cSerie,cEspecie)	 
cRet	+=	Substr(cDocumento,1,4)

DbSelectArea("SFP")
aAreaSFP := GetArea()
DbSetOrder(6)
Do Case
	Case Alltrim(cEspecie) == "NF"
		cEspecie := "1"
	Case Alltrim(cEspecie) == "NCI"
		cEspecie := "2"		 
	Case Alltrim(cEspecie) == "NDI"
		cEspecie := "3"
	Case Alltrim(cEspecie) == "NCC"
		cEspecie := "4"
	Case Alltrim(cEspecie) == "NDC"
		cEspecie := "5"
EndCase
If DbSeek(xFilial("SFP")+cFilUso+cEspecie+cSerie)                        	
  	While !Eof() .And. FP_FILIAL+FP_FILUSO+FP_ESPECIE+FP_SERIE == xFilial('SPF')+cFilUso+cEspecie+cSerie
		If cDocumento >= FP_NUMINI .And. cDocumento <= FP_NUMFIM
			aCAI := {AllTrim(FP_CAI),AllTrim(Dtos(FP_DTAVAL))}
			Exit
		Else
			aCAI :={"",""}
		EndIf			
  		DbSkip()
  	EndDo
EndIf
RestArea(aAreaSFP)
RestArea(aAreaAtu)

cRet+=aCAI[1]
cRet+=aCAI[2]

cRet	+=	LocXCMod10(cRet)

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³LocXCMod10     ºAutor  ³Adilson             ºFecha ³ 07/11/2004  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Calculo de Modulo 10                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ cTexto                                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ DV                                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function LocXCMod10( cTexto )
Local nI 	:= 0
Local nSoma	:= 0
Local nDV	:= 0

For nI := 1 To Len(cTexto)
	If mod(ni,2)==0
		nSoma	+=	Val(Substr(cTexto,ni,1))
	Else
		nSoma	+=	Val(Substr(cTexto,ni,1)) * 3
	EndIf
Next

nDV := 10-Mod(nSoma,10)

Return Str(nDV,1)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³LocXRelCOA     ºAutor  ³Adilson             ºFecha ³ 14/01/2005  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Relatorio                                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³                                                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³                                                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Localizado                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function LocXRelCOA()

//	F3_TIPOMOV = 'C'
//	F3_TIPO # 'D'
Local aCampos		:= {}		
Local lQuery		:= .F.
Local nTotalQ		:= 0
Local cPerg			:= "RELCOA"
Local dPeriodoDe	:= DToS(dDataBase)
Local dPeriodoAte	:= DToS(dDataBase)
Local cFilDe		:= '  '
Local cFilAte		:= '99'
Local cIndTmp		:= ""

//Totalizadores para o cabeçalho, agrupamento por mês
Local nIMPORTE		:= 0
Local nTOTCOMP		:= 0
Local nTOTAGRU		:= 0
Local nTOTIMPO		:= 0
Local nTOTEXON		:= 0
Local dMesAgru

//agrupamento dos itens da nota fiscal SF3 (quando mais de um item na nota com TES diferentes)
Local nTipo			:= 1
                        
//valor total de importacoes selecionadas de SD1
Local nTotDesp		:= 0
Local nTotExo		:= 0
Local nX            //Variavel de Controle do Loop
Local aOrdem       := {}

#IFDEF TOP
	Local aStruSF3	:=	SF3->(DbStruct())
	If TcSrvType() != "AS/400"
		lQuery	:=.T.
	EndIf
#ENDIF	
Private cClieFor	:= ""
Private oTmpR00
Private oTmpR01
Private oTmpR02
dPeriodoDe 	:= dDMAInc //Inicio Periodo
dPeriodoAte	:= dDMAFin //Fim Periodo

If !Pergunte(cPerg,.T.) 
	_aTotal[1]	:=	.F.
	Return .F.
EndIf

cFilDe     	:= mv_par01 //A partir  da filial
cFilAte    	:= mv_par02 //Ate a filial

If DateDiff(dPeriodoDe,dPeriodoAte,"MES") > 12
	Help(" ",1,"COAPAR01")
	_aTotal[1]	:=	.F.
	Return .F.
EndIf
ProcRegua(2)
If lQuery   
	IncProc("Verificando cantidad de registros...")
	cQuery := "SELECT COUNT(*) TOTAL"
	cQuery += "  FROM "+	RetSqlName("SF3")
	cQuery += " WHERE F3_FILIAL  between '" + cFilDe + "' AND '" + cFilAte + "'"
	cQuery += " AND F3_EMISSAO BETWEEN  '" + AllTrim(DTos(dPeriodoDe)) + "' AND '" + AllTrim(DTos(dPeriodoAte)) + "'"	
	cQuery += " AND F3_TIPOMOV = 'C' AND F3_TIPO NOT IN ('D','B') "		
	cQuery += " AND D_E_L_E_T_<>'*' "
	dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), 'QUERY', .F., .T.)
	DbSelectArea("QUERY")
	nTotalQ := QUERY->TOTAL
	dbCloseArea()

	IncProc("Seleccionado registros en el servidor...")
	DbSelectArea("SF3")
	cQuery := "SELECT * "
	cQuery += "  FROM "+	RetSqlName("SF3")
	cQuery += " WHERE F3_FILIAL  between '" + cFilDe + "' AND '" + cFilAte + "'"
	cQuery += " AND F3_EMISSAO BETWEEN  '" + AllTrim(DTos(dPeriodoDe)) + "' AND '" + AllTrim(DTos(dPeriodoAte)) + "'"		
	cQuery += " AND F3_TIPOMOV = 'C' AND F3_TIPO NOT IN ('D','B') "		
	cQuery += " AND D_E_L_E_T_<>'*' "
	cQuery += "  ORDER BY F3_FILIAL, F3_CLIEFOR, F3_LOJA, F3_EMISSAO, F3_NFISCAL, F3_SERIE, F3_TIPO"
	
	dbCloseArea()
	dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), 'SF3', .F., .T.)
	For nX := 1 To Len(aStruSF3)
		If aStruSF3[nX][2] <> "C" 
			TcSetField('SF3',aStruSF3[nX][1],aStruSF3[nX][2],aStruSF3[nX][3],aStruSF3[nX][4])
		EndIf
	Next nX
	ProcRegua(nTotalQ)		// Total de Elementos da regua	
Else
	ProcRegua(SF3->(RecCount()))
	DbSelectArea('SF3')
	DbSetOrder(2)
	cQuery	:=	"F3_FILIAL >='" + cFilDe + "' .And. F3_FILIAL <='" + cFilAte + "'"
	cQuery	+= " .And. Dtos(F3_EMISSAO) >=  '" +DTos(dPeriodoDe) + "' .And. Dtos(F3_EMISSAO) <= '" +DTos(dPeriodoAte) + "'"		
	cQuery	+= " .And. F3_TIPOMOV == 'C' .And. F3_TIPO <> 'D' .And. F3_TIPO <> 'B' "		

	cOrder		:=	"F3_FILIAL+F3_CLIEFOR+F3_LOJA+Dtos(F3_EMISSAO)+F3_NFISCAL+F3_SERIE+F3_TIPO"
	cIndTmp	:=	CriaTrab(Nil,.F.)
	IndRegua("SF3",cIndTmp,cOrder,,cQuery)
	nIndSF3 := RetIndex("SF3")
	nIndSF3++
	dbSetIndex(cIndTmp+ordBagExt())
	DbSetOrder(nIndSF3)
	SF3->(DbGoTop())
EndIf
	
//struct CONTRIB.TXT
	aCampos:=	{	{"RUC"	, "C", 11, 0},;
					{"NOME"	, "C", 60, 0};
				}

	aOrdem  := {"RUC"}
	oTmpR00 := FWTemporaryTable():New("R00")
	oTmpR00:SetFields( aCampos )
	oTmpR00:AddIndex("I01", aOrdem )
	oTmpR00:Create()
		
	aCampos:=	{	{"RUC"		, "C", 11, 0},;
					{"PERFISC"	, "C", 10, 0},;
					{"PERFIND"	, "C", 08, 0},;
					{"DEPPERT"	, "C", 01, 0},;
					{"TOTCOMP"	, "N", 15, 0},;
					{"TOTAGRU"	, "N", 15, 0},;
					{"TOTIMPO"	, "N", 15, 0},;
					{"TOTEXON"	, "N", 15, 0};
				}

	aOrdem  := {"RUC","PERFIND"}
	oTmpR01 := FWTemporaryTable():New("R01")
	oTmpR01:SetFields( aCampos )
	oTmpR01:AddIndex("I01", aOrdem )
	oTmpR01:Create()
		
	aCampos:=	{	{"RUC"		, "C", 11, 0},;
					{"PERFISC"	, "C", 10, 0},;
					{"PERFIND"	, "C", 08, 0},;
					{"RUCPROV"	, "C", 11, 0},;
					{"NOME"		, "C", 60, 0},;
					{"FILLER"	, "C", 01, 0},;
					{"IMPORTE"	, "N", 15, 0};
				}

	aOrdem  := {"RUC","PERFIND","RUCPROV"}
	oTmpR02 := FWTemporaryTable():New("R02")
	oTmpR02:SetFields( aCampos )
	oTmpR02:AddIndex("I01", aOrdem )
	oTmpR02:Create()
			
	_aTotal[1]	:=	.T.
	DbSelectArea("SM0")

	cFilPant	:=	"  "
	If !SF3->(EOF()) .And. SF3->F3_FILIAL == "  "
		DbSelectArea("R00")
		RecLock("R00", .T.)
		R00->RUC		:= SM0->M0_CGC
		R00->NOME	:= SM0->M0_NOME
		MsUnLock()
	EndIf

	While !SF3->(EOF()) .And. SF3->F3_FILIAL+Dtos(SF3->F3_EMISSAO) <= cFilAte+DToS(dPeriodoAte)
		If !lQuery .And. (SF3->F3_TIPOMOV<>'C' .Or. SF3->F3_TIPO$'DB' )
			SF3->(DbSkip())
			Loop
		EndIf	
		IncProc('Processando data : '+Dtoc(SF3->F3_EMISSAO))
		If !Empty(SF3->F3_FILIAL) .And. SF3->F3_FILIAL <> cFilPAnt
			SM0->(DbSeek(cEmpAnt+cFilDe,.T.))
			DbSelectArea("R00")
			RecLock("R00", .T.)
			R00->RUC		:= SM0->M0_CGC
			R00->NOME	:= SM0->M0_NOME
			MsUnLock()
		EndIf	


		cFilPAnt	:=	SF3->F3_FILIAL
		dMesAgru	:= LastDay(SF3->F3_EMISSAO)

		DbSelectArea("R02")
		RecLock("R02", .T.)
		R02->RUC			:= SM0->M0_CGC
		R02->PERFISC	:= StrZero(Day(dMesAgru),2,0) + "/" + StrZero(Month(dMesAgru),2,0) + "/" + StrZero(Year(dMesAgru),4)
		R02->PERFIND	:= Dtos(dMesAgru)
		SA2->(DbSetOrder(1))
		SA2->(DbGoTop())
		If Empty(XFilial('SA2'))
			SA2->(DbSeek(xFilial('SA2')+SF3->F3_CLIEFOR+SF3->F3_LOJA))
		Else
			SA2->(DbSeek(SM0->M0_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA))					
		EndIf
		If SA2->(EOF())
			R02->RUCPROV	:= ""
			R02->NOME		:= ""
		Else
			R02->RUCPROV	:= SA2->A2_CGC
			R02->NOME		:= SA2->A2_NOME
		EndIf
		R02->FILLER		:= " "

		cChaveSF3	:=	SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+MesAno(dMesAgru)
		R02->IMPORTE:=0
		While !SF3->(Eof()) .And. cChaveSF3==SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+MesAno(SF3->F3_EMISSAO)
			nTipo := 1
			nIMPORTE		+= SF3->F3_BASIMP1
			
			If SF3->F3_BASIMP1 <> 0
				R02->IMPORTE+= SF3->F3_BASIMP1
				DbSelectArea("SF1")                  
				SF1->(DbSetOrder(1))
				If SF1->(DbSeek(SF3->F3_FILIAL+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_TIPO))
					If (SF1->F1_TIPO_NF == "5")// .Or. (SF1->(FieldPos("F1_FACIMP"))  > 0 .And. SF1->F1_FACIMP == "1")  
						nTipo := 3
					Else
						SD1->(DbSetOrder(1))
						SD1->(DbGoTop())
						SD1->(DbSeek(SF3->F3_FILIAL+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA))
						If !SD1->(EOF())
							While cChaveSF3 == SD1->D1_FILIAL+SD1->D1_SERIE+SD1->D1_DOC+SD1->D1_FORNECE+SD1->D1_LOJA+SD1->D1_TIPO
								If Type("SD1->D1_NUMDESP") <> "U"
									If !Empty(SD1->D1_NUMDESP) .And. SD1->D1_NUMDESP # 0
										nTotDesp	+= SD1->D1_BASIMP1
									ElseIf SD1->D1_BASIMP1 == 0
										nTotExo		+= SD1->D1_TOTAL
									EndIf
								ElseIf SD1->D1_BASIMP1 == 0
									nTotExo		+= SD1->D1_TOTAL
								EndIf
								SD1->(DbSkip())
							End
						EndIf
					EndIf
				EndIf
			Else
				nTipo := 4
				R02->IMPORTE+= SF3->F3_VALMERC
			EndIf
			Do Case
				Case nTipo == 1
					nTOTCOMP		+= SF3->F3_BASIMP1
				Case nTipo == 2
					nTOTAGRU		+= 0			//depende de especificação							
				Case nTipo == 3
					nTOTIMPO		+= SF3->F3_BASIMP1
				Case nTipo == 4
					nTOTEXON		+= SF3->F3_VALMERC
				OtherWise
					nTOTCOMP		+= SF3->F3_BASIMP1
			EndCase
			SF3->(DbSkip())
		End
		R02->(MsUnLock())
		If R01->(DbSeek(PadL(SM0->M0_CGC,Len(R01->RUC))+Dtos(dMesAgru)))
			RecLock("R01", .F.)
		Else
			RecLock("R01", .T.)
			R01->RUC			:= SM0->M0_CGC
			R01->PERFISC	:= StrZero(Day(dMesAgru),2,0) + "/" + StrZero(Month(dMesAgru),2,0) + "/" + StrZero(Year(dMesAgru),4)
			R01->PERFIND	:= Dtos(dMesAgru)
			R01->DEPPERT	:= " "
		EndIf
		R01->TOTCOMP	+= nTOTCOMP	- nTotDesp - nTotExo
		R01->TOTAGRU	+= nTOTAGRU 
		R01->TOTIMPO	+= nTOTIMPO + nTotDesp
		R01->TOTEXON	+= nTOTEXON + nTotExo
		R01->(MsUnLock())
		nTOTCOMP	:= 0
		nTOTAGRU	:= 0
		nTOTIMPO	:= 0
		nTOTEXON	:= 0
		nMesAtru	:= 0
		nTotDesp	:= 0					
		nTotExo		:= 0							
	EndDo
	If !lQuery
		DbSelectArea("SF3")
		dbClearFil()
		RetIndex("SF3")
		If !Empty(cIndTmp)
			FErase (cIndTmp+OrdBagExt())
		EndIf
		DbSetOrder(1)
	EndIf

Return


Static Function DateDiff( dDataDe, dDataAte, cComparacao )
Local nMesDe     := Month(dDataDe)
Local nAnoDe		:= Year(dDataDe)
Local nMesAte	:= Month(dDataAte)
Local nAnoAte	:= Year(dDataAte)
Local nRetorno

If cComparacao == "MES"
	If nAnoAte == nAnoDe
		nRetorno := nMesAte - nMesDe
	ElseIf nAnoAte - nAnoDe == 1
		nRetorno := ((12-nMesDe)+1) + nMesAte
	ElseIf (nAnoAte-nAnoDe) > 1
		nRetorno := ((12-nMesDe)+1) + nMesAte
		nRetorno += ((nAnoAte-nAnoDe-1)*12)
	Else
		nRetorno := Nil
	EndIf
ElseIf cComparacao == "DIA"
	nRetorno = dDataAte - dDataDe
Else //ano
	nRetorno := Nil
EndIf
Return nRetorno


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º			ROTINAS PARA A O USO DE COMPROVANTES FISCAIS DIGITAIS         º±±
±±º                                                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CFDGERXML ºAutor  ³Marcello            ºFecha ³ 14/12/2005  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para criacao de faturas eletronicas em formato xml.  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CFD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CFDGerXml( cEspecie, cCodigo, cLoja, cFatura, cSerie	, lConf	 , lProc, lPosic )
Local aArea		:= GetArea()
Local aSF		:= {}
Local aSF3		:= {}
Local nX		:= 0
Local cHora		:= ""
Local cAproFol	:= ""
Local cFilSF3	:= xFilial("SF3")
Local lRet		:= .T.
Local lOK		:= .T.
Local dDEmis	:= Ctod("//")
Local aMsj		:= {}
Local lCancel	:= .F.
Local lExp		:= .F.
Local lTimbra	:= .F.
Local lErrTimb	:= .T.
Local lNoPerg	:= SuperGetMv("MV_NOPERL",,.F.) //Muestra grupo preguntas LJA701
Local cFunName	:= FunName()
Local cTipoOpe		:= ""
Local cTipoDoc		:= ""
Local lErrorTimb	:= .F.
Local cCFDUso	:= Alltrim(GetMv("MV_CFDUSO", .T., "1"))
Local lPerg		:= .F.
Local lBlind	:= IsBlind()
Local lValidMsg    := SuperGetMV("MV_CFDMSG", .F., .T.)
Local lSeekA1X  := .T.
Local lSeekA1Y  := .T.
Local cFilSF2   := xFilial("SF2")
Local lCartaP   := SF2->(ColumnPos("F2_TPCOMPL")) > 0

Private aTotalRets := {} //Total Retenciones (CFDi México)
Private aTotalTras := {} //Total Impuestos Traslados (CFDi México)
Private aTotImpLoc := {0,0}
Private cRetIVA    := SuperGetMv("MV_RETIVAM",,"") //Retención de IVA - México
Private cRetISR    := SuperGetMv("MV_RETISR",,"") //Retención de ISR - México 
Private cRetIEPS   := SuperGetMv("MV_RETIEPS",,"") //Retención de IEPS - México
Private cIVATras   := SuperGetMv("MV_IVATRAS",,"") //IVA Trasladado - México
Private cIEPSTras  := SuperGetMv("MV_IEPSTRA",,"") //IEPS Trasladado - México
Private nCentCFD   := IIf(SuperGetMv("MV_CENT",,2) > 6, 6,SuperGetMv("MV_CENT",,2)) 
Private cPict1     := "99999999." + PADR("99",nCentCFD,"9")
Private cPict2     := "99999999.99"
Private cPict3     := "99999999.999999"

DEFAULT cCodigo	 := ""
DEFAULT cLoja	 := ""
DEFAULT cFatura	 := ""
DEFAULT cSerie	 := ""
DEFAULT lConf	 := .T.
DEFAULT lProc	 := .T.
DEFAULT lPosic	 := .T. 
DEFAULT cEspecie := "NF"

cEspecie := AllTrim(cEspecie)
lRet := .F.
If cEspecie $ "NCI,NCC,RFD,NDP"
	DbSelectArea("SF1")
	aSF := GetArea()
	lOk := .T.
	cArqIni := &(GetNewPar("MV_CFDFTE",""))
	If lPosic
		DbSetOrder(1)//F1_FILIAL+F1_DOC+F1_SERIE+F1_FORNECE+F1_LOJA+F1_TIPO 
		lOK := DbSeek(xFilial("SF1")+cFatura+cSerie+cCodigo+cLoja)
	EndIf
	cHora := F1_HORA
	dDEmis := F1_EMISSAO
	If !cPaisLoc $ "COL|BOL|PER|PAR|"
		cAproFol := F1_APROFOL
	EndIf
	If cPaisLoc $ "MEX"
		If !Empty(SF1->F1_UUID) .And. !Empty(SF1->F1_FECTIMB) //Valida que el documento seleccionado en el Browse contenga Timbre Fiscal.
			MsgInfo(STR0141) //"El documento seleccionado, ya cuenta con un Timbre Fiscal Digital."
			Return
		EndIf
	EndIf
Else
	DbSelectArea("SF2")
	aSF := GetArea()
	lOk := .T.
	If lPosic
		DbSetOrder(1)//F2_FILIAL+F2_DOC+F2_SERIE+F2_CLIENTE+F2_LOJA+F2_FORMUL+F2_TIPO
		lOK := DbSeek(xFilial("SF2")+cFatura+cSerie+cCodigo+cLoja) 
	EndIf
	If cPaisLoc == "COL"
		lExp := IIF(POSICIONE("SA1",1,XFILIAL("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA,"A1_EST") == "EX",.T.,.F.)	
	EndIf
	If cPaisLoc <> "COL" .or. !lExp
		If cPaisLoc == "EQU" .And. cEspecie $ "RFN|RTS|RCD"
			cArqIni := &(GetNewPar("MV_CFDFTGR",""))
		Else
			cArqIni := &(GetNewPar("MV_CFDFTS",""))
		Endif
	Else
		cArqIni := &(GetNewPar("MV_CFDFTSE",""))
	EndIf
	cHora := F2_HORA
	dDemis := F2_EMISSAO
	If !(cPaisLoc $ "COL|BOL|PER|PAR|") 
		cAproFol:= F2_APROFOL
	EndIf
	If cPaisLoc $ "MEX"
		If !Empty(SF2->F2_UUID) .And. !Empty(SF2->F2_FECTIMB) //Valida que el documento seleccionado en el Browse contenga Timbre Fiscal.
			MsgInfo(STR0141)//"El documento seleccionado, ya cuenta con un Timbre Fiscal Digital."
			Return
		EndIf
	EndIf
EndIf
If lOK 
	If cPaisLoc $ "EQU|PER|PAR"
		If lProc
			Processa({|| ProcNorma(cArqIni,,&(GetNewPar("MV_CFDDOCS","")))})
		Else
			ProcNorma(cArqIni,,&(GetNewPar("MV_CFDDOCS","")))
		EndIf		
		lRet := .T.			
	ElseIf !Empty(cAproFol) .Or. (cPaisLoc $ "MEX|COL|BOL")
		If cPaisLoc $ "MEX"
			cCFDUso := IIf(cCFDUso $ "0|1|2|3",cCFDUso,"1")
			lPerg := IIf(cCFDUso $ "2|3" .Or. !lConf .Or. lBlind, .T., Iif(cCFDUso == "1" , MsgYesNo(STR0050), .F.)) //"Confirma a geracao do comprovante fiscal digital ?"
		Else
			If cPaisLoc == "COL"
				lPerg := IIf(FunName() == "MATA486",.T.,.F.)				
			Else
				lPerg := IIf(lConf,MsgYesNo(STR0050),.T.) //"Confirma a geracao do comprovante fiscal digital ?"				
			EndIf
		EndIf
		If lPerg 
			lRet := .T.
			If cFunName == "LOJA701" .And. cPaisLoc == "MEX"
				While !lCancel
					If !lNoPerg
						If Pergunte("LJA701",.T.) 
							RecLock("SF2",.F.)
								SF2->F2_USOCFDI	:= MV_PAR01
								SF2->F2_RELSAT	:= MV_PAR02
								SF2->F2_UUIDREL := Alltrim(MV_PAR03)
							MsUnLock()
							lCancel := .T.
						Else
							lCancel := MsgYesNo(STR0128) //"¿Confirma la cancelación de generación de compronbate fiscal digital?"
							If lCancel						
								lRet := .F.
							EndIf
						EndIf
					Else
						lCancel := .T.
					EndIf
				EndDo
			EndIf	
			//Validaciones para Carta Porte México
			If lRet .And.cPaisLoc == "MEX" .And. cEspecie == "NF" .And. lCartaP .And. SF2->F2_TPCOMPL == 'S'
				dbSelectArea("A1Z")
				A1Z->(dbSetOrder(1)) //A1Z_FILIAL + A1Z_DOC + A1Z_SERIE
				lSeekA1X := A1Z->(MsSeek(cFilSF2 + SF2->F2_DOC + SF2->F2_SERIE))
				dbSelectArea("A1Y")
				A1Y->(dbSetOrder(1)) //A1Y_FILIAL + A1Y_DOC + A1Y_SERIE
				lSeekA1Y := A1Y->(MsSeek(cFilSF2 + SF2->F2_DOC + SF2->F2_SERIE))
				If !lSeekA1X .Or. !lSeekA1Y
					MsgAlert(StrTran(STR0144,"###",Alltrim(FWX3Titulo('F2_TPCOMPL')))) //"No se puede generar el Comprobante Fiscal Digital (CFDI), ya que el campo ### (F2_TPCOMPL), se cuentra configurado con valor Sí y no se tienes los datos requeridos, seleccione el documento y ejecute la acción 'Carta Porte'."
					lRet := .F.
				EndIf
			EndIf
			If lRet
				If lProc
					Processa({|| ProcNorma(cArqIni,,&(GetNewPar("MV_CFDDOCS","")))})
				Else
					ProcNorma(cArqIni,,&(GetNewPar("MV_CFDDOCS","")))
				EndIf						
				If SF2->(FieldPos( "F2_TIMBRE" ))>0 .AND. SF2->(FieldPos( "F2_UUID" ))>0  .AND. SF2->(FieldPos( "F2_FECTIMB" ))>0 .AND. SF1->(FieldPos( "F1_TIMBRE" ))>0 .AND. SF1->(FieldPos( "F1_UUID" ))>0 .AND. SF1->(FieldPos( "F1_FECTIMB" ))>0
				   If cPaisLoc $ "MEX"
				   		If !(cCFDUso $ "0|3")
				   			lPerg := Iif(cCFDUso == "2" .Or. ( Type("lLocxAuto") <> "U" .And. lLocxAuto ), .T., MsgYesNo(STR0099)) //"Confirma el timbrado del comprobante fiscal digital?"
				   		Else
				   			lPerg := .F.
				   		EndIf
				   EndIf
				   If lPerg .And. !lBlind
				   		If cPaisLoc == "MEX" .And. cFunName == "MATA465N"
				   			lTimbra := .T.
				   		EndIf
						If lProc
							 Processa({|| TimbreCFDi( cFatura , cSerie , cEspecie , cCodigo , cLoja, ,@aMsj )})
							 If !Empty(aMsj)
							 	lValidMsg := IIf(FunName() <> "LOJA701", .T., lValidMsg)
							 	If lValidMsg
							 		Aviso( aMsj[1], aMsj[2], {aMsj[3]})
							 	EndIf
							 Else
							    IF cFunName == "MATA465N" .and. cPaisLoc == "MEX"
							    	lErrTimb := .F.
							 	EndIf
							 EndIf
						Else
							 TimbreCFDi( cFatura , cSerie , cEspecie , cCodigo , cLoja, , @aMsj)
							 If !Empty(aMsj)
							 	 Aviso( aMsj[1], aMsj[2], {aMsj[3]})
							 Else
							 	lErrorTimb := .T.
							 EndIf
						EndIf
						If !lErrorTimb //Si no ocurrio error en el proceso de Timbrado, solicitara Generar Impresion.
							If Iif((cCFDUso == "2" .And. cPaisLoc $ "MEX"), .T., MsgYesNo(STR0129)) //"¿Desea realizar la impresión del Comprobante Fiscal (CFDI)?"
			                   If cFunName == "MATA465N" .And. AllTrim(cEspecie) == "NCC"
			                       cTipoOpe := "E"
			                       cTipoDoc	:= SF1->F1_TIPODOC
			                   ElseIf cFunName == "MATA465N" .And. AllTrim(cEspecie) == "NDC"
			                       cTipoOpe := "S"
			                       cTipoDoc	:= SF2->F2_TIPODOC
			                   ElseIf cFunName $ "MATA467N|MATA468N" .And. AllTrim(cEspecie) == "NF"
			                       cTipoOpe := "S"
			                       cTipoDoc	:= SF2->F2_TIPODOC
			                   EndIf
			                   If cPaisLoc $ "MEX" .And. ExistBlock("M475IMPPER") //PE para impresion de formato personalizado
			                       Processa({ |lEnd| ExecBlock("M475IMPPER",.F.,.F.,{cEspecie, cSerie, cFatura, cTipoDoc, cCodigo, cLoja, .T.})}, STR0130) //"Imprimiendo documento... "  
			                   Else
			                       Processa({ |lEnd| MATR475Gen(cEspecie, cSerie, cFatura, cTipoDoc, cCodigo, cLoja, .T.)}, STR0130) //"Imprimiendo documento... "
			                   EndIf
						    EndIf
						EndIf
					EndIf
			   EndIf
		   EndIf
		EndIf
	Else
		If lConf
			MsgAlert(STR0058,STR0051)  //"Nao se pode gerar o CFD, pois este documento nao possui o numero de aprovacao para a requisicao de folios."
		Else
			IF cFunName == "MATA465N" .and. cPaisLoc == "MEX"
				lErrTimb := .F.
			EndIf
		EndIf
	EndIf
EndIf
RestArea(aSF)
If lRet
	If cPaisLoc $ "ANG|EQU|HAI|MEX|PTG"
		DbSelectArea("SF3")
		aSF3 := GetArea()
		DbSetOrder(1)
		If DbSeek(xFilial("SF3") + Dtos(dDemis) + cFatura + cSerie + cCodigo + cLoja)  
			While F3_FILIAL == cFilSF3 .And. F3_ENTRADA == dDEmis .And. F3_NFISCAL == cFatura .And. F3_SERIE == cSerie .And. F3_CLIEFOR == cCodigo .And. F3_LOJA == cLoja
				RecLock("SF3",.F.)
				If cPaisLoc $ "ANG|EQU|HAI|MEX|PTG"
					REPLACE F3_FIMP WITH "S"
					REPLACE F3_HORA WITH cHora
				EndIf
				MsUnLock()
				SF3->(DbSkip())
			EndDo
		EndIf
		SF3->(RestArea(aSF3))
	EndIf
EndIf
RestArea(aArea)

If cPaisLoc == "MEX" .And. FunName() == "MATA465N" .And. (!lTimbra .Or. !lErrTimb)
    lRet := .F.
EndIf

Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CFDEXCXML ºAutor  ³Marcello            ºFecha ³ 11/07/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para excluir / mover os arquivos .xml de documentos  º±±
±±º          ³apagados ou cancelados.                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CFD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CFDExcXml( cEspecie, cCodigo, cLoja, cFatura,;
					cSerie	, lMover )
Local aArea    := GetArea()
Local lRet     := .T.
Local cArq     := ""
Local cDirCFD  := ""
Local cDirAnul := ""

DEFAULT lMover := .F.

If AllTrim(cEspecie) $ "NCI,NCC"
	DbSelectArea("SF1")
	aSF:=GetArea()
	lOk := .T.
	cArq := &(GetNewPar("MV_CFDNAF1","Lower(AllTrim(SF1->F1_ESPECIE)) + '_' + Lower(AllTrim(SF1->F1_SERIE)) + '_'  + Lower(AllTrim(SF1->F1_DOC)) + '.xml'"))  
	DbSetOrder(1)
	DbSeek(xFilial("SF1")+cFatura+cSerie+cCodigo+cLoja)  
Else
	DbSelectArea("SF2")
	aSF:=GetArea()
	lOk := .T.
	cArq := &(GetNewPar("MV_CFDNAF2","Lower(AllTrim(SF2->F2_ESPECIE)) + '_' + Lower(AllTrim(SF2->F2_SERIE)) + '_'  + Lower(AllTrim(SF2->F2_DOC)) + '.xml'"))  
	DbSetOrder(1)
	DbSeek(xFilial("SF2")+cFatura+cSerie+cCodigo+cLoja)
EndIf

If cPaisLoc == "COL"
	cArq := (Lower('face') + '_' + Lower(IIF( AllTrim(cEspecie) == "NF" , "f" , IIF( AllTrim(cEspecie) == "NCC"  , "c" , "d") ) )+ Lower(PADR( Alltrim(SM0->M0_CGC) , 10 , "0" )) + M486XHEX(PadR( Alltrim( Substr( cFatura , 4 , Len(cFatura) - 3 ) ) , 10 , "0" ),10) + '.xml')
EndIf

cDirCFD := &(GetNewPar("MV_CFDDOCS",""))
If cDirCFD == Nil .Or. !ExistDir(cDirCFD)
	MsgAlert("MV_CFDDOCS" + CRLF + STR0044 + AllTrim(cDirCFD),STR0051)
	lRet := .F.
Else
	If cArq == Nil .Or. !File(cDirCFD + cArq) .And. !(cpaisLoc $ "COL")
		MsgAlert(STR0043 + AllTrim(cDirCFD + cArq),STR0051)
		lRet := .F.
	EndIf
EndIf
If lRet .And. lMover
	cDirAnul := &(GetNewPar("MV_CFDANUL",""))
	If cDirAnul == Nil .Or. !ExistDir(cDirAnul)
		MsgAlert("MV_CFDANUL" + CRLF + STR0044 + AllTrim(cDirAnul),STR0051)
		lRet := .F.
	Else
		Processa({|| lRet := __CopyFile(cDirCFD+cArq,cDirAnul+cArq)},,OemToAnsi(STR0051))
		If !lRet
			MsgAlert(STR0059 + " " + cArq + " " + STR0060 + " " + cDirAnul,STR0051) //"Nao foi possivel mover o arquivo" ### "para o diretorio"
			lRet := .F.
		EndIf
	EndIf
EndIf
If lRet
	FErase(cDirCFD + cArq)
EndIf
RestArea(aSF)
RestArea(aArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CFDVERIFICºAutor  ³Marcello            ºFecha ³ 27/12/2005  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se os parametros para uso do cfd estao configuradosº±±
±±º          ³corretamente.                                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CFD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CFDVerific()
Local aRet := {}
Local lRet := .T.
Local cParam
Local cProvFE := SuperGetMV("MV_PROVFE",,"")
Local lM486EBOL := ExistBlock("M486EBOL")

//Verifica o uso do cfd            
If cPaisLoc $ "MEX|BOL|PAR"
	cParam := GetNewPar("MV_CFDUSO","0")
ElseIf cPaisLoc $ "COL|EQU"
	cParam := "1"
EndIf
If cParam == "0" .Or. cParam == Nil
	aRet := {"0",{}}
Else
	If cPaisLoc == "MEX"
		aRet := {cParam,{}}
		//verifica o arquivo .INI
		cParam := &(GetNewPar("MV_CFDFTS",""))
		If cParam == Nil .Or. !File(cParam)
			Aadd(aRet[2],{"01",STR0043 + AllTrim(cParam) + " [MV_CFDFTS]"})		//"arquivo nao encontrado: "
		EndIf
		cParam := &(GetNewPar("MV_CFDFTE",""))
		If cParam == Nil .Or. !File(cParam)
			Aadd(aRet[2],{"02",STR0043 + AllTrim(cParam) + " [MV_CFDFTE]"})
		EndIf
		//verifica o diretorio para gravacao do cfd
		cParam := &(GetNewPar("MV_CFDDOCS",""))
		If cParam == Nil .Or. !ExistDir(cParam)
			Aadd(aRet[2],{"03",STR0044 + AllTrim(cParam) + " [MV_CFDDOCS]"})		//"diretorio nao encontrado: "
		EndIf
		//verifica o diretorio para gravacao do cfd anulado
		cParam := &(GetNewPar("MV_CFDANUL",""))
		If cParam == Nil .Or. !ExistDir(cParam)
			Aadd(aRet[2],{"10",STR0044 + AllTrim(cParam) + " [MV_CFDANUL]"})		//"diretorio nao encontrado: "
		EndIf
		//verifica o diretorio do arquivo de senha
		cParam := &(GetNewPar("MV_CFDDIRS",""))
		If cParam == Nil .Or. !ExistDir(cParam)
			Aadd(aRet[2],{"04",STR0044 + AllTrim(cParam) + " [MV_CFDDIRS]"})
		EndIf
		//verifica o arquivo de senha
		cParam := GetNewPar("MV_CFDARQS","")
		If cParam == Nil .Or. !File(&(GetNewPar("MV_CFDDIRS",""))+cParam)
			Aadd(aRet[2],{"05",STR0043 + AllTrim(cParam) + " [MV_CFDARQS]"})
		EndIf
		//verifica o arquivo de folios
		//verifica se existem os campos necessarios no arquivo de controle de folios
		If cPaisLoc $ "ANG|EQU|HAI|MEX|PTG" .And. SFP->(FieldPos("FP_NRCERT")) == 0
			Aadd(aRet[2],{"07",STR0046})									//"Nao foi criado o campo para o numero de serie do certificado (FP_NRCERT)"
		EndIf
		//verifica se existem os campos necessarios no cabecalho da nota de saida
		If cPaisLoc $ "ANG|EQU|HAI|MEX|PTG" .And. (SF2->(FieldPos("F2_APROFOL")) == 0 .Or. SF1->(FieldPos("F1_APROFOL")) == 0 .Or. SF3->(FieldPos("F3_APROFOL")) == 0)
			Aadd(aRet[2],{"08",STR0047})										//"Nao foi criado o(s) campo(s) para o numero de autorizacao (F1_APROFOL, F2_APROFOL, F3_APROFOL)"
		EndIf
		If cPaisLoc $ "ANG|EQU|HAI|MEX|PTG" .And. (SF2->(FieldPos("F2_CERTFOL")) == 0 .Or. SF1->(FieldPos("F1_CERTFOL")) == 0 .Or. SF3->(FieldPos("F3_CERTFOL")) == 0)
			Aadd(aRet[2],{"09",STR0048})										//"Nao foi criado o(s) campo(s) para o numero de serie do certificado (F1_CERTFOL, F2_CERTFOL, F3_CERTFOL)"
		EndIf
		//Verifica se o campo para a hora da geracao da nota e para o flag de impressao foram criados
		If cPaisLoc $ "ANG|EQU|HAI|MEX|PTG" .And. (SF3->(FieldPos("F3_HORA")) == 0 .Or. SF3->(FieldPos("F3_FIMP")) == 0 )
			Aadd(aRet[2],{"11",STR0061})  //"Nao foi criado o(s) campo(s) para o controle da geracao do CFD (F3_HORA, F3_FIMP)"
		EndIf
	ElseIf cPaisLoc == "EQU"
		aRet := {cParam,{}}
		//verifica o arquivo .INI
		cParam := &(GetNewPar("MV_CFDFTS",""))
		If cParam == Nil .Or. !File(cParam)
			Aadd(aRet[2],{"01",STR0043 + AllTrim(cParam) + " [MV_CFDFTS]"})		//"arquivo nao encontrado: "
		EndIf	
		//verifica o diretorio para gravacao do cfd
		cParam := &(GetNewPar("MV_CFDDOCS",""))
		If cParam == Nil .Or. !ExistDir(cParam)
			Aadd(aRet[2],{"03",STR0044 + AllTrim(cParam) + " [MV_CFDDOCS]"})		//"diretorio nao encontrado: "
		EndIf	
	Else
		If cPaisLoc == "COL" .And. Empty(cProvFE)
			aRet := {"0",{}}
		Else
			aRet := {cParam,{}}
			//verifica o arquivo .INI
			cParam := &(GetNewPar("MV_CFDFTS",""))
			If cParam == Nil .Or. !File(cParam) .and. !(cPaisLoc $ "PAR") .and. !(cPaisLoc == "BOL" .and. ("VULCAN" $ cProvFE .or. lM486EBOL))
				Aadd(aRet[2],{"01",STR0043 + AllTrim(cParam) + " [MV_CFDFTS]"})		//"arquivo nao encontrado: "
			EndIf
			cParam := &(GetNewPar("MV_CFDFTE",""))
			If cParam == Nil .Or. !File(cParam) .and. !(cPaisLoc $ "PAR") .and. !(cPaisLoc == "BOL" .and. ("VULCAN" $ cProvFE .or. lM486EBOL))
				Aadd(aRet[2],{"02",STR0043 + AllTrim(cParam) + " [MV_CFDFTE]"})		//"arquivo nao encontrado: "
			EndIf
			cParam := &(GetNewPar("MV_CFDFTSE",""))
			If (cParam == Nil .Or. !File(cParam)) .and. !(cPaisLoc $ "BOL|PAR|")
				Aadd(aRet[2],{"04",STR0043 + AllTrim(cParam) + " [MV_CFDFTSE]"})	//"arquivo nao encontrado: "
			EndIf
			//verifica o diretorio para gravacao do cfd
			cParam := &(GetNewPar("MV_CFDDOCS",""))
			If cPaisLoc == "COL" .And. cProvFE == "DFACTURA"
				If cParam == Nil
					Aadd(aRet[2],{"03",STR0044 + AllTrim(cParam) + " [MV_CFDDOCS]"})	//"diretorio nao encontrado: "
				EndIf
				//Creación de carpeta donde se genera el XML de documento a transmitir
				If !ExistDir(cParam)
					MakeDir(cParam)
				EndIf
				//Creación de carpeta donde se genera el XML autorizados que fueron transmitidos
				If !ExistDir(cParam + "/autorizados")
					MakeDir(cParam + "/autorizados")
				EndIf
			Else
				If cParam == Nil .Or. !ExistDir(cParam)
					Aadd(aRet[2],{"03",STR0044 + AllTrim(cParam) + " [MV_CFDDOCS]"})	//"diretorio nao encontrado: "
				EndIf
			EndIf

			//verifica o diretorio para gravacao do cfd anulado
			cParam := &(GetNewPar("MV_CFDANUL",""))
			If cParam == Nil .Or. !ExistDir(cParam) .And. !(cPaisLoc $ "COL")
				Aadd(aRet[2],{"10",STR0044 + AllTrim(cParam) + " [MV_CFDANUL]"})	//"diretorio nao encontrado: "
			EndIf
		EndIf
	EndIf
	
	If cPaisLoc $ "MEX|EQU"
		If !Empty(aRet[2])
			Aadd(aRet[2],{"99",CRLF + CRLF + STR0049})							//"As rotinas para comprovantes fiscais digitais nao poderao ser utilizadas"
		EndIf	
	EndiF
EndIf
Return(aRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CFDCHKFOL ºAutor  ³Marcello            ºFecha ³ 16/01/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica a serie e o folio para geracao do cfd.             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CFD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CFDChkFol(cFil, cSer, cFol, aCFD, lMsgSer, lMsgFol, cEspecie)
Local aArea   := GetArea()
Local aSFP    := {}
Local nRet    := 0
Local lNumDoc := .F.  
Local cNumIni := ""
Local cNumFim := ""
Local nPosIni := 0
Local cCombo  := ""
Local lMsgAtiv := .T.
Local lAchou	:= .F.

DEFAULT cFil	 := cFilAnt
DEFAULT lMsgSer	 := .T.
DEFAULT lMsgFol	 := .T.
DEFAULT aCFD	 := {}
DEFAULT cEspecie := "NF"

DbSelectArea("SFP")
aSFP := GetArea()
aCFD := {"",""}
cSer:= substr(cSer,1,3) //Projeto Chave Unica
DbSetOrder(1)
If DbSeek(xFilial("SFP") + cFil + cSer)  
	If cFol <> Nil .And. !Empty(cFol)
		// Busca posicao da descricao da especie da nota no combo da tabela SFP (1=NF;2=NCI;3=NDI;4=NCC;5=NDC)
		SX3->(dbSetOrder(2))
		SX3->(dbSeek("FP_ESPECIE"))
		nPosIni := At(AllTrim(cEspecie),AllTrim(SX3->X3_CBOX))
		cCombo := Substr(AllTrim(SX3->X3_CBOX),nPosIni-2,1)

		// Verifica se a nota selecionada esta dentro de algum range cadastrado
		// Necessario em caso de existir mais de um range com a mesma serie
		DbSelectArea("SFP")		
		cNumIni := FP_NUMINI
		While FP_FILIAL+FP_FILUSO+FP_SERIE == xFilial("SFP")+cFil+cSer  
			If nModulo == 12 .OR. AllTrim(FP_ESPECIE) == AllTrim(cCombo)
				lAchou:=.T.
				If Val(cFol) >= Val(FP_NUMINI) .And. Val(cFol) <= Val(FP_NUMFIM)
				 	If Alltrim(FP_ATIVO) <> "1" .AND. cPaisLoc != "BOL"
						lMsgAtiv := .F.
					Else  
						lMsgAtiv := .T.
						lNumDoc := .T.
					EndIf
					Exit
				EndIf
				cNumFim := FP_NUMFIM
			EndIf
			SFP->(DbSkip())
		EndDo
		
		If cPaisLoc == "EQU"
			aCFD := {FP_CAI, FP_NRCERT, FP_PTOEMIS, FP_ESTABL}
		ElseIf cPaisLoc != "BOL"
			aCFD := {FP_CAI,IIF(SFP->(ColumnPos("FP_NRCERT")) > 0,SFP->FP_NRCERT,"")}		
		EndIf

		If !lNumDoc .And. !lMsgAtiv  
			nRet := 2
			MsgAlert(STR0085, STR0142) //" Este folio no está activo en el control de folios." - "Control de Folios"
		ElseIf !lNumDoc
			nRet := 2
			If lMsgFol  
				MsgAlert(STR0052 + " (" + AllTrim(cSer) + ": " + AllTrim(cNumIni) + " - " + AllTrim(cNumFim) + ")", STR0142) // "Este folio nao pertence ao intervalo desta serie" ### "Control de Folios"
			EndIf
		EndIf
	Else
		lAchou:=.T.
	EndIf
EndIf
If !lAchou
	nRet := 2
	If lMsgSer
		MsgAlert(STR0053, STR0142) //"Esta serie nao esta registrada no controle de folios." - "Control de Folios"
	EndIf
EndIf
RestArea(aSFP)
RestArea(aArea)
Return nRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CFDGerSel ºAutor  ³Marcello            ºFecha ³ 17/01/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gerar o selo digital                                        º±±
±±º          ³Retorna a cadeia original e o selo digital                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CFD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CFDGerSel( cEspecie, cCodigo, cLoja, cFatura,;
					cSerie )
Local aArea := GetArea()
Local aSF := {}
Local aSA := {}
Local aSD := {}
Local nX := 0
Local aQuery := {}
Local aRet := {"",""}
Local cCadOrig := ""
Local cSelo := ""
Local cSeparador := "|"
Local cTerminador := "||"
Local cData := ""
Local cQuery := ""
Local cFiltro := ""

DEFAULT cCodigo	:= ""
DEFAULT cLoja	:= ""
DEFAULT cFatura	:= ""
DEFAULT cSerie	:= "" 
DEFAULT cEspecie:= "NF"

cEspecie := AllTrim(cEspecie)			
aRet := {"",""}
cCadOrig := ""
cSelo := ""
If cEspecie $ "NCI,NCC"
	DbSelectArea("SF1")
	aSF:=GetArea()
	DbSetOrder(1)
	If DbSeek(xFilial("SF1")+cFatura+cSerie+cCodigo+cLoja)  
		If cEspecie == "NCC"
			DbSelectArea("SA1")
			aSA := GetArea()	
			DbSetOrder(1)
			DbSeek(xFilial("SA1")+SF1->F1_FORNECE+SF1->F1_LOJA)
			SYA->(DbSeek(xFilial("SYA")+SA1->A1_PAIS))
		Else
			DbSelectArea("SA2")
			aSA := GetArea()	
			DbSetOrder(1)
			DbSeek(xFilial("SA2")+SF1->F1_FORNECE+SF1->F1_LOJA)
			SYA->(DbSeek(xFilial("SYA")+SA2->A2_PAIS))
		EndIf
		cData := Dtos(SF1->F1_EMISSAO)
		cData := Left(cData,4) + "-" + Substr(cData,5,2)+ "-" + Right(cData,2)
		cData += "T" + SF1->F1_HORA + ":00"
		cCadOrig := cTerminador
		cCadOrig += Alltrim(SF1->F1_SERIE) + cSeparador				//serie  
		cCadOrig += Alltrim(SF1->F1_DOC) + cSeparador				//folio
		cCadOrig += Alltrim(cData) + cSeparador						//data
		If !Empty(SF1->F1_APROFOL)
			cCadOrig += Alltrim(SF1->F1_APROFOL) + cSeparador			//numero de aprobacion
		EndIf
		cCadOrig += Alltrim(SF1->F1_COND) + cSeparador				//forma de pago
		cCadOrig += Alltrim(SM0->M0_CGC) + cSeparador				//rfc emissor
		cCadOrig += Alltrim(SM0->M0_NOMECOM) + cSeparador			//nombre
		cCadOrig += Alltrim(SM0->M0_ENDCOB) + cSeparador			//endereco
		cCadOrig += AllTrim(SM0->M0_CIDCOB) + cSeparador			//cidade
		cCadOrig += AllTrim(SM0->M0_ESTCOB) + cSeparador			//estado
		cCadOrig += "Mexico" + cSeparador							//pais
		cCadOrig += AllTrim(SM0->M0_CEPCOB) + cSeparador			//cep
		//destinatario
		cCadOrig += If(AllTrim(SF1->F1_ESPECIE)=="NCC",AllTrim(SA1->A1_CGC),Alltrim(SA2->A2_CGC)) + cSeparador
		cCadOrig += If(AllTrim(SF1->F1_ESPECIE)=="NCC",AllTrim(SA1->A1_NOME),Alltrim(SA2->A2_NOME)) + cSeparador
		cCadOrig += If(AllTrim(SF1->F1_ESPECIE)=="NCC",AllTrim(SA1->A1_END),Alltrim(SA2->A2_END)) + cSeparador
		cCadOrig += If(AllTrim(SF1->F1_ESPECIE)=="NCC",AllTrim(SA1->A1_MUN),AllTrim(SA2->A2_MUN)) + cSeparador
		cCadOrig += If(AllTrim(SF1->F1_ESPECIE)=="NCC",AllTrim(SA1->A1_EST),AllTrim(SA2->A2_EST)) + cSeparador
		cCadOrig += Alltrim(SYA->YA_DESCR) + cSeparador
		cCadOrig += If(AllTrim(SF1->F1_ESPECIE)=="NCC",AllTrim(SA1->A1_CEP),AllTrim(SA2->A2_CEP)) + cSeparador
		//produtos
		DbSelectArea("SD1")
		aSD := GetArea()
		DbSetOrder(1)
		aQuery := {"SD1",""}
		cQuery := "D1_FILIAL = '" + xFilial("SD1") + "'"
		cQuery += " and D1_DOC = '" + SF1->F1_DOC + "'" 
		cQuery += " and D1_SERIE = '" + SF1->F1_SERIE + "'"  
		cQuery += " and D1_FORNECE = '" + SF1->F1_FORNECE + "'"
		cQuery += " and D1_LOJA = '" + SF1->F1_LOJA + "'"
		cFiltro := "D1_FILIAL == '" + xFilial("SD1") + "'"
		cFiltro += " .and. D1_DOC == '" + SF1->F1_DOC + "'"
		cFiltro += " .and. D1_SERIE == '" + SF1->F1_SERIE + "'"  
		cFiltro += " .and. D1_FORNECE == '" + SF1->F1_FORNECE + "'"
		cFiltro += " .and. D1_LOJA == '" + SF1->F1_LOJA + "'"
		FsQuery(aQuery,1,cQuery,cFiltro,"D1_ITEM")
		DbSelectArea("SD1")
		DbGoTop()
		While !Eof()
			SB1->(DbSeek(xFilial("SB1") + SD1->D1_COD))
			cCadOrig += Alltrim(Str(SD1->D1_QUANT)) + cSeparador		//quantidade
			cCadOrig += Alltrim(SD1->D1_UM) + cSeparador				//unidade
			cCadOrig += Alltrim(SB1->B1_DESC) + cSeparador				//descricao
			cCadOrig += Alltrim(Str(SD1->D1_VUNIT)) + cSeparador		//preco unitario
			cCadOrig += Alltrim(Str(SD1->D1_TOTAL)) + cSeparador		//valor total
			DbSkip()
		EndDo
		FsQuery(aQuery,2)
		DbSelectArea("SF1")
		//Retencoes
		cCadOrig += If(SF1->F1_VALIMP3<>0, "ISR" + cSeparador + Alltrim(Str(SF1->F1_VALIMP3)) + cSeparador,"")
		cCadOrig += If(SF1->F1_VALIMP2<>0, "IVA" + cSeparador + Alltrim(Str(SF1->F1_VALIMP2)) + cSeparador,"")
		//Impuestos
		//IVA + IVA INCLUIDO
		cCadOrig += If((SF1->F1_VALIMP1+SF1->F1_VALIMP5)<>0, "IVA" + cSeparador + Alltrim(Str(SF1->F1_VALIMP1+SF1->F1_VALIMP5)) + cSeparador,"")
		//
		cCadOrig += cSeparador
		cCadOrig := ENCODEUTF8(cCadOrig)
		//Sello
		cSelo := MD5(cCadOrig,1)
		cSelo := PrivSignRSA(&(SuperGetMv("MV_CFDDIRS",,""))+SuperGetMv("MV_CFDARQS",,""),cSelo,1)

		If cSelo <> Nil
			cSelo := ENCODE64(cSelo)
		EndIf
        RestArea(aSD)
		RestArea(aSA)
		RestArea(aSF)
	EndIf
	aRet := {cCadOrig,cSelo}
Else
	DbSelectArea("SF2")
	aSF:=GetArea()
	lOk := .T.
	DbSetOrder(1)
	If DbSeek(xFilial("SF2")+cFatura+cSerie+cCodigo+cLoja)  
		If cEspecie == "NDI"
			DbSelectArea("SA2")
			aSA := GetArea()	
			DbSetOrder(1)
			DbSeek(xFilial("SA2")+SF2->F2_CLIENTE+SF2->F2_LOJA)
			SYA->(DbSeek(xFilial("SYA")+SA2->A2_PAIS))
		Else
			DbSelectArea("SA1")
			aSA := GetArea()
			DbSetOrder(1)
			DbSeek(xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA)
			SYA->(DbSeek(xFilial("SYA")+SA1->A1_PAIS))
		EndIf
		cData := Dtos(SF2->F2_EMISSAO)
		cData := Left(cData,4) + "-" + Substr(cData,5,2)+ "-" + Right(cData,2)
		cData += "T" + SF2->F2_HORA + ":00"
		cCadOrig := cTerminador
		cCadOrig += Alltrim(SF2->F2_SERIE) + cSeparador				//serie  
		cCadOrig += Alltrim(SF2->F2_DOC) + cSeparador				//folio
		cCadOrig += Alltrim(cData) + cSeparador						//data
		If !Empty(SF2->F2_APROFOL)
			cCadOrig += Alltrim(SF2->F2_APROFOL) + cSeparador			//numero de aprobacion
		EndIf
		cCadOrig += Alltrim(SF2->F2_COND) + cSeparador				//forma de pago
		cCadOrig += Alltrim(SM0->M0_CGC) + cSeparador				//rfc emissor
		cCadOrig += Alltrim(SM0->M0_NOMECOM) + cSeparador			//nombre
		cCadOrig += Alltrim(SM0->M0_ENDCOB) + cSeparador			//endereco
		cCadOrig += AllTrim(SM0->M0_CIDCOB) + cSeparador			//cidade
		cCadOrig += AllTrim(SM0->M0_ESTCOB) + cSeparador			//estado
		cCadOrig += "Mexico" + cSeparador							//pais
		cCadOrig += AllTrim(SM0->M0_CEPCOB) + cSeparador			//cep
		//dados do destinatario
		cCadOrig += If(AllTrim(SF2->F2_ESPECIE)=="NDI",AllTrim(SA2->A2_CGC),Alltrim(SA1->A1_CGC)) + cSeparador
		cCadOrig += If(AllTrim(SF2->F2_ESPECIE)=="NDI",AllTrim(SA2->A2_NOME),Alltrim(SA1->A1_NOME)) + cSeparador
		cCadOrig += If(AllTrim(SF2->F2_ESPECIE)=="NDI",AllTrim(SA2->A2_END),Alltrim(SA1->A1_END)) + cSeparador
		cCadOrig += If(AllTrim(SF2->F2_ESPECIE)=="NDI",AllTrim(SA2->A2_MUN),AllTrim(SA1->A1_MUN)) + cSeparador
		cCadOrig += If(AllTrim(SF2->F2_ESPECIE)=="NDI",AllTrim(SA2->A2_EST),AllTrim(SA1->A1_EST)) + cSeparador
		cCadOrig += Alltrim(SYA->YA_DESCR) + cSeparador
		cCadOrig += If(AllTrim(SF2->F2_ESPECIE)=="NDI",AllTrim(SA2->A2_CEP),AllTrim(SA1->A1_CEP)) + cSeparador
		//produtos
		DbSelectArea("SD2")
		aSD := GetArea()
		DbSetOrder(3)
		aQuery := {"SD2",""}
		cQuery := "D2_FILIAL = '" + xFilial("SD2") + "'"
		cQuery += " and D2_DOC = '" + SF2->F2_DOC + "'"
		cQuery += " and D2_SERIE = '" + SF2->F2_SERIE + "'"   
		cQuery += " and D2_CLIENTE = '" + SF2->F2_CLIENTE + "'"
		cQuery += " and D2_LOJA = '" + SF2->F2_LOJA + "'"
		cFiltro := "D2_FILIAL == '" + xFilial("SD2") + "'"
		cFiltro += " .and. D2_DOC == '" + SF2->F2_DOC + "'"
		cFiltro += " .and. D2_SERIE == '" + SF2->F2_SERIE + "'"   
		cFiltro += " .and. D2_CLIENTE == '" + SF2->F2_CLIENTE + "'"
		cFiltro += " .and. D2_LOJA == '" + SF2->F2_LOJA + "'"
		FsQuery(aQuery,1,cQuery,cFiltro,"D2_ITEM")
		DbSelectArea("SD2")
		DbGoTop()
		While !Eof()
			SB1->(DbSeek(xFilial("SB1") + SD2->D2_COD))
			cCadOrig += Alltrim(Str(SD2->D2_QUANT)) + cSeparador		//quantidade
			cCadOrig += Alltrim(SD2->D2_UM) + cSeparador				//unidade
			cCadOrig += Alltrim(SB1->B1_DESC) + cSeparador				//descricao
			cCadOrig += Alltrim(Str(SD2->D2_PRCVEN)) + cSeparador		//preco unitario
			cCadOrig += Alltrim(Str(SD2->D2_TOTAL)) + cSeparador		//valor total
			DbSkip()
		EndDo
		FsQuery(aQuery,2)
		DbSelectArea("SF2")
		//Retencoes
		cCadOrig += If(SF2->F2_VALIMP3<>0, "ISR" + cSeparador + Alltrim(Str(SF2->F2_VALIMP3)) + cSeparador,"")
		cCadOrig += If(SF2->F2_VALIMP2<>0, "IVA" + cSeparador + Alltrim(Str(SF2->F2_VALIMP2)) + cSeparador,"")
		//Impuestos
		//IVA + IVA INCLUIDO
		cCadOrig += If((SF2->F2_VALIMP1+SF2->F2_VALIMP5)<>0, "IVA" + cSeparador + Alltrim(Str(SF2->F2_VALIMP1+SF2->F2_VALIMP5)) + cSeparador,"")
		//
		cCadOrig += cSeparador
		cCadOrig := ENCODEUTF8(cCadOrig)
		//Sello
		cSelo := MD5(cCadOrig,1)
		cSelo := PrivSignRSA(&(SuperGetMv("MV_CFDDIRS",,""))+SuperGetMv("MV_CFDARQS",,""),cSelo,1)

		If cSelo <> Nil
			cSelo := ENCODE64(cSelo)
		EndIf
        RestArea(aSD)
		RestArea(aSA)
		RestArea(aSF)
	EndIf
	aRet := {cCadOrig,cSelo}
EndIf
Return(aRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CFDGERTXT ºAutor  ³Marcello            ºFecha ³ 04/01/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Seleciona os dados para a geracao do arquivo txt com as     º±±
±±º          ³informacoes mensais.                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CFD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CFDGerTxt()
Local aArea := GetArea()
Local aCampos := {}
Local aOrdem := {}
Local aSF3 := {}
Local aSF1 := {}
Local aSF2 := {}
Local aSA1 := {}
Local aSA2 := {}
Local cFilSF3 := ""
Local cRFC := ""
Local cData := ""
Local cClie := ""
Local cLoja := ""
Local cNFiscal := ""
Local cSerie := ""
Local cEfecto:= ""
Local cAux := ""
Local cHora := ""
Local cAproFol := ""
Local nTotal := 0
Local nImp := 0
Local nBase := 0
Local dCanc := Ctod("//")
Local dEmis := Ctod("//")
Local lF3FImp := If(cPaisLoc $ "ANG|EQU|HAI|MEX|PTG",.T.,.F.)
Local lF3Hora := If(cPaisLoc $ "ANG|EQU|HAI|MEX|PTG",.T.,.F.)

Private oTmpCFD

aCampos :=	{	{"RFC"			,"C",013,0},;
				{"SERIE"		,"C",003,0},; 
				{"FOLIO"		,"C",020,0},;
				{"APROBACION"	,"C",014,0},;
				{"ANO"			,"C",004,0},;
				{"FECHA"		,"C",019,0},;
				{"DTCHV"		,"C",019,0},;
				{"MONTO"		,"C",013,0},;
				{"IMPUESTO"		,"C",013,0},;
				{"ESTADO"		,"C",001,0},;
				{"EFECTO"		,"C",001,0},;
				{"PEDIMENTO"	,"C",300,0},;
				{"FECHPEDIM"    ,"C",350,0},;
				{"ADUANA"		,"C",600,0};
			}

aOrdem	:=	{"DTCHV"}
oTmpCFD := FWTemporaryTable():New("R00")
oTmpCFD:SetFields( aCampos )
oTmpCFD:AddIndex("I01", aOrdem)
oTmpCFD:Create()

/**/
DbSelectArea("SA1")
aSA1 := GetArea()
DbSelectArea("SA2")
aSA2 := GetArea()
DbSetOrder(1)
DbSelectArea("SF1")
aSF1 := getArea()
DbSetOrder(1)
DbSelectArea("SF2")
aSF2:= getArea()
DbSetOrder(1)
DbSelectArea("SF3")
aSF3 := GetArea()
cFilSF3 := xFilial("SF3")
DbSetOrder(1)
ProcRegua(RecCount())
DbSeek(cFilSF3+Dtos(dDmaInc),.T.)
While !SF3->(Eof()) .And. (SF3->F3_FILIAL == cFilSF3) .And. (SF3->F3_EMISSAO <= dDmaFin) 
	If (SF3->F3_FORMUL == "S" .And. If(lF3FImp,SF3->F3_FIMP == 'S',.T.) .And. ((cPaisLoc != "MEX" .And. !Empty(SF3->F3_APROFOL)) .Or. cPaisLoc == "MEX"))
		cAproFol := SF3->F3_APROFOL
		dEmis := SF3->F3_EMISSAO
		dCanc := SF3->F3_DTCANC
		If SF3->F3_TIPOMOV == "V"
			SA1->(DbSeek(xFilial("SA1") + SF3->F3_CLIEFOR + SF3->F3_LOJA))
			cRFC := SA1->A1_CGC
		Else
			SA2->(DbSeek(xFilial("SA2") + SF3->F3_CLIEFOR + SF3->F3_LOJA))
			cRFC := SA2->A2_CGC
		EndIf
		cAux	:= Dtos(SF3->F3_EMISSAO)
		cHora	:= If(lF3HOra,SF3->F3_HORA,"00:00:00")
		cClie	:= SF3->F3_CLIEFOR
		cLoja	:= SF3->F3_LOJA
		cNFiscal:= SF3->F3_NFISCAL
		cSerie	:= SF3->F3_SERIE 
		If AllTrim(SF3->F3_ESPECIE) == "NCC"
			cEfecto := "E"
		Else
			cEfecto := Iif(SF3->F3_TIPOMOV=="V","I","E")//I-Ingreso|E-Egreso|T-Translado(nao se aplica no sistema)
		EndIf
		nTotal	:= 0
		nImp	:= 0
		nBase	:= 0
		While SF3->F3_FILIAL == cFilSF3 .And. SF3->F3_CLIEFOR == cClie .And. SF3->F3_LOJA == cLoja .And. SF3->F3_NFISCAL == cNFiscal .And. SF3->F3_SERIE == cSerie
			IncProc(STR0054)			//"Selecionando Registros"
			nTotal	+= SF3->F3_VALCONT
			nImp	+= SF3->F3_VALIMP1 + SF3->F3_VALIMP5		// IVA + IVA INCLUIDO
			nBase	+= SF3->F3_BASIMP1 + SF3->F3_BASIMP5		// IVA + IVA INCLUIDO
			DbSkip()
		EndDo
		cData := Right(cAux,2) + "/" + Substr(cAux,5,2) + "/" + Left(cAux,4)
		cData += " " + cHora
		DbSelectArea("R00")
		RecLock("R00",.T.)
		REPLACE RFC			WITH cRFC
		REPLACE SERIE		WITH cSerie 
		REPLACE FOLIO		WITH cNFiscal
		REPLACE APROBACION	WITH cAproFol
		REPLACE ANO			WITH AllTrim(Str(Year(dEmis)))
		REPLACE FECHA		WITH cData
		REPLACE DTCHV		WITH cAux + cHora
		REPLACE MONTO		WITH Str(nTotal,13,2)
		If nBase <>0 
			REPLACE IMPUESTO WITH Str(nImp,13,2)
		EndIf
		REPLACE ESTADO		WITH If(Empty(dCanc),"1","0")
		REPLACE EFECTO      WITH cEfecto
		REPLACE PEDIMENTO	WITH ""
		REPLACE FECHPEDIM   WITH ""
		REPLACE ADUANA      WITH ""
		
		MsUnLock()
		DbCommit()
		DbSelectArea("SF3")
	Else
		SF3->(DbSkip())
	EndIf
EndDo

RestArea(aSA1)
RestArea(aSA2)
RestArea(aSF1)
RestArea(aSF2)
RestArea(aSF3)
RestArea(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CFDENCTXT ºAutor  ³Marcello            ºFecha ³ 04/01/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Apaga o arquivo de trabalho criado pela LOCXGERCFD.         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CFD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CFDEncTxt()

If oTmpCFD <> Nil
	oTmpCFD:Delete()
	oTmpCFD := Nil
Endif

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CFDMULTDOCºAutor  ³Marcello            ºFecha ³ 06/01/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina para geracao de cfds.                                º±±
±±º          ³CFD - Mexico                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CFD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CFDMultDoc( cAlias, nReg, nOpc )

	Local aArea		:= GetArea()
	Local aSF3		:= {}
	Local cPerg		:= "CFDXML"
	Local lGerarCFD	:= .F.
	Local aGerarCFD	:= {}
	Local cMsgCFD	:= ""
	Local nX		:= 0
	
	Private oProces
	
	aGerarCFD := CFDVerific()
	If aGerarCFD[1] > "0" .And. Empty(aGerarCFD[2])
		lGerarCFD := .T.
	Else
	    If !Empty(aGerarCFD[2])
	    	lGerarCFD := .F.
			cMsgCFD := ""
			For nX := 1 To Len(aGerarCFD[2])
				cMsgCFD += aGerarCFD[2][nX][2] + CRLF
			Next nX
			MsgAlert(cMsgCFD,STR0051)
		EndIf
	EndIf
	
	If lGerarCFD
		
		If Pergunte(cPerg,.T.)
			DbSelectArea("SF3")
			aSF3 := GetArea()
			DbSetOrder(1)
			oProces := MsNewProcess():New({|lEnd| CFDmDoc(@lEnd)},STR0055,,.T.)
			oProces:Activate()
			DbSelectArea("SF3")
			RestArea(aSF3)
		EndIf
	EndIf
	RestArea(aArea)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CFDMDOC   ºAutor  ³Marcello            ºFecha ³ 06/01/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina para geracao dos cfds.                               º±±
±±º          ³CFD - Mexico                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CFD - CFDMultXML                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CFDmDoc( lEnd )
Local cFilSF3  := xFilial("SF3")
Local cAliasSF3:= ""
Local cFiltro := ""
Local dDEmis  := ""
Local cfatura := ""
Local cSerie  := ""
Local cCodigo := ""
Local cLoja   := ""
Local cArqTrab := ""
Local nIndex   := 0
Local lUsaNewKey  := TamSX3("F3_SERIE")[1] == 14 

cArqTrab := ""
nIndex := 0
#IFDEF TOP
	cFiltro := "select F3_FILIAL,F3_ESPECIE,F3_CLIEFOR,F3_LOJA,F3_NFISCAL,F3_SERIE,F3_ENTRADA,F3_EMISSAO,R_E_C_N_O_ RECNO"
	cFiltro += " from " + RetSqlName("SF3") 
	cFiltro += " where F3_FILIAL = '" + xFilial("SF3") + "'"
	cFiltro += " and F3_EMISSAO >= '" + Dtos(MV_PAR01) + "'"
	cFiltro += " and F3_EMISSAO <= '" + Dtos(MV_PAR02) + "'"
	If !lUsaNewKey //Projeto Chave Unica - TIago Silva
		cFiltro += " and F3_SERIE >= '" + MV_PAR03 + "'" 
		cFiltro += " and F3_SERIE <= '" + MV_PAR05 + "'"
	Else
		cFiltro += " and F3_SDOC >= '" + MV_PAR03 + "'" 
		cFiltro += " and F3_SDOC <= '" + MV_PAR05 + "'"	
	Endif
	cFiltro += " and F3_NFISCAL >= '" + MV_PAR04 + "'"
	cFiltro += " and F3_NFISCAL <= '" + MV_PAR06 + "'"
	If (cPaisLoc != "MEX")
		cFiltro += " and F3_APROFOL <> ''"
	EndIf
	cFiltro += " and F3_DTCANC = ''"
	cFiltro += " and D_E_L_E_T_ =''"
	cAliasSF3 := GetNextAlias()
	cFiltro := ChangeQuery(cFiltro)
	dbUseArea( .T., "TOPCONN", TCGenQry(,,cFiltro), cAliasSF3, .F., .T.)
	TCSetField(cAliasSF3,"F3_EMISSAO","D",8,0)
	TCSetField(cAliasSF3,"F3_ENTRADA","D",8,0)
	TCSetField(cAliasSF3,"RECNO","N",10,0)
#ELSE
	//filtro para dbf
	cFiltro := "F3_FILIAL = '" + xFilial("SF3") + "'"
	cFiltro += " .and. Dtos(F3_EMISSAO) >= '" + Dtos(MV_PAR01) + "'"
	cFiltro += " .and. Dtos(F3_EMISSAO) <= '" + Dtos(MV_PAR02) + "'"
	If !lUsaNewKey
		cFiltro += " .and. F3_SERIE >= '" + MV_PAR03 + "'" 
		cFiltro += " .and. F3_SERIE <= '" + MV_PAR05 + "'"
	Else
		cFiltro += " .and. F3_SDOC >= '" + MV_PAR03 + "'" 
		cFiltro += " .and. F3_SDOC <= '" + MV_PAR05 + "'"	
	Endif
	cFiltro += " .and. F3_NFISCAL >= '" + MV_PAR04 + "'"
	cFiltro += " .and. F3_NFISCAL <= '" + MV_PAR06 + "'"
	If (cPaisLoc != "MEX")
		cFiltro += " .and. !Empty(F3_APROFOL)"
	EndIf
	cFiltro += " .and. Empty(F3_DTCANC)"
	cAliasSF3 := "SF3"
	cArqTrab := CriaTrab(Nil,.F.)
	IndRegua("SF3",cArqTrab,SF3->(IndexKey()),,cFiltro,OemToAnsi(STR0012+" "+STR0003))  //"Selecionando faturas"
	nIndex := RetIndex("SF3")
	SF3->(dbSetIndex(cArqTrab + OrdBagExt()))
	DbSetOrder(nIndex+1)
#ENDIF
DbSelectArea(cAliasSF3)
(cAliasSF3)->(DbGoTop())
oProces:SetRegua1((cAliasSF3)->(Reccount()))
While (cAliasSF3)->(!Eof()) .And. !lEnd
	#IFDEF TOP
		SF3->(DbGoTo((cAliasSF3)->RECNO))
	#ENDIF
	oProces:SetRegua2(3)
	CFDGerXml((cAliasSF3)->F3_ESPECIE,(cAliasSF3)->F3_CLIEFOR,(cAliasSF3)->F3_LOJA,(cAliasSF3)->F3_NFISCAL,(cAliasSF3)->F3_SERIE,.F.,.F.,.T.) 
	oProces:IncRegua2()
//	CFDGerSel(SF3->F3_ESPECIE,SF3->F3_CLIEFOR,SF3->F3_LOJA,SF3->F3_NFISCAL,SF3->F3_SERIE)
	dDEmis  := (cAliasSF3)->F3_ENTRADA
	cFatura := (cAliasSF3)->F3_NFISCAL
	cSerie  := (cAliasSF3)->F3_SERIE
	cCodigo := (cAliasSF3)->F3_CLIEFOR
	cLoja   := (cAliasSF3)->F3_LOJA
	oProces:IncRegua2()
	DbSelectArea(cAliasSF3)
	While	(cAliasSF3)->F3_FILIAL == cFilSF3 .And. (cAliasSF3)->F3_ENTRADA == dDEmis .And. ;
			(cAliasSF3)->F3_NFISCAL == cFatura .And. (cAliasSF3)->F3_SERIE == cSerie .And. ;
			(cAliasSF3)->F3_CLIEFOR == cCodigo .And. (cAliasSF3)->F3_LOJA == cLoja
		(cAliasSF3)->(DbSkip())
	End
	oProces:IncRegua2()
	oProces:IncRegua1(STR0057 + substr((cAliasSF3)->F3_SERIE,1,3) + " / " + (cAliasSF3)->F3_NFISCAL)   //"Comprovante " 
EndDo
#IFDEF TOP
	DbSelectArea(cAliasSF3)
	DbCloseArea()
#ELSE
	RetIndex("SF3")
	cArqTrab += OrdBagExt()
	If File(cArqTrab)
	   Ferase(cArqTrab)
	EndIf
#ENDIF
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³NivelUser ³ Autor ³Cristiano Denardi      ³ Data ³13.07.04  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Testa nivel do usuario para nao edicao de certos campos     ³±±
±±³          ³na GetDados.                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: String contendo os niveis que serao bloqueados       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Retorna se Usuario tera acesso ao campo.             ³±±
±±³          ³       .T. Usuario eh diferente ao nivel pre-definido.      ³±±
±±³          ³       .F. Usuario eh igual ao nivel pre-definido.          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NivelUser( cNiveis )
Local   lRet 	:= .T.

DEFAULT cNiveis	:= ""

If ( cPaisLoc != "BRA" )
	If ( Str(cNivel,1) $ cNiveis )
		lRet := .F.
	EndIf
EndIf

Return(lRet)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MTF42LEC  ³ Autor ³Liber de Esteban       ³ Data ³18.14.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Prepara dados para geração do arquivo F42LEC               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cAlias -> Alias do TRB que recebera as informacoes          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGAFIS - Mexico                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function MTF42LEC()

//Variaveis para montagem do wizard
Local	aTxtApre	:=	{}
Local	aPaineis	:=	{}
Local	aItens		:=	{}
Local	aWizard		:=	{}
Local	cTitObj		:=	""

//Variaveis para montagem das tabelas temporarias
Local	aCampos0	:= {}
Local	aCampos1	:= {}

//Variaveis para restaurar tabelas
Local aAreaSA1 := SA1->(GetArea())
Local aAreaSA2 := SA2->(GetArea())
Local aAreaSF3 := SF3->(GetArea())

Local nQTCLIEX	:= 0
Local nTOPERCEX	:= 0
Local nQTDCLI	:= 0
Local nTOPSAI	:= 0
Local nTOPERCE	:= 0
Local nQTFOREX	:= 0
Local nTOPERFEX	:= 0
Local nQTDFOR	:= 0
Local nTOPENT	:= 0
Local nTOPERFE	:= 0
Local nX		:= 0
Local nCont		:= 0
Local nPos		:= 0
Local nPosEst	:= 0
Local cAliasSF3	:= "SF3"
Local cTipMov	:= " "
Local cAnexos 	:= "0"
Local lQuery	:= .F.
Local lCont		:= .T.
Local lDecCli	:= .F.
Local lDecFor	:= .F.
Local aTotCli	:= {}
Local aTotFor	:= {}
Local aEstado	:= {}

Private oTmpTabR00
Private oTmpTabR01
Private oTmpTabR02

aAdd (aTxtApre, STR0062) //"Preenchimendo da declaração informativa de clientes e foenecedores"
aAdd (aTxtApre, "")	
aAdd (aTxtApre, STR0063) //"Preencha corretamente as informacoes solicitadas."
aAdd (aTxtApre, STR0064) //"Informacoes necessarias para a geração da declaração informativa de clientes e foenecedores"

aAdd (aPaineis, {})
nPos := Len (aPaineis)
aAdd (aPaineis[nPos], STR0063) //"Preencha corretamente as informacoes solicitadas"
aAdd (aPaineis[nPos], STR0065) //"Parametros para Geração"
aAdd (aPaineis[nPos], {})

cTitObj	:=	"RFC:"
aAdd (aPaineis[nPos][3], {1, cTitObj,,,,,,})
aAdd (aPaineis[nPos][3], {2,,,1,,,,13})

aAdd (aPaineis[nPos][3], {0,"",,,,,,})
aAdd (aPaineis[nPos][3], {0,"",,,,,,})

cTitObj	:=	STR0066 //"Tipo de Declaração:"
aAdd (aPaineis[nPos][3], {1, cTitObj,,,,,,})
aItens	:=	{}
aAdd (aItens, STR0067) //"0 - Normal"
aAdd (aItens, STR0068) //"1 - Complementar"
aAdd (aPaineis[nPos][3], {3,,,,,aItens,,})

aAdd (aPaineis[nPos][3], {0,"",,,,,,})
aAdd (aPaineis[nPos][3], {0,"",,,,,,})

cTitObj	:=	STR0069 //"Complementar Nº: "
aAdd (aPaineis[nPos][3], {1, cTitObj,,,,,,})
aAdd (aPaineis[nPos][3], {2,,,1,,,,1})

aAdd (aPaineis[nPos][3], {0,"",,,,,,})
aAdd (aPaineis[nPos][3], {0,"",,,,,,})

cTitObj	:=	STR0070 //"Anexos a Declarar"
aAdd (aPaineis[nPos][3], {1, cTitObj,,,,,,})
aItens	:=	{}
aAdd (aItens, STR0071) //"0 - Clientes"
aAdd (aItens, STR0072) //"1 - Fornecedores"
aAdd (aItens, STR0073) //"2 - Ambos"
aAdd (aPaineis[nPos][3], {3,,,,,aItens,,})

aAdd (aPaineis[nPos][3], {0,"",,,,,,})
aAdd (aPaineis[nPos][3], {0,"",,,,,,})

cTitObj	:=	STR0074 //"Declarar com saldo menor que $50,000.00"
aAdd (aPaineis[nPos][3], {1, cTitObj,,,,,,})
aItens	:=	{}
aAdd (aItens, STR0075) //"Sim"
aAdd (aItens, STR0076) //"Não"
aAdd (aPaineis[nPos][3], {3,,,,,aItens,,})

lCont := xMagWizard (aTxtApre, aPaineis, "F42LEC")
If !lCont
	lAbtMT950 := .T.
EndIf
xMagLeWiz ("F42LEC", aWizard, .T.)

//Tabela de estados segundo DIMM - Mexico
aEstado := {	{"AGS" ,  "AGUASCALIENTES"       ,	"01"},;
				{"BCN" ,  "BAJA CALIFORNIA NORTE",	"02"},;
				{"BCS" ,  "BAJA CALIFORNIA SUR"  ,	"03"},;
				{"CAMP",  "CAMPECHE"             ,	"04"},;
				{"COAH",  "COAHUILA"             ,	"05"},;
				{"COL" ,  "COLIMA"               ,	"06"},;
				{"CHIS",  "CHIAPAS"              ,	"07"},;
				{"CHIH",  "CHIHUAHUA"            ,	"08"},;
				{"DF"  ,  "DISTRITO FEDERAL"     ,	"09"},;
				{"DUR" ,  "DURANGO"              ,	"10"},;
				{"GTO" ,  "GUANAJUATO"           ,	"11"},;
				{"GRO" ,  "GUERRERO"             ,	"12"},;
				{"HGO" ,  "HIDALGO"              ,	"13"},;
				{"JAL" ,  "JALISCO"              ,	"14"},;
				{"MEX" ,  "MEXICO"               ,	"15"},;
				{"MICH",  "MICHOACAN"            ,	"16"},;
				{"MOR" ,  "MORELOS"              ,	"17"},;
				{"NAY" ,  "NAYARIT"              ,	"18"},;
				{"NL"  ,  "NUEVO LEON"           ,	"19"},;
				{"OAX" ,  "OAXACA"               ,	"20"},;
				{"PUE" ,  "PUEBLA"               ,	"21"},;
				{"QRO" ,  "QUERETARO"            ,	"22"},;
				{"QR"  ,  "QUINTA ROO"           ,	"23"},;
				{"SLP" ,  "SAN LUIS POTOSI"      ,	"24"},;
				{"SIN" ,  "SINALOA"              ,	"25"},;
				{"SON" ,  "SONORA"               ,	"26"},;
				{"TAB" ,  "TABASCO"              ,	"27"},;
				{"TAMP",  "TAMAULIPAS"           ,	"28"},;
				{"TLAX",  "TLAXCALA"             ,	"29"},;
				{"VER" ,  "VERACRUZ"             ,	"30"},;
				{"YUC" ,  "YUCATAN"              ,	"31"},;
				{"ZAC" ,  "ZACATECAS"            ,	"32"},;
				{"EX"  ,  "EXTRANJEROS"          ,	"33"}	}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta Tabelas temporarias³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCampos0 :=	{	{"RFC"			,"C",013,0},;
				{"ANO"			,"C",004,0},;
				{"MESINI"		,"C",002,0},;
				{"MESFIM"		,"C",002,0},;
				{"NOME"			,"C",060,0},;
				{"TIPO"			,"C",001,0},;
				{"NCOMP"		,"C",001,0},;
				{"ANEXOS"		,"C",001,0},;
				{"QTDCLI"		,"N",013,0},;
				{"TOPSAI"		,"N",013,2},;
				{"TOPERCE"		,"N",013,2},;
				{"QTCLIEX"		,"N",013,0},;
				{"TOPERCEX"		,"N",013,2},;
				{"QTDFOR"		,"N",013,0},;
				{"TOPENT"		,"N",013,2},;
				{"TOPERFE"		,"N",013,2},;
				{"QTFOREX"		,"N",013,0},;
				{"TOPERFEX"		,"N",013,2}	}
				
aOrdem	:=	{"RFC"}
oTmpTabR00 := FWTemporaryTable():New("R00")
oTmpTabR00:SetFields( aCampos0 )
oTmpTabR00:AddIndex("I01", aOrdem)
oTmpTabR00:Create()

aCampos1 :=	{	{"RFC"			,"C",013,0},;
				{"RSOCIAL"		,"C",060,0},;
				{"APLPA"		,"C",020,0},;
				{"APLMA"		,"C",020,0},;
				{"NOME"			,"C",020,0},;
				{"CURP"			,"C",018,0},;
				{"MONTAN"		,"N",013,2},;
				{"CLAVE"		,"C",001,0},;
				{"CALLE"		,"C",030,0},;
				{"NUMEXT"		,"C",015,0},;
				{"NUMINT"		,"C",010,0},;
				{"COLONIA"		,"C",050,0},;
				{"MUN"			,"C",050,0},;
				{"CPOST"		,"C",005,0},;
				{"LOCALI"		,"C",040,0},;
				{"EST"			,"C",002,0},;
				{"TEL"			,"C",012,0}	}
				
aOrdem	:=	{"RFC"}
oTmpTabR01 := FWTemporaryTable():New("R01")
oTmpTabR01:SetFields( aCampos1 )
oTmpTabR01:AddIndex("I01", aOrdem)
oTmpTabR01:Create()

aOrdem	:=	{"RFC"}
oTmpTabR02 := FWTemporaryTable():New("R02")
oTmpTabR02:SetFields( aCampos1 )
oTmpTabR02:AddIndex("I01", aOrdem)
oTmpTabR02:Create()

If lCont

	If Substr(aWizard[1][4],1,1) == "2"
		cTipMov		:= " "
	ElseIf Substr(aWizard[1][4],1,1) == "1"
		cTipMov		:= "V"
	ElseIf Substr(aWizard[1][4],1,1) == "0"
		cTipMov		:= "C"
	EndIf
	
	#IFDEF TOP
		If TcSrvType()<>"AS/400"
			
			lQuery		:= .T.
			cAliasSF3	:= GetNextAlias()
		
			BeginSql Alias cAliasSF3
		    
				COLUMN F3_EMISSAO AS DATE 
			 	COLUMN F3_DTCANC AS DATE 
				SELECT F3_TIPOMOV, F3_CLIEFOR, F3_LOJA, SUM(F3_VALCONT) F3_VALCONT 
				FROM %table:SF3% SF3 
				WHERE SF3.F3_FILIAL = %xFilial:SF3% AND 
				SF3.F3_EMISSAO >= %Exp:mv_par01% AND 
				SF3.F3_EMISSAO <= %Exp:mv_par02% AND 
				SF3.F3_DTCANC = %Exp:Space(8)% AND SF3.F3_TIPOMOV <> %Exp:cTipMov% AND 
				SF3.F3_TIPO IN ('N','L') AND SF3.%NotDel% 
				GROUP BY SF3.F3_TIPOMOV, SF3.F3_CLIEFOR, SF3.F3_LOJA 
				ORDER BY SF3.F3_TIPOMOV, SF3.F3_CLIEFOR, SF3.F3_LOJA 
			
			EndSql
			
			DbSelectArea(cAliasSF3)	
			
		Else
	#ENDIF
	
			cIndexSF3  	:= CriaTrab(nil,.f.)
			
			cFilter 	:= 'SF3->F3_FILIAL == "' + xFilial("SF3") + '" .And. '
			cFilter 	+= 'DTOS(SF3->F3_EMISSAO) >= "' + DTOS(mv_par01) + '" .AND. '
			cFilter 	+= 'DTOS(SF3->F3_EMISSAO) <= "' + DTOS(mv_par02) + '" .AND. '
			cFilter 	+= 'Empty(SF3->F3_DTCANC) .AND. SF3->F3_TIPOMOV != "' + cTipMov + '" .AND. '
			cFilter 	+= 'SF3->F3_TIPO $ "N/L"'
			
			IndRegua("SF3",cIndexSF3,"F3_FILIAL+F3_TIPOMOV+F3_CLIEFOR+F3_LOJA",,cFilter,STR0077) //"Selecionando Registros..."
			DbSetIndex(cIndexSF3+OrdBagExt())
			(cAliasSF3)->(DbGoTop())      
	
	#IFDEF TOP
		EndIf
	#ENDIF
	
	While !(cAliasSF3)->(Eof()) .And. lCont
			If (cAliasSF3)->F3_TIPOMOV == "V" .AND. Substr(aWizard[1][4],1,1) $ "0/2"
				
				If (nPos :=  AScan(aTotCli,{|x| x[1] == (cAliasSF3)->F3_CLIEFOR .And. x[2]==(cAliasSF3)->F3_LOJA})) > 0
					aTotCli[nPos][3] += (cAliasSF3)->F3_VALCONT
				Else
					AADD(aTotCli,{(cAliasSF3)->F3_CLIEFOR,(cAliasSF3)->F3_LOJA,(cAliasSF3)->F3_VALCONT})
				EndIf
			
			ElseIf (cAliasSF3)->F3_TIPOMOV == "C" .AND. Substr(aWizard[1][4],1,1) $ "1/2"
			
				If (nPos :=  AScan(aTotFor,{|x| x[1] == (cAliasSF3)->F3_CLIEFOR .And. x[2]==(cAliasSF3)->F3_LOJA})) > 0
					aTotFor[nPos][3] += (cAliasSF3)->F3_VALCONT
				Else
					AADD(aTotFor,{(cAliasSF3)->F3_CLIEFOR,(cAliasSF3)->F3_LOJA,(cAliasSF3)->F3_VALCONT})
				EndIf
				
			EndIf
		
		(cAliasSF3)->(DbSkip())
		
	EndDo
	
	If (len(aTotCli) > 0 .Or. len(aTotFor) > 0) .And. lCont
	
		DbSelectArea("SA1")
		DbSetOrder(1)
		DbSelectArea("SA2")
		DbSetOrder(1)
	
		For nX := 1 to len(aTotCli)
			If (Substr(aWizard[1][5],1,1) == "S") .or. (Substr(aWizard[1][5],1,1) == "N" .AND. aTotCli[nX][3] >= 50000)
				If SA1->(DbSeek(xFilial("SA1") + aTotCli[nX][1] + aTotCli[nX][2]))
					
					lDecCli := .T.
					RecLock("R01",.T.)
					R01->RFC 		:= SA1->A1_CGC
					R01->RSOCIAL	:= Iif(SA1->A1_PESSOA == "F","",SA1->A1_NOME)
					R01->APLPA		:= Iif(SA1->A1_PESSOA == "F",SA1->A1_NOME,"")
					R01->APLMA		:= Iif(SA1->A1_PESSOA == "F",SA1->A1_NOME,"")
					R01->NOME		:= Iif(SA1->A1_PESSOA == "F",SA1->A1_NOME,"")
					R01->CURP		:= SA1->A1_CURP
					R01->MONTAN		:= aTotCli[nX][3]
					R01->CLAVE		:= "0"
					R01->CALLE		:= Substr (SA1->A1_END, 1, At(",", SA1->A1_END)-1)
					R01->NUMEXT		:= Substr (SA1->A1_END, At(",", SA1->A1_END)+1, Len (AllTrim (SA1->A1_END)))
					R01->NUMINT		:= ""
					R01->COLONIA	:= SA1->A1_BAIRRO
					R01->MUN		:= SA1->A1_MUN
					R01->CPOST		:= SA1->A1_CXPOSTA
					If (nPosEst := AScan(aEstado,{|x| x[1] == Alltrim(SA1->A1_EST) })) > 0
						R01->LOCALI	:= aEstado[nPosEst][2]
						R01->EST	:= aEstado[nPosEst][3]
					EndIf
					R01->TEL		:= SA1->A1_TEL
					MsUnLock()
					
					If SA1->A1_EST == "EX"
						nQTCLIEX	+= 1
						nTOPERCEX	+= aTotCli[nX][3]
					Else
						nQTDCLI		+= 1
						nTOPSAI		+= aTotCli[nX][3]
						nTOPERCE	+= aTotCli[nX][3]
					EndIf
					
				EndIf
	        EndIf
		Next nX
		
		For nX := 1 to len(aTotFor)
			If (Substr(aWizard[1][5],1,1) == "S") .or. (Substr(aWizard[1][5],1,1) == "N" .AND. aTotFor[nX][3] > 50000)
				If SA2->(DbSeek(xFilial("SA2") + aTotFor[nX][1] + aTotFor[nX][2]))
					
					lDecFor := .T.
					RecLock("R02",.T.)
					R02->RFC 		:= SA2->A2_CGC
					R02->RSOCIAL	:= Iif(SA2->A2_TIPO == "F","",SA2->A2_NOME)
					R02->APLPA		:= Iif(SA2->A2_TIPO == "F",SA2->A2_NOME,"")
					R02->APLMA		:= Iif(SA2->A2_TIPO == "F",SA2->A2_NOME,"")
					R02->NOME		:= Iif(SA2->A2_TIPO == "F",SA2->A2_NOME,"")
					R02->CURP		:= SA2->A2_CURP
					R02->MONTAN		:= aTotFor[nX][3]
					R02->CLAVE		:= "0"
					R02->CALLE		:= Substr (SA2->A2_END, 1, At(",", SA2->A2_END)-1)
					R02->NUMEXT		:= Substr (SA2->A2_END, At(",", SA2->A2_END)+1, Len (AllTrim (SA2->A2_END)))
					R02->NUMINT		:= ""
					R02->COLONIA	:= SA2->A2_BAIRRO
					R02->MUN		:= SA2->A2_MUN
					R02->CPOST		:= SA2->A2_CX_POST
					If (nPosEst := AScan(aEstado,{|x| x[1] == Alltrim(SA2->A2_EST) })) > 0
						R02->LOCALI	:= aEstado[nPosEst][2]
						R02->EST	:= aEstado[nPosEst][3]
					EndIf
					R02->TEL		:= SA2->A2_TEL
					MsUnLock()
					
					If SA2->A2_EST == "EX"
						nQTFOREX	+= 1 
						nTOPERFEX	+= aTotFor[nX][3]
					Else
						nQTDFOR		+= 1
						nTOPENT		+= aTotFor[nX][3]
						nTOPERFE	+= aTotFor[nX][3]
					EndIf
					
				EndIf
	        EndIf
		Next nX
		
	EndIf
	
	cAnexos := Substr(aWizard[1][4],1,1)
	
	If lDecCli
		cAnexos := "0"
		If lDecFor
			cAnexos := "2"
		EndIf
	ElseIf lDecFor
		cAnexos := "1"
	EndIf
	
	RecLock("R00",.T.)
	R00->RFC		:= aWizard[1][1]
	R00->ANO		:= StrZero(Year(mv_par01),4)
	R00->MESINI		:= StrZero(Month(mv_par01),2)
	R00->MESFIM		:= StrZero(Month(mv_par02),2)
	R00->NOME		:= SM0->M0_NOMECOM
	R00->TIPO		:= Substr(aWizard[1][2],1,1)
	R00->NCOMP		:= aWizard[1][3]
	R00->ANEXOS		:= cAnexos
	R00->QTCLIEX	:= nQTCLIEX
	R00->TOPERCEX	:= nTOPERCEX
	R00->QTDCLI 	:= nQTDCLI
	R00->TOPSAI		:= nTOPSAI
	R00->TOPERCE	:= nTOPERCE
	R00->QTFOREX	:= nQTFOREX
	R00->TOPERFEX	:= nTOPERFEX
	R00->QTDFOR 	:= nQTDFOR
	R00->TOPENT		:= nTOPENT
	R00->TOPERFE	:= nTOPERFE
	MsUnLock()
	
	DbSelectArea(cAliasSF3)
	(cAliasSF3)->(RetIndex("SF3"))
	(cAliasSF3)->(dbClearFilter())
	IF !lQuery
		Ferase(cIndexSF3+OrdBagExt())
	Else
		(cAliasSF3)->(dbCloseArea())
	EndIf

EndIf

RestArea(aAreaSA1)
RestArea(aAreaSA2)
RestArea(aAreaSF3)

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CHKFOLURU ºAutor  ³Marco Bianchi       ºFecha ³ 18/07/2007  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se o numero da nota esta dentro do range de        º±±
±±º          ³folios (SFP)                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Uruguai                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ChkFolURU( cFil	 , cSer, cFol, cVar, lLocxAuto, cEspecie )
Local aArea   := GetArea()
Local aSFP    := SFP->(GetArea())
Local lNumDoc := .F.  
Local cNumIni := ""
Local cNumFim := ""
Local lRet    := .T.
Local cCampo  := ""
Local nPosIni := 0
Local cCombo  := ""

DEFAULT cEspecie:= "NF"

cSer:= SubStr(cSer,1,3)// PROJETO CHAVE UNICA
DbSelectArea("SFP")
DbSetOrder(1)
If DbSeek(xFilial("SFP") + cFil + cSer) 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Busca posicao da descricao da especie da nota no combo da tabela SFP (1=NF;2=NCI;3=NDI;4=NCC;5=NDC)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SX3->(dbSetOrder(2))
	SX3->(dbSeek("FP_ESPECIE"))
	nPosIni := At(AllTrim(cEspecie),AllTrim(SX3->X3_CBOX))
	cCombo := Substr(AllTrim(SX3->X3_CBOX),nPosIni-2,1)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a nota selecionada esta dentro de algum range cadastrado³
	//³ Necessario em caso de existir mais de um range com a mesma serie    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cNumIni := FP_NUMINI
	While FP_FILIAL+FP_FILUSO+alltrim(FP_SERIE) == xFilial("SFP")+cFil+alltrim(cSer) 
		If AllTrim(FP_ESPECIE) == AllTrim(cCombo)		
			If Val(cFol) >= Val(FP_NUMINI) .And. Val(cFol) <= Val(FP_NUMFIM) .And. dDataBase <= FP_DTAVAL
				lNumDoc := .T.
				Exit
			EndIf
			cNumFim := FP_NUMFIM
			
		EndIf
		SFP->(dbSkip())
	EndDo
	
	If !lNumDoc
		lRet := .F.
		If !lLocxAuto
			MsgAlert(STR0052 + " (" + AllTrim(cSer) + ": " + AllTrim(cNumIni) + " - " + AllTrim(cNumFim) + ") " + STR0078 + ": " + cFol ,STR0021)		// "Este folio nao pertence ao intervalo desta serie"###"ou Data de Validez vencida."### "Atencion" 
		EndIf	
	EndIf
Else
	lRet := .F.      
	If !lLocxAuto	      
		MsgAlert(STR0053 + ": " + cSer,STR0051)   //"Esta serie nao esta registrada no controle de folios." 
	EndIf	
EndIf

If lRet .And. ValType(cVar) == "C"
	cCampo  := IIf(Substr(cVar,1,2)=="F1","M->F1","M->F2")
	&(cCampo+"_NUMAUT")  := SFP->FP_NUMAUT
	&(cCampo+"_CODCTR") := SFP->FP_CODCTR
EndIf

RestArea(aSFP)
RestArea(aArea)              

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ValProvEntºAutor  ³                    ºFecha ³ 21/08/2008  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validacao do TES na nota fiscal                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Argentina                                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ValProvEnt(cProv,cTes)
Local lRet := .T.

If Empty(cProv)
	If !Empty(cTes)
		DbSelectArea("SFC")
		DbSetOrder(2)
		
		SFC->(DbSeek(xFilial("SFC")+cTes+"IB",.T.))
		If Alltrim(Substr(SFC->FC_IMPOSTO,1,2))=="IB" .And. SFC->FC_TES == cTes
			lRet := .F.	
			MsgAlert(STR0079,STR0021)//"O TES informado possui Ingresos Brutos. Para o calculo de Ingresos Brutos deve ser informada a Provincia de Entrega."
		Endif
	Endif 
Else
	lRet := VerProEnIt(cProv,cTes) //Locxnf
Endif
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ DvRucPar	³ Autor ³ Marcio Menon          ³ Data ³ 26/03/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao para calculo do digito verificador do RUC (A1_CGC). ³±±
±±³			 ³ 													          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Paraguay										              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   
Function DvRucPar(cRUC)
Local aArea    := GetArea()
Local nCodAsc  := 0
Local nI	   := 0
Local nK	   := 0
Local nTotal   := 0
Local nNumRuc  := 0
Local nResto   := 0
Local cDigito  := ""
Local cCodDig  := ""
Local cRucAux  := ""

DEFAULT cRUC   := ""

For nI := 1 To Len(cRUC)
	
	cCodDig := SubStr(cRUC,nI,1)
	nCodAsc := Asc(Upper(cCodDig))

	If !(nCodAsc >= 48 .And. nCodAsc <= 57)
		cRucAux := cRucAux + AllTrim(Str(nCodAsc))
	Else
		cRucAux := cRucAux + cCodDig
	EndIf

Next nI

nK := 2
    
For nI := Len(cRucAux) To 1 Step -1

	If nK > 11
  		nK := 2		
	EndIf
	
	nNumRuc := Val(SubStr(cRucAux,nI,1))
	nTotal  := nTotal + (nNumRuc * nK)
	nK      := nK + 1

Next nI

nResto := Mod(nTotal,11)

If nResto > 1
	cDigito = AllTrim(Str(11 - nResto))
Else
	cDigito = "0"
EndIf

RestArea(aArea)

Return cDigito

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ DvRucPer	³ Autor ³ Vendas CRM            ³ Data ³ 11/12/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao para calculo do digito verificador do RUC (A1_CGC). ³±±
±±³			 ³            												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Peru											              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   
Function DvRucPer(cRUC)
Local aArea    := GetArea()
Local nI	   := 0
Local nTotal   := 0
Local nResto   := 0
Local cDigito  := ""
Local nDigito  := 0
Local cCodDig  := ""    
Local cFator   :="5432765432"
Local cCodFator :=0

For nI := 1 To Len(cRUC)
	
	cCodDig := SubStr(cRUC,nI,1)
	cCodFator := Substr(cFator,nI,1)

	nTotal += val(cCodDig) * val(cCodFator)

Next nI

nResto := Mod(nTotal,11)
nDigito := 11 - nResto

If nDigito == 10
	cDigito := "0"
Elseif nDigito == 11
	cDigito := "1"
else
	cDigito := str(nDigito)
EndIf

RestArea(aArea)

Return (cDigito)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ DvRucEqu	³ Autor ³ Vendas CRM            ³ Data ³ 11/12/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao para calculo do digito verificador do RUC (A1_CGC). ³±±
±±³			 ³            												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Equador					   					              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   
Function DvRucEqu(cRUC)
Local nI	   		  := 0
Local nTipo			  := 0 //6 - Entidade Pública | 9 - Entidade Jurídica
Local nTotal   		  := 0
Local nResto   		  := 0
Local cDigito  		  := ""
Local nDigito  		  := 0
Local cCodDig  		  := ""    
Local nDigitPos		  := 0
Local nProvincia	  := ""
Local cFator   		  := ""
Local cCodFator 	  := 0
Local lRet			  := .T.

nProvincia = Val(SubStr(cRUC,1,2))
If nProvincia > 22 .OR. nProvincia < 1
    // RUC inválido! (Província)
    lRet := .F.
EndIf

nTipo := Val(SubStr(cRUC,3,1))
If nTipo = 6
	If SubStr(cRUC,10,4) = "0000"
		// RUC inválido! (4 digitos finais não podem ser 0000 quando é entidade pública)
		lRet := .F.
	EndIf
	cFator   := "32765432"
	nDigitPos := 9
Else
	If SubStr(cRUC,11,3) = "000"
		// RUC inválido! (Os 3 últimos dígitos devem informar a filial)
		lRet := .F.
	EndIf
	cFator   :="432765432"
	nDigitPos := 10
EndIF

For nI := 1 To nDigitPos -1
	cCodDig := SubStr(cRUC,nI,1)
	cCodFator := Substr(cFator,nI,1)
	nTotal += Val(cCodDig) * Val(cCodFator)
Next nI

nResto := Mod(nTotal,11)
nDigito := 11 - nResto

If nResto = 0 //Quando o resto for 0 o digito verificador é 0
	cDigito := "0"
ElseIf nResto = 1 //(11 - 1 = 10)
	cDigito := "1"
Else
	cDigito := Str(nDigito)
EndIf

If Val(cDigito) <> Val(SubStr(cRUC,nDigitPos,1))
	// RUC inválido! Confira o dígito verificador
    lRet := .F.
EndIf

Return (lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ DvRifVen	³ Autor ³ Vendas CRM            ³ Data ³ 25/08/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao para calculo do digito verificador do RIF (A1_CGC). ³±±
±±³			 ³            												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Venezuela     		     					              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/   
Function DvRifVen(cRIF)
Local nI			:= 0
Local cCodDig		:= 0
Local cTipoEnt		:= ""
Local nDigitPos		:= 0
Local nTotal		:= 0
Local nResto		:= 0
Local cDigito		:= 0
Local lRet			:= .T.

cRIF := Upper(cRif)
cTipoEnt = SubStr(cRIF,1,1)
//V - Persona Natural; P - Persona con passaporte (extrangero); J - Persona Juridica o associaciones civis; G - Persona Governamental
If cTipoEnt <> "V" .AND. cTipoEnt <> "P" .AND. cTipoEnt <> "J" .AND. cTipoEnt <> "G"
    // RIF inválido! (Tipo)
    lRet := .F.
EndIf

cFator   := "432765432"		//O primeiro valor do fator é 4, mas ja foi utilizado acima
nDigitPos := 10				//Letra + 9 Números

If cTipoEnt = "J"		// Valor da letra J = 3
	nTotal = 3 * val(SubStr(cFator,1,1))	// = 12
ElseIf cTipoEnt = "G"	// Valor da letra V = 1
	nTotal = 5 * val(SubStr(cFator,1,1))	// = 8
Else
	nTotal = 1 * val(SubStr(cFator,1,1))	// = 4
EndIf

For nI := 2 To nDigitPos //Somente os números
	cCodDig := SubStr(cRIF,nI,1)
	cCodFator := Substr(cFator,nI,1)  //(Ja foi utilizado o primeiro item do fator
	nTotal += Val(cCodDig) * Val(cCodFator)
Next nI

nResto := Mod(nTotal,11)
cDigito := AllTrim(str(11 - nResto))
If cDigito = "11" .OR. cDigito = "10"
	cDigito = "0"
EndIf

If Val(cDigito) <> Val(SubStr(cRIF,nDigitPos,1))
	// RIF inválido! Confira o dígito verificador
    lRet := .F.
EndIf

Return (lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³CFDCarEsp  ³ Autor ³ Marcello             ³ Data ³ 20.11.09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Controle de caracteres especiais                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³CFD - Mexico                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CFDCarEsp(cTexto,lCodHtml)
	Local cRet := ""                    
	Local nChar := 0
	Local aCarEsp := {}
	Default lCodHtml := .T.

	If !Empty(cTexto)
		cRet := cTexto
		If lCodHtml
			Aadd(aCarEsp,{"&","&amp;"})
			Aadd(aCarEsp,{'"',"&quot;"})
			Aadd(aCarEsp,{"<","&lt;"})
			Aadd(aCarEsp,{">","&gt;"})
			Aadd(aCarEsp,{"'","&apos;"})
			
			For nChar := 1 To Len(aCarEsp)
				cRet := StrTran(cRet,aCarEsp[nChar,1],aCarEsp[nChar,2])
			Next
		EndIf
	EndIf
	cRet := EncodeUtf8(cRet)

Return(cRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³VldCAIE   º Autor ³ Paulo Augusto      º Fecha³  23.12.09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Calcula e valida digito verificador do CAI e CAE           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA992                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function VldCAIE(cCGC,cSerie,ntipo,cPtVenda,cCai,dVencto)
Local nNumAux :=0
Local nTotImp :=0
Local nTotPar :=0
Local nPos	  :=1
Local nTotal  := 0
Local nNumVal := 0
Local lCalcula:=.T.
local lRet:=.T.
Local cTipo:="01"  
// Verifico o numero de digitos e impar
// Caso seja, adiciono um caracter
/*
ntipo:=
1= Fatura
2= Nota Debito
3= Nota Credito
*/
Do Case 
	Case nTipo=1 .And. Alltrim(Substr(cSerie,1,3))="A"
		cTipo="01"
	Case nTipo=2 .And. Alltrim(Substr(cSerie,1,3))="A"
		cTipo="02"	
	Case nTipo=3 .And. Alltrim(Substr(cSerie,1,3))="A"
		cTipo="03"
	Case nTipo=1 .And. Alltrim(Substr(cSerie,1,3))="B"
		cTipo="06"
	Case nTipo=2 .And. Alltrim(Substr(cSerie,1,3))="B"
		cTipo="07"	
	Case nTipo=3 .And. Alltrim(Substr(cSerie,1,3))="B"
		cTipo="08"
	Case nTipo=1 .And. Alltrim(Substr(cSerie,1,3))="C"
		cTipo="11"
	Case nTipo=2 .And. Alltrim(Substr(cSerie,1,3))="C"
		cTipo="12"	
	Case nTipo=3 .And. Alltrim(Substr(cSerie,1,3))="C"
		cTipo="13"
	Case nTipo=1 .And. Alltrim(Substr(cSerie,1,3))="M"
		cTipo="51
	Case nTipo=2 .And. Alltrim(Substr(cSerie,1,3))="M"
		cTipo="52	
	Case nTipo=3 .And. Alltrim(Substr(cSerie,1,3))="M"
		cTipo="53
EndCase
		
If Len(Alltrim(cCai))==0 .or.  Len(Alltrim(cCai)) == 14
	lCalcula:=.F.
ElseIF Len(Alltrim(cCai)) < 13
	MsgAlert(STR0081, STR0080)
	lRet:=.F. 
	lCalcula:=.F.
EndIf

cDia:=Alltrim(strzero(day(dVencto),2))
cMes:=Alltrim(strzero(Month(dVencto),2))
cAno:=Alltrim(str(Year(dVencto)) )
cAno:= Iif(len(cAno)=2,"20"+cAno,cAno)      
cVencto:=cDia+cMes+cAno

cNum:= Alltrim(cCGC)+ctipo+cPtVenda+Subs(cCai,1,14)+cVencto

If lCalcula 
	nPos:=1
	While nPos <= Len(Alltrim(cNum))
		
		nNumAux := Val(SubStr(cNum,nPos,1))
		nTotImp += nNumAux
		nPos:=nPos+2
	EndDo        
	
	nTotImp:= nTotImp * 3
	
	nPos:=2    
	While nPos <= Len(cNum)
		
		nNumAux := Val(SubStr(cNum,nPos,1))
		nTotPar += nNumAux
		nPos:=nPos+2
	EndDo
	
	nTotal:= nTotPar + nTotImp
	
	nNumVal:=((Int(nTotal/10)+1)*10) - nTotal   
	nNumVal:=Iif(nNumVal==10,0,nNumVal)
	IF Str(nNumVal,1)<> Subs(cCAI,Len(Alltrim(cCAI)),1)
		MsgAlert(STR0082, STR0080)
		lRet:=.F. 
	EndIf

EndIf	
Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CHKFOLARG ºAutor  ³Paulo Augusto       ºFecha ³ 08/01/2010  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se o numero da nota esta dentro do range de        º±±
±±º          ³folios (SFP)                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Uruguai                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ChkFolARG( cFil, cSer, cFol, cVar, lLocxAuto, cEspecie, cPV )

Local aArea   := GetArea()
Local aSFP    := SFP->(GetArea())
Local lNumDoc := .F.  
Local cNumIni := ""
Local cNumFim := ""
Local lRet    := .T.
Local cCampo  := ""
Local nPosIni := 0
Local cCombo  := ""
Local cChave	:= ""

DEFAULT cEspecie:= "NF"
DEFAULT cPV:= ""

cSer:= subStr(cSer,1,3) // Projeto Chave Unica

DbSelectArea("SFP")

If !Empty(cPV)
	DbSetOrder(1)
	cChave := xFilial("SFP") + cFil + cSer 
Else
	lRet := .F.
	MsgAlert( STR0101 , STR0100 )   // "No se informo un Punto de Venta o la serie no tiene informado un Punto de Venta." ##"DATO VACIO"
	Return lRet 
EndIf

If DbSeek(cChave)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Busca posicao da descricao da especie da nota no combo da tabela SFP (1=NF;2=NCI;3=NDI;4=NCC;5=NDC)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SX3->(dbSetOrder(2))
	SX3->(dbSeek("FP_ESPECIE"))
	nPosIni := At(AllTrim(cEspecie),AllTrim(SX3->X3_CBOX))
	cCombo := Substr(AllTrim(SX3->X3_CBOX),nPosIni-2,1)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a nota selecionada esta dentro de algum range cadastrado³
	//³ Necessario em caso de existir mais de um range com a mesma serie    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cNumIni := FP_NUMINI
	lFormPre:= If (cPaisLoc == "ARG",.T.,.F.)

	While (SFP->(!EOF()))
		If FP_FILIAL+FP_FILUSO+AllTrim(FP_SERIE)+FP_PV == xFilial("SFP")+cFil+AllTrim(cSer)+cPV 
			If AllTrim(FP_ESPECIE) == AllTrim(cCombo)		
				If lFormPre .And. FP_TIPOFOR =="2"
					If cFol >= FP_NUMINI .And. dDataBase <= FP_DTAVAL
						lNumDoc := .T.
						Exit
					EndIf
		   		Else
					If cFol >= FP_NUMINI .And. cFol <= FP_NUMFIM .And. dDataBase <= FP_DTAVAL
						lNumDoc := .T.
						Exit
					EndIf
				EndIf		
				cNumFim := FP_NUMFIM
			EndIf
		EndIf
		SFP->(dbSkip())
	EndDo
	
	If !lNumDoc
		lRet := .F.
		If !lLocxAuto 
			MsgAlert(STR0052 + " (" + AllTrim(cSer) + ": " + AllTrim(cNumIni) + " - " + AllTrim(cNumFim) + ") " + STR0078 + ": " + cFol ,STR0021)		// "Este folio nao pertence ao intervalo desta serie"###"ou Data de Validez vencida."### "Atencion"
		EndIf	
	EndIf
Else
	lRet := .F.      
	If !lLocxAuto	      
		MsgAlert(STR0053 + cSer ,STR0051)   //"Esta serie nao esta registrada no controle de folios."
	EndIf	
EndIf

If lRet .And. ValType(cVar) == "C"
	cCampo  := IIf(Substr(cVar,1,2)=="F1","M->F1","M->F2")
EndIf

RestArea(aSFP)
RestArea(aArea)              

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AutNumCai ºAutor  ³Paulo Augusto       ºFecha ³ 08/01/2010  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para trazer o ultimo CAI de Documento para           º±±
±±º          ³Fornecedor selecionado                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Uruguai                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AutNumCai(cEspecie)
Local cTipo:=IIf(cEspecie=="NCP","D",IIf(cEspecie=="NDP","C","N"))
Local aAliasAtu:=GetArea()
Local aAliasSF1:={}
Local aAliasSF2:={}
Local lUsaNewKey   := TamSX3("F1_SERIE")[1] == 14 
Local cQuery :=""
Local cAliasSF :=""

If cTipo$"N|C"
	aAliasSF1:=SF1->(GetArea())
	If !lUsaNewKey 
		dbSelectArea("SF1")
	    DbSetOrder(1)
	    cCai:= Space(TamSX3("F1_CAI")[1])
	    
		cQuery	:=	"F1_FILIAL >='" + xFilial("SF1")+ "' .And. SUBS(F1_DOC,1,4) =='" + SUBS(M->F1_DOC,1,4) + "'"
		cQuery	+= " .And. F1_SERIE ==  '" + M->F1_SERIE + "' .And. F1_FORNECE == '" + M->F1_FORNECE + "'" 
		cQuery	+= " .And. F1_LOJA ==  '" + M->F1_LOJA + "' .And. F1_CAI <> '" + cCAI + "'"		
	
		cOrder		:=	"F1_FILIAL+F1_FORNECE+F1_LOJA+F1_TIPO+F1_SERIE+F1_DOC"
	
		cIndTMP := CriaTrab(Nil,.f.)
	
		IndRegua("SF1",cIndTmp,cOrder,,cQuery)
		nIndSF1 := RetIndex("SF1")
		#IFNDEF TOP
			dbSetIndex(cIndTmp+ordBagExt())
		#ENDIF
		
		nIndSF1++
	    dBSelectArea("SF1")
		DbSetOrder(nIndSF1)
		SF1->(DbGoTop())
		DbSeek(xfilial("SF1")+M->F1_FORNECE+M->F1_LOJA+cTipo+M->F1_SERIE+PADR(Subs(M->F1_DOC,1,4),TamSX3("F1_DOC")[1],"Z"),.T.) 
		DbSkip(-1)
		M->F1_CAI	:= SF1->F1_CAI
		M->F1_VENCAI:= SF1->F1_VENCAI
	
		#IFNDEF TOP                    
			dbSelectArea("SF1")
			dbClearFil()
			RetIndex( "SF1" )
			If !Empty(cIndex)
				FErase (cIndex+OrdBagExt())
			Endif
		#ELSE
			dbSelectArea("SF1")
			dbCloseArea()
			dbSelectArea("SF1")
		#ENDIF
	Else
		cAliasSF := "ANumCai"
		cQuery:=" SELECT "
		cQuery+="	F1_EMISSAO,F1_CAI,F1_VENCAI"
		cQuery+=" from "+RetSqlName("SF1")+ " SF1 "
		cQuery+=" where SF1.F1_FILIAL='"+ xFilial("SF1")+"' "
  		cQuery+="  and substring(SF1.F1_DOC,1,4)='"+SUBS(M->F1_DOC,1,4)+"' "
  		cQuery+="  and SF1.F1_SDOC='"+M->F1_SERIE+"' "//M->SERIE é digitado pelo usuário. 
  		cQuery+="  and SF1.F1_FORNECE='"+M->F1_FORNECE+"' "
  		cQuery+="  and SF1.F1_LOJA='"+M->F1_LOJA+"' "
  		cQuery+="  and SF1.F1_CAI<>'' "
  		cQuery+="  and SF1.D_E_L_E_T_='' "
		cQuery+=" order by SF1.F1_EMISSAO desc "
		cQuery := ChangeQuery(cQuery)
	
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSF,.T.,.T.)
		(cAliasSF)->(dbGoTop())
		If !(empty((cAliasSF)->F1_CAI))
			M->F1_CAI	:=(cAliasSF)->F1_CAI
			M->F1_VENCAI:=(cAliasSF)->F1_VENCAI	
		Endif
		DbCloseArea(cAliasSF)
	Endif
	SF1->(RestArea(aAliasSF1))
Else
	aAliasSF2:=SF2->(GetArea())
	If !lUsaNewKey 
		dbSelectArea("SF2")
	    DbSetOrder(1)
	    cCai:= Space(TamSX3("F2_CAI")[1])
	    
		cQuery	:=	"F2_FILIAL >='" + xFilial("SF2")+ "' .And. SUBS(F2_DOC,1,4) =='" + SUBS(M->F2_DOC,1,4) + "'"
		cQuery	+= " .And. F2_SERIE ==  '" + M->F2_SERIE + "' .And. F2_CLIENTE == '" + M->F2_CLIENTE + "'"		
		cQuery	+= " .And. F2_LOJA ==  '" + M->F2_LOJA + "' .And. F2_CAI <> '" + cCAI + "'"		
	
		cOrder		:=	"F2_FILIAL+F2_CLIENTE+F2_LOJA+F2_TIPO+F2_SERIE+F2_DOC"
	
		cIndTMP := CriaTrab(Nil,.f.)
	
		IndRegua("SF2",cIndTmp,cOrder,,cQuery)
		nIndSF2 := RetIndex("SF2")
		#IFNDEF TOP
			dbSetIndex(cIndTmp+ordBagExt())
		#ENDIF
		
		nIndSF2++
	    dBSelectArea("SF2")
		DbSetOrder(nIndSF2)
		SF2->(DbGoTop())
		DbSeek(xfilial("SF2")+M->F2_CLIENTE+M->F2_LOJA+cTipo+M->F2_SERIE+PADR(Subs(M->F2_DOC,1,4),TamSX3("F2_DOC")[1],"Z"),.T.) 
		DbSkip(-1)
		M->F2_CAI	:= SF2->F2_CAI
		M->F2_VENCAI:= SF2->F2_VENCAI
	
		#IFNDEF TOP                    
			dbSelectArea("SF2")
			dbClearFil()
			RetIndex( "SF2" )
			If !Empty(cIndex)
				FErase (cIndex+OrdBagExt())
			Endif
		#ELSE
			dbSelectArea("SF2")
			dbCloseArea()
			dbSelectArea("SF2")
		#ENDIF
	Else
		cAliasSF := "ANumCai"
		cQuery:=" SELECT "
		cQuery+="	F2_EMISSAO,F2_CAI,F2_VENCAI"
		cQuery+=" from "+RetSqlName("SF2")+ " SF2 "
		cQuery+=" where SF2.F2_FILIAL='"+ xFilial("SF2")+"' "
  		cQuery+="  and substring(SF2.F2_DOC,1,4)='"+SUBS(M->F2_DOC,1,4)+"' "
  		cQuery+="  and SF2.F2_SDOC='"+M->F2_SERIE+"' " //M->SERIE é digitado pelo usuário. 
  		cQuery+="  and SF2.F2_CLIENTE='"+M->F2_CLIENTE+"' "
  		cQuery+="  and SF2.F2_LOJA='"+M->F2_LOJA+"' "
  		cQuery+="  and SF2.F2_CAI<>'' "
  		cQuery+="  and SF2.D_E_L_E_T_='' "
		cQuery+=" order by SF2.F2_EMISSAO desc "
		cQuery := ChangeQuery(cQuery)
	
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSF,.T.,.T.)
		(cAliasSF)->(dbGoTop())
		If !(empty((cAliasSF)->F2_CAI))
			M->F2_CAI	:= (cAliasSF)->F2_CAI
			M->F2_VENCAI:= (cAliasSF)->F2_VENCAI	
		Endif
		DbCloseArea(cAliasSF)
	
	Endif
	SF2->(RestArea(aAliasSF2))
EndIf

RestArea(aAliasAtu)

Return(.T.)

Function VenctoCAI(dData,dVencto)
Local lRet:=.T.
If !Empty(dVencto).And. dVencto < dData 
	MsgAlert(STR0084, STR0083)
	lRet:= .F.
EndIf
Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CHKFOLEQU ºAutor  ³Renato Nagib        ºFecha ³ 21/06/2010  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se o numero da nota esta dentro do range de        º±±
±±º          ³folios (SFP)                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Equador                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ChkFolEQU( cFil,cSer,cFol,cVar,lLocxAuto,cEspecie )

	Local aArea   := GetArea()
	Local aSFP    := SFP->(GetArea())
	Local lNumDoc := .F.  
	Local cNumIni := ""
	Local cNumFim := ""
	Local lRet    := .T.
	Local lCad    := .F.
	Local nPosIni := 0
	Local cCombo  := ""
	Local cMens:=STR0053 +" " + cSer 	//"Esta serie nao esta registrada no controle de folios."
	DEFAULT cEspecie:= "NF"
	
	cSer:= subStr(cSer,1,3)
	DbSelectArea("SFP")
	DbSetOrder(1)
	If DbSeek(xFilial("SFP") + cFil + cSer) 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Busca posicao da descricao da especie da nota no combo da tabela SFP (1=NF;2=NCI;3=NDI;4=NCC;5=NDC)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SX3->(dbSetOrder(2))
		SX3->(dbSeek("FP_ESPECIE"))
		
		nPosIni := At(AllTrim(cEspecie),AllTrim(SX3->X3_CBOX))
		cCombo := Substr(AllTrim(SX3->X3_CBOX),nPosIni-2,1)
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se a nota selecionada esta dentro de algum range cadastrado³
		//³ Necessario em caso de existir mais de um range com a mesma serie    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		While FP_FILIAL+FP_FILUSO+FP_SERIE == xFilial("SFP")+cFil+cSer 
			                        
			cNumIni := FP_NUMINI
			cNumFim := FP_NUMFIM
			
			If AllTrim(FP_ESPECIE) == AllTrim(cCombo)
				If Val(SFP->FP_NUMINI) <= Val(cFol) .And. Val(cFol) <= Val(SFP->FP_NUMFIM)
					lCad := .T.
					Exit
				EndIf
			EndIf
			SFP->(dbSkip())
		EndDo
		
		If lCad
			If Val(cFol) < Val(FP_NUMINI) .Or. Val(cFol) > Val(FP_NUMFIM) 
				cMens:=  STR0052+ " " +AllTrim(cSer)// + ": " + AllTrim(cNumIni) + " - " + AllTrim(cNumFim) 
			ElseIf FP_ATIVO <> '1'  .or.  dDataBase > FP_DTAVAL
				cMens:= STR0085	+"  " + STR0078
			Else
				lNumDoc := .T.
			EndIf
		Else
		EndIf
		
		If !lNumDoc
			lRet := .F.
			If !lLocxAuto
				MsgAlert(cMens)		
			EndIf	
		EndIf
	Else
		lRet := .F.      
		If !lLocxAuto	      
			MsgAlert(STR0053 + cSer ,STR0051)   //"Esta serie nao esta registrada no controle de folios." 
		EndIf	
	EndIf
	
	RestArea(aSFP)
	RestArea(aArea)              
	
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CHKFOLDOM ºAutor  ³Vendas CRM          ºFecha ³ 16/03/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Controle de Folios da Rep. Dom. e Geracao de NCF            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Republica Dominicana                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ChkFolDOM(cFil,cSer,cFol,cVar,lLocxAuto,cEspecie)
Local nTipoCFPos := 0	
Local aArea      := GetArea()                	
Local aSFP       := SFP->(GetArea())
Local lNumDoc    := .F.
Local cNumIni    := ""
Local cNumFim    := ""
Local cRet       := ""
Local cMens      :=STR0053 +" " + cSer 	//"Esta serie nao esta registrada no controle de folios." 
Local cFunName		:= FunName()

DEFAULT cEspecie := "NF"

If Alltrim(cEspecie) $ "NF|NDI|NDC|NCI|NCC"
	cSer:= subStr(cSer,1,3)	
	DbSelectArea("SFP")
	DbSetOrder(1)
	If DbSeek(xFilial("SFP") + cFil + cSer)	 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busca posicao da descricao da especie da nota no combo da tabela SFP                                                      ³
		//³(01=Credito Fiscal;02=Consumidor Final;03=Nota de Debito;04=Nota de Credito;12=Reg. Unico Ingressos;14=Regimes Especiales)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
		SX3->(DbSetOrder(2))
		SX3->(DbSeek("FP_ESPECIE"))
		cEspecie := AllTrim(cEspecie)		
		Do Case
			Case cEspecie == "NF"
				nTipoCFPos := "01|02|12|14"    
			Case cEspecie == "NDI" .OR. cEspecie == "NDC"
				nTipoCFPos := "03"				
			Case cEspecie == "NCI" .OR. cEspecie == "NCC"
				nTipoCFPos := "04"												
		EndCase		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se a nota selecionada esta dentro de algum range cadastrado³
		//³ Necessario em caso de existir mais de um range com a mesma serie    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		While FP_FILIAL+FP_FILUSO+FP_SERIE == xFilial("SFP")+cFil+cSer  
			If SFP->FP_ATIVO == "1" .AND. dDataBase <= SFP->FP_DTAVAL		                        
				cNumIni := FP_NUMINI
				cNumFim := FP_NUMFIM
				
				If AllTrim(FP_ESPECIE) $ nTipoCFPos
					If Val(SFP->FP_NUMINI) <= Val(cFol) .And. Val(cFol) <= Val(SFP->FP_NUMFIM)
						lNumDoc := .T.
						cFol := AllTrim(cFol)
						If Len(cFol) < 8
							cFol := PadL(cFol, 8, "0")
						ElseIf Len(cFol) > 8
							cFol := Right(cFol, 8)
						EndIf
						If cFunName <> "MATA467N"
							cRet := SFP->FP_SNCF + SFP->FP_TPDOC + cFol
						Else
							If cVar == "F2_TPDOC"
								cRet := SFP->FP_SNCF + M->F2_TPDOC + cFol
							Else
								cRet := SFP->FP_SNCF + SFP->FP_TPDOC + cFol
							EndIf
						EndIf
						Exit
					EndIf
				EndIf                                                                              
			EndIf	
			SFP->(DbSkip())                                                                        			
		EndDo
		
		If !lNumDoc
			cRet := ""
			If !lLocxAuto
				MsgAlert(cMens)		
			EndIf	
		EndIf
	Else
		cRet := ""      
		If !lLocxAuto	      
			MsgAlert(STR0053 + cSer ,STR0051)   //"Esta serie nao esta registrada no controle de folios."  
		EndIf	
	EndIf
EndIf

RestArea(aSFP)
RestArea(aArea)              

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DomNotAn  ºAutor  ³Vendas CRM          ºFecha ³ 17/03/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Condicao Utilizada pelo domnotan.ini e trazer F2_NCF        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Republica Dominicana domnotan.ini MATA950                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function DomNotAn(_aTotal)
Local cRet   := "" 
Local nFil   := XFilial("SF3")
Local cForm  := SF3->F3_FORMUL

Local dDtCanc := SF3->F3_DTCANC                                                            
Local dDtEnt  := SF3->F3_ENTRADA

If !Empty(dDtCanc) .AND. cForm == "S" .AND. IIf(_aTotal[4] == 1,dDtEnt,dDtCanc) >= _aTotal[2] ;
	.AND. IIf(_aTotal[4] == 1,dDtEnt,dDtCanc) <= _aTotal[3] .AND. nFil == cFilAnt      
	
	cRet := SF3->F3_NCF	
	
EndIf

Return cRet                            

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³LOCXFUNA  ºAutor  ³Vendas CRM          º Data ³  03/21/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar pre existencia de serie/especie na tabela          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ - Validacao FP_ESPECIE e FP_SERIE REP DOM                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ValFPExist(cEspecie,cSerie)
Local xArea := GetArea() // Area Aberta antes da chamada da funcao

cSerie:= subStr(cSerie,1,3)
DbSelectArea("SFP")
DbGoTop()
While !Eof()   
	If SFP->FP_FILIAL == XFilial("SFP") .AND. (SFP->FP_SNCF == cSerie .OR. SFP->FP_ESPECIE == cEspecie) .AND. SFP->FP_ATIVO == "1" .AND. dDataBase <= SFP->FP_DTAVAL
		RestArea(xArea)	
		Alert(STR0086) //"A Espécie ou a Série NCF possuem outro cadastro ativo"
		Return .F.
	EndIf
	DbSkip()				                
EndDo       
RestArea(xArea)	
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SFBDOM    ³ Autor ³ Ivan Haponczuk       º Data ³ 04/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Alimentar array de impostos para Republica Dominicana      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SFBDOM()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ LOCXFUN.PRW                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function SFBDOM( aRecnoSFB , cFilSFB , lIntEIC , aRecSFBEIC )

	aAdd(aRecnoSFB,{cFilSFB,"ITB","Trans.Bienes Ind.Servicios","1","M100ITB","M460ITB",0,0,16.00,"","","","","2","1"})
	aAdd(aRecnoSFB,{cFilSFB,"ISC","Impuesto Selectivo al Consumo","2","M100ISC","M460ISC",0,0,0.00,"","","","","2","1"})
	aAdd(aRecnoSFB,{cFilSFB,"RIT","Retencion Trans.Bienes Ind.Ser","3","M100RITB","M460RITB",0,0,0.00 ,"","","","","2","1"})
	aAdd(aRecnoSFB,{cFilSFB,"ISR","Impuesto sobre la Renta","4","M100ISR","M460ISR",0,0,10.00,"","","","","2","1"})

Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ SF4DOM    ³ Autor ³ Ivan Haponczuk       º Data ³ 04/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Alimentar array de TES para Repulblica Dominicana          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SF4VEN( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados dos TES                        ³±±
±±³          ³ ExpC2 := Filial do arquivo SF4                             ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC                            ³±±
±±³          ³ ExpA4 := Array com os dados dos TES do SIGAEIC             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ LOCXFUN.PRW                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/	
Function SF4DOM( aRecnoSF4 , cFilSF4 , lIntEIC , aRecSF4EIC )
    
	aAdd(aRecnoSF4,{cFilSF4,"001","E","","","S","S","1111","Compra ITB"    ,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"002","E","","","S","S","1111","NCC ITB"       ,0.00,0.00,"N","N","","","","","","","","","","1","502","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"003","E","","","S","S","1111","NDE ITB"       ,0.00,0.00,"N","N","","","","","","","","","","1","503","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"004","E","","","S","S","1111","NCI ITB"       ,0.00,0.00,"N","N","","","","","","","","","","1","504","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"005","E","","","S","S","1111","NDP ITB"       ,0.00,0.00,"N","N","","","","","","","","","","1","505","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"006","E","","","S","S","1111","Compra RET ITB",0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"007","E","","","S","S","1111","NCC RET ITB"   ,0.00,0.00,"N","N","","","","","","","","","","1","507","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"008","E","","","S","S","1111","NDE RET ITB"   ,0.00,0.00,"N","N","","","","","","","","","","1","508","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"009","E","","","S","S","1111","NCI RET ITB"   ,0.00,0.00,"N","N","","","","","","","","","","1","509","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"010","E","","","S","S","1111","NDP RET ITB"   ,0.00,0.00,"N","N","","","","","","","","","","1","510","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"011","E","","","S","S","1111","Compra ISR"    ,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"012","E","","","S","S","1111","NCC ISR"       ,0.00,0.00,"N","N","","","","","","","","","","1","512","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"013","E","","","S","S","1111","NDE ISR"       ,0.00,0.00,"N","N","","","","","","","","","","1","513","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"014","E","","","S","S","1111","NCI ISR"       ,0.00,0.00,"N","N","","","","","","","","","","1","514","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"015","E","","","S","S","1111","NDP ISR"       ,0.00,0.00,"N","N","","","","","","","","","","1","515","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"016","E","","","S","S","1111","Compra ISC"    ,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"017","E","","","S","S","1111","NCC ISC"       ,0.00,0.00,"N","N","","","","","","","","","","1","516","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"018","E","","","S","S","1111","NDE ISC"       ,0.00,0.00,"N","N","","","","","","","","","","1","517","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"019","E","","","S","S","1111","NCI ISC"       ,0.00,0.00,"N","N","","","","","","","","","","1","518","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"020","E","","","S","S","1111","NDP ISC"       ,0.00,0.00,"N","N","","","","","","","","","","1","519","","",0,0,"1","G"})
	
	aAdd(aRecnoSF4,{cFilSF4,"501","S","","","S","S","5111","Venta ITB"     ,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"502","S","","","S","S","5111","NDC ITB"       ,0.00,0.00,"N","N","","","","","","","","","","1","002","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"503","S","","","S","S","5111","NCE ITB"       ,0.00,0.00,"N","N","","","","","","","","","","1","003","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"504","S","","","S","S","5111","NDI ITB"       ,0.00,0.00,"N","N","","","","","","","","","","1","004","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"505","S","","","S","S","5111","NCP ITB"       ,0.00,0.00,"N","N","","","","","","","","","","1","005","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"506","S","","","S","S","5111","Venta RET ITB" ,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"507","S","","","S","S","5111","NDC RET ITB"   ,0.00,0.00,"N","N","","","","","","","","","","1","007","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"508","S","","","S","S","5111","NCE RET ITB"   ,0.00,0.00,"N","N","","","","","","","","","","1","008","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"509","S","","","S","S","5111","NDI RET ITB"   ,0.00,0.00,"N","N","","","","","","","","","","1","009","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"510","S","","","S","S","5111","NCP RET ITB"   ,0.00,0.00,"N","N","","","","","","","","","","1","010","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"511","S","","","S","S","5111","Venta ISR"     ,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"512","S","","","S","S","5111","NDC ISR"       ,0.00,0.00,"N","N","","","","","","","","","","1","012","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"513","S","","","S","S","5111","NCE ISR"       ,0.00,0.00,"N","N","","","","","","","","","","1","013","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"514","S","","","S","S","5111","NDI ISR"       ,0.00,0.00,"N","N","","","","","","","","","","1","014","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"515","S","","","S","S","5111","NCP ISR"       ,0.00,0.00,"N","N","","","","","","","","","","1","015","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"516","S","","","S","S","5111","Venta ISC"     ,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"517","S","","","S","S","5111","NDC ISC"       ,0.00,0.00,"N","N","","","","","","","","","","1","017","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"518","S","","","S","S","5111","NCE ISC"       ,0.00,0.00,"N","N","","","","","","","","","","1","018","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"519","S","","","S","S","5111","NDI ISC"       ,0.00,0.00,"N","N","","","","","","","","","","1","019","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"520","S","","","S","S","5111","NCP ISC"       ,0.00,0.00,"N","N","","","","","","","","","","1","020","","",0,0,"1","G"})

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ SFCDOM    ³ Autor ³ Ivan Haponczuk       º Data ³ 04/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Alimentar array de TES  x impostos para Rep. Dominicana    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SFCDOM( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados dos TES x impostos             ³±±
±±³          ³ ExpC2 := Filial do arquivo SFC                             ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC                            ³±±
±±³          ³ ExpA4 := Array com os dados dos TESximpostos do SIGAEIC    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ LOCXFUN.PRW                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function SFCDOM( aRecnoSFC , cFilSFC , lIntEIC , aRecSFCEIC )

	aAdd(aRecnoSFC,{cFilSFC,"001","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"002","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"003","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"004","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"005","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"006","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"006","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	aAdd(aRecnoSFC,{cFilSFC,"007","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"007","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	aAdd(aRecnoSFC,{cFilSFC,"008","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"008","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	aAdd(aRecnoSFC,{cFilSFC,"009","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"009","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	aAdd(aRecnoSFC,{cFilSFC,"010","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"010","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	AADD(aRecnoSFC,{cFilSFC,"011","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	AADD(aRecnoSFC,{cFilSFC,"012","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	AADD(aRecnoSFC,{cFilSFC,"013","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	AADD(aRecnoSFC,{cFilSFC,"014","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	AADD(aRecnoSFC,{cFilSFC,"015","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	
	AADD(aRecnoSFC,{cFilSFC,"016","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"016","02","ITB","1","1","3","ISC",0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"017","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"017","02","ITB","1","1","3","ISC",0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"018","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"018","02","ITB","1","1","3","ISC",0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"019","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"019","02","ITB","1","1","3","ISC",0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"020","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"020","02","ITB","1","1","3","ISC",0.00,"I","S","",""})
	
	aAdd(aRecnoSFC,{cFilSFC,"501","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"502","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"503","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"504","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"505","01","ITB","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"506","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"506","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	aAdd(aRecnoSFC,{cFilSFC,"507","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"507","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	aAdd(aRecnoSFC,{cFilSFC,"508","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"508","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	aAdd(aRecnoSFC,{cFilSFC,"509","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"509","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	aAdd(aRecnoSFC,{cFilSFC,"510","01","ITB","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"510","02","RIT","3","3","3","",0.00,"I","" ,"",""})
	//AADD(aRecnoSFC,{cFilSFC,"511","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	AADD(aRecnoSFC,{cFilSFC,"512","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	AADD(aRecnoSFC,{cFilSFC,"513","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	AADD(aRecnoSFC,{cFilSFC,"514","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	AADD(aRecnoSFC,{cFilSFC,"515","01","ISR","3","3","3","",0.00,"I","" ,"",""})
	
	AADD(aRecnoSFC,{cFilSFC,"516","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"516","02","ITB","1","1","3","ISC",0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"517","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"517","02","ITB","1","1","3","ISC",0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"518","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"518","02","ITB","1","1","3","ISC",0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"519","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"519","02","ITB","1","1","3","ISC",0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"520","01","ISC","1","1","3",""   ,0.00,"I","S","",""})
	AADD(aRecnoSFC,{cFilSFC,"520","02","ITB","1","1","3","ISC",0.00,"I","S","",""})

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ CCRDOM    ³ Autor ³ Ivan Haponczuk       º Data ³ 11/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Alimentar array de Concepto de Retenciones                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ CCRDOM( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados                                ³±±
±±³          ³ ExpC2 := Filial do arquivo CCR                             ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC                            ³±±
±±³          ³ ExpA4 := Array com os dados do SIGAEIC                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Localizacoes                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CCRDOM( aRecnoCCR , cFilCCR , lIntEIC , aRecCCREIC )

	aAdd(aRecnoCCR,{cFilCCR,"00000000","Nota pessoa fisica.",100.00,"","RIT","1"})
	aAdd(aRecnoCCR,{cFilCCR,"00000000","Nota pessoa fisica (provedores informales).",75.00,"","RIT","5"})
	aAdd(aRecnoCCR,{cFilCCR,"00000000","Nota pessoa juridica.",30.00,"","RIT","2"}) 
	aAdd(aRecnoCCR,{cFilCCR,"00000000","Nota para entidade do estado.",0.50,"","RIT","4"})
	aAdd(aRecnoCCR,{cFilCCR,"00000001","Art.305-Pagos al exterior en general 25% por concepto de remesas al exterior tanto pers. fisica como juridica (servicios)",25.00,"","ISR","1"}) 
	aAdd(aRecnoCCR,{cFilCCR,"00000001","Art.305-Pagos al exterior en general 25% por concepto de remesas al exterior tanto pers. fisica como juridica (servicios)",25.00,"","ISR","2"})	
	aAdd(aRecnoCCR,{cFilCCR,"00000002","Art.306-Intereses pagados o acreditados a instituciones financieras del exterior",10.00,"","ISR","1"}) 
	aAdd(aRecnoCCR,{cFilCCR,"00000002","Art.306-Intereses pagados o acreditados a instituciones financieras del exterior",10.00,"","ISR","2"})		
	aAdd(aRecnoCCR,{cFilCCR,"00000003","Art.308-Dividendos pagados o acreditados en el pais - 25% del monto pagado",25.00,"","ISR","1"}) 
	aAdd(aRecnoCCR,{cFilCCR,"00000003","Art.308-Dividendos pagados o acreditados en el pais - 25% del monto pagado",25.00,"","ISR","2"}) 	
	aAdd(aRecnoCCR,{cFilCCR,"00000004","Art.309-Alquileres de bienes muebles e inmuebles",10.00,"","ISR","1"})
	aAdd(aRecnoCCR,{cFilCCR,"00000005","Art.309-Honorarios, comisiones y demás remuneraciones y pagos por la prestación de servicios en general provistos por pers. fisica",10.00,"","ISR","1"})
	aAdd(aRecnoCCR,{cFilCCR,"00000006","Art.309-Premios/ganancias obtenidas en loterias y cualquier tipo de premio ofrecido a través de campañas promocionales con carater de pago efetivo",15.00,"","ISR","1"})
	aAdd(aRecnoCCR,{cFilCCR,"00000007","Art.309-Pagos realizados por el Estado y sus dependencias, incluyendo las empresas estatales a pers. fisica, juridica, autonomo por la aquiisición de servicios",0.50,"","ISR","1"})
	aAdd(aRecnoCCR,{cFilCCR,"00000008","Art.309-Cualquier otro tipo de renta no contemplado expresamente en disposiciones anteriores - con carater de pago en cuenta",10.00,"","ISR","1"})
	aAdd(aRecnoCCR,{cFilCCR,"16043000","Caviar y sus sucedáneos.",0,"","ISC","",65})
	aAdd(aRecnoCCR,{cFilCCR,"24031000","Tabaco para fumar, incluso con sucedaneos del tabaco en cualquier proporcion.",0,"","ISC","",130})
	aAdd(aRecnoCCR,{cFilCCR,"24039900","Los demas importaciones.",0,"","ISC","",130})
	aAdd(aRecnoCCR,{cFilCCR,"3303","Perfumes y aguas de tocador.",0,"","ISC","",39})
	aAdd(aRecnoCCR,{cFilCCR,"39221011","Baneras tipo 'jacuzzi', de plastico reforzado con fibra de vidrio.",0,"","ISC","",52})
	aAdd(aRecnoCCR,{cFilCCR,"73242100","Baneras tipo 'jacuzzi', de fundicion, incluso esmaltadas.",0,"","ISC","",52})
	aAdd(aRecnoCCR,{cFilCCR,"73242900","Las demas baneras tipo 'jacuzzi'",0,"","ISC","",52})
	aAdd(aRecnoCCR,{cFilCCR,"74182000","Baneras tipo 'jacuzzi'",0,"","ISC","",52})
	aAdd(aRecnoCCR,{cFilCCR,"76152000","Banera tipo 'jacuzzi'",0,"","ISC","",52})
	aAdd(aRecnoCCR,{cFilCCR,"5701","Alfombras de nudo de materia textiles, incluso confeccionadas.",0,"","ISC","",58.5})
	aAdd(aRecnoCCR,{cFilCCR,"5702","Alfombrasy demas revestimentos para el suelo de materia textil, tejidas, excepto los de mechon insertados y los flocados, aunque esten confeccionados.",0,"","ISC","",39})
	aAdd(aRecnoCCR,{cFilCCR,"5703","Alfombras y demas revestimentos para el suelo, de materia textil, con mechon insertado, incluso confeccionados.",0,"","ISC","",39})
	aAdd(aRecnoCCR,{cFilCCR,"5805","Tapiceria tejida a mano y tapiceria de aguja. Incluso confeccionadas.",0,"","ISC","",39})
	aAdd(aRecnoCCR,{cFilCCR,"7113","Articulos de Joyeria y sus partes, de metal precioso o de chapado de metal precioso (plaque).",0,"","ISC","",39})
	aAdd(aRecnoCCR,{cFilCCR,"7114","Articulos de Orfebraria y suspartes de metal precioso oo de chapado de metal precioso (plaque).",0,"","ISC","",39})
	aAdd(aRecnoCCR,{cFilCCR,"7116","Manufaturas de perlas finais (naturales) o cultivadas, de piedras preciosas o semipreciosas (naturales, sinteticas o reconstituidas).",0,"","ISC","",39})
	aAdd(aRecnoCCR,{cFilCCR,"7117","Bisuteria",0,"","ISC","",39})
	aAdd(aRecnoCCR,{cFilCCR,"8415","Maquinas y aparatos para acondicionamento de aire que comprendan un ventilador con motor y los dispositivos adequados para modificar la temperatura y la humedad aunque no regulen separademente el grado higrometrico.",0,"","ISC","",39})
	aAdd(aRecnoCCR,{cFilCCR,"2203","Cerveza de malta (excepto extrato malta)",7.5,"","ISC","",342.2,"3",1})
	aAdd(aRecnoCCR,{cFilCCR,"2204","Vino de uvas frescas, incluso encabezado, mosto de uva, excepto el de la partida 20.09.",7.5,"","ISC","",342.2,"3",2})
	aAdd(aRecnoCCR,{cFilCCR,"2205","Vermu demas vinos de uvas frescas preparados con sus plantas o sustancias aromaticas.",7.5,"","ISC","",342.2,"3",3})
	aAdd(aRecnoCCR,{cFilCCR,"2206","Las demas bebidas fermentadas (por ejemplo, sidra, perada, aguamiel, mezclas de bebidas) fermentadas y Bebidas no Alcohólicas no comprendidas en otra parte.",7.5,"","ISC","",342.2,"3",4})
	aAdd(aRecnoCCR,{cFilCCR,"2207","Alcohol etilico sin desnaturalizar con un grado alcoholico volumetrico superior o igual a 80% vol: alcohol etilico y aguardiente desnaturalizados, de cualquier graduacion.",7.5,"","ISC","",279.08,"3",5})
	aAdd(aRecnoCCR,{cFilCCR,"2208","Alcohol etilico sin desnaturalizar con un grado alcoholico volumetrico inferior al 80% vol., demas bebidas espirituosas preparaciones alcoholicas compuestas del tipo de las utilizadas para la elaboracion de bebidas.",7.5,"","ISC","",279.08,"3",6})
	aAdd(aRecnoCCR,{cFilCCR,"22082000","Aguardente de uvas (Conac, Brandys, Grapa)",7.5,"","ISC","",279.08,"3",7})
	aAdd(aRecnoCCR,{cFilCCR,"22083000","Whisky.",7.5,"","ISC","",279.08,"3",8})
	aAdd(aRecnoCCR,{cFilCCR,"22084000","Ron y demas aguardientes de cana.",7.5,"","ISC","",279.08,"3",9})
	aAdd(aRecnoCCR,{cFilCCR,"22085000","Gin y Ginebra.",7.5,"","ISC","",279.08,"3",10})
	aAdd(aRecnoCCR,{cFilCCR,"22086000","Vodka.",7.5,"","ISC","",279.08,"3",11})
	aAdd(aRecnoCCR,{cFilCCR,"22087000","Licores.",7.5,"","ISC","",279.08,"3",12})
	aAdd(aRecnoCCR,{cFilCCR,"22089000","Los demas productos alcoholicos.",7.5,"","ISC","",279.08,"3",13})
	aAdd(aRecnoCCR,{cFilCCR,"24022000","Cigarrillos que contengan tabaco",20,"","ISC","",26,"3",15})
	aAdd(aRecnoCCR,{cFilCCR,"24029000","Los demas cigarrillos.",20,"","ISC","",26,"3",16})
	
Return Nil   

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ CCRCHI    ³ Autor ³ Camila Januario      º Data ³ 18/08/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Alimentar array de Concepto 				                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ CCRCHI( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados                                ³±±
±±³          ³ ExpC2 := Filial do arquivo CCR                             ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC                            ³±±
±±³          ³ ExpA4 := Array com os dados do SIGAEIC                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Chile                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function CCRCHI( aRecnoCCR , cFilCCR , lIntEIC , aRecCCREIC )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³IAD Imposto Adicional ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd(aRecnoCCR,{cFilCCR,"001","Licores, piscos, whisky, aguardientes y destilados.",27.00,"","IAD"})
aAdd(aRecnoCCR,{cFilCCR,"002","Vinos destilados al consumo, ya sean gasificados, espumosos",15.00,"","IAD"})
aAdd(aRecnoCCR,{cFilCCR,"003","Bebidas analcohólicas naturales o artificiales, jarabes.",13.00,"","IAD"})	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Retencao de Honorario³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
aAdd(aRecnoCCR,{cFilCCR,"004","Aliquota 10 para Diretores e Prestadores de Serviço",10.00,"","RHO"})	
aAdd(aRecnoCCR,{cFilCCR,"005","Aliquota 10 para Diretores ",20.00,"","RHO"})	

Return NIL

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ CCRCOS    ³ Autor ³ Camila Januário     º Data ³ 07/10/11  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Alimentar array de Concepto                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ CCRDOM( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados                                ³±±
±±³          ³ ExpC2 := Filial do arquivo CCR                             ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC                            ³±±
±±³          ³ ExpA4 := Array com os dados do SIGAEIC                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Localizacoes                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CCRCOS ( aRecnoCCR , cFilCCR , lIntEIC , aRecCCREIC )
                                                             
/*ISC*/
aAdd(aRecnoCCR,{cFilCCR,"3208","Pinturas y barnices a base de polimeros sinteticos o naturales modificados, dispersos o disueltos en un medio acuoso (definidas en la nota 4 de este cap)",5.00,"","ISC"})
aAdd(aRecnoCCR,{cFilCCR,"3209","Pinturas y barnices a base de polimeros sinteticos o naturales modificados, dispersos o disueltos en un medio acuoso",5.00,"","ISC"})
aAdd(aRecnoCCR,{cFilCCR,"3210","Las demás Pinturas y barnices: pigmentos al agua preparados del tipo de los uitlizados para el acabado del cuero",5.00,"","ISC"})
aAdd(aRecnoCCR,{cFilCCR,"32110000","Secativos preparados",5.00,"","ISC"})
aAdd(aRecnoCCR,{cFilCCR,"99999999","Isento",0.00,"","ISC"})

/*IVA*/                                                    
aAdd(aRecnoCCR,{cFilCCR,"00000001","Energia Residencial",5.00,"","IVA"})
aAdd(aRecnoCCR,{cFilCCR,"00000002","Madera",10.00,"","IVA"})
aAdd(aRecnoCCR,{cFilCCR,"99999998","Isento",0.00,"","IVA"})

/*RIR*/                                                    
aAdd(aRecnoCCR,{cFilCCR,"00000003","Transporte, Comunicación, Películas (TC)",3.00,"","RIR"})
aAdd(aRecnoCCR,{cFilCCR,"00000004","Licitaciones, Contratos, Negócios del Estado con terceros (EN)",2.00,"","RIR"})

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SF4URU    ³ Autor ³ Microsiga            | Data ³ 11/09/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Alimentar array de TES para Uruguai                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SF4URU( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados dos TES						  ³±±
±±³          ³ ExpC2 := Filial do arquivo SF4							  ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC							  ³±±
±±³          ³ ExpA4 := Array com os dados dos TES do SIGAEIC             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Localizacoes                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/	
Function SF4URU( aRecnoSF4 , cFilSF4 , lIntEIC , aRecSF4EIC )

//               01       02   03  04  05  06  07   08    09                       10   11  12  13       14    15  16  17 18  19  20  21 22  23    24  25  26  27  28  29
AADD(aRecnoSF4,{cFilSF4,"001","E","N","N","S","S","111"  ,"COMPRA IVA 10%      ",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1","511","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"002","E","N","N","S","S","111"  ,"COMPRA IVA 10% INDIR",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1","512","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"003","E","N","N","S","S","112"  ,"IMEBA               ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"" ,"" ,"2","" ,"" })
AADD(aRecnoSF4,{cFilSF4,"004","E","N","N","S","S","112"  ,"IMEBA+ART 8         ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"" ,"" ,"2","" ,"" })
AADD(aRecnoSF4,{cFilSF4,"005","E","N","N","S","S","112"  ,"IMEBA+ART 9         ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"" ,"" ,"2","" ,"" })
AADD(aRecnoSF4,{cFilSF4,"006","E","N","N","S","S","112"  ,"IMEBA+ART 8+ART 9   ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"" ,"" ,"2","" ,"" })
AADD(aRecnoSF4,{cFilSF4,"007","E","N","N","S","S","111"  ,"COMPRA IVA 0%       ",0.00,0.00,"N","N","M100IVA" ,"N","N","","" ,"" ,"" ,"","","1","515" ,"" ,"" ,"" ,"" ,"4"})
AADD(aRecnoSF4,{cFilSF4,"008","E","N","N","S","S","111"  ,"COMPRA IVA 22%      ",0.00,0.00,"N","N","M100IVA" ,"N","N","","" ,"" ,"" ,"","","1","513" ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"009","E","N","N","S","S","111"  ,"COMPRA IVA 22% INDIR",0.00,0.00,"N","N","M100IVA" ,"N","N","","" ,"" ,"" ,"","","1","514" ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"011","E","N","N","S","S","124"  ,"NCC IVA 10%         ",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"012","E","N","N","S","S","124"  ,"NCC IVA 10% INDIRETO",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"013","E","N","N","S","S","124"  ,"NCC IVA 22%         ",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"014","E","N","N","S","S","124"  ,"NCC IVA 22% INDIRETO",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"015","E","N","N","S","S","124"  ,"NCC IVA 0%          ",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"4"})
AADD(aRecnoSF4,{cFilSF4,"016","E","N","N","S","S","124"  ,"NDC IVA 10%         ",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"017","E","N","N","S","S","124"  ,"NDC IVA 10% INDIRETO",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"018","E","N","N","S","S","124"  ,"NDC IVA 22% 		   ",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"019","E","N","N","S","S","124"  ,"NDC IVA 22% INDIRETO",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"020","E","N","N","S","S","124"  ,"NDC IVA 0%          ",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"4"})
AADD(aRecnoSF4,{cFilSF4,"021","E","N","N","S","S","111"  ,"COM IVA10% Y ANT.IVA",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1","521","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"022","E","N","N","S","S","112"  ,"COM IVA20% Y ANT.IVA",0.00,0.00,"N","N","M100IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1","522","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"031","E","N","N","S","S","111"  ,"PFI COM IVA 10%"     ,0.00,0.00,"N","N",""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","531","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"032","E","N","N","S","S","111"  ,"PFI COM IVA 22%"     ,0.00,0.00,"N","N",""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","532","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"033","E","N","N","S","S","111"  ,"IVA 22% IND IRAE"    ,0.00,0.00,"N","N",""        ,"N","N","B","" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"034","E","N","N","S","S","111"  ,"PFR COM IRAE 20%"    ,0.00,0.00,"N","N",""        ,"N","N","B","" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"080","E","N","N","S","S","111"  ,"IVA 22% c/RIVA"      ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","580","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"085","E","N","N","S","S","111"  ,"IMESI"               ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","585","" ,"" ,"" ,"2","1"})
AADD(aRecnoSF4,{cFilSF4,"081","E","N","N","S","S","111"  ,"IVA 10% c/RIVA"      ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","581","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"090","E","N","N","S","N","1101" ,"COM IVA22% IND-IRPF" ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","590","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"091","E","N","N","S","S","111"  ,"IVA22% IND IRPF-IVA" ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","591","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"092","E","N","N","S","N","1101" ,"IVA COM 10% IRPF 7%" ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","592","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"093","E","N","N","S","N","1101" ,"COM10% IRPD7% IVA90$",0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","593","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"095","E","N","N","S","N","1101" ,"RET IRNR12 IVA22 IND",0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","595","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"096","E","N","N","S","N","111"  ,"INRN"                ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","596","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"100","E","N","N","S","N","1102" ,"RET IN ON 3%"        ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","600","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"101","E","N","N","S","S","112"  ,"IVA 14%+COFIS (INCL)",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"102","E","N","N","S","S","112"  ,"IVA 23%+COFIS (INCL)",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"110","E","N","N","S","S","111"  ,"(IVA,INAC,PF)       ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"120","E","N","N","S","S","111"  ,"(IVA,INAC,FIS,PV)   ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"130","E","N","N","S","S","111"  ,"(IVA,INAC,FIS,PF)   ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"140","E","N","N","S","S","111"  ,"(FIS,INAC)          ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"150","E","N","N","S","S","111"  ,"(IVA MAYOR)         ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"160","E","N","N","S","S","111"  ,"(EXENTO)            ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"170","E","N","N","S","S","111"  ,"IVA RETENIDO FRETE  ",0.00,0.00,"N","N","M100LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"501","S","N","N","S","S","511"  ,"VENTA IVA 10%       ",0.00,0.00,"N","N","M460IVA" ,"N","N","","" ,"" ,"" ,"","","1","011" ,"2","" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"502","S","N","N","S","S","511"  ,"VENTA IVA 10% INDIR ",0.00,0.00,"N","N","M460IVA" ,"N","N","","" ,"" ,"" ,"","","1","012" ,"2","" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"503","S","N","N","S","S","511"  ,"IMEBA               ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"504","S","N","N","S","S","511"  ,"IMEBA+ART 8         ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"505","S","N","N","S","S","511"  ,"IMEBA+ART 9         ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"506","S","N","N","S","S","511"  ,"IMEBA+ART 8+ART 9   ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"507","S","N","N","S","S","511"  ,"VENTA IVA 0%        ",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1","015","" ,"" ,"" ,"" ,"4"})
AADD(aRecnoSF4,{cFilSF4,"508","S","N","N","S","S","511"  ,"VENTA IVA 22%       ",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1","013","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"509","S","N","N","S","S","511"  ,"VENTA IVA 22% INDIR ",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1","014","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"510","S","N","N","S","S","511"  ,"(IVA,INAC,PF)       ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"511","S","N","N","S","S","524"  ,"NCP IVA 10%         ",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"512","S","N","N","S","S","524"  ,"NCP IVA 10% INDIRETO",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"513","S","N","N","S","S","524"  ,"NCP IVA 22%         ",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"514","S","N","N","S","S","524"  ,"NCP IVA 22% INDIRETO",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"515","S","N","N","S","S","524"  ,"NCP IVA 0%          ",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"4"})
AADD(aRecnoSF4,{cFilSF4,"516","S","N","N","S","S","543"  ,"NDP IVA 10%         ",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"517","S","N","N","S","S","543"  ,"NDP IVA 10% INDIRETO",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"518","S","N","N","S","S","543"  ,"NDP IVA 22% 		   ",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"519","S","N","N","S","S","543"  ,"NDP IVA 22% INDIRETO",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"520","S","N","N","S","S","524"  ,"NDP IVA 0%          ",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1",""   ,"" ,"" ,"" ,"" ,"4"})
AADD(aRecnoSF4,{cFilSF4,"521","E","N","N","S","S","511"  ,"DEV IVA10% Y ANT.IVA",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1","021","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"522","E","N","N","S","S","512"  ,"DEV IVA20% Y ANT.IVA",0.00,0.00,"N","N","M460IVA" ,"N","N","" ,"" ,"" ,"" ,"","","1","022","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"530","S","N","N","S","S","511"  ,"(IVA,INAC,FIS,PF)   ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"531","S","N","N","S","S","111"  ,"PFI COM IVA 10%"     ,0.00,0.00,"N","N",""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","031","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"532","S","N","N","S","S","111"  ,"PFI COM IVA 22%"     ,0.00,0.00,"N","N",""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","032","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"533","S","N","N","S","S","511"  ,"DEV IVA COM 22% IRAE",0.00,0.00,"N","N",""        ,"N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"534","S","N","N","S","S","511"  ,"PFR COM IRAE 20%"    ,0.00,0.00,"N","N",""        ,"N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"540","S","N","N","S","S","511"  ,"(FIS,INAC)          ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"550","S","N","N","S","S","511"  ,"(IVA MAYOR)         ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"560","S","N","N","S","S","511"  ,"(EXENTO)            ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"570","S","N","N","S","S","511"  ,"IVA RETENIDO FRETE  ",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"580","S","N","N","S","S","511"  ,"IVA 22% c/RIVA"      ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","080","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"581","S","N","N","S","S","511"  ,"IVA 10% c/RIVA"      ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","081","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"585","s","N","N","S","S","511"  ,"IMESI"               ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","085","" ,"" ,"" ,"2","1"})
AADD(aRecnoSF4,{cFilSF4,"590","S","N","N","S","N","5113" ,"DEV IVA22% IND-IRPF" ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","090","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"591","S","N","N","S","N","799"  ,"DEV RET 10,5% IRPF"  ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","091","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"592","S","N","N","S","N","612"  ,"DEV10% IRPD7% IVA90$",0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","092","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"593"," S","N","N","S","N","799"  ,"DEV IVACOM10% IRPF7%",0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","093","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"595","S","N","N","S","N","799"  ,"DEV IRNR12%yIVA22%IV",0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","095","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"596","S","N","N","S","N","111"  ,"INRN"                ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","096","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"600","S","N","N","S","N","799"  ,"DEV RET IN ON 3%"    ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","100","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"601","S","N","N","S","S","511"  ,"IVA 14%+COFIS (INCL)",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"602","S","N","N","S","S","511"  ,"IVA 23%+COFIS (INCL)",0.00,0.00,"N","N","M460LURU","N","N","B","" ,"" ,"" ,"","","1",""   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"605","S","N","N","S","N","799"  ,"DEV RET 10,5% IRPF"  ,0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","005","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"615","S","N","N","S","N","799"  ,"DEV IVACOM10% IRPF7%",0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","015","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"612","S","N","N","S","N","612"  ,"DEV10% IRPD7% IVA90$",0.00,0.00,"" ,"" ,""        ,"" ,"" ,"" ,"" ,"" ,"" ,"","","1","016","" ,"" ,"" ,"" ,"1"})
/*ITENS NOVOS*/	
AADD(aRecnoSF4,{cFilSF4,"111","E","N","N","S","S","111"  ,"GAST.HON.IV.EX.IRPF ",0.00,0.00,"N","N","","N","N","B","" ,"" ,"" ,"","","1","611"   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"112","E","N","N","S","S","111"  ,"GAST.HON.IV.BAS.IRPF",0.00,0.00,"N","N","","N","N","B","" ,"" ,"" ,"","","1","612"   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"113","E","N","N","S","S","111"  ,"GAST.SRV.IV.EX.IRPF" ,0.00,0.00,"N" ,"" ,"","" ,"" ,"" ,"" ,"" ,"" ,"","","1","613","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"114","E","N","N","S","S","111"  ,"GAST.SRV.IV.BAS.IRPF",0.00,0.00,"N" ,"" ,"","" ,"" ,"" ,"" ,"" ,"" ,"","","1","614","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"115","E","N","N","S","S","111"  ,"GAST.ARRD.IV.EX.IRPF",0.00,0.00,"N" ,"" ,"","" ,"" ,"" ,"" ,"" ,"" ,"","","1","615","" ,"" ,"" ,"" ,"1"})  

AADD(aRecnoSF4,{cFilSF4,"611","S","N","N","S","S","511"  ,"GAST.HON.IV.EX.IRPF ",0.00,0.00,"N","N","","N","N","B","" ,"" ,"" ,"","","1","111"   ,"2","" ,"" ,"" ,"" })
AADD(aRecnoSF4,{cFilSF4,"613","S","N","N","S","S","511"  ,"GAST.SRV.IV.EX.IRPF" ,0.00,0.00,"N" ,"" ,"","" ,"" ,"" ,"" ,"" ,"" ,"","","1","113","" ,"" ,"" ,"" ,"1"})
AADD(aRecnoSF4,{cFilSF4,"614","S","N","N","S","S","511"  ,"GAST.SRV.IV.BAS.IRPF",0.00,0.00,"N" ,"" ,"","" ,"" ,"" ,"" ,"" ,"" ,"","","1","114","" ,"" ,"" ,"" ,"1"})

Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SFBURU    ³ Autor ³ Microsiga            | Data ³ 11/09/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Alimentar array de impostos para Uruguai                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SFBURU()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Localizacoes                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function SFBURU( aRecnoSFB , cFilSFB , lIntEIC , aRecSFBEIC )

AADD(aRecnoSFB,{cFilSFB,"IVA","IVA 0%                   "      ,"1","M100IVA"   ,"M460IVA"      , 3, 3,  0.00,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IV2","IVA MINIMO               "      ,"1","M100IVA"   ,"M460IVA"      , 2, 2, 10.00,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IV3","IVA BASICO               "      ,"1","M100IVA"   ,"M460IVA"      , 2, 2, 22.00,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IV4","IVA BASICO INDIRECTO     "      ,"2","M100IVA"   ,"M460IVA"      , 2, 2, 22.00,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IV5","IVA MINIMO INDIRECTO     "      ,"2","M100IVA"   ,"M460IVA"      , 2, 2, 10.00,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IV6","IVA IMPORTACAO           "      ,"J","M100IVA"   ,"M460IVA"      , 2, 2, 10.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IV7","IVA IMPORTACAO           "      ,"J","M100IVA"   ,"M460IVA"      , 2, 2, 20.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IV8","ANTICIPO IVA             "      ,"K","M100IIA"   ,"M460IIA"      , 2, 2, 10.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"COF","C.O.F.I.S. 3%            "      ,"3","M100COF"   ,"M460COF"      , 3, 3,  3.00,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IMS","IMESI                    "      ,"4","M100IMS"   ,"M460IMS"      , 4, 4,  0.00,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"BA1","IMEBA PRINCIPAL          "      ,"5","M100BA1" 	,"M460BA1"		, 5, 5,  0.00,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"BA2","IMEBA ADICIONAL (Art. 8) "      ,"6","M100BA_ADI","M460BA_ADI"	, 6, 6,  0.20,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"BA3","IMEBA ADICIONAL (Art. 9) "      ,"7","M100BA_ADI","M460BA_ADI"	, 7, 7,  0.40,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"CFI","C.O.F.I.S. INCLUIDO 3%   "      ,"3","M100COFI" 	,"M460COFI"		, 3, 3,  3.00,"30","","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"FIS","FONDO DE INSPECCION SANITARIA"  ,"8","M100FIS" 	,"M460FIS"		, 8, 8,  1.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"INC","IMPUESTO NACIONAL DE CARNES  "  ,"9","M100INC" 	,"M460INC"		, 9, 9,  0.70,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"PFI","PERCEPCION FIJA SOBRE IVA    "  ,"A","M100PFI" 	,"M460PFI"		,10,10, 20.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"PVI","PERCEPCION VARIABEL SOBRE IVA"  ,"B","M100PVI" 	,"M460PVI"		,11,11, 14.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"TCF","TASA DE CONTROL DE FAENA     "  ,"C","M100TCF" 	,"       "		,12,12, 00.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"RIV","RETENCAO DE IVA FLETE        "  ,"D","M100RIV" 	,"       "		,13,13, 60.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"SCB","SEGURO CONTRA BRUCELOSIS     "  ,"E","M100SCB" 	,"M460SCB"		,14,14, 00.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IRP","IRPF"                           ,"F","M100IRF" 	,"M460IRF"		,15,15, 00.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"IRN","IRNR 12%"                       ,"H","M100IRF" 	,"M460IRF"		,16,16, 12.00,""  ,"","N","" ,"2" ,"" })        
AADD(aRecnoSFB,{cFilSFB,"IR2","IRNR 10,5%"                     ,"H","M100IRF" 	,"M460IRF"		,16,16, 10.50,""  ,"","N","" ,"2" ,"" })        
AADD(aRecnoSFB,{cFilSFB,"IRA","IMPUESTO SOBRE LAS RENTAS IRAE 2.5%","G","M100IRAE"  ,"M460IRAE" ,14,14,02.50,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"ON" ,"ON 3%"                          ,"I","M100ON" 	,"M460ON"		,17,17, 03.00,""  ,"","N","" ,"2" ,"" })        
AADD(aRecnoSFB,{cFilSFB,"PFR","PERCEPCION FIJA SOBRE IRAE"     ,"L","M100PFR" 	,"M460PFR"		,18,18, 20.00,""  ,"","N","" ,"2" ,"" })
AADD(aRecnoSFB,{cFilSFB,"RI2","RETENCION IVA 90%        "      ,"M","M100RIVA"  ,"M460RIVA"     ,19,19, 90.00,""  ,"","N","" ,"2" ,"" })        

Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SFCURU    ³ Autor ³ Microsiga            | Data ³ 11/09/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Alimentar array de TES  x impostos para Uruguai            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SFCURU( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados dos TES x impostos    		  ³±±
±±³          ³ ExpC2 := Filial do arquivo SFC							  ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC							  ³±±
±±³          ³ ExpA4 := Array com os dados dos TESximpostos do SIGAEIC    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Localizacoes                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function SFCURU( aRecnoSFC , cFilSFC , lIntEIC , aRecSFCEIC )

AADD(aRecnoSFC,{cFilSFC,"001","01","IV2","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"002","01","IV5","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"003","01","BA1","2","2","2",""                 ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"004","01","BA1","2","2","2",""                 ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"004","02","BA2","2","2","2",""                 ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"005","01","BA1","2","2","2",""                 ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"005","02","BA3","2","2","2",""                 ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"006","01","BA1","2","2","2",""                 ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"006","02","BA2","2","2","2",""                 ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"006","03","BA3","2","2","2",""                 ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"007","01","IVA","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"008","01","IV3","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"009","01","IV4","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"011","01","IV2","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"012","01","IV5","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"013","01","IV3","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"014","01","IV4","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"015","01","IVA","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"016","01","IV2","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"017","01","IV5","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"018","01","IV3","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"019","01","IV4","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"021","01","IV6","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"021","02","IV8","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"022","01","IV7","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"022","02","IV8","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"021","02","IV8","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"031","01","IV5","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"031","02","PFI","2","2","3","IV5" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"032","01","IV4","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"032","02","PFI","2","2","3","IV4" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"033","01","IV3","1","1","3",""                 ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"033","02","IRA","3","3","3","IV3"              ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"034","01","PFR","3","3","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"080","01","IV4","1","1","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"080","02","RI2","3","3","3","IV4"              ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"081","01","IV2","1","1","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"081","02","RI2","3","3","3","IV2"              ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"085","01","IMS","3","3","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"090","01","IV4","1","1","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"090","02","IRP","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"091","01","IRP","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"092","01","IV2","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"092","02","IRP","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"093","01","RI2","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"093","02","IRP","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"095","01","IRN","2","2","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"095","02","IV4","1","1","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"096","01","IRN","2","2","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"100","01","ON" ,"3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"101","01","IV3","3","3","2",""                 ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"101","02","CFI","3","3","2","IV3"              ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"102","01","IV4","3","3","2",""                 ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"102","02","CFI","3","3","2","IV4"              ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"110","01","PFI","3","3","3","IV3"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"110","02","IV3","3","3","3","PFI"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"110","03","CFI","3","3","3","IV3;PFI"			,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"110","04","INC","3","3","3","IV3;CFI;PFI"		,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"120","01","PVI","3","3","3","IV3;CFI"			,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"120","02","IV3","3","3","3","PVI"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"120","03","CFI","3","3","3","IV3;PVI"			,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"120","04","FIS","3","3","3","IV3;PVI;CFI"		,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"120","05","INC","3","3","3","CFI;IV3;PVI;FIS"	,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"130","01","PFI","3","3","3","IV3"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"130","02","IV3","3","3","3","PFI"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"130","03","CFI","3","3","3","IV3;PFI"			,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"130","04","FIS","3","3","3","IV3;PFI;CFI"		,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"130","05","INC","3","3","3","CFI;IV3;PFI;FIS"	,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"140","01","FIS","3","3","3",""				    ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"140","02","INC","3","3","3","FIS"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"150","01","IV4","3","3","3",""				    ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"170","01","IVA","1","1","3",""	  				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"170","02","RIV","2","3","3","IVA"				,0.00,"I","S","N","" ,"I" })

AADD(aRecnoSFC,{cFilSFC,"501","01","IV2","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"502","01","IV5","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"503","01","BA1","2","2","2",""  	            ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"504","01","BA1","2","2","2",""		            ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"504","02","BA2","2","2","2",""	                ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"505","01","BA1","2","2","2",""		            ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"505","02","BA3","2","2","2",""		            ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"506","01","BA1","2","2","2",""		            ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"506","02","BA2","2","2","2",""		            ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"506","03","BA3","2","2","2",""		            ,0.00,"I","S","N","1","I" })
AADD(aRecnoSFC,{cFilSFC,"507","01","IVA","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"508","01","IV3","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"509","01","IV4","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"510","01","PFI","3","3","3","IV3"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"510","02","IV3","3","3","3","PFI"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"510","03","CFI","3","3","3","IV3;PFI"			,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"510","04","INC","3","3","3","IV3;CFI;PFI"		,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"511","01","IV2","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"512","01","IV5","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"513","01","IV3","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"514","01","IV4","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"515","01","IVA","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"516","01","IV2","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"517","01","IV5","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"518","01","IV3","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"519","01","IV4","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"520","01","PVI","3","3","3","IV3;CFI"			,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"520","02","IV3","3","3","3","PVI"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"520","03","CFI","3","3","3","IV3;PVI"			,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"520","04","FIS","3","3","3","IV3;PVI;CFI"		,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"520","05","INC","3","3","3","CFI;IV3;PVI;FIS"	,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"521","01","IV6","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"521","02","IV8","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"522","01","IV7","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"522","02","IV8","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"521","02","IV8","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"530","01","PFI","3","3","3","IV3"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"530","02","IV3","3","3","3","PFI"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"530","03","CFI","3","3","3","IV3;PFI"			,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"530","04","FIS","3","3","3","IV3;PFI;CFI"		,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"530","05","INC","3","3","3","CFI;IV3;PFI;FIS"	,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"531","01","IV5","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"531","02","PFI","2","2","3","IV5" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"532","01","IV4","1","1","3","" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"532","02","PFI","2","2","3","IV4" 				,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"533","01","IV3","1","1","3",""	                ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"533","02","IRA","3","3","3","IV3"	            ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"534","01","PFR","3","3","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"540","01","FIS","3","3","3",""				    ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"540","02","INC","3","3","3","FIS"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"550","01","IV4","3","3","3",""				    ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"570","01","IVA","1","1","3",""  				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"570","02","RIV","2","3","3","IVA"				,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"580","01","IV4","1","1","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"580","02","RI2","2","2","3","IV4"              ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"581","01","IV2","1","1","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"581","02","RI2","2","2","3","IV2"              ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"585","01","IMS","3","3","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"590","01","IV4","1","1","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"590","02","IRP","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"591","01","IRP","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"592","01","IV2","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"592","02","IRP","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"593","01","RI2","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"593","02","IRP","3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"595","01","IRN","2","2","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"595","02","IV4","1","1","3",""                 ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"596","01","IRN","2","2","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"600","01","ON" ,"3","3","3",""		            ,0.00,"I","" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"601","01","IV3","3","3","2",""                 ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"601","02","CFI","3","3","2","IV3"              ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"602","01","IV4","3","3","2",""                 ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"602","02","CFI","3","3","2","IV4"              ,0.00,"I","S","N","" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"605","01","IRP","3","3","3",""		            ,0.00,"" ,"" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"612","01","IRP","3","3","3",""		            ,0.00,"" ,"" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"615","01","IRP","3","3","3",""		            ,0.00,"" ,"" ,"" ,"" ,"I" })
/*itens novos Uruguai*/       
AADD(aRecnoSFC,{cFilSFC,"111","01","IV3","1","1","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"111","02","IRP","3","3","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"112","01","IV3","1","1","3",""                 ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"112","02","IRP","3","3","3",""                 ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"113","01","IV3","1","1","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"113","02","IRP","3","3","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"114","01","IV3","1","1","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"114","02","IRP","3","3","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"115","01","IV3","1","1","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"115","02","IRP","3","3","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })   
AADD(aRecnoSFC,{cFilSFC,"611","01","IV3","1","1","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"611","02","IRP","3","3","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"612","01","IV3","1","1","3",""                 ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"612","02","IRP","3","3","3",""                 ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"613","01","IV3","1","1","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"613","02","IRP","3","3","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"614","01","IV3","1","1","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })
AADD(aRecnoSFC,{cFilSFC,"614","02","IRP","3","3","3",""		            ,0.00,"I","S" ,"" ,"" ,"I" })

Return( NIL )

Function SFFURU( aRecnoSFF , cFilSFF , lIntEIC , aRecSFFEIC )
	AADD(aRecnoSFF,{cFilSFF, 23.00,"","","183","",0.00,"",0.00,"","",    0.00,"VINOS FINOS, ESPUMANTES ESPECIALES VERMOUTH Y CHAMPAGNE"                                   ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","","001","","","460" ,1})
	AADD(aRecnoSFF,{cFilSFF, 11.00,"","","183","",0.00,"",0.00,"","",    0.00,"ALCOHOLES POTABLES, INCLUSO VINICOS;EXCEPTO LOS INCLUIDOS EN EL  NUMERAL SIGUIENTE:"       ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","","002","","","460" ,1})
	AADD(aRecnoSFF,{cFilSFF, 10.50,"","","183","",0.00,"",0.00,"","",    0.00,"ALCOHOLES POTABLES, INCLUSO VINICOS HASTA 12 GRAUS P/USO OPOTERAPICO Y FARMACEUTICOS"      ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","","003","","","460" ,1})
	AADD(aRecnoSFF,{cFilSFF, 85.00,"","","183","",0.00,"",0.00,"","",    0.00,"BEBIDAS ALCOHOLICAS, INCLUSO CANA Y GRAPA"                                                 ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","","004","","","460" ,1})
	AADD(aRecnoSFF,{cFilSFF, 27.00,"","","183","",0.00,"",0.00,"","",    0.00,"CERVEZA"                                                                                   ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","","005","","","460" ,1})
	AADD(aRecnoSFF,{cFilSFF,  5.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"BEBIDAS SIN ALCOHOL ELABORADAS CON 10% COMO MINIMO DE JUGO DE FRUTAS URUGUAYAS"            ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 22.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"BEBIDAS SIN ALCOHOL ELABORADAS CON LIMON, AGUAS MINERALES Y SODAS"                         ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 30.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"OTRAS BEBIDAS SIN ALCOHOL NO COMPRENDIDAS EN LOS NUMERALES 6 Y 16"                         ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 20.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"COSMETICOS, PERFUMERIA EN GENERAL"                                                         ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 70.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"TABACOS, CIGARROS Y CIGARRILLOS"                                                           ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 60.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"VEHICULOS AUTOMOTORES CON MOTOR DIESEL DE PASAJEROS"                                       ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 35.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"VEHICULOS AUTOMOTORES CON MOTOR DIESEL UTILITARIO"                                         ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 40.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"VEHICULOS AUTOMOTORES DE PASAJEROS"                                                        ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 10.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"VEHICULOS AUTOMOTORES UTILITARIOS"                                                         ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 35.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"LUBRICANTES Y GRASAS LUBRICANTES"                                                          ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 15.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"LUBRICANTES Y GRASAS LUBRICANTES PARA SER UTILIZADOS EN LA AVIACION NACIONAL O DE TRANSITO",0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  5.26,"","",""   ,"",0.00,"",0.00,"","",    0.00,"COMBUSTIBLES UTILIZADOS POR LA AVIACION NACIONAL O DE TRANSITO"                            ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 30.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"AMARGOS SIN ALCOHOL O APERITIVOS NO ALCOHOLICOS"                                           ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF, 60.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"MOTORES DIESEL NO INCORPORADOS A LOS VEHICULOS A QUE SE REFIERE EL NUMERAL 11"             ,0.00,"",0.00,0.00,0.00,0.00,"","IMS","","","","","",""   ,"","",""    ,1})
	
	AADD(aRecnoSFF,{cFilSFF,  2.50,"","",""   ,"",0.00,"",0.00,"","",    0.00,"A) LANAS Y CUERO OVINOS Y BOVINOS"                                                         ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","001","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  1.65,"","",""   ,"",0.00,"",0.00,"","",    0.00,"B) GANADO BOVINO E OVINO"                                                                  ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","002","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  1.50,"","",""   ,"",0.00,"",0.00,"","",    0.00,"C) GANADO SUINO"                                                                           ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","003","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  2.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"D) CEREALES E OLEAGINOSOS"                                                                 ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","004","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  2.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"E) LECHE"                                                                                  ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","005","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  1.50,"","",""   ,"",0.00,"",0.00,"","",    0.00,"F) PRODUCTOS DERIVADOS DE LA AVICULTURA"                                                   ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","006","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  1.50,"","",""   ,"",0.00,"",0.00,"","",    0.00,"G) PRODUCTOS DERIVADOS DE LA APICULTURA"                                                   ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","007","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  1.50,"","",""   ,"",0.00,"",0.00,"","",    0.00,"H) PRODUCTOS DERIVADOS DE LA CUNICULTURA"                                                  ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","008","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  1.50,"","",""   ,"",0.00,"",0.00,"","",    0.00,"I) FLORES Y SEMILLAS"                                                                      ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","009","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  1.50,"","",""   ,"",0.00,"",0.00,"","",    0.00,"J) PRODUCTOS HORTICOLAS Y FRUTICULAS"                                                      ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","010","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  2.00,"","",""   ,"",0.00,"",0.00,"","",    0.00,"K) PRODUCTOS CITRICOLAS"                                                                   ,0.00,"",0.00,0.00,0.00,0.00,"","BA1","","","","","","011","","",""    ,1})
	AADD(aRecnoSFF,{cFilSFF,  2.50,"","","114","",0.00,"",0.00,"","",40000.00,"IRAE"                                                                                      ,0.00,"",0.00,0.00,0.00,0.00,"","IRA","","","","","","001","","","123" ,1})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"111","",    0.00,"IVA"           									                                      ,0.00,"",0.00,0.00,0.00,0.00,"","IVA","","","","","","","","","401"})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"","511",    0.00,"IVA"           									                                      ,0.00,"",0.00,0.00,0.00,0.00,"","IVA","","","","","","","","","214"})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"111","",    0.00,"COMPRA IVA MINIMO"           									                          ,0.00,"",0.00,0.00,0.00,0.00,"","IV2","","","","","","","","","506"})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"","511",    0.00,"VENTA IVA MINIMO"           									                          ,0.00,"",0.00,0.00,0.00,0.00,"","IV2","","","","","","","","","503"})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"111","",    0.00,"COMPRA IVA BASICO"           									                          ,0.00,"",0.00,0.00,0.00,0.00,"","IV3","","","","","","","","","505"})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"","511",    0.00,"VENTA IVA BASICO"           									                          ,0.00,"",0.00,0.00,0.00,0.00,"","IV3","","","","","","","","","502"})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"111","",    0.00,"COMPRA IVA MINIMO"           									                          ,0.00,"",0.00,0.00,0.00,0.00,"","IV4","","","","","","","","","505"})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"","511",    0.00,"VENTA IVA MINIMO"           									                          ,0.00,"",0.00,0.00,0.00,0.00,"","IV4","","","","","","","","","502"})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"111","",    0.00,"COMPRA IVA MINIMO"           									                          ,0.00,"",0.00,0.00,0.00,0.00,"","IV5","","","","","","","","","506"})
	AADD(aRecnoSFF,{cFilSFF, 0.00,"","","","",0.00,"",0.00,"","511",    0.00,"VENTA IVA MINIMO"           									                          ,0.00,"",0.00,0.00,0.00,0.00,"","IV5","","","","","","","","","503"})
	/*Novos grupos do IRP */
	AADD(aRecnoSFF,{cFilSFF, 7.00,"","","136","" ,0.00,"",0.00,"111","511",    22871.00,"IRPF RENTAS DEL TRABAJO POR SERVICIOS PERSONALES"           				  ,0.00,"",0.00,0.00,0.00,0.00,"","IRP","","","","","","001","","","336",1})
	AADD(aRecnoSFF,{cFilSFF, 7.00,"","","136","" ,0.00,"",0.00,"111","511",    0.00,    "IRPF RENTAS DEL TRABAJO POR SERVICIOS DE TRANSPORTE"           			  ,0.00,"",0.00,0.00,0.00,0.00,"","IRP","","","","","","002","","","336",1})
	AADD(aRecnoSFF,{cFilSFF, 10.50,"","","171","",0.00,"",0.00,"111","511",    0.00,	"IRPF DE CAPITAL POR ALQUILERES"           									  ,0.00,"",0.00,0.00,0.00,0.00,"","IRP","","","","","","003","","","371",1})
	AADD(aRecnoSFF,{cFilSFF, 12.00,"","","36","" ,0.00,"",0.00,"111","511",    0.00,    "IRPF DE CAPITAL POR INTERESES"           									  ,0.00,"",0.00,0.00,0.00,0.00,"","IRP","","","","","","004","","","336",1})
	/*Novos grupos do RI2 */
	AADD(aRecnoSFF,{cFilSFF, 90.00,"","","","" ,0.00,"",0.00,"111","511",    40000.00,"RETENCION IVA SEGURIDAD Y LIMPIEZA"           				  				  ,0.00,"",0.00,0.00,0.00,0.00,"","RI2","","","","","","001","","","",1})
	AADD(aRecnoSFF,{cFilSFF, 90.00,"","","","" ,0.00,"",0.00,"111","511",    0.00,"RETENCION IVA SEGURIDAD Y LIMPIEZA"           				                      ,0.00,"",0.00,0.00,0.00,0.00,"","RI2","","","","","","001","","","",1})

//	FILIAL,ALIQ,NUM, MES, ITEM, ATE, ALQINS, CFO, ALQNO, CFO-C, CFO-V, IMPORTE, CONCEPT, DE, DESDE, ATE, RETENC, PERC, EXCEDE, ESCALA,IMPOSTO , SERIE, TIPO, ZONFIS, TEC,GRUPO, REGIAO, GRUPPRO, CONIRP
//		01  02   03  04    05    06    07    08    09     10      11     12       13     14    15    16    17     18    19       20     21       22     23    24     25   26      27      28       29
Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CHKFOLCHI   ºAutor³Vendas CRM		     º Data ³ 18/03/11    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validar os dados do controle de formulários - Chile  - F1CHIº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³ExpL1 := ChkFolCHI(ExpC1,ExpC2,ExpC3,;				      º±±
±±º			 ³					 ExpC4,ExpN5,ExpL6)					      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ExpC1 - Filial							                  º±±
±±º			 ³ExpC2 - Serie do Lote/Controle de Formulario                º±±
±±º			 ³ExpC3 - Numero do formulario				                  º±±
±±º			 ³ExpC4 - Lista de codigos das especies validas para operacao º±±
±±º			 ³ExpN5 - Numero do RECNO do controle de formulario (SFP) 	  º±±
±±º			 ³ExpL6 - Carrega os formularios reservados para a estacao	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ExpL1 - Indica se o formulario eh valido                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SigaLoja/FrontLoja - Release 11.5 - Chile                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/  
Function ChkFolCHI( cFil,		cSerieFo,	cFol,	cListEspOp,;
					_nRecnoFo,	lLoadFol )

Local aArea   := GetArea() 			//Area
Local aSFP    := SFP->(GetArea())  //Area da tabela SFP
Local lNumDoc := .F.				//Indica se o numero do documento eh valido  
Local cNumIni := ""                 //Numero inicial do range
Local cNumFim := ""                 //Numero Final do Range
Local lRet    := .T.                //Retorno
Local nCont	  := 0                  //Contador para indicar quantos controles de formularios existem para a mesma serie
Local lReserv := Iif(nModulo==5,.T.,.F.)	//Indica se a serie esta reservada para a estacao - Para o Modulo SIGAFAT nao eh obrigatorio a serie estar reservada para uma estacao - Release 11.5 - Chile - F2CHI

DEFAULT cFil 		:= cFilAnt 
DEFAULT cSerieFo	:= ""
DEFAULT cFol 		:= ""
DEFAULT cListEspOp	:= ""
DEFAULT lLoadFol	:= .F.

cSerieFo:= subStr(cSerieFo,1,3)
DbSelectArea("SFP")
DbSetOrder(1)
If DbSeek(xFilial("SFP") + cFil + cSerieFo)  
	cNumIni := FP_NUMINI
	If	!Empty(cFol) .AND. !lLoadFol		
		While FP_FILIAL+FP_FILUSO+FP_SERIE == xFilial("SFP")+cFil+cSerieFo	  	
			If Val(cFol) >= Val(SFP->FP_NUMINI) .AND.;
				Val(cFol) <= Val(SFP->FP_NUMFIM) 
				
				If 	dDataBase <= SFP->FP_DTAVAL .AND. SFP->FP_ATIVO == "1"						 
					lNumDoc := .T.
					_nRecnoFo:= SFP->(Recno())
					nCont++
					Exit													
				EndIf      					
			EndIf
			cNumFim := FP_NUMFIM			
			SFP->(dbSkip())
		End    	
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verificar se a serie esta reservada para a estacao caso o³
	//³formulario seja valido.                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If !(nModulo==5 .AND. lReserv) 
		If lNumDoc .OR. lLoadFol 	
			DbSelectArea("SL6")
			DbSetOrder(3)
			If DbSeek(xFilial("SL6")+cEstacao)
				Do While SL6->L6_ESTACAO == cEstacao
					If (SL6->L6_ESPFO) $ cListEspOp .AND. ;
						L6_FILFO == SFP->FP_FILUSO .AND. ;
						L6_CAIFO == SFP->FP_CAI .AND.;
						L6_NRINIFO == SFP->FP_NUMINI .AND.; 
						L6_NRFIMFO == SFP->FP_NUMFIM .AND.;
						L6_ESPFO == SFP->FP_ESPECIE
						
						_nRecnoFo := SFP->(RECNO())
				    	lReserv := .T.
				    	Exit
					EndIf
					SL6->(DbSkip())				
				EndDo
			EndIf
		EndIf
	EndIf
	
	If nCont > 1 .AND. !lLoadFol
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Alertar caso exista mais de um controle de ³
		//³formulario (range) para a serie informada  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet := .F.
		_nRecnoFo := 0 	 
		MsgStop (STR0087 + " " + AllTrim(cSerieFo) + "." + STR0088)//"Existe mais de um controle de formulario para a série" # "Este processo sera cancelado."			
	EndIf
		
	If !lNumDoc .AND. !lLoadFol
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Se o numero do formulario nao pertecer a nenhum controle de formulario ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet := .F.
		_nRecnoFo := 0  
		MsgAlert(STR0052 + " (" + AllTrim(cSerieFo) + ": " + AllTrim(cNumIni) + " - " + AllTrim(cNumFim) + ") " + STR0078 + ": " + cFol ,STR0021)		// "Este folio nao pertence ao intervalo desta serie"###"ou Data de Validez vencida."### "Atencion"
	EndIf
	
	If lNumDoc .AND. !lReserv 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Alertar se a serie nao estiver reservada para a estacao³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		_nRecnoFo := 0
		lRet := .F.	  
		MsgAlert(STR0089 + AllTrim(cSerieFo) + STR0090 + cEstacao + STR0091)//"A serie " # " não está reservada para a estação " # " ou a espécie do controle de formularios associado a esta serie não é válida para esta operação."		
	EndIf
	
Else
	lRet := .F.      
	_nRecnoFo := 0  
	MsgAlert(STR0053 + ": " + cSerieFo,STR0051)   //"Esta serie nao esta registrada no controle de folios."
EndIf

RestArea(aSFP)
RestArea(aArea)              

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CHKFOLCOL   ºAutor³Joao Paulo Tavares  º Data ³ 02/06/11    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validar os dados do controle de formulários - COL			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³ExpL1 := ChkFolCol(ExpC1,ExpC2,ExpC3,;				      º±±
±±º			 ³					 ExpC4,ExpN5,ExpL6)					      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ExpC1 - Filial							                  º±±
±±º			 ³ExpC2 - Serie do Lote/Controle de Formulario                º±±
±±º			 ³ExpC3 - Numero do formulario				                  º±±
±±º			 ³ExpC4 - Lista de codigos das especies validas para operacao º±±
±±º			 ³ExpN5 - Numero do RECNO do controle de formulario (SFP) 	  º±±
±±º			 ³ExpL6 - Carrega os formularios reservados para a estacao	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ExpL1 - Indica se o formulario eh valido                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SigaLoja/FrontLoja - Release 11.5 - Colombia                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/  
Function ChkFolCol( cFil,		cSerieFo,	cFol,	cListEspOp, _nRecnoFo,	lLoadFol )

Local aArea   := GetArea() 					//Area
Local aSFP    := SFP->(GetArea())  		//Area da tabela SFP
Local lNumDoc := .F.						//Indica se o numero do documento eh valido  
Local cNumIni := ""                 		//Numero inicial do range
Local cNumFim := ""                 		//Numero Final do Range
Local lRet    := .T.                		//Retorno
Local nCont	  := 0                  		//Contador para indicar quantos controles de formularios existem para a mesma serie
Local lReserv := Iif(nModulo==5,.T.,.F.)	//Indica se a serie esta reservada para a estacao - Para o Modulo SIGAFAT nao eh obrigatorio a serie estar reservada para uma estacao

DEFAULT cFil 		:= cFilAnt 
DEFAULT cSerieFo	:= ""
DEFAULT cFol 		:= ""
DEFAULT cListEspOp	:= ""
DEFAULT lLoadFol	:= .F.

cSerieFo:=subStr(cSerieFo,1,3)
DbSelectArea("SFP")
DbSetOrder(1)
If DbSeek(xFilial("SFP") + cFil + cSerieFo) 
	cNumIni := SFP->FP_NUMINI
	If	!Empty(cFol) .AND. !lLoadFol		
		While SFP->FP_FILIAL+SFP->FP_FILUSO+SFP->FP_SERIE == xFilial("SFP")+cFil+cSerieFo 		
			If Val(cFol) >= Val(SFP->FP_NUMINI) .AND.;
				Val(cFol) <= Val(SFP->FP_NUMFIM) 
				If 	dDataBase <= SFP->FP_DTAVAL .AND. SFP->FP_ATIVO == "1"						 
					lNumDoc := .T.
					_nRecnoFo:= SFP->(Recno())
					nCont++
					Exit													
				EndIf      					
			EndIf
			cNumFim := SFP->FP_NUMFIM			
			SFP->(dbSkip())
		EndDo
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verificar se a serie esta reservada para a estacao caso o³
	//³formulario seja valido.                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If !(nModulo==5 .AND. lReserv) 
		If lNumDoc .OR. lLoadFol 	
			DbSelectArea("SL6")
			DbSetOrder(3)
			If DbSeek(xFilial("SL6")+cEstacao)
				Do While SL6->L6_ESTACAO == cEstacao
					If (SL6->L6_ESPFO) $ cListEspOp .AND. ;
						L6_FILFO == SFP->FP_FILUSO .AND. ;
						L6_CAIFO == SFP->FP_CAI .AND.;
						L6_NRINIFO == SFP->FP_NUMINI .AND.; 
						L6_NRFIMFO == SFP->FP_NUMFIM .AND.;
						L6_ESPFO == SFP->FP_ESPECIE
						_nRecnoFo := SFP->(RECNO())
				    	lReserv := .T.
				    	Exit
					EndIf
					SL6->(DbSkip())				
				EndDo
			EndIf
		EndIf
	EndIf
	If nCont > 1 .AND. !lLoadFol
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Alertar caso exista mais de um controle de ³
		//³formulario (range) para a serie informada  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet := .F.
		_nRecnoFo := 0 	 
		MsgStop (STR0087 + " " + AllTrim(cSerieFo) + "." + STR0088)//"Existe mais de um controle de formulario para a série" # "Este processo sera cancelado."			
	EndIf
	If !lNumDoc .AND. !lLoadFol
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Se o numero do formulario nao pertecer a nenhum controle de formulario ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet := .F.
		_nRecnoFo := 0  
		MsgAlert(STR0052 + " (" + AllTrim(cSerieFo) + ": " + AllTrim(cNumIni) + " - " + AllTrim(cNumFim) + ") " + STR0078 + ": " + cFol ,STR0021)		// "Este folio nao pertence ao intervalo desta serie"###"ou Data de Validez vencida."### "Atencion"
	EndIf
	If lNumDoc .AND. !lReserv 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Alertar se a serie nao estiver reservada para a estacao³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		_nRecnoFo := 0
		lRet := .F.	 
		MsgAlert(STR0089 + AllTrim(cSerieFo) + STR0090 + cEstacao + STR0091)//"A serie " # " não está reservada para a estação " # " ou a espécie do controle de formularios associado a esta serie não é válida para esta operação."		
	EndIf
Else
	lRet := .F.      
	_nRecnoFo := 0  
	MsgAlert(STR0053 + ": " + cSerieFo,STR0051)   //"Esta serie nao esta registrada no controle de folios."
EndIf
RestArea(aSFP)
RestArea(aArea)              

Return lRet         

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GrvRetSFE  ºAutor  ³Camila Januario    º Data ³  30/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Grava as retencoes e SFE sem gerar numero de certificado   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParam     ³ nTipOpe - tipo de operacao 1 entrada 2 saída               º±±
±±º          ³ aGerSfe - array contendo dados para gravar na SFE          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Localizacoes                                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GrvRetSFE(nTipOpe,aGerSfe,lApur)     

Local nSF3Bas  := 0
Local nSF3Val  := 0
Local nSF3Aliq := 0
Default lApur  := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se deleta a SFE - no caso de exclusão da nota
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If aGerSfe[1][1]	
	If !lApur		
		DbSelectArea("SFE")                                               
		SFE->(DbSetOrder(4))//FE_FILIAL+FE_FORNECE+FE_LOJA+FE_NFISCAL+FE_SERIE - OK
		If SFE->(DbSeek(xFilial("SFE")+Avkey(aGerSfe[1][5],"FE_FORNECE")+Avkey(aGerSfe[1][6],"FE_LOJA")+;  
			Avkey(aGerSfe[1][3],"FE_NFISCAL")+Avkey(aGerSfe[1][4],"FE_SERIE")))
			Do While SFE->(!Eof()) .And. SFE->FE_FORNECE==aGerSfe[1][5] .And. SFE->FE_LOJA==aGerSfe[1][6] ;
			.And. SFE->FE_NFISCAL==aGerSfe[1][3] .And. SFE->FE_SERIE==aGerSfe[1][4] 
				RecLock("SFE",.F.) 
					Dbdelete()
					SFE->(MsUnLock())
					SFE->(DbSkip())
			EndDo
	    EndIf     
	EndIf	    
Else 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ1
//³Gravação da SFE por total da nota conceito unico na nota    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ1  

	If Len(aGerSfe)>0	
	    If !lApur		
	    	DbSelectArea("SF3")
			SF3->(dbSetOrder(4))
				If SF3->(MsSeek(xFilial("SF3")+aGerSFE[1][5]+aGerSFE[1][6]+aGerSFE[1][3]+aGerSFE[1][4]))  				
					Do While SF3->(!EOF()) .AND. aGerSFE[1][5] == SF3->F3_CLIEFOR .AND. aGerSFE[1][6] == SF3->F3_LOJA .AND. aGerSFE[1][4] == SF3->F3_SERIE .AND. SF3->F3_VALIMP5 > 0 ;
					.AND. SF3->F3_NFISCAL == aGerSFE[1][3] .AND. SF3->F3_SERIE == aGerSFE[1][4]
						nSF3Bas += SF3->F3_BASIMP5
						nSF3Val	+= SF3->F3_VALIMP5
						nSF3Aliq := SF3->F3_ALQIMP5 //só tem uma aliquota por nota no caso do RHO, portanto não acumulo	
						dbSkip()
					EndDo										
				EndIf
			DbCloseArea()				
		EndIf
	EndIf
	
	Begin Transaction
	 	DbSelectArea("SFE")
		RecLock("SFE",.T.)
		SFE->FE_FILIAL	:= xFilial("SFE")		   		//Filial que está gerando o certificado
		SFE->FE_NROCERT	:= aGerSFE[1][2]			    //Numero Certificado			
		SFE->FE_EMISSAO	:= dDataBase			   	  	//Data Emissao
		SFE->FE_NFISCAL	:= aGerSFE[1][3]				//Numero da fatura
		SerieNfId("SFE",1,"FE_SERIE",,,,aGerSFE[1][4]) //PROJETO CHAVE UNICA
		//SFE->FE_SERIE	:= aGerSFE[1][4]				//Serie da fatura   
					
	 	If nTipOpe==1 
			SFE->FE_FORNECE	:= aGerSFE[1][5]			//Codigo do Fornecedor
			SFE->FE_LOJA   	:= aGerSFE[1][6]			//Loja			
		Else
			SFE->FE_CLIENTE	:= aGerSFE[1][5]			//Codigo do Cliente
			SFE->FE_LOJCLI 	:= aGerSFE[1][6]			//Loja			
		Endif
		If cPaisloc == "CHI"
			SFE->FE_TIPO	:= "H"							//tipo retencao ou imposto			
		ElseiF cPaisloc == "COS"
			SFE->FE_TIPO	:= "R"	
		EndIf 	
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¤[¿
		//³Para o Chile o Ret. Honorario conceito vem do Fornecedor³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¤[Ù
		If cPaisloc == "CHI"		
			DbSelectArea("SA2")
			DbSetOrder(1)
			If DbSeek(xFilial("SA2")+aGerSFE[1][5]+aGerSFE[1][6])
				SFE->FE_CONCEPT := SA2->A2_GRPTRIB
			Else
				SFE->FE_CONCEPT := ""
			EndIf				
		ElseIf cPaisloc == "COS" 
        	If !Empty(SB1->B1_CONRIR)
				SFE->FE_CONCEPT := SB1->B1_CONRIR
			Else
				SFE->FE_CONCEPT := ""
			EndIf
		EndIf	
				
		SFE->FE_ESPECIE	:= aGerSFE[1][11]		    //Especie da Nota
					
		If !lApur
			SFE->FE_ALIQ	:= nSF3Aliq				//Aliquota para o Calculo
			SFE->FE_VALBASE	:= nSF3Bas				//Base de calculo da retenção
			SFE->FE_VALIMP	:= nSF3Val				//Valor do imposto da retenção
			SFE->FE_RETENC	:= nSF3Val				//Valor da retenção			
		Else
			SFE->FE_VALBASE	:= aGerSFE[1][12]	    	   //Base de calculo acumulada
			SFE->FE_VLATUA  := aGerSFE[1][13]              //valor atual acumulado e c/ correcao monet.
			SFE->FE_ALIQ	:= aGerSFE[1][14]	     	   //Aliquota aplicada no acumulado por forn.
			SFE->FE_VALIMP	:= 0            		       //Valor do imposto da retenção 0 por ser sfe gerada na apuracao
			SFE->FE_FATATU  := aGerSFE[1][15]              //fator de atualizacao - correc.monet SM2 do periodo
			SFE->FE_RETENC	:= aGerSFE[1][16]		       //Valor da retenção acumulada
			SFE->FE_RETATU  := aGerSFE[1][17]              //valor da retencao acumulada e c/ correcao monet.
			SFE->FE_ACUM    := IIF(aGerSFE[1][18],"1","2") //1 = sim acumula, 2 = nao acumula
			SFE->FE_MESANO  := aGerSFE[1][19]			   //periodo da apuracao MMAAAA	
		EndIf 
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¤
		//³Para o Chile o Cod Retencao vem do imposto RHO na SFB 
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¤
		If cPaisloc == "CHI"            
			DbSelectArea("SFB") 
			SFB->(DbSetOrder(1))                                
			If SFB->(DbSeek(xFilial("SFB")+"RHO")) 
				SFE->FE_CODRET	:= SFB->FB_CODRET
			EndIf
		EndIf	
		SFE->(MsUnLock())
	End Transaction
EndIF

Return		  

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SFBAUS    ³ Autor ³ Luciana Pires       º Data ³ 18/08/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Alimentar array de impostos para Austrália      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SFBAUS()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ LOCXFUN.PRW                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function SFBAUS( aRecnoSFB , cFilSFB , lIntEIC , aRecSFBEIC )

aAdd(aRecnoSFB,{cFilSFB,"GST","Goods and Services Tax","1","M100GSTI","M460GSTI",0,0,10.00})		//Imposto Incluído
aAdd(aRecnoSFB,{cFilSFB,"LCT","Luxury Car Tax","2","M100LCT","M460LCT",0,0,33.00})
aAdd(aRecnoSFB,{cFilSFB,"CDU","Custom Duty","3","M100CDU","M460CDU",0,0,0.00})
aAdd(aRecnoSFB,{cFilSFB,"GS1","Goods and Serv. Tax Detached","4","M100GST","M460GST",0,0,10.00}) 		//Imposto Destacado
aAdd(aRecnoSFB,{cFilSFB,"FUE","Fuel Tax","5","M100FUE","M460FUE",0,0,0.00})
aAdd(aRecnoSFB,{cFilSFB,"EXC","Excise Duty","6","M100EXC","M460EXC",0,0,0.00})
aAdd(aRecnoSFB,{cFilSFB,"WET","Wine Equalisation Tax","7","M100WET","M460WET",0,0,29.00})

Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ SF4AUS    ³ Autor ³ Luciana Pires       º Data ³ 18/08/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Alimentar array de TES para Austrália          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SF4AUS( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados dos TES                        ³±±
±±³          ³ ExpC2 := Filial do arquivo SF4                             ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC                            ³±±
±±³          ³ ExpA4 := Array com os dados dos TES do SIGAEIC             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ LOCXFUN.PRW                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/	
Function SF4AUS( aRecnoSF4 , cFilSF4 , lIntEIC , aRecSF4EIC )
	// 1 F4_FILIAL  2 F4_CODIGO 3 F4_TIPO  6 F4_DUPLIC 7 F4_ESTOQUE 8 F4_CF 9 F4_TEXTO  23 F4_GERALF 24 F4_TESDV 29 F4_CALCIVA 
    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SF4 para o imposto GST ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSF4,{cFilSF4,"001","E","","","S","S","1101","Purchase GST"    	,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"002","E","","","S","S","1101","NCC GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","502","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"003","E","","","S","S","1101","NDE GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","503","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"004","E","","","S","S","1101","NCI GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","504","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"005","E","","","S","S","1101","NDP GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","505","","",0,0,"1","G"})
	
	//Saída
	aAdd(aRecnoSF4,{cFilSF4,"501","S","","","S","S","5101","Sales GST"     		,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"502","S","","","S","S","5101","NDC GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","002","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"503","S","","","S","S","5101","NCE GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","003","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"504","S","","","S","S","5101","NDI GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","004","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"505","S","","","S","S","5101","NCP GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","005","","",0,0,"1","G"})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SF4 para o imposto LCT ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSF4,{cFilSF4,"006","E","","","S","S","1101","Purchase LCT + GST"    	,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"007","E","","","S","S","1101","NCC LCT + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","507","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"008","E","","","S","S","1101","NDE LCT + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","508","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"009","E","","","S","S","1101","NCI LCT + GST"       	   		,0.00,0.00,"N","N","","","","","","","","","","1","509","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"010","E","","","S","S","1101","NDP LCT + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","510","","",0,0,"1","G"})

	//Saída	
	aAdd(aRecnoSF4,{cFilSF4,"506","S","","","S","S","5101","Sales LCT + GST"     		,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"507","S","","","S","S","5101","NDC LCT + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","007","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"508","S","","","S","S","5101","NCE LCT + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","008","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"509","S","","","S","S","5101","NDI LCT + GST"       			,0.00,0.00,"N","N","","","","","","","","","","1","009","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"510","S","","","S","S","5101","NCP LCT + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","010","","",0,0,"1","G"})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SF4 para o imposto CDU ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSF4,{cFilSF4,"011","E","","","S","S","1101","Purchase CDU + GS1"    	,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"012","E","","","S","S","1101","NCC CDU + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","511","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"013","E","","","S","S","1101","NDE CDU + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","512","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"014","E","","","S","S","1101","NCI CDU + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","513","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"015","E","","","S","S","1101","NDP CDU + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","514","","",0,0,"1","G"})

	//Saída	
	aAdd(aRecnoSF4,{cFilSF4,"511","S","","","S","S","5101","NDC CDU + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","012","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"512","S","","","S","S","5101","NCE CDU + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","013","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"513","S","","","S","S","5101","NDI CDU + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","014","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"514","S","","","S","S","5101","NCP CDU + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","015","","",0,0,"1","G"})
     
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SF4 para o imposto FUE ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSF4,{cFilSF4,"016","E","","","S","S","1101","Purchase FUE + GST"    	,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"017","E","","","S","S","1101","NCC FUE + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","515","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"018","E","","","S","S","1101","NDE FUE + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","516","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"019","E","","","S","S","1101","NCI FUE + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","517","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"020","E","","","S","S","1101","NDP FUE + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","518","","",0,0,"1","G"})

	//Saída	
	aAdd(aRecnoSF4,{cFilSF4,"515","S","","","S","S","5101","NDC FUE + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","017","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"516","S","","","S","S","5101","NCE FUE + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","018","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"517","S","","","S","S","5101","NDI FUE + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","019","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"518","S","","","S","S","5101","NCP FUE + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","020","","",0,0,"1","G"})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SF4 para o imposto EXC ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSF4,{cFilSF4,"021","E","","","S","S","1101","NCC EXC + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","520","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"022","E","","","S","S","1101","NDE EXC + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","521","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"023","E","","","S","S","1101","NCI EXC + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","522","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"024","E","","","S","S","1101","NDP EXC + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","523","","",0,0,"1","G"})

	//Saída	
	aAdd(aRecnoSF4,{cFilSF4,"519","S","","","S","S","5101","Sales EXC + GST"     		,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"520","S","","","S","S","5101","NDC EXC + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","021","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"521","S","","","S","S","5101","NCE EXC + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","022","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"522","S","","","S","S","5101","NDI EXC + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","023","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"523","S","","","S","S","5101","NCP EXC + GST"       		,0.00,0.00,"N","N","","","","","","","","","","1","024","","",0,0,"1","G"})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SF4 para o imposto WET ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSF4,{cFilSF4,"025","E","","","S","S","1101","Purchase WET + GS1"     ,0.00,0.00,"N","N","","","","","","","","","","1","","   ","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"026","E","","","S","S","1101","NCC WET + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","525","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"027","E","","","S","S","1101","NDE WET + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","526","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"028","E","","","S","S","1101","NCI WET + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","527","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"029","E","","","S","S","1101","NDP WET + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","528","","",0,0,"1","G"})

	//Saída	
	aAdd(aRecnoSF4,{cFilSF4,"524","S","","","S","S","5101","Sales WET + GS1"     		,0.00,0.00,"N","N","","","","","","","","","","1","   ","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"525","S","","","S","S","5101","NDC WET + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","026","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"526","S","","","S","S","5101","NCE WET + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","027","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"527","S","","","S","S","5101","NDI WET + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","028","","",0,0,"1","G"})
	aAdd(aRecnoSF4,{cFilSF4,"528","S","","","S","S","5101","NCP WET + GS1"       		,0.00,0.00,"N","N","","","","","","","","","","1","029","","",0,0,"1","G"})
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ SFCAUS    ³ Autor ³ Luciana Pires       º Data ³ 18/08/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Alimentar array de TES  x impostos para Austrália    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SFCAUS( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados dos TES x impostos             ³±±
±±³          ³ ExpC2 := Filial do arquivo SFC                             ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC                            ³±±
±±³          ³ ExpA4 := Array com os dados dos TESximpostos do SIGAEIC    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ LOCXFUN.PRW                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function SFCAUS( aRecnoSFC , cFilSFC , lIntEIC , aRecSFCEIC )
//1 FC_FILIAL, 2 FC_TES, 3 FC_SEQ, 4 FC_IMPOSTO, 5 FC_INCDUPL, 6 FC_INCNOTA, 7 FC_CREDITA, 8 FC_INCIMP, 9 FC_BASE, 10 FC_CALCULO, 11 FC_LIQUIDO, 12 FC_INTEIC, 13 FC_AGRBASE

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SFC para o imposto GST ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSFC,{cFilSFC,"001","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"002","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"003","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"004","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"005","01","GST","3","3","3","",0.00,"I","S","",""})
	 
	//Saída
	aAdd(aRecnoSFC,{cFilSFC,"501","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"502","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"503","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"504","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"505","01","GST","3","3","3","",0.00,"I","S","",""})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SFC para o imposto LCT ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSFC,{cFilSFC,"006","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"006","02","LCT","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"007","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"007","02","LCT","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"008","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"008","02","LCT","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"009","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"009","02","LCT","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"010","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"010","02","LCT","1","1","3","",0.00,"I","S","",""})
	
	//Saída
	aAdd(aRecnoSFC,{cFilSFC,"506","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"506","02","LCT","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"507","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"507","02","LCT","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"508","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"508","02","LCT","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"509","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"509","02","LCT","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"510","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"510","02","LCT","1","1","3","",0.00,"I","S","",""})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SFC para o imposto CDU ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSFC,{cFilSFC,"011","01","CDU","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"011","02","GS1","1","1","3","CDU",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"012","01","CDU","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"012","02","GS1","1","1","3","CDU",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"013","01","CDU","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"013","02","GS1","1","1","3","CDU",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"014","01","CDU","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"014","02","GS1","1","1","3","CDU",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"015","01","CDU","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"015","02","GS1","1","1","3","CDU",0.00,"I","S","",""})
	
	//Saída
	aAdd(aRecnoSFC,{cFilSFC,"511","01","CDU","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"511","02","GS1","1","1","3","CDU",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"512","01","CDU","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"512","02","GS1","1","1","3","CDU",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"513","01","CDU","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"513","02","GS1","1","1","3","CDU",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"514","01","CDU","1","1","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"514","02","GS1","1","1","3","CDU",0.00,"I","S","",""})
    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SFC para o imposto FUE ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSFC,{cFilSFC,"016","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"016","02","FUE","3","3","2","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"017","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"017","02","FUE","3","3","2","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"018","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"018","02","FUE","3","3","2","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"019","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"019","02","FUE","3","3","2","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"020","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"020","02","FUE","3","3","2","",0.00,"I","S","",""})
	
	//Saída
	aAdd(aRecnoSFC,{cFilSFC,"515","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"515","02","FUE","3","3","2","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"516","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"516","02","FUE","3","3","2","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"517","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"517","02","FUE","3","3","2","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"518","01","GST","3","3","3","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"518","02","FUE","3","3","2","",0.00,"I","S","",""})
    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SFC para o imposto EXC ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSFC,{cFilSFC,"021","01","EXC","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"021","02","GST","3","3","3","EXC",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"022","01","EXC","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"022","02","GST","3","3","3","EXC",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"023","01","EXC","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"023","02","GST","3","3","3","EXC",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"024","01","EXC","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"024","02","GST","3","3","3","EXC",0.00,"I","S","",""})
	
	//Saída
	aAdd(aRecnoSFC,{cFilSFC,"519","01","EXC","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"519","02","GST","3","3","3","EXC",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"520","01","EXC","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"520","02","GST","3","3","3","EXC",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"521","01","EXC","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"521","02","GST","3","3","3","EXC",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"522","01","EXC","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"522","02","GST","3","3","3","EXC",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"523","01","EXC","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"523","02","GST","3","3","3","EXC",0.00,"I","S","",""})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela SFC para o imposto WET ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Entrada
	aAdd(aRecnoSFC,{cFilSFC,"025","01","WET","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"025","02","GS1","3","3","3","WET",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"026","01","WET","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"026","02","GS1","3","3","3","WET",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"027","01","CDU","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"027","02","GS1","3","3","3","WET",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"028","01","CDU","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"028","02","GS1","3","3","3","WET",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"029","01","CDU","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"029","02","GS1","3","3","3","WET",0.00,"I","S","",""})
	
	//Saída
	aAdd(aRecnoSFC,{cFilSFC,"524","01","WET","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"524","02","GS1","3","3","3","WET",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"525","01","WET","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"525","02","GS1","3","3","3","WET",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"526","01","WET","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"526","02","GS1","3","3","3","WET",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"527","01","WET","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"527","02","GS1","3","3","3","WET",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"528","01","WET","1","1","1","",0.00,"I","S","",""})
	aAdd(aRecnoSFC,{cFilSFC,"528","02","GS1","3","3","3","WET",0.00,"I","S","",""})
Return Nil
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ CCRAUS    ³ Autor ³ Luciana Pires        º Data ³ 08/09/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Alimentar array de Conceitos ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ CCRAUS( ExpA1, ExpC2, ExpL3, ExpA4 )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 := Array com os dados                                ³±±
±±³          ³ ExpC2 := Filial do arquivo CCR                             ³±±
±±³          ³ ExpL3 := Integracao com SIGAEIC                            ³±±
±±³          ³ ExpA4 := Array com os dados do SIGAEIC                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Localizacoes - Austrália                                   ³±±                                                                                                                                     
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CCRAUS( aRecnoCCR , cFilCCR , lIntEIC , aRecCCREIC )                                                                  
// 1 CCR_FILIAL, 2 CCR_CONCEP, 3 CCR_DESCR, 4 CCR_ALIQ, 5 CCR_PAIS, 6 CCR_IMP, 7 CCR_VALOR, 8 CCR_UNID

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela CCR para o imposto FUE ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd(aRecnoCCR,{cFilCCR,"00000001","In a vehicle greater than 4.5 tonne GVM travelling on a public road - diesel and petrol",15.043,"","FUE"})
	aAdd(aRecnoCCR,{cFilCCR,"00000002","Agriculture, fishing, forestry, mining, marine transport, rail transport, nursing and medical - diesel, petrol and fuel oil",38.143,"","FUE"})
	aAdd(aRecnoCCR,{cFilCCR,"00000003","Burner applications - diesel, petrol, heating oil, kerosene and fuel oil",38.143,"","FUE"}) 
	aAdd(aRecnoCCR,{cFilCCR,"00000004","Fuel you use directly as a mould release, fuel you use as an ingredient in the manufacture of products - kerosene, fuel, oil, toluene, mineral, turpentine and white spirit",38.143,"","FUE"})
	aAdd(aRecnoCCR,{cFilCCR,"00000005","Packaging fuels in containers of 20 litres or less for non-internal combustion engine use - mineral turpentine, white spirit, kerosene and certain other fuels ",38.143,"","FUE"}) 
	aAdd(aRecnoCCR,{cFilCCR,"00000006","Supply of fuel for domestic heating - heating oil and kerosene",38.143,"","FUE"})	
	aAdd(aRecnoCCR,{cFilCCR,"00000007","Comercial generation plant, stationary generator, portable generator - diesel, petrol, heating oil, kerosene and fuel oil",38.143,"","FUE"}) 
	aAdd(aRecnoCCR,{cFilCCR,"00000008","Emergency vessels - diesel, petrol and fuel oil",38.143,"","FUE"})		
	aAdd(aRecnoCCR,{cFilCCR,"00000009","Construction, manufacturing, wholesale/retail, property management, landscaping - diesel and petrol",19.0715,"","FUE"}) 
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusão na tabela CCR para o imposto EXC ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd(aRecnoCCR,{cFilCCR,"1.1","Beer not exceeding 3% by volume of alcohol packaged in an individual container not exceeding 48 litres",36.71,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"1.2","Beer not exceeding 3% by volume of alcohol packaged in an individual container not exceeding 48 litres",7.33,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"1.5","Beer exceeding 3% but not exceeding 3.5% by volume of alcohol packaged in an individual container not exceeding 48 litres",42.78,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"1.6","Beer exceeding 3% but not exceeding 3.5% by volume of alcohol packaged in an individual container not exceeding 48 litres",23.01,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"1.10","Beer exceeding 3.5% by volume of alcohol packaged in an individual container not exceeding 48 litres",42.78,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"1.11","Beer exceeding 3.5% by volume of alcohol packaged in an individual container not exceeding 48 litres",30.11,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"1.15","Beer not exceeding 3% by volume of alcohol produced for non-commercial purposes using commercial facilities or equipment",2.58,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"1.16","Beer not exceeding 3% by volume of alcohol produced for non-commercial purposes using commercial facilities or equipment",2.98,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"2","Other excisable beverages not exceeding 10% by volume of alcoholt",72.46,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"3.1","Brandy",67.66,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"3.2","Other excisable beverages exceeding 10% by volume of alcoholt",72.46,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"3.5","Spirit that: (a) a person has an approval, under section 77FD of the Excise Act 1901, to use for fortifying Australian wine or Australian grape must; and (b) is otherwise covered by the approval",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"3.6","Spirit that: (a) is for use by person who is included in a class of persons determined under section 77FE of the Excise Act 1901; and (b) if a quantity is specified in a determination under that section in relation to the person - does not exceed that quantity; and (c) is for an industrial, manufacturing, scientific, medical, veterinary or educational purpose",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"3.7","Spirit that: (a) a person has an approval, under section 77FF of the Excise Act 1901, to use for an industrial manufacturing, scientific, medical, veterinary or educational purpose; and (b) is otherwise covered by the approval",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"3.8","Spirit  denatured according to a formula determined under section 77FG of the Excise Act 1901, other than spirit for use as fuel in an internal combustion engine",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"3.10","Spirits not elsewhere included",72.46,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"5.1","In stick form not exceeding in weight 0.8 grams per stick actual tobacco content",0.33633,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"5.5","Other",420.43,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.1","Petroleum condensate",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.2","Stabilised crude petroleum oil",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.3","Topped crude petroleum oil",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.5","Gasoline (other than for use as fuel in aircraft)",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.6","Gasoline for use as fuel in aircraft",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.7","Blends of gasoline and ethanol",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.10","Diesel (other than biodiesel)",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.11","Blends of diesel and ethanol",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.12","Blends of diesel and biodiesel",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.15","Heating oil",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.16","Kerosene (other than for use as fuel in aircraft)",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.17","Kerosene for use as fuel in aircraft",0.03556,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.18","Fuel oil",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.20","Denatured ethanol for use as fuel in an internal combustion engine",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.21","Biodiesel",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.25","Liquid aromatic hydrocarbons consisting principally of benzene, toluene or xylene or mixtures of them (other than goods covered by section 77J of the Excise Act 1901)",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.26","Mineral turpentine (other than goods covered by section 77J of the Excise Act 1901)",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.27","White spirit (other than goods covered by section 77J of the Excise Act 1901)",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.28","Petroleum products (other than blends) not elsewhere included (other than goods covered by section 77J of the Excise Act 1901)",0.38143,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"10.30","Blends of 1 or more of the above goods (with or without other substances) not elsewhere included that can be used as fuel in an internal combustion engine (other than goods covered by section 77J of the Excise Act 1901)",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"15.1","Petroleum-based oils (including lubricant/fluid/oil products) and their synthetic equivalents but not greases",0.05449,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"15.2","Petroleum-based oils (including lubricant/fluid/oil products and greases) and their synthetic equivalents, recycled for use as oils (including lubricant/fluid/oil products) but not greases",0.05449,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"15.3","Petroleum-based greases and their synthetic equivalents",0.05449,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"15.4","Petroleum-based oils (including lubricant/fluid/oil products and greases) and their synthetic equivalents, recycled for use as greases",0.05449,"","EXC"})       
	aAdd(aRecnoCCR,{cFilCCR,"20.1","As prescribed by by-law",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"20.2","Delayed-entry oil",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"20.3","Pre-threshold onshore oil",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"20.5","New oil",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"20.6","Intermediate oil",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"20.7","Other",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"21.1","As prescribed by by-law",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"21.2","Pre-threshold onshore condensate",0.0,"","EXC"})
	aAdd(aRecnoCCR,{cFilCCR,"21.3","Other",0.0,"","EXC"})	
	
Return Nil

//------------------------------------------------------------------------
/*/{Protheus.doc} ExisteCaea
Função que verifica se existe os dados do CAEA para o formulário que estás
sendo faturado, caso existir retorna com os dados.

@author Rafael Iaquinto
@since 08.04.2011
@version 1.0 

@param	cFil		Filial que esta sendo processada.
@param	cSer		Serie do documento a ser faturado.
@param	cFol		Numero do fomrmulário que o documento irá utilizar
@param	lLocxAuto	.T. se esta rodando em rotina automática.
@param	cEspecie	Especie do documento Fiscal.
@param	dEmissao	Data de Emissão do documento
@param	aDadosCAEA	Referência com os dados do CAEA se houver.

@return lRet		.F. se o documento for CAEA e não houver inf. na CG6

@obs		
/*/
//-----------------------------------------------------------------------
Function ExisteCaea( cFil, cSer, cFol, lLocxAuto, cEspecie, dEmissao, aDadosCAEA )
 
Local cNumIni := ""
Local cNumFim := ""
Local cModeloWs := ""
Local cCombo	:= ""
Local cAno		:= ""
Local cMes		:= ""
Local cPeriod	:= ""
Local cOrdem	:= ""
Local lRet    := .T.
Local lExisteCG6 := If(cPaisLoc == "ARG",.T.,.F.)
Local nPosIni := 0
Local aArea   := GetArea()
Local aSFP    := SFP->(GetArea())
Local aCG6    := Iif(lExisteCG6,CG6->(GetArea()),{})

DEFAULT cEspecie	:= "NF"
DEFAULT aDadosCAEA := {}

DbSelectArea("SFP")
DbSetOrder(5)

SX3->(dbSetOrder(2))
SX3->(dbSeek("FP_ESPECIE"))
nPosIni := At(AllTrim(cEspecie),AllTrim(SX3->X3_CBOX))
cCombo := Substr(AllTrim(SX3->X3_CBOX),nPosIni-2,1)
cSer := Substr(cSer,1,3)
If DbSeek(xFilial("SFP") + cFil + cSer + cCombo )	 
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a nota selecionada esta dentro de algum range cadastrado³
	//³ Necessario em caso de existir mais de um range com a mesma serie    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cNumIni := FP_NUMINI
	lFormPre:= If (cPaisloc == "ARG",.T.,.F.)

	While !Eof() .And. FP_FILIAL+FP_FILUSO+FP_SERIE+FP_ESPECIE == xFilial("SFP")+cFil+cSer+cCombo 		
		
		If AllTrim(FP_ESPECIE) == AllTrim(cCombo)		
			If lFormPre .And. FP_TIPOFOR =="2"
				If Val(cFol) >= Val(FP_NUMINI) .And. dDataBase <= FP_DTAVAL .And. SFP->FP_NFEEX == "6"
					cModeloWs := SFP->FP_NFEEX					
					Exit
				EndIf
	   		Else
				If Val(cFol) >= Val(FP_NUMINI) .And. Val(cFol) <= Val(FP_NUMFIM) .And. dDataBase <= FP_DTAVAL .And. SFP->FP_NFEEX == "6"
					cModeloWs := SFP->FP_NFEEX
					Exit
				EndIf
			EndIf		
			cNumFim := FP_NUMFIM
		EndIf
		SFP->(dbSkip())
	EndDo
	
	If cModeloWs == "6" .And. lExisteCG6
		
		cOrdem	:= Iif(Day(dEmissao) <= 15 ,"1" ,"2" )  
		cAno 		:= Alltrim(Str(Year(dEmissao)))
		cMes 		:= PadL(Alltrim(Str(Month(dEmissao))),2,"0")
		cPeriod	:= cAno+cMEs  		
		
		CG6->(dbSetOrder(2))				
		If CG6->( dbSeek(xFilial("CG6")+cFil+cPeriod+cOrdem) )
			
			aDadosCAEA := {CG6->CG6_CAEA,;								
								CG6->CG6_PERIOD,;
								CG6->CG6_ORDEM,;
								CG6->CG6_FHCVDE,;
								CG6->CG6_FHCVAT,;
								CG6->CG6_FHCTOP,;
								CG6->CG6_FHCPRC;
							}		
		Else
			lRet := .F.
		Endif	
				
	EndIf
	
	If !lRet		
		If !lLocxAuto
			MsgAlert(STR0092)	// "CAEA não encontrado para data de emissão do documento."
		EndIF
	EndIF		
EndIf

If lExisteCG6
	RestArea(aCG6)
EndIF

RestArea(aSFP)
RestArea(aArea)              

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fGetFolRel  ºAutor  ³Luis Samaniego   º Data ³  26/05/17   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Obtiene UUID Relacionados                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAFAT                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fGetFolRel(cTipoComp, lCadOrig)//Forma elemento cfdi:CfdiRelacionado
Local nLoop      := 0
Local nX         := 0
Local cUUIDRel   := ""
Local aUUIDRel   := {}
Local cTmpCadCFD := ""
Local cAuxCpo    := ""
Local lCpoSF1    := SF1->(ColumnPos("F1_SERMAN")) > 0 .And. SF1->(ColumnPos("F1_DOCMAN")) > 0
Local lCpoSF2    := SF2->(ColumnPos("F2_SERMAN")) > 0 .And. SF2->(ColumnPos("F2_DOCMAN")) > 0
Local lCpoSF3    := SF3->(ColumnPos("F3_STATUS")) > 0 .And. SF3->(ColumnPos("F3_CNATREC")) > 0
Local cSerSus    := ""
Local cDocSus    := ""
Local cUUIDSus   := ""
Local cAliasSF3  := xFilial("SF3")
Local aAreaSF3   :=	SF3->(GetArea())

Default lCadOrig := .F.

	If cTipoComp == "E"
		cAuxCpo := "SF1->F1_"
	ElseIf cTipoComp == "S"
		cAuxCpo :=  "SF2->F2_"
	EndIf

	If SF1->(ColumnPos("F1_UUIDREL")) > 0 .And. SF2->(ColumnPos("F2_UUIDREL")) > 0
		aUUIDRel := STRTOKARR(&(cAuxCpo + "UUIDREL"), CRLF)	
	EndIf
	If !(Empty(&(cAuxCpo + "RELSAT")))
		If lCadOrig
			cTmpCadCFD := AllTrim(&(cAuxCpo + "RELSAT")) + "|"
			For nLoop := 1 To Len(aUUIDRel)
				If !(Empty(aUUIDRel[nLoop]))
					cTmpCadCFD += AllTrim(aUUIDRel[nLoop]) + "|"
				EndIf
			Next nLoop
		Else
			cUUIDRel := Space(4) + '<cfdi:CfdiRelacionados TipoRelacion="' + AllTrim(&(cAuxCpo + "RELSAT")) + '">' + CRLF
			For nLoop := 1 To Len(aUUIDRel)
				If !(Empty(aUUIDRel[nLoop]))
					cUUIDRel += Space(8) + '<cfdi:CfdiRelacionado UUID="' + AllTrim(aUUIDRel[nLoop]) + '"/>' + IIf(nLoop <> Len(aUUIDRel), CRLF, "")
				EndIf
			Next nLoop
			cUUIDRel += CRLF + Space(4) + '</cfdi:CfdiRelacionados>' + CRLF
		EndIf
	EndIf

	If lCpoSF3 .And. (lCpoSF1 .Or. lCpoSF2)
		cSerSus  := &(cAuxCpo + "SERMAN")
		cDocSus  := &(cAuxCpo + "DOCMAN")
		If !(Empty(cSerSus)) .And. !(Empty(cDocSus))
			DbSelectArea("SF3")
			SF3->(DbSetOrder(5)) //F3_FILIAL+F3_SERIE+F3_NFISCAL+F3_CLIEFOR+F3_LOJA+F3_IDENTFT
			If SF3->(DbSeek(cAliasSF3 + cSerSus + cDocSus))
				While SF3->(!Eof()) .And. (SF3->F3_FILIAL+SF3->F3_SERIE+SF3->F3_NFISCAL) == (cAliasSF3 + cSerSus + cDocSus) 
					If Alltrim(F3_ESPECIE) == Alltrim(cEspecie)
						If SF3->F3_STATUS == "S"
							cUUIDSus := Alltrim(SF3->F3_CNATREC)
						EndIf
					EndIf
					SF3->(DbSkip())
				EndDo
			EndIf
			If !Empty(cUUIDSus)
				If lCadOrig
					cTmpCadCFD += "04|" + AllTrim(cUUIDSus) + "|"
				Else
					cUUIDRel += Space(4) + '<cfdi:CfdiRelacionados TipoRelacion="04">' + CRLF
					cUUIDRel += Space(8) + '<cfdi:CfdiRelacionado UUID="' + AllTrim(cUUIDSus) + '"/>' + CRLF
					cUUIDRel += Space(4) + '</cfdi:CfdiRelacionados>'
				EndIf
			EndIf
		EndIf
	EndIf

	//Cadena Original
	If !(Empty(cTmpCadCFD)).And. lCadOrig
		cCadOrig += cTmpCadCFD
	EndIf
	RestArea(aAreaSF3)
Return cUUIDRel

/*/{Protheus.doc} fImptosD
  Llena arreglo para hacer cuadre por centavos a estructura y cadena de XML para CFDI 3.3
  @type function
  @author luis.enrique
  @since 16/03/2018
  @version 1.0
  @param cDoc, Folio del documento
  		 cSerie, Serie del documento
  		 cCliente, Cliente del documento
  		 cLoja, Tienda del documento
  		 lTras, Indica si el documento es de traslado (F2_TIPODOC = 21) .T. = Si y .F. = No
  @return No aplica
  @example
  (examples)
  @see (links_or_references)
 /*/
Function fImptosD(cDoc, cSerie, cCliente, cLoja, lTras, cSDAlias, lGlobal , nIncluido, lCPorte, nDesCPorte, nImpCPorte)
Local aArea     := getArea()
Local nX        := 0
Local nY        := 0
Local nT        := 0
Local aDatProd  := {}
Local aImpos    := {}
Local aPartes   := {}
Local cAliasSD  := ""
Local nOrder    := 3
Local nOrd      := 0
Local cCampos   := ""
Local cTablas   := ""
Local cCond     := ""
Local cGroup    := ""
Local cOrder    := ""
Local cAliasImp := getNextAlias()
Local cAliasDet := getNextAlias()
Local nBasImp   := 0
Local nValImp   := 0
Local nAliq     := 0
Local nDifer    := 0
Local nDifAux   := 0
Local nDiferA   := 0
Local nDesc     := 0
Local nPos      := 0
Local nTotDet   := 0
Local nValMerc  := 0
Local nValBrut  := 0
Local nTotImp   := 0
Local nTotImpT  := 0
Local nTotImpR  := 0
Local nSubTot   := 0
Local aTras     := {}
Local aRet      := {}
Local nLoop     := 0
Local cTipoImp  := ""
Local cBasImpSD := ""
Local cValImpSD := ""
Local cValImpAL := ""
Local cValImpSF := ""
Local cTesD     := ""
Local lIncluido := .F.  
Local nValUnit  := 0
Local nImporte  := 0
Local nLimInf   := 0
Local nLimSup   := 0
Local nValorBrMe:= 0
Local nValorImp	:= 0
Local cDescSai	:= SuperGetMv("MV_DESCSAI",.T.,'2')
Local aImpAux   := {}
Local nImp      := 0
Local aResp     := {}
Local lAddVal	:= .T.
Local nValBoni	:= 0
Local nFlete	:= 0
Local nSeguro	:= 0
Local nDespesa	:= 0

Private cEspecie:= IIF(Empty(cSDAlias) .Or. cSDAlias == "SD2", SF2->F2_ESPECIE, SF1->F1_ESPECIE)

Default cSDAlias := "SD2"
Default lGlobal  := .F.
Default nIncluido := 0
Default lCPorte  := .F.

	aDetFac := {}
	aImpFact := {}
	aTrasLoc := {}
	aRetLoc  := {}    
	nIncluido := 0
	nImpCPorte := 0
	nDesCPorte := 0

	If cSDAlias == "SD1"
		cAliasSD  := "SD1"
		cBasImpSD := "D1_BASIMP"
		cValImpSD := "D1_VALIMP"
		cValImpAL := "D1_ALQIMP"
		cValImpSF := "F1_VALIMP"
		cTesD     := "D1_TES"
		nOrd      := RetOrdem("SD1","D1_FILIAL+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA+D1_COD+D1_ITEM")
	Else
		cAliasSD  := "SD2"
		cBasImpSD := "D2_BASIMP"
		cValImpSD := "D2_VALIMP"
		cValImpAL := "D2_ALQIMP"
		cValImpSF := "F2_VALIMP"
		cTesD     := "D2_TES"
		nOrd      := RetOrdem("SD2","D2_FILIAL+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA+D2_COD+D2_ITEM")
	EndIf

	//Impuestos de documento
	cCampos	:= "% SFB.FB_CODIGO, SFB.FB_CPOLVRO, SFB.FB_CLASSE, SFB.FB_IMPSAT, SFB.FB_DESCR, SFB.FB_ALIQ, SFC.FC_IMPOSTO, SFC.FC_INCDUPL  %"
	cTablas	:= "% " + RetSqlName(cAliasSD) + " " + cAliasSD + ", "  + RetSqlName("SFC") + " SFC, "  + RetSqlName("SFB") + " SFB %"

	If cSDAlias == "SD1"
		cCond	:= "% SD1.D1_DOC = '" + cDoc + "' AND SD1.D1_SERIE = '" + cSerie + "'"
		cCond  	+= " AND SD1.D1_FORNECE = '" + cCliente + "' AND SD1.D1_LOJA = '" + cLoja + "'"
		cCond  	+= " AND SD1.D1_TES = SFC.FC_TES "
	Else
		cCond	:= "% SD2.D2_DOC = '" + cDoc + "' AND SD2.D2_SERIE = '" + cSerie + "'"
		cCond  	+= " AND SD2.D2_CLIENTE = '" + cCliente + "' AND SD2.D2_LOJA = '" + cLoja + "'"
		cCond  	+= " AND SD2.D2_TES = SFC.FC_TES "
	EndIf

	cCond 	+= " AND SFC.FC_IMPOSTO = SFB.FB_CODIGO"
	cCond	+= " AND SFC.FC_FILIAL = '" + xFilial("SFC") + "'"
	cCond	+= " AND SFB.FB_FILIAL = '" + xFilial("SFB") + "'"
	cCond	+= " AND SFC.D_E_L_E_T_  = ' ' "
	cCond	+= " AND SFB.D_E_L_E_T_  = ' ' %"
	cGroup 	:= "% SFB.FB_CODIGO, SFB.FB_CPOLVRO, SFB.FB_CLASSE, SFB.FB_IMPSAT, SFB.FB_DESCR, SFB.FB_ALIQ, SFC.FC_IMPOSTO, SFC.FC_INCDUPL %"
	cOrder 	:= "% SFB.FB_CODIGO, SFB.FB_CPOLVRO, SFB.FB_CLASSE, SFB.FB_IMPSAT, SFB.FB_DESCR, SFB.FB_ALIQ, SFC.FC_IMPOSTO, SFC.FC_INCDUPL %"

	BeginSql alias cAliasImp
		SELECT %exp:cCampos%
		FROM  %exp:cTablas%
		WHERE %exp:cCond%
		GROUP BY %exp:cGroup%
		ORDER BY %exp:cOrder%
	EndSql

	dbSelectArea(cAliasImp)
	(cAliasImp)->(DbGoTop())
	While (cAliasImp )->(!Eof())
		cTipoImp := ""
		If (cAliasImp)->FB_CODIGO $ cIVATras .Or. (cAliasImp)->FB_CODIGO $ cIEPSTras //Traslado
			cTipoImp := "T"
			
			If ALLTRIM((cAliasImp)->FC_INCDUPL) == "3" //Bandera para impuestos incluido.
				lIncluido := .T.
			EndIf
			
		ElseIf (cAliasImp)->FB_CODIGO $ cRetIVA .Or. (cAliasImp)->FB_CODIGO $ cRetISR .Or. (cAliasImp)->FB_CODIGO $ cRetIEPS //Retenciones
			cTipoImp := "R"
		EndIF
		aAdd(aImpFact,{(cAliasImp)->FB_CPOLVRO,(cAliasImp)->FB_CLASSE,0,(cAliasImp)->FB_CODIGO, (cAliasImp)->FB_IMPSAT, (cAliasImp)->FB_DESCR, cTipoImp, ((cAliasImp)->FB_ALIQ/100),lIncluido,0})
		lIncluido := .F.
		(cAliasImp)->(dbskip())
	EndDo
	(cAliasImp)->(DBCloseArea())

	//Traslado y Excento
    If Len(aImpFact) == 0
    	If cSDAlias == "SD1"
			//Items de documento
			cCampos	:= "% SD1.D1_COD, SD1.D1_ITEM, SD1.D1_QUANT, SD1.D1_UM, SD1.D1_VUNIT, SD1.D1_TOTAL, SD1.D1_VALDESC, D1_PEDISAT"
			//Campos para impuestos
			cCampos += fGetCpo("SD1")
			cCampos	+= " %"
			cTablas	:= "% " + RetSqlName("SD1") + " SD1 %"
			cCond	:= "% SD1.D1_FILIAL = '" + xFilial("SD1") + "' "
			cCond	+= " AND SD1.D1_DOC  = '" + cDoc + "' "
			cCond	+= " AND SD1.D1_SERIE  = '" + cSerie + "' "
			cCond	+= " AND SD1.D1_FORNECE  = '" + cCliente + "' "
			cCond	+= " AND SD1.D1_LOJA  = '" + cLoja + "' "
			cCond	+= " AND SD1.D_E_L_E_T_  = ' ' %"
		Else
			//Items de documento
			cCampos	:= "% SD2.D2_COD, SD2.D2_ITEM, SD2.D2_QUANT, SD2.D2_UM, SD2.D2_PRCVEN, SD2.D2_TOTAL, SD2.D2_DESCON, D2_PEDISAT"
			//Campos para impuestos
			cCampos += fGetCpo("SD2")
			//Campos para Carta Porte
			If SD2->(ColumnPos("D2_FRACCA")) > 0 //Fracción Arancelaria
				cCampos += ",SD2.D2_FRACCA"
			EndIf
			If SD2->(ColumnPos("D2_NICO")) > 0 //NICO
				cCampos += ",SD2.D2_NICO"
			EndIf
			If SD2->(ColumnPos("D2_PESO")) > 0 //Peso
				cCampos += ",SD2.D2_PESO"
			EndIf
			If SD2->(ColumnPos("D2_FCICOD")) > 0 //UUID Comercio Exterior
				cCampos += ",SD2.D2_FCICOD"
			EndIf
			If SD2->(ColumnPos("D2_VLRFUE")) > 0 //Valor Mercancía
				cCampos += ",SD2.D2_VLRFUE"
			EndIf
			If SD2->(ColumnPos("D2_GRPCST")) > 0 //Cve Material Peligros
				cCampos += ",SD2.D2_GRPCST"
			EndIf
			If SD2->(ColumnPos("D2_TNATREC")) > 0 //Embalaje
				cCampos += ",SD2.D2_TNATREC"
			EndIf
			If SD2->(ColumnPos("D2_CNATREC")) > 0 //ID Origen
				cCampos += ",SD2.D2_CNATREC"
			EndIf
			If SD2->(ColumnPos("D2_GRUPONC")) > 0 //ID Destino
				cCampos += ",SD2.D2_GRUPONC"
			EndIf
			cCampos	+= " %"
			cTablas	:= "% " + RetSqlName("SD2") + " SD2 %"
			cCond	:= "% SD2.D2_FILIAL = '" + xFilial("SD2") + "' "
			cCond	+= " AND SD2.D2_DOC  = '" + cDoc + "' "
			cCond	+= " AND SD2.D2_SERIE  = '" + cSerie + "' "
			cCond	+= " AND SD2.D2_CLIENTE  = '" + cCliente + "' "
			cCond	+= " AND SD2.D2_LOJA  = '" + cLoja + "' "
			cCond	+= " AND SD2.D_E_L_E_T_  = ' ' %"
		EndIf

		BeginSql alias cAliasDet
			SELECT %exp:cCampos%
			FROM  %exp:cTablas%
			WHERE %exp:cCond%
		EndSql

		dbSelectArea(cAliasDet)
		(cAliasDet)->(DbGoTop())
		While (cAliasDet)->(!Eof())
			If cSDAlias == "SD1"
				aDatProd := fProdSB1((cAliasDet)->D1_COD)
				cPediSat := IIf(SD1->(FieldPos("D1_PEDISAT")) > 0,(cAliasDet)->D1_PEDISAT,"") //InformacionAduanera
			Else
				aDatProd := fProdSB1((cAliasDet)->D2_COD, lGlobal)
				cPediSat := IIf(SD2->(FieldPos("D2_PEDISAT")) > 0,(cAliasDet)->D2_PEDISAT,"") //InformacionAduanera
			EndIf

			cCtaPred := IIf(!Empty(aDatProd[1][4]),aDatProd[1][4],"") //CuentaPredial

			//Parte
			dbSelectArea("SG1")
			SG1->(dbSetOrder(1)) //G1_FILIAL + G1_COD + G1_COMP + G1_TRT
			dbSelectArea("SB1")
			SB1->(DbSetOrder(1)) //B1_FILIAL + B1_COD
			If cSDAlias == "SD1"
				If SG1->(dbSeek(xFilial("SG1") + (cAliasDet)->D1_COD))
					Do While !SG1->(EOF()) .And. SG1->G1_FILIAL == xFilial("SG1") .And. SG1->G1_COD == (cAliasDet)->D1_COD
						If SB1->(dbSeek(xFilial("SB1") + SG1->G1_COMP))
							aAdd(aPartes,{Alltrim(SB1->B1_PRODSAT), Alltrim(SG1->G1_COMP), SG1->G1_QUANT, Alltrim(SB1->B1_UM), CFDCarEsp(Alltrim(SB1->B1_DESC)),SB1->B1_PRV1})
						EndIf
						SG1->(DbSkip())
					EndDo
				EndIf
				aAdd(aDetFac, {aDatProd[1][1],Alltrim((cAliasDet)->D1_ITEM + (cAliasDet)->D1_COD),(cAliasDet)->D1_QUANT,AllTrim(aDatProd[1][2]),Alltrim((cAliasDet)->D1_UM),aDatProd[1][3],(Round((cAliasDet)->D1_TOTAL + (cAliasDet)->D1_VALDESC,2)/(cAliasDet)->D1_QUANT),Round((cAliasDet)->D1_TOTAL + (cAliasDet)->D1_VALDESC,2),(cAliasDet)->D1_VALDESC,Nil,Nil,Nil,cPediSat, cCtaPred, aPartes,.T.,Alltrim((cAliasDet)->D1_ITEM)})
			Else
				If SG1->(dbSeek(xFilial("SG1") + (cAliasDet)->D2_COD))
					Do While !SG1->(EOF()) .And. SG1->G1_FILIAL == xFilial("SG1") .And. SG1->G1_COD == (cAliasDet)->D2_COD
						If SB1->(dbSeek(xFilial("SB1") + SG1->G1_COMP))
							aAdd(aPartes,{Alltrim(SB1->B1_PRODSAT), Alltrim(SG1->G1_COMP), SG1->G1_QUANT, Alltrim(SB1->B1_UM), CFDCarEsp(Alltrim(SB1->B1_DESC)),SB1->B1_PRV1})
						EndIf
						SG1->(DbSkip())
					EndDo
				EndIf
				nValUnit := Round((cAliasDet)->D2_TOTAL + (cAliasDet)->D2_DESCON,2) / IIF( lGlobal , 1 , (cAliasDet)->D2_QUANT)
				nImporte := Round((cAliasDet)->D2_TOTAL + (cAliasDet)->D2_DESCON,2)
				aAdd(aDetFac, { IIF( lGlobal , "01010101" , aDatProd[1][1]),;   //ClaveProdServ
				                IIF( lGlobal , aDatProd[1][1] , Alltrim((cAliasDet)->D2_ITEM + (cAliasDet)->D2_COD)),; //NoIdentificacion
				                IIF( lGlobal , 1 , (cAliasDet)->D2_QUANT),; //Cantidad
				                IIF( lGlobal , "ACT" , AllTrim(aDatProd[1][2])),; //ClaveUnidad
				                IIF( lGlobal , "" , Alltrim((cAliasDet)->D2_UM)),; //Unidad
				                IIf( lGlobal , "Venta" , aDatProd[1][3]),;  //Descripcion
				                IIf( lGlobal , nImporte , nValUnit) ,; //ValorUnitario
				                nImporte,; //Importe
				                (cAliasDet)->D2_DESCON,; //Descuento
				                Nil,; //
				                Nil,; //
				                Nil,; //
				                cPediSat,;
				                cCtaPred,;
				                aPartes,;
				                .T.,; //Exento (Sin impuestos)
								Alltrim((cAliasDet)->D2_ITEM), ;//item
								Alltrim(aDatProd[1][5]), ; //Tipo de Producto (B1_TIPO) 
								IIf(SD2->(ColumnPos("D2_FRACCA")) > 0,(cAliasDet)->D2_FRACCA,"")+IIf(SD2->(ColumnPos("D2_NICO")) > 0,(cAliasDet)->D2_NICO,""), ;  //Fracción Arancelaria
								IIf(SD2->(ColumnPos("D2_PESO")) > 0,(cAliasDet)->D2_PESO,""), ;       //Peso en KG
								IIf(SD2->(ColumnPos("D2_FCICOD")) > 0,(cAliasDet)->D2_FCICOD,""), ;   //UUID de Comercio Exterior
								IIf(SD2->(ColumnPos("D2_VLRFUE")) > 0,(cAliasDet)->D2_VLRFUE,""), ;   //Valor de Mercancía
								IIf(SD2->(ColumnPos("D2_GRPCST")) > 0,(cAliasDet)->D2_GRPCST,""), ;   //Cve Material Peligroso
								IIf(SD2->(ColumnPos("D2_TNATREC")) > 0,(cAliasDet)->D2_TNATREC,""), ; //Embalaje
								IIf(SD2->(ColumnPos("D2_CNATREC")) > 0,(cAliasDet)->D2_CNATREC,""), ; //ID Origen
								IIf(SD2->(ColumnPos("D2_GRUPONC")) > 0,(cAliasDet)->D2_GRUPONC,""), ; //ID Destino
								aDatProd[1][6]; //Material Peligroso
								})  
			EndIF

			aPartes := {}

			(cAliasDet)->(dbskip())
		EndDo
		(cAliasDet)->(DBCloseArea())
    EndIf

	For nX := 1 To Len(aImpFact)
		nPos := 0
		If cSDAlias == "SD1"
			//Items de documento
			cCampos	:= "% SD1.D1_COD, SD1.D1_ITEM, SD1.D1_QUANT, SD1.D1_UM, SD1.D1_VUNIT, SD1.D1_TOTAL, SD1.D1_VALDESC, D1_PEDISAT, SD1.D1_TES"
			cCampos += fGetCpo("SD1")
			cCampos	+= " %"
			cTablas	:= "% " + RetSqlName("SD1") + " SD1 %"
			cCond	:= "% SD1.D1_FILIAL = '" + xFilial("SD1") + "' "
			cCond	+= " AND SD1.D1_DOC  = '" + cDoc + "' "
			cCond	+= " AND SD1.D1_SERIE  = '" + cSerie + "' "
			cCond	+= " AND SD1.D1_FORNECE  = '" + cCliente + "' "
			cCond	+= " AND SD1.D1_LOJA  = '" + cLoja + "' "
			cCond	+= " AND SD1.D_E_L_E_T_  = ' ' %"
		Else
			//Items de documento
			cCampos	:= "% SD2.D2_COD, SD2.D2_ITEM, SD2.D2_QUANT, SD2.D2_UM, SD2.D2_PRCVEN, SD2.D2_TOTAL, SD2.D2_DESCON, D2_PEDISAT, SD2.D2_TES, D2_VALFRE, D2_SEGURO, D2_DESPESA"
			cCampos += fGetCpo("SD2")
			//Campos para Carta Porte
			If SD2->(ColumnPos("D2_FRACCA")) > 0 //Fracción Arancelaria
				cCampos += ",SD2.D2_FRACCA"
			EndIf
			If SD2->(ColumnPos("D2_NICO")) > 0 //NICO
				cCampos += ",SD2.D2_NICO"
			EndIf
			If SD2->(ColumnPos("D2_PESO")) > 0 //Peso
				cCampos += ",SD2.D2_PESO"
			EndIf
			If SD2->(ColumnPos("D2_FCICOD")) > 0 //UUID Comercio Exterior
				cCampos += ",SD2.D2_FCICOD"
			EndIf
			If SD2->(ColumnPos("D2_VLRFUE")) > 0 //Valor Mercancía
				cCampos += ",SD2.D2_VLRFUE"
			EndIf
			If SD2->(ColumnPos("D2_GRPCST")) > 0 //Cve Material Peligros
				cCampos += ",SD2.D2_GRPCST"
			EndIf
			If SD2->(ColumnPos("D2_TNATREC")) > 0 //Embalaje
				cCampos += ",SD2.D2_TNATREC"
			EndIf
			If SD2->(ColumnPos("D2_CNATREC")) > 0 //ID Origen
				cCampos += ",SD2.D2_CNATREC"
			EndIf
			If SD2->(ColumnPos("D2_GRUPONC")) > 0 //ID Destino
				cCampos += ",SD2.D2_GRUPONC"
			EndIf
			cCampos	+= " %"
			cTablas	:= "% " + RetSqlName("SD2") + " SD2 %"
			cCond	:= "% SD2.D2_FILIAL = '" + xFilial("SD2") + "' "
			cCond	+= " AND SD2.D2_DOC  = '" + cDoc + "' "
			cCond	+= " AND SD2.D2_SERIE  = '" + cSerie + "' "
			cCond	+= " AND SD2.D2_CLIENTE  = '" + cCliente + "' "
			cCond	+= " AND SD2.D2_LOJA  = '" + cLoja + "' "
			cCond	+= " AND SD2.D_E_L_E_T_  = ' ' %"
		EndIf

		BeginSql alias cAliasDet
			SELECT %exp:cCampos%
			FROM  %exp:cTablas%
			WHERE %exp:cCond%
		EndSql

		dbSelectArea(cAliasDet)
		(cAliasDet)->(DbGoTop())
		While (cAliasDet)->(!Eof())
			nPos += 1
			aImpAux := {}

			If cSDAlias == "SD1"
				aDatProd := fProdSB1((cAliasDet)->D1_COD)
				cPediSat := IIf(SD1->(FieldPos("D1_PEDISAT")) > 0,(cAliasDet)->D1_PEDISAT,"") //InformacionAduanera
			Else
				aDatProd := fProdSB1((cAliasDet)->D2_COD,lGlobal)
				cPediSat := IIf(SD2->(FieldPos("D2_PEDISAT")) > 0,(cAliasDet)->D2_PEDISAT,"") //InformacionAduanera
			EndIF

			//Impuestos
			nBasImp := (cAliasDet)->(&(cBasImpSD + aImpFact[nX][1])) //Base del impuesto
			nValImp := (cAliasDet)->(&(cValImpSD + aImpFact[nX][1])) //Valor del impuesto
			nAliq   := (cAliasDet)->(&(cValImpAL + aImpFact[nX][1])) //Aliquota del impuesto

			//Limites
			nLimInf := NoRound(nBasImp * (nAliq/100),2)
			nLimSup := NoRound(nBasImp * (nAliq/100),2) + 0.01
			
			If nValImp < nLimInf
				nBasImp := nBasImp - (nLimInf - nValImp)
				nValImp := nValImp + (nLimInf - nValImp)	
			ElseIf nValImp > nLimSup
				nBasImp := nBasImp + (nValImp - nLimSup)
				nValImp := nValImp - (nValImp - nLimSup)
			EndIf
			
			//Valida si el impuesto existe en la TES o no tiene impuestos
			aResp := LxIMPTES(aImpFact[nX][4],(cAliasDet)->&(cTesD))
			
			If lCPorte .And. lTras .And. !(aDatProd[1][5] == "SV") .And. AllTrim(cEspecie) == "NF"
				nImpCPorte += nValImp
			EndIf
			If aResp[1]
				aImpFact[nX][3] += nValImp
				aImpFact[nX][10] += nBasImp
				aImpAux := {aImpFact[nX][4], aImpFact[nX][2], nBasImp, aImpFact[nX][5], nAliq, nValImp, aImpFact[nX][6], aImpFact[nX][7],0,0,aImpFact[nX][9] }
			EndIf
			cCtaPred := IIf(!Empty(aDatProd[1][4]),aDatProd[1][4],"") //CuentaPredial
			//Parte
			dbSelectArea("SG1")
			SG1->(dbSetOrder(1)) //G1_FILIAL + G1_COD + G1_COMP + G1_TRT
			dbSelectArea("SB1")
			SB1->(DbSetOrder(1)) //B1_FILIAL + B1_COD
			If cSDAlias == "SD1"
				If SG1->(dbSeek(xFilial("SG1") + (cAliasDet)->D1_COD))
					Do While !SG1->(EOF()) .And. SG1->G1_FILIAL == xFilial("SG1") .And. SG1->G1_COD == (cAliasDet)->D1_COD
						If SB1->(dbSeek(xFilial("SB1") + SG1->G1_COMP))
							aAdd(aPartes,{Alltrim(SB1->B1_PRODSAT), Alltrim(SG1->G1_COMP), SG1->G1_QUANT, Alltrim(SB1->B1_UM), CFDCarEsp(Alltrim(SB1->B1_DESC)),SB1->B1_PRV1})
						EndIf
						SG1->(DbSkip())
					EndDo
				EndIf

				If nX == 1
					
					If cDescSai=='2' 
						nValUnit := IIF( aResp[1] .And. aImpFact[nX][9] , (Round((cAliasDet)->D1_TOTAL,2) - nValImp) / (cAliasDet)->D1_QUANT , (Round((cAliasDet)->D1_TOTAL,2)/(cAliasDet)->D1_QUANT) )
						nImporte := IIF( aResp[1] .And. aImpFact[nX][9] , (Round((cAliasDet)->D1_TOTAL,2)) - nValImp , Round((cAliasDet)->D1_TOTAL,2) )
					Else
						nValUnit := IIF( aResp[1] .And. aImpFact[nX][9] , (Round((cAliasDet)->D1_TOTAL + (cAliasDet)->D1_VALDESC ,2) - nValImp) / (cAliasDet)->D1_QUANT , (Round((cAliasDet)->D1_TOTAL + (cAliasDet)->D1_VALDESC ,2)/(cAliasDet)->D1_QUANT) )
						nImporte := IIF( aResp[1] .And. aImpFact[nX][9] , (Round((cAliasDet)->D1_TOTAL + (cAliasDet)->D1_VALDESC ,2)) - nValImp , Round((cAliasDet)->D1_TOTAL + (cAliasDet)->D1_VALDESC ,2) )
					EndIf 
					
					aAdd(aDetFac, {aDatProd[1][1],; //ClaveProdServ
					               Alltrim((cAliasDet)->D1_ITEM + (cAliasDet)->D1_COD),; //NoIdentificacion
					               (cAliasDet)->D1_QUANT,; //Cantidad
					               AllTrim(aDatProd[1][2]),; //ClaveUnidad
					               Alltrim((cAliasDet)->D1_UM),; //Unidad
					               aDatProd[1][3],; //Descripcion
					               nValUnit,; //ValorUnitario
					               nImporte,; //Importe
					               (cAliasDet)->D1_VALDESC,; //Descuento
					               aAdd(aImpos,{aImpAux}),;
					               Nil,;
					               Nil,;
					               cPediSat,; 
					               cCtaPred,;
					               aPartes,;
					               aResp[2],; //Exento (Sin impuestos)
								   Alltrim((cAliasDet)->D1_ITEM),;
								   Alltrim(aDatProd[1][5]) }) //Tipo de Producto (B1_TIPO)
				Else
					If aResp[1]
						aAdd(aDetFac[nPos][10],aImpAux)
					EndIf
				EndIf
				
				If aResp[1] .And. aImpFact[nX][9] //Impuesto incluido y existe en la TES el impuesto
					nIncluido += nValImp      
				EndIF				
			Else
				If SG1->(dbSeek(xFilial("SG1") + (cAliasDet)->D2_COD))
					Do While !SG1->(EOF()) .And. SG1->G1_FILIAL == xFilial("SG1") .And. SG1->G1_COD == (cAliasDet)->D2_COD
						If SB1->(dbSeek(xFilial("SB1") + SG1->G1_COMP))
							aAdd(aPartes,{Alltrim(SB1->B1_PRODSAT), Alltrim(SG1->G1_COMP), SG1->G1_QUANT, Alltrim(SB1->B1_UM), CFDCarEsp(Alltrim(SB1->B1_DESC)),SB1->B1_PRV1})
						EndIf
						SG1->(DbSkip())
					EndDo
				EndIf

				If nX == 1
					nValUnit := IIF( aResp[1] .And. aImpFact[nX][9], (Round((cAliasDet)->D2_TOTAL + (cAliasDet)->D2_DESCON,2) - nValImp) / (cAliasDet)->D2_QUANT , (Round((cAliasDet)->D2_TOTAL + (cAliasDet)->D2_DESCON,2)/(cAliasDet)->D2_QUANT) )
					nImporte := IIF( aResp[1] .And. aImpFact[nX][9], (Round((cAliasDet)->D2_TOTAL + (cAliasDet)->D2_DESCON,2)) - nValImp , Round((cAliasDet)->D2_TOTAL + (cAliasDet)->D2_DESCON,2) )
					lAddVal	 := LxfBusTES((cAliasDet)->D2_TES)
					If !lAddVal
						nValUnit := 0.01
						nImporte := (cAliasDet)->D2_QUANT * nValUnit
						nValBoni += nImporte
					EndIf
					aAdd(aDetFac, { IIF( lGlobal , "01010101" , aDatProd[1][1]),; //ClaveProdServ
									IIF( lGlobal , aDatProd[1][1] , Alltrim((cAliasDet)->D2_ITEM + (cAliasDet)->D2_COD)),; //NoIdentificacion
									IIF( lGlobal , 1 , (cAliasDet)->D2_QUANT),; //Cantidad
									IIF( lGlobal , "ACT" , AllTrim(aDatProd[1][2])),; //ClaveUnidad
									IIF( lGlobal , "" , Alltrim((cAliasDet)->D2_UM)),; //Unidad
									IIf( lGlobal , "Venta" , aDatProd[1][3]),; //Descripcion
									IIf( lGlobal , nImporte , nValUnit ),; //ValorUnitario
									nImporte,; //Importe
									(cAliasDet)->D2_DESCON,; //Descuento
									aAdd(aImpos,{aImpAux}),;
									Nil,;
									Nil,;
									cPediSat,;
									cCtaPred,;
									aPartes,;
									aResp[2],; //Exento (Sin impuestos)		
									Alltrim((cAliasDet)->D2_ITEM),; //item	
									Alltrim(aDatProd[1][5]), ; //Tipo de Producto (B1_TIPO) 
									IIf(SD2->(ColumnPos("D2_FRACCA")) > 0,(cAliasDet)->D2_FRACCA,"")+IIf(SD2->(ColumnPos("D2_NICO")) > 0,(cAliasDet)->D2_NICO,""), ;  //Fracción Arancelaria
									IIf(SD2->(ColumnPos("D2_PESO")) > 0,(cAliasDet)->D2_PESO,""), ;        //Peso en KG
									IIf(SD2->(ColumnPos("D2_FCICOD")) > 0,(cAliasDet)->D2_FCICOD,""), ;    //UUID de Comercio Exterior
									IIf(SD2->(ColumnPos("D2_VLRFUE")) > 0,(cAliasDet)->D2_VLRFUE,""), ;    //Valor de Mercancía
									IIf(SD2->(ColumnPos("D2_GRPCST")) > 0,(cAliasDet)->D2_GRPCST,""), ;    //Cve Material Peligroso
									IIf(SD2->(ColumnPos("D2_TNATREC")) > 0,(cAliasDet)->D2_TNATREC,""), ;  //Embalaje
									IIf(SD2->(ColumnPos("D2_CNATREC")) > 0,(cAliasDet)->D2_CNATREC,""), ; //ID Origen
									IIf(SD2->(ColumnPos("D2_GRUPONC")) > 0,(cAliasDet)->D2_GRUPONC,""), ; //ID Destino
									aDatProd[1][6],; //Material Peligroso
									{(cAliasDet)->D2_VALFRE, (cAliasDet)->D2_SEGURO, (cAliasDet)->D2_DESPESA}; //Gastos de Flete, Seguro y Despesa
									})  					 	

					//Carta Porte
					If AllTrim(cEspecie) == "NF" .And. lCPorte .And. (!(aDatProd[1][5] == "SV") .And. nImporte == 0)
						nDesCPorte += nImporte
					EndIf
				Else
					If aResp[1]
						aAdd(aDetFac[nPos][10],aImpAux)
					EndIf
				EndIf 				
				If aResp[1] .And. aImpFact[nX][9] //Impuesto incluido y existe en la TES el impuesto
					nIncluido += nValImp      
				EndIF
			EndIf

			aPartes := {}
				
			(cAliasDet)->(dbskip())
		EndDo

		(cAliasDet)->(DBCloseArea())
	Next nX

	If cSDAlias == "SD1"
		dbSelectArea("SF1")
		SF1->(dbSetOrder(1)) //F1_FILIAL+F1_DOC+F1_SERIE+F1_FORNECE+F1_LOJA+F1_TIPO
		If SF1->(dbSeek(xFilial("SF1") + cDoc + cSerie + cCliente + cLoja))
			nValMerc := SF1->F1_VALMERC - nIncluido 
			nValBrut := SF1->F1_VALBRUT
			nDesc    := SF1->F1_DESCONT
		EndIf
	Else
		dbSelectArea("SF2")
		SF2->(dbSetOrder(1)) //F2_FILIAL + F2_DOC + F2_SERIE + F2_CLIENTE + F2_LOJA + F2_FORMUL + F2_TIPO
		If SF2->(dbSeek(xFilial("SF2") + cDoc + cSerie + cCliente + cLoja))
			nValMerc := (nValBoni + SF2->F2_VALMERC) - nIncluido
			nValBrut := nValBoni + SF2->F2_VALBRUT
			nDesc    := SF2->F2_DESCONT
			nFlete	 := SF2->F2_FRETE
			nSeguro	 := SF2->F2_SEGURO
			nDespesa := SF2->F2_DESPESA
		EndIf
	EndIf

	nTotDet := Len(aDetFac)
	
	//Ajuste de subtotal
	AEval(aDetFac,{|x| Round(nSubTot += x[8],2) })
	
	nDifer := (nValMerc + IIf(cSDAlias == "SD1" .AND. cDescSai == '2' , 0, nDesc)) - nSubTot

	If nDifer <> 0
		aDetFac[nTotDet][8] += nDifer
		aDetFac[nTotDet][7] := aDetFac[nTotDet][8] / aDetFac[nTotDet][3]
	EndIf	
	
	//Ajuste de límites
	For nX := 1 To nTotDet
		If aDetFac[nX][10] <> Nil
			For nY := 1 To Len(aDetFac[nX][10])
				If Len(aDetFac[nX][10][nY]) > 0
					aDetFac[nX][10][nY][9] := NOROUND(aDetFac[nX][10][nY][3] * (aDetFac[nX][10][nY][5]/100), 2) //Limite inferior
					aDetFac[nX][10][nY][10] := aDetFac[nX][10][nY][9] + 0.01 //Limite superior
				EndIf
			Next nY
		EndIf
	Next nX	

	If cSDAlias == "SD1"
		If Len(aImpFact) = 0 .And. !lTras //Documentos exentos
			dbSelectArea("SF1")
			SF1->(dbSetOrder(1)) //F1_FILIAL+F1_DOC+F1_SERIE+F1_FORNECE+F1_LOJA+F1_TIPO
			If SF1->(dbSeek(xFilial("SF1") + cDoc + cSerie + cCliente + cLoja))
				nValMerc := SF1->F1_VALMERC
			EndIf
		EndIf
	Else
		If Len(aImpFact) = 0 .And. !lTras //Documentos exentos
			dbSelectArea("SF2")
			SF2->(dbSetOrder(1)) //F2_FILIAL + F2_DOC + F2_SERIE + F2_CLIENTE + F2_LOJA + F2_FORMUL + F2_TIPO
			If SF2->(dbSeek(xFilial("SF2") + cDoc + cSerie + cCliente + cLoja))
				nValMerc := SF2->F2_VALMERC
			EndIf
		EndIf
	EndIf

	//Diferencia en impuestos
	AEval(aImpFact,{|x| nTotImpT += If(x[7] == "T",Round(x[3],2),0)})
	AEval(aImpFact,{|x| nTotImpR += If(x[7] == "R" ,Round(x[3],2),0)})
	
	nValorBrMe := ABS(nValBrut - nValMerc)
	nValorImp  := ABS(nTotImpT - nTotImpR)
	
	nDifer := nValorBrMe - (ABS(IIf(cSDAlias == "SD1" .AND. cDescSai == '2' , nDesc, 0) - nValorImp)) - nFlete - nSeguro - nDespesa

	If nDifer <> 0
		For nT := 1 To nTotDet
			If nDifer == 0
				Exit
			EndIf
			For nImp := 1 To Len(aDetFac[nT][10])
				If Len(aDetFac[nT][10][nImp]) > 0
					If aDetFac[nT][10][nImp][6] > 0
						nDesc := IIf(nDifer < 0,-0.01,0.01)
		
						nLimite := aDetFac[nT][10][nImp][6] + nDesc
						If (nLimite >= aDetFac[nT][10][nImp][9]) .And. (nLimite <= aDetFac[nT][10][nImp][10])
							aDetFac[nT][10][nImp][6] += nDesc
							nPosImp := Ascan(aImpFact,{|x| x[4] == aDetFac[nT][10][nImp][1] })
							aImpFact[nPosImp][3] += nDesc
							nDifer -= nDesc
							If nDifer = 0
								Exit
							EndIf
						EndIf
					EndIf
				EndIf
			Next nImp
		Next nT
	EndIf

	For nX := 1 To Len(aDetFac)
		aTras := {}
		aRet := {}
		If aDetFac[nX][10] <> Nil
			For nY := 1 To Len(aDetFac[nX][10])
				If Len(aDetFac[nX][10][nY]) > 0
					If aDetFac[nX][10][nY][8] == "T" .And. Empty(aDetFac[nX][10][nY][2]) //Traslado
						aAdd(aTras,{aDetFac[nX][10][nY][3], aDetFac[nX][10][nY][4], (aDetFac[nX][10][nY][5]/100), aDetFac[nX][10][nY][6]})
					ElseIf aDetFac[nX][10][nY][8] == "R" .And. Empty(aDetFac[nX][10][nY][2]) //Retenciones
						aAdd(aRet,{aDetFac[nX][10][nY][3], aDetFac[nX][10][nY][4], (aDetFac[nX][10][nY][5]/100), aDetFac[nX][10][nY][6]})
					End
					//Impuestos Locales
					If aDetFac[nX][10][nY][2] == "R" //Retenciones
						aAdd(aRetLoc,{aDetFac[nX][10][nY][7], aDetFac[nX][10][nY][5], aDetFac[nX][10][nY][6]})
					ElseIf aDetFac[nX][10][nY][2] == "T" //Traslados
						aAdd(aTrasLoc,{aDetFac[nX][10][nY][7],aDetFac[nX][10][nY][5], aDetFac[nX][10][nY][6]})
					EndIf
				EndIf
			Next nY
		EndIf
		aDetFac[nX][11]:= aTras
		aDetFac[nX][12] := aRet
	Next nX

    RestArea(aArea)
Return

/*/{Protheus.doc} fProdSB1
  Obtiene datos de producto (necesarios para xml de facturación electrónica)
  @type function
  @author luis.enrique
  @since 16/03/2018
  @version 1.0
  @param cCodPro, Clave del producto
  @return aDatosSB1 arreglo con datos de producto (Producto SAT, Unidad de medida y descripción)
  @example
  (examples)
  @see (links_or_references)
 /*/
Static Function fProdSB1(cCodPro, lGlobal)
	Local aArea := getArea()
	Local aDatosSB1:= {}
	Local cUnidMed := ""
	
	Default lGlobal := .F.
	
	If lGlobal 
		// No existe el producto, si es factura global el código es el número de presupuesto
		aAdd(aDatosSB1, {Alltrim(cCodPro), "", "", ""} )	
	Else
		DbSelectArea("SB1")
		SB1->(DbSetOrder(1)) //B1_FILIAL + B1_COD
	
		If SB1->(dbSeek(xFilial("SB1") + cCodPro))
			cUnidMed := POSICIONE("SAH", 1, xFilial("SAH") + SB1->B1_UM, "AH_UNIDSAT")
			aAdd(aDatosSB1,{SB1->B1_PRODSAT,;
							cUnidMed,;
							Alltrim(SB1->B1_DESC),;
							Alltrim(SB1->B1_NUMCTAP),;
							SB1->B1_TIPO,;
							IIf(SB1->(FieldPos("B1_TPCLAS")) > 0 .And. !Empty(SB1->B1_TPCLAS), SB1->B1_TPCLAS, "0") })
		EndIf	
	EndIf

	RestArea(aArea)
Return aDatosSB1

/*/{Protheus.doc} fXMLFun
  Genera estructura y cadena origina para nodo Conceptos, Impuestos e Impuestos Locales
  @type function
  @author luis.enrique
  @since 16/03/2018
  @version 1.0
  @param cOpc, Opcion de generación de nodo "CO" = Conceptos "TI" = Totales de Impuestos "IL" = Impuestos Locales
  		 lCadena, Indica si se generará cadena original o estructura de XML .T. = Es cadena .F. = No es cadena
  		 lTras, Indica si el documento es de traslado (F2_TIPODOC = 21) .T. = Si y .F. = No
  @return cXMLStr, Valor de la cadena origina o estructura del XML según parámetro lCadena
  @example
  (examples)
  @see (links_or_references)
 /*/
Function fXMLFun(cOpc,lCadena,lTras,lCPorte)
	Local cXMLStr		:= ""
	Local cXMLImp		:= ""
	Local cSepara		:= "|"
	Local nX			:= 0
	Local nY			:= 0
	Local nImporte		:= 0
	Local nValUnit		:= 0
	Local nTotRetL		:= 0
	Local nTotTraL		:= 0
	Local cCRLF			:= (chr(13)+chr(10))
	Local aNumPed		:= {}
	Local nLoop			:= 0
	Local cDosEspac		:= Space(2)
	Local cUnEspac		:= Space(1)
	Local aImpFactBu	:= {}
	Local aTras			:= {}
	Local aRet			:= {}
	Local cXMLImpTra	:= ""
	Local cXMLImpRet	:= ""
	Local lPECONCEP		:= ExistBlock("LOCXCONCEP")
	Local aConcepto		:= {}
	Local cImpTrasCO	:= ""
	Local cImpRetCO		:= ""
	Local cTamano       := 1
	Local nDeciDesc		:= GetSx3Cache(IIf(AllTrim(cEspecie) == "NCC", "D1_VALDESC"	, "D2_DESCON")	, "X3_DECIMAL")
	Local nTamVUni		:= GetSx3Cache(IIf(AllTrim(cEspecie) == "NCC", "D1_VUNIT"	, "D2_PRCVEN")	, "X3_TAMANHO")
	Local nDeciVUni		:= GetSx3Cache(IIf(AllTrim(cEspecie) == "NCC", "D1_VUNIT"	, "D2_PRCVEN")	, "X3_DECIMAL")
	Local nTamTot		:= GetSx3Cache(IIf(AllTrim(cEspecie) == "NCC", "D1_TOTAL"	, "D2_TOTAL")	, "X3_TAMANHO")
	Local nDeciTot		:= GetSx3Cache(IIf(AllTrim(cEspecie) == "NCC", "D1_TOTAL"	, "D2_TOTAL")	, "X3_DECIMAL")
	Local nDescTot      := 0
	Local nDifer        := 0
	Local nSumDesc      := 0
	Local cCFDStru		:= SuperGetMV("MV_CFDSTRU",,"")
	Local lAgrCon       := .T.
	Local lCfdi40       := SuperGetMV("MV_CFDI40",.F.,.F.)
	Local cValUnit		:= ""
	Local cImporte		:= ""

	Default lCadena := .F.
	Default lTras   := .F.
	Default lCPorte := .F.

	If cOpc == "TI"
		// Totaliza impuestos por código SAT y tasa
		aImpFactBu := aClone(aImpFact)
		
		For nX := 1 To Len(aImpFact)
			If aImpFact[nX,7] == "T" // Traslado
				nY := aScan(aTras , {|x| aImpFact[nX,5] == x[5] .And. aImpFact[nX,8] == x[8]} )
				If nY == 0
					aAdd(aTras , aImpFact[nX])
				Else
					aTras[nY,3] += aImpFact[nX,3]
				Endif
			Else // Retención
				nY := aScan(aRet , {|x| aImpFact[nX,5] == x[5]} )
				If nY == 0
					aAdd(aRet , aImpFact[nX])
				Else
					aRet[nY,3] += aImpFact[nX,3]
				Endif
			Endif
		Next nX

		// Regenera arreglo de impuestos, sumario 
		aSize( aImpFact , 0 )
		aEval( aTras , { |x| aAdd(aImpFact,x) } )
		aEval( aRet  , { |x| aAdd(aImpFact,x) } )
	Endif
	
	// Cuadre de cantidad de decimales entre el importe y descuento
	if nDeciDesc > nDeciTot 
		nDeciTot := nDeciDesc
	Else
		nDeciDesc := nDeciTot
	Endif
	
	aEval( aDetFac  , { |x| Round(nSumDesc += x[9],nDeciDesc) } )
	
	nDescTot :=NoRound(Iif(AllTrim(cEspecie)=="NCC",SF1->F1_DESCONT,SF2->F2_DESCONT),2)
	
	nDifer := nDescTot - nSumDesc

	aDetFac[len(aDetFac)][9]+=nDifer
	
	If lCadena //Cadena Original
		Do Case
			Case cOpc == "CO" //Conceptos
				aMercCP := {}
				nTotExen := 0				
				aSort(aDetFac,,,{|x,y| x[17] < y[17]}) //Ordena item ascendente 
				For nX := 1 To Len(aDetFac)
					lAgrCon := IIf(AllTrim(cEspecie) $ "NF" .And. lCPorte .And. !lTras .And. (!(aDetFac[nX][18] == "SV") .And. aDetFac[nX][7] == 0),.F.,.T.)
					If lAgrCon
						//Conceptos
						nImporte := IIf(lTras,0,aDetFac[nX][8])
						nValUnit := IIf(lTras,0,aDetFac[nX][7])
						//Exentos
						If aDetFac[nX][16] .And. !lTras .And. lCfdi40
							nTotExen +=nImporte
						EndIf
						If lPECONCEP
							cTamano := iif(AllTrim(cEspecie)=="NCC",TamSX3("D1_ITEM")[1],TamSX3("D2_ITEM")[1])
							aConcepto := ExecBlock("LOCXCONCEP",.F.,.F.,{SubStr(aDetFac[nX][2],cTamano+1),SubStr(aDetFac[nX][2],1,cTamano)})
							cXMLStr += Iif(Empty(aConcepto[1]),aDetFac[nX][1],aConcepto[1]) + cSepara+;
							Iif(Empty(aConcepto[2]),aDetFac[nX][2],aConcepto[2]) + cSepara +;
							Iif(Empty(aConcepto[3]),Alltrim(Str(aDetFac[nX][3])),Alltrim(Str(aConcepto[3]))) + cSepara +;
							Iif(Empty(aConcepto[4]),aDetFac[nX][4],aConcepto[4]) + cSepara +;
							Iif(Empty(aConcepto[5]), IIF( EMPTY(aDetFac[nX][5]) , "" , aDetFac[nX][5] + cSepara ),aConcepto[5]+cSepara)+; 
							Iif(Empty(aConcepto[6]),CFDCarEsp(aDetFac[nX][6],.F.), CFDCarEsp(aConcepto[6],.F.)) + cSepara
						Else
							cXMLStr += aDetFac[nX][1] + cSepara +;
							aDetFac[nX][2] + cSepara +;
							Alltrim(Str(aDetFac[nX][3])) + cSepara +;
							aDetFac[nX][4] + cSepara +;
							IIF( EMPTY(aDetFac[nX][5]) , "" , aDetFac[nX][5] + cSepara )+; 
							CFDCarEsp(aDetFac[nX][6],.F.) + cSepara
						Endif
						
						//Suma de gastos de Flete, Seguro y Despensa, recalcula Valor Unitario e Importe
						If Len(aDetFac[nX]) >= 28 .And. ((aDetFac[nX][28][1]+aDetFac[nX][28][2]+aDetFac[nX][28][3])) > 0
							nImporte += (aDetFac[nX][28][1]+aDetFac[nX][28][2]+aDetFac[nX][28][3])
							nValUnit := (nImporte / aDetFac[nX][3])
						EndIf

						cValUnit		:= Alltrim(Str(nValUnit,nTamVUni,nDeciVUni))
						cImporte		:= Alltrim(Str(nImporte,nTamTot,nDeciTot))

						cXMLStr += cValUnit + cSepara + ;
								cImporte + IIf(!lTras, IIf(aDetFac[nX][9] == 0, "", cSepara + Alltrim(Str(aDetFac[nX][9],14,nDeciDesc))),"")+cSepara
						
						//Objeto de Impuesto
						If lCfdi40
							cXMLStr += Iif((aDetFac[nX][16] .And. !lTras) .Or. (aDetFac[nX][10] <> Nil .And. (Len(aDetFac[nX][11]) > 0 .Or. Len(aDetFac[nX][12]) > 0)),"02","01")+ cSepara
						Endif
						//Impuestos
						If aDetFac[nX][16] .And. !lTras //Exento
							cXMLStr += Alltrim(Str(nImporte,14,nCentCFD)) + cSepara + "002" + cSepara + "Exento" + cSepara
						EndIf
						If aDetFac[nX][10] <> Nil .And. (aDetFac[nX][11] <> Nil .Or. aDetFac[nX][12] <> Nil)
							//Impuestos Item (Traslado)
							For nY := 1 To Len(aDetFac[nX][11])
								If aDetFac[nX][11][nY][1] > 0
									cXMLStr += Alltrim(Str(aDetFac[nX][11][nY][1],14,4)) + cSepara + Alltrim(aDetFac[nX][11][nY][2]) + cSepara + "Tasa" + ;
											cSepara + Alltrim(Str(aDetFac[nX][11][nY][3],14,6)) + cSepara + Alltrim(Str(aDetFac[nX][11][nY][4],14,2)) + cSepara
								EndIf
							Next nY
							//Impuestos Item (Retenciones)
							For nY := 1 To Len(aDetFac[nX][12])
								If aDetFac[nX][12][nY][1] > 0
									cXMLStr += Alltrim(Str(aDetFac[nX][12][nY][1],14,4)) + cSepara + Alltrim(aDetFac[nX][12][nY][2]) + cSepara + "Tasa" + ;
											cSepara + Alltrim(Str(aDetFac[nX][12][nY][3],14,6)) + cSepara + Alltrim(Str(aDetFac[nX][12][nY][4],14,2)) + cSepara
								EndIf
							Next nY
							If !Empty(aDetFac[nX][13]) //InformacionAduanera
								aNumPed := STRTOKARR(aDetFac[nX][13], "|")
								For nLoop := 1 To Len(aNumPed)
									If !(Empty(aNumPed[nLoop]))
										cXMLStr += Alltrim(StrTran(aNumPed[nLoop],cDosEspac,cUnEspac)) + cSepara
									EndIf
								Next nLoop
							EndIf
							If !Empty(aDetFac[nX][14]) //Cuenta predial
								cXMLStr += Alltrim(aDetFac[nX][14]) + cSepara
							EndIf
						EndIf
						//Partes
						If aDetFac[nX][15] <> Nil .And. Upper(cCFDStru) <> "N"
							For nY := 1 To Len(aDetFac[nX][15])
								cXMLStr += Alltrim(aDetFac[nX][15][nY][1]) + cSepara + Alltrim(aDetFac[nX][15][nY][2]) + cSepara ;
											+ Alltrim(Str(aDetFac[nX][15][nY][3])) + cSepara + Alltrim(aDetFac[nX][15][nY][4]) + cSepara ;
											+ CFDCarEsp(Alltrim(aDetFac[nX][15][nY][5]),.F.)
								If aDetFac[nX][15][nY][6] <> 0
									cXMLStr += cSepara + Alltrim(Transform(aDetFac[nX][15][nY][6], cPict1)) + cSepara + Alltrim(Transform(aDetFac[nX][15][nY][6] * aDetFac[nX][15][nY][3], cPict1))
								EndIf
								cXMLStr += cSepara
							Next nY
						EndIf
						If lCPorte .And. (lTras .Or. (!(aDetFac[nX][18] == "SV") .And. aDetFac[nX][7] > 0))
							aAdd(aMercCP,{aDetFac[nX][1], ; //1.BienesTransp
							Alltrim(Str(aDetFac[nX][3])), ; //2.Cantiad
							aDetFac[nX][4], ;               //3.ClaveUnidad
							Alltrim(CFDCarEsp(aDetFac[nX][6],.T.)), ;//4.Descripcion
							aDetFac[nX][19], ; //5.FraccionArancelaria
							"MXN", ;           //6.Moneda
							aDetFac[nX][20], ; //7.PesoEnKg
							aDetFac[nX][21], ; //8.UUIDComercioExt
							IIf(aDetFac[nX][7] > 0,aDetFac[nX][8],aDetFac[nX][22]), ; //9.ValorMercancia
							aDetFac[nX][23], ; //10.Cve Material Meligroso
							aDetFac[nX][24], ; //11.Embalaje
							aDetFac[nX][25], ; //12.IDOrigen
							aDetFac[nX][26], ; //13.IDDestino
							aDetFac[nX][13], ;  //14.Pedimento
							ObtColSAT("S019",aDetFac[nX][1],1,8,189,3),;//15.Material Peligroso "0", "1" o "0,1"
							aDetFac[nX][27] ; //16.Material Peligroso Si/No
							}) 	
						EndIf
					Else
						If lCPorte .And. AllTrim(cEspecie)=="NF"
							aAdd(aMercCP,{aDetFac[nX][1], ; //1.BienesTransp
							Alltrim(Str(aDetFac[nX][3])), ; //2.Cantiad
							aDetFac[nX][4], ;               //3.ClaveUnidad
							Alltrim(CFDCarEsp(aDetFac[nX][6],.T.)), ;//4.Descripcion
							aDetFac[nX][19], ; //5.FraccionArancelaria
							"MXN", ;           //6.Moneda
							aDetFac[nX][20], ; //7.PesoEnKg
							aDetFac[nX][21], ; //8.UUIDComercioExt
							aDetFac[nX][22], ; //9.ValorMercancia
							aDetFac[nX][23], ; //10.Cve Material Meligroso
							aDetFac[nX][24], ; //11.Embalaje
							aDetFac[nX][25], ; //12.IDOrigen
							aDetFac[nX][26], ; //13.IDDestino
							aDetFac[nX][13], ;  //14.Pedimento
							ObtColSAT("S019",aDetFac[nX][1],1,8,189,3),;//15.Material Peligroso "0", "1" o "0,1"
							aDetFac[nX][27] ; //16.Material Peligroso Si/No
							}) 
						EndIf					
					EndIf
				Next nX
	    Case cOpc == "TI" .And. !lTras //Total de impuestos
			//Acumulado de Exentos
			If nTotExen > 0
				cXMLImpTra += Alltrim(Str(nTotExen,14,2)) + cSepara + "002" + cSepara + "Exento" + cSepara
			EndIf
	    
			For nX := 1 To Len(aImpFact) //Generacion de Retenciones/Traslados
				If Empty(aImpFact[nX][2]) .And. aImpFact[nX][7] == "T"
 					cXMLImpTra += Iif(lCfdi40,Alltrim(Str(aImpFact[nX][10],14,2))+cSepara,"")+Alltrim(aImpFact[nX][5]) + cSepara + "Tasa" + cSepara + Alltrim(Str(aImpFact[nX][8],14,6)) + cSepara + Alltrim(Str(aImpFact[nX][3],14,2)) + cSepara
			        nTotTraL += Round(aImpFact[nX][3], 2)
				ElseIf Empty(aImpFact[nX][2]) .And. aImpFact[nX][7] == "R"
			        cXMLImpRet += Alltrim(aImpFact[nX][5]) + cSepara + Alltrim(Str(aImpFact[nX][3],14,2)) + cSepara
			        nTotRetL += Round(aImpFact[nX][3], 2)
				EndIf
			Next nX
			
			If !Empty(cXMLImpRet)
				cXMLStr += cXMLImpRet + Alltrim(Str(nTotRetL,14,2)) + cSepara
			EndIf
			
			If !Empty(cXMLImpTra)
				cXMLStr += cXMLImpTra + iif(Len(aImpFact)>0 , Alltrim(Str(nTotTraL,14,2)) + cSepara,"")
			EndIf
			
	    Case cOpc == "IL" //Impuestos Locales
				If Len(aTrasLoc) > 0 .Or. Len(aRetLoc) > 0
					AEval(aTrasLoc,{|x| Round(nTotTraL += x[3],2) })
					AEval(aRetLoc,{|x| Round(nTotRetL += x[3],2) })
					cXMLStr := "1.0" + cSepara + Alltrim(Str(nTotRetL,14,2)) + cSepara + Alltrim(Str(nTotTraL,14,2)) + cSepara
					For nX := 1 To Len(aRetLoc)
						If aRetLoc[nX][3] > 0
							cXMLStr += Alltrim(aRetLoc[nX][1]) + cSepara + Alltrim(Str(aRetLoc[nX][2],14,2)) + cSepara + Alltrim(Str(aRetLoc[nX][3],14,2)) + cSepara
						EndIf
					Next
					For nX := 1 To Len(aTrasLoc)
						If aTrasLoc[nX][3] > 0
							cXMLStr += Alltrim(aTrasLoc[nX][1]) + cSepara + Alltrim(Str(aTrasLoc[nX][2],14,2)) + cSepara + Alltrim(Str(aTrasLoc[nX][3],14,2)) + cSepara
						EndIf
					Next
				EndIf
		EndCase
	Else
		Do Case
			Case cOpc == "CO" //Conceptos
				cXMLStr := '	<cfdi:Conceptos>' + cCRLF
				aSort(aDetFac,,,{|x,y| x[17] < y[17]}) //Ordena item ascendente
				For nX := 1 To Len(aDetFac)
					lAgrCon := IIf(AllTrim(cEspecie) $ "NF" .And. lCPorte .And. !lTras .And. (!(aDetFac[nX][18] == "SV") .And. aDetFac[nX][7] == 0),.F.,.T.)
					If lAgrCon
						//Concepto
						nImporte := IIf(lTras,0,aDetFac[nX][8])
						nValUnit := IIf(lTras,0,aDetFac[nX][7])
						cXMLStr += ' 		<cfdi:Concepto'
						cXMLImp := ""
						cImpTrasCO := ""
						cImpRetCO := ""
						
						If lPECONCEP
							cTamano := iif(AllTrim(cEspecie)=="NCC",TamSX3("D1_ITEM")[1],TamSX3("D2_ITEM")[1])
							aConcepto := ExecBlock("LOCXCONCEP",.F.,.F.,{SubStr(aDetFac[nX][2],cTamano+1),SubStr(aDetFac[nX][2],1,cTamano)})
							cXMLStr += ' ClaveProdServ="' + Iif(Empty(aConcepto[1]),aDetFac[nX][1],aConcepto[1]) +;
										'" NoIdentificacion="' + Iif(Empty(aConcepto[2]),aDetFac[nX][2],aConcepto[2]) +;
										'" Cantidad="' + Iif(Empty(aConcepto[3]),Alltrim(Str(aDetFac[nX][3])),Alltrim(Str(aConcepto[3]))) +;
										'" ClaveUnidad="' + Iif(Empty(aConcepto[4]),aDetFac[nX][4],aConcepto[4]) +;
										Iif(Empty(aConcepto[5]),IIF( EMPTY(aDetFac[nX][5]) , "" , '" Unidad="' + aDetFac[nX][5]),'" Unidad="' + aConcepto[5]) +;
										'" Descripcion="' + Iif(Empty(aConcepto[6]),Alltrim(CFDCarEsp(aDetFac[nX][6],.T.)),Alltrim(CFDCarEsp(aConcepto[6],.T.)))
						Else
							
							cXMLStr += ' ClaveProdServ="' + aDetFac[nX][1] +;
										'" NoIdentificacion="' + aDetFac[nX][2] +;
										'" Cantidad="' + Alltrim(Str(aDetFac[nX][3])) +;
										'" ClaveUnidad="' + aDetFac[nX][4] +;
										IIF( EMPTY(aDetFac[nX][5]) , "" , '" Unidad="' + aDetFac[nX][5]) +;
										'" Descripcion="' + Alltrim(CFDCarEsp(aDetFac[nX][6],.T.))
						EndIf
						
						//Suma de gastos de Flete, Seguro y Despensa, recalcula Valor Unitario e Importe
						If Len(aDetFac[nX]) >= 28 .And. ((aDetFac[nX][28][1]+aDetFac[nX][28][2]+aDetFac[nX][28][3])) > 0
							nImporte += (aDetFac[nX][28][1]+aDetFac[nX][28][2]+aDetFac[nX][28][3])
							nValUnit := (nImporte / aDetFac[nX][3])
						EndIf

						cValUnit := Alltrim(Str(nValUnit,nTamVUni,nDeciVUni))
						cImporte := Alltrim(Str(nImporte,nTamTot,nDeciTot))

						cXMLStr += '" ValorUnitario="' + cValUnit +;
									'" Importe="' + cImporte +;
									IIf(!lTras, IIf(aDetFac[nX][9] == 0, "", '" Descuento="' + Alltrim(Str(aDetFac[nX][9],14,nDeciDesc))), "")						
						//Objeto de Impuestos
						If lCfdi40
							cXMLStr +='" ObjetoImp="'+Iif((aDetFac[nX][16] .And. !lTras) .Or. (aDetFac[nX][10] <> Nil .And. (Len(aDetFac[nX][11]) > 0 .Or. Len(aDetFac[nX][12]) > 0)),"02","01")
						Endif

						cXMLStr += '">' + cCRLF
				
						If aDetFac[nX][16] .And. !lTras //Exento
							cXMLStr += ' 			<cfdi:Impuestos>' + cCRLF
							cXMLStr += ' 				<cfdi:Traslados>' + cCRLF
							cXMLStr += ' 					<cfdi:Traslado Base="' + Alltrim(Str(nImporte,14,nCentCFD)) + '" Impuesto="002" TipoFactor="Exento"/>' + cCRLF
							cXMLStr += ' 				</cfdi:Traslados>' + cCRLF
							cXMLStr += ' 			</cfdi:Impuestos>' + cCRLF
						EndIf
				
						If aDetFac[nX][10] <> Nil .And. (aDetFac[nX][11] <> Nil .Or. aDetFac[nX][12] <> Nil)
							
							//Impuestos Item (Traslado)
							For nY := 1 To Len(aDetFac[nX][11])
								If aDetFac[nX][11][nY][1] > 0
									cImpTrasCO += ' 					<cfdi:Traslado Base="' + Alltrim(Str(aDetFac[nX][11][nY][1],14,4)) + '" Impuesto="' + Alltrim(aDetFac[nX][11][nY][2]) + '" TipoFactor="Tasa" TasaOCuota="' + Alltrim(Str(aDetFac[nX][11][nY][3],14,6)) + '" Importe="'  + Alltrim(Str(aDetFac[nX][11][nY][4],14,2)) + '"/>' + cCRLF
								EndIf
							Next nY
							
							//Impuestos Item (Retenciones)
							For nY := 1 To Len(aDetFac[nX][12])
								If aDetFac[nX][12][nY][1] > 0
									cImpRetCO += ' 					<cfdi:Retencion Base="' + Alltrim(Str(aDetFac[nX][12][nY][1],14,4)) + '" Impuesto="' + Alltrim(aDetFac[nX][12][nY][2]) + '" TipoFactor="Tasa" TasaOCuota="' + Alltrim(Str(aDetFac[nX][12][nY][3],14,6)) + '" Importe="'  + Alltrim(Str(aDetFac[nX][12][nY][4],14,2)) + '"/>' + cCRLF
								EndIf
							Next nY
							
							If !Empty(cImpTrasCO) //Imprime nodo Traslado si hay información
								cXMLImp += ' 				<cfdi:Traslados>' + cCRLF
								cXMLImp += cImpTrasCO
								cXMLImp += ' 				</cfdi:Traslados>' + cCRLF
							EndIf
							
							If !Empty(cImpRetCO) //Imprime nodo Retenciones si hay información
								cXMLImp += ' 				<cfdi:Retenciones>' + cCRLF
								cXMLImp += cImpRetCO
								cXMLImp += ' 				</cfdi:Retenciones>' + cCRLF
							EndIf
							
							If !Empty(cXMLImp)
								cXMLStr += ' 			<cfdi:Impuestos>' + cCRLF
								cXMLStr += cXMLImp + cCRLF
								cXMLStr += ' 			</cfdi:Impuestos>' + cCRLF
							EndIf
							
							If !Empty(aDetFac[nX][13]) //InformacionAduanera
								aNumPed := STRTOKARR(aDetFac[nX][13], "|")
								For nLoop := 1 To Len(aNumPed)
									If !(Empty(aNumPed[nLoop]))
										cXMLStr += IIf(Empty(cXMLStr), CRLF,"") + Space(12) + '<cfdi:InformacionAduanera NumeroPedimento="' + Alltrim(aNumPed[nLoop]) + '"/>' + IIf(nLoop <> Len(aNumPed), CRLF, "") + cCRLF
									EndIf
								Next nLoop
							EndIf
							
							If !Empty(aDetFac[nX][14]) //Cuenta predial
								cXMLStr += Space(12) + '<cfdi:CuentaPredial Numero="' + Alltrim(aDetFac[nX][14]) + '"/>' + cCRLF
							EndIf
							
						EndIf
				
						//Partes
						If aDetFac[nX][15] <> Nil .And. Upper(cCFDStru) <> "N"
							For nY := 1 To Len(aDetFac[nX][15])
								cXMLStr += CRLF + Space(12) + '<cfdi:Parte'
								cXMLStr += ' ClaveProdServ="' + Alltrim(aDetFac[nX][15][nY][1]) + '"'
								cXMLStr += ' NoIdentificacion="' + Alltrim(aDetFac[nX][15][nY][2]) + '"'
								cXMLStr += ' Cantidad="' + Alltrim(Str(aDetFac[nX][15][nY][3])) + '"'
								cXMLStr += ' Unidad="' + Alltrim(aDetFac[nX][15][nY][4]) + '"'
								cXMLStr += ' Descripcion="' + CFDCarEsp(Alltrim(aDetFac[nX][15][nY][5])) + '"'
								If aDetFac[nX][15][nY][6] <> 0
									cXMLStr += ' ValorUnitario="' + Alltrim(Transform(aDetFac[nX][15][nY][6], cPict1)) + '"'
									cXMLStr += ' Importe="' + Alltrim(Transform(aDetFac[nX][15][nY][6] * aDetFac[nX][15][nY][3], cPict1)) + '"'
								EndIf
								cXMLStr += '/>' + cCRLF
							Next nY
						EndIf
						cXMLStr += ' 		</cfdi:Concepto>' + cCRLF
					EndIf
				Next nX
				cXMLStr += '	</cfdi:Conceptos>'
			Case cOpc == "TI" .And. !lTras //Total de impuestos
				//Acumulado de Exentos
				If nTotExen > 0
					cXMLImpTra += '			<cfdi:Traslado Base="' + Alltrim(Str(nTotExen,14,2)) + '" Impuesto="002" TipoFactor="Exento"/>' + cCRLF
				EndIf
				For nX := 1 To Len(aImpFact) //Generacion de Retenciones/Traslados
					If Empty(aImpFact[nX][2]) .And. aImpFact[nX][7] == "R"
				        cXMLImpRet += '			<cfdi:Retencion Impuesto="' + Alltrim(aImpFact[nX][5]) + '" Importe="' + Alltrim(Str(aImpFact[nX][3],14,2)) + '"/>' + cCRLF					        
				        nTotRetL += Round(aImpFact[nX][3], 2)
					ElseIf Empty(aImpFact[nX][2]) .And. aImpFact[nX][7] == "T"								
				        cXMLImpTra += '			<cfdi:Traslado' +Iif(lCfdi40,' Base="'+Alltrim(Str(aImpFact[nX][10],14,2))+'"',"")+' Impuesto="' + Alltrim(aImpFact[nX][5]) + '" TipoFactor="Tasa" TasaOCuota="' + Alltrim(Str(aImpFact[nX][8],14,6)) + '" Importe="' + Alltrim(Str(aImpFact[nX][3],14,2)) + '"/>' + cCRLF					      						        					      
				        nTotTraL += Round(aImpFact[nX][3], 2)
					EndIf
				Next nX
				
				If !Empty(cXMLImpTra) .Or. !Empty(cXMLImpRet) //Se valida que haya impuestos por imprimir
				
					//Se arma estructura del Nodo Impuestos
					cXMLStr := '    <cfdi:Impuestos '
					If !Empty(cXMLImpRet)
						cXMLStr += 'TotalImpuestosRetenidos="' + Alltrim(Str(nTotRetL,14,2)) + '" '
					EndIf
					If !Empty(cXMLImpTra) .and. Len(aImpFact)>0
						cXMLStr += 'TotalImpuestosTrasladados="' + Alltrim(Str(nTotTraL,14,2)) + '" '
					EndIf
					cXMLStr += '>' + cCRLF
					
					If !Empty(cXMLImpRet)
						cXMLStr += '		<cfdi:Retenciones>' + cCRLF
						cXMLStr += cXMLImpRet //Se concatena string con impuestos retenidos
						cXMLStr += '		</cfdi:Retenciones>' + cCRLF
					EndIf
					
					If !Empty(cXMLImpTra)
						cXMLStr += '		<cfdi:Traslados>' + cCRLF
						cXMLStr += cXMLImpTra //Se concatena string con impuestos trasladados
						cXMLStr += '		</cfdi:Traslados>' + cCRLF
					EndIf
					
					cXMLStr += '    </cfdi:Impuestos>' + cCRLF
					
				EndIf

			Case cOpc == "IL" //Impuestos Locales
					If Len(aTrasLoc) > 0 .Or. Len(aRetLoc) > 0
						AEval(aTrasLoc,{|x| Round(nTotTraL += x[3],2) })
						AEval(aRetLoc,{|x| Round(nTotRetL += x[3],2) })

						cXMLStr := '		<implocal:ImpuestosLocales version="1.0" TotaldeRetenciones="' + Alltrim(Str(nTotRetL,14,2)) + '" TotaldeTraslados="' + Alltrim(Str(nTotTraL,14,2)) + '">' + cCRLF
						For nX := 1 To Len(aTrasLoc)
							If aTrasLoc[nX][3] > 0
								cXMLStr += '			<implocal:TrasladosLocales ImpLocTrasladado="' + Alltrim(aTrasLoc[nX][1]) + '" TasadeTraslado="' + Alltrim(Str(aTrasLoc[nX][2],14,2)) + '" Importe="' + Alltrim(Str(aTrasLoc[nX][3],14,2)) + '"/>' + cCRLF
							EndIf
						Next
						For nX := 1 To Len(aRetLoc)
							If aRetLoc[nX][3] > 0
								cXMLStr += '			<implocal:RetencionesLocales ImpLocRetenido="' + Alltrim(aRetLoc[nX][1]) +'" TasadeRetencion="' + Alltrim(Str(aRetLoc[nX][2],14,2)) + '" Importe="' + Alltrim(Str(aRetLoc[nX][3],14,2)) + '"/>' + cCRLF
							EndIf
						Next
						cXMLStr += '		</implocal:ImpuestosLocales>' + cCRLF
					EndIf
		EndCase
	EndIf

	If cOpc == "TI"
		// Restaura matriz de impuestos
		aSize( aImpFact , 0 )
		aImpFact := aClone(aImpFactBu)
	Endif

Return cXMLStr

/*/{Protheus.doc} fGetCpo
  Obtiene los campos VALIMP,BASIMP Y ALQIMP de la tabla dada
  @type function
  @author mayra.camargo
  @since 23/08/2017
  @version 1.0
  @param cTabla, character, Tabla a la cuál se le buscará los campos VALIMP,BASEIMP Y ALQIMP
  @return cCPolvr, ${return_description}
  @example
  (examples)
  @see (links_or_references)
 /*/
Static Function fGetCpo(cTabla)
	Local aArea 	:= getArea()
	Local cCPolvr	:= ""

	dbSelectArea("SX3")
	SX3->(dbSetOrder(1)) // X3_ARQUIVO + X3_ORDEM

	If SX3->(dbSeek(cTabla))
		While SX3->(!eof())  .and. SX3->X3_ARQUIVO == cTabla
			If "_VALIMP" $ SX3->X3_CAMPO .OR. "_ALQIMP" $ SX3->X3_CAMPO .OR. "_BASIMP" $ SX3->X3_CAMPO
				cCPolvr	+= "," + X3_CAMPO
			EndIF
			SX3->(dbSkip())
		Enddo
	EndIF
	RestArea(aArea)
Return cCPolvr    

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FormPagGlo  ºAutor  ³Luis Enríquez    º Data ³ 04/04/2018  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Obtiene forma de pago del comprobante simplificado de mayorº±±
±±º          ³ monto de entre los contenidos en el CFDI global. (MEX)    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATSMEX.INI                                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FormPagGlo(cDoc,cSerie)
	Local cQuery := ""
	Local cAliasTRB := "FPTRB"
	Local cForPago := ""
	Local cFPagSAT := ""
	
	If Select(cAliasTRB) > 0
		(cAliasTRB)->(DbClosearea())
	EndIf 	
	
	cQuery := "SELECT SF2.F2_VALBRUT, SL4.L4_VALOR, SL4.L4_FORMA"
	cQuery += " FROM " + RetSqlName("SF2") + " SF2 INNER JOIN " 
	cQuery += RetSqlName("SL1") + " AS SL1 ON SF2.F2_DOC = SL1.L1_DOC AND SF2.F2_SERIE = SL1.L1_SERIE INNER JOIN "
	cQuery += RetSqlName("SL4") + " AS SL4 ON SL1.L1_NUM = SL4.L4_NUM"
	cQuery += " WHERE (SF2.F2_NFORI = '" + cDoc + "') AND (SF2.F2_SERIORI = '" + cSerie + "')
	cQuery += " AND (SF2.D_E_L_E_T_ = ' ')"
	cQuery += " AND (SL1.D_E_L_E_T_ = ' ')"
	cQuery += " AND (SL4.D_E_L_E_T_ = ' ')"
	cQuery += " ORDER BY SF2.F2_VALBRUT DESC, SL4.L4_VALOR DESC, SL4.L4_FORMA"
	
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTRB,.T.,.T.)

	While !(cAliasTRB)->(Eof())
		cForPago := (cAliasTRB)->L4_FORMA
		exit
		(cAliasTRB)->(DbSkip())		
	End
	If Alltrim(cForPago) == "$"
		cFPagSAT := "01"
	ElseIf Alltrim(cForPago) == "CH"
		cFPagSAT := "02"
	EndIf
Return cFPagSAT

/*/{Protheus.doc} LXF3UUID
Función utilizada en consulta específica SD1XML. Permite 
seleccionar XML por ítem de la Factura. 
@type Función 
@author mayra.camargo
@since 18/09/2018
@version 1.0
@return Lógico, true
/*/
Function LXF3UUID()

Local _aArea	:= GetArea()
Local _cTipo	:= STR0131 // "Archivos XML|*.XML"
Local _cArq		:= ""	// Arquivo XML LOCAL onde estarao as informacoes do UUID e RFC
Local cPathXML 	:= SuperGetMV("MV_XMLPRO",.F.,"")

Private _oXML	:= NIL	// XML que sera parseado
Private _cMoveArq	:= cPathXML + "\arq_"+DtoS(DATE())+StrTran(TIME(),":","")+".XML" // Diretorio que o XML sera movido

If Empty(cPathXML)
	MsgAlert(STR0132) // "Debe configurar parámetro MV_XMLPRO"
	Return .F.
EndIf

_cArq := cGetFile(_cTipo,STR0133,0,"",.F.,GETF_LOCALHARD + GETF_LOCALFLOPPY + GETF_NETWORKDRIVE,.T.,.T.) // "Selecione arquivos do tipo XML:"

If Empty(_cArq)
	MsgStop(STR0134) // "Archivo no seleccionado!"
	Return .F.
Else
	// Copia de archivo a servidor
	If __CopyFile( _cArq,_cMoveArq )
		LXPARSE()
		// Remove arquivo da pasta  //
		fErase( _cMoveArq )		
	Else
		MsgStop(STR0135) // "Falla en la copia del archivo XML para el RootPath de Protheus"
		Return .F.
	EndIf		
EndIf
RestArea( _aArea )
Return .T.

/*/{Protheus.doc} LXPARSE()
LECTURA XML PARA OBTENER UUID  Y VALIDAR CONTENIDO
@type
@author mayra.camargo
@since 18/09/2018
@version 1.0
@return Lógico, True
/*/
Static Function LXPARSE()

Local _cErrMsg	:= ""
Local _cWrnMsg	:= ""
Local __cUUID	:= ""	// Dados do UUID
Local __cRFC 	:= ""	// RFC Proveedor 
Local __cRFCRec	:= ""	// RFC Emisor  

// Realiza o PARSE do XML   
_oXml := XmlParserFile( _cMoveArq, "_", @_cErrMsg, @_cWrnMsg )

If _oXml == NIL
	MsgStop(STR0136 + _cErrMsg ) // "Falla de lectura de XML: "
	Return .F.
Else
	// Atualiza UUID  
	If !Type("_oXml:_CFDI_COMPROBANTE") == "U"
		If !Type("_oXml:_CFDI_COMPROBANTE:_CFDI_COMPLEMENTO") == "U"
			If 	!Type("_oXml:_CFDI_COMPROBANTE:_CFDI_COMPLEMENTO:_TFD_TIMBREFISCALDIGITAL") == "U"
				If !Type("_oXml:_CFDI_COMPROBANTE:_CFDI_COMPLEMENTO:_TFD_TIMBREFISCALDIGITAL:_UUID") == "U"
					__cUUID := _oXml:_CFDI_COMPROBANTE:_CFDI_COMPLEMENTO:_TFD_TIMBREFISCALDIGITAL:_UUID:TEXT
				EndIf	
			EndIf	
		EndIf
		// Atualiza RFC   //
		If !Type("_oXml:_CFDI_COMPROBANTE:_CFDI_EMISOR") == "U"
			If !Type("_oXml:_CFDI_COMPROBANTE:_CFDI_EMISOR:_RFC") == "U"			
				__cRFC := _oXml:_CFDI_COMPROBANTE:_CFDI_EMISOR:_RFC:TEXT
			EndIf	
		EndIf
		If !Type("_oXml:_CFDI_COMPROBANTE:_CFDI_RECEPTOR") == "U"
			If !Type("_oXml:_CFDI_COMPROBANTE:_CFDI_RECEPTOR:_RFC") == "U"			
				__cRFCRec := _oXml:_CFDI_COMPROBANTE:_CFDI_RECEPTOR:_RFC:TEXT
			EndIf	
		EndIf
	Else
		MsgStop(STR0137) // "Este XML no contiene la estructura necessaria para a lectura de campos UUID y RFC"
	EndIf		
EndIf

_a_CFDI := { __cUUID, __cRFC, __cRFCRec }

Return

/*/{Protheus.doc} LXFUNUUID
Retorno da variable STATIC --> Dentro da Consulta Padrao SD1XML 
@type function
@author mayra.camargo
@since 18/09/2018
@version 1.0
@return Array, Datos CFDI
/*/
Function LXFUNUUID() ; Return( _a_CFDI )

/*/{Protheus.doc} LxVldRFC
Validaciones del campo D1_UUID de RFC
@type Function
@author mayra.camargo
@since 18/09/2018
@version 1.0
/*/
Function LxVldRFC()
	Local _aArea	:= GetArea()
	Local lRet		:= .T.
	Local cTmpRFC	:= ""
	Local cTmpUUID	:= ""
	Local nPosUUID	:= aScan(aHeader, {|x| AllTrim(x[2]) == "D1_UUID"})

	/*
	* _a_CFDI[1] = UUID
	* _a_CFDI[2] = RFC Emisor
	* _a_CFDI[3] = RFC Receptor
	*/

	If Empty(M->D1_UUID) .And. (Len(_a_CFDI) < 3 .Or. Empty(_a_CFDI[3])) //Si el campo es seleccionado sin informar valor
		Return lRet
	EndIf

	If Len(_a_CFDI) < 3 //Si no se utiliza la opcion de la consulta
		Return lRet
	EndIf

	cTmpRFC := _a_CFDI[3]
	cTmpUUID := _a_CFDI[1]
	If AllTrim(cTmpUUID) == ""
		MsgStop ( STR0140 ) //"El archivo XML seleccionado no contiene un Timbre Fiscal"
		lRet	:= .F.
	ElseIf Alltrim(SM0->M0_CGC) != Alltrim(cTmpRFC)
		MsgStop( STR0138 + Alltrim(SM0->M0_CGC)+ STR0139 + Alltrim(cTmpRFC) ) // "El RFC de la empresa " " no coincide con el RFC del Receptor en el documento XML, RFC: "
		lRet	:= .F.
	EndIf

	aSize(_a_CFDI,0) //Se inicializa el array a vacio
	
	RestArea(_aArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GeraTmpIR ³ Autor ³Marco Aurelio          ³ Data ³ 24/10/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³Arquivo temporario com as retencoes de impostos(IR) geradas ³±±
±±³          ³para autonomos(4a Categoria)                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³GeraTmpIR(ExpL1)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Especifico Peru                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GeraTmpIR(lDadosProv)
Local aArea     := GetArea()	
Local cQuery    := ""
Local nInd      := 0
Local aSelFil   := {}
Local aTelaWiz1 := {}
Local aTelaWiz2 := {}
Local aRetWiz   := {}
Local cPriFil   := ""

Static lExibeWiz := .t.
    
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Fecha o arquivo temporario caso existir ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Select("TMPPAG") > 0
	TMPPAG->(DbClosearea())
Endif 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Filtra as filias que serao processadas                                                                 ³
//³O array aFilsCalc eh gerado na execucao do MATA950 contendo as filiais selecionadas para processamento ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

For nInd:=1 To Len(aFilsCalc) 

	If aFilsCalc[nInd][1] 
		
		cPriFil := Iif(Empty(cPriFil),aFilsCalc[nInd][2],cPriFil)

		aAdd(aSelFil,aFilsCalc[nInd][2])

	EndIf

Next

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Chama a tela do Wizard para selecao do parametro somente se for selecionada mais que uma filial para   ³
//³processamento e neste caso somente para a primeira filial a ser processada.                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( ( Len(aSelFil)>1 ) .and. lExibeWiz )

	lExibeWiz := .f.
	
	aAdd(aTelaWiz1,STR0093)		//##Retenção de IR Quarta Categoria
	aAdd(aTelaWiz1,"")
	aAdd(aTelaWiz1,STR0094) 	//##Completar as Informações
	aAdd(aTelaWiz1,STR0095)		//##Complete com as informaçõesnecessárias para geração dos arquivos de IR Quarta Categoria

	aAdd(aTelaWiz2,{})   
	
	nPos := Len(aTelaWiz2)

	aAdd(aTelaWiz2[nPos],STR0096)	//##Retenção de IR Quarta Categoria
	aAdd(aTelaWiz2[nPos],STR0097)	//##Configuração necessaria
	
	aAdd(aTelaWiz2[nPos],{})        
	
	aAdd(aTelaWiz2[nPos][3],{0,"",,,,,,})
	aAdd(aTelaWiz2[nPos][3],{0,"",,,,,,})
	aAdd(aTelaWiz2[nPos][3],{1, STR0098+"? ",,,,,,})		//##Considera a geração dos arquivos por filial	
	aAdd(aTelaWiz2[nPos][3],{3,,,,,{STR0075,STR0076},,})	//##Sim##Não 

	If xMagWizard(aTelaWiz1,aTelaWiz2,"4ACAT")  

		xMagLeWiz("4ACAT",@aRetWiz,.T.) 
		
		lExitPFil := !(aRetWiz[1][1] == STR0075)	//##Sim
		
	EndIF

EndIf	

If ( TcSrvType() <> "AS/400" )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Busca pagamentos efetuados com retencao de imposto para autonomos de 4a Categoria ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Quando se tratar da geracao do arquivo referente aos dados dos provedores considera distinct para nao duplicar informacoes  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lDadosProv
   		cQuery := "SELECT DISTINCT TIPDOC,A2_NOMEPAT,A2_NOMEMAT,A2_NOMEPES, CGC,A2_DOMICIL,A2_CONVEN  FROM ( "
	EndIf
	
	cQuery += "SELECT A2_TIPDOC TIPDOC, A2_NOMEPAT, A2_NOMEMAT, A2_NOMEPES,A2_CGC CGC,A2_INDRRP INDICADOR,E2_EMISSAO DTEMIS, A2_DOMICIL, A2_CONVEN,F1_SERIE SERIE,F1_SERIE2 SERIE2,F1_SERORI SERIORI,F1_DOC DOC,F1_IMPRP IMPORTE,E2_VLCRUZ VALOR,E2_FORNECE,E2_LOJA,E2_PREFIXO, E2_BAIXA DTPAGO, FE_TIPO TIPO"
	cQuery += "	FROM "
	cQuery += RetSqlName("SA2")+" SA2, "	// Fornecedores
	cQuery += RetSqlName("SF1")+" SF1, "	// Cabecalho de NFE
	cQuery += RetSqlName("SE2")+" SE2 "		// Contas a Pagar
	cQuery += "LEFT JOIN " 
	cQuery += RetSqlName("SFE")+" SFE "  	// Retencoes de Impostos	
	cQuery += "ON FE_FILIAL "+Iif(lExitPFil,GetRngFil(aSelFil,"SFE")," = '"+xFilial("SFE")+"'")+" AND FE_FORNECE = E2_FORNECE AND FE_LOJA = E2_LOJA AND FE_SERIE = E2_PREFIXO AND FE_NFISCAL = E2_NUM "
 	cQuery += "   AND FE_PARCELA = E2_PARCELA AND FE_ESPECIE = E2_TIPO AND SFE.D_E_L_E_T_=''"
	cQuery += "	WHERE "
	cQuery += "   A2_FILIAL "+Iif(lExitPFil,GetRngFil(aSelFil,"SA2")," = '"+xFilial("SA2")+"'")
	cQuery += "   AND F1_FILIAL "+Iif(lExitPFil,GetRngFil(aSelFil,"SF1")," = '"+xFilial("SF1")+"'")
	cQuery += "   AND E2_FILIAL "+Iif(lExitPFil,GetRngFil(aSelFil,"SE2")," = '"+xFilial("SE2")+"'")
	cQuery += "   AND E2_BAIXA BETWEEN '"+Dtos(MV_PAR01)+"' AND '"+Dtos(MV_PAR02)+"' "
	cQuery += "   AND E2_SALDO = 0 "
	cQuery += "   AND A2_COD = E2_FORNECE AND A2_LOJA = E2_LOJA "
	cQuery += "   AND SUBSTRING(A2_CGC,1,1) = '1' AND A2_TIPO = '2'"
	cQuery += "   AND F1_FORNECE = E2_FORNECE AND F1_LOJA = E2_LOJA AND F1_SERIE = E2_PREFIXO AND F1_DOC = E2_NUM "
	cQuery += "   AND F1_TPDOC = '02'"
	cQuery += "   AND SE2.D_E_L_E_T_='' AND SA2.D_E_L_E_T_='' AND SF1.D_E_L_E_T_=''"

	If lDadosProv
   		cQuery += " ) ARQRET "
	EndIf

	cQuery := ChangeQuery( cQuery )
		
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"TMPPAG",.T.,.T.)     

Endif    

RestArea(aArea)
 
Return

/*/{Protheus.doc} LxIMPTES
Valida si impuesto existe en TES de detalle
@type function
@author luis.enriquez
@since 04/09/2019
@version 1.0
@param cCodImp, cTes
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/
Function LxIMPTES(cCodImp, cTes)
	Local aArea   := GetArea()	
	Local lRet    := .F.
	Local lExento := .F.
	Local cTmpSFC := getNextAlias()
	Local nCount  := 0
		
	BeginSql alias cTmpSFC
		SELECT FC_TES, FC_IMPOSTO
		FROM %table:SFC% SFC 
		WHERE SFC.FC_FILIAL = %exp:xfilial("SFC")%
		AND SFC.FC_TES = %exp:cTes%
		AND SFC.%notDel%
	EndSql
		
	count to nCount
	
	If nCount == 0
		lExento := .T.
	Else
		(cTmpSFC)->(dbGoTop())
		
		While (cTmpSFC)->(!Eof())
			If (cTmpSFC)->FC_IMPOSTO == cCodImp
				lRet := .T.
				Exit
			EndIf
			(cTmpSFC)->(dbSkip())			 
		EndDo
	EndIf
	
	(cTmpSFC)->(dbCloseArea())
	
	RestArea(aArea)
Return {lRet,lExento}


/*/{Protheus.doc} LxfBusTES
  Obtiene si la TES tiene configurado el campo F4_AGREG=N
  @type function
  @author veronica.flores
  @since 11/12/2020
  @version 1.0
  @param cTES, TES del producto
  @return lRet booleano segun la configuración del campo F4_AGREG en la TES
  @example
  (examples)
  @see (links_or_references)
 /*/
Function LxfBusTES(cTES)
Local aArea  := getArea()
Local cAddVal:= ""
Local lRet   := .T.
	
	DbSelectArea("SF4")
	SF4->(DbSetOrder(1)) //F4_FILIAL + F4_COD

	If SF4->(dbSeek(xFilial("SF4") + cTES))
		cAddVal := SF4->F4_AGREG
		lRet := IIF(cAddVal == "N", .F.,.T.)
	EndIf	
	RestArea(aArea)
Return lRet



/*/{Protheus.doc} fSumBC
  Obtiene el total de bonificacion de los productos cuando la TES tiene Agrega valor=N
  @type function
  @author veronica.flores
  @since 11/12/2020
  @version 1.0
  @param cDoc, Número del documento
  @param cSerie, Serie del documento
  @param cCliente, Cliente del documento
  @param cLoja, Tienda del documento
  @return nSumBC suma del total de bonificación de los productos de la factura.
  @example
  (examples)
  @see (links_or_references)
 /*/
Function fSumBC(cDoc, cSerie, cCliente, cLoja)

Local aArea     := getArea()
Local cTmpSD2	:= getNextAlias()
Local nSumBC	:= 0

BeginSql alias cTmpSD2
	SELECT SUM(D2_QUANT) AS nTotal
	FROM %table:SD2% SD2, %table:SF4% SF4  
	WHERE SD2.D2_FILIAL = %exp:xfilial("SD2")%
		AND SF4.F4_FILIAL = %exp:xfilial("SF4")%
		AND SF4.F4_CODIGO = SD2.D2_TES
		AND SD2.D2_DOC = %exp:cDoc%
		AND SD2.D2_SERIE = %exp:cSerie%
		AND SD2.D2_CLIENTE = %exp:cCliente%
		AND SD2.D2_LOJA = %exp:cLoja%
		AND	SF4.F4_AGREG = 'N'
		AND SF4.%notDel%
		AND SD2.%notDel%
	EndSql

	(cTmpSD2)->(dbGoTop())

	If (cTmpSD2)->nTotal <> 0
		nSumBC := (cTmpSD2)->nTotal * 0.01
	EndIf
	
	(cTmpSD2)->(dbCloseArea())
	RestArea(aArea)
	
Return nSumBC

/*/{Protheus.doc} LxActCpos
Función para ajuste de centavos de prorrateo NF Gastos Importacion.
@type
@author oscar.lopez
@since 09/06/2021
@version 1.0
@param aCGastos, array , Array con información de gastos.
@param aCols, array , Array con información de ítems de factura.
@see (links_or_references)
/*/
Function LxAjusPr(aCGastos, aCols)

	Local nPTes			:=	Ascan(aHeader,{|x| Alltrim(x[2]) == 'D1_TES'})
	Local nPTotal		:=	Ascan(aHeader,{|x| Alltrim(x[2]) == 'D1_TOTAL'})
	Local nValTotItm	:= 0
	Local nPosUltItm	:= 0
	Local nX			:= 0
	Local nI			:= 0
	Local nPos			:= 0
	Local aGastos		:= {}

	Pergunte('MT119A', .F.)

	If cPaisLoc $ "MEX" .And. FunName() $ "MATA101N" .And. MV_PAR01 == 0
		For nI := 1 To Len(aCGastos)
			If !(aCGastos[nI][3])
				nPos := Ascan(aGastos,{|x| Alltrim(x[2]) == aCGastos[nI][2]})
				If nPos > 0
					aGastos[nPos][1] += aCGastos[nI][1]
				Else
					AAdd(aGastos,{ aCGastos[nI][1], aCGastos[nI][2] })
				EndIf
			EndIf
		Next nI
	Else
		aGastos := aCGastos
	EndIf
	For nX := 1 To Len(aGastos)
		nValTotItm := 0
		nPosUltItm := 0
		For nI := 1 To Len(aCols)
			If aGastos[nX][2]==aCols[nI][nPTes]
				nValTotItm += aCols[nI][nPTotal]
				nPosUltItm := nI
			EndIf
		Next nI
		aCols[nPosUltItm][nPTotal]+=(aGastos[nX][1]-nValTotItm)
	Next nX
	
Return

/*/{Protheus.doc} LxVldBaixa
Esta rutina realiza la validación de borrado de títulos por Pagar, cuando
se realizó el registro de Movimientos Bancarios en FK2 o SE5.

@author Marco Augusto González Rivera 
@since 21/07/2021
@version P12
@param cAliasSE2    Alias do SE2
@param cOrigem      Origem da exclusao
@return lRet        Indica se a exclusao pode ser efetuada
/*/
Function LxVldBaixa(cAliasSE2, cOrigem)
	Local lRet := LxCanDelCP(cAliasSE2, cOrigem) //Valida registros en SE5

	If lRet .And. !(FunName() $ "MATA447")
		lRet := FaCanDelCP(cAliasSE2, cOrigem) //Valida registros en FK2
	EndIf

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} LxCanDelCP
Esta rutina tiene como objetivo verificar si un título de cuentas por
pagar puede ser eliminado.
Un título solo puede ser eliminado, cuando ninguna actualización fue
hecha después de su inclusión.

@param cAliasSE2    Alias do SE2
@param cOrigem      Origem da exclusao
@param lHelp        Indica se o help deve ser acionado
@param cMsg         Mensagem a ser retornada (nome do help apresentado)
@return lRet        Indica se a exclusao pode ser efetuada
@author Marco Augusto González Rivera 
@since 21/07/2021
@version P12
/*/
//---------------------------------------------------------------------
Function LxCanDelCP(cAliasSE2,cOrigem,lHelp,cMsg)

Local aArea       := GetArea()
Local aAreaSE1    := SE1->(GetArea())
Local aAreaSE2    := SE2->(GetArea())
Local aParcela    := {}
Local aRecSE2     := {}
Local nX          := 0
Local nY          := 0
Local cMunic      := PadR(SuperGetMv("MV_MUNIC"),Len(SE2->E2_FORNECE))
Local cPrefixo    := (cAliasSE2)->E2_PREFIXO
Local cNumero     := (cAliasSE2)->E2_NUM
Local cParcela    := (cAliasSE2)->E2_PARCELA
Local cTipo       := (cAliasSE2)->E2_TIPO
Local cFornece    := (cAliasSE2)->E2_FORNECE
Local cLoja       := (cAliasSE2)->E2_LOJA
Local cCursor     := ""
Local lQuery      := .F.
Local lRetorno    := .T.
Local lIntegracao := SuperGetMv("MV_EASY")=="S"
Local lContrRet   := .T.
Local cAliasQry   := ""
Local nContraBx   := 0
Local cLojaZero   := PadR("00",Len( SE2->E2_LOJA ) , "0" )
Local cParcINP	  := " "
Local cQuery      := ""
Local aStru       := {}
Local cModoSe2    := FwModeAccess("SE2",1)+FwModeAccess("SE2",2)+FwModeAccess("SE2",3)
Local cModoSe5    := FwModeAccess("SE5",1)+FwModeAccess("SE5",2)+FwModeAccess("SE5",3)
Local lCposIMA	  := (SE2->(ColumnPos("E2_IMA"))   > 0 .And. SE2->(ColumnPos("E2_PARCIMA")) > 0)
Local cParCam	  := ""
Local aPenCont    := {}
Local cQryImp     := ""
Local cAliasImp   := ""
Local cChaveSE2   := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica os parametros da rotina                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFAULT cAliasSE2 := "SE2"
DEFAULT cOrigem   := "FINA050"
DEFAULT lHelp     := .T.
dbSelectArea("SA2")
SA2->(DBSetOrder(1)) //A2_FILIAL+A2_COD+A2_LOJA
SA2->(MsSeek(xFilial("SA2")+cFornece+cLoja))
If SA2->(FieldPos("A2_MUNIC")) > 0 .And.  !Empty(SA2->A2_MUNIC)
    cMunic := PadR(SA2->A2_MUNIC,Len(SE2->E2_FORNECE))
EndIf
dbSelectArea(cAliasSE2)
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVISS           ,"E2_PARCISS" ,"E2_ISS" ,MVISS ,E2_PARCISS,cMunic,PadR(IIf(SubStr(cMunic,Len(SE2->E2_FORNECE)+1)<>"",SubStr(cMunic,Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVINSS+"/"+"INA","E2_PARCINS" ,"E2_INSS",MVINSS,E2_PARCINS,PadR(SuperGetMv('MV_FORINSS'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_FORINSS'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_FORINSS'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCISS","E2_ISS" ,MVTAXA,E2_PARCISS,cMunic,PadR(IIf(SubStr(cMunic,Len(SE2->E2_FORNECE)+1)<>"",SubStr(cMunic,Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCIR" ,"E2_IRRF",MVTAXA,E2_PARCIR,PadR(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCPIS" ,"E2_PIS",MVTAXA,E2_PARCPIS,PadR(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCCOF" ,"E2_COFINS",MVTAXA,E2_PARCCOF,PadR(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCSLL" ,"E2_CSLL",MVTAXA,E2_PARCSLL,PadR(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_UNIAO'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCFET" ,"E2_FETHAB",MVTAXA,E2_PARCFET,PadR(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCFAB" ,"E2_FABOV",MVTAXA,E2_PARCFAB,PadR(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCFAC" ,"E2_FACS",MVTAXA,E2_PARCFAC,PadR(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
If lFamad
    aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCFAM" ,"E2_FAMAD",MVTAXA,E2_PARCFAM,PadR(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
EndIf

If lCposIMA
    aadd(aParcela,{(cAliasSE2)->E2_TIPO$MVTAXA+"/"+MVTXA,"E2_PARCIMA" ,"E2_IMA" ,MVTAXA,E2_PARCIMA,PadR(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_RECEST'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})
Endif

GetParcINP(@cParcINP)
aadd(aParcela,{(cAliasSE2)->E2_TIPO$"INP",""/*"E2_PARCINS"*/ ,"E2_VALOR","INP",cParcINP,PadR(SuperGetMv('MV_FORINSS'),Len(SE2->E2_FORNECE)),PadR(IIf(SubStr(SuperGetMv('MV_FORINSS'),Len(SE2->E2_FORNECE)+1)<>"",SubStr(SuperGetMv('MV_FORINSS'),Len(SE2->E2_FORNECE)+1),cLojaZero),Len(SE2->E2_LOJA))})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o titulo foi gerado pelo SIGAEIC                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lIntegracao .And. cPaisLoc <> "ARG" .And. (cAliasSE2)->E2_TIPO = "INV" .And.;
        UPPER(AllTrim((cAliasSE2)->E2_ORIGEM)) == "SIGAEIC" .And. lRetorno
    If lHelp
        HELP(" ",1,"FAORIEIC")
        cMsg := "FAORIEIC"
    EndIf
    lRetorno := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o titulo foi gerado pelo SIGAEIC                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lIntegracao .And. (cAliasSE2)->E2_TIPO == MVPROVIS .And.;
        UPPER(AllTrim((cAliasSE2)->E2_ORIGEM)) == "SIGAEIC" .And. lRetorno
    If lHelp
        HELP(" ",1,"FAORIEIC")
        cMsg := "FAORIEIC"
    EndIf
    lRetorno := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PA ou cheque gerado por PA devera cancelar a Ordem de Pagto. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc $ "ARG" .And. lRetorno
    If ((cAliasSE2)->E2_TIPO==MVPAGANT).Or.((cAliasSE2)->E2_TIPO == MVCHEQUE .And. !Empty((cAliasSE2)->E2_ORDPAGO))
        If lHelp
            Help(" ",1,"ORDPAGO")
            cMsg := "ORDPAGO"
        EndIf
        lRetorno := .F.
    EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se os dados nao foram gravados por outro modulo		            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty((cAliasSE2)->E2_ORIGEM) .And.;
        !Upper(AllTrim((cAliasSE2)->E2_ORIGEM))$cOrigem .And. lRetorno
    If lHelp
        Help(" ",1,"NO_DELETE2")
        cMsg := "NO_DELETE2"
    EndIf
    lRetorno := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o titulo nao esta em bordero                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty((cAliasSE2)->E2_NUMBOR) .And. lRetorno
    If lHelp
        Help("",1,"FA050BORD")
        cMsg := "FA050BORD"
    EndIf
    lRetorno := .F.
EndIf

If "MATA100" $ cOrigem .and. cModoSe2 == cModoSe5

    cAliasQry := GetNextAlias()

    cQuery := ""
    cQuery += "SELECT SE5.E5_VALOR,SE5.E5_TIPODOC  FROM " + RetSqlName( "SE5" ) + " SE5 "
    cQuery += "WHERE "

    cQuery += "E5_FILORIG='"  + (cAliasSE2)->E2_FILORIG + "' AND "
    cQuery += "E5_PREFIXO='" + (cAliasSE2)->E2_PREFIXO + "' AND "
    cQuery += "E5_NUMERO='"  + (cAliasSE2)->E2_NUM     + "' AND "
    cQuery += "E5_PARCELA='" + (cAliasSE2)->E2_PARCELA + "' AND "
    cQuery += "E5_TIPO='"    + (cAliasSE2)->E2_TIPO    + "' AND "
    cQuery += "E5_CLIFOR='"  + (cAliasSE2)->E2_FORNECE + "' AND "
    cQuery += "E5_LOJA='"    + (cAliasSE2)->E2_LOJA    + "' AND "
    cQuery += "SUBSTRING(E5_HISTOR,1,12)<>'//CMP--CTR..' AND "
    cQuery += "E5_TIPODOC NOT IN ('VM','CM') AND "
    cQuery += "E5_SITUACA<>'C' AND "

    cQuery += "NOT EXISTS ( "
    cQuery += "SELECT A.E5_NUMERO "
    cQuery += "FROM "+RetSqlName("SE5")+" A "
    cQuery += "WHERE A.E5_FILIAL='"+xFilial("SE5")+"' AND "
    cQuery += 	"A.E5_PREFIXO = SE5.E5_PREFIXO AND "
    cQuery += 	"A.E5_NUMERO  = SE5.E5_NUMERO  AND "
    cQuery += 	"A.E5_PARCELA = SE5.E5_PARCELA AND "
    cQuery += 	"A.E5_TIPO    = SE5.E5_TIPO    AND "
    cQuery += 	"A.E5_CLIFOR  = SE5.E5_CLIFOR  AND "
    cQuery += 	"A.E5_LOJA    = SE5.E5_LOJA    AND "
    cQuery += 	"A.E5_SEQ     = SE5.E5_SEQ     AND "
    cQuery += 	"A.E5_TIPODOC = 'ES'           AND "
    cQuery += 	"A.E5_RECPAG <> 'R'            AND "
    cQuery += 	"A.D_E_L_E_T_<>'*' ) "

    cQuery += "AND D_E_L_E_T_=' '"

    cQuery := ChangeQuery( cQuery )

    dbUseArea( .T., "TOPCONN", TcGenQry( ,,cQuery ), cAliasQry, .F., .T. )

    TcSetField(cAliasQry, "E5_VALOR", "N", TamSX3("E5_VALOR")[1], TamSX3("E5_VALOR")[2] )

    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    //³ Soma o valor das baixas               ³
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    While !( cAliasQry )->( Eof() )
        If E5_TIPODOC == "ES"//Baixa de estorno
            nContraBx -= (cAliasQry)->E5_VALOR
        Else
            nContraBx += (cAliasQry)->E5_VALOR
        EndIf

        ( cAliasQry )->( dbSkip() )
    EndDo

    ( cAliasQry )->( dbCloseArea() )

    If lRetorno .And. nContraBx == (cAliasSE2)->E2_VALOR
        If lHelp
            Help(" ",1,"FA050BAIXA")
            cMsg := "FA050BAIXA"
        EndIf
        lRetorno := .F.
    EndIf
    If lRetorno .And. !Empty(nContraBx)

        If lHelp
            Help(" ",1,"BAIXAPARC")
            cMsg := "BAIXAPARC"
        EndIf
        lRetorno := .F.
    EndIf
Else

    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    //³ Verifica se titulo ja foi baixado total ou parcialmente                     ³
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If lRetorno .And. "MATA100" $ cOrigem  .And. !Empty((cAliasSE2)->E2_BAIXA)
        If lHelp
            Help(" ",1,"FA050BAIXA")
            cMsg := "FA050BAIXA"
        EndIf
        lRetorno := .F.
    EndIf
    If lRetorno .And. cOrigem $ "MATA460" .And. !Empty((cAliasSE2)->E2_BAIXA) .And. (cAliasSE2)->E2_SALDO == 0
        If lHelp
            Help(" ",1,"FA050BAIXA")
            cMsg := "FA050BAIXA"
        EndIf
        lRetorno := .F.
    EndIf
    If ((cAliasSE2)->E2_VALOR <> (cAliasSE2)->E2_SALDO .OR. Iif(cPaisloc=="ARG",!EMPTY((cAliasSE2)->E2_PREOP),.F.) ) .And. lRetorno
        If lHelp
            Help(" ",1,"BAIXAPARC")
            cMsg := "BAIXAPARC"
        EndIf
        lRetorno := .F.
    EndIf

EndIf

// Verifica que la Factura no contenga detracciones ya pagadas  PERU
If lRetorno .And. cPaisLoc == "PER"
    cParCam := SuperGetMV("MV_1DUP",,"1")
    cParCam := IIf(!Empty(cParCam),cParCam,space(TamSX3("E2_PARCELA")[1]))
    cParCam := PADR(cParCam,TamSx3("E2_PARCELA")[1])
    lRetorno := getDetrcP((cAliasSE2)->E2_PREFIXO + (cAliasSE2)->E2_NUM+cParCam + PADR('TX',TamSx3("E2_TIPO")[1]) + (cAliasSE2)->E2_FORNECE + (cAliasSE2)->E2_LOJA)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a data de movimentacao eh valida                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !DtMovFin() .And. lRetorno
    lRetorno := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se foi emitido cheque para este titulo                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (cAliasSE2)->E2_IMPCHEQ == "S" .And. lRetorno
    If lHelp
        Help( " ", 1, "EXISTCHEQ" )
        cMsg := "EXISTCHEQ"
    EndIf
    lRetorno := .F.
EndIf

If lRetorno .and. FindFunction("FA050PenC")
    //Verifica se o titulo tem baixas com contabilização pendente
    aPenCont := FA050PenC({xFilial("SE2"),cPrefixo,cNumero,cParcela,cTipo,cFornece,cLoja})
    If Len(aPenCont) > 0
        lRetorno := FA050MonP(aPenCont,.F.)
    EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verificar se o documento foi ajustado por diferencia ³
//³de cambio com data posterio a OP                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "ARG"
    SIX->(DbSetOrder(1)) //INDICE+ORDEM
    If SIX->(MsSeek('SFR')) //PARA GARANTIR QUE A TABELA SFR EXISTA
        DbSelectArea('SFR')
        SFR->(DbSetOrder(1)) //FR_FILIAL+FR_CARTEI+FR_CHAVOR+DTOS(FR_DATADI)
        If SFR->(MsSeek(xFilial()+"2"+(cAliasSE2)->E2_PREFIXO+(cAliasSE2)->E2_NUM+(cAliasSE2)->E2_PARCELA+(cAliasSE2)->E2_TIPO+(cAliasSE2)->E2_FORNECE+(cAliasSE2)->E2_LOJA))
            If lHelp
                Help( " ", 1, "FA084010",,Left(SFR->FR_CHAVDE,Len(SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO)),5)
            EndIf
            lRetorno := .F.
        Endif
    Endif
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se foi emitido cheque para os titulos vinculados                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno
    For nX := 1 To Len(aParcela)
        If (cAliasSE2)->(FieldGet(FieldPos(aParcela[nX,3]))) > 0
            DBSelectArea("SE2")
            SE2->(DBSetOrder(1)) //E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA
            If SE2->(MsSeek(xFilial("SE2")+cPrefixo+cNumero+aParcela[nX][5]+aParcela[nX][4]+aParcela[nX][6]+aParcela[nX][7]))

                If Alltrim(SE2->E2_ORIGEM) $ AllTrim(cOrigem)
                    If  !Empty(SE2->E2_TITPAI) .And. (SE2->E2_TITPAI <> cPrefixo+cNumero+cParcela+cTipo+cFornece+cLoja)
                        Loop
                    EndIf
                    If SE2->E2_IMPCHEQ=="S"
                        If lHelp
                            Help( " ", 1, "EXISTCHEQ" )
                            cMsg := "EXISTCHEQ"
                        EndIf
                        lRetorno := .F.
                    EndIf
                    If SE2->E2_SALDO <> SE2->E2_VALOR
                        If lHelp
                            Help(" ",1,"BAIXAPARC")
                            cMsg := "BAIXAPARC"
                        EndIf
                        lRetorno := .F.
                    EndIf
                    If !Empty(SE2->E2_NUMBOR)
                        If lHelp
                            Help("",1,"FA050BORD")
                            cMsg := "FA050BORD"
                        EndIf
                        lRetorno := .F.
                    EndIf
                EndIf

            EndIf
        EndIf
        If !lRetorno
            Exit
        EndIf
    Next nX
    RestArea(aAreaSE2)
EndIf


//Tratativa para buscar baixas de títulos de impostos provenientes do documento de entrada/pré nota
//onde o usuário pode alterar o fornecedor(diferente do MV_MUNIC) para geração do título
//Exemplo: títulos de ISS
if lRetorno .and. ( IsInCallStack("MATA103") .or. IsInCallStack("MATA140") )

    cChaveSE2 := cPrefixo + cNumero + cParcela + cTipo + cFornece + cLoja

    cAliasImp := GetNextAlias()

    cQryImp := "SELECT E2_TITPAI FROM "+RetSqlName("SE2")+" SE2 "
    cQryImp += "WHERE E2_FILIAL = '" + FwxFilial("SE2") + "' "
    cQryImp += "AND E2_TITPAI = '" + cChaveSE2 + "' "
    cQryImp += "AND E2_VALOR <> E2_SALDO "
    cQryImp += "AND SE2.D_E_L_E_T_ = ' ' "

    dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQryImp),cAliasImp,.T.,.T.)

    if (cAliasImp)->(!Eof())
        lRetorno := .F.
    endif

    if !lRetorno
        if lHelp
            Help(" ",1,"FA050BAIXA")
            cMsg := "FA050BAIXA"
        endif
    endif

    (cAliasImp)->(DbCloseArea())

endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se eh um titulo de imposto                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (cAliasSE2)->E2_TIPO $ MVISS+"/"+MVTAXA+"/"+MVTXA+"/"+MVINSS+"/"+"INA" .And. lRetorno .And. !"MATA460"$cOrigem
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    //³ Se este titulo possuir um pai nao permitir a exclusao       ³
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    For nX := 1 To Len(aParcela)
        If aParcela[nX,1]
            nY := nX
            Exit
        EndIf
    Next nX
	DBSelectArea("SE2")
    SE2->(DBSetOrder(1)) //E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA

    SE2->(dbCommit())
    aStru  := SE2->(dbStruct())
    cCursor:= "FACANDELCP"
    lQuery := .T.
    cQuery := "SELECT * "
    cQuery += "FROM "+RetSqlName("SE2")+" SE2 "
    cQuery += "WHERE SE2.E2_FILIAL='"+xFilial("SE2")+"' AND "
    cQuery += "SE2.E2_PREFIXO='"+cPrefixo+"' AND "
    cQuery += "SE2.E2_NUM='"+cNumero+"' AND "
    cQuery += "SE2."+aParcela[nX][2]+"='"+cParcela+"' AND "
    cQuery += "SE2.D_E_L_E_T_=' ' "
    cQuery += "ORDER BY "+SqlOrder(SE2->(IndexKey()))

    cQuery := ChangeQuery(cQuery)

    dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cCursor,.T.,.T.)

    For nX := 1 To Len(aStru)
        If aStru[nX][2]<>"C"
            TcSetField(cCursor,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
        EndIf
    Next nX

    While !Eof() .And. (cCursor)->E2_FILIAL == xFilial("SE2") .And.;
            (cCursor)->E2_PREFIXO == cPrefixo .And.;
            (cCursor)->E2_NUM == cNumero
        If (cCursor)->(FieldGet(FieldPos(aParcela[nY][2]))) == cParcela
            If ( cTipo $ MVTXA+"/"+"INA" .And. (cCursor)->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG ) .Or. !cTipo $ MVTXA+"/"+"INA"
                If (cCursor)->(FieldGet(FieldPos(aParcela[nY,3]))) <> 0
                    If lHelp
                        Help(" ",1,"NOVALORIR")
                        cMsg := "NOVALORIR"
                    EndIf
                    lRetorno := .F.
                EndIf
            EndIf
        EndIf
        dbSelectArea(cCursor)
        DbSkip()
    EndDo
    If lQuery
        dbSelectArea(cCursor)
        dbCloseArea()
        dbSelectArea("SE2")
    EndIf
    RestArea(aAreaSE2)
    If lRetorno
        dbSelectArea("SE1")
        SE1->(dbSetOrder(1)) //E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO

        SE1->(dbCommit())
        aStru  := SE1->(dbStruct())
        cCursor:= "FACANDELCP"
        lQuery := .T.
        cQuery := "SELECT * "
        cQuery += "FROM "+RetSqlName("SE1")+" SE1 "
        cQuery += "WHERE SE1.E1_FILIAL='"+xFilial("SE1")+"' AND "
        cQuery += "SE1.E1_PREFIXO='"+cPrefixo+"' AND "
        cQuery += "SE1.E1_NUM='"+cNumero+"' AND "
        cQuery += "SE1.D_E_L_E_T_=' ' "
        cQuery += "ORDER BY "+SqlOrder(SE1->(IndexKey()))

        cQuery := ChangeQuery(cQuery)

        dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cCursor,.T.,.T.)

        For nX := 1 To Len(aStru)
            If aStru[nX][2]<>"C"
                TcSetField(cCursor,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
            EndIf
        Next nX

        While !Eof() .And. (cCursor)->E1_FILIAL == xFilial("SE1") .And.;
                (cCursor)->E1_PREFIXO == cPrefixo .And.;
                (cCursor)->E1_NUM == cNumero
            If (cCursor)->E1_ISS <> 0 .And. (cCursor)->E1_PARCELA == cParcela
                If lHelp
                    Help(" ",1,"NOVALORIR")
                    cMsg := "NOVALORIR"
                EndIf
                lRetorno := .F.
            EndIf
            dbSelectArea(cCursor)
            dbSkip()
        EndDo
        If lQuery
            dbSelectArea(cCursor)
            dbCloseArea()
            dbSelectArea("SE1")
        EndIf
        RestArea(aAreaSE1)
    EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se ha um titulo de abatimento vinculado a este titulo              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. !(cAliasSE2)->E2_TIPO $ MVABATIM .And. !"FINA050"$cOrigem
    If FaAbatCP(cPrefixo,cNumero,cParcela,cFornece,cLoja) > 0
        If lHelp
            Help(" ",1,"FINABATTIT")
            cMsg := "FINABATTIT"
        EndIf
        lRetorno := .F.
    EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o titulo possui NCC e estas ja foram compensadas                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno
    If lContrRet
        aRecSE2 := FImpExcTit("SE2",(cAliasSE2)->E2_PREFIXO,(cAliasSE2)->E2_NUM,(cAliasSE2)->E2_PARCELA,(cAliasSE2)->E2_TIPO,(cAliasSE2)->E2_FORNECE,(cAliasSE2)->E2_LOJA)

        For nX := 1 to Len(aRecSE2)
            SE2->(MSGoto(aRecSE2[nX]))
            If SE2->E2_TIPO $ MV_CPNEG
                If SE2->E2_SALDO <> SE2->E2_VALOR
                    Help(" ",1,"NODELETA")
                    lRetorno := .F.
                Endif
            Endif
        Next

    Endif
Endif

RestArea(aAreaSE1)
RestArea(aAreaSE2)
RestArea(aArea)
Return(lRetorno)

/*/{Protheus.doc} LxFunaCaPo
Genera la cadena original y nodo para complemento de Carta Porte CFDI 3.3 México
@type
@author luis.enríquez
@since 27/08/2021
@version 1.0
@param cFilDoc, caracter, Filial del documento.
@param cDoc, caracter, Folio del documento.
@param cSerie, caracter, Serie del Documento. 
@param lCadOri, lógico, Indica si el documento utiliza carta porte.
@param lTrasla, lógico, Indica si el documento utiliza carta porte.
@return cXMLCP, caracter, Caracteres con cadena original cuando lCadOri es .T., en caso contrario retorna nodo 
de complemento de Carta Porte.
@example
LxFunaCaPo(cFilDoc, cDoc, cSerie, lCadOri, lTrasla)
@see (links_or_references)
/*/
Function LxFunaCaPo(cFilDoc, cDoc, cSerie, lCadOri, lTrasla, lCartaP)
	Local cXMLCP   := ""
	Local lTrasInt := .F.
	Local cCRLF	   := (chr(13)+chr(10))
	Local nTamDis  := GetSX3Cache("A1Y_DISREC","X3_TAMANHO")
	Local nDecDis  := GetSX3Cache("A1Y_DISREC","X3_DECIMAL")
	Local nTamPes  := GetSX3Cache("D2_PESO","X3_TAMANHO")
	Local nDecPes  := GetSX3Cache("D2_PESO","X3_DECIMAL")
	Local nTamVMe  := GetSX3Cache("D2_VLRFUE","X3_TAMANHO")
	Local nDecVMe  := GetSX3Cache("D2_VLRFUE","X3_DECIMAL")
	Local cFHOri   := ""
	Local aAreaDA3 := DA3->(GetArea())
	Local nI       := 0
	Local nP       := 0
	Local nX       := 0
	Local nO       := 0
	Local nA       := 0
	Local cSepara  := "|"
	Local aUbicac  := {}
	Local aOperad  := {} 
	Local aProArr  := {}
	Local aArrenda := {}
	Local nTotDis  := 0 
	Local cAuxCO   := ""
	Local cESMec   := ""
	Local cTranInt := ""
	Local cConfig  := ""
	Local cPlaca   := ""
	Local cAnoMod  := ""
	Local cSubRem  := ""
	Local cPlacaRe := ""
	Local cMatPel  := ""
	Local lMatPel  := .F.
	Local cFilDA3  := xFilial("DA3")
	Local cFilDA4  := xFilial("DA4")
	Local cFilSA4  := xFilial("SA4") 
	Local nTotPesB := 0
	Local cDesEmba := ""
	Local aPedim   := {}

	Default lCadOri := .F.
	Default lTrasla := .F.
	Default lCartaP := .F.

	If lCartaP //Se realiza solo si es carta porte
		If lCadOri
			aDatosCP := {}
			
			dbSelectArea("A1X")
			A1X->(dbSetOrder(1)) //A1X_FILIAL + A1X_DOC + A1X_SERIE
			If A1X->(MsSeek(cFilDoc + cDoc + cSerie))
				cXMLCP := "2.0" + cSepara
				lTrasInt := A1X->A1X_INTERN == "S"
				cTranInt := IIf(lTrasInt,'Sí','No')

				cESMec := IIf(A1X_ENTSAL=='E','Entrada','Salida')
				cXMLCP += CFDCarEsp(cTranInt,.F.) + cSepara
				If lTrasInt
					cXMLCP += cESMec + cSepara
				EndIf

				If lTrasInt .And. !Empty(A1X->A1X_PAIS) //PaisOrigenDestino
					cXMLCP += Alltrim(A1X->A1X_PAIS) + cSepara 
				EndIf

				If lTrasInt
					cXMLCP += A1X_TRANSP + cSepara
				EndIf

				//Ubicaciones
				dbSelectArea("A1Y")
				A1Y->(dbSetOrder(1)) //A1Y_FILIAL + A1Y_DOC + A1Y_SERIE
				If A1Y->(MsSeek(cFilDoc + cDoc + cSerie))
					Do While A1Y->(!Eof()) .And. A1Y_FILIAL + A1Y_DOC + A1Y_SERIE == xFilial("A1Y") + cDoc + cSerie
						cFHOri := Alltrim(Str(YEAR(A1Y->A1Y_FECSAL))) + "-" + Padl(Alltrim(Str(MONTH(A1Y->A1Y_FECSAL))),2,'0') + "-" +;
						Padl(Alltrim(Str(DAY(A1Y->A1Y_FECSAL))),2,'0')

						cAuxCO += IIf(Alltrim(A1Y->A1Y_TIPEST)=="O","Origen","Destino") + cSepara

						If !Empty(A1Y->A1Y_ORIGEN) //IDUbicación
							cAuxCO += Alltrim(A1Y->A1Y_ORIGEN) + cSepara
						EndIf 

						cAuxCO += CFDCarEsp(Alltrim(A1Y->A1Y_RFCORI),.F.) + cSepara
                        cAuxCO += CFDCarEsp(Alltrim(A1Y->A1Y_NOMORI),.F.) + cSepara
						cAuxCO += cFHOri + "T" + A1Y->A1Y_HRASAL + cSepara
						If Alltrim(A1Y_TIPEST) == "D"
							cAuxCO += Alltrim(Str(A1Y_DISREC,nTamDis,nDecDis)) + cSepara
							nTotDis += A1Y->A1Y_DISREC
						EndIf
						cAuxCO += CFDCarEsp(Alltrim(A1Y->A1Y_CALORI),.T.) + cSepara //Calle
						If !Empty(A1Y->A1Y_EXTORI)
							cAuxCO += Alltrim(A1Y->A1Y_EXTORI) + cSepara //NumeroExterior
						EndIf
						If !Empty(A1Y->A1Y_INTORI)
							cAuxCO += Alltrim(A1Y->A1Y_INTORI) + cSepara //NumeroInterior
						EndIf
						If !Empty(A1Y->A1Y_COLORI)
							cAuxCO += A1Y->A1Y_COLORI + cSepara //Colonia
						EndIf
						If !Empty(A1Y->A1Y_LOCORI)
							cAuxCO += A1Y->A1Y_LOCORI + cSepara //Localidad
						EndIf
						If !Empty(A1Y->A1Y_MUNORI)
							cAuxCO += A1Y->A1Y_MUNORI + cSepara //Municipio
						EndIf
						cAuxCO += A1Y->A1Y_EDOORI + cSepara //Estado
						cAuxCO += A1Y->A1Y_PAIORI + cSepara //Pais
						cAuxCO += A1Y->A1Y_CPORI + cSepara  //CodigoPostal
				
						aAdd(aUbicac,{A1Y->A1Y_TIPEST,;  //1.TipoUbicacion
						cFHOri + "T" + A1Y->A1Y_HRASAL,; //2.FechaHoraSalidaLlegada
						A1Y->A1Y_NOMORI,; //3.NombreRemitenteDestinatario
						A1Y->A1Y_RFCORI,; //4.RFCRemitenteDestinatario
						A1Y->A1Y_CALORI,; //5.Calle
						A1Y->A1Y_EXTORI,; //6.NumeroExterior
						A1Y->A1Y_INTORI,; //7.NumeroInterior
						A1Y->A1Y_COLORI,; //8.Colonia
						A1Y->A1Y_LOCORI,; //9.Localidad
						A1Y->A1Y_MUNORI,; //10.Municipio
						A1Y->A1Y_EDOORI,; //11.Estado
						A1Y->A1Y_PAIORI,; //12.Pais
						A1Y->A1Y_CPORI,;  //13.CodigoPostal
						A1Y->A1Y_DISREC,; //14.DistanciaRecorrida
						A1Y->A1Y_ORIGEN}) //15.IDUbicacion
						A1Y->(DbSkip())
					EndDo
				EndIf

				cTotDis := Alltrim(Str(nTotDis,18,2))
				cXMLCP += cTotDis + cSepara

				cXMLCP += cAuxCO

				aEval(aMercCP,{|x| nTotPesB += x[7] }) //Suma valor de PesoBrutoTotal
				cXMLCP += Alltrim(Str(nTotPesB,nTamPes,nDecPes)) + cSepara + "KGM" + cSepara //PesoBrutoTotal

				cNumTMer := Str(Len(aMercCP)) 
				cXMLCP += Alltrim(cNumTMer) + cSepara //NumTotalMercancias

				//Mercancías
				For nI := 1 To Len(aMercCP)
					cXMLCP +=  aMercCP[nI][1] + cSepara //BienesTransp
					cXMLCP += aMercCP[nI][4] + cSepara  //Descripcion
					cXMLCP += aMercCP[nI][2] + cSepara  //Cantiad
					cXMLCP += aMercCP[nI][3] + cSepara  //ClaveUnidad

					lMatPel := (aMercCP[nI][15] == "0,1") //Puede ser o no peligroso
					cMatPel := IIf(lMatPel, aMercCP[nI][16], aMercCP[nI][15])
					cMatPel := IIf(!(Empty(cMatPel) .Or. cMatPel == "0"), "Sí", "No")

					If lMatPel .Or. cMatPel == "Sí"//Material Peligroso
						cXMLCP += CFDCarEsp(cMatPel,.F.) + cSepara
					EndIf
					If !Empty(aMercCP[nI][10]) .And. cMatPel == "Sí" //Clave Material Peligroso
						cXMLCP += Alltrim(aMercCP[nI][10]) + cSepara
					EndIf
					If !Empty(aMercCP[nI][11]) .And. cMatPel == "Sí" //Embalaje
						cXMLCP += Alltrim(aMercCP[nI][11]) + cSepara
						cDesEmba := ObtColSAT("S021",aMercCP[nI][11],1,5,6,100)
						If !Empty(cDesEmba)
							cXMLCP += Alltrim(CFDCarEsp(cDesEmba,.F.)) + cSepara
						EndIf
					EndIf
					cXMLCP += Alltrim(Str(aMercCP[nI][7],nTamPes,nDecPes)) + cSepara //PesoEnKg
					cXMLCP += Alltrim(Str(aMercCP[nI][9],nTamVMe,nDecVMe)) + cSepara //ValorMercancia
					cXMLCP += aMercCP[nI][6] + cSepara //Moneda
					If !Empty(aMercCP[nI][5])
						cXMLCP += Alltrim(aMercCP[nI][5]) + cSepara //FraccionArancelaria
					EndIf
					If lTrasInt .And. !Empty(aMercCP[nI][8])
						cXMLCP += Alltrim(aMercCP[nI][8]) + cSepara //UUIDComercioExt
					EndIf
					If lTrasInt .And. !Empty(aMercCP[nI][14])
						aPedim := StrTokArr(aMercCP[nI][14], "|")
						For nA := 1 To Len(aPedim)
							cXMLCP += Alltrim(StrTran(aPedim[nA], "  ", " ")) + cSepara //Pedimento
						Next nA
					EndIf
					If !Empty(aMercCP[nI][12]) .Or. !Empty(aMercCP[nI][13])
						//CantidadTransporta
						cXMLCP +=  Alltrim(aMercCP[nI][2]) + cSepara ////Cantiad
						cXMLCP += Alltrim(aMercCP[nI][12]) + cSepara //IDOrigen
						cXMLCP += Alltrim(aMercCP[nI][13]) + cSepara //IDDestino
					EndIf
				Next nI

				//Autotransporte
				cXMLCP += Alltrim(A1X->A1X_PERSCT) + cSepara //PermSCT
				cXMLCP += Alltrim(A1X->A1X_PERMIS) + cSepara //NumPermisoSCT

				//Vehículo
				dbSelectArea("DA3")
				DA3->(dbSetOrder(1)) //DA3_FILIAL + DA3_COD
				If DA3->(MsSeek(cFilDA3 + A1X->A1X_VEHIC))
					cConfig := Alltrim(DA3->DA3_CONFIG)
					cPlaca  := Alltrim(DA3->DA3_PLACA)
					cAnoMod := DA3->DA3_ANOMOD
					cXMLCP += cConfig + cSepara
					cXMLCP += Alltrim(cPlaca) + cSepara
					cXMLCP += cAnoMod + cSepara
				EndIf

				//Seguros
				cXMLCP += Alltrim(A1X->A1X_ASEGUR) + cSepara //AseguraRespCivil
				cXMLCP += Alltrim((A1X->A1X_POLIZA)) + cSepara //PolizaRespCivil

				If A1X->(ColumnPos("A1X_ASEGMA")) > 0 .And. !Empty(A1X->A1X_ASEGMA)
					cXMLCP += Alltrim((A1X->A1X_ASEGMA)) + cSepara //AseguraMedAmbiente
					If A1X->(ColumnPos("A1X_POLMA")) > 0 .And. !Empty(A1X->A1X_POLMA)
						cXMLCP += Alltrim((A1X->A1X_POLMA)) + cSepara //PolizaMedAmbiente
					EndIf
				EndIf

				If A1X->(ColumnPos("A1X_ASECGA")) > 0 .And. !Empty(A1X->A1X_ASECGA)
					cXMLCP += Alltrim((A1X->A1X_ASECGA)) + cSepara //AseguraCarga
					If A1X->(ColumnPos("A1X_POLCGA")) > 0 .And. !Empty(A1X->A1X_POLCGA)
						cXMLCP += Alltrim((A1X->A1X_POLCGA)) + cSepara //PolizaCarga
					EndIf
				EndIf

				If A1X->(ColumnPos("A1X_PRISEG")) > 0 .And. A1X->A1X_PRISEG > 0
					cXMLCP += Alltrim(Str(A1X->A1X_PRISEG,14,2)) + cSepara //PrimaSeguro
				EndIf

				dbSelectArea("DA3")
				DA3->(dbSetOrder(1)) //DA3_FILIAL + DA3_COD
				If DA3->(MsSeek(cFilDA3 + A1X->A1X_REMOLQ))
					cSubRem := Alltrim(DA3->DA3_SUBREM)
					cPlacaRe:= Alltrim(DA3->DA3_PLACA)
					cXMLCP += cSubRem + cSepara
					cXMLCP += cPlacaRe + cSepara
				EndIf
				
				//FiguraTransporte
				//Operadores
				dbSelectArea("A1Z")
				A1Z->(dbSetOrder(1)) //A1Z_FILIAL + A1Z_DOC + A1Z_SERIE
				If A1Z->(MsSeek(cFilDoc + cDoc + cSerie))
					Do While A1Z->(!Eof()) .And. A1Z->A1Z_FILIAL + A1Z->A1Z_DOC + A1Z->A1Z_SERIE == cFilDoc + cDoc + cSerie
						cXMLCP += LxFunOper(cFilDA4,A1Z->A1Z_OPERAD,cSepara,@aOperad)
						A1Z->(DbSkip())
					EndDo
				EndIf 

				//Propietario-Arrendatario
				dbSelectArea("AE0")
				AE0->(dbSetOrder(1)) //AE0_FILIAL + AE0_DOC + AE0_SERIE + AE0_ITEM
				If AE0->(MsSeek(cFilDoc + cDoc + cSerie))
					Do While AE0->(!Eof()) .And. AE0->AE0_FILIAL + AE0->AE0_DOC + AE0->AE0_SERIE == cFilDoc + cDoc + cSerie
						LxFunProAr(cFilSA4,AE0->AE0_TRANSP,AE0->AE0_TIPO,@aProArr,AE0->AE0_PARTE)
						AE0->(DbSkip())
					EndDo
				EndIf 

				For nO := 1 To Len(aProArr) > 0
					cXMLCP += Alltrim(aProArr[nO][12]) + cSepara //TipoFigura
					cXMLCP += CFDCarEsp(Alltrim(aProArr[nO][2]), .F.) + cSepara  //RFC 
					cXMLCP += CFDCarEsp(Alltrim(aProArr[nO][1]), .F.) + cSepara  //Nombre
					cXMLCP += Alltrim(aProArr[nO][13]) + cSepara //ParteTransporte
					cXMLCP += Alltrim(aProArr[nO][3]) + cSepara  //Calle
					If !Empty(aProArr[nO][9])
						cXMLCP += Alltrim(aProArr[nO][9]) + cSepara  //No. Exterior
					EndIf
					If !Empty(aProArr[nO][10])
						cXMLCP += Alltrim(aProArr[nO][10]) + cSepara //No. Interior
					EndIf
					cXMLCP += Alltrim(aProArr[nO][5]) + cSepara  //Localidad
					cXMLCP += Alltrim(aProArr[nO][7]) + cSepara  //Colonia
					cXMLCP += Alltrim(aProArr[nO][8]) + cSepara  //Municipio
					cXMLCP += Alltrim(aProArr[nO][6]) + cSepara  //Estado
					cXMLCP += Alltrim(aProArr[nO][11]) + cSepara //País
					cXMLCP += Alltrim(aProArr[nO][4]) + cSepara  //Código Postal		
				Next nO

				aAdd(aDatosCP,{cESMec,cTranInt,A1X->A1X_TRANSP,cTotDis,cNumTMer,A1X->A1X_PERSCT,A1X->A1X_PERMIS,A1X->A1X_ASEGUR,;
				A1X->A1X_POLIZA,A1X->A1X_TRANSP,A1X->A1X_VEHIC,aUbicac,cConfig,cPlaca,cAnoMod,aOperad,aProArr,aArrenda,cSubRem,cPlacaRe,A1X->A1X_PAIS,nTotPesB,;
				IIf(A1X->(ColumnPos("A1X_ASEGMA")) > 0,A1X->A1X_ASEGMA,""),IIf(A1X->(ColumnPos("A1X_POLMA")) > 0,A1X->A1X_POLMA,""),;
				IIf(A1X->(ColumnPos("A1X_ASECGA")) > 0,A1X->A1X_ASECGA,""),IIf(A1X->(ColumnPos("A1X_POLCGA")) > 0,A1X->A1X_POLCGA,""),IIf(A1X->(ColumnPos("A1X_PRISEG")) > 0,A1X->A1X_PRISEG,0)})				
			EndIf
		Else
			For nP := 1 To Len(aDatosCP)
				cXMLCP := ' 		<cartaporte20:CartaPorte '
				cXMLCP += 'Version="2.0" '
				cXMLCP += 'TranspInternac="' + CFDCarEsp(aDatosCP[nP][2],.T.) + '" '
				If !(aDatosCP[nP][2] == "No") .And. !Empty(aDatosCP[nP][1])
					cXMLCP += 'EntradaSalidaMerc="' + aDatosCP[nP][1] + '" '
				EndIf
				cXMLCP += 'TotalDistRec="' + Alltrim(aDatosCP[nP][4]) + '" '
				If aDatosCP[nP][2] == "Sí" .And. !Empty(aDatosCP[nP][3])
					cXMLCP += 'ViaEntradaSalida="' + aDatosCP[nP][3] + '" ' 
				EndIf
				If aDatosCP[nP][2] == "Sí" .And. !Empty(aDatosCP[nP][21])
					cXMLCP += 'PaisOrigenDestino="' + aDatosCP[nP][21] + '" ' 
				EndIf
				cXMLCP += '>' + cCRLF
				
				//Ubicaciones
				If Len(aDatosCP[nP][12]) > 0
					cXMLCP += '			<cartaporte20:Ubicaciones> ' + cCRLF
					For nX := 1 To Len(aDatosCP[nP][12])	
						cXMLCP += '				<cartaporte20:Ubicacion TipoUbicacion=' + IIf(Alltrim(aDatosCP[nP][12][nX][1]) == "O",'"Origen"','"Destino"') + IIf(!Empty(aDatosCP[nP][12][nX][15]),' IDUbicacion="' + Alltrim(aDatosCP[nP][12][nX][15]) + '"','') + ' RFCRemitenteDestinatario="' + CFDCarEsp(Alltrim(aDatosCP[nP][12][nX][4]), .T.) + '"' + IIf(!Empty(aDatosCP[nP][12][nX][3]),' NombreRemitenteDestinatario="' + CFDCarEsp(Alltrim(aDatosCP[nP][12][nX][3]),.T.) + '"','') + ' FechaHoraSalidaLlegada="' + aDatosCP[nP][12][nX][2] + '"' 
						cXMLCP += IIf(Alltrim(aDatosCP[nP][12][nX][1]) == "D",' DistanciaRecorrida="' + Alltrim(Str(aDatosCP[nP][12][nX][14],nTamDis,nDecDis)) + '"','') + '> ' + cCRLF
						cXMLCP += '					<cartaporte20:Domicilio Calle="' + CFDCarEsp(Alltrim(aDatosCP[nP][12][nX][5]),.T.) + IIf(!Empty(aDatosCP[nP][12][nX][6]),'" NumeroExterior="' + Alltrim(aDatosCP[nP][12][nX][6]),'') + IIf(!Empty(aDatosCP[nP][12][nX][7]),'" NumeroInterior="' + Alltrim(aDatosCP[nP][12][nX][7]),'') + IIf(!Empty(aDatosCP[nP][12][nX][8]),'" Colonia="' + Alltrim(aDatosCP[nP][12][nX][8]),'') + ;
													IIf(!Empty(aDatosCP[nP][12][nX][9]),'" Localidad="' + Alltrim(aDatosCP[nP][12][nX][9]),'') + IIf(!Empty(aDatosCP[nP][12][nX][10]),'" Municipio="' + Alltrim(aDatosCP[nP][12][nX][10]),'') + '" Estado="' + aDatosCP[nP][12][nX][11] + '" Pais="' + aDatosCP[nP][12][nX][12] + '" CodigoPostal="' + aDatosCP[nP][12][nX][13] + '"/>' + cCRLF
						cXMLCP += '				</cartaporte20:Ubicacion>' + cCRLF						
					Next nX
					cXMLCP += '			</cartaporte20:Ubicaciones>' + cCRLF
				EndIf

				cXMLCP += '			<cartaporte20:Mercancias PesoBrutoTotal= "' + Alltrim(Str(aDatosCP[nP][22],nTamPes,nDecPes)) + '" UnidadPeso="KGM" NumTotalMercancias="' + Alltrim(aDatosCP[nP][5]) + '">' + cCRLF

				//Mercancías
				For nI := 1 To Len(aMercCP)
					lMatPel := (aMercCP[nI][15] == "0,1") //Puede ser o no peligroso
					cMatPel := IIf(lMatPel, aMercCP[nI][16], aMercCP[nI][15])
					cMatPel := IIf(!(Empty(cMatPel) .Or. cMatPel == "0"), "Sí", "No")
					If cMatPel == "Sí" .And. !Empty(aMercCP[nI][11])
						cDesEmba := ObtColSAT("S021",aMercCP[nI][11],1,5,6,100)
					EndIf
					cXMLCP += '				<cartaporte20:Mercancia BienesTransp="' + aMercCP[nI][1] + '" Descripcion="' + aMercCP[nI][4] + '" Cantidad="' + aMercCP[nI][2] + '" ClaveUnidad="' + aMercCP[nI][3] + '"' + ;
					IIf(lMatPel .Or. cMatPel == "Sí",' MaterialPeligroso="' + Alltrim(CFDCarEsp(cMatPel,.T.))+ '"','') + IIf(!Empty(aMercCP[nI][10]) .And. cMatPel == "Sí",' CveMaterialPeligroso="' + Alltrim(aMercCP[nI][10])+ '"','') + ;
					IIf(!Empty(aMercCP[nI][11]) .And. cMatPel == "Sí",' Embalaje="' + Alltrim(aMercCP[nI][11])+ '"','') + IIf(!Empty(aMercCP[nI][11]) .And. cMatPel == "Sí" .And. !Empty(cDesEmba),' DescripEmbalaje="' + Alltrim(CFDCarEsp(cDesEmba,.T.))+ '"','') + ;
					' PesoEnKg="' + Alltrim(Str(aMercCP[nI][7],nTamPes,nDecPes)) + '" ValorMercancia="' + Alltrim(Str(aMercCP[nI][9],nTamVMe,nDecVMe)) + '"' +  IIf(!Empty(aMercCP[nI][5]),' FraccionArancelaria="' + Alltrim(aMercCP[nI][5]) + '" ','')  + ;
					' Moneda="' + aMercCP[nI][6]  + '"' + IIf(aDatosCP[nP][2] == "Sí" .And. !Empty(aMercCP[nI][8]),' UUIDComercioExt="' + Alltrim(aMercCP[nI][8])+ '"','') + '>' + cCRLF
					//Pedimento
					If aDatosCP[nP][2] == "Sí" .And. !Empty(aMercCP[nI][14])
						aPedim := StrTokArr(aMercCP[nI][14], "|")
						For nA := 1 To Len(aPedim)
							cXMLCP += '					<cartaporte20:Pedimentos Pedimento="' + Alltrim(aPedim[nA]) + '"/>' + cCRLF
						Next nA
					EndIf
					If !Empty(aMercCP[nI][12]) .Or. !Empty(aMercCP[nI][13])
						//CantidadTransporta
						cXMLCP += '					<cartaporte20:CantidadTransporta Cantidad=" ' + Alltrim(aMercCP[nI][2]) + '" IDOrigen="' + Alltrim(aMercCP[nI][12]) + '" IDDestino="' + Alltrim(aMercCP[nI][13]) + '"/>' + cCRLF
					EndIf
					
					cXMLCP += '				</cartaporte20:Mercancia>' + cCRLF
				Next nI

				//Autotransporte
				cXMLCP += '				<cartaporte20:Autotransporte PermSCT="' + aDatosCP[nP][6] + '" NumPermisoSCT="' + Alltrim(aDatosCP[nP][7]) + '">' + cCRLF
				//Identificación Vehicular
				cXMLCP += '					<cartaporte20:IdentificacionVehicular ConfigVehicular="' + aDatosCP[nP][13] + '" PlacaVM="' + aDatosCP[nP][14]  + '" AnioModeloVM="' + aDatosCP[nP][15] + '"/>' + cCRLF
				//Seguros
				cXMLCP += '					<cartaporte20:Seguros AseguraRespCivil="' + Alltrim(aDatosCP[nP][8]) + '" PolizaRespCivil="' + Alltrim(aDatosCP[nP][9]) + '"'
				cXMLCP += IIf(!Empty(aDatosCP[nP][23]),' AseguraMedAmbiente="' + Alltrim(aDatosCP[nP][23]) + '"','') + IIf(!Empty(aDatosCP[nP][23]) .And. !Empty(aDatosCP[nP][24]),' PolizaMedAmbiente="' + Alltrim(aDatosCP[nP][24]) + '"','')
				cXMLCP += IIf(!Empty(aDatosCP[nP][25]),' AseguraCarga="' + Alltrim(aDatosCP[nP][25]) + '"','') + IIf(!Empty(aDatosCP[nP][25]) .And. !Empty(aDatosCP[nP][26]),' PolizaCarga="' + Alltrim(aDatosCP[nP][26]) + '"','') 
				cXMLCP += IIf(aDatosCP[nP][27] > 0,' PrimaSeguro="' + Alltrim(Str(aDatosCP[nP][27],14,2)) + '"','') + '/>' + cCRLF
				//Remolque
				If !Empty(aDatosCP[nP][19]) .Or. !Empty(aDatosCP[nP][20])
					cXMLCP += '					<cartaporte20:Remolques>' + cCRLF
					cXMLCP += '						<cartaporte20:Remolque ' + IIf(!Empty(aDatosCP[nP][19]),'SubTipoRem=' + '"' + aDatosCP[nP][19] + '"',"")  + IIf(!Empty(aDatosCP[nP][20]),' Placa="' + aDatosCP[nP][20] + '"',"") + '/>' + cCRLF
					cXMLCP += '					</cartaporte20:Remolques>' + cCRLF
				EndIf
				cXMLCP += '				</cartaporte20:Autotransporte>' + cCRLF
				cXMLCP += '			</cartaporte20:Mercancias>' + cCRLF

				If Len(aDatosCP[nP][16]) > 0 .Or. Len(aDatosCP[nP][17]) > 0
					cXMLCP += '			<cartaporte20:FiguraTransporte>' + cCRLF
					//Operadores
					For nO := 1 To Len(aDatosCP[nP][16])
						cXMLCP += '				<cartaporte20:TiposFigura TipoFigura="01" RFCFigura="' + CFDCarEsp(Alltrim(aDatosCP[nP][16][nO][3]), .T.) + '" NumLicencia="' + aDatosCP[nP][16][nO][2] + '"' + IIf(!Empty(aDatosCP[nP][16][nO][1]),' NombreFigura="' + CFDCarEsp(Alltrim(aDatosCP[nP][16][nO][1]), .T.) + '"','') + '>' + cCRLF
						cXMLCP += '				</cartaporte20:TiposFigura>' + cCRLF
					Next nO
					//Propietario-Arrendatario
					For nO := 1 To Len(aDatosCP[nP][17])
						cXMLCP += '				<cartaporte20:TiposFigura TipoFigura="' + Alltrim(aDatosCP[nP][17][nO][12]) + '" RFCFigura="' + CFDCarEsp(Alltrim(aDatosCP[nP][17][nO][2]), .T.) + '"' +  IIf(!Empty(aDatosCP[nP][17][nO][1]),' NombreFigura="' + CFDCarEsp(Alltrim(Alltrim(aDatosCP[nP][17][nO][1])), .T.) + '"','') + '>' + cCRLF
						cXMLCP += '					<cartaporte20:PartesTransporte ParteTransporte="' + Alltrim(aDatosCP[nP][17][nO][13]) + '"/>' + cCRLF
						cXMLCP += '					<cartaporte20:Domicilio Calle="' + Alltrim(aDatosCP[nP][17][nO][3]) + '"' + IIf(!Empty(aDatosCP[nP][17][nO][9]),' NumeroExterior="' + Alltrim(aDatosCP[nP][17][nO][9]) + '"','') + IIf(!Empty(aDatosCP[nP][17][nO][10]),' NumeroInterior="' + Alltrim(aDatosCP[nP][17][nO][10]) + '"','') 
						cXMLCP += IIf(!Empty(aDatosCP[nP][17][nO][5]),' Colonia="' + Alltrim(aDatosCP[nP][17][nO][5]) + '"','') 
						cXMLCP += IIf(!Empty(aDatosCP[nP][17][nO][7]),' Localidad="' + Alltrim(aDatosCP[nP][17][nO][7]) + '"','')
						cXMLCP += IIf(!Empty(aDatosCP[nP][17][nO][8]),' Municipio="' + Alltrim(aDatosCP[nP][17][nO][8]) + '"','')
						cXMLCP += ' Estado="' + Alltrim(aDatosCP[nP][17][nO][6]) + '"'
						cXMLCP += ' Pais="' + aDatosCP[nP][17][nO][11] + '"'
						cXMLCP += ' CodigoPostal="' + Alltrim(aDatosCP[nP][17][nO][4]) + '"/>' + cCRLF
						cXMLCP += '				</cartaporte20:TiposFigura>' + cCRLF
					Next nO
					cXMLCP += '			</cartaporte20:FiguraTransporte>' + cCRLF
				EndIf
				cXMLCP += ' 		</cartaporte20:CartaPorte>' + cCRLF
			Next nP
		EndIf
	EndIf

	RestArea(aAreaDA3)
Return cXMLCP

/*/{Protheus.doc} LxFunOper
Obtiene datos de Conductores (Operadores) para complemento de Carta Porte CFDI 3.3 México
@type
@author luis.enríquez
@since 27/08/2021
@version 1.0
@param cFilDA4, caracter, Filial del tabla DA4.
@param cOperador, caracter, Código del Operador.
@param cSepara, caracter, Separador utilizado para generación de cadena original. 
@param aOperad, arreglo, Arreglo de entrada/salida con datos del Conductor (Operador).
@return cDatos, caracter, Caracteres con cadena original cuando lCadOri es .T. y llenado del arreglo aOperad 
para la generación del nodo Operadores de complemento de Carta Porte.
@example
LxFunOper(cFilDA4,cOperador,cSepara,aOperad)
@see (links_or_references)
/*/
Static Function LxFunOper(cFilDA4,cOperador,cSepara,aOperad)
	Local cDatos  := ""
	Local aAreaDA4 := DA4->(GetArea())

	dbSelectArea("DA4")
	DA4->(dbSetOrder(1)) //DA4_FILIAL + DA4_COD

	If DA4->(MsSeek(xFilial("DA4") + cOperador))
		cDatos += "01" + cSepara                   //TipoFigura
		cDatos += CFDCarEsp(Alltrim(DA4->DA4_CGC), .F.) + cSepara  //RFCFigura
		cDatos += Alltrim(DA4->DA4_NUMCNH) + cSepara //NumLicencia
		cDatos += CFDCarEsp(Alltrim(DA4->DA4_NOME), .F.) + cSepara //NombreFigura

		aAdd(aOperad,{DA4->DA4_NOME,DA4->DA4_NUMCNH,DA4->DA4_CGC,DA4->DA4_END,Alltrim(DA4->DA4_CEP),DA4->DA4_CODBAI,Alltrim(DA4->DA4_EST),DA4->DA4_LOCAL,Alltrim(DA4->DA4_CODMUN),DA4->DA4_NUMEXT,DA4->DA4_PAIS})
	EndIf

	RestArea(aAreaDA4)
Return cDatos

/*/{Protheus.doc} LxFunProAr
Obtiene datos de Transportistas (Propietarios/Arrendatarios) para complemento de Carta Porte CFDI 3.3 México
@type
@author luis.enríquez
@since 07/09/2021
@version 1.0
@param cFilSA4, caracter, Filial del tabla SA4.
@param cOperador, caracter, Código del Transportador.
@param aProArr, arreglo, Arreglo con los transportistas indicado como Propietarios/Arrendatarios.
@param cParte, caracter, Código de Parte del Transporte.
@example
LxFunProAr(cFilSA4,cTransp,cTipo,aProArr,aArrenda,cParte)
@see (links_or_references)
/*/
Static Function LxFunProAr(cFilSA4,cTransp,cTipo,aProArr,cParte)
	Local aAreaSA4 := SA4->(GetArea())
	Local cTipoFig := IIf(cTipo == "P","02","03")

	dbSelectArea("SA4")
	SA4->(dbSetOrder(1)) //A4_FILIAL + A4_COD

	If SA4->(MsSeek(xFilial("SA4") + cTransp))
		aAdd(aProArr,{SA4->A4_NOME,SA4->A4_CGC,SA4->A4_END,SA4->A4_CEP,SA4->A4_CBAIRRO,SA4->A4_EST,SA4->A4_CLOCALI,SA4->A4_COD_MUN,SA4->A4_NUMEXT,SA4->A4_NUMINT,SA4->A4_CODPAIS,cTipoFig,cParte})
	EndIf

	RestArea(aAreaSA4)
Return Nil

/*/{Protheus.doc} LxEventIn
	Función para generación de evento para Notas Fiscales.
	@type  Function
	@author oscar.lopez
	@since 28/06/2022
	@version 1.0
	@param aCabNota, arreglo, Arreglo con información de encabezado del documento
	@return Nil
	@example
		LxEventIn(aCabNota)
	/*/
Function LxEventIn(aCabNota)
	
	Local cIdEvento := "" //Id el Evento
	Local cMensaje	:= ""
	Local cUsrEven	:= ""
	Local cInfor	:= ""
	Local nPos		:= 0
	Local aArea		:= {}
	Local aCampos	:= {}
	Local aInfo		:= {}
	Local nItera	:= 0

	aArea		:= GetArea()
	cIdEvento	:= "030"
	aCampos		:= {"F1_FORNECE", "F1_LOJA", "F1_SERIE", "F1_DOC", "F1_TIPODOC"}
	cMensaje	:= STR0145 + CRLF //"Inclusión de Factura de Entrada"
	cUsrEven	:= Subs(cUsuario,7,15)

	For nItera := 1 To Len(aCampos)
		nPos := AScan(aCabNota[1],{|x| x == aCampos[nItera] })
		If nPos > 0
			cInfor := AllTrim(aCabNota[2][nPos])
			AAdd(aInfo, cInfor)
			cMensaje += AllTrim(FWX3Titulo(aCampos[nItera])) + ": " + cInfor + CRLF
		EndIf
	Next nItera

	AAdd(aInfo, cUsrEven)
	cMensaje += STR0146 + cUsrEven //"Por el usuario: "

	DbSelectArea("SXI")
	DbSetOrder(2) //XI_CANAL+XI_CATEGOR+XI_EVENTID
	If SXI->(MsSeek("002001"+cIdEvento)) //Canal(002 - Entornos) + Categoría(001 - Modulos) + Id del Evento
		EventInsert(FW_EV_CHANEL_ENVIRONMENT, FW_EV_CATEGORY_MODULES, cIdEvento, FW_EV_LEVEL_INFO,""/*cCargo*/, STR0145, cMensaje, .T./*lPublic*/) //"Inclusión de Factura de Entrada"
	Else
		MEnviaMail(cIdEvento,aInfo)
	EndIf
	RestArea(aArea)

Return Nil
