#INCLUDE "MATR103A.ch"
#INCLUDE "PROTHEUS.CH" 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATR103A ³ Autor ³ Julio C.Guerato		³ Data ³ 13/03/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro Auxiliar - Bolivia		                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Compras 								                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATR103A
Local oReport
Private cPerg		:= 'MTR103A'
Private cAliasReg 	:= 'REGAUX'
	Pergunte(cPerg,.T.)

oReport := ReportDef()
oReport:PrintDialog()

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³TOTVS				    ³ Data ³13.03.12  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto do relatório                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef()
Local oReport 
Local oSection1

	oReport:= TReport():New("MATR103A",STR0001,, {|oReport| ReportPrint(oReport)},STR0001)

oReport:SetLandscape()    
oSection1:=TRSection():New(oReport,STR0001,{})
oSection1 :SetTotalInLine(.F.)
oSection1 :SetReadOnly()  
oSection1 :SetHeaderPage(.F.)

//Campos para Impressao // 
If MV_PAR01 == 1     
	TRCell():New(oSection1,"MODALID" ,"",STR0005,/*Picture*/					,1							  ,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"DATADOC" ,"",STR0006 +"   ",/*PesqPict("SF1","F1_EMISSAO")*/,15  ,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"TIPOTRAN","",STR0007,/*Picture*/					,5							  ,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"NIT"	 ,"",STR0008,		,TAMSX3("A2_CGC")[1]							  ,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"NOME"	 ,"",STR0009,/*Picture*/						,20/*TAMSX3("A2_NOME")[1]*/	  ,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"NRDOC"	 ,"",STR0010,/*Picture*/						,TAMSX3("F2_DOC")[1]	,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"CONTRATO","",STR0028,/*PesqPict("SEK","EK_EMISSAO")*/,TamSX3("D1_PEDIDO")[1]							  ,/*{|| code-block de impressao }*/)	
	TRCell():New(oSection1,"VALOR"	 ,"",STR0011,PesqPict("SF1","F1_VALBRUT") ,TAMSX3("F1_VALBRUT")[1],/*lPixel*/,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"NUMAUT"	 ,"",STR0012,/*Picture*/						,TAMSX3("F1_NUMAUT")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"CTPAGO"	 ,"",STR0013,/*Picture*/						,TamSX3("EK_CONTA")[1]	  ,/*lPixel*/,{|| aRetFin[1]})
	TRCell():New(oSection1,"VALPAGO" ,"",STR0014,PesqPict("SEK","EK_VALOR")	,TamSX3("EK_VALOR")[1]	  ,/*lPixel*/,{|| aRetFin[2]})
	TRCell():New(oSection1,"VALACUM" ,"",STR0015,PesqPict("SEK","EK_VALOR")	,TamSX3("EK_VALOR")[1]	  ,/*lPixel*/,{|| aRetFin[8]})
	TRCell():New(oSection1,"NITFIN"  ,"",STR0016,	,TamSX3("A6_CGC")[1]		  ,/*lPixel*/,{|| aRetFin[4]})
	TRCell():New(oSection1,"DOCPAGO" ,"",STR0017,/*Picture*/					,TamSX3("EK_NUM")[1]		  ,/*lPixel*/,{|| aRetFin[5]})
	TRCell():New(oSection1,"TPPAGO"  ,"",STR0018,/*Picture*/					,2							  ,/*lPixel*/,{|| IIf(aRetFin[6] $ "CA|CH","1",IIf(aRetFin[6] == "TF","4","10")) })
	TRCell():New(oSection1,"DTPAGO"  ,"",STR0027,/*PesqPict("SEK","EK_EMISSAO")*/,15							  ,/*lPixel*/,{|| StoD(aRetFin[7]) })	

Else
	TRCell():New(oSection1,"MODALID" ,"",STR0005,/*Picture*/				   ,1							,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"DATADOC" ,"",STR0006+"   ",/*PesqPict("SF2","F2_EMISSAO")*/,15 ,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"NRDOC"	 ,"",STR0010,/*Picture*/						,TAMSX3("F2_DOC")[1]	,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"VALOR"	 ,"",STR0011,PesqPict("SF2","F2_VALBRUT") ,TAMSX3("F2_VALBRUT")[1],/*lPixel*/,,"RIGHT",,"RIGHT")
	TRCell():New(oSection1,"CONTRATO","",STR0028,/*PesqPict("SEK","EK_EMISSAO")*/,TamSX3("D2_PEDIDO")[1]							  ,/*{|| code-block de impressao }*/)	
	TRCell():New(oSection1,"NUMAUT" ,"",STR0012,/*Picture*/						,TAMSX3("F2_NUMAUT")[1] ,/*lPixel*/,/*{|| code-block de impressao }*/)	
	TRCell():New(oSection1,"NIT"	 ,"",STR0008,		,TAMSX3("A2_CGC")[1]							  ,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"NOME"	 ,"",STR0009,/*Picture*/						,20 /*TAMSX3("A1_NOME")[1]	*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"CTPAGO"	 ,"",STR0013,/*Picture*/						,TamSX3("EL_CONTA")[1]	,/*lPixel*/,{|| aRetFin[1] })
	TRCell():New(oSection1,"VALPAGO" ,"",STR0014,PesqPict("SEL","EL_VALOR")  ,TamSX3("EL_VALOR")[1]	,/*lPixel*/,{|| aRetFin[2] })
	TRCell():New(oSection1,"VALACUM" ,"",STR0015,PesqPict("SEL","EL_VALOR")  ,TamSX3("EL_VALOR")[1]	,/*lPixel*/,{|| aRetFin[8] })
	TRCell():New(oSection1,"NITFIN"  ,"",STR0016,   ,TamSX3("A6_CGC")[1]		,/*lPixel*/,{|| aRetFin[4] })
	TRCell():New(oSection1,"DOCPAGO" ,"",STR0017,/*Picture*/					,TamSX3("EL_NUMERO")[1],/*lPixel*/,{|| aRetFin[5] })
	TRCell():New(oSection1,"TPPAGO"  ,"",STR0018,/*Picture*/					,2							,/*lPixel*/,{|| IIf(aRetFin[6] == "CH","1",IIF(aRetFin[6] == "TF","8","10")) })
	TRCell():New(oSection1,"DTPAGO"  ,"",STR0027+"   ",/*PesqPict("SEL","EL_EMISSAO")*/,15							,/*lPixel*/,{|| StoD(aRetFin[7]) })	
EndIF	

Return(oReport)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrin³ Autor ³TOTVS 					³ Data ³13.03.2012³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Impressão do Relatório									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportPrint(oReport)

Local oSection1 	:= oReport:Section(1) 
Local nOrdem		:= oReport:Section(1):GetOrder()  

Local cSelect   := "" 
Local cWhere1   := ""
Local cOrder    := ""
Local cTit      := ""
Local cChaveFin := ""
Local cFile     := ""
Local cDelim    := "|"
Local cText     := ""
Local nMod      := 0
Local nValor    := 0 
Local nHand     := 0
Local nTipo     := 0    
Local nX		:= 0
Local lGeraLF	:= .F.
Local cItem		:= ""
Local cChaveD1	:= ""
Local dDataDoc	:= dDatabase
Local cNumC		:="0"
Local cPedido 	:=""
Local aQuery	:={}
Private nSaldoAcm :=0

// -- Arquivo Texto -- //
cFile:=IIF(MV_PAR01==1,STR0002,STR0003)+"_"+STR0023+"_"+StrZero(Month(MV_PAR03),2)+StrZero(Year(MV_PAR03),4)+"_"+Trim(SM0->M0_CGC)+".TXT"
nHand:=FCreate(cFile)

// -- Seta Titulo do Relatório -- //    
oReport:SetCustomText( {|| Cabec103A(oReport ) })  

// -- Define o Tipo de Relatorio para busca dos Dados -- //
If MV_PAR01 == 1   //Compras

	If MV_PAR02 ==1
		cSelect := "% F1_DTDIGIT DATADOC, %"
	Else
		cSelect:="% F1_EMISSAO DATADOC, %"
	EndIf
      cWhere1 := "%F1_MOEDA >= 1 %"
	cOrder := "% "+IIF(MV_PAR02==1,"F1_DTDIGIT","F1_EMISSAO")+", F1_DOC %"
		aQuery	:= {}
		If ExistBlock("MTR103QF1")  // NUMERO CONTRATO
			aQuery:= ExecBlock("MTR103QF1",.F.,.F.,{cSelect,cWhere1,cOrder})
			If Len(aQuery)>=4
				cSelect	:=aQuery[1]
				cWhere1	:=aQuery[2]
				cOrder	:=aQuery[3]
		EndIf
	EndIf
	
	BeginSql Alias cAliasReg   
	
	Column DataDoc as Date
	
	Select F1_FILIAL FILIAL, F1_FORNECE CLIFOR, F1_LOJA LOJA,       F1_COND COND,   F1_MOEDA MOEDA,     F1_TXMOEDA TXMOEDA, %Exp:cSelect%
	       '1' TIPOTRAN,     A2_CGC NIT,        A2_NOME NOME,       F1_DOC NRDOC,   F1_PREFIXO PREFIXO, F1_DUPL DUPLIC,     F1_EMISSAO EMISSAO, 
			(CASE WHEN F1_MOEDA <> 1 THEN (F1_VALBRUT * F1_TXMOEDA) ELSE F1_VALBRUT END) VALOR, F1_NUMAUT NUMAUT, F1_ESPECIE ESPECIE, F1_SERIE SERIE, A2_EST ESTADO
			FROM %table:SF1% SF1
			JOIN %table:SD1% SD1 ON F1_FILIAL = D1_FILIAL AND F1_DOC = D1_DOC AND F1_SERIE = D1_SERIE AND F1_FORNECE = D1_FORNECE
			JOIN %table:SC7% SC7 ON F1_FILIAL = C7_FILIAL AND D1_PEDIDO = C7_NUM AND D1_ITEMPC = C7_ITEM
			JOIN %table:SA2% SA2 ON SA2.A2_COD = SF1.F1_FORNECE AND SA2.A2_LOJA = SF1.F1_LOJA
			WHERE SF1.F1_FILIAL = %xFilial:SF1%
			AND SA2.A2_FILIAL = %xFilial:SA2%
			AND SF1.F1_COND Not In('  ')
			AND %Exp:cWhere1%
			AND SF1.%NotDel%
			AND SD1.%NotDel%
			AND SC7.%NotDel%
			AND SA2.%NotDel%
			GROUP BY F1_FILIAL, F1_FORNECE, F1_LOJA, F1_COND, F1_MOEDA, F1_TXMOEDA, F1_DTDIGIT,
			A2_CGC, A2_NOME, F1_DOC, F1_PREFIXO, F1_DUPL, F1_EMISSAO,
			F1_VALBRUT, F1_NUMAUT, F1_ESPECIE, F1_SERIE, A2_EST
			HAVING SUM((C7_TOTAL * C7_TXMOEDA)) > 50000
			ORDER BY %Exp:cOrder%

		EndSql

	Else			    //Vendas
		
	If MV_PAR02 ==1
		cSelect := "% F2_DTDIGIT DATADOC, %"
	Else
		cSelect:="% F2_EMISSAO DATADOC, %"
	EndIf
		cWhere1	:= "%F2_MOEDA >= 1 %"
		cOrder	:= "% "+IIF(MV_PAR02==1,"F2_DTDIGIT","F2_EMISSAO")+", F2_DOC %"
		aQuery	:= {}
		If ExistBlock("MTR103QF2")  // NUMERO CONTRATO
			aQuery:= ExecBlock("MTR103QF2",.F.,.F.,{cSelect,cWhere1,cOrder})
			If Len(aQuery)>=4
				cSelect	:=aQuery[1]
				cWhere1	:=aQuery[2]
				cOrder	:=aQuery[3]
			EndIf
		EndIf

		BeginSql Alias cAliasReg
	
	Column DataDoc as Date
	 
			SELECT F2_FILIAL FILIAL, F2_CLIENTE CLIFOR, F2_LOJA LOJA, F2_COND COND, F2_MOEDA MOEDA, F2_TXMOEDA TXMOEDA, %Exp:cSelect%
			A1_CGC NIT, A1_NOME NOME, F2_DOC NRDOC, F2_PREFIXO PREFIXO, F2_DUPL DUPLIC, F2_EMISSAO EMISSAO,
			(CASE WHEN F2_MOEDA <> 1 THEN (F2_VALBRUT * F2_TXMOEDA) ELSE F2_VALBRUT END) VALOR, F2_NUMAUT NUMAUT, F2_ESPECIE ESPECIE, F2_SERIE SERIE, A1_EST ESTADO
			FROM %table:SF2% SF2
			JOIN %table:SA1% SA1 ON SA1.A1_COD = SF2.F2_CLIENTE AND SA1.A1_LOJA = SF2.F2_LOJA
			JOIN %table:SC6% SC6 ON C6_FILIAL = F2_FILIAL AND C6_NOTA = F2_DOC AND C6_SERIE = F2_SERIE
			JOIN %table:SC5% SC5 ON C5_FILIAL = C6_FILIAL AND C5_NUM = C6_NUM
			WHERE SF2.F2_FILIAL = %xFilial:SF2%
			AND SA1.A1_FILIAL = %xFilial:SA1%
			AND SF2.F2_COND NOT IN('  ')
			AND C6_NOTA <> ''
			AND %Exp:cWhere1%
			AND SF2.%NotDel%
			AND SA1.%NotDel%
			AND SC6.%NotDel%
			AND SC5.%NotDel%
			GROUP BY F2_FILIAL, F2_CLIENTE, F2_LOJA, F2_COND, F2_MOEDA, F2_TXMOEDA, F2_DTDIGIT,
			A1_CGC, A1_NOME, F2_DOC, F2_PREFIXO, F2_DUPL, F2_EMISSAO,
			F2_VALBRUT, F2_NUMAUT, F2_ESPECIE, F2_ESPECIE, F2_SERIE, A1_EST
			HAVING SUM((C6_VALOR * C5_TXMOEDA)) > 50000
			ORDER BY %Exp:cOrder%

		EndSql

	EndIf
	oReport:Section(1):EndQuery()

	//Inicia Impressão dos documentos obtidos //
oSection1:Init()
While !oReport:Cancel() .And. (cAliasReg)->(!Eof())
	If oReport:Cancel()
		Exit
	EndIf     
	cPedido :=""
	If MV_PAR01 == 1 
		// Exibe apenas Facturas ENTRADAS com TES que gera Livro Fiscal
		lGeraLF := .F.
		cItem	:= xFilial("SD1")+(cAliasReg)->(NRDOC+SERIE+CLIFOR+LOJA)
		cChaveD1:= "SD1->D1_FILIAL+SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA"
		DbSelectArea("SD1")
		DbSetOrder(1)
		MsSeek(cItem)
		While (&cChaveD1)==cItem .And. !Eof()
			DbSelectArea("SF4")
			DbSetOrder(1)
			MsSeek(xFilial("SF4")+SD1->D1_TES)
			If SF4->F4_GERALF = "1"
				cNumC:= SD1->D1_PEDIDO
				lGeraLF := .T.
				Exit
			EndIf
			DbSelectArea("SD1")
			DbSkip()
		End
		If !lGeraLF
			dbSelectArea(cAliasReg)
			dbSkip()
			Loop
		EndIf
		
		DbSelectArea("SF1")  // Pesquisa se é importacão
		DbSetOrder(1)
		cItem	:= xFilial("SF1")+(cAliasReg)->(NRDOC+SERIE+CLIFOR+LOJA)
		If lGeraLF .And. MsSeek(cItem) .and. !Empty(SF1->F1_HAWB)
			lGeraLF := .F.
		EndIf
		
		If !lGeraLF
			dbSelectArea(cAliasReg)
			dbSkip()
			Loop
		EndIf
		
	Else
			// Exibe apenas Facturas SAIDAS com TES que gera Livro Fiscal
		lGeraLF := .F.
		cItem	:= xFilial("SD2")+(cAliasReg)->(NRDOC+SERIE+CLIFOR+LOJA)
		cChaveD1:= "SD2->D2_FILIAL+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA"
		DbSelectArea("SD2")
		DbSetOrder(3)
		MsSeek(cItem)
		While (&cChaveD1)==cItem .And. !Eof()
			DbSelectArea("SF4")
			DbSetOrder(1)
			MsSeek(xFilial("SF4")+SD2->D2_TES)
			If SF4->F4_GERALF = "1"
				cNumC:= SD2->D2_PEDIDO
				lGeraLF := .T.
				Exit
			EndIf
			DbSelectArea("SD2")
			DbSkip()
		End
		If !lGeraLF
			dbSelectArea(cAliasReg)
			dbSkip()
			Loop
		EndIf
		
	EndIf
    nMod :=0
    nTipo:= 0
	
	If ExistBlock("MTR103CO")  // NUMERO CONTRATO
		cNumC:= ExecBlock("MTR103CO",.F.,.F.,{MV_PAR01,cNumC})
	EndIf
	
	//Identifica se a Factura e a 1=A vista / 2=A prazo //  
	If MV_PAR01 == 1                                              
	   cTit:=xFilial("SE2")+(cAliasReg)->(CLIFOR+LOJA+PREFIXO+DUPLIC)
	   cChaveFin:="E2_FILIAL+E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM"
	   DbSelectArea("SE2")
	   DbSetOrder(6)
	   MsSeek(cTit)
	   nRecnoSE2:=SE2->(Recno())
	   dDataDoc:= SE2->E2_EMISSAO
	   Do While (&cChaveFin)==cTit .And. !Eof()
	   		nMod++
	   	  	DbSkip()	   
	   EndDo
	   nMod:=IIF(nMod>1 .Or. nMod==0,2,nMod)
	   SE1->(MsGoTo(nRecnoSE2))
	Else //faturamento
	   cTit:=xFilial("SE1")+(cAliasReg)->(CLIFOR+LOJA+PREFIXO+DUPLIC)
	   cChaveFin:="E1_FILIAL+E1_CLIENTE+E1_LOJA+E1_PREFIXO+E1_NUM"
	   DbSelectArea("SE1")
	   DbSetOrder(2)
	   MsSeek(cTit)
	   nRecnoSE1:=SE1->(Recno())
	   dDataDoc:= SE1->E1_EMISSAO
	   Do While (&cChaveFin)==cTit .And. !Eof()
			nMod++	   
	   	  	DbSkip()	   
	   EndDo
	   nMod:=IIF(nMod>1 .Or. nMod==0,2,nMod)
	   SE1->(MsGoTo(nRecnoSE1))	   
	EndIf    
	
		nValor:=(cAliasReg)->VALOR
		If MV_PAR05 == 1
			If(nValor < 50000)
			dbSelectArea(cAliasReg)
			dbSkip()
			Loop
		EndIf
	EndIf

		aRetFin := {"",0,0,"","",""}
		nSaldoAcm :=0
		aRetTotFin := aClone(M103RTFin())

		// Tipo Transacao //
		nTipo:=TipoTransacao()

		// Seta valores / imprime //
		oSection1:Cell("MODALID"):SetValue(nMod)
		If MV_PAR01 == 1 //  Compras
			oSection1:Cell("TIPOTRAN"):SetValue(nTipo)
		EndIf
		oSection1:Cell("VALOR"):SetValue(nValor)
	oSection1:Cell("CONTRATO"):SetValue(cNumC)
	
//	oSection1:Cell("VALACUM"):SetValue(nSaldoAcm )

	For nX := 1 To Len(aRetTotFin)
		aRetFin := aClone(aRetTotFin[nX])	
		oReport:IncMeter() 
		oSection1:PrintLine()
		
		If MV_PAR01 == 1 //  Compras
		// Grava arquivo Texto //
			cText:=	STR(nMod,1)+cDelim+;
					Dtoc(dDataDoc)+cDelim+;
					Alltrim((cAliasReg)->TIPOTRAN)+cDelim+;
					Alltrim((cAliasReg)->NIT)+cDelim+;
					Alltrim((cAliasReg)->NOME)+cDelim+;
					Alltrim((cAliasReg)->NRDOC)+cDelim+;
					Alltrim(cNumC)+cDelim+;
					Alltrim(Str(nValor))+cDelim+;
					Alltrim((cAliasReg)->NUMAUT)+cDelim+;
					Alltrim(aRetFin[1])+cDelim+;
					Alltrim(Str(aRetFin[2]))+cDelim+;
					Alltrim(Str(aRetFin[8]))+cDelim+;
					Alltrim(aRetFin[4])+cDelim+;
					Alltrim(aRetFin[5])+cDelim+;
					IIf(MV_PAR01 == 1,IIf(aRetFin[6] $ "CA|CH","1",IIf(aRetFin[6] == "TF","4","10")),IIf(aRetFin[6] == "CH","1",IIF(aRetFin[6] == "TF","8","10"))) +cDelim+Chr(10) // +cDelim  +;
					 // aRetFin[7]+cDelim+Chr(10)
		Else
				//Vendas
			cText:=	STR(nMod,1)+cDelim+;
					Dtoc(dDataDoc)+cDelim+;
					Alltrim((cAliasReg)->NRDOC)+cDelim+;
					Alltrim(Str(nValor))+cDelim+;
					Alltrim(cNumC)+cDelim+;
					Alltrim((cAliasReg)->NUMAUT)+cDelim+;
					Alltrim((cAliasReg)->NIT)+cDelim+;
					Alltrim((cAliasReg)->NOME)+cDelim+;
					Alltrim(aRetFin[1])+cDelim+;
					Alltrim(Str(aRetFin[2]))+cDelim+;
					Alltrim(Str(aRetFin[8]))+cDelim+;
					Alltrim(aRetFin[4])+cDelim+;
					Alltrim(aRetFin[5])+cDelim+;
					IIf(MV_PAR01 == 2,IIf(aRetFin[6] $ "CA|CH","1",IIf(aRetFin[6] == "TF","4","10")),IIf(aRetFin[6] == "CH","1",IIF(aRetFin[6] == "TF","8","10")))+cDelim+;
					aRetFin[7]+cDelim+Chr(10)

		Endif		       
		FWrite(nHand,cText)
	Next nX	
	dbSelectArea(cAliasReg)
	dbSkip()
EndDo   
oSection1:Finish()  

//Fecha arquivo texto //
Fclose(nHand)
__CopyFile(cFile, "d:\"+cFile)
                 
//__CopyFile(cDirSrv+cNomArq, cDirUsr+cNomArq)                 
                 
//Responsavel pelas informacoes //
oReport:SkipLine(3)                       
oReport:Say(oReport:Row(), 10,  MV_PAR06)  
oReport:Say(oReport:Row(), 700, MV_PAR07) 
oReport:SkipLine(1)
oReport:Say(oReport:Row(), 10, Replicate("-",Len(STR0019)))
oReport:Say(oReport:Row(), 700, Replicate("-",50))
oReport:SkipLine(1)
oReport:Say(oReport:Row(), 10, STR0019)
oReport:Say(oReport:Row(), 700, STR0020)

Return NIL   

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ TipoTransacao³ Autor ³ TOTVS		        ³ Data ³ 27.04.12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDesc.     ³ Identifica o Tipo de Transação	                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATR103A                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function TipoTransacao()
Local nTipo :=0
Local cSFE
Local aArea :=GetArea()

If MV_PAR01 == 1       
    //Verifica se o titulo possui retenção se possuir, o tipo de transação será igual a 4
    //Caso contrário, valerá as demais regras
   	DbSelectArea("SFE")
   	DbSetOrder(4)
   	cSFE:=xFilial("SFE")+(cAliasReg)->CLIFOR+(cAliasReg)->LOJA+(cAliasReg)->NRDOC+(cAliasReg)->SERIE
   	MsSeek(cSFE)
   	If !EOF()
   		nTipo:=4
   	Else
   		IF Trim((cAliasReg)->ESPECIE)=="NF" .And. Trim((cAliasReg)->ESTADO)<>"EX"
			nTipo:=1
	    ElseIF Trim((cAliasReg)->ESPECIE)=="NF" .And. Trim((cAliasReg)->ESTADO)=="EX"
    		nTipo:=3   
    	Else
			nTipo:=5
    	EndIf
    EndIf
Else   
	IF Trim((cAliasReg)->ESPECIE)=="NF" .And. Trim((cAliasReg)->ESTADO)<>"EX"
		nTipo:=1
    ElseIF Trim((cAliasReg)->ESPECIE)=="NF" .And. Trim((cAliasReg)->ESTADO)=="EX"
   		nTipo:=2   
   	Else
		nTipo:=3
   	EndIf
	      
EndIf

RestArea(aArea)

Return nTipo

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Cabec262   ³ Autor ³ TOTVS		        ³ Data ³ 14.03.11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDesc.     ³Cabeçalho						                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATR103A                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Cabec103A( oReport )
Local aArea		:= GetArea()
Local aCabec	:= {}
Local cChar		:= chr(160)  // caracter dummy para alinhamento do cabeçalho     
Local cTitulo   := ""

cTitulo:= STR0001+" - "+IIF(MV_PAR01==1,STR0002,STR0003)+" "+STR0004+" - "+STR0021+" "+DTOC(MV_PAR03)+" - "+DTOC(MV_PAR04)

//Obtem Mascara para NIT //
SX3->( DbSetOrder(2) )                   
SX3->( MsSeek( "A1_CGC" , .t.))

aCabec := {	"__LOGOEMP__" , cChar + "         " + SM0->M0_NOMECOM ;
	      + "         " + cChar + RptFolha+ TRANSFORM(oReport:Page(),'999999');
          , cChar + "    "+STR0008+" " + Transform( Alltrim( SM0->M0_CGC ), alltrim( SX3->X3_PICTURE ));
          , "SIGA /" + 'MATR103A' + " /v." + cVersao ; 
          + "         " + cChar + UPPER(AllTrim(cTitulo)) ;
          + "         " + cChar;
          , RptHora + " " + time() ;
          + "         " + cChar + RptEmiss + " " + Dtoc(dDataBase),;
          + STR0024+" "+Trim(SM0->M0_NOME)+" / " + STR0025+" "+Trim(SM0->M0_FILIAL)+" / "+STR0026+" "+Trim(SM0->M0_ENDCOB)}

RestArea( aArea )
Return aCabec

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³M103RTFin ºAutor  ³ Pedro Pereira Lima º Data ³  27/04/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function M103RTFin()
Local cAliasQry := GetNextAlias()
Local aParc := {}
Local nX := 0
Local aRet := {}
Local aRetLin := {}
Local nTotParc := 0
Local nValParc := 0
Local cCtaChq  := ""
Local cNITBco  := ""
Local cRecibo  := ""
Local cTipoDoc := ""
Local cEmissao := ""
Local nInd     := 0
Local lExec    := .f.
Local aRecProc := {}
Local aAreaAt  := GetArea()
Local lTxt:=.F.
Local aDtMov:={}
Local cBanco := ""
Local cNumDoc:= ""	
Local cTipodoc:= ""
	Local cConta:= ""
//  Local nSaldoAcm:=0
aParc := Condicao((cAliasReg)->VALOR,(cAliasReg)->COND,,StoD((cAliasReg)->EMISSAO))

If MV_PAR01 == 1
	If Len(aParc) > 1 //Existem parcelas para a NF em questão
		cParc := "A" //Primeira parcela
		For nX := 1 To Len(aParc)
			DbSelectArea("SE2")
			DbSetOrder(1)
			If DbSeek(xFilial("SE2")+(cAliasReg)->(PREFIXO+DUPLIC)+cParc+SubStr((cAliasReg)->ESPECIE,1,TamSX3("E2_TIPO")[1])+(cAliasReg)->(CLIFOR+LOJA))
			///////
			nSaldoIni:= 0
			nSaldo := 0
			nSaldoAcm:=0			
/*			If SE2->E2_EMISSAO < MV_PAR03
				nSaldoIni:= nSaldo := SaldoTit( SE2->E2_PREFIXO , SE2->E2_NUM , SE2->E2_PARCELA , SE2->E2_TIPO, SE2->E2_NATUREZ , "P" , SE2->E2_FORNECE , 1 ,MV_PAR03, MV_PAR03-1, SE2->E2_LOJA )
				nSaldoAcm:=SE2->E2_VLCRUZ - nSaldoIni
			Else
				nSaldoIni:= SE2->E2_VLCRUZ
				nSaldoAcm:= 0
			EndIf		
	*/		
			
				If !Empty("E2_ORDPAGO").And. E2_ORDPAGO != Replicate(" ", Len(E2_ORDPAGO))				
					cAliasQry := GetNextAlias()
					BeginSql Alias cAliasQry
						SELECT *
						FROM %TABLE:SEK% SEK
						WHERE EK_FILIAL = %EXP:xFilial("SEK")% AND
						EK_PREFIXO = %EXP:SE2->E2_PREFIXO% AND
						EK_NUM = %EXP:SE2->E2_NUM% AND
						EK_PARCELA = %EXP:SE2->E2_PARCELA% AND
						EK_TIPO = %EXP:SE2->E2_TIPO% AND
						EK_TIPODOC = %EXP:"TB"% AND
						EK_FORNECE = %EXP:SE2->E2_FORNECE% AND
						EK_LOJA = %EXP:SE2->E2_LOJA% AND
						EK_CANCEL <> %EXP:"T"% AND
						EK_DTDIGIT BETWEEN %EXP:DtoS(MV_PAR03)% AND %EXP:DtoS(MV_PAR04)% AND
						SEK.%NotDel%
					EndSql
				
					(cAliasQry)->(DbGoTop())
					
					lAchou:=.F.
				
					If !(cAliasQry)->(eof())
						cAliasQry := GetNextAlias()
			
						BeginSql Alias cAliasQry
							SELECT *
							FROM %TABLE:SEK% SEK
							WHERE EK_FILIAL = %EXP:xFilial("SEK")% AND
							EK_PREFIXO = %EXP:SE2->E2_PREFIXO% AND
							EK_NUM = %EXP:SE2->E2_NUM% AND
							EK_PARCELA = %EXP:SE2->E2_PARCELA% AND
							EK_TIPO = %EXP:SE2->E2_TIPO% AND
							EK_FORNECE = %EXP:SE2->E2_FORNECE% AND
							EK_LOJA = %EXP:SE2->E2_LOJA% AND
							EK_TIPODOC = %EXP:"TB"% AND
							EK_CANCEL <> %EXP:"T"% AND
							EK_DTDIGIT <= %EXP:DtoS(MV_PAR04)% AND
							SEK.%NotDel%
						EndSql
					
						(cAliasQry)->(DbGoTop())
						lAchou:=.T.
					EndIf
					
					While lAchou .And. !(cAliasQry)->(eof())
						lTxt:=.F.
						DbSelectArea("SEK")
						DbSetOrder(1)
						DbSeek(xFilial("SEK")+(cAliasQry)->(EK_ORDPAGO))
						While !lTxt  .And. !SEK->(eof()) .And.  xfilial("SEK")+ (cAliasQry)->(EK_ORDPAGO) ==  SEK->EK_FILIAL + SEK->EK_ORDPAGO
							If  !(SEK->EK_TIPODOC $ "TB|PA")  .or. (SEK->EK_TIPODOC $ "TB|PA" .and. SEK->EK_TIPO <>"NF")
								aDtMov:={}
								If (SEK->EK_TIPODOC $ "TB|PA" .and. SEK->EK_TIPO <>"NF")
									aDtMov:=PesqBcoSEK()
									cBanco := aDtMov[1]
									cNumDoc:= aDtMov[2]	
									cTipodoc:= aDtMov[3]
								Else
									cBanco := SEK->EK_BANCO+SEK->EK_AGENCIA+SEK->EK_CONTA	
									cNumDoc:= SEK->EK_NUM	
										cTipodoc:= SEK->EK_TIPO
								EndIf	
								SA6->(DbSetOrder(1))
								SA6->(DbSeek(xFilial("SA6")+cBanco))
								nPerc:= (cAliasQry)->EK_VALOR /SEK->EK_VALOR  
								nValor:=Round( SEK->EK_VALOR *  nPerc ,MsDecimais(1))
								nValor:=(xmoeda(nValor,SE2->E2_MOEDA,1,SEK->EK_DTDIGIT))
								nSaldoAcm:= nSaldoAcm + nValor

									cConta:= SEK->EK_CONTA
									If(Empty(cConta))
										cConta:= GetAdvFVal("SEK","EK_CONTA", SEK->EK_FILIAL + PADR(ALLTRIM(SEK->EK_NUM), 6) + 'CP', 1, "")
									EndIf

									If(Empty(cNumDoc))
										cNumDoc:= GetAdvFVal("SEK","EK_NUM", SEK->EK_FILIAL + PADR(ALLTRIM(SEK->EK_NUM), 6) + 'CP', 1, "")
									EndIf
									
									If(ALLTRIM(cTipodoc) == 'PA' .OR. Empty(cTipodoc))
										cTipodoc:= GetAdvFVal("SEK","EK_TIPO", SEK->EK_FILIAL + PADR(ALLTRIM(SEK->EK_NUM), 6) + 'CP', 1, "")
									EndIf

								If ExistBlock("MTR103DC")    //NUMERO DOCUMENTO DE PAGO
									cNumDoc:= ExecBlock("MTR103DC",.F.,.F.,{MV_PAR01,cNumDoc})
								EndIf
								
									aRetLin := {cConta,nValor,0,SA6->A6_CGC,cNumDoc,ALLTRIM(cTipodoc),Dtos(SEK->EK_DTDIGIT),nSaldoAcm}
								aAdd(aRet,aRetLin)
								lTxt:=.t. 
							EndIf
							SEK->(DbSkip())
						EndDo	
						(cAliasQry)->(DbSkip())
					EndDo
					(cAliasQry)->(DbCloseArea())
				EndIf
			EndIf	
			cParc := AllTrim(Soma1(cParc))
		Next nX
	Else
		DbSelectArea("SE2")
		DbSetOrder(1)
		If DbSeek(xFilial("SE2")+(cAliasReg)->(PREFIXO+DUPLIC)+Space(TamSX3("E1_PARCELA")[1])+SubStr((cAliasReg)->ESPECIE,1,TamSX3("E2_TIPO")[1])+(cAliasReg)->(CLIFOR+LOJA))
			nSaldoIni:= 0
			nSaldo := 0
			nSaldoAcm:=0			
/*			If SE2->E2_EMISSAO < MV_PAR03
				nSaldoIni:= nSaldo := SaldoTit( SE2->E2_PREFIXO , SE2->E2_NUM , SE2->E2_PARCELA , SE2->E2_TIPO, SE2->E2_NATUREZ , "P" , SE2->E2_FORNECE , 1 ,MV_PAR03, MV_PAR03-1, SE2->E2_LOJA )
				nSaldoAcm:=SE2->E2_VLCRUZ - nSaldoIni
			Else
				nSaldoIni:= SE2->E2_VLCRUZ
				nSaldoAcm:= 0
			EndIf		
	*/		
			
			If !Empty("E2_ORDPAGO").And. E2_ORDPAGO != Replicate(" ", Len(E2_ORDPAGO))
				
				cAliasQry := GetNextAlias()
			
				BeginSql Alias cAliasQry
					SELECT *
					FROM %TABLE:SEK% SEK
					WHERE EK_FILIAL = %EXP:xFilial("SEK")% AND
					EK_PREFIXO = %EXP:SE2->E2_PREFIXO% AND
					EK_NUM = %EXP:SE2->E2_NUM% AND
					EK_PARCELA = %EXP:SE2->E2_PARCELA% AND
					EK_TIPO = %EXP:SE2->E2_TIPO% AND
					EK_FORNECE = %EXP:SE2->E2_FORNECE% AND
					EK_LOJA = %EXP:SE2->E2_LOJA% AND
					EK_TIPODOC = %EXP:"TB"% AND
					EK_CANCEL <> %EXP:"T"% AND
					EK_DTDIGIT BETWEEN %EXP:DtoS(MV_PAR03)% AND %EXP:DtoS(MV_PAR04)% AND
					SEK.%NotDel%
				EndSql
				
				(cAliasQry)->(DbGoTop())
				
				lAchou:=.F.
				
				If !(cAliasQry)->(eof())
					cAliasQry := GetNextAlias()
			
					BeginSql Alias cAliasQry
					SELECT *
					FROM %TABLE:SEK% SEK
					WHERE EK_FILIAL = %EXP:xFilial("SEK")% AND
					EK_PREFIXO = %EXP:SE2->E2_PREFIXO% AND
					EK_NUM = %EXP:SE2->E2_NUM% AND
					EK_PARCELA = %EXP:SE2->E2_PARCELA% AND
					EK_TIPO = %EXP:SE2->E2_TIPO% AND
					EK_FORNECE = %EXP:SE2->E2_FORNECE% AND
					EK_LOJA = %EXP:SE2->E2_LOJA% AND
					EK_TIPODOC = %EXP:"TB"% AND
					EK_CANCEL <> %EXP:"T"% AND
					EK_DTDIGIT <= %EXP:DtoS(MV_PAR04)% AND
					SEK.%NotDel%
					EndSql
					
					(cAliasQry)->(DbGoTop())
					lAchou:=.T.
				EndIf
				
				While  lAchou .And. !(cAliasQry)->(eof())
					lTxt:=.f.
					DbSelectArea("SEK")
					DbSetOrder(1)
					DbSeek(xFilial("SEK")+(cAliasQry)->(EK_ORDPAGO))
					While !lTxt .And. !SEK->(eof()) .And.  xfilial("SEK")+ (cAliasQry)->(EK_ORDPAGO) ==  SEK->EK_FILIAL + SEK->EK_ORDPAGO
						If !(SEK->EK_TIPODOC $ "TB|PA") .or. (SEK->EK_TIPODOC $ "TB|PA" .and. SEK->EK_TIPO <>"NF")
							aDtMov:={}
							If (SEK->EK_TIPODOC $ "TB|PA" .and. SEK->EK_TIPO <>"NF")
								aDtMov:=PesqBcoSEK()
								cBanco := aDtMov[1]
								cNumDoc:= aDtMov[2]	
								cTipodoc:= aDtMov[3]
							Else
								cBanco := SEK->EK_BANCO+SEK->EK_AGENCIA+SEK->EK_CONTA	
								cNumDoc:= SEK->EK_NUM	
									cTipodoc:= SEK->EK_TIPO
								EndIf
								SA6->(DbSetOrder(1))
								SA6->(DbSeek(xFilial("SA6")+cBanco))
								nPerc:= (cAliasQry)->EK_VALOR /SEK->EK_VALOR
								nValor:=Round( SEK->EK_VALOR *  nPerc ,MsDecimais(1))
								nValor:=(xmoeda(nValor,SE2->E2_MOEDA,1,SEK->EK_DTDIGIT))
								nSaldoAcm:= nSaldoAcm + nValor

								cConta:= SEK->EK_CONTA
								If(Empty(cConta))
									cConta:= GetAdvFVal("SEK","EK_CONTA", SEK->EK_FILIAL + PADR(ALLTRIM(SEK->EK_NUM), 6) + 'CP', 1, "")
								EndIf

								If(Empty(cNumDoc))
									cNumDoc:= GetAdvFVal("SEK","EK_NUM", SEK->EK_FILIAL + PADR(ALLTRIM(SEK->EK_NUM), 6) + 'CP', 1, "")
								EndIf
								
								If(ALLTRIM(cTipodoc) == 'PA' .OR. Empty(cTipodoc))
									cTipodoc:= GetAdvFVal("SEK","EK_TIPO", SEK->EK_FILIAL + PADR(ALLTRIM(SEK->EK_NUM), 6) + 'CP', 1, "")
								EndIf

								If ExistBlock("MTR103DC")     //NUMERO DOCUMENTO DE PAGO
									cNumDoc:= ExecBlock("MTR103DC",.F.,.F.,{MV_PAR01,cNumDoc})
								EndIf

								aRetLin := {cConta,nValor,0,SA6->A6_CGC,cNumDoc,ALLTRIM(cTipodoc),Dtos(SEK->EK_DTDIGIT),nSaldoAcm}
								aAdd(aRet,aRetLin)
								lTxt:=.T.
						EndIf
						SEK->(DbSkip())
					EndDo	
					(cAliasQry)->(DbSkip())
				EndDo
				(cAliasQry)->(DbCloseArea())
			EndIf
		EndIf
	EndIf
Else
	If Len(aParc) > 1 //Existem parcelas para a NF em questão
		cParc := "A" //Primeira parcela
		For nX := 1 To Len(aParc)
			DbSelectArea("SE1")
			DbSetOrder(1)
			If DbSeek(xFilial("SE1")+(cAliasReg)->(PREFIXO+DUPLIC)+cParc+SubStr((cAliasReg)->ESPECIE,1,TamSX3("E2_TIPO")[1]))
				
				/////////////////
				nSaldoIni:= 0
				nSaldo := 0
				nSaldoAcm:=0	
				/*
				If SE1->E1_EMISSAO < MV_PAR03
					nSaldoIni:=SaldoTit( SE1->E1_PREFIXO , SE1->E1_NUM , SE1->E1_PARCELA , SE1->E1_TIPO, SE1->E1_NATUREZ , "R" , SE1->E1_CLIENTE , 1 ,MV_PAR03 , MV_PAR03-1 , SE1->E1_LOJA )
					nSaldoAcm:=SE1->E1_VLCRUZ - nSaldoIni
				Else
					nSaldoIni:= SE1->E1_VLCRUZ
					nSaldoAcm:= 0
				EndIf		
				*/
				If !Empty(SE1->E1_RECIBO)
					
					cAliasQry := GetNextAlias()
				
					BeginSql Alias cAliasQry
						SELECT *
						FROM %TABLE:SEL% SEL
						WHERE EL_FILIAL = %EXP:xFilial("SEL")% AND
						EL_PREFIXO = %EXP:SE1->E1_PREFIXO% AND
						EL_NUMERO = %EXP:SE1->E1_NUM% AND
						EL_PARCELA = %EXP:SE1->E1_PARCELA% AND
						EL_TIPO = %EXP:SE1->E1_TIPO% AND
						EL_CLIENTE = %EXP:SE1->E1_CLIENTE% AND
						EL_LOJA = %EXP:SE1->E1_LOJA% AND
						EL_TIPODOC = %EXP:"TB"% AND
						EL_CANCEL <> %EXP:"T"% AND
						EL_DTDIGIT BETWEEN %EXP:DtoS(MV_PAR03)% AND %EXP:DtoS(MV_PAR04)% AND
						SEL.%NotDel%
					EndSql

					(cAliasQry)->(DbGoTop())
									// Toma todos registros
				lAchou:=.F.
				
				If !(cAliasQry)->(eof())
					cAliasQry := GetNextAlias()
					BeginSql Alias cAliasQry
						SELECT *
						FROM %TABLE:SEL% SEL
						WHERE EL_FILIAL = %EXP:xFilial("SEL")% AND
						EL_PREFIXO = %EXP:SE1->E1_PREFIXO% AND
						EL_NUMERO = %EXP:SE1->E1_NUM% AND
						EL_PARCELA = %EXP:SE1->E1_PARCELA% AND
						EL_TIPO = %EXP:SE1->E1_TIPO% AND
						EL_CLIENTE = %EXP:SE1->E1_CLIENTE% AND
						EL_LOJA = %EXP:SE1->E1_LOJA% AND
						EL_TIPODOC = %EXP:"TB"% AND
						EL_CANCEL <> %EXP:"T"% AND
						EL_DTDIGIT <= %EXP:DtoS(MV_PAR04)% AND
						SEL.%NotDel%
					EndSql
					
					(cAliasQry)->(DbGoTop())
					lAchou:=.T.
				EndIf
				While  lAchou .And. !(cAliasQry)->(eof())
						lTxt:=.f.
						DbSelectArea("SEL")
						DbSetOrder(8)
						DbSeek(xFilial("SEL")+(cAliasQry)->(EL_SERIE) +(cAliasQry)->(EL_RECIBO)    )
						While  !lTxt .aND. !SEL->(eof()) .And.  xfilial("SEL") +(cAliasQry)->(EL_SERIE) + (cAliasQry)->(EL_RECIBO) ==  SEL->EL_FILIAL+ SEL->EL_SERIE + SEL->EL_RECIBO
							If !(SEL->EL_TIPODOC $ "TB|RA") .or. (SEL->EL_TIPODOC $ "TB|RA" .and. SEL->EL_TIPO <>"NF") 
								aDtMov:={}
								If (SEL->EL_TIPODOC $ "TB|RA" .and. SEL->EL_TIPO <>"NF")
									aDtMov:=PesqBcoSEL()
									cBanco := aDtMov[1]
									cNumDoc:= aDtMov[2]	
									cTipodoc:= aDtMov[3]
								Else
									cBanco := SEL->EL_BANCO+SEL->EL_AGENCIA+SEL->EL_CONTA	
										cNumDoc:= SEL->EL_NUMERO
										cTipodoc:= SEL->EL_TIPO
									EndIf

									SA6->(DbSetOrder(1))
									SA6->(DbSeek(xFilial("SA6")+cBanco))

									nPerc:= (cAliasQry)->EL_VALOR/SEL->EL_VALOR
									nValor:=Round(SEL->EL_VALOR  *  nPerc ,MsDecimais(Val(SEL->EL_MOEDA)))
									nValor:=(xmoeda(nValor,SE1->E1_MOEDA,1,SEL->EL_DTDIGIT))
									nSaldoAcm:= nSaldoAcm + nValor

									cConta:= SEL->EL_CONTA
									If(Empty(cConta))
										cConta:= GetAdvFVal("SEL","EL_CONTA", SEL->EL_FILIAL + PADR(ALLTRIM(SEL->EL_NUMERO), 6) + 'TF', 1, "")
									EndIf

									If(Empty(cNumDoc))
										cNumDoc:= GetAdvFVal("SEL","EL_NUMERO", SEL->EL_FILIAL + PADR(ALLTRIM(SEL->EL_NUMERO), 6) + 'TF', 1, "")
									EndIf
									
									If(ALLTRIM(cTipodoc) == 'RA' .OR. Empty(cTipodoc))
										cTipodoc:= GetAdvFVal("SEL","EL_TIPO", SEL->EL_FILIAL + PADR(ALLTRIM(SEL->EL_NUMERO), 6) + 'TF', 1, "")
									EndIf

									If ExistBlock("MTR103DC")     //NUMERO DOCUMENTO DE PAGO
										cNumDoc:= ExecBlock("MTR103DC",.F.,.F.,{MV_PAR01,cNumDoc})
									EndIf

									aRetLin := {cConta,nValor,0,SA6->A6_CGC,cNumDoc,ALLTRIM(cTipodoc),Dtos(SEL->EL_DTDIGIT),nSaldoAcm}
									aAdd(aRet,aRetLin)
								lTxt:=.t.
							EndIf
							SEL->(DbSkip())
						EndDo	
						(cAliasQry)->(DbSkip())
					EndDo
					
					(cAliasQry)->(DbCloseArea())
				EndIf
			EndIf
			cParc := AllTrim(Soma1(cParc))
		Next nX
	Else
		DbSelectArea("SE1")
		DbSetOrder(1)
		nSaldoAcm:=0
		nSaldoIni:=0
		
		If DbSeek(xFilial("SE1")+(cAliasReg)->(PREFIXO+DUPLIC)+Space(TamSX3("E1_PARCELA")[1])+(cAliasReg)->ESPECIE)
		
		///////
			nSaldoIni:= 0
			nSaldo := 0
			nSaldoAcm:=0			
		/*	If SE1->E1_EMISSAO < MV_PAR03
				nSaldoIni:=SaldoTit( SE1->E1_PREFIXO , SE1->E1_NUM , SE1->E1_PARCELA , SE1->E1_TIPO, SE1->E1_NATUREZ , "R" , SE1->E1_CLIENTE , 1 ,MV_PAR03 , MV_PAR03-1 , SE1->E1_LOJA )
				nSaldoAcm:=SE1->E1_VLCRUZ - nSaldoIni
			Else
				nSaldoIni:= SE1->E1_VLCRUZ
				nSaldoAcm:= 0
			EndIf		
			*/	
			If !Empty(SE1->E1_RECIBO)
					
				cAliasQry := GetNextAlias()
				
				BeginSql Alias cAliasQry
					SELECT *
					FROM %TABLE:SEL% SEL
					WHERE EL_FILIAL = %EXP:xFilial("SEL")% AND
					EL_PREFIXO = %EXP:SE1->E1_PREFIXO% AND
					EL_NUMERO = %EXP:SE1->E1_NUM% AND
					EL_PARCELA = %EXP:SE1->E1_PARCELA% AND
					EL_TIPO = %EXP:SE1->E1_TIPO% AND
					EL_CLIENTE = %EXP:SE1->E1_CLIENTE% AND
					EL_LOJA = %EXP:SE1->E1_LOJA% AND
					EL_TIPODOC = %EXP:"TB"% AND
					EL_CANCEL <> %EXP:"T"% AND
					EL_DTDIGIT BETWEEN %EXP:DtoS(MV_PAR03)% AND %EXP:DtoS(MV_PAR04)% AND
					SEL.%NotDel%
				EndSql
				
				(cAliasQry)->(DbGoTop())
				
				// Toma todos registros
				lAchou:=.F.
				
				If !(cAliasQry)->(eof())
					cAliasQry := GetNextAlias()
					BeginSql Alias cAliasQry
						SELECT *
						FROM %TABLE:SEL% SEL
						WHERE EL_FILIAL = %EXP:xFilial("SEL")% AND
						EL_PREFIXO = %EXP:SE1->E1_PREFIXO% AND
						EL_NUMERO = %EXP:SE1->E1_NUM% AND
						EL_PARCELA = %EXP:SE1->E1_PARCELA% AND
						EL_TIPO = %EXP:SE1->E1_TIPO% AND
						EL_CLIENTE = %EXP:SE1->E1_CLIENTE% AND
						EL_LOJA = %EXP:SE1->E1_LOJA% AND
						EL_TIPODOC = %EXP:"TB"% AND
						EL_CANCEL <> %EXP:"T"% AND
						EL_DTDIGIT <= %EXP:DtoS(MV_PAR04)% AND
						SEL.%NotDel%
					EndSql
					
					(cAliasQry)->(DbGoTop())
					lAchou:=.T.
				EndIf
				While  lAchou .And. !(cAliasQry)->(eof())
					DbSelectArea("SEL")
					DbSetOrder(8)
					DbSeek(xFilial("SEL")+(cAliasQry)->(EL_SERIE) +(cAliasQry)->(EL_RECIBO)    )
					lTxt:=.F.
					While  !lTxt .And. !SEL->(eof()) .And.  xfilial("SEL") +(cAliasQry)->(EL_SERIE) + (cAliasQry)->(EL_RECIBO) ==  SEL->EL_FILIAL+ SEL->EL_SERIE + SEL->EL_RECIBO

						If !(SEL->EL_TIPODOC $ "TB|RA")  .or. (SEL->EL_TIPODOC $ "TB|RA" .and. SEL->EL_TIPO <>"NF")//  .AND. SEL->(EL_NUMERO)  == (cAliasQry)->(EL_NUMERO)
							//cBanco := SEL->EL_BANCO+SEL->EL_AGENCIA+SEL->EL_CONTA		
							aDtMov:={}
							cBanco := ""
							If (SEL->EL_TIPODOC $ "TB|RA" .and. SEL->EL_TIPO <>"NF")
								aDtMov:=PesqBcoSEL()
								cBanco := aDtMov[1]
								cNumDoc:= aDtMov[2]	
								cTipodoc:= aDtMov[3]
							Else
								cBanco := SEL->EL_BANCO+SEL->EL_AGENCIA+SEL->EL_CONTA	
								cNumDoc:= SEL->EL_NUMERO	
									cTipodoc:= SEL->EL_TIPO
								EndIf

								SA6->(DbSetOrder(1))
								SA6->(DbSeek(xFilial("SA6")+cBanco))

								nPerc:= (cAliasQry)->EL_VALOR/SEL->EL_VALOR
								nValor:=Round(SEL->EL_VALOR  *  nPerc ,MsDecimais(Val(SEL->EL_MOEDA)))
								nValor:=(xmoeda(nValor,SE1->E1_MOEDA,1,SEL->EL_DTDIGIT))
								nSaldoAcm:= nSaldoAcm +nValor

								cConta:= SEL->EL_CONTA
								If(Empty(cConta))
									cConta:= GetAdvFVal("SEL","EL_CONTA", SEL->EL_FILIAL + PADR(ALLTRIM(SEL->EL_NUMERO), 6) + 'TF', 1, "")
								EndIf

								If(Empty(cNumDoc))
									cNumDoc:= GetAdvFVal("SEL","EL_NUMERO", SEL->EL_FILIAL + PADR(ALLTRIM(SEL->EL_NUMERO), 6) + 'TF', 1, "")
								EndIf
								
								If(ALLTRIM(cTipodoc) == 'RA' .OR. Empty(cTipodoc))
									cTipodoc:= GetAdvFVal("SEL","EL_TIPO", SEL->EL_FILIAL + PADR(ALLTRIM(SEL->EL_NUMERO), 6) + 'TF', 1, "")
								EndIf

								If ExistBlock("MTR103DC")     //NUMERO DOCUMENTO DE PAGO
									cNumDoc:= ExecBlock("MTR103DC",.F.,.F.,{MV_PAR01,cNumDoc})
								EndIf
								aRetLin := {cConta,nValor,0,SA6->A6_CGC,cNumDoc,ALLTRIM(cTipodoc),Dtos(SEL->EL_DTDIGIT),nSaldoAcm}
								lTxt:= .T.
								aAdd(aRet,aRetLin)
							
						EndIf
						SEL->(DbSkip())
					EndDo	
				(cAliasQry)->(DbSkip())
				EndDo
				(cAliasQry)->(DbCloseArea())
			EndIf
				
		EndIf		
		
	EndIf
EndIf

RestArea(aAreaAt)
Conout( len( aRet ) )

Return aRet

Static  Function PesqBcoSEL()

Local cRecibo:=""
Local cBanco:=""
Local aAreaAtu:=GetArea()
Local aAreaSEL:=SEL->(GetArea())
Local cPesq:=xFilial("SEL")+SEL->EL_PREFIXO+SEL->EL_NUMERO+SEL->EL_PARCELA+SEL->EL_TIPO+SEL->EL_CLIORIG+SEL->EL_LOJORIG
Local aRetMov:={"","",""}

DbSelectArea("SEL")
DbSetOrder(2)

IF DbSeek(cPesq )
	While xFilial("SEL")+SEL->EL_PREFIXO+SEL->EL_NUMERO+SEL->EL_PARCELA+SEL->EL_TIPO+SEL->EL_CLIORIG+SEL->EL_LOJORIG  == cPesq
		If "RA" $ SEl->EL_TIPODOC
			cRecibo:=SEL->EL_RECIBO
			cSerie:=SEL->EL_SERIE
		EndIf
		SEL->(DbSkip())
	EndDo	
EndIf
If !Empty(cRecibo)
	DbSetOrder(8)
	cPesq:=xFilial("SEL")+ cSerie+cRecibo
	IF DbSeek(cPesq)
		While (xFilial("SEL")+SEL->EL_SERIE+SEL->EL_RECIBO == cPesq) .And. Empty(cBanco)
			If Alltrim(SEL->EL_TIPO) $ "TF|CH"
				cBanco := SEL->EL_BANCO+SEL->EL_AGENCIA+SEL->EL_CONTA
					aRetMov:= {cBanco,SEL->EL_NUMERO,SEL->EL_TIPO}
			EndIf
			SEL->(DbSkip())
		EndDo
	EndIf	
EndIf		
SEL->(RestArea(aAreaSEL))
RestArea(aAreaAtu)
Return(aRetMov)

Static Function PesqBcoSEK()

Local cBanco:=""
Local aAreaAtu:=GetArea()
Local aAreaSEK:=SEK->(GetArea())
Local cPesq:=xFilial("SEK")+SEK->EK_NUM
Local aRetMov:={"","",""}
DbSelectArea("SEK")
DbSetOrder(1)

IF DbSeek(cPesq )
	While (cPesq:=xFilial("SEK")+SEK->EK_NUM ) .And. Empty(cBanco)
		If Alltrim(SEK->EK_TIPO) $ "TF|CH"
			cBanco := SEK->EK_BANCO+SEK->EK_AGENCIA+SEK->EK_CONTA
				aRetMov:= {cBanco,SEK->EK_NUM,SEK->EK_TIPO}
		EndIf
		SEK->(DbSkip())
	EndDo	
EndIf

SEK->(RestArea(aAreaSEK))
RestArea(aAreaAtu)

Return(aRetMov)

