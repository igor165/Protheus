#INCLUDE "MATA468.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE 'FWLIBVERSION.CH'

#DEFINE _PEDREM		1
#DEFINE _GRUPO	   		2
#DEFINE _AGREGADOR		3
#DEFINE _CLIENTE     	4
#DEFINE _NOQUEBRA	 	5
#DEFINE _RMCONS		"A"

Static	aPedTots,cRat,nRatDesp,nRatFret,nRatSeg,aSD2,aSF2,aHeadSF1,aHeadSD1,__aCodes
Static aNCF := {} // NCF da Republica Dominicana, sera gravado na geracao da nota
Static cPontoVend := ""
Static _lMetric	:= Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATA468N ³ Autor ³ Bruno Sobieski             ³ Data ³ 24.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Geracao de Notas Fiscais para paises do ConeSul.                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ FATURAMENTO                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³           ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³Data        ³ BOPS     ³ Motivo da Alteracao                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Jonathan Glz³20/07/15    ³PCREQ-4256³Se elimina las funciones AjustaSX3(),  ³±±
±±³            ³            ³          ³AjustaSX1() y AlteraSX1() que hacen    ³±±
±±³            ³            ³          ³modificacion a SX1 por motivo de ade-  ³±±
±±³            ³            ³          ³cuacion a fuentes a nuevas estructuras ³±±
±±³            ³            ³          ³SX para Version 12.                    ³±±
±±³Alf. Medrano³19/11/15    ³PCREQ-4263³ se realiza merge  12.1.8              ³±±
±±³Jonathan Glz³18/04/16    ³TUYEGM    ³Modificaciones para Colombia.          ³±±
±±³            ³            ³          ³*Funcion a468nProces, se agregan los   ³±±
±±³            ³            ³          ³campos C5_TPACTIV, F2_TPACTIV a los    ³±±
±±³            ³            ³          ³array aQuebraPed y aQuebraRem          ³±±
±±³            ³            ³          ³*Funcion a468nGravF2, Se agregan los   ³±±
±±³            ³            ³          ³campos C5_TPACTIV,F2_TPACTIV para hacer³±±
±±³            ³            ³          ³el guardado de la factura              ³±±
±±³Jonathan Glz³09/05/16    ³TVFHOB    ³Se agrega funcionalidad de TRM pactada ³±±
±±³            ³            ³          ³para la generacion  notas fiscales para³±±
±±³            ³            ³          ³Colombia.Se agrega funcion ValidTRM    ³±±
±±³Jonathan Glz³21/06/16    ³TVK844    ³Modificacion funcion ValidTRM,se agrega³±±
±±³            ³            ³          ³opción para cuando la TRM pactada este ³±±
±±³            ³            ³          ³vacia.                                 ³±±
±±³Jonathan Glz³21/06/16    ³TVLNJX    ³Modificacion funcion a468nDupl,se pasa ³±±
±±³            ³            ³          ³la replica de la TRM PActada para el   ³±±
±±³            ³            ³          ³campo E1_TRMPAC.                       ³±±
±±³LuisEnríquez³02/12/16    ³SERINN001-386³Se realizó merge Inovação 12.1.15   ³±±
±±³Laura Medina³01/02/17    ³MMI-4761  ³Se modifica la generación del Folio    ³±±
±±³            ³            ³          ³cuando se usan diferentes series y se  ³±±
±±³            ³            ³          ³agrego la funcionalidad del Issue MMI- ³±±
±±³            ³            ³          ³4776                                   ³±±
±±³LuisEnriquez³22/02/17    ³ MMI-4171 ³ Merge 12.1.14 MI Se modifica la fun-  ³±±
±±³            ³            ³          ³ cion a468nMark para agregar validación³±±
±±³            ³            ³          ³ que indique si cliente del pedido de  ³±±
±±³            ³            ³          ³ venta está incluido en el padrón de   ³±±
±±³            ³            ³          ³ facturas apocrifas. (ARGENTINA)       ³±±
±±³Dora Vega   ³09/05/17    ³ MMI-277  ³Merge de replica de llamado TVKACD.    ³±±
±±³            ³            ³ MMI-5164 ³Merge del issue MMI-4878.Guardar en    ³±±
±±³            ³            ³          ³FR3 pedido de venta asociado a anticipo³±±
±±³            ³            ³          ³Validacion de agrupacion al generar    ³±±
±±³            ³            ³          ³facturas a partir pedido de venta.(MEX)³±±
±±³LuisEnriquez³07/06/2017  ³TSSERMI01 ³-Merge Main 12.1.14 En método AddIndex ³±±
±±³            ³            ³-96       ³de clase FWTemporaryTable se modifica a³±±
±±³            ³            ³          ³2 caracteres nombre de indice. (CTREE) ³±±
±±³Ivan Gomez  ³19/05/17    ³ MMI-5449 ³Replica de llamado MMI-5222            ³±±
±±³            ³            ³          ³Se ajusta Numeración garaba consecutivo³±±
±±³L. Samaniego³22/09/2017  ³TSSERMI01 ³Se agregan campos para CFDI 3.3.       ³±±
±±³            ³            ³ -149     ³Mexico.                                ³±±
±±³Jose Glez   ³18/10/2017  ³MMI-6395  ³Generando facturas con moneda diferente³±±
±±³            ³            ³          ³a la del doc origen, se actualiza la   ³±±
±±³            ³            ³          ³tasa correspondiente a la moneda       ³±±
±±³            ³            ³          ³seleccionada.                          ³±±
±±³Raul Ortiz  ³30/10/17    ³DMICNS-10 ³Se graba Numero de Thread en la tabla  ³±±
±±³            ³            ³          ³SD2 cuando se selecciona un documento. ³±±
±±³Raul Ortiz  ³30/10/17    ³DMICNS-475³Por serie generar una vez la pregunta y³±±
±±³            ³            ³          ³aplicar la desicion en todos los       ³±±
±±³            ³            ³          ³documentos de dicha serie.             ³±±
±±³L. Samaniego³22/11/2017  ³DMICNS-798³Se elimina la funcionalidad liberada en³±±
±±³            ³            ³          ³el issue MMI-5164. Replica del issue   ³±±
±±³            ³            ³          ³MMI-4878. México                       ³±±
±±³L. Samaniego³13/12/2017  ³DMICNS-353³Replica del issue DMICNS-133. Argentina³±±
±±³            ³            ³          ³Aplicar descuento por bonificacion.    ³±±
±±³L. Samaniego³10/01/2018  ³DMICNS-983³Replica del issue DMICNS-346. Argentina³±±
±±³            ³            ³          ³Detonar grupo de preguntas PVXARG para ³±±
±±³            ³            ³          ³factura automatica OMS - Argentina.    ³±±
±±³M.Camargo   ³19/02/2018  ³DMINA-562 ³Réplica DMINA-163/DMINA-1210 MEX       ³±±
±±³            ³            ³          ³Se modifica funcion A468TxMoed. Cuando ³±±
±±³            ³            ³          ³MV_ALTTXFT =0 se cambia el valor de la ³±±
±±³            ³            ³          ³variable nTaxamoeda:= nTxMoeda(MEX).   ³±±
±±³            ³            ³          ³Se modifica función a468nDupl para lle-³±±
±±³            ³            ³          ³nar E1_PARCELA de acuerdo a parámetro  ³±±
±±³            ³            ³          ³MV_1DUP aún cuando es una parcialidad  ³±±
±±³            ³            ³          ³diferida (MEX)                         ³±±
±±³ Marco A.   ³ 25/04/2018 ³DMINA-1521³Replica de DMINA-1215, que consiste en ³±±
±±³            ³            ³          ³solucionar suma de doble descuento al  ³±±
±±³            ³            ³          ³generar factura a partir de un pedido  ³±±
±±³            ³            ³          ³de venta. (MEX)                        ³±±
±±³LuisEnríquez³ 06/06/2018 ³DMINA-2980³Al generar facturas desde una remisión ³±±
±±³            ³            ³          ³generada desde pedido de venta con     ³±±
±±³            ³            ³          ³complemento de comercio exterior,genera³±±
±±³            ³            ³          ³la factrua con la información capturada³±±
±±³            ³            ³          ³en el pedido de venta. Esto estaba de- ³±±
±±³            ³            ³          ³limitado por la variale lPedido en las ³±±
±±³            ³            ³          ³funciones a468nGravF2 y a468nGravD2    ³±±
±±³A. Rodriguez³ 28/02/2018 ³DMINA-2279³Replica de DMINA-1632                  ³±±
±±³            ³            ³          ³Al generar facturas desde remisión por ³±±
±±³            ³            ³          ³pedido de venta, grabar D2_ITEMPV y    ³±±
±±³            ³            ³          ³D2_SEQUEN de la remisión. MEX          ³±±
±±³Oscar Garcia³ 04/07/2018 ³DMINA-3217³Se realiza localizacion para Colombia  ³±±
±±³            ³            ³          ³para los campos F2_APROFOL,F2_CERTFOL, ³±±
±±³            ³            ³          ³F3_APROFOL Y F3_CERTFOL en la funcion  ³±±
±±³            ³            ³          ³a468nGravF2                            ³±±
±±³LuisEnriquez³13/07/2018  ³DMINA-3630³Se modifican las funciones a168nGravF2,³±±
±±³            ³            ³          ³a468nDupl, a468nAdian, a468nCompAd,    ³±±
±±³            ³            ³          ³a468nP1Vlr y RegFR3, las cuales seran  ³±±
±±³            ³            ³          ³utilizadas para la funcionalidad de    ³±±
±±³            ³            ³          ³Compensacion de Anticipos a partir de  ³±±
±±³            ³            ³          ³una Guia de Remision. (PER)            ³±±
±±³MCamargo    ³23/07/2018	³DMINA-3376³Se agrega funcionalidad para PERU, al  ³±±
±±³            ³        	³          ³generar Factura, se obtiene FP_SERIE2  ³±±
±±³            ³        	³          ³y se llena campo F2_SERIE2 función     ³±±
±±³            ³        	³          ³a468nGravF2.País Peru                  ³±±
±±³  Marco A.  ³25/07/2018	³DMANSISTE-³Modificacion para el calculo correcto  ³±±
±±³            ³        	³23        ³de descuentos, al realizar una Factura ³±±
±±³            ³        	³          ³a partir de un Pedido de Venta. (MEX)  ³±±
±±³Alf. Medrano³30/07/2018	³DMINA-3630³En fun a468nGera se valida llenado de  ³±±
±±³            ³        	³          ³array aRNo verificando que exista la ta³±±
±±³            ³        	³          ³bla temporal TRB (variable lTrb)       ³±±
±±³A.Rodriguez ³08/08/18    ³DMINA-3967³Localización para grabar SF2->F2_SERIE2³±±
±±³            ³            ³          ³y SF3->F3_SERIE2 con SFP->FP_SERIE2 COL³±±
±±³Thiago Berna³06/12/2018  ³DMICNS-   ³Ajuste no ponto de entrada M468NGRV    ³±±
±±³            ³            ³4415      ³para carregar a variavel aPeds         ³±±
±±³LuisEnríquez³06/12/2018  ³DMINA-    ³Rep.DMINA-379 Se modifica a468nGravF2  ³±±
±±³            ³            ³1012      ³se asignan F2_TPACTIV=C5_TPACTIV,      ³±±
±±³            ³            ³          ³F2_ZONGEO=C5_ESTEMI y F2_EST =C5_EST,  ³±±
±±³            ³            ³          ³se llama func. SF3ZONFIS p/actualizar  ³±±
±±³            ³            ³          ³F3_ESTADO Zona Fiscal (EUA)            ³±±
±±³LuisEnríquez³15/03/2019  ³DMINA-6078³Se modifica la func. a468nGravF2 para  ³±±
±±³            ³            ³          ³guardar C5_OBSERV en F2_OBSCE. (MEX)   ³±±
±±³Verónica Flo³09/04/2019  ³DMINA-6192³Se modifica la func. a468nGravD2 para  ³±±
±±³            ³            ³          ³guardar campo D2_ITEMCC en la Fact(PER)³±±
±±³LuisEnríquez³25/04/2019  ³DMINA-6312³En func. RegFR3 se usa campo FR3_SALDO ³±±
±±³(PER        ³            ³          ³para valor de anticipo en compensación ³±±
±±³            ³            ³          ³por proceso P.V. - Resimisión, se rea- ³±±
±±³            ³            ³          ³za correccion en a468nGravD2 diferencia³±±
±±³            ³            ³          ³de centavos en F2_VALADI en proceso de ³±±
±±³            ³            ³          ³compensación anticipo por P.V. - NF.   ³±±
±±³LuisEnríquez³21/06/2019  ³DMINA-6842³Se modifica funcion a468nDupl para lle-³±±
±±³(EUA)       ³            ³          ³nar E1_PARCELA a partir de 01 consecu- ³±±
±±³            ³            ³          ³tivo cuando se generan más de 36 cuotas³±±
±±³Verónica Flo³08/07/2019  ³DMINA-6918³Creación de PE para agregar            ³±±
±±³            ³            ³          ³campos virtuales al MarkBrow   PER     ³±±
±±³A.Rodriguez ³10/07/2019  ³DMINA-6954³Actualizar folio fiscal (UUID) en      ³±±
±±³            ³            ³          ³asientos contables (CT2, CTK) después  ³±±
±±³            ³            ³          ³de timbrar las facturas generadas. MEX ³±±
±±³LuisEnríquez³05/08/2019  ³DMINA-7168³Se excluye a país Colombia en llamado  ³±±
±±³(COL)       ³            ³          ³de función de val. de FE - CFDVerific. ³±±
±±³LuisEnríquez³28/11/2019 ³DMINA-7405 ³Se activa funcionalidad para generación³±±
±±³            ³            ³          ³de liquidaciones de compra (EQU)       ³±±
±±³LuisEnríquez³04/02/2020  ³DMINA-8044³Se activa llenado de F2_UUIDREL para   ³±±
±±³            ³            ³          ³referencias adicionales y ord. de com- ³±±
±±³            ³            ³          ³pra en FE Electrónica. (COL)           ³±±
±±³LuisEnríquez³05/03/2020  ³DMINA-8233³Se realizan ajustes para funcionalidad ³±±
±±³            ³            ³          ³de descuentos por porcentaje y monto   ³±±
±±³            ³            ³          ³al generar NF desde Ped. Venta (PER)   ³±±
±±³ARodriguez  ³05/04/2020  ³DMINA-8695³a468nGravD2() corrige asignación de TES³±±
±±³            ³            ³          ³de envio, remision de consignacion. MEX³±±
±±³Oscar G.    ³15/05/2020  ³DMINA-9065³a468nImp() se localiza tratamiento de  ³±±
±±³            ³            ³          ³flete para paises diferentes de EUA.EUA³±±
±±³Jose Glez   ³18/06/2020  ³DMINA-9145³Se agrega validación para la existencia³±±
±±³            ³            ³          ³del campo SC6_CCUSTO y SC6_CC para el  ³±±
±±³            ³            ³          ³llenado del campo D2_CCUSTO            ³±±
±±³Alf. Medrano³21/09/2020  ³DMINA-9922³En Fun a468nImp se excluye asignación  ³±±
±±³            ³            ³          ³nFrete += nFreteRat  para Colombia     ³±±
±±³LuisEnríquez³09/02/2021  ³DMINA-    ³Se agrega el guardado de campo F2_TPDOC³±±
±±³            ³            ³10582     ³en la funcion a468nGravF2(). (DOM)     ³±±
±±³Eduardo Prz ³25/03/2021  ³DMINA-1150³En Fun a468nImp se excluye asignación  ³±±
±±³            ³            ³7         ³nFrete += nFreteRat  para México       ³±±
±±³Cuauhtémoc  ³2021-04-14  ³DMINA-1164³En a468nGravD2 y a468nImp se corrige   ³±±
±±³Olvera      ³            ³9         ³el uso de moneda seleccionada. (MEX)   ³±±
±±³Oscar G.    ³29/04/2021  ³DMINA-    ³Se crea fun. a468Legen() y  a487Cores()³±±
±±³            ³            ³     11869³ para mostrar  desc. de la leyenda. PER³±±
±±³Oscar G.    ³08/07/2021  ³DMINA-    ³Se añade localizacion de MEX, PER COL y³±±
±±³            ³            ³     12746³EQU para tratamiento de marca. PER     ³±±
±±³Oscar G.    ³18/08/2021  ³DMINA-    ³Se actualiza valor de F2_TOTUSD despues³±±
±±³            ³            ³     13233³de guardado en SD2. MEX                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATA468n
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nI
Local nX
Local lSdoc 		:= TamSx3("F2_SERIE")[1] == 14
Local aCores		:= {}

/*Variables para Métricas de Descuento*/
Local cIdMetDesc	:= "faturamento-protheus_configuracion-parametro-mv_descsai-por-pais-por-empresa_info"
Local cSubRutDes	:= "Contenido_MV_DESCSAI_" + cPaisLoc
Local cMVDescSai	:= AllTrim(SuperGetMV("MV_DESCSAI", .F., "1"))

PRIVATE cCamposV	:= ""
PRIVATE aParams
PRIVATE lInverte    := .F.
PRIVATE cCadastro   := OemToAnsi(STR0005)    //"Prepara‡„o da Nota Fiscal"

PRIVATE lConsig     := .F.
PRIVATE lFiltra     := .F.
PRIVATE lPedidos    := .F.
PRIVATE nSepara	 	:= 5
PRIVATE cMarca      := "  "

PRIVATE nPrecoVen   := 0

PRIVATE cNomeArq    := ""
PRIVATE aIndTRB     := {}
PRIVATE aOrd        := {}

PRIVATE cRetTitle
PRIVATE aRecnoTRB	:= {}
PRIVATE aPedido		:= {}
PRIVATE aEspVol     := {}

PRIVATE aImps       := {}

PRIVATE aHelpPor	:= {}
PRIVATE aHelpEng	:= {}
PRIVATE aHelpSpa	:= {}
PRIVATE nMoedaOrig 	:= 1
PRIVATE lReajuste 	:= .F.
PRIVATE lConvRem	:= GetNewPar("MV_CONVREM",.F.)
PRIVATE lSeqEspecie	:= GetMV("MV_SEQESPE",,.F.)
PRIVATE aTamSx3Prc 	:= TamSx3("D2_PRCVEN")
PRIVATE	aTamSx3Tot 	:= TamSx3("D2_TOTAL",.F.)
PRIVATE nTaxamoeda	:=0
PRIVATE aRotina
PRIVATE lTpPedBenf 	:= .F. // Tipo de Pedido (Beneficiamento)
PRIVATE aRemTots 	:= {}
PRIVATE aRatDesp 	:= {}
Private aNFsOrig    := {} //Array para armazenar os valores originais do array aNfs
Private cIdPV 	    := ""
Private oTmpTable
Private aOrdem1 := {}
Private aOrdem2 := {}
Private aOrdem3 := {}
Private aOrdem4 := {}
Private aOrdem5 := {}
Private aOrdem6 := {}
Private lFactApoc  := IIf(cPaisLoc == "ARG" .And. FunName() == "MATA468N", .T., .F.)
Private aProvApoc  := {}
Private aDesBon := {}
Private lAutomato := .F.
Private nLiqCom := 0
Private nFact   := 0
Private lPode  :=.T.

If cPaisloc $ "ARG|MEX|PAR|BOL|CHI|EUA"
    lAutomato := isBlind()
Endif

/*Métrica utilizada para obtener la configuración del parámetro MV_DESCSAI*/
If LibMet468n()
	FwCustomMetrics():setUniqueMetric(cSubRutDes, cIdMetDesc, cMVDescSai, /*dDateSend*/, /*nLapTime*/, /*cRotina*/)
EndIf

aPos:= {  8,  4, 11, 74 }

cRetTitle := GetDescRem()

If !a468nMakePL(@aParams)
	Return
EndIf
If (cPaisLoc == "ARG")
	If Pergunte("PVXARG",.T.)
		If (AllTrim(MV_PAR01 ) == "")
			Return
		Else
			If !F083ExtSFP(MV_PAR01, .T.)
				Return
			EndIf
			cPontoVend := MV_PAR01
			cIdPV	:= POSICIONE("CFH",1, xFilial("CFH")+cPontoVend,"CFH_IDPV")
		EndIf
	Else
		Return
	EndIf
EndIf

aRotina := { 	{ STR0001,"a468nPesq"					, 0 , 1},;				//"Pesquisar"
				{ STR0003,"a468nConsig(lPedidos)"       , 0 , 3},;				//"Selec. Parcial"
				{ STR0002,'a468nFatura("TRB",aParams)'  , 0 , 3},;				//"Faturar"
				{ STR0249,'a468Legen()'					, 0	, 3,	0,	.F.} }	//"Leyenda"

aCores := a487Cores(lPedidos)

dbSelectArea("TRB")
If Bof() .and. Eof()
	HELP(" ",1,"RECNO")
Else
	If ExistBlock("M468VPED")
		If ! ExecBlock("M468VPED",.F.,.F.)
			Return
		EndIf
	EndIf

	If ! lPedidos
		dbSelectArea("SX3")
		dbSetOrder(1)
		MsSeek( "SD2" )
		aCampos := {}
		AADD(aCampos, {"D2_OK"		," " ,""} )
		While ! Eof() .and. ( x3_arquivo == "SD2" )
			If cNivel >= X3_NIVEL .and. X3_BROWSE=="S" .And. X3_CAMPO != "D2_OK" .And. (X3_CONTEXT <> "V" .Or. Trim(X3_CAMPO) $ cCamposV)
				AADD(aCampos,{  x3_campo," ", TRIM(X3Titulo()),X3_PICTURE } )
			EndIf
			dbSkip()
		End

		dbSelectArea("TRB")
		dbSetOrder(1)
		DbGoTop()
		if !lAutomato
			MarkBrow("TRB","D2_OK",,aCampos,.F.,cMarca,;
				"Processa({| | a468nMrkAll()})",,"x468NFilial","x468NFilial","a468nMrk()",,,,aCores)
		Else
			a468nMrkAll()
			a468nFatura("TRB",aParams)
		EndIf
		For nX := 1 To Len(aRecnoTRB)
			SD2->(MsGoTo(aRecnoTRB[nX]))
			RecLock("SD2",.F.)
				Replace SD2->D2_OK 	 		With "  "
			SD2->(MsUnLock())
		Next nX
		aRecnoTRB	:=	{}
	Else
		dbSelectArea("SX3")
		dbSetOrder(1)
		MsSeek( "SC9" )
		aCampos := {}
		AADD(aCampos, {"C9_OK"		," " ,""} )
		While ! Eof() .and. ( x3_arquivo == "SC9" )
			If cNivel >= X3_NIVEL .and. X3_BROWSE=="S" .And. X3_CAMPO != "C9_OK" .And. (X3_CONTEXT <> "V" .Or. Trim(X3_CAMPO) $ cCamposV)
				AADD(aCampos,{  x3_campo," ", TRIM(X3Titulo()),X3_PICTURE } )
			EndIf
			dbSkip()
		End
		dbSelectArea("TRB")
		dbSetOrder(1)
		DbGoTop()
		if !lAutomato
			MarkBrow("TRB","C9_OK",,aCampos,.F.,cMarca,;
				"Processa({| | a468nMrkAll()})",,"x468NFilial","x468NFilial","a468nMrk()",,,,aCores)
		Else
			a468nMrkAll()
			a468nFatura("TRB",aParams)
		EndIf
		For nX := 1 To Len(aRecnoTRB)
			SC9->(MsGoTo(aRecnoTRB[nX]))
			SC9->(MsUnLock())
		Next nX

		a468LibPed()
		aRecnoTRB	:=	{}
	EndIf

	If ExistBlock("M468VFIM")
		ExecBlock("M468VFIM",.F.,.F.)
	EndIf

EndIf

dbSelectArea("SA1")
DbSetOrder(1)
If oTmpTable <> Nil
	oTmpTable:Delete()
	oTmpTable := Nil
EndIf
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ a468nMakePL ³ Autor ³ Jose Lucas         ³ Data ³ 08.05.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Endereca rotinas para geracao dos arquivos...              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a468nMakePL(aParams)
Local lRet  := .F.

If Pergunte("MTA468",.T.)
	lPedidos   := If( mv_par01==1,.T.,.F. )  // Pedidos o Remitos
	If lPedidos
		DbSelectArea("SC9")
		cMarca	:=	GetMark(,'SC9','C9_OK')
		If !Pergunte("MT468B",.T.)
			Return .F.
		EndIf
	  /*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Variaveis utilizadas para parametros ³
		ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
		³ mv_par01 -> Do Pedido          ?     ³
		³ mv_par02 -> Ate Pedido         ?     ³
		³ mv_par03 -> Do Cliente         ?     ³
		³ mv_par04 -> Ate Cliente        ?     ³
		³ mv_par05 -> Da Filial          ?     ³
		³ mv_par06 -> Ate Filial         ?     ³
		³ mv_par07 -> Do Grupo           ?     ³
		³ mv_par08 -> Ate Grupo          ?     ³
		³ mv_par09 -> Do Agregador       ?     ³
		³ mv_par10 -> Ate Agregador      ?     ³
		³ mv_par11 -> Mostra Lan‡.Contab ?     ³
		³ mv_par12 -> Aglut. Lan‡amentos ?     ³
		³ mv_par13 -> Lan‡.Contab.On-Line?     ³
		³ mv_par14 -> Trazer Pedidos Marc?     ³
		³ mv_par15 -> Atualiza Vinculo   ?     ³
		³ mv_par16 -> Aglutina Por       ?     ³
		³ mv_par17 -> Valor Minimo       ?     ³
		³ mv_par18 -> Fatura Pro-Forma   ?     ³
		³ mv_par19 -> Transportadora De  ?     ³
		³ mv_par20 -> Transportadora Ate ?     ³
		³ mv_par21 -> Reajusta na mesma nota ? ³
		³ mv_par22 -> Fatura Pedido pela ?     ³
		³ mv_par23 -> Fatura pela Moeda  ?     ³
		³ mv_par24 -> Contabiliza por ?        ³
		³ mv_par25 -> Tipo Pedido ?            ³
		³ 				1 - Normal             ³
		³ 				2 - Beneficiamento     ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

		aParams	:=	{	mv_par01,mv_par02,; 			//Pedido de - ate
						mv_par03,mv_par04,; 			//Cliente de - ate
						mv_par05,mv_par06,; 			//Loja de - ate
						mv_par07,mv_par08,; 			//Grupo de - ate
						mv_par09,mv_par10,; 			//Agregador de - ate
						mv_par11,mv_par12,mv_par13,; 	//lDigita # lAglutina # lGeraLanc
						mv_par14,mv_par15,mv_par16,; 	//lInverte# lAtuaSA7  # nSepara
						mv_par17,mv_par18,; 			//nValorMin# lAtuaSC7
						mv_par19,mv_par20,;				//Trasnportadora de - ate
						mv_par21,mv_par22,;				//Reajusta na mesma nota  # Fatura Ped. Pela
						mv_par23,mv_par24,; 			//Moeda para Faturamento
						mv_par25,If(cPaisLoc=="PTG",mv_par26,"")} //Tipo de Pedido # Diário Portugal
		lTpPedBenf := ( mv_par25 = 2 ) // Beneficiamento
		If  aParams[22] ==2 .and. Recmoeda(dDatabase,aParams[23])<=0
			MsgAlert(OemToAnsi(STR0170))  //"Nao Existe taxa para a Moeda Selecionada"
			Return .F.
		EndIf
		Processa({|lEnd| lRet:= a468nPrcC9(aParams)},,OemToAnsi(STR0095))
	Else
		If !Pergunte("MT468A",.T.)
			Return .F.
		EndIf

		If cPaisLoc $ "ARG|URU|CHI|BOL|MEX|PER|COL|EQU"
			cMarca := substr(cValToChar(ThreadID()),len(cValToChar(ThreadID()))-1,2)
		Else
			DbSelectArea("SD2")
			cMarca	:=	GetMark(,'SD2','D2_OK')
		EndIF
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Variaveis utilizadas para parametros ³
		ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
		³ mv_par01 -> Do Remito          ?     ³
		³ mv_par02 -> Ate Remito         ?     ³
		³ mv_par03 -> Do Cliente         ?     ³
		³ mv_par04 -> Ate Cliente        ?     ³
		³ mv_par05 -> Da Filial          ?     ³
		³ mv_par06 -> Ate Filial         ?     ³
		³ mv_par07 -> Do Grupo           ?     ³
		³ mv_par08 -> Ate Grupo          ?     ³
		³ mv_par09 -> Do Agregador       ?     ³
		³ mv_par10 -> Ate Agregador      ?     ³
		³ mv_par11 -> Mostra Lan‡.Contab ?     ³
		³ mv_par12 -> Aglut. Lan‡amentos ?     ³
		³ mv_par13 -> Lan‡.Contab.On-Line?     ³
		³ mv_par14 -> Trazer remitos Marc?     ³
		³ mv_par15 -> Atualiza Vinculo   ?     ³
		³ mv_par16 -> Aglutina Por       ?     ³
		³ mv_par17 -> Valor Minimo       ?     ³
		³ mv_par18 -> Venda em Consigna. ?     ³
		³ mv_par19 -> Transportadora De  ?     ³
		³ mv_par20 -> Transportadora Ate ?     ³
		³ mv_par21 -> Reaj. na mesma N.F. ?    ³
		³ mv_par22 -> Fatura Remision pela ?   ³
		³ mv_par23 -> Fatura pela Moeda  ?     ³
		³ mv_par24 -> Fatura pela Moeda  ?     ³
		³ mv_par25 -> Tipo Remito ?            ³
		³ 				1 - Normal             ³
		³ 				2 - Beneficiamento     ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/
		aParams	:=	{	mv_par01,mv_par02,;				//Remito de - ate
						mv_par03,mv_par04,; 			//Cliente de - ate
						mv_par05,mv_par06,; 			//Loja de - ate
						mv_par07,mv_par08,; 			//Grupo de - ate
						mv_par09,mv_par10,; 			//Agregador de - ate
						mv_par11,mv_par12,mv_par13,; 	//lDigita # lAglutina # lGeraLanc
						mv_par14,mv_par15,mv_par16,; 	//lInverte# lAtuaSA7  # nSepara
						mv_par17,mv_par18,; 			//nValorMin# # lConsig
						mv_par19,mv_par20,; 			//Transportadora de - ate
						mv_par21,mv_par22,;				//Reajusta na mesma nota  # Fatura pela Moeda
						mv_par23,mv_par24,; 			//Selecione moeda para faturamento
						mv_par25,If(cPaisLoc=="PTG",mv_par26,"")} //Tipo de Pedido # Diário Portugal
			lTpPedBenf := ( mv_par25 = 2 ) // Beneficiamento
		If  aParams[22] ==2 .and. Recmoeda(dDatabase,aParams[23])<=0
			MsgAlert(OemToAnsi(STR0170))
			Return .F.
		EndIf
		Processa({|lEnd| lRet:= a468nPrcD2(aParams)},,OemToAnsi(STR0134)+cRetTitle+OemToAnsi(STR0133)) //"Preparando +cRetTitle+ "s(es)"
	EndIf
EndIf
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ a468nProcC9 ³ Autor ³ Jose Lucas         ³ Data ³ 08.05.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Endereca rotinas para geracao dos arquivos...              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a468nPrcC9(aParams)
Local lOk		:= .T.
Local lGeraNF	:= .T.
Local nOpca		:= 0
Local nI		:= 0, nJ:= 0
Local aStruTRB	:= {}
Local aCamposTRB:= {}
Local aCpoQuery	:= {}
Local aAreaTrb	:= {}
Local nPosCpo	:= 0
Local lQuery	:=	.F.
Local cChave	:=	""
Local c468nCond := ""
Local lM468PED	:= ExistBlock('M468PED')
Local aCamposPE	:= {}
Local aCamposV	:= {}

//Busqueda para verificar si existe título provisional dado de baja.
//En caso de que exista, no permite seguir con la generación de la Factura
IF cPaisLoc == "EUA" .And. FindFunction("MATA475CHK")
	If !MATA475CHK(aParams)
		Return .F.
	EndIf
EndIf

lReajuste := (aParams[21]==1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Preparar arquivo TRB com dados a serem visualizados e selecionados pela   ³
//³ MarkBrowse, evitando  os  filtros na Indregua que tem se tornado lenta.   ³
//³ Geracao a partir do arquivo SC9 - Pedidos Liberados.                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lInverte	:=	(aParams[14] == 1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Criar os indices para o TRB quando faturar por Pedidos...        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aIndTRB  := {}
aOrdem1 := {"C9_FILIAL","C9_PEDIDO","C9_ITEM"}
aOrdem2 := {"C9_FILIAL","C9_CLIENTE","C9_LOJA","C9_GRUPO","C9_PEDIDO"}
aOrdem3 := {"C9_FILIAL","C9_CLIENTE","C9_LOJA","C9_AGREG"}
aOrdem4 := {"C9_FILIAL","C9_OK","C9_CLIENTE","C9_LOJA","C9_PRODUTO"}
aOrdem5 := {"C9_FILIAL","C9_PEDIDO","C9_ITEM","C9_SEQUEN","C9_PRODUTO"}
aOrdem6 := {"C9_FILIAL","C9_OK","C9_CLIENTE","C9_LOJA","C9_PEDIDO","C9_ITEM"}

aOrd := {	STR0113,;    // Pedido+Item
			STR0114,;    // Cliente+Loja+Grupo+Pedido,;
			STR0115}

If lM468PED
	// PE para configurar campos virtuales a mostrar en el browse principal de los pedidos
	If Valtype(aCamposPE := ExecBlock("M468PED",.F.,.F.)) == "A"
		cCamposV := SX3Virtual(aCamposPE, aCamposV)
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Controlar o Total de Registros para utilizar na ProcRegua...         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If TcSrvType() != "AS/400"
	lQuery	:=	.T.
	If Select("TRB") <> 0
		dbSelectArea("TRB")
		dbCloseArea()
	EndIf
	//Ponto de entrada cujo retorno eh usado no filtro da query
	If ExistBlock("M468MKB")
		c468nCond := ExecBlock("M468MKB", .F., .F.,{"Q"})
	EndIf

	dbSelectArea("SC9")
	aStruTRB := dbStruct()

	cQuery := "SELECT  "

	For nI:=1 To Len(aStruTRB)
		cQuery += aStruTRB[nI][1]+","
	Next nI

	Aadd(aStruTRB,{"RECNO","N",10,0})

	If Valtype(aCamposV) == "A" .And. Len(aCamposV) > 0
		For nj := 1 To Len(aCamposV)
			aAdd(aStruTRB , {aCamposV[nj,1], aCamposV[nj,2], aCamposV[nj,3], aCamposV[nj,4]})
		Next
	EndIf

	//Creacion de Objeto
	oTmpTable := FWTemporaryTable():New("TRB")
	oTmpTable:SetFields( aStruTRB )

	oTmpTable:AddIndex("I1", aOrdem1)
	oTmpTable:AddIndex("I2", aOrdem2)
	oTmpTable:AddIndex("I3", aOrdem3)
	oTmpTable:AddIndex("I4", aOrdem4)
	oTmpTable:AddIndex("I5", aOrdem5)
	oTmpTable:AddIndex("I6", aOrdem6)

	//Creacion de la tabla
	oTmpTable:Create()

	cQuery += " SC9.R_E_C_N_O_ RECNO "
	cQuery += "	FROM "+	RetSqlName("SC9") + " SC9, "+ RetSqlName("SC6") + " SC6 ,"+ RetSqlName("SC5") + " SC5 ,"
	If lTpPedBenf
		cQuery += RetSqlName("SA2") + " SA2 "
	Else
		cQuery += RetSqlName("SA1") + " SA1 "
	Endif
	cQuery += "  WHERE SC9.C9_FILIAL='"+xFilial("SC9")+"'"
	cQuery += "   AND  SC9.C9_PEDIDO BETWEEN '"+aParams[01]+"' And '"+aParams[02]+"'"
	cQuery += "	  AND  SC9.C9_CLIENTE BETWEEN '"+aParams[03]+"' AND '"+aParams[04]+"'"
	cQuery += "	  AND  SC9.C9_LOJA BETWEEN '"+aParams[05]+"' AND '"+aParams[06]+"'"
	cQuery += "	  AND  SC9.C9_GRUPO BETWEEN '"+aParams[07]+"' AND '"+aParams[08]+"'"
	cQuery += "	  AND  SC9.C9_AGREG BETWEEN '"+aParams[09]+"' AND '"+aParams[10]+"'"
	cQuery += "   AND  SC6.C6_FILIAL='"+xFilial("SC6")+"'"
	cQuery += "   AND  SC9.C9_PEDIDO = SC6.C6_NUM"
	cQuery += "   AND  SC9.C9_ITEM = SC6.C6_ITEM"
	cQuery += "   AND  SC9.C9_PRODUTO = SC6.C6_PRODUTO"
	cQuery += "   AND  SC5.C5_FILIAL='"+xFilial("SC5")+"'"
	If lTpPedBenf
		cQuery += "   AND  SA2.A2_FILIAL='"+xFilial("SA2")+"'"
	Else
		cQuery += "   AND  SA1.A1_FILIAL='"+xFilial("SA1")+"'"
	Endif
	cQuery += "   AND  SC9.C9_PEDIDO = SC5.C5_NUM"
	cQuery += "   AND  SC9.C9_DATALIB <= '"+Dtos(dDataBase)+"'"
	cQuery += "	  AND  SC5.C5_TRANSP BETWEEN '"+aParams[19]+"' AND '"+aParams[20]+"'"
	cQuery += "   AND  SC9.C9_NFISCAL = '" +Space(Len(SC9->C9_NFISCAL))+"'"
	cQuery += "   AND  SC9.C9_BLEST ='"		+Space(Len(SC9->C9_BLEST))+"'"
	cQuery += "   AND  SC9.C9_BLCRED = '"	+Space(Len(SC9->C9_BLCRED))+"'"
	cQuery += "   AND  SC9.C9_REMITO = '"	+Space(Len(SC9->C9_REMITO))+"'"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o pedido nao eh um pedido para gerar exclusivamente REMITOS³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cQuery += "   AND  SC5.C5_DOCGER <> '2' "
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Nao factura as Proformas.                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If aParams[18] == 2
		cQuery	+=	" AND SC5.C5_NUMPROF = '"+Space(Len(SC5->C5_NUMPROF))+ "'"
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o pedido esta amarrado a uma CARGA-(Integracao OMS)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cQuery   += " AND C9_CARGA = '"+Space(Len(SC9->C9_CARGA))+"'"

	If lTpPedBenf
		cQuery += " AND SC9.C9_CLIENTE = SA2.A2_COD "
		cQuery += " AND SC9.C9_LOJA    = SA2.A2_LOJA "
	Else
		cQuery += " AND SC9.C9_CLIENTE = SA1.A1_COD "
		cQuery += " AND SC9.C9_LOJA    = SA1.A1_LOJA "
	Endif

	cQuery += "   AND  SC9.C9_FILIAL='"+xFilial("SC9")+"'"

	cQuery += "   AND  SC6.C6_GERANF <> 'N'"

	cQuery += "   AND  SC9.D_E_L_E_T_ <> '*' "
	cQuery += "   AND  SC6.D_E_L_E_T_ <> '*' "
	cQuery += "   AND  SC5.D_E_L_E_T_ <> '*' "
	If lTpPedBenf
		cQuery += " AND  SA2.D_E_L_E_T_ <> '*' "
	Else
		cQuery += " AND  SA1.D_E_L_E_T_ <> '*' "
	Endif

	If !Empty(c468nCond)
		cQuery += c468nCond
	EndIf

	MsAguarde({|| Sql2Trb(cQuery, aStruTRB, 'TRB', aCamposV, cCamposV)},OemToAnsi(STR0005))  //"Preparacao da Nota Fiscal"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Marcar todos os registros que possam ser lockados se foi escolhida³
	//³a opcao de "Trazer pedidos marcados".                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lInverte
		DbSelectArea("TRB")
		DbGoTop()
		While !EOF()
			DbSelectArea("SC9")
			MsGoTo(TRB->RECNO)
			If RecLock("SC9",.F.)
				//Preencher array aPedido para os casos em que deseja trazer pedidos
				//marcados
				If Ascan(aPedido,TRB->C9_PEDIDO) == 0
					aAreaTrb := GetArea()
					DbSelectArea("SC5")
					DbSetOrder(1)
					Dbseek(xFilial("SC5")+ TRB->C9_PEDIDO )
					//Travar registro no SC5 para que o pedido nao possa ser alterado
					If RecLock("SC5",.F.)
						lGeraNF:= .T.
						Aadd(aPedido,TRB->C9_PEDIDO)
					Else
						lGeraNF:=.F.
					EndIf
					RestArea(aAreaTrb)
				Else
					Aadd(aPedido,TRB->C9_PEDIDO)
					lGeraNF:= .T.
				EndIf
				If lGeraNF
					AAdd(aRecnoTRB,SC9->(Recno()))
					Replace C9_OK    WITH cMarca
					RecLock("TRB",.F.)
					Replace C9_OK    WITH cMarca
					MsUnLock()
				EndIf
			Endif
			DbSelectArea("TRB")
			DbSkip()
		Enddo
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a existencia de registros em TRB.                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("TRB")
DbSetOrder(2)
DbGoTop()
If BOF() .and. EOF()
	//Help(" ",1,"RECNO")
	cMsg := OemToAnsi(STR0080)  //"Nao ha Pedidos Liberados disponiveis para geracao..."
	MsgStop( cMsg )
	Return .F.
EndIf
Return( .T. )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ a468nPrcD2 ³ Autor ³ Bruno Sobieski      ³ Data ³ 24.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Endereca rotinas para geracao dos arquivos...              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a468nPrcD2(aParams)
Local lOk		:= .T.
Local nOpca		:= 0
Local nI		:= 0, nJ:= 0
Local aStruTRB  := {}
Local aCamposTRB:= {}
Local aCpoQuery := {}
Local nPosCpo   := 0
Local lQuery	:=	.F.
Local nPrcVen	:= 0
Local cTipoRem	:=	""
Local nMoedaRem := 1
Local nTaxa     := 0
Local c468nCond := ""
Local cSelect   := ""
Local cCondSD2  := ""
Local lPrcZero  := .F.
Local aAreaD2	  := {}
Local lM468REM	:= ExistBlock('M468REM')
Local aCamposPE	:= {}
Local aCamposV	:= {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Preparar arquivo TRB com dados a serem visualizados e selecionados pela   ³
//³ MarkBrowse, evitando  os  filtros na Indregua que tem se tornado lenta.   ³
//³ Geracao a partir do arquivo SD2 - Remito de Vendas.                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄLUCASÄ09/05/99Ù
lReajuste 	:=	(aParams[21] == 1)
lInverte	:=	(aParams[14] == 1)
lConsig		:=	(aParams[18] == 1)
aIndTRB 	:=	{}

aOrdem1 := {"D2_FILIAL","D2_DOC"}
aOrdem2 := {"D2_FILIAL","D2_CLIENTE","D2_LOJA","D2_GRUPO","D2_DOC"}
aOrdem3 := {"D2_FILIAL","D2_CLIENTE","D2_LOJA","D2_AGREG"}
aOrdem4 := {"D2_FILIAL","D2_OK","D2_CLIENTE","D2_LOJA","D2_COD"}
aOrdem5 := {"D2_FILIAL","D2_DOC","D2_ITEM","D2_SEQUEN","D2_COD"}
aOrdem6 := {"D2_FILIAL","D2_OK","D2_CLIENTE","D2_LOJA","D2_DOC","D2_ITEM"}

aOrd := { STR0117,;    // Remito+Item
	STR0118,;    // Cliente+Loja+Grupo+Remito,;
	STR0119}    // Cliente+Loja+Agregador,;

If lM468REM
	// PE para configurar campos virtuales a mostrar en el browse principal de las remisiones
	If Valtype(aCamposPE := ExecBlock("M468REM",.F.,.F.)) == "A"
		cCamposV := SX3Virtual(aCamposPE, aCamposV)
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Controlar o Total de Registros para utilizar na ProcRegua...              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄLUCASÄ09/05/99Ù
#IFDEF  TOP
	If TcSrvType() != "AS/400"
		lQuery	:=	.T.
		If Select("TRB") <> 0
			dbSelectArea("TRB")
			dbCloseArea()
		EndIf

		//Ponto de entrada cujo retorno eh usado no filtro da query
		If ExistBlock("M468MKB")
	       c468nCond := ExecBlock("M468MKB", .F., .F.,{"Q"})
        EndIf

		dbSelectArea("SD2")
		aStruTRB := dbStruct()

		cQuery := "SELECT  "

		For nI:=1 To Len(aStruTRB)
			If Alltrim(aStruTRB[nI][1]) <> 'D2_QTDAFAT'
				cQuery += aStruTRB[nI][1]+","
			Endif
		Next nI

		Aadd(aStruTRB,{"RECNO","N",10,0})

		If Valtype(aCamposV) == "A" .And. Len(aCamposV) > 0
			For nj := 1 To Len(aCamposV)
				aAdd(aStruTRB , {aCamposV[nj,1], aCamposV[nj,2], aCamposV[nj,3], aCamposV[nj,4]})
			Next
		EndIf

		//Creacion de Objeto
		oTmpTable := FWTemporaryTable():New("TRB")
		oTmpTable:SetFields( aStruTRB )

		oTmpTable:AddIndex("I1", aOrdem1)
		oTmpTable:AddIndex("I2", aOrdem2)
		oTmpTable:AddIndex("I3", aOrdem3)
		oTmpTable:AddIndex("I4", aOrdem4)
		oTmpTable:AddIndex("I5", aOrdem5)
		oTmpTable:AddIndex("I6", aOrdem6)

		//Creacion de la tabla
		oTmpTable:Create()

		cQuery += " SD2.D2_QUANT-(SD2.D2_QTDEFAT+SD2.D2_QTDEDEV) D2_QTDAFAT, SD2.R_E_C_N_O_ RECNO "
		cSelect := cQuery
		cQuery += " FROM " + RetSqlName("SD2") + " SD2, "+RetSqlName("SA1") + " SA1, "+ RetSqlName("SC5") + " SC5 "
		//FILTRO SD2
		cCondSD2 := " WHERE SD2.D2_DOC BETWEEN '"+aParams[01]+"' AND '"+aParams[02]+"'"
		cCondSD2 += "   AND  SD2.D2_FILIAL ='"+xFilial("SD2")+"'"
		cCondSD2 += "   AND  SD2.D2_CLIENTE BETWEEN '"+aParams[03]+"' AND '"+aParams[04]+"'"
		cCondSD2 += "   AND  SD2.D2_LOJA BETWEEN '"+aParams[05]+"' AND '"+aParams[06]+"'"
		cCondSD2 += "   AND  SD2.D2_GRUPO BETWEEN '"+aParams[07]+"' AND '"+aParams[08]+"'"
		cCondSD2 += "   AND  SD2.D2_EMISSAO <= '"+Dtos(dDataBase)+"'"
		cCondSD2 += "   AND  SD2.D2_GERANF = 'S'"
		If lConsig
			cCondSD2 += " AND SD2.D2_TIPOREM IN ('1','"+_RMCONS+"') "
		Else
			cCondSD2 += " AND SD2.D2_TIPOREM IN (' ','0') "
		EndIf
		cCondSD2 += "   AND  SD2.D2_AGREG BETWEEN '"+aParams[09]+"' AND '"+aParams[10]+"'"
		cCondSD2 += "   AND  SD2.D2_QUANT > SD2.D2_QTDEFAT+SD2.D2_QTDEDEV"
		cCondSD2 += "   AND  SD2.D_E_L_E_T_ <> '*' "
        //FILTRO SA1
		cCondSD2 += "   AND  SD2.D2_CLIENTE= SA1.A1_COD "
		cCondSD2 += "   AND  SD2.D2_LOJA   = SA1.A1_LOJA "
		cCondSD2 += "   AND  SA1.A1_FILIAL ='"+xFilial("SA1")+"'"
		cCondSD2 += "   AND  SA1.D_E_L_E_T_ <> '*' "
		If !Empty(c468nCond)
		   cCondSD2 += c468nCond
		EndIf
		//FILTRO SC5
		cQuery += cCondSD2
		cQuery += "   AND  SD2.D2_PEDIDO = SC5.C5_NUM "
		cQuery += "   AND  SC5.C5_FILIAL ='"+xFilial("SC5")+"'"
		cQuery += "	  AND  SC5.C5_TRANSP BETWEEN '"+aParams[19]+"' AND '"+aParams[20]+"'"
		cQuery += "   AND  SC5.D_E_L_E_T_ <> '*'  "

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³UNION para remisiones sem pedidos³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cQuery += "UNION ALL "
		cQuery += cSelect
		cQuery += " FROM " + RetSqlName("SD2") + " SD2, "+RetSqlName("SA1") + " SA1 "
		cQuery += cCondSD2
		cQuery += "   AND  SD2.D2_PEDIDO = ''"

		MsAguarde({|| Sql2Trb(cQuery, aStruTRB, 'TRB', aCamposV, cCamposV)},OemToAnsi(STR0005))  //"Preparacao da Nota Fiscal"

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualizar campo D2_PRCVEN, para compatibizar rotinas...																						         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SB1->( dbSetOrder(1) )
		If lTpPedBenf
			SA2->( dbSetOrder(1) )
		Else
			SA1->( dbSetOrder(1) )
		Endif
		SC9->( dbSetOrder(1) )
		DbGoTop()

		While !Eof()

			SB1->( MsSeek(xFilial("SB1")+TRB->D2_COD) )
			If lTpPedBenf
				SA2->( MsSeek(xFilial("SA2")+TRB->D2_CLIENTE+TRB->D2_LOJA) )
			Else
				SA1->( MsSeek(xFilial("SA1")+TRB->D2_CLIENTE+TRB->D2_LOJA) )
			Endif
			SC9->( MsSeek(xFilial("SC9")+TRB->D2_PEDIDO+TRB->D2_ITEMPV) )

			DbSelectArea("SD2")
			MsGoTo(TRB->RECNO)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Marcar todos os registros que possam ser lockados se foi escolhida³
			//³a opcao de "Trazer remitos marcados".                             ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lInverte .And. RecLock("SD2",.F.) .And. If(!lTpPedBenf,!Empty (SA1->A1_COND),!Empty (SA2->A2_COND))
			   If  TRB->D2_PRCVEN > 0
			   		aAreaD2 := SD2->(GetArea())
					DbselectArea("SD2")
					DbsetOrder(RETORDEM("SD2","D2_FILIAL+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA+D2_COD+D2_ITEM"))
					If SD2->(Dbseek(xFilial("SD2")+TRB->D2_DOC+TRB->D2_SERIE+TRB->D2_CLIENTE+TRB->D2_LOJA+TRB->D2_COD+TRB->D2_ITEM )) .AND. Empty(SD2->D2_OK)

						AAdd(aRecnoTRB,SD2->(Recno()))
	   	 				RecLock("SD2",.F.)
		   	 			Replace SD2->D2_OK    WITH cMarca
		              MsUnLock()

						DbSelectArea("TRB")
						RecLock("TRB",.F.)
						Replace D2_OK    WITH cMarca
						MsUnLock()
					Endif
					RestArea(aAreaD2)
				Else
					lPrcZero := .T.
				Endif
			Endif
			dbSelectArea("TRB")
			dbSkip()
		Enddo
	EndIf
#ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a existencia de registros em TRB.                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("TRB")
DbSetOrder(1)
DbGoTop()
If Bof() .and. Eof()
	//"No existe " + cRetTitle + " disponibles para Facturacion..."
	cMsg := OemToAnsi(STR0135)+cRetTitle+OemToAnsi(STR0136)
	MsgStop( cMsg )
	Return .F.
EndIf

If lPrcZero .and. lInverte
   // "Existem remitos com preco de venda igual a zero. Estes nao serao marcados para faturamento."
   cMsg := OemToAnsi(STR0201)
   MsgAlert( cMsg )
Endif

Return( .T. )


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ a468nFatura ³ Autor ³ Jose Lucas         ³ Data ³ 09/05/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Generacion de Faturas...                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATa468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nFatura(cAlias,aParams,aRecs,cCamposQueb,lCarga,lAuto,aNotas,lMT310,c310Ser,c310Num)
Local lRet     :=.F.
Local lLimMax  :=.F.
Local bVend    := { |x| "C5_VEND"+Str(x,1) },bComis := {|x| "C5_COMIS"+Str(x,1) }
Local nOpcA    := 0
Local aNFs     := {}
Local dDataFec := If(FindFunction("MVUlmes"),MVUlmes(),GetMV("MV_ULMES"))
Local aGerado  := {}
Local cMsgCFD  := ""
Local nl460PBRUTO
Local nl460PLIQUI
Local nA,nX,nF
Local oProcess
Local oDlg
// Isaac Silva 30/12/09
Local nQtdeFat   :=  1  // Qtde de fatura para ser gerada
Local lProcArg   := .F. // se é processo da Argentina para gerar varias faturas
Local lSdoc 		:= TamSx3("F2_SERIE")[1] == 14
Local xJ := 0
Local nB := 0
Local nDesBon := 0
Local nTotDesBon := 0
Local aFacs := {}
//
Default lCarga	:=	.F.
Default lAuto	:=	.F.
Default aNotas  := {}
Default lMT310  := .F.
Default c310Ser := ''
Default c310Num := ''

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Uso para comprovantes fiscais digitais³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aGerarCFD := {}
Private lGerarCFD := .F.
Private aDocElet  := {}
Private nLenNFS   := 0
Private _nTotOper_:= 0
Private _aTotOper_:= {}
Private _aValItem_:= {}
PRIVATE cCodDiario := CtbaVerdia()
If cPaisloc == "RUS"
	Private dDTSaida	:= dDatabase
EndIf
If cPaisLoc == "ARG" .And. Type("cPV410") <> "U"
	If !Empty(cPV410)
		cPontoVend := cPV410
	EndIf
EndIf

If Type("lMSAuto") == "U"
	Private lMSAuto	:=	.F.
Endif

If isBlind() .AND.  cPaisloc $ "ARG|MEX|PAR|BOL|CHI|EUA"
	Private lMSAuto	:=	.T.
Endif

lReajuste 	:= IIf( Type("lReajuste" )=="U",aParams[21]==1,lReajuste)
lConvRem 	:= IIf( Type("lConvRem"  )=="U",GetNewPar("MV_CONVREM",.F.),lConvRem)
aTamSx3Prc 	:= IIf( Type("aTamSx3Prc")=="U",TamSx3("D2_PRCVEN"),aTamSx3Prc)
aTamSx3Tot 	:= IIf( Type("aTamSx3Tot")=="U",TamSx3("D2_TOTAL",.F.),aTamSx3Tot)
nMoedaOrig 	:= IIf( Type("nMoedaOrig")=="U",1,nMoedaOrig)
nTaxamoeda 	:= IIf( Type("nTaxamoeda")=="U",0,nTaxamoeda)

If cAlias == 'SC9'
	lPedidos	:=	.T.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ VerIfica data do ultimo fechamento em SX6 e nao permite fa-  ³
//³ turamento anterior a mesma.                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If dDataFec >= dDataBase
	Help ( " ", 1, "FECHTO" )
	Return .T.
EndIf

If !FisChkDt(dDataBase)
	Return .T.
EndIf

dbSelectArea("SF2")
dbSetOrder(4)
if !lSdoc
	MsSeek(xFilial("SF2")+"ZZZ",.T.)
else
	MsSeek(xFilial("SF2")+"ZZZZZZZZZZZZZZ",.T.)
endif
If !(SF2->F2_FILIAL == xFilial("SF2"))
	dbSkip(-1)
EndIf
If dDataBase < SF2->F2_EMISSAO .And. Substr(cAcesso,51,1) != "S"
	Help(" ",1,"DATNF")
	Return .T.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Pontos de Entrada   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistTemplate("M460MARK").AND. !IsInCallStack("MATA410") .AND. !IsInCallStack("MATA460B")
	If !ExecTemplate("M460MARK",.f.,.f.,{cMarca,lInverte})
		Return .f.
	EndIf
EndIf

If ExistBlock("M460MARK") .AND. !IsInCallStack("MATA410") .AND. !IsInCallStack("MATA460B")
	If !ExecBlock("M460MARK",.f.,.f.,{cMarca,lInverte})
		Return .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Para cadastramento de C.Custo nos lancamentos Contabeis      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE INCLUI    := .T.,nRetDesc:=0
PRIVATE cNumero   := CriaVar("F2_DOC")
PRIVATE cSerie    := "   "
If cPaisloc == "RUS"
	PRIVATE aDTSaida   := {}
EndIf
PRIVATE nValICM   := 0, nTotIcmRet:=0, nBTotIcmRet:=0
PRIVATE nValIPI   := 0, nValMerc:=0, nItemNF:=1, nBaseDup:=0
PRIVATE aVend     := {}, cArquivo, lLancPad10 := lLancPad20 := .F.
PRIVATE nHdlPrv   := 1, cLoteFat:=""
PRIVATE lZFranca  := .F., nRegx5:=0, nAcresFin:= nDIf:= nTotal:= nAcresTot := 0
PRIVATE aFixos    := MatxAfixos()
PRIVATE lLibGrupo := Iif(GetMV("MV_LIBGRUP")=="S",.T.,.F.)
PRIVATE nTotDesc  := 0
PRIVATE nTotInden := 0
PRIVATE aExcecao  := {0,0,0," "," "," ","N",0}
PRIVATE nValFun   := 0
PRIVATE nValorMin := 0.00
PRIVATE nTotDesBo := 0 //Descuento por bonificación

PRIVATE lFim,vNumero,nIcmAuto:=0
PRIVATE cNFiscal := CriaVar("F2_DOC")
PRIVATE cTipo    := CriaVar("F2_TIPO")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis para utilizacao do Calculo do Roteiro de Impostos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

PRIVATE cAltTx   := GetNewPar("MV_ALTTXFT","0")
PRIVATE nC	     :=	Moedfin()
PRIVATE aTxMoedas:={}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis para utilizacao na escolha da moeda ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

PRIVATE nTipoGer := aParams[22]
PRIVATE nMoedSel := aParams[23]

If Alltrim(cAltTx)="2"
	aAdd(aTxMoedas,{"",1,PesqPict("SM2","M2_MOEDA1")})
	For nA	:=	2	To nC
		cMoedaTx	:=	Str(nA,Iif(nA <= 9,1,2))
		If !Empty(GetMv("MV_MOEDA"+cMoedaTx))
			Aadd(aTxMoedas,{GetMv("MV_MOEDA"+cMoedaTx),RecMoeda(dDataBase,nA),PesqPict("SM2","M2_MOEDA"+cMoedaTx) })
		Else
			Exit
		EndIf
	Next
EndIf
PRIVATE nLenMoedas	:= Len(aTxMoedas)
PRIVATE aImpVarSF2  := {}
PRIVATE aImpVarSD2  := Iif(cPaisLoc<>"PTG",{0,0,0,0,0,{},"",""},{0,0,0,0,0,{},"",0,0,0,0})
PRIVATE aImpVarDup  := {}
PRIVATE nTotBaseImp := 0
PRIVATE cEspecie 	:= MVNOTAFIS
PRIVATE lAtuaSA7	:=	.F.
PRIVATE lDigita,lAglutina,lGeralanc

If type("cLocxNFPV") == "U"
	Private cLocxNFPV := ""
EndIf

cTipo     := "N"
lDigita   := (aParams[11]==1)
lAglutina := (aParams[12]==1)
lGeraLanc := (aParams[13]==1)
lAtuaSA7  := (aParams[15]==1)
If cPaisLoc == "PTG"
    nSepara	  := 5
Else
	nSepara	  := aParams[16]
EndIf
nValorMin := aParams[17]

PRIVATE cTabVista := GETMV("mv_tabvist"),lPoder3
PRIVATE nDuplIf   := 1
PRIVATE nPMP      := 0, nTxIdeal:=0, nD2Acres:=0, nBaseOri := 0, nD2AcVal :=0
PRIVATE cCond     := "   "
If cPaisLoc == "GUA"
   PRIVATE cNumResol := Space(TamSX3("FQ_RESOLUC")[1])
EndIf
PRIVATE aTotaFat := {}
Private nVlrAdiant := 0
Private nVlrD2ANT  := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Geracao de faturas eletronicas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lGerarCFD := .F.
aGerarCFD := {}
If FindFunction("CFDVerific") .AND. !(cPaisLoc $ "PTG|ANG|COL")
	aGerarCFD := CFDVerific()
Else
	aGerarCFD := {"0"}
Endif
If aGerarCFD[1] <> "0"
	If Empty(aGerarCFD[2])
		lGerarCFD := .T.
	Else
		cMsgCFD := ""
		For nF := 1 To Len(aGerarCFD[2])
			cMsgCFD += aGerarCFD[2][nF][2] + CRLF
		Next
		MsgAlert(cMsgCFD,STR0186)   //"Comprovantes Fiscais Digitais"
	Endif
Else
	lGerarCFD := .F.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Para Argentina numeracao ser  autom tica baseando se no tipo ³
//³ do Cliente.                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nOpcA := 2
If !lMSAuto
	If nLenMoedas > 1
		Define MSDIALOG oDlg From 200,0 TO 362,230 TITLE OemToAnsi(STR0112) PIXEL
		@ 005,005  To 062,110 OF oDlg PIXEL
		@ 012,010 SAY  aTxMoedas[2][1]  Of oDlg PIXEL
		@ 010,060 MSGET aTxMoedas[2][2] PICTURE aTxMoedas[1][3] Of oDlg PIXEL
		If nLenMoedas > 2
			@ 024,010 SAY  aTxMoedas[3][1]  Of oDlg PIXEL
			@ 022,060 MSGET aTxMoedas[3][2] PICTURE aTxMoedas[2][3] Of oDlg PIXEL
			If nLenMoedas > 3
				@ 036,010 SAY  aTxMoedas[4][1]  Of oDlg PIXEL
				@ 034,060 MSGET aTxMoedas[4][2] PICTURE aTxMoedas[3][3] Of oDlg PIXEL
				If nLenMoedas > 4
					@ 048,010 SAY  aTxMoedas[5][1]  Of oDlg PIXEL
					@ 046,060 MSGET aTxMoedas[5][2] PICTURE aTxMoedas[4][3] Of oDlg PIXEL
				EndIf
			EndIf
		EndIf
		DEFINE  SButton FROM 064,80 TYPE 1 Action (lConfirmo := .T. , oDlg:End() ) ENABLE OF oDlg  PIXEL

		Activate MSDialog oDlg CENTERED
	Endif
EndIf
If nOpcA == 2
	//Aglomerando items
	Processa({|lEnd| aNFs	:=	a468nProces(cAlias,aRecs,cCamposQueb,lCarga,lMT310,c310Ser)},,;
		IIf(lPedidos,OemToAnsi(STR0095),OemToAnsi(STR0134)+RetTitle('D2_REMITO')+"..."))    //"Preparando pedidos/remitos"
	//Gerando notas
	If Len(aNFs) > 0
		_nTotOper_ := 0
		_aTotOper_ := {}
		_aValItem_ := {}
		If !lMSAuto
			oProcess := MsNewProcess():New({|lEnd| a468nImp(@aNFs,If(lPedidos,'SC9','SD2'),lPedidos,,,oProcess)})
			oProcess:cTitle := STR0193 //"Preparando Resumo de Faturas a serem geradas."
			oProcess:Activate()
		Else
		  a468nImp(@aNFs,If(lPedidos,'SC9','SD2'),lPedidos,,,)
		EndIf

		If cPaisLoc == "ARG" .And. lPedidos
			aDesBon := {}
			For xJ := 1 To Len(aNFs)
				nTotDesBon := 0
				//Si tiene descuento (bonificaciones)
				If aNFs[xJ][19][1] > 0 .And.  aNFs[xJ][19][2] > 0 .and. (AllTrim(SC6->C6_TES) $ SuperGetMV("MV_BONUSTS"))
					For nB := 1 To Len(aNFs[xJ][13])
						If nB != Len(aNFs[xJ][13])
							nDesBon := Round((aNFs[xJ][13][nB][3] * aNFs[xJ][19][2]) / (aNFs[xJ][19][1] + aNFs[xJ][19][2]), MsDecimais(nMoedSel))
							nTotDesBon += nDesBon
						Else
							nDesBon := aNFs[xJ][19][2] - nTotDesBon
						EndIf
						Aadd(aDesBon, {xJ, nB, nDesBon})
					Next nB
				EndIf
			Next xJ
		EndIf

		If a468nNotas(@aNFs,lCarga,.F.,@lLimMax,lMT310,c310Num,nQtdeFat,aFacs)
			If lMSAuto
				a468nGera(@aNFs,If(lPedidos,'SC9','SD2'),lPedidos, (aRecs==Nil) , oProcess, lLimMax, @aParams, aRecs, lProcArg, nQtdeFat, aFacs)
			Else
				oProcess:=	MsNewProcess():New({|lEnd| a468nGera(@aNFs,If(lPedidos,'SC9','SD2'),lPedidos, (aRecs==Nil) , oProcess, lLimMax, @aParams, aRecs, lProcArg, nQtdeFat, aFacs)})
				oProcess:Activate()
			Endif
		Endif
		For nX:=1 To Len(aNFs)
			Aadd(aGerado,{aNFs[nX][3],aNFs[nX][4]})
			Aadd(aNotas,{aNFs[nX][3],aNFs[nX][4]})
		Next
	Endif
EndIf
dbSelectArea(cAlias)
DbGoTop()
Return aClone(aGerado)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ a468nProces ³ Autor ³ Jose Lucas         ³ Data ³ 12.05.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Processamento                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATa468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nProces(cAlias,aRecs,cCamposQueb,lCarga,lMT310,c310Ser)
Local aQuebra  	 := {}	,aQuebraPed:={}	,	aQuebraRem:={},bQuebra
Local lPegaSerie := FindFunction("U_M468ASER")
Local cVendedor  := "1", nMaxVend := Fa440CntVen()
Local aPv1NFs	 :=	{},nPosNota	:=	0
Local lQuebra	 :=	.F.
Local lFreteMoe  := If(GetMv("MV_FRETMOE") == "S",.T.,.F.)
Local aRecsTRB	 :=	{}
Local bCondW_01,bIf
Local nOrderTRB	 :=	1
Local bSeparo
Local lTrb	     :=	.F.
Local nCntFor	 :=	1,nRecs,cCondicao := ""
Local cCondPag   := ""
Local cTipoNota  := "NF "
Local nX
Local lFatDiverg := If( GetNewPar("MV_FATDIV","S")=="S",.T.,.F.)
Local lRespVlrInf:= .F. // Indica se o usuario respondeu a pergunta para incluir Adiantamentos
Local lActVlrInf := .F. // Indica se o usuario vai incluir os adiantamentos ou cancelar a geração de NF para pedidos sem Adiantamento
Local lPedSemAd	 := .F.	//	Logico que indica se o Pedido possui Adiantamento
Local aPedSemAd  := {}	//	Armazena o Num. do Pedido que nao será incluido na nota por falta de Adiantamento
Local alAreax
Local alAreaY
Local alAreaZ
Local alAreaW
Local nlAlqPIV := 0
Local nlAlqDIG := 0
Local lM468Proc	:= ExistBlock("lM468Proc")
Local cSerieN := ""
Local cNumPAnt := ""
Local aMulSer := {}
Local nPosSer := 0
Local nAux := 0
Local _lLocItem := ExistBlock("LOCITEM2")
Local cNomeFun := FUNNAME()

Default lMT310   := .F.
Default c310Ser  := ""

Private lSeqEspecie := GetMV("MV_SEQESPE",,.F.)
If Type("lAutomato") == "U"
    Private lAutomato := IIF(cPaisloc $ "ARG|MEX|PAR|BOL|CHI", isBlind(), .F.)
EndIf
If lCarga
	Do Case
	Case nSepara == _PEDREM
		bSeparo	:=	{|| SC9->C9_CARGA+"/"+SC9->C9_PEDIDO}
	Case nSepara == _AGREGADOR
		bSeparo	:=	{|| SC9->C9_CARGA+"/"+SC9->C9_AGREG}
	Case nSEPARA == _GRUPO
		bSeparo	:=	{|| SC9->C9_CARGA+"/"+SC9->C9_GRUPO}
	OtherWise
		bSeparo	:=	{|| SC9->C9_CARGA}
	EndCase
Else
	Do Case
	Case nSepara == _PEDREM
		bSeparo	:=	If(lPedidos,{|| SC9->C9_PEDIDO},{|| SD2->D2_DOC})
	Case nSepara == _AGREGADOR
		bSeparo	:=	If(lPedidos,{|| SC9->C9_AGREG} ,{|| SD2->D2_AGREG})
	Case nSEPARA == _GRUPO
		bSeparo	:=	If(lPedidos,{|| SC9->C9_GRUPO},{|| SD2->D2_GRUPO})
	OtherWise
		bSeparo	:=	{|| ''}
	EndCase
Endif
//Criterio de Quiebra definido por la rutina llamadora
If cCamposQueb  <> Nil
	nSepara := 0
	cCamposQueb	:=	"+"+cCamposQueb
Else
	cCamposQueb	:=	""
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carregar um array com todos os registros do arquivo temporario³
//³que devem ser faturados.                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aRecs == Nil
	lTRB 	:=	.T.
	dbSelectArea( "TRB" )
	nOrderTRB	:=	IndexOrd()
	If cPaisloc == "MEX" .AND. !lAutomato
	 	DbSetOrder(6)
	 Else
		DbSetOrder(4)
	EndIf
	ProcRegua(LastRec())
	aRecs	:=	{}
	If lPedidos
		bCondW_01 := {||!Eof() .And. TRB->C9_FILIAL == xFilial("SC9") .And. TRB->C9_OK == cMarca }
		bIf := {|| !Empty(SC9->C9_NFISCAL) }
		MsSeek(xFilial('SC9')+cMarca)
	Else
		bCondW_01 := {||!Eof() .And. TRB->D2_FILIAL == xFilial("SD2") .And. TRB->D2_OK == cMarca}
		bIf := {|| TRB->D2_QUANT == TRB->D2_QTDEFAT }
		MsSeek(xFilial('SD2')+cMarca)

	EndIf
	While Eval(bCondW_01)
		IncProc(STR0139) //'Verificando items marcados'
		If lPedidos
			SC9->(MsGoTo(TRB->RECNO))
		Else
			SD2->(MsGoTo(TRB->RECNO))
		Endif
		If Eval(bIf)
			DbSkip()
			Loop
		Endif
		if !lAutomato
			If IsMark(If(lPedidos,"C9_OK","D2_OK"))
				AAdd(aRecs,If(lPedidos,SC9->(RECNO()),SD2->(RECNO())))
				AAdd(aRecsTRB,TRB->(RECNO()))
			Endif
		Else
			If  SD2->D2_OK <> Nil .or. SC9->C9_OK <> Nil
				AAdd(aRecs,If(lPedidos,SC9->(RECNO()),SD2->(RECNO())))
				AAdd(aRecsTRB,TRB->(RECNO()))
			Endif
		Endif
		DbSkip()
	Enddo
	DbSetOrder(nOrderTRB)
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definir os criterios de quebra quando tenho pedido e quando tenho soh remito³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

//Criterio de quebra dos Pedidos
aadd(aQuebraPed,{"SC9->C9_CLIENTE",})
aadd(aQuebraPed,{"SC9->C9_LOJA",})
aadd(aQuebraPed,{"SC5->C5_TIPO",})
aadd(aQuebraPed,{"SC5->C5_TIPOREM",})
If SC5->(FieldPos('C5_CODMUN'))>0
	aadd(aQuebraPed,{"SC5->C5_CODMUN",})
Endif
If cPaisLoc == "COL"
	If SC5->(FieldPos('C5_TPACTIV'))>0
		aadd(aQuebraPed,{"SC5->C5_TPACTIV",})
	Endif
	If SC5->(FieldPos('C5_TRMPAC'))>0
		aadd(aQuebraPed,{"SC5->C5_TRMPAC",})
	Endif
Endif
If SC5->(FieldPos('C5_PROVENT'))>0
	aadd(aQuebraPed,{"SC5->C5_PROVENT",})
Endif
aadd(aQuebraPed,{"SC5->C5_CLIENT",})
aadd(aQuebraPed,{"SC5->C5_LOJAENT",})
aadd(aQuebraPed,{"SC5->C5_REAJUST",})
aadd(aQuebraPed,{"SC5->C5_CONDPAG",})
aadd(aQuebraPed,{"SC5->C5_TRANSP",})
If cPaisLoc == 'RUS'
	aadd(aQuebraPed,{"SC5->C5_F5QUID",})
	aadd(aQuebraPed,{"SC5->C5_F5QCODE",})
EndIf
If cPaisLoc $ "ARG" .and. SC5->(ColumnPos( "C5_CANJE" )) > 0
	aadd(aQuebraPed,{"SC5->C5_CANJE",})
EndIF


If nTipoGer == 1
	aadd(aQuebraPed,{"STR(SC5->C5_MOEDA)",})
	aadd(aQuebraPed,{"STR(SC5->C5_TXMOEDA)",})
EndIf
If lCarga
	aadd(aQuebraPed,{"SC9->C9_CARGA",})
Endif
cVendedor := "1"
For nCntfor := 1 To nMaxVend
	aadd(aQuebraPed,{"SC5->C5_VEND"+cVendedor,})
	cVendedor := Soma1(cVendedor,1)
Next nCntFor
If nSepara	== _AGREGADOR
	aadd(aQuebraPed,{"SC9->C9_AGREG",})
ElseIf nSepara	== _GRUPO
	aadd(aQuebraPed,{"SC9->C9_GRUPO",})
Endif

//Criterio de quebra dos remitos que nao tem pedido
aadd(aQuebraRem,{"SD2->D2_CLIENTE",})
aadd(aQuebraRem,{"SD2->D2_LOJA",})
aadd(aQuebraRem,{"SD2->D2_TIPO",})
aadd(aQuebraRem,{"SD2->D2_TIPOREM",})
If SF2->(FieldPos('F2_CODMUN'))>0
	aadd(aQuebraRem,{"SF2->F2_CODMUN",})
Endif
IF cPaisLoc == "COL"
	If SF2->(FieldPos('F2_TPACTIV'))>0
		aadd(aQuebraRem,{"SF2->F2_TPACTIV",})
	Endif
	If SF2->(FieldPos('F2_TRMPAC'))>0
		aadd(aQuebraRem,{"SF2->F2_TRMPAC",})
	Endif
EndIF
If SF2->(FieldPos('F2_PROVENT'))>0
	aadd(aQuebraRem,{"SF2->F2_PROVENT",})
Endif
If SF2->(ColumnPos('F2_CANJE'))>0 .and. cPaisLoc == "ARG"
	aadd(aQuebraRem,{"SF2->F2_CANJE",})
Endif

aadd(aQuebraRem,{"SD2->D2_LOJA",})
aadd(aQuebraRem,{'"'+space(TamSX3("C5_REAJUST")[1])+'"',})
aadd(aQuebraRem,{'"'+space(TamSX3("C5_TRANSP")[1])+'"',})
If nTipoGer == 1
	aadd(aQuebraRem,{"STR(SF2->F2_MOEDA)",})
	aadd(aQuebraRem,{"STR(SF2->F2_TXMOEDA)",})
	If SF2->(Fieldpos("F2_REFMOED")) > 0
		aadd(aQuebraRem,{"STR(SF2->F2_REFMOED)",})
	EndIf
	If SF2->(ColumnPos("F2_REFTAXA")) > 0
		aadd(aQuebraRem,{"STR(SF2->F2_REFTAXA)",})
	EndIf
EndIf
If lCarga
	aadd(aQuebraRem,{'"'+space(TamSX3("C9_CARGA")[1])+'"',})
EndIf
cVendedor := "1"
For nCntfor := 1 To nMaxVend
	aadd(aQuebraRem,{"SF2->F2_VEND"+cVendedor,})
	cVendedor := Soma1(cVendedor,1)
Next nCntFor
If nSepara  == _AGREGADOR
	aadd(aQuebraRem,{"SD2->D2_AGREG",})
ElseIf nSepara	== _GRUPO
	aadd(aQuebraRem,{"SD2->D2_GRUPO",})
Endif



cCondicao	:=	""

For nX:= 1 To Len(aQuebraPed)
	cCondicao += aQuebraPed[nX][1]+"+"
Next
cCondicao	:=	Substr(cCondicao,1,Len(cCondicao)-1)
aQuebraPed	:=	{cCondicao, }

If lM468Proc
	aQuebraNew:=ExecBlock("lM468Proc",.F.,.F., aQuebraRem)
	If (ValType(aQuebraNew) == "A" )
		aQuebraRem := aClone(aQuebraNew)
	EndIf
EndIf

cCondicao	:=	""

For nX:= 1 To Len(aQuebraRem)
	cCondicao += aQuebraRem[nX][1]+"+"
Next
cCondicao	:=	Substr(cCondicao,1,Len(cCondicao)-1)
aQuebraRem	:=	{cCondicao, }

bQuebra	:= {|lPed| aClone(If(lPed, aQuebraPed,aQuebraRem))}

If cPaisLoc == "ARG" .And. IsInCallStack("MATA460B")
	nAux := MV_PAR01
	If !Pergunte("PVXARG", .T.)
		Return .F.
	Endif
	cLocxNFPV  := MV_PAR01
	cPontoVend := MV_PAR01
	MV_PAR01 := nAux
EndIf
If cPaisLoc == "ARG" .And. Empty(cLocxNFPV)
	cLocxNFPV := MV_PAR01
EndIf

ProcRegua(Len(aRecs))
For nRecs	:=	1	To	Len(aRecs)
	IncProc(STR0140) //'Agrupando items...'
	If lPedidos
		SC9->(MsGoTo(aRecs[nRecs]))
		lTpPedBenf := a468nTpPed(SC9->C9_CLIENTE,SC9->C9_LOJA,SC9->C9_PEDIDO)
	Else
		SD2->(MsGoTo(aRecs[nRecs]))
		lTpPedBenf := (SD2->D2_TIPO=="B")
	Endif

	If lTrb
		TRB->(MsGoTo(aRecsTRB[nRecs]))
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posicionar os arquivos para que a a468nGravD2()  ³
	//³ todos os arquivos posicionados...                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lTpPedBenf
		SA2->( dbSetOrder(1) )
	Else
		SA1->( dbSetOrder(1) )
	Endif
	SC6->( dbSetOrder(1) )
	SC9->( dbSetOrder(1) )
	SC5->( dbSetOrder(1) )
	SE4->( dbSetOrder(1) )
	SF2->( dbSetOrder(1) )
	lPedOk	:=	.F.
	If lPedidos
		SC5->( MsSeek(xFilial("SC5")+ SC9->C9_PEDIDO) )
		If lTpPedBenf
			SA2->( MsSeek(xFilial("SA2")+ SC9->C9_CLIENTE+SC9->C9_LOJA) )
		Else
			SA1->( MsSeek(xFilial("SA1")+ SC9->C9_CLIENTE+SC9->C9_LOJA) )
		Endif
		SE4->( MsSeek(xFilial("SE4")+ SC5->C5_CONDPAG) )
		lPedOk	:=	.T.
	Else
		If !Empty(SD2->D2_PEDIDO)
			SC5->( MsSeek(xFilial("SC5")+ SD2->D2_PEDIDO) )
			SC9->( MsSeek(xFilial("SC9")+ SD2->D2_PEDIDO+SD2->D2_ITEMPV+SD2->D2_SEQUEN+SD2->D2_COD) )
			SE4->( MsSeek(xFilial("SE4")+ SC5->C5_CONDPAG) )
			lPedOk	:=	.T.
		Endif
		If lTpPedBenf
			SA2->( MsSeek(xFilial("SA2")+SD2->D2_CLIENTE+SD2->D2_LOJA) )
		Else
			SA1->( MsSeek(xFilial("SA1")+SD2->D2_CLIENTE+SD2->D2_LOJA) )
		Endif
		SF2->( MsSeek(xFilial("SF2")+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA+SD2->D2_FORMUL) )
	Endif
	If lPedOk
	   cCondPag  := SE4->E4_CODIGO
	Else
	   If lTpPedBenf
		   cCondPag := SA2->A2_COND
	   Else
		   cCondPag := SA1->A1_COND
	   Endif
	EndIf

	lPedSemAd := .F.
	If aScan(aPedSemAd, SC9->C9_PEDIDO) <= 0
		lPedSemAd := a468NAdian(SC9->C9_PEDIDO, cCondPag, aRecs, @lRespVlrInf, @lActVlrInf, SC9->C9_CLIENTE, SC9->C9_LOJA)
		If !lPedSemAd
			aAdd(aPedSemAd, SC9->C9_PEDIDO)
		EndIf
	EndIf

	//Verifica novamente os empenhos para garantir
	If (!lPedidos .and. lFatDiverg) .Or. (!LogMov('SC9',.F.,.T.,SC9->C9_PRODUTO,SC9->C9_LOCAL,.T.) .AND.;
		lPedSemAd)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifico se irei pegar os dados para comparar do SC5 ou do SD2³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aQuebra	:=	Eval(bQuebra,lPedOk)

		If !lPedOk
			If lTpPedBenf
				aQuebra[1]	+=	"+SA2->A2_COND"
			Else
				aQuebra[1]	+=	"+SA1->A1_COND"
			Endif
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Para condicao de pagamento tipo 9, devo sempre quebrar por pedido       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPedOk .And. ( SE4->E4_TIPO=="9" )
			aQuebra[1]	+=	"+SC5->C5_NUM"
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Quando a quebra e por pedido ou remito, sempre devo pegar a regra    ³
		//³de quebra do arquivo que corresponde, porque se tiver um remito para ³
		//³varios pedidos iguais, estaria quebrando remito em uma nota          ³
		//³por pedido, o correto eh uma nota por remito.                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nSepara == _PEDREM .or. nSepara == _NOQUEBRA
			If lPedidos
				If ( SE4->E4_TIPO<>"9" )
					aQuebra[1]	+=	"+SC5->C5_NUM"
				Endif
			Else
				aQuebra[1]	+=	"+SD2->D2_DOC"
			Endif
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Adiciona criterio de quebra da rotina chamadora.                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aQuebra[1] +=	cCamposQueb


		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza os dados da Quebra                                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cPaisLoc == "COL"
			IF aParams[16] == 4
				aQuebra    := ValidTRM( aQuebra[1] , aRecs[nRecs] , lPedidos )
			ELSE
				aQuebra[2] := Alltrim( &(aQuebra[1]) )
			ENDIF
		Else
			aQuebra[2] := Alltrim( &(aQuebra[1]) )
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³        Tratamento especifico para localizado PERU                  ³
		//³	 A nota de saída gerada a partir do pedido de venda no localizado  ³
		//³ Peru deve ser quebrada quando:                                     ³
		//³ - Na Percepção de IGV (PIV) HOUVER PRODUTOS COM ALIQUOTAS          ³
		//³ (B1->B1_POSIPI ---> YD_ALQPIV) DIFERENTES OU PRODUTOS QUE CALCULEM ³
		//³ DIG E OUTROS QUE NãO.                                              ³
		//³ - Na Detração de IGV (DIG) HOUVER PRODUTOS COM ALIQUOTAS           ³
		//³ (B1->B1_POSIPI ---> YD_ALQPIV) DIFERENTES OU PRODUTOS QUE CALCULEM ³
		//³ DIG E OUTROS QUE NãO.                                              ³
		//³ Nos demais casos não deve haver a condição para quebra.            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		If cPaisLoc $ "PER"

			alAreaX := SC6->(GetArea())
			alAreaY := SFC->(GetArea())
			alAreaZ := SB1->(GetArea())
			alAreaW := SYD->(GetArea())

			DbSelectArea("SC6")
			DbSetOrder(1)
			If DbSeek(xFilial("SC6") +SC9->C9_PEDIDO + SC9->C9_ITEM )

				DbSelectArea("SFC")
				DbSetOrder(2)
				If DbSeek(xFilial("SFC") + SC6->C6_TES + "PIV")

					DbSelectArea("SB1")
					DbSetOrder(1)
					If DbSeek(xFilial("SB1") + SC9->C9_PRODUTO)
						DbSelectArea("SYD")
						DbSetOrder(1)
						If DbSeek(xFilial("SYD") + SB1->B1_POSIPI)
							nlAlqPIV := SYD->YD_ALQPIV
						EndIf
					EndIf

					aQuebra[2] += "PIV"	+ AllTrim(Str(nlAlqPIV))

				ElseIf DbSeek(xFilial("SFC") + SC6->C6_TES + "DIG")

					DbSelectArea("SB1")
					DbSetOrder(1)
					If DbSeek(xFilial("SB1") + SC9->C9_PRODUTO)
						DbSelectArea("SYD")
						DbSetOrder(1)
						If DbSeek(xFilial("SYD") + SB1->B1_POSIPI)
							nlAlqDIG := SYD->YD_ALQDIG
						EndIf
					EndIf

					aQuebra[2] += "DIG"	+ AllTrim(Str(nlAlqDIG))

				EndIf

			EndIf

			RestArea(alAreaX)
		    RestArea(alAreaY)
		    RestArea(alAreaZ)
		    RestArea(alAreaW)

		EndIf


		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Considerar a serie da tabela AB, que controla as series utilizadas atu- ³
		//³almente - Loc. Guatemala                                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        If cPaisLoc == "GUA"
           If SX5->(DbSeek(xFilial("SX5")+"AB"+cTipoNota))
              cSerie  := Padr(X5Descri(),3)
           EndIf
        ElseIf lSeqEspecie .And. Empty(cSerie)
           If SX5->(DbSeek(xFilial("SX5")+"AC"+cTipoNota),.T.)
              cSerie  := Substr(SX5->X5_CHAVE,4,3)
           EndIf
        EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Procura um item igual de acordo com o criterio de quebra, se nao achar  ³
		//³cria um novo elemento no array de notas,se achar adiciona o item na nota³
		//³achada e efetua a gravacao do array com os pedidos/remitos de cada NF   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lQuebra
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Obter a Serie da nota fiscal                                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cSerie := M468ser(cSerie)
			If lPegaSerie
				cSerie := ExecBlock( "M468ASER",.F.,.F., {0,cSerie})
			EndIf        // 1             2             3    4             5                      6            7     8  9  10    11         12
			If cPaisLoc == "RUS" .And. Empty(cSerie) .And. ! Empty(c310Ser)
				cSerie		:= c310Ser
			Endif
			//Verifica ponto de venda - Paulo 02/09/15
			If (cPaisLoc =="ARG")
				lachou:=.F.
				SFP->(DbSetOrder(9))
				If SFP->(MsSeek(xFilial("SFP")+cLocxNFPV))

					While (SFP->(!EOF())) .And. (SFP->FP_PV == cLocxNFPV)  .And.  !lachou
						If SFP->FP_DTAVAL > dDatabase  .And. Alltrim(cSerie) $ SFP->FP_SERIE
							lachou:=.T.

							cSerieN:=SFP->FP_SERIE
						Else
							SFP->( DBSkip() )
						EndIf
					EndDo
				EndIf
				If Alltrim(cSerie) != Alltrim(cSerieN)
					If Len(aMulSer) > 0
						nPosSer := aScan(aMulSer,{ |x| x[1] == cSerie})
						If nPosSer > 0
							cSerie := aMulSer[nPosSer][2]
						Else
							cMulSer := cSerie
							//STR0237: "Serie "; STR0238: "no pertenece a ese punto de venta. ¿Quieres que confirmar la enmienda a la serie "; STR0238: "o traer en blanco")
							If MsgYesNo(OemToAnsi(STR0237) + cSerie + OemToAnsi(STR0238) + cSerieN + OemToAnsi(STR0239))
								cSerie:= cSerieN
							Else
								cSerie:= "   "
							EndIf
							aAdd(aMulSer,{cMulSer, cSerie})
						EndIf
					Else
						cMulSer := cSerie
						//STR0237: "Serie "; STR0238: "no pertenece a ese punto de venta. ¿Quieres que confirmar la enmienda a la serie "; STR0238: "o traer en blanco")
						If MsgYesNo(OemToAnsi(STR0237) + cSerie + OemToAnsi(STR0238) + cSerieN + OemToAnsi(STR0239))
							cSerie := cSerieN
						Else
							cSerie:= "   "
						EndIf
						aAdd(aMulSer,{cMulSer, cSerie})
					EndIf
				EndIf
			EndIf
			AAdd(aPv1NFs,{aQuebra[2],{aRecs[nRecs]},IIf(lMT310,c310Ser,cSerie),,{If(lTRB,TRB->(RECNO()),0)},Eval(bSeparo),cCondPag,'','', ,cTipoNota ,lTpPedBenf } )
			lQuebra	:=	.F.
		Else
			nPosNota	:=	aScan(aPv1NFs, {|x| x[1]==aQuebra[2] .And. Len(x[2]) < x[10]  })
			If nPosNota == 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Obter a Serie da nota fiscal                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cSerie := M468ser(cSerie)
				If lPegaSerie
					cSerie := ExecBlock( "M468ASER",.F.,.F., {0,cSerie})
				EndIf
				If cPaisLoc == "MEX" .And. lAutomato
					cSerie := cSerieU //Usada para asignar serie de casos automatizados
				EndIF
				If cPaisLoc == "RUS" .And. Empty(cSerie) .And. ! Empty(c310Ser)
					cSerie		:= c310Ser
				Endif
				If (cPaisLoc =="ARG")
					lachou:=.F.
					SFP->(DbSetOrder(9))
					If SFP->(MsSeek(xFilial("SFP")+cLocxNFPV))

						While (SFP->(!EOF())) .And. (SFP->FP_PV == cLocxNFPV)  .And.  !lachou
							If SFP->FP_DTAVAL > dDatabase .And. Alltrim(cSerie) $ SFP->FP_SERIE .And. SFP->FP_ATIVO <> "2"
								lachou:=.T.

								cSerieN:=SFP->FP_SERIE
							Else
								SFP->( DBSkip() )
							EndIf
						EndDo
					EndIf
					If Alltrim(cSerie) != Alltrim(cSerieN)
						If Len(aMulSer) > 0
							nPosSer := aScan(aMulSer,{ |x| x[1] == cSerie})
							If nPosSer > 0
								cSerie := aMulSer[nPosSer][2]
							Else
								cMulSer := cSerie
								//STR0237: "Serie "; STR0238: "no pertenece a ese punto de venta. ¿Quieres que confirmar la enmienda a la serie "; STR0238: "o traer en blanco")
								If MsgYesNo(OemToAnsi(STR0237) + cSerie + OemToAnsi(STR0238) + cSerieN + OemToAnsi(STR0239))
									cSerie:= cSerieN
								Else
									cSerie:= "   "
								EndIf
								aAdd(aMulSer,{cMulSer, cSerie})
							EndIf
						Else
							cMulSer := cSerie
							//STR0237: "Serie "; STR0238: "no pertenece a ese punto de venta. ¿Quieres que confirmar la enmienda a la serie "; STR0238: "o traer en blanco")
							If MsgYesNo(OemToAnsi(STR0237) + cSerie + OemToAnsi(STR0238) + cSerieN + OemToAnsi(STR0239))
								cSerie := cSerieN
							Else
								cSerie:= "   "
							EndIf
							aAdd(aMulSer,{cMulSer, cSerie})
						EndIf
					EndIf
				EndIf

				If cPaisLoc $ "PAR|BOL|CHI"
					Do Case
						Case Alltrim(cEspecie) == "NF"
							cEspecie := "1"
						Case Alltrim(cEspecie) == "RET"
							cEspecie := "6"
					EndCase
					dbSelectArea("SFP")
					SFP->(dbGoTop())
					dbSetOrder(6)
					If SFP->(MsSeek(xFilial("SFP")+cFilAnt+cEspecie))
						While (SFP->(!EOF())) .And. (Empty(cSerie))
							If SFP->FP_DTAVAL > dDatabase
								If cPaisLoc == "PAR" .And. SFP->FP_ATIVO == "1"
									cSerie:=SFP->FP_SERIE
								Else
									cSerie:=SFP->FP_SERIE
								Endif
							Else
								SFP->( DBSkip() )
							EndIf
						EndDo
					EndIf
				EndIf
				AAdd(aPv1NFs,{aQuebra[2],{aRecs[nRecs]},IIf(lMT310,c310Ser,cSerie),,{If(lTRB,TRB->(RECNO()),0)},Eval(bSeparo),cCondPag,'','', IIF(((cPaisLoc == "ARG") .OR. cPaisLoc == "URU") .and. _lLocItem,LocNumIt2(IIf(lMT310,c310Ser,cSerie),cNomeFun),LjGetMaxIt(IIf(lMT310,c310Ser,cSerie))),cTipoNota, lTpPedBenf  })
				lQuebra	:=	.F.
			Else
				AAdd(aPv1NFs[nPosNota][2],aRecs[nRecs])
				AAdd(aPv1NFs[nPosNota][5],If(lTRB,TRB->(RECNO()),0))
			Endif
		Endif
	Endif
Next
For nX := 1 To Len(aPv1NFs)
	Aadd(aPv1NFs[nX],{})
	Aadd(aPv1NFs[nX],{})
	Aadd(aPv1NFs[nX],{})
	Aadd(aPv1NFs[nX],0)
	Aadd(aPv1NFs[nX],0)
	Aadd(aPv1NFs[nX],0)
	If cPaisLoc == "PTG"
		Aadd(aPv1NFs[nX],0)
		Aadd(aPv1NFs[nX],0)
	Endif
	If A468EdtVls()
	    Aadd(aPv1NFs[nX],Space(14))
		Aadd(aPv1NFs[nX],Space(15))
	EndIf
	Aadd(aPv1NFs[nX],{0,0,0,0})
Next
If Len(aPv1NFs) > 0
	nLenNFS := Len(aPv1NFs[1])
EndIf
Return aClone(aPv1NFs)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468nGera ºAutor  ³Bruno Sobieski      ºFecha ³  10/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Geracao de nota fiscal                                      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºNorbert Waage ³16/05/07³125161³Altera status do orcamento do Televendasº±±
±±º              ³        ³      ³(SIGATMK) apos a geracao da NF.         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nGera(aNFS,cAlias,lPedidos,lTRB,oProcess,lLimMax, aParams, aRecs, lProcArg, nQtdeFat, aFacs)
Local nNFS,nI	  :=	0
Local nDIf        := 0.00
Local nTotMerc    := 0.00
Local nVarDesc    := 0.00
Local nFrete      := 0.00
Local nSeguro     := 0.00
Local nDespesa    := 0.00
Local nDesNTrb    := 0.00
Local nTara       := 0.00
Local nl460PBRUTO :=	0
Local nl460PLIQUI :=	0
Local nDuplIf
Local bVend       := { 	|x| "C5_VEND"	+	Str(x,1) }
Local bComis      := {	|x| "C5_COMIS"	+	Str(x,1) }
Local nVend		  :=	0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para impressora fiscal           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lRetImpF   := .T.
Local aRetImpFis := {}
Local aPeds	     :=	{}
Local aCtbDia    := {}
Local oDlgPed
Local oLBx
Local lMudou	 :=	.F.
Local nPosLock	 :=	0
Local nLocks	 :=	0
Local nVlrTot    := 0
Local nVlrDsc    := 0
Local nVlrTotal  := 0
Local nVlrDscTot := 0
Local nPos       := 0
Local cTes       := ""
Local nPrcVen    := 0
Local nPrcBrut   := 0
Local aAtuSC5	 :=	{}
Local nMoedaSF2  :=0
Local nMoedaRem  := 1
Local nItem,nX
Local cTipoDoc  := ""
Local cSerAtu   := ""
Local cTipoNF   := ""
Local nRegSX5   := 0
Local nTamNF 	:= TamSX3("F2_DOC")[1]  // Argentina
Local aPedDel	:= {}
Local nFreteRat := 0
Local nDespRat  := 0
Local nSegRat   := 0
Local nFatorRj	:= 0
Local nLenAped	:= 0
Local lUltimoItem := .F.	// Utilizado para arredondamento no Chile
Local aSemPermiss	:= {}		// Array para armazenar os pedidos de Vendas que o usuário não tem premissão para gerar Remito
Local cSemPermiss	:= ""		// String para armazenar os pedidos de Vendas que não foram gerado o Remito devido a falta de permissão
Local lEdCelImps:= .F.
Local aVlrsEdit := {}
// Isaac Silva 30/12/09
Local lNfagrSF2  := Iif(SF2->(FieldPos("F2_NFAGREG"))>0,.T.,.F.) // Numero NF Agregada
Local lNfagrSF3  := Iif(SF3->(FieldPos("F3_NFAGREG"))>0,.T.,.F.) // Numero NF Agregada
Local lTipFoSFP  := Iif(SFP->(FieldPos("FP_TIPOFOR"))>0,.T.,.F.) // Tipo de formulario
Local lQtdItSFP  := Iif(SFP->(FieldPos("FP_QTDITEM"))>0,.T.,.F.) // Qtde de item na Nota fiscal
Local cFatNum    := " "
Local lEncontra  := .F.
Local cFunName   := ""
Local cPerg1	 := ""
Local nVTotUSD   := 0
Local lComExt	 := (cPaisLoc == "MEX" .AND. GETMV("MV_CFDIEXP",,.F.) .AND. SC5->(FieldPos("C5_TIPOPE"))>0)
Local cIdMetric     := ""
Local cSubRutina    := ""
Local cFilSFB       := xFilial("SFB")
//
Private aCaixaFin	:= {}
Private cTesPend	:= '  '
Private aNotas	    := {}
Private lLancPad10	:=	.F.,lLancPad20	:=	.F.
Private cItemD2     := "00"
Private nTotImpues	:=	0
Private aUltItem	:= {}  // Array Controla Ultimo Item que Incide Imposto com Calculo p/Total.
Private aNotaOri	:= {"",""}//Numero da NF gerada pela consignacao
Private aPosLote	:= {}
Private aDadSFE		:= {}
Private nQtdItem	:= 0
Private nDescTotIT	:= 0
//Variavel criada para diferenciar quando está sendo referenciado um remito e quando uma nota
Private cRem		:=	"SD2"
Private cProvEnt	:=	''
Private lSeqEspecie := GetMV("MV_SEQESPE",,.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica C5_TIPO ou D2_TIPO para o uso ³
//³ das tabelas corretas.                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private bTpPedBenf := { || If( lPedidos, a468nTpPed(SC9->C9_CLIENTE,SC9->C9_LOJA,SC9->C9_PEDIDO), SD2->D2_TIPO=="B" ) }
Private l468NPed := .T.
Private aRegFIE := {}
Private lRegFIE := {}
Private nValadiIm := 0
Private nNFBon := 0
/*Private variables declarations.
They will be used in SF2 table values creation
in local currency*/
Private nVBruTRUM := 0
Private nVBasTRUM := 0
Private nVImpTRUM := 0
Private nVMercTRUM := 0
Private aRNo	:= {}
Private nVladiant  := 0
// Expresiones de indice CTL para actualizar CT2_UUID y CTK_UUID
Private aKeyCTL		:= {}
Private aDatoIPM  := {}

Default aFacs := {}

// Isaac Silva 30/12/09
// se é processo da Argentina para gerar varias faturas
// e tambem o parametro lContrFol
If cPaisLoc == "ARG" .And. lNfagrSF2 .And. lNfagrSF3 .And. lTipFoSFP .And. lQtdItSFP ;
	.And. AllTrim(FunName())$"MATA465N|MATA467N|MATA468N" .And. GetNewPar("MV_CTRLFOL",.F.)
	lProcArg := .T. // se é processo da Argentina para gerar varias faturas
Endif
If lGeraLanc
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³  Credito de Estoque / Debito de C.M.V.               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lLancPad10:=VerPadrao("610")

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³  Credito de Impuestos                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lLancPad20:=VerPadrao("620")
EndIf

If (lLancPad10 .or. lLancPad20) .And. aParams[24] == 2
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³  Posiciona numero do lote para lancamentos do fatur. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SX5")
	MsSeek(cFilial+"09FAT")

	cLoteFat:=Iif(Found(),Trim(X5Descri()),"FAT ")
	If IsInCallStack("Ma410PvNfs")
		cFunName := FunName()
		SetFunName("MATA410")
		nHdlPrv :=HeadProva(cLoteFat,"MATA468",cUserName,@cArquivo)
		SetFunName(cFunName)
	Else
		nHdlPrv :=HeadProva(cLoteFat,"MATA468",cUserName,@cArquivo)
	EndIf
EndIf

If (lLancPad10 .or. lLancPad20) .And. lGerarCFD
	// Código de asientos contables factura de salida
	If lLancPad10
		aKeyCTL := aClone(PesqKeyCTB("610"))
	Else
		aKeyCTL := aClone(PesqKeyCTB("620"))
	EndIf
EndIf

If nHdlPrv <= 0
	HELP(" ",1,"HDLNAOGERA")
	Return( .T. )
EndIf
If !lMSAuto
	oProcess:SetRegua1(Len(aNFs))
Endif
aNFs := aSort(aNFs,,,{ |x,y| x[3]+x[4] < y[3]+y[4] })

aRemTots :=	{}
aRatDesp :=	{}

For nNFs	:=	1	To Len(aNFs)
	If cPaisLoc $ "MEX|PER"
		aRegFIE := {}
		lRegFIE := {}
		RegFR3(aNFs[nNFs])
	EndIf
	If (lLancPad10 .or. lLancPad20) .And. aParams[24] == 1
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³  Posiciona numero do lote para lancamentos do fatur. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SX5")
		MsSeek(cFilial+"09FAT")

		cLoteFat:=Iif(Found(),Trim(X5Descri()),"FAT ")
		If IsInCallStack("Ma410PvNfs")
			cFunName := FunName()
			SetFunName("MATA410")
			nHdlPrv :=HeadProva(cLoteFat,"MATA468",cUserName,@cArquivo)
			SetFunName(cFunName)
		Else
			nHdlPrv :=HeadProva(cLoteFat,"MATA468",cUserName,@cArquivo)
		EndIf
	EndIf


	If nHdlPrv <= 0
		HELP(" ",1,"HDLNAOGERA")
		Return( .T. )
	EndIf
	cSerie	:=	Alltrim(aNFs[nNFs][3])+Space(3-Len(Alltrim(aNfs[nNfs][3])))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa variaveis de Acumulo de Impostos Vari veis       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nDIf        := 0.00
	nTotMerc    := 0.00
	nTotDesc    := 0.00
	nTotDesBo   := 0.00
	nTotInden 	:= 0.00
	nVarDesc    := 0.00
	nFrete      := 0.00
	nSeguro     := 0.00
	nDespesa    := 0.00
	nDesNTrb    := 0.00
	nTara       := 0.00
	nVlrTot    	:= 0.00
	nVlrDsc    	:= 0.00
	nVlrTotal  	:= 0.00
	nVlrDscTot 	:= 0.00
	aFrete		:=	{}
	nl460PBRUTO	:=	0
	nl460PLIQUI	:=	0
	aLivro      := {}
	aUltItem    := {}
	aImpVarSF2  := {}
	aImps       := {}
	aImpVarSD2  := Iif(cPaisLoc<>"PTG",{0,0,0,0,0,{},"",""},{0,0,0,0,0,{},"",0,0,0,0})
	nPrcVen     := 0.00
	nPrcBrut    := 0.00
	aVlrsEdit   := {}
	lEdCelImps := A468EdtVls()

	For nI	:=	1 To Len(aNFs[nNFS][2])  //qtde de itens selecionados
		(cAlias)->(MsGoTo(aNFs[nNFs][2][nI]))

		lTpPedBenf := aNFs[nNFs][12]

		If cPaisLoc <> "PTG"
			//verificar se e consignacao
			If !lEdCelImps
				Aadd(aImps,aClone(aNFS[nNFs,nLenNFS - 6,nI]))
			Else
				Aadd(aImps,aClone(aNFS[nNFs,nLenNFS - 8,nI]))
			EndIf
			If cPaisLoc $ "COL"
				Aadd(aImps[1],aNFS[nNFs,17])
			EndIf
			//verificar se e consignacao
			If !lEdCelImps
				Aadd(aRatDesp,aClone(aNFS[nNFs,nLenNFS - 5,nI]))
			Else
				Aadd(aRatDesp,aClone(aNFS[nNFs,nLenNFS - 7,nI]))
			EndIf
		Else
			Aadd(aImps,aClone(aNFS[nNFs,nLenNFS - 8,nI]))
			Aadd(aRatDesp,aClone(aNFS[nNFs,nLenNFS - 7,nI]))
		Endif
		if lEdCelImps          //Qtde                     Valor Unit. venda          Valot total
			aAdd( aVlrsEdit, { aNFS[nNFs,nLenNFS-8,nI,1], aNFS[nNFs,nLenNFS-8,nI,2], aNFS[nNFs,nLenNFS-8,nI,3] } )
		endif
	Next nI
	nLenAped := Len(aPedDel)
	If cPaisLoc <> "PTG"
		//verificar se e consignacao
		If !lEdCelImps
			aSize(aPedDel,Len(aPedDel)+Len(aNFS[nNFs,nLenNFS - 4]))
			ACopy(aNFS[nNFs,nLenNFS - 4],aPedDel,,,nLenAped + 1)
			nFrete   := aNFS[nNFs,nLenNFS - 3]
			nSeguro  := aNFS[nNFs,nLenNFS - 2]
			nDespesa := aNFS[nNFs,nLenNFS - 1]
		Else
			aSize(aPedDel,Len(aPedDel)+Len(aNFS[nNFs,nLenNFS - 6]))
			ACopy(aNFS[nNFs,nLenNFS - 6],aPedDel,,,nLenAped + 1)
			nFrete   := aNFS[nNFs,nLenNFS - 5]
			nSeguro  := aNFS[nNFs,nLenNFS - 4]
			nDespesa := aNFS[nNFs,nLenNFS - 3]
		EndIf

	Else
		aSize(aPedDel,Len(aPedDel)+Len(aNFS[nNFs,nLenNFS - 6]))
		ACopy(aNFS[nNFs,nLenNFS - 6],aPedDel,,,nLenAped + 1)
		nFrete   := aNFS[nNFs,nLenNFS - 5]
		nSeguro  := aNFS[nNFs,nLenNFS - 4]
		nDespesa := aNFS[nNFs,nLenNFS - 3]
		nDesNTrb := aNFS[nNFs,nLenNFS - 2]
		nTara    := aNFS[nNFs,nLenNFS - 1]
	Endif

	If .T. //nValorMin == 0 .Or. nValorMin <= nTotal

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de entrada antes de comecar a gravar o SF2, solicita³
		//³ do pela KASBA MILENIA do paraguay para escolher a caixa on³
		//³ de sera deposita o pagamento no caso seja a Vista. Bruno  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("M468CAIX")
			aCaixaFin	:=	ExecBlock("M468CAIX",.F.,.F.)
		Else
			aCaixaFin	:= {}
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Obter o pr¢ximo numero da Nota Fiscal baseando se Serie   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cSerie	:= aNfs[nNfs][3]
		cNumero := LocConvNota(aNfs[nNfs][4],TamSX3("F2_DOC")[1])
		If cPaisloc == "RUS"
			If ValType(aDTSaida[nNFs]) == "C"
				dDTSaida := CTOD(aDTSaida[nNFs])
			ElseIf ValType(aDTSaida[nNFs]) == "D"
				dDTSaida := aDTSaida[nNFs]
			Else
				dDTSaida := dDataBase
			EndIf
		EndIf
		// Isaac Silva 30/12/09
		// Reserva de numero da nota fiscal
		nQtdeFat := 1   // Qtde de fatura para ser gerada
		If cPaisLoc == "ARG" .and. lProcArg
			If (SFP->(DbSeek(xFilial("SFP") + cFilAnt + cSerie)))
				//qtde de fatura 20/8=2.5 = 3 faturas, 000000000211,000000000212,000000000213
				//a 000000000211 sera a nota gravada com todos os impostos no SF2 e SF3
				// as demais notas gravar sem dados de impostos
				//Se eh 1=Normal 2=Formulario Pre-Impresso
				If SFP->FP_TIPOFOR == "2" .And. SFP->FP_QTDITEM > 0
					If Len(aNFs[nNFS][2]) > SFP->FP_QTDITEM
						nQtdeFat := (Int(Len(aNFs[nNFS][2])/SFP->FP_QTDITEM)+1)
					Else
						nQtdeFat := 1
					Endif
					lProcArg := .T.
				Else
					lProcArg := .F.
				Endif
			Endif
		Endif

		While !a468nChkNum(cNumero,cSerie,.F.,,nQtdeFat)
			cNumero := Soma1(cNumero,nTamNf)
		EndDo
		aNfs[nNfs][4]:=cNumero

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se o usuario tem premissao para alterar o ³
		//³pedido de venda usando campo C5_CATPV              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DBSelectArea("SC5")
		DBSetOrder(1)
		If cPaisLoc <> "BRA" .AND. DBSeek(xFilial("SC5") + SC9->C9_PEDIDO)
			If FieldPos("C5_CATPV") > 0 .AND. !Empty(SC5->C5_CATPV)
				If AliasIndic("AGS") //Tabela que relaciona usuario com os Tipos de Pedidos de vendas que ele tem acesso
					DBSelectArea("AGS")
					DBSetOrder(1)
					If DBSeek(xFilial("AGS") + __cUserId) //Se não encontrar o usuário na tabela, permite ele alterar o pedido
						If !DBSeek(xFilial("AGS") + __cUserId + SC5->C5_CATPV) //Verifica se o usuario tem premissao
							If ASCAN(aSemPermiss, {|x| x == SC9->C9_PEDIDO}) = 0
								AADD(aSemPermiss,SC9->C9_PEDIDO)
							EndIf
							Loop
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf

		aAreaAtu := GetArea()
		dbSelectArea("SX5")
		If cPaisLoc = "ARG" .And. AllTrim(FunName())$"MATA461|MATA465N|MATA467N|MATA468N"
			IF MsSeek(xFilial("SX5")+"01"+AllTrim(cSerie)+cIdPV)
				lEncontra := .T.
			EndIf
		ElseIf !lSeqEspecie
		   If MsSeek(xFilial("SX5")+"01"+cSerie)
		   		lEncontra := .T.
		   EndIf
		Else
		   cTipoNF := aNfs[nNfs][11]
		   IF MsSeek(xFilial("SX5")+"AC"+cTipoNF+cSerie)
		   		lEncontra := .T.
		   EndIf
		EndIf

		If cNumero >= LocConvNota(Alltrim(X5_DESCRI),TamSX3("F2_DOC")[1])
			If InTransact()
				RecLock("SX5",.F.)
			Else
				MsRLock()
			EndIf
			If cPaisLoc == "ARG" .and. lProcArg
				// Isaac 09/01/2010 liberar o proximo numero de faturas para ser usado por outra estacao
				If lEncontra
					cFatNum := strZero((val(cNumero)-1)+(nQtdeFat),TamSX3("F2_DOC")[1])
					cFatNum := Soma1(cFatNum,TamSX3("F2_DOC")[1])
					//Verifica si existe el número de documento en la tabla SF2, si existe, asigna el número siguiente.
					If !Empty(cSerie) .And. !Empty(cPontoVend) .And. FindFunction("ANumExis")
						While ANumExis(cSerie,cFatNum,cPontoVend) 
							cFatNum:= Soma1(cFatNum,TamSX3("F2_DOC")[1])
						EndDo
					EndIf
					Replace X5_DESCRI  with cFatNum
					Replace X5_DESCSPA with cFatNum
					Replace X5_DESCENG with cFatNum
				EndIf
			Else
				If lEncontra
					Replace X5_DESCRI  with Soma1(cNumero,TamSX3("F2_DOC")[1])
					Replace X5_DESCSPA with Soma1(cNumero,TamSX3("F2_DOC")[1])
					Replace X5_DESCENG with Soma1(cNumero,TamSX3("F2_DOC")[1])
				EndIf
			Endif
			If !InTransact()
				SX5->(MsRUnLock())
				If (cPaisLoc == "RUS")
					FWPutSX5("TRANSL", "01", cSerie, Soma1(cNumero,TamSX3("F2_DOC")[1]), Soma1(cNumero,TamSX3("F2_DOC")[1]), Soma1(cNumero,TamSX3("F2_DOC")[1]), Soma1(cNumero,TamSX3("F2_DOC")[1]))
				Endif
				IF cPaisLoc $ "EUA|PER|EQU|MEX|COL" .and. X5DESCRI() <> Soma1(cNumero,TamSX3("F2_DOC")[1])
					X5Descri(,,,,.F.)
				EndIF
			EndIf
		Endif

        If cPaisLoc == "SAL" .And. lLimMax .And. AllTrim(cNumero) == Repl("9",TamSx3("L1_DOC")[1])
           nRegSX5  := Recno()
           cTipoDoc := Substr(SX5->X5_CHAVE,1,1)
           cSerAtu  := Substr(SX5->X5_CHAVE,2,2)
           //Cria nova serie caso tenha atingido a numeracao maxima
           If LjCriaSerie(cSerAtu,cTipoDoc)
              //Exclui o registro do SX5 da serie anterior
              LjCriaSerie(@cSerAtu,cTipoDoc,nRegSX5)
           EndIf
        EndIf
		RestArea(aAreaAtu)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		PcoIniLan("000362")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Determina inicio do bloco de Transacao...				 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Begin Transaction
			lFaturado := Iif(!lPedidos.And.lConsig,A468RemEnt(aNFs[nNFs],oProcess),.T.)
			lAchouf3l:=.t.
			If  SF1->(ColumnPos("F1_FORMLIB")) > 0 .and.  SF2->(ColumnPos("F2_FORMLIB")) > 0.and.  SF3->(ColumnPos("F3_FORMLIB")) > 0
				cFormLib:=PesqForm()
				lAchouf3l:= VldFormL(cFormLib)
				If lAchouf3l
					ATuTabFL(cFormLib)
				Else
					lFaturado:=.F.
				EndIf

			EndIf
			If lFaturado .And. ExistBlock("M460IMPF")
				lRetImpF := .T.
				//³ Ponto de Entrada para Impressora Fiscal³
				aRetImpFis := ExecBlock("M460IMPF",.F.,.F.)
				cNumero  := aRetImpFis[1]
				lRetImpF := aRetImpFis[2]
				If lRetImpF == .F.
					lFaturado := .F.
				EndIf
			EndIf

			If lFaturado

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de entrada para ajustar a ordem para gravacao dos itens da NF.³
				//³ aNFS[nNFs][2] = Recno SC9 e aNFS[nNFs][5] =  recno() TRB.           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ExistBlock("a468nORD")
					aNFs[nNFS] := ExecBlock("a468nORD",.F.,.F.,aNFS[nNFs])
				EndIf
				nPosCols := 0
				If !lMSAuto
					oProcess:SetRegua2(Len(aNFs[nNFs][2]))
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³A partir daqui, o SD2 e SF2 do remito de origem, nao devem ser refereciados diretamente³
				//³e sim usando as rotinas GetSF2 e GetSD2, pois já começaram a ser gravados os dados     ³
				//³da nota fiscal e por isto estas tabelas estarão desposionadas.                         ³
				//³BRUNO 25/06/2002                                                                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				For nItem	:=	1	To	Len(aNFs[nNFs][2])
					//Posicionar no registro que corresponde
					(cAlias)->(MsGoTo(aNFs[nNFs][2][nItem]))
					nQtdItem ++
					//Carregar os dados do SF2 e SD2 (do remito) nos arrays aSD2 e aSF2
					SetSD2SF2()

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Posicionar os arquivos para que a a468nGravD2()   ³
					//³ todos os arquivos posicionados...                 ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lTpPedBenf
						SA2->( dbSetOrder(1) )
					Else
						SA1->( dbSetOrder(1) )
					Endif
					SC6->( dbSetOrder(1) )
					SC9->( dbSetOrder(1) )
					SC5->( dbSetOrder(1) )

					If lPedidos
						SC5->( MsSeek(xFilial("SC5")+ SC9->C9_PEDIDO) )
						If lTpPedBenf
							SA2->( MsSeek(xFilial("SA2")+ SC9->C9_CLIENTE+SC9->C9_LOJA) )
						Else
							SA1->( MsSeek(xFilial("SA1")+ SC9->C9_CLIENTE+SC9->C9_LOJA) )
						Endif
						SC6->( MsSeek(xFilial("SC6")+ SC9->C9_PEDIDO+SC9->C9_ITEM+SC9->C9_PRODUTO) )
					Else
						If !Empty((cRem)->D2_PEDIDO)
							SC5->( MsSeek(xFilial("SC5")+(cRem)->D2_PEDIDO) )
							SC9->( MsSeek(xFilial("SC9")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_SEQUEN+(cRem)->D2_COD) )
							SC6->( MsSeek(xFilial("SC6")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_COD) )
						Endif
						If lTpPedBenf
							SA2->( MsSeek(xFilial("SA2")+(cRem)->D2_CLIENTE+(cRem)->D2_LOJA) )
						Else
							SA1->( MsSeek(xFilial("SA1")+(cRem)->D2_CLIENTE+(cRem)->D2_LOJA) )
						Endif
					Endif

					If GetMv("MV_MOEDTIT") != "S"
						nDuplIf := 1
					Else
						If nTipoGer== 1
							nDuplIf := Iif(SC5->C5_MOEDA > 1,Iif(lPedidos,SC5->C5_MOEDA,GetSF2('F2_MOEDA')),nDuplIf)
						Else
							nDuplIf := nMoedSel
						EndIf
					EndIf

					If cPaisLoc == "PER" .AND. lTrb
						aAdd(aRNo, TRB->RECNO )
					EndIf

					If nItem == 1
						If !lMSAuto
							oProcess:IncRegua1(STR0141+cSerie+" "+cNumero) //'Generando factura '
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Variaveis para controle de comissoes                 ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						aVend:={}
						For nVend:= 1 to Fa440CntVen()
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³   ESTRUTURA DO ARRAY DE COMISSOES DE VENDEDORES      ³
							//³                                                      ³
							//³  aVend[n][1]   -> Vendedor                           ³
							//³  aVend[n][2]   -> % comissao                         ³
							//³  aVend[n][3]   -> Valor total                        ³
							//³  aVend[n][4]   -> % para baixa                       ³
							//³  aVend[n][5]   -> % para emissao                     ³
							//³  aVend[n][6]   -> Valor base comissao                ³
							//³  aVend[n][7]   -> Valor base total                   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						    //³ De acordo com comentario no programa FINA440, o campo  ³
						    //³ E1_COMIS nao deve ser considerado se houver NF para o  ³
						    //³ titulo. Na geracao de NF a partir de Remitos sem Pedido³
						    //³ eh gravado como 0(zero). Neste caso, o percentual da   ³
						    //³ comissao eh gravado no proprio item da NF(D2_COMISn)   ³
						    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If Empty(GetSD2('D2_PEDIDO')) .And. !lPedidos
							   AADD(aVend,{ GetSF2('F2_VEND'+Str(nVend,1)),0} )
							Else
							   AADD(aVend,{ SC5->&(EVAL(bVend,nVend)),SC5->&(EVAL(bComis,nVend)) } )
							EndIf
						Next nVend
						a468nGravF2( .T.,,,,,,, @aAtuSC5,,, aRecs, lProcArg, nQtdeFat ,nNfs, aNfs, cFilSFB, aFacs)
					Endif
					If !lMSAuto
						oProcess:IncRegua2()
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Quebra Fatura por n£mero de Itens ou numero de    ³
					//³ Grupos...                                         ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nPosCols++
					lUltimoItem := (nPosCols == Len(aNFs[nNFs][5]))
					nNFBon := nNFS
					a468nGravD2(@aLivro,@nl460PBRUTO,@nl460PLIQUI,nPosCols,lUltimoItem,aVlrsEdit,@nVTotUSD)

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualizar arquivo de trabalho                     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lTrb
						a468nAtuTRB(aNFS[nNFs][5][nItem])
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualizar arquivos SC5,SC6,SC9,SD2                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					a468nGravRE(cNumero,cSerie,@aAtuSC5)

					If nItem == Len(aNFs[nNFs][2])
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gravar os campos de totais,bases e valores dos impostos  ³
						//³ correspondentes a Factura...                             ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If  SF2->(ColumnPos("F2_FORMLIB")) > 0
							RecLock("SF2",.F.)
							Replace F2_FORMLIB    With cFormLib
							MsUnLock()

						EndIf
						a468nGravF2( .F., @aLivro, @nl460PBRUTO, @nl460PLIQUI, nFrete, nSeguro, nDespesa, @aAtuSC5, nDesNTrb, nTara, aRecs, lProcArg, nQtdeFat, , , cFilSFB, aFacs)

						If !Empty(aNFs[nNFs][9]) .Or. !Empty(aNFs[nNFs][8])
							lMudou			:=	.T.
						Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Atualiza o orcamento do Televendas, se foi originado a partir³
						//³dele no modulo Call Center (SIGATMK)                         ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						TkAtuTlv(SC9->C9_PEDIDO,3,SC9->C9_NFISCAL,SC9->C9_SERIENF,dDataBase)

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Ponto de Entrada apos Gravacao (ExecBlock)               ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ExistBlock("M460FIM")
							ExecBlock("M460FIM",.F.,.F.)
						EndIf
					Endif
				Next nItem
				If lComExt
					RecLock("SF2", .F.)
					SF2->F2_TOTUSD := nVTotUSD
					SF2->(MsUnlock())
					nVTotUSD := 0
				EndIf
			EndIf
			If cPaisLoc == "URU"
				FGrvSFE("3",aDadSFE)
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Determina fim do bloco de Transacao...					 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			// Para Paraguay se activa ventana de registro de PAGOS cuando la factura es de contado
			If cPaisLoc == "PAR" .and. lGerarCFD .and. SE4->E4_BXTITAV == "1"
				M486PAGOS(SF2->F2_ESPECIE, SF2->F2_DOC, SF2->F2_SERIE,SF2->F2_CLIENTE,SF2->F2_LOJA,SF2->F2_COND,SF2->F2_VALBRUT,4)
			EndIf
			//Facturacion Online Bolivia
			If cPaisLoc == "BOL" .and. lGerarCFD .and. FindFunction("FACTONBOL")
				FACTONBOL("SF2")
			EndIf
		End Transaction
		//****************88
		//IMPRIMIR CERTIFICADO
		//********************8
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tira os Locks dos regitros já faturados...				 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lFaturado
			For nLocks	:=	1	To	Len(aNFs[nNFs][2])
				(cAlias)->(MsGoTo(aNFs[nNFs][2][nLocks]))
				(cAlias)->(MsUnlock())
				If lTrb
					nPosLock	:=	Ascan(aRecnoTRB,(cAlias)->(Recno()))
					If nPosLock > 0
					   Adel(aRecnoTRB,nPosLock)
					   aSize(aRecnoTRB,Len(aRecnoTRB)-1)
					EndIf
				Endif
			Next nLocks
		EndIf
	Endif
	//mudo de nota
	If (lLancPad10.or.lLancPad20) .And. aParams[24] == 1
		RodaProva(nHdlPrv,nTotal)
		If ( FindFunction( "UsaSeqCor" ) .And. UsaSeqCor() )
			aCtbDia := {{"SF2",SF2->(RECNO()),cCodDiario,"F2_NODIA","F2_DIACTB"}}
		Else
    		aCtbDia := {}
		EndIf
		cA100Incl(cArquivo,nHdlPrv,3,cLoteFat,lDigita,lAglutina,,,,,,aCtbDia)
		If nTotal > 0
			RecLock( "SF2",.F. )
			Replace F2_DTLANC    With Iif(lGeraLanc,dDataBase,ctod("  /  /  "))
			MsUnLock()
		EndIf

	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Finaliza a gravacao dos lancamentos e apaga lancamentos nao utilizados gerados no SIGAPCO ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoFinLan("000362")

	//Metrica para informar el número de items de la factura automatica
	If LibMet468n()
		cIdMetric   := "faturamento-protheus_facturacionprotheus_mediaitenesfacturasalidaautomatica_average_average"
		cSubRutina  := "mata468n-media-items-"
		cSubRutina	+= Iif(lPedidos, "pedidos", "remitos")
		If isBlind()
			cSubRutina  += "-auto"
		EndIf
		FWCustomMetrics():setAverageMetric(cSubRutina, cIdMetric, Len(aNFs[nNFs][2]), /*dDateSend*/, /*nLapTime*/,"MATA468N")
	EndIf

Next nNFs
//Libera os codigos reservados pela LockByName
For nX := 1 To Len(__aCodes)
	UnLockByName(__aCodes[nX][1],.T.,!Empty(xFilial("SF2")),.T.)
	UnLockByName(__aCodes[nX][2],.T.,!Empty(xFilial("SF1")),.T.)
Next nX

If lMudou
	a468nNotas(aNFs,.F.,.T.,.F.,,,nQtdeFat)
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia para Lancamento Contabil, se gerado arquivo    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (lLancPad10.or.lLancPad20) .And. aParams[24] == 2
	RodaProva(nHdlPrv,nTotal)
EndIf

If !lGeraLanc
	lLancPad10:=.F.
	lLancPad20:=.F.
EndIf

If cPaisLoc=="ARG"
	cPerg1:=MV_PAR01
EndIf

//Gerar os Pedidos para administracao de remision futura. Bruno
For nX	:=	1	To	Len(aNotas)
	If Len(aNotas[nX][2]) > 0
		If Empty(cTesPend)
			cTesPend	:=	DlgTESPend()
			If Empty(cTesPend)
				Exit
			Endif
		Endif
		SF2->(MsGoTo(aNotas[nX][1]))

		AAdd(aPeds,	A468RemFut(aNotas[nX][2],cTesPend))
	Endif
Next nX
If Len(aPeds) > 0
	DEFINE MsDialog  oDlgPed FROM  91,61 To 400,635  Title OemToAnsi(STR0142) PIXEL //'Pedidos generados'

	@ 03,05 To 130,280 PIXEL of oDlgPed
	oLBx := TWBrowse():New( 07,07,270,120,,{STR0048,STR0043,STR0028,STR0051,STR0050},{35,35,18,18,35},	oDlgPed,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
	oLbx:SetArray(aPeds)
	oLbx:bLine:={ || {aPeds[oLbx:nAt,1],aPeds[oLbx:nAt,2],aPeds[oLbx:nAt,3],aPeds[oLbx:nAt,4],aPeds[oLbx:nAt,5]}}

	Define SBUTTON FROM  135,250 Type 1 Of oDlgPed ENABLE Action oDlgPed:End()
	Activate Dialog oDlgPed CENTERED
Endif

If cPaisLoc=="ARG"
	MV_PAR01:= cPerg1
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia para Lancamento Contabil, se gerado arquivo    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (lLancPad10.or.lLancPad20) .And. aParams[24] == 2
	cA100Incl(cArquivo,nHdlPrv,3,cLoteFat,lDigita,lAglutina)
	If nTotal > 0
		RecLock( "SF2",.F. )
		Replace F2_DTLANC    With Iif(lGeraLanc,dDataBase,ctod("  /  /  "))
		MsUnLock()
	EndIf
EndIf

dbCommitAll()
aHeadSF1	:=	Nil
aHeadSD1	:=	Nil

a468LibPed()

If ExistBlock("M468NGRV")
   ExecBlock("M468NGRV",.F.,.F.,{aPeds})
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Geracao de faturas eletronicas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lGerarCFD .And. !Empty(aDocElet) .And. cPaisLoc <> "EQU"
	Processa({|| a468DocEle(aDocElet, (cPaisLoc == "MEX" .And. (lLancPad10 .Or. lLancPad20) .And. aParams[24] == 1))})
Endif

#IFDEF TOP
	If SuperGetMV("MV_DEL_PVL")<>3
		For nI:=1 To Len(aPedDel)
			cQuery := "DELETE FROM "+RetSqlName("SC9")+" "
			cQuery += "WHERE C9_FILIAL='"+xFilial("SC9")+"' AND "
			cQuery += "C9_PEDIDO='"+aPedDel[nI]+"' AND "
			If SuperGetMV("MV_DEL_PVL")==1
				cQuery += "((C9_BLCRED = '10' AND C9_BLEST='10') OR D_E_L_E_T_='*' )"
			Else
				cQuery += "D_E_L_E_T_='*' "
			EndIf
			If cPaisloc == "RUS"
				TcSqlExec(ChangeQuery(cQuery))
			else
				TcSqlExec(cQuery)
			ENDIF
		Next
	Endif
#ENDIF
aRNo	:= {}
//Verifica se houve algum Pedido que não foi gerado devido a falta de permissão pelo campo C5_CATPV
If Len(aSemPermiss) > 0
	For nI = 1 To Len(aSemPermiss)
		cSemPermiss += aSemPermiss[nI]
		If nI < Len(aSemPermiss)
			cSemPermiss += ", "
		EndIf
	Next
	Alert(STR0222 + " (" + cSemPermiss + ") " + STR0223)//"As notas Fiscais {" + cSemPermiss + "} não puderam ser geradas porque esse usuário não tem permissão para gerar Notas Fiscais com esse tipo."
EndIf

Return aClone(aNFs)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468DOCELEºAutor  ³Marcello            ºFecha ³ 23/12/2005  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468DocEle(aDE, lActCTB)
Local nX 	:= 0, nI := 0
Local lGera := .T.
Local aAreaSF2	:= SF2->(GetArea("SF2"))
Local cFilSF2	:= xFilial("SF2")
Local cKeyCT2	:= ""
Local lOK		:= .T.

If aGerarCFD[1] == "1"
	If !MsgYesNo(STR0191)  //"Confirma a geracao do comprovante fiscal eletronico ?"
		aDE := {}
	Endif
Endif
SF2->(dbSetOrder(2)) // F2_FILIAL+F2_CLIENTE+F2_LOJA+F2_DOC+F2_SERIE+F2_TIPO+F2_ESPECIE
nX := 0
nI := Len(aDE)
While nX < nI
	nX++
	IncProc(STR0192+aDE[nX][5]+" "+aDE[nX][4])  //"Gerando comprovante fiscal eletronico "
	If !CFDGerXML(aDE[nX][1],aDE[nX][2],aDE[nX][3],aDE[nX][4],aDE[nX][5],.F.,.F.,.T.)
		nX := nI
		lOK := .F.
	ElseIf lActCTB
		If SF2->(MsSeek(cFilSF2+aDE[nX][2]+aDE[nX][3]+aDE[nX][4]+aDE[nX][5]+aDE[nX][6]+aDE[nX][1]))
			cKeyCT2 := &(aKeyCTL[1] + "->(" + aKeyCTL[2] + ")" )
			AtuCTBFF({cKeyCT2}, SF2->F2_UUID)
		EndIf
	Endif
Enddo

SF2->(RestArea(aAreaSF2))

If ExistBlock("M468DOCE")
   ExecBlock("M468DOCE",.F.,.F.,{lGera})
Else
	If __lPyme .And. ExistBlock( "M468S3DE" , .F. , .T. )
		Execblock( "M468S3DE" , .F. , .F. )
	EndIf
EndIf

If lActCTB .And. !lOK
	MsgAlert(STR0241,STR0186)	//"Al no generar/timbrar el(los) CFDI, queda pendiente de actualizar el folio fiscal en los asientos contables hasta realizar el timbrado." ## "Comprobantes Fiscales Digitales"
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A460GeraF2³ Autor ³ Claudinei M. Benzi    ³ Data ³ 11.02.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gera Registros em Sf2 e acumula valores                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA460                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nGravF2( lAppend, aLivro, nl460PBRUTO, nl460PLIQUI, nFrete, nSeguro, nDespesa, aAtuSC5, nDesNTrb, nTara, aRecs, lProcArg, nQtdeFat, nPosNF, aNfs, cFilSFB, aFacs)
Local bF2Vend:={|x| "F2_VEND"+Str(x,1) } , bC5Vend:={|x| "C5_VEND"+Str(x,1)  }
Local i,nVlrTotal, nValFat:=0
Local lFreteMoe:= Iif(GetMv("MV_FRETMOE") == "S",.T.,.F.)
Local aRegSE1	:= {}
Local nCntFor	:= 0
Local cPrefixo	:= ""
Local lReutiliza:= GetMv("MV_USAMNUM",,.T.)
Local nX 		:= 0,	 nC := 0,  nVal := 0
Local nDecimais	:= 2
Local nI,nY
Local cAproFol	:= ""
Local cCertFol	:= ""
Local lCfd		:= .F.
Local cCaea	:= ""
Local dCAEAVENC := CTOD("//")
Local aRetCF	:= {}
Local aDados	:= {"","","","","",0}
Local nMoeda    := 1
Local nTxMoeda  := 1
//Controle de Folios
Local lContrFol     :=	.F.

Local lRndAng	:= SuperGetMV("MV_RNDANG",,.F.)
Local nArrNF	:= 0
Local nValorBrut := 0
Local nArrDp    := 0
Local nValorDupl := 0
Local nlBaseIGV	    := 0
Local nlBsIGVSF3    := 0
Local nMv_ALQIPM	:= GetNewPar("MV_ALQIPM",0)
Local alAreaX
Local alAreaY
Local nPosTesX
// Isaac Silva 06/01/10
Local nZ         := 0
Local cDoc1      := 0
Local cDoc2      := " "
Local cGrpTrib	 := " "
Local areaAtu	 := {}
//
Local cNCF       := "" //NCF Loc. Rep. Dominicana
Local lSer2        := Iif(cPaisLoc $ "PER|COL" .And. SF3->(FieldPos("F3_SERIE2")) <> 0,.T., .F.)
Local aAreaSD2     := {}
Local nValadiD2    := 0
Local cProvFE      := GETMV("MV_PROVFE",.F.,"")
Local aDatosSFP    := {}
Local cF2TpDoc	:= ""

Local nMv_Cent	:= 0
Local nMoedCent := 0
Local lCFDUso   := IIf(Alltrim(GetMv("MV_CFDUSO", .T., "1"))<>"0",.T.,.F.)
Local cCpoIPM   := "3"
Local aInfoSer	:= {}
Local lCancCFDI := (cPaisLoc == "MEX" .And. SF2->(ColumnPos("F2_SERMAN")) > 0 .And. SF2->(ColumnPos("F2_DOCMAN")) > 0)

// Ajuste para tratamiento de Financiero provisional
Local aAreaSE1		:= {}
Local aTitulo		:= {}
Local cFilSE1		:= xFilial("SE1")

Default nDesNTrb := 0
Default nTara    := 0
Default nPosNF   := 0 //Posicao na Array de NF utilizada para recuperar NCF Rep. Dominicana
Default cFilSFB  := xFilial("SFB")
Default aFacs	 := {}

If cPaisLoc == "PER"
	aDatoIPM := a468ImpIPM(xFilial("SFB"))
EndIf

//Ajuste Status NF - mata475
If cPaisLoc == "EUA" .And. !lPedidos .And. SF2->(ColumnPos("F2_STATUSR")) > 0

	RecLock("SF2",.F.)
	Replace F2_STATUSR	With '2'
	MsUnlock()

	aAreaSE1 := SE1->(GetArea())

	DbSelectArea('SE1')
	SE1->(DbSetOrder(2)) //E1_FILIAL+E1_CLIENTE+E1_LOJA+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO
	SE1->(MsSeek(cFilSE1+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_SERIE+SF2->F2_DOC))

	If Found()
		While SE1->(!EOF()) .And. (cFilSE1+SF2->(F2_CLIENTE+F2_LOJA+F2_SERIE+F2_DOC)) == (SE1->(E1_FILIAL+E1_CLIENTE+E1_LOJA+E1_PREFIXO+E1_NUM))
			If SE1->E1_TIPO = 'PRE'
				aTitulo := { { "E1_PREFIXO"  , SE1->E1_PREFIXO				, NIL },;
				{ "E1_NUM"      , SE1->E1_NUM           					, NIL },;
				{ "E1_PARCELA"  , SE1->E1_PARCELA         					, NIL },;
				{ "E1_TIPO"     , SE1->E1_TIPO 	       						, NIL },;
				{ "E1_CLIENTE"  , SE1->E1_CLIENTE          					, NIL },;
				{ "E1_LOJA" 	, SE1->E1_LOJA          					, NIL },;
				{ "E1_EMISSAO"  , SE1->E1_EMISSAO							, NIL },;
				{ "E1_ORIGEM"   , SE1->E1_ORIGEM							, NIL } }
				MsExecAuto( { |x,y| FINA040(x,y)} , aTitulo,5 )  // 3 - Inclusao, 4 - Alteração, 5 - Exclusão
			EndiF
			SE1->(DbSkip())
		EndDo

	EndIf

	RestArea(aAreaSE1)

EndIf

IF cPaisLoc == "VEN"
	lContrFol     := .T.
ElseIf cPaisLoc == "DOM"
	lContrFol     :=	 AllTrim(FunName())$"MATA410|MATA465N|MATA467N|MATA468N" .And. GetNewPar("MV_CTRLFOL",.F.)
ElseIf cPaisLoc <> "ARG"
	lContrFol     :=	 SF1->(FieldPos("F1_NUMAUT")) > 0 .And. SF1->(FieldPos("F1_CODCTR")) > 0 ;
						.And. SF2->(FieldPos("F2_NUMAUT")) > 0 .And. SF2->(FieldPos("F2_CODCTR")) > 0 .And. SF2->(FieldPos("F2_LIMEMIS")) > 0 ;
						.And. SF3->(FieldPos("F3_NUMAUT")) > 0 .And. SF3->(FieldPos("F3_CODCTR")) > 0 ;
						.And. (AllTrim(FunName())$"MATA465N|MATA467N|MATA468N".Or. (cPaisLoc == "BOL" .And. AllTrim(FunName())$"MATA465N|MATA467N|MATA468N|MATA461")) ;
						.And. GetNewPar("MV_CTRLFOL",.F.)

Else
	lContrFol     :=	 AllTrim(FunName())$"MATA465N|MATA467N|MATA468N" .And. GetNewPar("MV_CTRLFOL",.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Geracao de faturas eletronicas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lGerarCFD
	SFP->(DbSetOrder(1))
	If (SFP->(DbSeek(xFilial("SFP") + cFilAnt + cSerie)))
		// Busca posicao da descricao da especie da nota no combo da tabela SFP (1=NF;2=NCI;3=NDI;4=NCC;5=NDC)
		SX3->(dbSetOrder(2))
		SX3->(dbSeek("FP_ESPECIE"))
		nPosIni := At(AllTrim(cEspecie),AllTrim(SX3->X3_CBOX))
		cCombo := Substr(AllTrim(SX3->X3_CBOX),nPosIni-2,1)

		// Verifica se a nota selecionada esta dentro de algum range cadastrado
		// Necessario em caso de existir mais de um range com a mesma serie
		While SFP->FP_FILIAL+SFP->FP_FILUSO+SFP->FP_SERIE == xFilial("SFP")+cFilAnt+cSerie
			If AllTrim(SFP->FP_ESPECIE) == AllTrim(cCombo)
				If Val(cNumero) >= Val(SFP->FP_NUMINI) .And. Val(cNumero) <= Val(SFP->FP_NUMFIM)
					Exit
				Endif
			EndIf
			SFP->(dbSkip())
		EndDo
		lCfd := .T.
	Else
		lCfd := .F.
	Endif
	If !(cPaisLoc $ "BOL|PAR")
		cAproFol := SFP->FP_CAI
	    cCertFol := SFP->FP_NRCERT
    Endif
Endif

If lAppend
	nTotImpues	:=	0
	aAtuSC5	:=	{}
	nAcresTot := 0

	nMoeda   := IIF(lPedidos ,SC5->C5_MOEDA,GetSF2('F2_MOEDA'))
	nTxMoeda := IIF(lPedidos ,SC5->C5_TXMOEDA,GetSF2('F2_TXMOEDA'))
	//Alexandra Menyashina (14/05/18): Date for moeda is taken in Sales Invoice (Only for Russia)
	If cPaisloc	==	"RUS"
		nTaxamoeda	:= RecMoeda(dDTSaida,nMoeda)
	Else
		A468TxMoed(@nTaxamoeda,nMoeda,nTxMoeda,lPedidos,cAltTx,nMoedSel,nTipoGer,aTxMoedas)
	EndIf
	nMoedaOrig := nMoeda

	nValMerc    := 0
	nBaseDup    := 0
	nTotBaseImp := 0
	nValFat     := 0
	nItemValTot := 0

	aImpVarSF2 := {}
	aImpVarSD2 := Iif(cPaisLoc<>"PTG",{0,0,0,0,0,{},"",""},{0,0,0,0,0,{},"",0,0,0,0})
	aImpVarDup := {}

	nl460PBRUTO := 0
	nl460PLIQUI := 0

	cItemD2     := "00"
	nItemNF     := 1

	cEspecie := MVNOTAFIS
	RecLock("SF2",.T.)
	Replace F2_FILIAL    With xFilial("SF2")
	Replace F2_DOC       With cNumero
	//Gravacao do Campo NCF da Republica Dominicana
	If lContrFol .AND. cPaisLoc == "DOM" .AND. (Trim(cEspecie) $ "NF|NCI|NDI|NCC|NDC")
		cNCF := a468GetNCF(nPosNF)
		//Se houver NCF Gravada
		If cNCF != NIL
			If SF2->(ColumnPos("F2_NCF")) > 0
				Replace F2_NCF WITH cNCF
			EndIf
			If SF2->(ColumnPos("F2_TPDOC")) > 0
				Replace F2_TPDOC WITH SubStr(cNCF,2,2)
			EndIf
		EndIf
	EndIf
	Replace F2_DUPL      With cNumero
	//Replace F2_SERIE     With cSerie
	SerieNfId("SF2",1,"F2_SERIE",dDataBase,cEspecie,cSerie,) //Projeto Chave unica - Tiago Silva
	If cPaisLoc $ "PER|COL|PAR" .and. ColumnPos("F2_SERIE2")
		DbSelectArea("SFP")
		SFP->(DBSETORDER(5))//FP_FILIAL+FP_FILUSO+FP_SERIE+FP_ESPECIE
		IF SFP->(DBSEEK(XFILIAL("SFP")+CFILANT+cSerie+'1'))
      		Replace SF2->F2_SERIE2   With SFP->FP_SERIE2
   		ENDIF
   		DbSelectArea("SF2")
	EndIf
	//---
	If cPaisLoc $ "ARG" .and. SF2->(ColumnPos( "F2_CANJE" )) > 0
    	If lpedidos
			Replace SF2->F2_CANJE   With SC5->C5_CANJE
		Else
			Replace SF2->F2_CANJE   With GetSF2('F2_CANJE')
		EndIf
   	EndIf
	//----
	If cPaisLoc == "PAR"

		If SF2->(ColumnPos("F2_NUMTIM")) > 0
			SFP->(DbSetOrder(5))//FP_FILIAL+FP_FILUSO+FP_SERIE+FP_ESPECIE
			IF SFP->(MsSeek(xFilial("SFP")+CFILANT+cSerie+'1'))
	      		Replace SF2->F2_NUMTIM   With SFP->FP_CAI
	   		ENDIF
	   	EndIF

		If SF2->(ColumnPos("F2_TIPONF")) > 0 .And. SC5->(ColumnPos("C5_TIPONF")) > 0
			If lPedidos
				SF2->F2_TIPONF := SC5->C5_TIPONF
			Else
				SF2->F2_TIPONF := GetSF2('F2_TIPONF')
			EndIf
		EndIf

		If SF2->(ColumnPos("F2_TPTRANS")) > 0 .And. SC5->(ColumnPos("C5_TPTRANS")) > 0
			If lPedidos
				F2_TPTRANS := SC5->C5_TPTRANS
			Else
				F2_TPTRANS := GetSF2('F2_TPTRANS')
			EndIf
		EndIf

		IF SF2->(ColumnPos("F2_VEICULO")) > 0 .And. SC5->(ColumnPos("C5_VEICULO")) > 0
        	If lPedidos
				F2_VEICULO := SC5->C5_VEICULO
			Else
				F2_VEICULO := GetSF2('F2_VEICULO')
			EndIf
        EndIf

		IF SF2->(ColumnPos("F2_FECDSE")) > 0 .And. SC5->(ColumnPos("C5_FECDSE")) > 0
			If lPedidos
				F2_FECDSE := SC5->C5_FECDSE
			Else
				F2_FECDSE := GetSF2('F2_FECDSE')
			EndIf
		ENDIF
		IF SF2->(ColumnPos("F2_FECHSE")) > 0 .And. SC5->(ColumnPos("C5_FECHSE")) > 0
			If lPedidos
				F2_FECHSE := SC5->C5_FECHSE
			Else
				F2_FECHSE:= GetSF2('F2_FECHSE')
			EndIf
		ENDIF

		IF SF2->(ColumnPos("F2_INCOTER")) > 0  .And. SC5->(ColumnPos("C5_INCOTER")) > 0
			If lPedidos
				F2_INCOTER := SC5->C5_INCOTER
			Else
				F2_INCOTER:= GetSF2('F2_INCOTER')
			EndIf
		ENDIF

		IF SF2->(ColumnPos("F2_TPRESFL")) > 0 .And. SC5->(ColumnPos("C5_TPRESFL")) > 0
			If lPedidos
				F2_TPRESFL:= SC5->C5_TPRESFL
			Else
				F2_TPRESFL:= GetSF2('F2_TPRESFL')
			EndIf
		ENDIF

		IF SF2->(ColumnPos("F2_TRANSP")) > 0 .And. SC5->(ColumnPos("C5_TRANSP")) > 0
			If lPedidos
				F2_TRANSP:= SC5->C5_TRANSP
			Else
				F2_TRANSP:= GetSF2('F2_TRANSP')
			EndIf
		ENDIF
		IF SF2->(ColumnPos("F2_MOTEMIR")) > 0 .And. SC5->(ColumnPos("C5_MODTRAD")) > 0
			If lPedidos
				F2_MOTEMIR:= SC5->C5_MODTRAD
			Else
				F2_MOTEMIR:= GetSF2('F2_MOTEMIR')
			EndIf
		ENDIF

	EndIf
	If cPaisLoc == "PER"
		If SF2->(ColumnPos("F2_NUMORC")) > 0 .And. SC5->(ColumnPos("C5_NUMORC")) > 0
			If lPedidos
				SF2->F2_NUMORC := SC5->C5_NUMORC
			Else
				SF2->F2_NUMORC := GetSF2('F2_NUMORC')
			EndIf
		EndIf
		If SF2->(ColumnPos("F2_TIPONF")) > 0 .And. SC5->(ColumnPos("C5_TIPONF")) > 0
			If lPedidos
				SF2->F2_TIPONF := SC5->C5_TIPONF
			Else
				SF2->F2_TIPONF := GetSF2('F2_TIPONF')
			EndIf
		EndIf
		//Campos para transmisión de Facturas con Detracciones
		If SF2->(ColumnPos("F2_CODDOC")) > 0 .And. SC5->(ColumnPos("C5_CODVGLP")) > 0
			If lPedidos
				SF2->F2_CODDOC := SC5->C5_CODVGLP
			Else
				SF2->F2_CODDOC := GetSF2('F2_CODDOC')
			EndIf
		EndIf
		If SF2->(ColumnPos("F2_MODCONS")) > 0 .And. SC5->(ColumnPos("C5_MODANP")) > 0
			If lPedidos
				SF2->F2_MODCONS := SC5->C5_MODANP
			Else
				SF2->F2_MODCONS := GetSF2('F2_MODCONS')
			EndIf
		EndIf
	EndIf
	If cPaisLoc == "EQU" .And. lPedidos
		If SF2->(ColumnPos("F2_TPVENT")) > 0 .And. SC5->(ColumnPos("C5_TPVENT")) > 0
			SF2->F2_TPVENT := SC5->C5_TPVENT
		EndIf
		//Tipo de Comprobante
		If SC5->(ColumnPos("C5_TIPOPE")) > 0 .And. SF2->(ColumnPos("F2_TIPOPE")) > 0
			SF2->F2_TIPOPE := SC5->C5_TIPOPE
		EndIf
		If !Empty(cProvFE)
			aDatosSFP := M468GETSFP()
			If Len(aDatosSFP) == 2
				SF2->F2_PTOEMIS := aDatosSFP[1]
				SF2->F2_ESTABL  := aDatosSFP[2]
			EndIf
		EndIf
		//Datos Exportacion
		If SC5->(ColumnPos("C5_TPACTIV")) > 0 .And. SF2->(ColumnPos("F2_TPACTIV")) > 0
			SF2->F2_TPACTIV := SC5->C5_TPACTIV
		EndIf
		If SC5->(ColumnPos("C5_REGIME")) > 0 .And. SF2->(ColumnPos("F2_REGIME")) > 0
			SF2->F2_REGIME := SC5->C5_REGIME
		EndIf
		If SC5->(ColumnPos("C5_MUNDESC")) > 0 .And. SF2->(ColumnPos("F2_MUNDESC")) > 0
			SF2->F2_MUNDESC := SC5->C5_MUNDESC
		EndIf
		If SC5->(ColumnPos("C5_CMUNDE")) > 0 .And. SF2->(ColumnPos("F2_CMUNDE")) > 0
			SF2->F2_CMUNDE := SC5->C5_CMUNDE
		EndIf
		If SC5->(ColumnPos("C5_DOCMAN")) > 0 .And. SF2->(ColumnPos("F2_DOCMAN")) > 0
			SF2->F2_DOCMAN := SC5->C5_DOCMAN
		EndIf
		If SC5->(ColumnPos("C5_LTRAN")) > 0 .And. SF2->(ColumnPos("F2_LTRAN")) > 0
			SF2->F2_LTRAN := SC5->C5_LTRAN
		EndIf
		If SC5->(ColumnPos("C5_TPRENTA")) > 0 .And. SF2->(ColumnPos("F2_TPRENTA")) > 0
			SF2->F2_TPRENTA := SC5->C5_TPRENTA
		EndIf
		If SC5->(ColumnPos("C5_EXPCONF")) > 0 .And. SF2->(ColumnPos("F2_EXPCONF")) > 0
			SF2->F2_EXPCONF := SC5->C5_EXPCONF
		EndIf
		If SC5->(ColumnPos("C5_VALIMPD")) > 0 .And. SF2->(ColumnPos("F2_VALIMPD")) > 0
			SF2->F2_VALIMPD := SC5->C5_VALIMPD
		EndIf
		If SC5->(ColumnPos("C5_TCOMP")) > 0 .And. SF2->(ColumnPos("F2_TCOMP")) > 0
			SF2->F2_TCOMP := SC5->C5_TCOMP
		EndIf
		If SC5->(ColumnPos("C5_FECHSE")) > 0 .And. SF2->(ColumnPos("F2_FECHSE")) > 0
			SF2->F2_FECHSE := SC5->C5_FECHSE
		EndIf
		If SF2->(ColumnPos("F2_PTOEMIS")) > 0 .And. SFP->(ColumnPos("FP_PTOEMIS")) > 0 .And. SF2->(ColumnPos("F2_ESTABL")) > 0 .And. SFP->(ColumnPos("FP_ESTABL")) > 0;
		  .And. SF2->(ColumnPos("F2_NUMAUT")) > 0 .And. SFP->(ColumnPos("FP_NUMAUT")) > 0
		  	aInfoSer := M468InfExp(cFilAnt, cSerie)
			SF2->F2_PTOEMIS := aInfoSer[1]
			SF2->F2_ESTABL := aInfoSer[2]
			SF2->F2_NUMAUT := aInfoSer[1]
		EndIf
		If SC5->(ColumnPos("C5_MODTRAD")) > 0 .And. SF2->(ColumnPos("F2_MODTRAD")) > 0
			SF2->F2_MODTRAD := SC5->C5_MODTRAD 
		EndIf
	EndIf
	//Leandro Prado - 28/02/2014 - Controle de ponto de venda p/ argentina.
	If (cPaisLoc == "ARG")
		Replace F2_PV     With cPontoVend
		Replace F2_RG1415 With LxNFRG1415("SF2", cSerie, cEspecie,cPontoVend,cSerie)
	EndIf

	Replace F2_ESPECIE   With cEspecie
	Replace F2_EMISSAO   With dDataBase
    If SF2->(FieldPos("F2_DTDIGIT"))<> 0
		Replace F2_DTDIGIT   With dDataBase
    EndIf
	If cPaisloc == "RUS"
		Replace F2_DTSAIDA   With dDTSaida
	EndIf
	Replace F2_FORMUL   	With 'S'     //Formulario proprio
	IF Empty(GetSD2('D2_PEDIDO'))  .and.  !lPedidos
		Replace F2_TIPO      With GetSF2('F2_TIPO')
		Replace F2_CLIENTE   With If( lTpPedBenf, SA2->A2_COD   , SA1->A1_COD    )
		Replace F2_LOJA      With If( lTpPedBenf, SA2->A2_LOJA  , SA1->A1_LOJA   )
		Replace F2_COND      With If( lTpPedBenf, SA2->A2_COND  , SA1->A1_COND   )
		Replace F2_TRANSP    With If( lTpPedBenf, SA2->A2_TRANSP, SA1->A1_TRANSP )
		If FieldPos('F2_PROVENT') > 0
			Replace F2_PROVENT    With GetSF2('F2_PROVENT')
		Endif
		If FieldPos('F2_CODMUN') > 0
			Replace F2_CODMUN    With GetSF2('F2_CODMUN')
		Endif
		IF cPaisLoc  == "COL"
			If FieldPos('F2_TPACTIV') > 0
				Replace F2_TPACTIV   With GetSF2('F2_TPACTIV')
			Endif
			If FieldPos('F2_TRMPAC') > 0
				Replace F2_TRMPAC   With GetSF2('F2_TRMPAC')
			Endif
			If SC5->(ColumnPos("C5_TIPOPE")) > 0 .And. SF2->(ColumnPos("F2_TIPOPE")) > 0
				SF2->F2_TIPOPE := SC5->C5_TIPOPE
			EndIf
			If SC5->(ColumnPos("C5_UUIDREL")) > 0 .And. SF2->(ColumnPos("F2_UUIDREL")) > 0
				SF2->F2_UUIDREL := SC5->C5_UUIDREL
			EndIf
		EndIf
	    If cPaisLoc == "EUA"
			If SF2->(ColumnPos( "F2_TPACTIV" )) > 0
				Replace F2_TPACTIV    With GetSF2('F2_TPACTIV')
			EndIf
			If SF2->(ColumnPos( "F2_ZONGEO" )) > 0
				Replace F2_ZONGEO    With GetSF2('F2_ZONGEO')
			EndIf
		EndIf
	Else
		Replace F2_TIPO      With SC5->C5_TIPO
		Replace F2_CLIENTE   With SC5->C5_CLIENTE
		Replace F2_LOJA      With SC5->C5_LOJACLI
		Replace F2_COND      With SC5->C5_CONDPAG
		Replace F2_TIPOCLI   With SC5->C5_TIPOCLI
		Replace F2_TRANSP    With SC5->C5_TRANSP
		Replace F2_REDESP    With SC5->C5_REDESP

		IF cPaisLoc = "ARG" .AND. SC5->(FieldPos("C5_INCOTER")) > 0 .AND. SC5->(FieldPos("C5_IDIOMA")) > 0 .AND. SC5->(FieldPos("C5_PAISENT")) > 0
			If SC5->C5_INCOTER <> "" .AND. SC5->C5_IDIOMA <> "" .AND. SC5->C5_PAISENT <> ""
				Replace F2_INCOTER	With SC5->C5_INCOTER
				Replace F2_IDIOMA	With SC5->C5_IDIOMA
				Replace F2_PAISENT	With SC5->C5_PAISENT
			ENDIF
		EndIf
		If FieldPos('F2_PROVENT') > 0 .AND. SC5->(FieldPos('C5_PROVENT')) > 0
			Replace F2_PROVENT    With SC5->C5_PROVENT
		Endif
		If FieldPos('F2_CODMUN') > 0 .AND. SC5->(FieldPos('C5_CODMUN')) > 0
			Replace F2_CODMUN    With SC5->C5_CODMUN
		Endif
		If cPaisLoc == "COL"
			If FieldPos('F2_TPACTIV') > 0 .AND. SC5->(FieldPos('C5_TPACTIV')) > 0
				Replace F2_TPACTIV    With SC5->C5_TPACTIV
			EndIf
			If FieldPos('F2_TRMPAC') > 0 .AND. SC5->(FieldPos('C5_TRMPAC')) > 0
				Replace F2_TRMPAC    With SC5->C5_TRMPAC
			EndIf
			If SC5->(ColumnPos("C5_TIPOPE")) > 0 .And. SF2->(ColumnPos("F2_TIPOPE")) > 0
				SF2->F2_TIPOPE := SC5->C5_TIPOPE
			EndIf
			If SC5->(ColumnPos("C5_UUIDREL")) > 0 .And. SF2->(ColumnPos("F2_UUIDREL")) > 0
				SF2->F2_UUIDREL := SC5->C5_UUIDREL
			EndIf
		EndIf
		If cPaisLoc == "EUA"
			If SF2->(ColumnPos( "F2_TPACTIV" )) > 0 .And. SC5->(ColumnPos( "C5_TPACTIV" )) > 0
				F2_TPACTIV := SC5->C5_TPACTIV
			EndIf
			If SF2->(ColumnPos( "F2_ZONGEO" )) > 0 .And. SC5->(ColumnPos( "C5_ESTEMI" )) > 0
				F2_ZONGEO := SC5->C5_ESTEMI
			EndIf
		EndIf
	Endif
	If cPaisLoc $ "EUA|PER|COL|EQU|MEX" .And. SF2->(ColumnPos( "F2_TIPOREM" )) > 0 .And. SC5->(ColumnPos( "C5_TIPOREM" )) > 0
		SF2->F2_TIPOREM := SC5->C5_TIPOREM
	EndIf
	Replace F2_TIPODOC   With Iif(F2_TIPO == "B","11","01")     //Nota Fiscal
	If cPaisLoc == "EUA"
		If SF2->(ColumnPos( "F2_EST" )) > 0 .And. SC5->(ColumnPos( "C5_EST" ))
			F2_EST := SC5->C5_EST
		EndIf
	Else
		F2_EST := If( lTpPedBenf, SA2->A2_EST, SA1->A1_EST )
	EndIf
	Replace F2_TXMOEDA   With nTaxamoeda
	Replace F2_REGIAO    With Posicione("SA1",1,xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA,"A1_REGIAO")

	If SF2->(FieldPos("F2_LIQPROD")) > 0
		If lPedidos .and. SC5->(FieldPos("C5_LIQPROD")) > 0
			Replace F2_LIQPROD With SC5->C5_LIQPROD
		Else
			Replace F2_LIQPROD With GetSF2('F2_LIQPROD')
		EndIf
	EndIf

	If nTipoGer == 1
		IF  !lPedidos  .and. !Empty(GetSF2('F2_MOEDA')) // .and.Empty(GetSD2('D2_PEDIDO'))
			Replace F2_MOEDA	With GetSF2('F2_MOEDA')
		Else
			Replace F2_MOEDA  	With SC5->C5_MOEDA
		EndIf
	Else
		Replace F2_MOEDA	With nMoedSel
	EndIf

	If cPaisLoc == "RUS"
	   F2_CONUNI :=  SC5->C5_CONUNI
	   F2_CNORVEN := SC5->C5_CNORVEN
	   F2_CNORCOD := SC5->C5_CNORCOD
	   F2_CNORBR := SC5->C5_CNORBR
	   F2_CNEECLI := SC5->C5_CNEECLI
	   F2_CNEECOD := SC5->C5_CNEECOD
	   F2_CNEEBR := SC5->C5_CNEEBR
	   F2_F5QUID := SC5->C5_F5QUID
	   F2_CNTID := SC5->C5_F5QCODE
	EndIf

	If cPaisLoc == "ARG"
		If lContrFol .And. SF2->(FieldPos("F2_CAI")) > 0 .And. SF2->(FieldPos("F2_VENCAI")) > 0 .And. SFP->(FieldPos("FP_CAI")) > 0 .And. SFP->(FieldPos("FP_DTAVAL")) > 0
	   		Replace F2_CAI With SFP->FP_CAI
	   		Replace F2_VENCAI With SFP->FP_DTAVAL
	    EndIf
	EndIf
	If cPaisLoc == "PAR" .And. SF2->(ColumnPos("F2_TIPNOTA")) > 0
		Replace F2_TIPNOTA With "01"
	End
	If lPedidos
		//	Se o pedido não utilizou a moeda 1 e a moeda da nota fiscal (F2_MOEDA) for igual a moeda 1.
		If SC5->C5_MOEDA <> 1 .AND. (nTipoGer <> 1 .AND. nMoedSel == 1)

			If SF2->(ColumnPos("F2_REFTAXA")) > 0
				If Alltrim(cAltTx)="0"
					REPLACE F2_REFTAXA	WITH SC5->C5_TXMOEDA
				Else
					REPLACE F2_REFTAXA	WITH nTaxamoeda
				EndIf
			EndIf

			If SF2->(ColumnPos("F2_REFMOED")) > 0
				REPLACE F2_REFMOED	WITH SC5->C5_MOEDA
			EndIf
			Replace F2_TXMOEDA With nMoedSel
		EndIf
		REPLACE F2_TABELA	WITH SC5->C5_TABELA
	Else
		//	Se o remito utilizou a moeda 1.
		If !Empty(GetSF2('F2_MOEDA')) .AND. GetSF2('F2_MOEDA') == 1

			If SF2->(ColumnPos("F2_REFTAXA")) > 0
				If Alltrim(cAltTx)="0"

					REPLACE F2_REFTAXA WITH GetSF2('F2_TXMOEDA')
				Else
					REPLACE F2_REFTAXA 	WITH nTaxamoeda
				EndIf
			EndIf

			If SF2->(ColumnPos("F2_REFMOED")) > 0
				REPLACE F2_REFMOED WITH GetSF2('F2_MOEDA')
			EndIf

		//	Se o remito não utilizou a moeda 1 e a moeda da nota fiscal (F2_MOEDA) é igual a 1.
		ElseIf GetSF2('F2_MOEDA') <> 1 .AND. (nTipoGer <> 1 .AND. nMoedSel == 1)

			If SF2->(ColumnPos("F2_REFTAXA")) > 0

				If Alltrim(cAltTx)="0"
					REPLACE F2_REFTAXA	WITH GetSF2('F2_TXMOEDA')
				Else
					REPLACE F2_REFTAXA	WITH nTaxamoeda
				EndIf
			EndIf

			If SF2->(ColumnPos("F2_REFMOED")) > 0
				REPLACE F2_REFMOED	WITH GetSF2('F2_MOEDA')
			EndIf
			Replace F2_TXMOEDA With nMoedSel
		EndIf
	EndIf

	If Empty(GetSD2('D2_PEDIDO')) .and. !lPedidos
		Replace F2_NATUREZ   With GetSF2('F2_NATUREZ')
	Else
		If cPaisLoc=="EQU"
			Replace F2_NATUREZ   With Posicione("SA1",1,xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA,"A1_NATUREZA")
		Else
			Replace F2_NATUREZ   With SC5->C5_NATUREZ
		Endif
	EndIf

	If cPaisLoc == "PER"
		If SF2->(ColumnPos("F2_TPDOC")) > 0
			If !lPedidos
				cF2TpDoc := GetSF2('F2_TPDOC')
				Replace F2_TPDOC With IIf(!Empty(cF2TpDoc), cF2TpDoc, "01")
			Else
				If SC5->(ColumnPos("C5_TPDOC")) > 0 .And. !Empty(SC5->C5_TPDOC)
					Replace F2_TPDOC With SC5->C5_TPDOC
				Else
					Replace F2_TPDOC With "01"
				EndIf
			EndIf
		EndIf
	EndIf

	If cPaisLoc == "MEX" .And. SF2->(ColumnPos("F2_TPDOC")) > 0
		If !lPedidos
			SF2->F2_TPDOC := GetSF2('F2_TPDOC')
		Else
			If SC5->(ColumnPos("C5_TPDOC")) > 0 .And. !Empty(SC5->C5_TPDOC)
				SF2->F2_TPDOC:=SC5->C5_TPDOC
			EndIf
		EndIf	
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Geracao de faturas eletronicas³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lGerarCFD .And. !(cPaisLoc $ "COL|BOL|PAR")
		Replace F2_APROFOL	With cAproFol
	    Replace F2_CERTFOL	With cCertFol
	    If lCfd
			aAdd(aDocElet,{F2_ESPECIE,F2_CLIENTE,F2_LOJA,F2_DOC,F2_SERIE,F2_TIPO})
		Endif
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Tratamento Nfe Argentina                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc == "ARG" .And. SF2->(FieldPos("F2_TPVENT"))>0 .And. SF2->(FieldPos("F2_FECDSE"))>0 .And. SF2->(FieldPos("F2_FECHSE"))>0 .And.;
		SC5->(FieldPos("C5_TPVENT"))>0 .And. SC5->(FieldPos("C5_FECDSE"))>0 .And. SC5->(FieldPos("C5_FECHSE"))>0
		If lPedidos
			Replace SF2->F2_TPVENT	 With SC5->C5_TPVENT
			Replace SF2->F2_FECDSE	 With SC5->C5_FECDSE
			Replace SF2->F2_FECHSE	 With SC5->C5_FECHSE
		Else
			Replace SF2->F2_TPVENT With GetSF2('F2_TPVENT')
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Complemento Exterior Mexico                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If cPaisLoc == "MEX" .AND. GETMV("MV_CFDIEXP",,.F.) .AND. SC5->(FieldPos("C5_TIPOPE"))>0
		Replace SF2->F2_TIPOPE	 With SC5->C5_TIPOPE
		Replace SF2->F2_CVEPED	 With SC5->C5_CVEPED
		Replace SF2->F2_CERORI	 With SC5->C5_CERORI
		Replace SF2->F2_NUMCER	 With SC5->C5_NUMCER
		Replace SF2->F2_EXPCONF	 With SC5->C5_EXPCONF
		Replace SF2->F2_INCOTER	 With SC5->C5_INCOTER
		Replace SF2->F2_SUBDIV	 With SC5->C5_SUBDIV
		If SF2->(ColumnPos("F2_CONUNI")) > 0
			Replace SF2->F2_CONUNI	 With SC5->C5_CONUNI
		EndIf
		If SF2->(ColumnPos("F2_OBSCE")) > 0
			Replace SF2->F2_OBSCE	 With SC5->C5_OBSERV
		EndIf
		Replace SF2->F2_TCUSD	 With SC5->C5_TCUSD
		Replace SF2->F2_TOTUSD	 With SC5->C5_TOTUSD
		If SF2->(FieldPos("F2_IDTRIB"))>0 .And. SC5->(FieldPos("C5_IDTRIB"))>0
			Replace SF2->F2_IDTRIB	 With SC5->C5_IDTRIB
			Replace SF2->F2_RESIDE	 With SC5->C5_RESIDE
			Replace SF2->F2_TRASLA	 With SC5->C5_TRASLA
			Replace SF2->F2_REGIME	 With SC5->C5_REGIME
		EndIf
	EndIf

	If cPaisLoc == "MEX"//Localizacion MEX
		//Desde la tabla SC5
		If lCancCFDI .And. Len(aFacs) > 0
			// Nuevo proceso de cancelación - Verifica y asigna campos si hay Relación CFDI
			// Ubicar el renglón de aFacs correspondiente con el de aNFS que se procesa
			// Busca por Serie y Factura asignada en interface por si cambió la numeración por duplicidad
			// además de que en a468nGera() se reordena aNFS
			nPosFacs := aScan(aFacs , {|x| x[1]+x[2] == aNFS[nPosNF][3]+aNFS[nPosNF][4]} )
			nLenFacs := Len(aFacs[1])
			If nPosFacs > 0 .And. !Empty(aFacs[nPosFacs][nLenFacs-2])
				SF2->F2_SERMAN  := aFacs[nPosFacs][nLenFacs-3]
				SF2->F2_DOCMAN  := aFacs[nPosFacs][nLenFacs-2]
			EndIf
		EndIf
		If SF2->(FieldPos("F2_RELSAT")) > 0 .And. SC5->(FieldPos("C5_RELSAT")) > 0
			SF2->F2_RELSAT := IIF(lPedidos, SC5->C5_RELSAT, GetSF2('F2_RELSAT'))
		EndIf
		If SF2->(FieldPos("F2_UUIDREL")) > 0 .And. SC5->(FieldPos("C5_UUIDREL")) > 0
			SF2->F2_UUIDREL := IIF(lPedidos,  SC5->C5_UUIDREL, GetSF2('F2_UUIDREL'))
		EndIf
		If SF2->(FieldPos("F2_USOCFDI")) > 0 .And. SC5->(FieldPos("C5_USOCFDI")) > 0
			SF2->F2_USOCFDI := IIF(lPedidos, SC5->C5_USOCFDI, GetSF2('F2_USOCFDI'))
		EndIf
	EndIf

	If cPaisLoc == "BOL" .AND. lCFDUso
		If SF2->(FieldPos("F2_MODCONS")) > 0 .And. SC5->(FieldPos("C5_CODMPAG")) > 0
			Replace SF2->F2_MODCONS With SC5->C5_CODMPAG
		EndIf
		If SF2->(FieldPos("F2_IDRGS")) > 0 .And.  SC5->(FieldPos("C5_NUMTARG")) > 0
			Replace SF2->F2_IDRGS With SC5->C5_NUMTARG
		EndiF
		If SF2->(FieldPos("F2_TPDOC")) > 0 .And. SC5->(FieldPos("C5_TPDOCSE")) > 0
			Replace SF2->F2_TPDOC With SC5->C5_TPDOCSE
		EndiF
		If SF2->(ColumnPos("F2_INCOTER")) > 0 .And. SC5->(ColumnPos("C5_INCOTER")) > 0
			Replace SF2->F2_INCOTER With SC5->C5_INCOTER
		EndIf
		If SF2->(ColumnPos("F2_PAISENT")) > 0 .And. SC5->(ColumnPos("C5_PAISENT")) > 0
			Replace SF2->F2_PAISENT With SC5->C5_PAISENT
		EndIf
		If SF2->(ColumnPos("F2_DESTPOR")) > 0 .And. SC5->(ColumnPos("C5_DESTPOR")) > 0
			Replace SF2->F2_DESTPOR With SC5->C5_DESTPOR
		EndIf
		If SF2->(ColumnPos("F2_DESTPLA")) > 0 .And. SC5->(ColumnPos("C5_DESTPLA")) > 0
			Replace SF2->F2_DESTPLA With SC5->C5_DESTPLA
		EndIf
	EndIf

	If cPaisLoc == "PAR" .And. SC5->C5_PDESCAB <> 0
		nTotDesc :=  (SC6->C6_PRCVEN * SC9->C9_QTDLIB / SC6->C6_QTDVEN) - (SC9->C9_PRCVEN * (1 - (SC5->C5_PDESCAB/100)))
		Replace F2_DESCONT   With (ROUND(nTotDesc,nMv_Cent) * SC9->C9_QTDLIB)
		Replace F2_VALMERC	 With ((SC9->C9_PRCVEN - nTotDesc) * SC9->C9_QTDLIB)
		Replace F2_VALBRUT	 With ((SC9->C9_PRCVEN - nTotDesc) * SC9->C9_QTDLIB)
	EndIf

	MsUnLock()
	If lPedidos
		AAdd(aNotas,{SF2->(Recno()),{}})
	Endif
	If A468EdtVls() .And. nPosNF > 0 .And. !Empty(aNfs)
		Replace SF2->F2_CAE With aNfs[nPosNF][19]
		Replace SF2->F2_CAI With aNfs[nPosNF][20]
	EndIF
Else
	IF cPaisLoc == "PAR"
		nMoedCent := SC5->C5_MOEDA
		If nMoedCent == 1
			nMv_Cent := GetNewPar("MV_CENT",0)
		Else
			nMv_Cent := GetNewPar("MV_CENT"+cValtoChar(nMoedCent),0)
		EndIF
	EndIf
	RecLock("SF2",.F.)

	Replace F2_DUPL      With Iif(!Empty(nBaseDup),cNumero,Space(Len(SF2->F2_DUPL)))
	Replace F2_FRETE     With nFrete
	Replace F2_SEGURO    With nSeguro
	Replace F2_DESPESA   With nDespesa
	If cPaisLoc == "PAR"
	    Replace F2_VALMERC   With nValMerc
		Replace F2_DESCONT   With nDescTotIT
	ElseIf cPAisLoc == "BOL"
		Replace F2_VALMERC  With  nValMerc
		Replace F2_DESCONT  With   nTotDesc

	Else
		Replace F2_VALMERC   With nValMerc - IIf(cPaisLoc == "ARG",nTotDesBo,0)
		Replace F2_DESCONT   With nTotDesc + IIf(cPaisLoc == "ARG",nTotDesBo,0)
	EndIf
	Replace F2_CONTSOC   With nValFun
	Replace F2_PBRUTO    With nl460PBRUTO
	Replace F2_PLIQUI    With nl460PLIQUI
	//Replace F2_SERIORI 	 With aNotaOri[1]
	Iif(!empty(aNotaOri[1]),SerieNfId("SF2",1,"F2_SERIORI",dDataBase,'RET',aNotaOri[1],),aNotaOri[1]) //Projeto Chave Unica - Tiago Silva
	Replace F2_NFORI 	 With aNotaOri[2]
	Replace F2_HORA  	 With Iif(Empty(F2_HORA),Substr(GetRmtTime(),1,8),)
	Replace SF2->F2_TPFRETE With SC5->C5_TPFRETE

	If SF2->(FieldPos("F2_DESCCAB")) > 0
		Replace F2_DESCCAB With nTotInden
	EndIf

	If cPaisLoc == "PTG"
		Replace F2_DESNTRB	With nDesNTrb
		Replace F2_TARA		With nTara
		Replace F2_DECLEXP	With SC5->C5_DECLEXP
	Endif

	If ExistBlock("MTASF2")
		Execblock("MTASF2",.f.,.f.)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava especie e volume                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Verificar
	//	A460GravaEspVol(aEspVol)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava vendedores                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If Empty(GetSD2('D2_PEDIDO')) .And. !lPedidos
	   For nI := 1 to Len(aVend)
		  SF2->&(EVAL(bF2Vend,nI)) := GetSF2('F2_VEND'+Str(nI,1))
	   Next nI
    Else
	   For nI := 1 to Len(aVend)
		  SF2->&(EVAL(bF2Vend,nI)) := SC5->&(EVAL(bC5Vend,nI))
	   Next nI
	EndIf
	If cPaisLoc == "RUS"
		Replace F2_VLBRUTM   With 	nVBruTRUM //ValBrut = TaxBase + TaxValue
		Replace F2_BSIMP1M	 With	nVBasTRUM //TaxBase
		Replace F2_VLIMP1M	 With	nVImpTRUM //TaxValue
		Replace F2_VLMERCM   With   nVMercTRUM //VLMERCM
	EndIf
	MsUnLock()

	If (nBaseDup > 0) .and. (SC5->C5_TIPO<>"B") // Caso seja uma NF de remessa para terceiros nao deve gerar financeiro
		lSim:=.T.
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Quando impostos variaveis nao somar o nValIpi a nBaseDup.           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If cPaisLoc=="ANG" .And. lRndAng

			nValorDupl :=  nBaseDup+nFrete+nSeguro+nDespesa+Iif(cPaisLoc=="PTG",nDesNTrb+nTara,0)

			nArrDp	:= If((nValorDupl - int(nValorDupl)) >= 0.01, 1.0, 0.0)

		   	nValorDupl := int(nValorDupl) + nArrDp

	        nValFat := a468nDupl(nValorDupl,SF2->F2_COND,nTotDesc,@aRegSE1,@cPrefixo,dDataBase)

		Else
			nValFat := a468nDupl( nBaseDup+(Iif(cPaisloc=='PAR',nDescTotIT,0))+nFrete+nSeguro+nDespesa+Iif(cPaisLoc=="PTG",nDesNTrb+nTara,0),SF2->F2_COND,nTotDesc,@aRegSE1,@cPrefixo,dDataBase)
		EndIf
	EndIf

	nDecimais  := MsDecimais(Max(SF2->F2_MOEDA,1))
	RecLock("SF2",.F.)
	Replace F2_VALFAT    With nValFat
	Replace F2_PREFIXO   With cPrefixo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava os Impostos Gerados Atraves da Amarra‡Æo TesXImpostos ³
	//³ em SF2. Considerar a base do imposto para gravar.           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nC := 1 To Len( aImpVarSF2 )
		If Iif(Mod(nC,2)>0,aImpVarSF2[nC+1,2] <> 0,aImpVarSF2[nC,2] <> 0)

			nVal:=fieldget(fieldpos(aImpVarSF2[nC,1]))+aImpVarSF2[nC,2]
			SF2->( FieldPut( FieldPos( aImpVarSF2[nC,1] ),Round(nVal,nDecimais) ) )

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³          TRATAMENTO EXPECIFICO PARA LOCALIZADO PERU                 ³
			//³ Quando o TES for referente ao imposto do IGV, o valor do IPM, o     ³
			//³ qual é uma porcentagem do IGV,o valor da base, aliquota e valor do  ³
			//³ imposto é gravado nos campos _BASIMP3, _ALQIMP3 e VALIMP3.          ³
			//³ O valor da base é a mesma utilizada para o cálculo do IGV.          ³
			//³ O valor da alíqutoa é proveniente de um paramêtro chamado           ³
			//³ MV_ALQIPM.                                                          ³
			//³ O valor do imposto é a multiplicação da base pelo valor da aliquota ³
			//³ NO CASO ABAIXO A BASE DO CAMPO F2_BASIMP1 É RECUPERADA PARA POSTE-  ³
			//³ RIORMENTE SER SALVA NO CAMPO F2_BASIMP3. LEMBRANDO QUE SE HOUVER    ³
			//³ VALOR NA BASIMP1, SIGNIFICA QUE O IMPOSTO IGV FOI CALCULADO.        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If cPaisLoc $ "PER"
				alAreaX := GetArea()

				If Alltrim(aImpVarSF2[nc][1]) $ "F2_BASIMP1" // Valor da base para cálculo do imposto IGV no localizado Peru
					nlBaseIGV := aImpVarSF2[nc][2]
				EndIf

				RestArea(alAreaX)
			EndIf


		EndIf
	Next nC

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³          TRATAMENTO EXPECIFICO PARA LOCALIZADO PERU                 ³
	//³ Quando o TES for referente ao imposto do IGV, o valor do IPM, o     ³
	//³ qual é uma porcentagem do IGV,o valor da base, aliquota e valor do  ³
	//³ imposto é gravado nos campos _BASIMP3, _ALQIMP3 e VALIMP3.          ³
	//³ O valor da base é a mesma utilizada para o cálculo do IGV.          ³
	//³ O valor da alíqutoa é proveniente de um paramêtro chamado           ³
	//³ MV_ALQIPM.                                                          ³
	//³ O valor do imposto é a multiplicação da base pelo valor da aliquota ³
	//³ NO CASO ABAIXO O VALOR DA BASE DO CÁLCULO DO IGV É GRAVADA NO CAMPO ³
	//³ F2_BASIMP3, ASSIM COMO O VALOR DO IMPOSTO CÁLCULADO COM A ALIQUOTA  ³
	//³ PROVENIENTE DO PARAMETRO MV_ALQIPM, PORÉM É FEITA UMA CONDIÇÃO PARA ³
	//³	QUE SOMENTE QUANDO HOUVER CÁLCULO DE IGV SEJA GRAVADO OS CAMPOS     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc $ "PER"	.And. nlBaseIGV > 0
		If !Empty(aDatoIPM[1]) //No. de Libro Fiscal en SFB para IPM
			cCpoIPM := aDatoIPM[1]
		EndIf
		If aDatoIPM[2] > 0 //Alícuota en SFB para IPM
			nMv_ALQIPM := aDatoIPM[2]
		EndIf
		alAreaX := GetArea()
		SF2->( FieldPut( FieldPos( "F2_BASIMP" + Alltrim(cCpoIPM)),Round(nlBaseIGV,nDecimais) ) )
		SF2->( FieldPut( FieldPos( "F2_VALIMP"+ Alltrim(cCpoIPM)),Round(nlBaseIGV*(nMv_ALQIPM/100),nDecimais) ) )
		RestArea(alAreaX)
	EndIf

	For nx:=1 to len(aImps)
		For nC := 1 To Len( aImps[nx][6])
			If SubStr( aImps[nx][6][NC][5],2,1 ) == "1"
				nTotImpues   += Round(aImps[nx][6][nc][4],TamSx3(aImps[nx,6,nC,6],1,3 ) [2] + 1)
			ElseIf SubStr( aImps[nx][6][NC][5],2,1 ) == "2"
				nTotImpues   -= Round(aImps[nx][6][NC][4],TamSx3(aImps[nx,6,nC,6],1,3 ) [2] + 1)
			EndIf
		Next nC
	Next nx
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravar o Valor Bruto...                                     ³
	//³ em SF2                                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc=="CHI"
		Replace F2_VALBRUT   With Round(F2_VALMERC+F2_FRETE+F2_SEGURO+F2_DESPESA,nDecimais)+Round(nTotImpues,nDecimais)
	ElseIf cPaisLoc=="ANG" .And. lRndAng
		nValorBrut := F2_VALMERC+F2_FRETE+F2_SEGURO+F2_DESPESA+Iif(cPaisLoc=="PTG",F2_DESNTRB+F2_TARA,0)+Round(nTotImpues,nDecimais)

		nArrNF	:= If(nValorBrut - int(nValorBrut) >= 0.01, 1.0, 0.0)

		Replace F2_VALBRUT   With  int(nValorBrut) + nArrNF
	Else
		Replace F2_VALBRUT   With F2_VALMERC+F2_FRETE+F2_SEGURO+F2_DESPESA+Iif(cPaisLoc=="PTG",F2_DESNTRB+F2_TARA,0)+Round(nTotImpues,nDecimais) - Iif(cPaisLoc $ "MEX|PER",nValadiIm,0)
	EndIf
	MsUnLock()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Realiza a compensaçao do valor do titulo a vista quando     ³
	//³a condicao de pagto utiliza Adiantamento(exceto para remito)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc == "PER"
		If A410UsaAdi( SF2->F2_COND )
			// Faz a compensacao do titulo no Financeiro
			a468NCompAd(aAtuSC5, aRegSE1,,aRecs)
		EndIf
	Else
		If lPedidos .AND. A410UsaAdi( SF2->F2_COND )
			// Faz a compensacao do titulo no Financeiro
			a468NCompAd(aAtuSC5, aRegSE1,,aRecs)
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Gera Codigo de Controle                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lContrFol
		aDados[1] := SF2->F2_SERIE
		aDados[2] := SF2->F2_ESPECIE
		aDados[3] := SF2->F2_DOC
		aDados[4] := Posicione("SA1",1,xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA,"A1_CGC")
		aDados[5] := DtoS(SF2->F2_EMISSAO)
		aDados[6] := Round(SF2->F2_VALBRUT,0)


		RecLock("SF2",.F.)
	   	If cPaisLoc $"MEX|BOL"
			aRetCF := RetCF(aDados)
			SF2->F2_NUMAUT	:= aRetCF[1]	//Numero de Autorizacao
			SF2->F2_CODCTR	:= aRetCF[2]	//Codigo de Controle
			SF2->F2_LIMEMIS	:= aRetCF[3]	//Data Limite de Emisao
		EndIf
		MsUnLock()
	Endif

	//Verifica se Existe CAEA
	If cPaisLoc == "ARG" .And. FindFunction("VldNFCAEA") .And. SF2->(FieldPos('F2_CAEE')) > 0 .And. SF2->(FieldPos('F2_EMCAEE')) > 0
		if VldNFCAEA(cFilAnt,SF2->F2_SERIE,SF2->F2_DOC, .T. ,SF2->F2_ESPECIE,SF2->F2_EMISSAO,@cCaea,@dCAEAVENC)
			If !Empty(cCaea) .And. !Empty(dCAEAVENC)
				RecLock("SF2",.F.)
				SF2->F2_CAEE	:= cCaea		//Numero de Autorizacao
				SF2->F2_EMCAEE:= dCAEAVENC	//Data de Vencimento da Autorização
				MsUnLock()
			EndIF
		endif

	endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava o Arquivo de Livros Fiscais "SF3" c/Base na nova      ³
	//³ estrutura de gera‡Æo de Livro "aLivro" p/Clientes que utili-³
	//³ zam a Amarra‡Æo TesXImpostos e F¢rmula/Rotina de Apura‡Æo   ³
	//³ do Livro "F4_LIVRO"                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SF3")
	DbSetOrder(5)
	If MsSeek( xFilial("SF3")+SF2->F2_SERIE+SF2->F2_DOC,.F. )
		While xFilial("SF3")+SF2->F2_SERIE+SF2->F2_DOC == F3_FILIAL+F3_SERIE+F3_NFISCAL
			If F3_TIPOMOV <> "V" .Or. Alltrim(F3_ESPECIE)<> Alltrim(SF2->F2_ESPECIE)
				DbSkip()
				Loop
			Else
				If xFilial("SF3")+SF2->F2_SERIE+SF2->F2_DOC == F3_FILIAL+F3_SERIE+F3_NFISCAL
					If !Empty(SF3->F3_DTCANC) .And. lReutiliza
						Reclock("SF3",.F.)
						DbDelete()
						MsUnLock()
					EndIf
				EndIf
				Exit
			EndIf
		Enddo
	EndIf
	For nX := 2 To Len( aLivro )
		RecLock( "SF3",.T. )
		For nY := 1 To Len( aLivro[1] )
			If cPaisLoc == "PER" .AND. FunName()== "MATA468N" .AND. aLivro[1,nY] == "F3_VALCONT"
				SF3->( FieldPut(FieldPos(aLivro[1,nY]),(aLivro[nX,nY] - IIF(SF2->F2_MOEDA==1,nVlrAdiant,xmoeda(nVlrAdiant,SF2->F2_MOEDA,1,ddatabase,aTamSx3Prc[2]+1,SF2->F2_TXMOEDA))) ) )
			Else
				If !(aLivro[1,nY] $ "F3_SERIE|F3_SDOC")
					SF3->( FieldPut(FieldPos(aLivro[1,nY]),aLivro[nX,nY]) )
				EndIf
			EndIf

			If ( SF2->(FieldPos("F2_LIQPROD")) > 0 ) .and. ( SF3->(FieldPos("F3_LIQPROD")) > 0 )

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Forca a gravacao do campo F3_LIQPROD com o conteudo do campo F2_LIQPROD para  ³
				//³compatibilizacao do valor entre estas tabela que deve ser o da SF2.           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nPosTesX := aScan(aFixos,{|x| x[1] == "F3_LIQPROD"})

				If (nPosTesX > 0).and. (aLivro[1,nY]== "F3_LIQPROD")
					SF3->( FieldPut(FieldPos(aLivro[1,nY]),SF2->F2_LIQPROD) )
				EndIf

			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³          TRATAMENTO EXPECIFICO PARA LOCALIZADO PERU                 ³
			//³ Quando o TES for referente ao imposto do IGV, o valor do IPM, o     ³
			//³ qual é uma porcentagem do IGV,o valor da base, aliquota e valor do  ³
			//³ imposto é gravado nos campos _BASIMP3, _ALQIMP3 e VALIMP3.          ³
			//³ O valor da base é a mesma utilizada para o cálculo do IGV.          ³
			//³ O valor da alíqutoa é proveniente de um paramêtro chamado           ³
			//³ MV_ALQIPM.                                                          ³
			//³ O valor do imposto é a multiplicação da base pelo valor da aliquota ³
			//³ NO CASO ABAIXO A BASE DO CAMPO F2_BASIMP1 É RECUPERADA PARA POSTE-  ³
			//³ RIORMENTE SER SALVA NO CAMPO F3_BASIMP3. LEMBRANDO QUE SE HOUVER    ³
			//³ VALOR NA BASIMP1, SIGNIFICA QUE O IMPOSTO IGV FOI CALCULADO.        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If cPaisLoc $ "PER"
				alAreaX := SFC->(GetArea())
				alAreaY := GetArea()
				nPosTesX := aScan(aFixos,{|x| x[1] == "F3_TES"})
				DbSelectArea("SFC")
				DbSetOrder(2)
				If DbSeek(xFilial("SFC")+aLivro[nX][nPosTesX]+"IGV")

					If Alltrim(aLivro[1][nY]) $ "F3_BASIMP1"
						nlBsIGVSF3 := aLivro[nX][nY]
					EndIf

				EndIf
				RestArea(alAreaX)
				RestArea(alAreaY)
			EndIf
		Next
		/*Chave Unica*/
		SerieNfId("SF3",1,"F3_SERIE",,,,SF2->F2_SERIE)
		/*Chave Unica*/

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³          TRATAMENTO EXPECIFICO PARA LOCALIZADO PERU                 ³
		//³ Quando o TES for referente ao imposto do IGV, o valor do IPM, o     ³
		//³ qual é uma porcentagem do IGV,o valor da base, aliquota e valor do  ³
		//³ imposto é gravado nos campos _BASIMP3, _ALQIMP3 e VALIMP3.          ³
		//³ O valor da base é a mesma utilizada para o cálculo do IGV.          ³
		//³ O valor da alíqutoa é proveniente de um paramêtro chamado           ³
		//³ MV_ALQIPM.                                                          ³
		//³ O valor do imposto é a multiplicação da base pelo valor da aliquota ³
		//³ NO CASO ABAIXO O VALOR DA BASE DO CÁLCULO DO IGV É GRAVADA NO CAMPO ³
		//³ F3_BASIMP3, O VALOR DA ALIQUOTA NO CAMPO F3_ALQIMP3 E O VALOR DO    ³
		//³ IMPOSTO F3_VALIMP3.                                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cPaisLoc $ "PER" .And. nlBsIGVSF3 > 0
			If !Empty(aDatoIPM[1]) //No. de Libro Fiscal en SFB para IPM
				cCpoIPM := aDatoIPM[1]
			EndIf
			If aDatoIPM[2] > 0 //Alícuota en SFB para IPM
				nMv_ALQIPM := aDatoIPM[2]
			EndIf
			alAreaX := GetArea()
			SF3->( FieldPut( FieldPos( "F3_BASIMP" + Alltrim(cCpoIPM)),nlBsIGVSF3 ))
			SF3->( FieldPut( FieldPos( "F3_ALQIMP" + Alltrim(cCpoIPM)),nMv_ALQIPM ))
			SF3->( FieldPut( FieldPos( "F3_VALIMP"+ Alltrim(cCpoIPM)),nlBsIGVSF3*(nMv_ALQIPM/100)) )
			nlBsIGVSF3 := 0
			RestArea(alAreaX)
		EndIf

		If (cPaisLoc == "ARG")
			Replace F3_PV With SF2->F2_PV
			Replace F3_RG1415 With SF2->F2_RG1415
		EndIf

		Replace F3_FILIAL  With xFilial("SF3")
		Replace F3_ESPECIE With SF2->F2_ESPECIE
		Replace F3_TIPOMOV With "V"
		Replace F3_FORMUL  With "S"
		// Controle de forma livre - Venezuela
		If   SF2->(ColumnPos("F2_FORMLIB")) > 0 .and.  SF3->(ColumnPos("F3_FORMLIB")) > 0
			Replace F3_FORMLIB With SF2->F2_FORMLIB
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Geracao de faturas eletronicas³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lGerarCFD .And. !(cPaisLoc $ "COL|BOL|PAR")
			Replace F3_APROFOL	With cAproFol
		    Replace F3_CERTFOL	With cCertFol
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tratamento Nfe Argentina                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cPaisLoc == "ARG" .And. SF2->(FieldPos("F2_TPVENT"))>0 .And. SF3->(FieldPos("F3_TPVENT"))>0
			Replace F3_TPVENT	 With SF2->F2_TPVENT
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Grava campos de controle de folios do Uruguai³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lContrFol .And. cPaisLoc $"MEX|BOL"
			SF3->F3_NUMAUT	:= aRetCF[1]	//Numero de Autorizacao
			SF3->F3_CODCTR	:= aRetCF[2]	//Codigo de Controle
		EndIf
		// Isaac Silva 05/01/10 Gravar o numero da nota original agregada
		If cPaisLoc == "ARG" .and. lProcArg
			Replace F3_NFAGREG With SF2->F2_DOC // nf agregada
		Endif
		If lSer2 .AND. cPaisLoc $ "PER|COL"
			SFP->(DBSETORDER(5))//FP_FILIAL+FP_FILUSO+FP_SERIE+FP_ESPECIE
			IF SFP->(DBSEEK(XFILIAL("SFP")+CFILANT+cSerie+'1'))
				Replace F3_SERIE2   With SFP->FP_SERIE2
			ENDIF
		EndIf
		MsUnLock()
		If cPaisLoc == 'EUA' .AND. Alltrim(FunName()) == "MATA468N"
			SF3ZONFIS() // Modifica la zona fiscal
		EndIf
	Next
	// Isaac Silva 05/01/10
	// Gravacao do SF3 de varias faturas sem impostos
	// gravando no SF3->F3_ NFAGREG o numero da nota orignal do SF2->F2_NFAGREG e
	// gravar no SF2->F2_NFAGREG o numero da ultima nota do SF3->F3_NFAGREG
	If cPaisLoc == "ARG" .and. lProcArg
		cDoc1 := Val(SF2->F2_DOC)+1
		For nZ := 2 to nQtdeFat // Qtde de registro(faturas gerada) no SF3
			cDoc2  := StrZero(cDoc1,12)
			cDoc1  := cDoc1+1
			For nX := 2 To Len( aLivro )
				RecLock( "SF3",.T. )
				For nY := 1 To Len( aLivro[1] )
					If     "F3_NFISCAL" == Alltrim(aLivro[1][nY])
						   SF3->( FieldPut(FieldPos(aLivro[1,nY]),cDoc2) )

					ElseIf "F3_OBSERV"  == Alltrim(aLivro[1][nY])
						SF3->( FieldPut(FieldPos(aLivro[1,nY]),"Formulário utilizado para a ") )

					ElseIf "F3_OBSERV2" == Alltrim(aLivro[1][nY])
						SF3->( FieldPut(FieldPos(aLivro[1,nY]),"fatura "+SF2->F2_DOC) )

					ElseIf "F3_VALIMP"  $ Alltrim(aLivro[1][nY])  // Para zerar campos de impostos
						SF3->( FieldPut(FieldPos(aLivro[1,nY]),0) )

					ElseIf "F3_BASIMP"  $ Alltrim(aLivro[1][nY])  // Para zerar campos de impostos
						SF3->( FieldPut(FieldPos(aLivro[1,nY]),0) )

					ElseIf "F3_ALQIMP"  $ Alltrim(aLivro[1][nY])  // Para zerar campos de impostos
						SF3->( FieldPut(FieldPos(aLivro[1,nY]),0) )

					ElseIf "F3_RETIMP" $ Alltrim(aLivro[1][nY])  // Para zerar campos de impostos
						SF3->( FieldPut(FieldPos(aLivro[1,nY]),0) )

					ElseIf "F3_VALCONT" $ Alltrim(aLivro[1][nY])  // Para zerar campos de impostos
						SF3->( FieldPut(FieldPos(aLivro[1,nY]),0) )

					ElseIf "F3_VALMERC" $ Alltrim(aLivro[1][nY])  // Para zerar campos de impostos
						SF3->( FieldPut(FieldPos(aLivro[1,nY]),0) )

					Else
						SF3->( FieldPut(FieldPos(aLivro[1,nY]),aLivro[nX,nY]) )
					Endif

				Next nY
				//
				Replace F3_NFAGREG with SF2->F2_DOC
	            //
				Replace F3_FILIAL  With xFilial("SF3")
				Replace F3_FORMUL  With "S"
				MsUnLock()
			Next nX
		Next nZ
		//
	   	areaAtu:=Getarea()
	   	dbSelectArea("SF2")
		RecLock( "SF2",.F. )
		Replace SF2->F2_NFAGREG With cDoc2
		MsUnLock()
		RestArea(areaAtu)
	Endif
	//
	dbSelectArea("SF2")

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza Cabecalho de Pedido de Venda                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX:=1	To Len(aAtuSC5)
		MaAvalSC5("SC5",5,,,,,,,,aAtuSC5[nX])
	Next
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula a Comissao apos todos os itens terem sido ³
	//³ gravados.                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( GETMV("MV_TPCOMIS") == "O" )
		For nCntFor := 1 To Len(aRegSE1)
			dbSelectArea("SE1")
			MsGoTo(aRegSE1[nCntFor])
			Fa440CalcE("MATA460")
		Next nCntFor
		If ExistBlock("F440COM")
			ExecBlock("F440COM",.F.,.F., aRegSE1)
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Baixar o Titulo quando a Condicao de Pagamento for a  ³
	//³ vista                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aCaixaFin) == 0
	   If nModulo != 12 .OR. nModulo != 72
		  aCaixaFin	:= xCxFina()
	   Else
		   xNumCaixa()
		   aCaixaFin  := {SA6->A6_COD,SA6->A6_AGENCIA,SA6->A6_NUMCON}
	   EndIf
	EndIf

	BaixAutSE1(SF2->F2_COND,aRegSE1,aCaixaFin)      //Funcao da LOCXNF

	dbSelectArea("SF2")

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Para a localizacao Mexico, sera processada a funcao do ponto de entrada SF2460I no padrao.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc == "MEX"
		RcFatMex()
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄ¿
	//³ Pontos de Entrada   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄÙ
	If ExistTemplate("SF2460I")
		ExecTemplate("SF2460I",.f.,.f.)
	EndIf

	If ExistBlock("SF2460I")
		ExecBlock("SF2460I",.f.,.f.)
	EndIf

	If lLancPad20
		nTotal += DetProva(nHdlPrv,"620","MATA468",cLoteFat)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoDetLan("000362","02","MATA468")
EndIf
//Alexandra Menyashina (14/05/18): Value in Main currency (Rubles)
 if cPaisLoc == "RUS"
	F2_BSIMP1M := xMoeda(SF2->F2_BASIMP1,SF2->F2_MOEDA,1,SF2->F2_DTDIGIT,,SF2->F2_TXMOEDA)
	F2_VLIMP1M := xMoeda(SF2->F2_VALIMP1,SF2->F2_MOEDA,1,SF2->F2_DTDIGIT,,SF2->F2_TXMOEDA)
	F2_VLMERCM := xMoeda(SF2->F2_VALMERC,SF2->F2_MOEDA,1,SF2->F2_DTDIGIT,,SF2->F2_TXMOEDA)
	F2_VLBRUTM := xMoeda(SF2->F2_VALBRUT,SF2->F2_MOEDA,1,SF2->F2_DTDIGIT,,SF2->F2_TXMOEDA)
EndIf
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A460GeraD2³ Autor ³ Claudinei M. Benzi    ³ Data ³ 11.02.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gera Registros em SD2 e acumula valores                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA460                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nGravD2(aLivro,nl460PBRUTO,nl460PLIQUI,nPosCols,lUltimoItem,aVlrsEdit,nVTotUSD)
LOCAL cNumSeq	:= ProxNum(), aCM :={}, aCusto :={},nFreteItem:=0
LOCAL nPrcVen	:= 0.00
Local nPrcUni	:= 0.00
LOCAL nQtd2UM	:= 0.00
LOCAL nRegSF4	:= 0.00
LOCAL nC5_Comis	:= {|x| "C5_COMIS"+Str(x,1)}
LOCAL nC6_Comis	:= {|x| "C6_COMIS"+Str(x,1)}
LOCAL nD2_Comis	:= {|x| "D2_COMIS"+Str(x,1)}
LOCAL aMovCQ	:= {}
LOCAL nQtdFat:=0
LOCAL nxIPI		:=0
LOCAL aCusCN	:=	{}
LOCAL nCont := 0 , nX := 0 , nC := 0
LOCAL lDupl		:= .F.
LOCAL cNum
LOCAL aGetBook	:= {}
LOCAL cTes		:= ""
LOCAL cLotCtl,cLotNum,nOrdSD3,nRegSD3
Local nFatorRj	:= 0.00
Local lNoPrUnit := .F.
Local nMoedPar	:= 1   // sera utilizado no Paraguai por causa do arredondamento
Local nI
Local nDescUnit := 0
Local nCntFor
Local i
Local nIndeniz	:= 0
Local lAcresDup	:= ( SuperGetMv("MV_ACRSDUP",.F.,.F.) == .T.)
Local lM468ACRE	:= ExistBlock("M468ACRE")
Local cTpVent 	:= ""
Local dDtIniS	:= CTOD("  /  /  ")
Local dDtFinS	:= CTOD("  /  /  ")
Local nPos := 0
Local nC5Descont := 0
Local nPrcSC9 := 0
Local cTpdpind := GetNewPar("MV_TPDPIND","1")
Local nMv_ALQIPM   := GetNewPar("MV_ALQIPM",0)
Local alAreaX
Local alAreaY
Local cMV_AGENTE  := GetNewPar("MV_AGENTE","   ")
Local lIntACD	:= SuperGetMV("MV_INTACD",.F.,"0") == "1"
Local cMv3668	:= SuperGetMV("MV_CFO3668",.T.,"") // TRSAN1
Local llFlag := .F.
// Indica se o preco unitario sera arredondado em 0 casas decimais ou nao. Se .T. respeita MV_CENT (Apenas Chile).
Local lPrcDec   := SuperGetMV("MV_PRCDEC",,.F.)
Local lDescUser := .F.
Local aEntidades := {}
Local nItemRat   := 0
Local aAreaRat   := {}
Local nEnt       := 0
Local nDeb       := 0
Local nRegFIE	:= 0
Local nValadi	:= 0
Local nDesconto	:= 0
Local nDesBon	:= 0
Local nDescBon	:= 0
Local nTaxMoe	:=0
Local nValAntAcu := 0
Local nTotUSD	:= 0

PRIVATE aCpoSD := Array(17)
Default lUltimoItem := .F.
Default aVlrsEdit   := {}
Default nVTotUSD    := 0
nTaxamoeda 	:= IIf( Type("nTaxamoeda")=="U",0,nTaxamoeda)
nTaxMoe:=nTaxamoeda
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³  Obtem o saldo do CQ antes de gerar a NF             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lPedidos
	If Alltrim(cAltTx)="0"
		nTaxamoeda:=SC5->C5_TXMOEDA
	EndIf
	lMovCQ := SaldoRJCQ(SC6->C6_PRODUTO,SC6->C6_NFORI,SC6->C6_SERIORI,SC5->C5_CLIENTE,SC5->C5_LOJACLI)
	lNoPrUnit := Empty(SC6->C6_PRUNIT)
	nPrcBruto := Iif(!Empty(SC6->C6_PRUNIT),SC6->C6_PRUNIT,SC9->C9_PRCVEN)
	cTES := SC6->C6_TES
	aTamSx3Prc := TamSx3("D2_PRCVEN")
	aTamSx3Tot := TamSx3("D2_TOTAL")
	nQuant :=  SC9->C9_QTDLIB
	nPrcVen := SC9->C9_PRCVEN
	nIndeniz := 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Considera os valores editados na tela pelo usuario quando se tratar de conceito "Liquido Produto" - Argentina ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aVlrsEdit) > 0 .and. nPrcVen <> aVlrsEdit[nPosCols,2]
		lDescUser 	:= .T.
		nPrcVen 	:= aVlrsEdit[nPosCols,2]
		nDescUnit 	:= ( ((SC6->C6_VALOR/SC6->C6_QTDVEN) * nQuant) - aVlrsEdit[nPosCols,3]) / nQuant
	Else

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³  Calcula acrescimo financeiro e reajuste  		  	 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(SC5->C5_REAJUST) .And. lReajuste
			nPrcVen   := Formula(SC5->C5_REAJUST)
			IF SC6->C6_PRUNIT<>0 .and. !EMPTY(SC9->C9_REMITO)
				nFatorRj  := (nPrcVen/SC6->C6_PRUNIT)
			ELSE
				nFatorRj  := (nPrcVen/SC9->C9_PRCVEN)
			ENDIF
			nPrcBruto := (nPrcBruto * nFatorRj)
		Endif

	EndIf

	SF4->(dbSetOrder(1))
	SF4->(dbSeek(xFilial("SF4")+SC6->C6_TES))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Calculo do Acrescimo Financeiro ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nAcresFin := 0
	If ( SC5->C5_ACRSFIN <> 0 )
		If lAcresDup
			nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
		Else
			If SF4->F4_DUPLIC=="S"
				nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
			Endif
		Endif
	EndIf

	If lM468ACRE
		nAcresFin := Execblock("M468ACRE",.f.,.f.,{nPrcVen,nPrcBruto})
	Endif
	nAcresTot += nAcresFin * nQuant

	If nAcresFin <> 0
		nPrcVen := nPrcVen + nAcresFin
	EndIf

	nTotInden := 0

	//Desconto referente a indenizacao
	If SC5->C5_PDESCAB <> 0
		nIndeniz  := nPrcVen * (SC5->C5_PDESCAB/100)
		nPrcVen   := nPrcVen - nIndeniz
		If (cPaisLoc == "PAR" .And. SC6->C6_PRUNIT == 0 .And. nIndeniz > 0)
			nDescUnit += 0
		Else
			nDescUnit += IIf(Empty(SC6->C6_PRUNIT),nIndeniz,0)
		Endif
	Endif

	// Calculo referente ao rateio do campo C5_DESCONT
	nC5Descont := 0
	If SC5->C5_DESCONT <> 0
		If (cTpdpind == "2" .And. SF4->F4_DUPLIC=="S") .Or. (cTpdpind <> "2")
			nPos := AScan(aTotaFat,{|x| x[1] == SC5->C5_NUM })
			If nPos > 0
				If nTipoGer==2
					If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
						nPrcSC9:= xmoeda(SC9->C9_PRCVEN,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
						nPrcSC9:= Round(nPrcSC9    ,aTamSx3Prc[2])
					Else
						nPrcSC9:= xmoeda(SC9->C9_PRCVEN,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
					EndIf
					nC5Descont:= a410Arred((SC9->C9_QTDLIB * nPrcSC9 * SC5->C5_DESCONT) / iif(cPaisLoc<>"PAR",aTotaFat[nPos,2],M468ToPed(SC5->C5_NUM)),"D2_DESCON")
				Else
					nC5Descont:= a410Arred((SC9->C9_QTDLIB * SC9->C9_PRCVEN * SC5->C5_DESCONT) / iif(cPaisLoc<>"PAR",aTotaFat[nPos,2],M468ToPed(SC5->C5_NUM)),"D2_DESCON")
				EndIf
					nC5Descont:= nC5Descont / SC9->C9_QTDLIB
			EndIf
			nPrcVen   := nPrcVen - nC5Descont
			nDescUnit += IIf(Empty(SC6->C6_PRUNIT),nC5Descont,0)
		EndIf
	EndIf
	If nTipoGer == 2
	    If SuperGetMV("MV_ARREFAT")== "S"
			IF cAltTx == "2" .and. cPaisloc == "ARG" .and. Len(aParams)>=22 .and.  aParams[22] == 2 .and. (nTipoGer==nMoedSel)
				nPrcVen		:= xmoeda(nPrcVen,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2]+1,1,nTaxamoeda)
				nIndeniz	:= xmoeda(nIndeniz,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2]+1,1,nTaxamoeda)
				nC5Descont  := xmoeda(nC5Descont,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2]+1,1,nTaxamoeda)
				nPrcBruto	:= xmoeda(nPrcBruto,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2]+1,1,nTaxamoeda)
				nPrcVen		:= 	Round(nPrcVen    ,aTamSx3Prc[2])
				nPrcBruto	:= 	Round(nPrcBruto    ,aTamSx3Prc[2])
			Else
				nPrcVen		:= xmoeda(nPrcVen,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nIndeniz	:= xmoeda(nIndeniz,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nC5Descont  := xmoeda(nC5Descont,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nPrcBruto	:= xmoeda(nPrcBruto,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nPrcVen		:= 	Round(nPrcVen    ,aTamSx3Prc[2])
				nPrcBruto	:= 	Round(nPrcBruto    ,aTamSx3Prc[2])
			EndIF
		Else
			nPrcVen   := xmoeda(nPrcVen,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
			nIndeniz  := xmoeda(nIndeniz,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
			nC5Descont:= xmoeda(nC5Descont,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
			nPrcBruto := xmoeda(nPrcBruto,SC5->C5_MOEDA, nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
		EndIf
	EndIf

	IF cAltTx == "2" .and. cPaisloc == "ARG" .and.  Len(aParams)>=22 .and.  aParams[22] == 2 .and. (nTipoGer==nMoedSel)
		nItemValTot := A410Arred(nQuant * nPrcVen,"D2_TOTAL")
	Else
		If cPaisLoc == "PAR" .and. nAcresFin <> 0
			nItemValTot := A410Arred( nQuant * nPrcVen, "D2_TOTAL")
		Else
			nItemValTot := A410Arred( IIf(!(cPaisLoc $ "BRA|ARG|MEX|BOL|CHI|COL"), (SC6->C6_VALOR * SC9->C9_QTDLIB)/SC6->C6_QTDVEN, nQuant * nPrcVen), "D2_TOTAL", IIf(cPaisLoc == "CHI" .And. lPrcDec, IIf(nTipoGer == 2, nMoedSel, SC5->C5_MOEDA), NIL))
		EndIf
		If cPaisLoc=="PAR" .and. nC5Descont<>0
			nItemValTot -= A410Arred(nQuant *  nC5Descont,"D2_TOTAL")
		EndIf
		If cPaisLoc == "PAR" .And. SC5->C5_PDESCAB <> 0
			nItemValTot:= A410Arred(nQuant * nPrcVen,"D2_TOTAL")
		EndIf
	EndIF

Else

	cTes     := (cRem)->D2_TES
	SF4->(dbSetOrder(1))
	SF4->(dbSeek(xFilial("SF4")+cTes))

	If (cRem)->D2_TIPOREM == _RMCONS
		cTes     := SF4->F4_TESENV
		SF4->(dbSeek(xFilial("SF4")+cTes))
	Endif

 	If (Alltrim(cAltTx)="0" .and. ( !(cPaisLoc $ "CHI|URU|PAR|ARG|MEX|BOL") .OR. nTaxamoeda==0))
		nTaxamoeda:= SF2->F2_TXMOEDA
	EndIf

	aTamSx3Prc  := TamSx3("D2_PRCVEN")
	aTamSx3Tot  := TamSx3("D2_TOTAL")

	nQuant := GetSD2('D2_QTDAFAT')

	If !Empty(GetSD2('D2_PEDIDO')) .and. ( lConvRem .or. Empty(GetSD2('D2_PRCVEN')) )
		aMovCQ      := SaldoRJCQ(SC6->C6_PRODUTO,SC6->C6_NFORI,SC6->C6_SERIORI,SC5->C5_CLIENTE,SC5->C5_LOJACLI)
		lNoPrUnit   := Empty(SC6->C6_PRUNIT)
		nPrcBruto := Iif(!Empty(SC6->C6_PRUNIT),SC6->C6_PRUNIT,SC9->C9_PRCVEN)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Considera os valores editados na tela pelo usuario quando se tratar de conceito "Liquido Produto" - Argentina ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Len(aVlrsEdit) > 0 .and. nPrcVen <> aVlrsEdit[nPosCols,2]
			lDescUser 	:= .T.
			nPrcVen 	:= aVlrsEdit[nPosCols,2]
			nDescUnit 	:= ( ((GetSD2('D2_TOTAL') / GetSD2('D2_QUANT')) * nQuant) - aVlrsEdit[nPosCols,3]) / nQuant
		Else

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³  Calcula acrescimo financeiro e reajuste  		  	 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(SC5->C5_REAJUST) .And. lReajuste
				nPrcUni:= nPrcVen
				nPrcVen   := Formula(SC5->C5_REAJUST)
				IF SC6->C6_PRUNIT<>0 .and. !EMPTY(SC9->C9_REMITO)
					nFatorRj  := (nPrcVen/SC6->C6_PRUNIT)
				ELSE
					nFatorRj  := (nPrcVen/SC9->C9_PRCVEN)
				ENDIF
				nPrcBruto := (nPrcBruto * nFatorRj)
			Else
				nPrcVen := SC9->C9_PRCVEN
				nPrcUni	:= nPrcVen
			Endif

		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Calculo do Acrescimo Financeiro ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( SC5->C5_ACRSFIN <> 0 )
			If lAcresDup
				nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
			Else
				If SF4->F4_DUPLIC=="S"
					nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
				Endif
			Endif
		EndIf

		If lM468ACRE
			nAcresFin := Execblock("M468ACRE",.f.,.f.,{nPrcVen,nPrcBruto})
		Endif

		If nAcresFin <> 0
			nPrcVen := nPrcVen + nAcresFin
		EndIf

		nTotInden := 0

		//Desconto referente a indenizacao
		If SC5->C5_PDESCAB <> 0
			nIndeniz  := nPrcVen * (SC5->C5_PDESCAB/100)
			nPrcVen   := nPrcVen - nIndeniz
			nDescUnit += IIf(Empty(SC6->C6_PRUNIT),nIndeniz,0)
		Endif
		// Calculo referente ao rateio do campo C5_DESCONT
		nC5Descont := 0
		If SC5->C5_DESCONT <> 0
			If (cTpdpind == "2" .And. SF4->F4_DUPLIC=="S") .Or. (cTpdpind <> "2")
				nPos := AScan(aTotaFat,{|x| x[1] == SC5->C5_NUM })
				If nPos > 0
					nC5Descont:= a410Arred((SC9->C9_QTDLIB * SC9->C9_PRCVEN * SC5->C5_DESCONT) / aTotaFat[nPos,2],"D2_DESCON")
					nC5Descont:= nC5Descont / SC9->C9_QTDLIB
				EndIf
				nPrcVen   := nPrcVen - nC5Descont
				nDescUnit += IIf(Empty(SC6->C6_PRUNIT),nC5Descont,0)
			EndIf
		EndIf
		If GetSF2('F2_MOEDA') <> SC5->C5_MOEDA
			If SuperGetMV("MV_ARREFAT")== "S"
			    nPrcUni		:= xmoeda(nPrcUni,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nPrcVen		:= xmoeda(nPrcVen,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nIndeniz	:= xmoeda(nIndeniz,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nC5Descont  := xmoeda(nC5Descont,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
		 		nPrcBruto	:= xmoeda(nPrcBruto,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nPrcUni		:= Round(nPrcUni    ,aTamSx3Prc[2])
				nPrcVen		:= Round(nPrcVen    ,aTamSx3Prc[2])
				nPrcBruto	:= Round(nPrcBruto  ,aTamSx3Prc[2])
			Else
				nPrcUni		:= xmoeda(nPrcUni,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2],nTaxamoeda)
				nPrcVen		:= xmoeda(nPrcVen,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2],nTaxamoeda)
				nIndeniz	:= xmoeda(nIndeniz,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2],nTaxamoeda)
				nC5Descont  := xmoeda(nC5Descont,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2],nTaxamoeda)
			 	nPrcBruto	:= xmoeda(nPrcBruto,SC5->C5_MOEDA,GetSF2('F2_MOEDA'),ddatabase,aTamSx3Prc[2],nTaxamoeda)
			EndIf
		EndIf
		If nTipoGer == 2
			If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
				nPrcVen   :=xmoeda(nPrcVen,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nIndeniz  :=xmoeda(nIndeniz,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
				nC5Descont:=xmoeda(nC5Descont,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
			 	nPrcBruto :=xmoeda(nPrcBruto,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
			 	nPrcVen		:= 	Round(nPrcVen    ,aTamSx3Prc[2])
				nPrcBruto	:= 	Round(nPrcBruto  ,aTamSx3Prc[2])
		 	Else
		 		nPrcVen   :=xmoeda(nPrcVen,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
		 		nIndeniz  :=xmoeda(nIndeniz,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
		 		nC5Descont:=xmoeda(nC5Descont,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
			 	nPrcBruto :=xmoeda(nPrcBruto,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
		 	EndIf
		EndIf
	Else
		lNoPrUnit   := Empty(GetSD2('D2_PRCVEN'))
		nPrcBruto   := Iif(GetSD2('D2_PRUNIT')>0,GetSD2('D2_PRUNIT') ,GetSD2('D2_PRCVEN'))
		nPrcVen 	:= GetSD2('D2_PRCVEN')
		nDescUnit 	:=GetSD2('D2_DESCON') / GetSD2('D2_QUANT')

		//Verifica se considera os valores editados na tela pelo usuario
		if len(aVlrsEdit) > 0 .and. nPrcVen <> aVlrsEdit[nPosCols,2]
			lDescUser 	:= .T. //Identifica que o usuario informou desconto
			nPrcVen 	:= aVlrsEdit[nPosCols,2]
			nDescUnit 	:= ( ((GetSD2('D2_TOTAL') / GetSD2('D2_QUANT')) * nQuant) - aVlrsEdit[nPosCols,3]) / nQuant
		else
			If !Empty((cRem)->D2_PRCVEN)
				nPrcVen	:=  (cRem)->D2_PRCVEN
				nPrcBrut:=  (cRem)->D2_PRCVEN
			ElseIf !Empty(SA1->A1_TABELA)  //Busca o preco nos arqs. DA0/DA1
				nPrcVen	:= MaTabPrVen(SA1->A1_TABELA,(cRem)->D2_COD,(cRem)->D2_QUANT,(cRem)->D2_CLIENTE,(cRem)->D2_LOJA,;
				Posicione("SF2",1,xFilial('SF2')+(cRem)->D2_DOC+(cRem)->D2_SERIE+(cRem)->D2_CLIENTE+(cRem)->D2_LOJA+(cRem)->D2_FORMUL,'F2_MOEDA'))
				nPrcBrut:= nPrcVen
			Else
				nPrcVen	:= 	Posicione("SB1",1,xFilial('SB1')+(cRem)->D2_COD,'B1_PRV1')
				nPrcBrut:= nPrcVen
			Endif
		endif

		If nTipoGer == 2
			If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
				IF cAltTx == "2" .and. cPaisloc == "ARG" .and. Len(aParams)>=22 .and.  aParams[22] == 2 .and. (nTipoGer==nMoedSel)
					nPrcBruto  :=xmoeda(nPrcBruto,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2]+1,,nTaxamoeda)
					nPrcVen  	:=xmoeda(nPrcVen,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2]+1,,nTaxamoeda)
					nPrcVen		:= 	Round(nPrcVen    ,aTamSx3Prc[2])
					nPrcBruto	:= 	Round(nPrcBruto  ,aTamSx3Prc[2])
				Else
					nPrcBruto  :=xmoeda(nPrcBruto,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
					nPrcVen  	:=xmoeda(nPrcVen,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2]+1,nTaxamoeda)
					nPrcVen		:= 	Round(nPrcVen    ,aTamSx3Prc[2])
					nPrcBruto	:= 	Round(nPrcBruto  ,aTamSx3Prc[2])
				EndIf
			Else
				nPrcBruto  :=xmoeda(nPrcBruto,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
   				nPrcVen  :=xmoeda(nPrcVen,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,aTamSx3Prc[2],nTaxamoeda)
		    EndIf
		EndIf
		nPrcUni := nPrcVen
	EndIf

	If cPaisLoc=="CHI" .And. SuperGetMV("MV_PRCDEC",,.F.) .And. nTipoGer==2 .And. nMoedSel == 1
		nPrcBrut 	:= A410Arred( nPrcBrut,"D2_TOTAL",nMoedSel)
		nPrcVen  	:= A410Arred( nPrcVen ,"D2_TOTAL",nMoedSel)
	EndIf
	nItemValTot := A410Arred( nQuant * nPrcVen,"D2_TOTAL",If(cPaisLoc=="CHI" .And. lPrcDec,If(nTipoGer==2,nMoedSel,GetSF2('F2_MOEDA')),NIL))
EndIf



If nTipoGer == 2
	nMoedPar:= nMoedSel
ElseIf lPedidos
	nMoedPar:= SC5->C5_MOEDA
Else
	nMoedPar:= GetSF2('F2_MOEDA')
EndIf

If cPaisLoc == "PAR"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Praticar o arredondamento somente qdo moeda for Guarani     ³
	//ÀÄLucas 17-07-00 ParaguayÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nMoedPar == 1 .and. Alltrim(GetMV("MV_SIMB1")) == "$"
		nPrcVen     := Round(nPrcVen,0)
		nItemValTot := Round(nItemValTot,0)
	Else
		nPrcVen     := NoRound(nPrcVen,aTamSx3Prc[2])
		nItemValTot := NoRound(nItemValTot,aTamSx3Tot[2])
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tratamento do campo F4_AGREG para uso em TES de bonificacao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SF4")
DbSetOrder(1)
DbSeek( xFilial("SF4")+cTes )
If !( SF4->F4_AGREG == "N" )
	nValMerc += nItemValTot
Endif

lNoPrUnit:=Empty(SC6->C6_PRUNIT)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o valor de desconto...                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTamSx3   := TamSx3("D2_TOTAL")[2]
If nPrcBruto>nPrcVen .Or. (lNoPrUnit)   .or.  nDescUnit > 0
	If lNoPrUnit
		If nDescUnit >0
			nDesconto := nDescUnit  * nQuant
		Else
			nDesconto := (SC6->C6_VALDESC / SC6->C6_QTDVEN) * nQuant
		EndIf

		nDesconto := Iif(nFatorRj==0,nDesconto,(nDesconto*nFatorRj) )

   		If nTipoGer == 2
			If !lPedidos // .And. Empty(GetSD2('D2_PEDIDO')  )
				If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
					nDesconto   :=xmoeda(nDesconto,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,MsDecimais(nMoedSel)+1)
				    nDesconto	:= 	Round(nDesconto    ,MsDecimais(nMoedSel))
			    Else
					nDesconto  :=xmoeda(nDesconto,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,MsDecimais(nMoedSel))
				EndIF
			Else
				If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
					nDesconto	:=xmoeda(nDesconto,SC5->C5_MOEDA, nMoedSel,ddatabase,MsDecimais(nMoedSel)+1)
					nDesconto	:= 	Round(nDesconto    ,MsDecimais(nMoedSel))
				Else
					nDesconto	:=xmoeda(nDesconto,SC5->C5_MOEDA, nMoedSel,ddatabase,MsDecimais(nMoedSel))
			    EndIf
			EndIf
		EndIf
	Else
		If nDescUnit >0
			nDesconto := nDescUnit  * nQuant
		   	If nTipoGer == 2
				If !lPedidos // .And. Empty(GetSD2('D2_PEDIDO')  )
					If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
						nDesconto	:=xmoeda(nDesconto,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,MsDecimais(nMoedSel)+1)
						nDesconto	:= 	Round(nDesconto    ,MsDecimais(nMoedSel))
					Else
						nDesconto	:=xmoeda(nDesconto,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,MsDecimais(nMoedSel))
					EndIf
				Else
					If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
						nDesconto	:=xmoeda(nDesconto,SC5->C5_MOEDA, nMoedSel,ddatabase,MsDecimais(nMoedSel)+1)
						nDesconto	:= 	Round(nDesconto    ,MsDecimais(nMoedSel))
					Else
						nDesconto	:=xmoeda(nDesconto,SC5->C5_MOEDA, nMoedSel,ddatabase,MsDecimais(nMoedSel))
					EndIf
				EndIf
			EndIf
		Else
			nDesconto := A410Arred(nPrcBruto*nQuant,"D2_DESCON")-nItemValTot
			If cPaisLoc == "PAR" .and. !lNoPrUnit .and. nIndeniz >0
				nDesconto := 0
			Endif

		EndIf
	EndIf
	If nDesconto < 0
		nDesconto := 0
	EndIf
	//If cPaisLoc == "MEX"
		nTotDesc += nDesconto
	//Else
	//	nTotDesc += nDesconto + SC6->C6_VALDESC
	//EndIf
	nTotInden += (nIndeniz * nQuant) + (nC5Descont * nQuant)
EndIf

//Calculo de bonificaciones
If cPaisLoc == "ARG" .And. Type("aDesBon") != "U" .And. Len(aDesBon) > 0
	nPosBen := ascan(aDesBon, {|x| x[1] == nNFBon .And. x[2] == nPosCols})
	If nPosBen > 0
		nDesBon := aDesBon[nPosBen][3]

		If nTipoGer == 2
			If !lPedidos // .And. Empty(GetSD2('D2_PEDIDO')  )
				If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
					nDesBon	:=xmoeda(nDesBon,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,MsDecimais(nMoedSel)+1)
					nDesBon	:= 	Round(nDesBon    ,MsDecimais(nMoedSel))
				Else
					nDesBon	:=xmoeda(nDesBon,GetSF2('F2_MOEDA'), nMoedSel,ddatabase,MsDecimais(nMoedSel))
				EndIf
			Else
				If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
					nDesBon	:=xmoeda(nDesBon,SC5->C5_MOEDA, nMoedSel,ddatabase,MsDecimais(nMoedSel)+1)
					nDesBon	:= 	Round(nDesBon    ,MsDecimais(nMoedSel))
				Else
					nDesBon	:=xmoeda(nDesBon,SC5->C5_MOEDA, nMoedSel,ddatabase,MsDecimais(nMoedSel))
				EndIf
			EndIf
		EndIf

		If nDesBon < 0
			nDesBon := 0
		EndIf
		If cPaisloc<>"ARG"
			nTotDesc += nDesBon
			nDesconto += nDesBon
		Else
			nTotDesBo += nDesBon
			nDescBon += nDesBon
		Endif
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ C lculo de Impostos pelo Roteiro da Amarra‡Æo TesXImpostos  ³
//³ para Clientes ConeSul...                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "PAR"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Praticar o arredondamento somente qdo moeda for Guarani     ³
	//ÀÄLucas 17-07-00 ParaguayÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nMoedPar == 1 .and. Alltrim(GetMV("MV_SIMB1")) == "$"
		nPrcVen := Round(nItemValTot/nQuant,0)
	Else
		nPrcVen := NoRound(nItemValTot/nQuant,aTamSx3Prc[2])
	EndIf
EndIf

nTotBaseImp   += nItemValTot

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Disparar rotina para executar o RdMake                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPosRow  := 0
cNFiscal := cNumero
SF4->(DbSetOrder(1))
SF4->( MsSeek(xFilial("SF4")+cTes) )
lDupl := ( SF4->F4_DUPLIC == "S" )
If lDupl
	nBaseDup += nItemValTot
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Acumula os Impostos do Item em "aImpVarSF2" [Totais]        ³
//³ aImpVarSD2[6,nC,8] > Cpo.Grava‡Æo "Valor do Imposto"        ³
//³ aImpVarSD2[6,nC,9] > Cpo.Grava‡Æo "Base de C lc.do Imposto" ³
//³ Considerar a base do imposto para gravar                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nC := 1 To Len( aImps[nPosCols][6] )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava os Impostos Gerados Atraves da Amarra‡Æo TesXImpostos ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If aImps[nPosCols,6,nC,3] <> 0.00
		SFC->( dbSetOrder(2) )
		SFC->( MsSeek(xFilial("SFC")+cTes+aImps[nPosCols,6,nC,1]) )


		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³       Tratamento especifico para localizado PERU             ³
		//³ Abaixo estão os cálculos dos impostos variáveis de acordo    ³
		//³ com as regras de ISC, IGV, PIV e DIG. Caso não seja nenhum   ³
		//³ desses executa normalmente como se fosse não localizado      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	    //Caso seja não seja localizado Peru, executa padrão


		If cPaisLoc $ "PER"
			alAreaX := SFC->(GetArea())
			If aImps[nPosCols,6,nC,1] $ "IGV"
				DbSelectArea("SF4")
				DbSetOrder(1)
				If DbSeek(xFilial("SF4")+cTes)

					If (SF4->F4_CALCIGV <> "2" .And. SF4->F4_CALCIGV <> "3")
						If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,8] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0

							AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,8], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
							nE := Len( aImpVarSF2 )
						EndIf

						aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,4]

						If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,9] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0
							AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,9], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
							nE := Len( aImpVarSF2 )
						EndIf

						aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,3]
					EndIf

				EndIf
			ElseIf aImps[nPosCols,6,nC,1] $ "PIV"

				DbSelectArea("SA1")
				DbSetOrder(1)

				If DbSeek(xFilial("SA1")+ SC9->C9_CLIENTE + SC9->C9_LOJA)

					If SubStr(cMV_AGENTE,1,1) == "N" .And.  SA1->A1_AGENTE == "2"
						If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,8] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0

							AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,8], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
							nE := Len( aImpVarSF2 )
						EndIf

						aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,4]

						If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,9] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0
							AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,9], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
							nE := Len( aImpVarSF2 )
						EndIf

						aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,3]
					EndIf

				EndIf
			ElseIf aImps[nPosCols,6,nC,1] $ "DIG"

				DbSelectArea("SA1")
				DbSetOrder(1)

				If DbSeek(xFilial("SA1")+ SC9->C9_CLIENTE + SC9->C9_LOJA)

					If SubStr(cMV_AGENTE,1,1) == "N" .And.  SA1->A1_AGENTE == "3"
						If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,8] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0

							AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,8], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
							nE := Len( aImpVarSF2 )
						EndIf

						aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,4]

						If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,9] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0
							AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,9], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
							nE := Len( aImpVarSF2 )
						EndIf

						aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,3]
					EndIf

				EndIf

			Else
				If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,8] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0

					AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,8], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
					nE := Len( aImpVarSF2 )
				EndIf

				aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,4]

				If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,9] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0
					AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,9], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
					nE := Len( aImpVarSF2 )
				EndIf

				aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,3]

			EndIf

			RestArea(alAreaX)
		Else

			If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,8] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0

					AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,8], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
					nE := Len( aImpVarSF2 )
			EndIf

				aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,4]

			If (nE := aScan( aImpVarSF2,{|x| x[1] == aImps[nPosCols,6,nC,9] .And. x[4] == aImps[nPosCols,6,nC,2] .and. x[3] == aImps[nPosCols,6,nC,1]  } )) == 0
					AAdd( aImpVarSF2, { aImps[nPosCols,6,nC,9], 0.00 , aImps[nPosCols,6,nC,1], aImps[nPosCols,6,nC,2]  } )
					nE := Len( aImpVarSF2 )
			EndIf

			aImpVarSF2[nE,2] += aImps[nPosCols,6,nC,3]

		EndIf
		//	    nValBrut += aImps[nPosCols,6,nC,4] * IIf(Subs(aImps[nPosCols,6,nC,5],2,1) == "1",1,IIf(Subs(aImps[nPosCols,6,nC,5],2,1) == "2",-1,0))
	EndIf
Next nC

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona Array para gravacao dos Livros Fiscais         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTaxamoeda:= nTaxMoe
nMoedaCor := SF2->F2_MOEDA
nTxMoeda  := nTaxamoeda
nTaxa     := nTaxamoeda

If !lDescUser
	aImps[nPosCols][3] := nItemValTot
EndIf

// Calcula o Livro

aLivro := GetBook( @aGetBook, aImps[nPosCols], "V", nTaxa, aLivro, "S" ,,,,,lUltimoItem)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Acumula em "nBaseDup" os Impostos que Incidem no Valor    ³
//³ Total Base da Duplicata                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lDupl
	For nC := 1 To Len( aImps[nPosCols,6] )
		If SubStr( aImps[nPosCols,6,nC,5],1,1 ) == "1"
			nBaseDup +=  Round(aImps[nPosCols,6,nC,4],TamSx3(aImps[nPosCols,6,nC,6],1,3 ) [2])
			AADD( aImpVarDup,{aImps[nPosCols,6,nC,1],Round(aImps[nPosCols,6,nC,4],TamSx3(aImps[nPosCols,6,nC,6],1,3 ) [2])})
		ElseIf SubStr( aImps[nPosCols,6,nC,5],1,1 ) == "2"
			nBaseDup -= Round(aImps[nPosCols,6,nC,4],TamSx3(aImps[nPosCols,6,nC,6],1,3 ) [2])
			AADD( aImpVarDup,{aImps[nPosCols,6,nC,1],Round(aImps[nPosCols,6,nC,4],TamSx3(aImps[nPosCols,6,nC,6],1,3 ) [2])})
		Else
			AADD( aImpVarDup,{"",0,0})
		EndIf
	Next nC
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava itens da Nota Fiscal                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cPedXXX := If(lPedidos,SC9->C9_PEDIDO,GetSD2('D2_PEDIDO'))
cRemXXX := If(lPedidos,SC9->C9_REMITO,GetSD2('D2_DOC'))
cItemXXX := If(lPedidos,SC9->C9_ITEM,GetSD2('D2_ITEMPV'))
cSeqXXX := If(lPedidos,SC9->C9_SEQUEN,GetSD2('D2_SEQUEN'))

dbSelectArea("SD2")
RecLock("SD2",.T.)
If !Empty(cPedXXX)
	Replace D2_FILIAL   With xFilial("SD2")
	Replace D2_TIPO     With SC5->C5_TIPO
	Replace D2_CLIENTE  With SC6->C6_CLI
	Replace D2_LOJA     With SC6->C6_LOJA
	Replace D2_COD      With SC6->C6_PRODUTO
	Replace D2_DESC     With SC6->C6_DESCONT
	Replace D2_UM       With SC6->C6_UM
	Replace D2_TES      With SC6->C6_TES
	Replace D2_CF       With SC6->C6_CF
	Replace D2_SEGUM    With SC6->C6_SEGUM
	Replace D2_NUMSERI  With SC6->C6_NUMSERI
	Replace D2_LOCALIZ  With SC6->C6_LOCALIZ
	Replace D2_PROJPMS  With SC6->C6_PROJPMS
	Replace D2_EDTPMS   With SC6->C6_EDTPMS
	Replace D2_TASKPMS  With SC6->C6_TASKPMS
	Replace D2_CODFAB   With SC6->C6_CODFAB
	Replace D2_LOJAFA   With SC6->C6_LOJAFA
	IF cPaisloc <> "BRA"
		If SC6->(ColumnPos("C6_CCUSTO")) > 0 .and. SC6->(ColumnPos("C6_CC")) > 0
			If SC6->C6_CC <> ""
				D2_CCUSTO := SC6->C6_CC
			Else
				D2_CCUSTO := SC6->C6_CCUSTO
			EndIF
		Elseif SC6->(ColumnPos("C6_CC")) > 0
			D2_CCUSTO := SC6->C6_CC
		Elseif SC6->(ColumnPos("C6_CCUSTO")) > 0
			D2_CCUSTO := SC6->C6_CCUSTO
		Endif
	Else
		D2_CCUSTO := SC6->C6_CC
	EndIF
	If cPaisLoc == "RUS"
	   Replace D2_FDESC    With SC6->C6_FDESC
    EndIf
	If FieldPos("D2_DESCRI") >0
		Replace D2_DESCRI	With SC6->C6_DESCRI
	Endif
	If lPedidos
		Replace D2_PEDIDO	With SC6->C6_NUM
		Replace D2_ITEMPV	With SC6->C6_ITEM
	Else
        Replace SD2->D2_PEDIDO   With cPedXXX
        Replace SD2->D2_ITEMPV   With cItemXXX
        Replace SD2->D2_SEQUEN   With cSeqXXX
	EndIf
	If SD2->(FieldPos("D2_PROVENT")) > 0 .And. SC6->(FieldPos("C6_PROVENT")) > 0
		Replace D2_PROVENT	With SC6->C6_PROVENT
	Endif
	If cPaisLoc=="EQU" .And. SD2->(FieldPos("D2_CONCEPT")) > 0 .And. SC6->(FieldPos("C6_CONCEPT")) > 0
		Replace D2_CONCEPT	With SC6->C6_CONCEPT
	Endif
	If cPaisLoc $ "MEX|PER" .and. SD2->(FieldPos("D2_VALADI")) > 0 .and. Len(aRegFIE) > 0
		For nRegFIE := 1 to Len (aRegFIE)
			nValadi := Round(aRegFIE[nRegFIE][8]/ LEN(aImps),aTamSx3Tot[2])
			If cPaisLoc == "PER" .And. lUltimoItem
				nValAntAcu := Round(nValadi * LEN(aImps),aTamSx3Tot[2])
				If aRegFIE[nRegFIE][8] <> nValAntAcu
					nValadi := nValadi + (aRegFIE[nRegFIE][8] - nValAntAcu)
				EndIf
			EndIf
			nValadiIm += nValadi
			FaGrvFR3("R",aRegFIE[nRegFIE][2],aRegFIE[nRegFIE][3],aRegFIE[nRegFIE][9],aRegFIE[nRegFIE][4],aRegFIE[nRegFIE][5],aRegFIE[nRegFIE][6],aRegFIE[nRegFIE][7],nValadi,SF2->F2_DOC,SF2->F2_SERIE,SD2->D2_ITEMPV)
			Replace SD2->D2_VALADI With SD2->D2_VALADI + nValadi
		Next
		Reclock('SF2',.F.)
			Replace SF2->F2_VALADI With SF2->F2_VALADI + SD2->D2_VALADI
		MsUnLock()
	EndIf
Else
	If lPedidos
		cCliente 	:= SC9->C9_CLIENTE
		cLoja 		:= SC9->C9_LOJA
		cCod 		:= SC9->C9_PRODUTO
	Else
		cCliente 	:= GetSF2('F2_CLIENTE')
		cLoja 		:= GetSF2('F2_LOJA')
		cCod 		:= GetSD2('D2_COD')
	EndIf
	Replace D2_FILIAL   	With xFilial("SD2")
	Replace D2_TIPO     	With GetSD2('D2_TIPO')
	Replace D2_CLIENTE  	With cCliente
	Replace D2_LOJA     	With cLoja
	Replace D2_COD      	With cCod
	Replace D2_UM       	With GetSD2('D2_UM')
	Replace D2_TES      	With cTes
	Replace D2_CF       	With GetSD2('D2_CF')
	Replace D2_SEGUM    	With GetSD2('D2_SEGUM')
	Replace D2_LOCALIZ 	    With GetSD2('D2_LOCALIZ')
	Replace D2_NUMSERI 	    With GetSD2('D2_NUMSERI')
	Replace D2_PROJPMS  	With GetSD2('D2_PROJPMS')
	Replace D2_EDTPMS   	With GetSD2('D2_EDTPMS')
	Replace D2_TASKPMS  	With GetSD2('D2_TASKPMS')
	Replace SD2->D2_CODFAB	With GetSD2('D2_CODFAB')
	Replace SD2->D2_LOJAFA	With GetSD2('D2_LOJAFA')
	If SD2->(FieldPos("D2_PROVENT")) > 0
		Replace D2_PROVENT	With GetSD2('D2_PROVENT')
	Endif
	If cPaisLoc=="EQU" .And. SD2->(FieldPos("D2_CONCEPT")) > 0 .And. SC6->(FieldPos("C6_CONCEPT")) > 0
		Replace D2_CONCEPT	With SC6->C6_CONCEPT
	Endif
EndIf

//Localizacao Colombia Codigo Liberacao
if cPaisLoc == "COL" .AND. SC9->(FieldPos("C9_APRREM")) > 0 .AND. SD2->(FieldPos("D2_APRREM")) > 0
	Replace D2_APRREM With If(!lPedidos,SC9->C9_APRREM,"")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³          TRATAMENTO EXPECIFICO PARA LOCALIZADO PERU               ³
//³ Quando o cálculo do ISC for por unidade, ou seja, se houver       ³
//³ alguma exceção fiscal,  o valor do campo especifico FF_VLRISC > 0 ³
//³ é gravado no campo customizado D1_VLRISC ou D2_VLRISC.            ³
//³ Se não houver nenhuma exceção fiscal, mas no produto o valor do   ³
//³ campo especíco B1_VLRISC  > 0 então no campo especifico D1_VLRISC ³
//³ ou D2_VLRISC é gravado o seu valor.                               ³
//³ Caso não seja nenhuma das opções anteriores o valor do campo é ze-³
//³ rado.
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


If cPaisLoc $ "PER"
	aAreaX := GetArea()
		DbSelectArea("SFC")
		DbSetOrder(2)
		If DbSeek(xFilial("SFC")+SC6->C6_TES+"ISC")

			DbSelectArea("SFF")
			DbSetOrder(3)
			If DbSeek(xFilial("SFF")+SFC->FC_IMPOSTO)
			    If SFF->FF_VLRISC > 0
					SD2->D2_VLRISC := SFF->FF_VLRISC
				EndIf
			EndIf

			DbSelectArea("SB1")
			DbSetOrder(1)
			If DbSeek(xFilial("SB1") + SC6->C6_PRODUTO) .And. SFF->FF_VLRISC  <= 0

				If SFF->FF_VLRISC <= 0 .And. SB1->B1_VLRISC > 0
					SD2->D2_VLRISC := SB1->B1_VLRISC
				EndIf
			EndIf
		EndIf
	RestArea(aAreaX)
EndIf

Reclock('SD2',.F.)
If Empty(cRemXXX)
	Replace D2_LOCAL    With SC6->C6_LOCAL
Else
	If GetSD2('D2_TIPOREM') == "1"
		Replace D2_LOCAL    With GetSD2('D2_LOCDEST')
	Else
		Replace D2_LOCAL    With  GetSD2('D2_LOCAL')
	EndIf
EndIf
If !Empty(cPedXXX)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualizacao dos percentuais de comissao...                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For i:=1 to Len(aVend)
		If !Empty(SC6->&(EVAL(nC6_Comis,i)))
			SD2->&(EVAL(nD2_Comis,i)) := SC6->&(EVAL(nC6_Comis,i))
		Else
			SD2->&(EVAL(nD2_Comis,i)) := SC5->&(EVAL(nC5_Comis,i))
		EndIf
	Next i
	If SC6->C6_QTDVEN > 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pontos de Entrada   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistTemplate("MSD2UM2")
			nQtd2UM := ExecTemplate("MSD2UM2",.F.,.F.,nRecC9)
		EndIf

		If ExistBlock("MSD2UM2")
			nQtd2UM := ExecBlock("MSD2UM2",.F.,.F.,nRecC9)
		EndIf

		If Empty( nQtd2UM ) .Or. !(ValType( nQtd2UM ) == "N")
			SD2->D2_QTSEGUM  := (SC6->C6_UNSVEN * (nQuant / SC6->C6_QTDVEN))
		Else
			SD2->D2_QTSEGUM  := nQtd2UM
		EndIf
	EndIf
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualizacao dos percentuais de comissao. A comissao dos   ³
	//³ itens do Remito sao gravadas nos itens da NF gerada       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nI:=1 to Len(aVend)
		If GetSD2('D2_COMIS'+Str(nI,1)) > 0
			SD2->&(EVAL(nD2_Comis,nI)) := GetSD2('D2_COMIS'+Str(nI,1))
		EndIf
	Next nI

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pontos de Entrada   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistTemplate("MSD2UM2")
		nQtd2UM := ExecTemplate("MSD2UM2",.F.,.F.)
	EndIf
	If ExistBlock("MSD2UM2")
		nQtd2UM := ExecBlock("MSD2UM2",.F.,.F.)
	EndIf
	If Empty( nQtd2UM ) .Or. !(Type( "nQtd2UM" ) == "N")
		SD2->D2_QTSEGUM  :=  nQuant   *  Iif(SB1->B1_TIPCONV=="M",SB1->B1_CONV,Iif(SB1->B1_CONV<>0,1/SB1->B1_CONV,0))
	Else
		SD2->D2_QTSEGUM  := nQtd2UM
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Poder de Terceiros - FIfO                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Iif(Empty(cPedXXX),Empty(SC6->C6_NFORI),.T.) .And. SF4->F4_PODER3 != "N"
	dbSelectArea("SF4")
	nRegSF4 := Recno()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Localiza a Remessa                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If lPedidos
		cChaveSB6 := SC9->(C9_PRODUTO+C9_CLIENTE+C9_LOJA+C9_IDENTB6)
	Else
		cChaveSB6 :=  GetSD2('D2_COD')+ GetSD2('D2_CLIENTE')+ GetSD2('D2_LOJA')+ GetSD2('D2_IDENTB6')
	EndIf
	cCondSB6 := "xFilial('SB6')+cChaveSB6=="
	cCondSB6 += "SB6->B6_FILIAL+SB6->B6_PRODUTO+SB6->B6_CLIFOR+"
	cCondSB6 += "SB6->B6_LOJA+SB6->B6_IDENT"

	dbSelectArea("SB6")
	dbSetOrder(1)
	MsSeek(xFilial("SB6")+cChaveSB6)

	While !Eof() .and. &(cCondSB6)
		aAreaAtu:=GetArea()
		dbSelectArea("SF4")
		dbSetOrder(1)
		MsSeek(xFilial()+SB6->B6_TES)
		If Found() .And. SF4->F4_PODER3 == "R"
			SD2->D2_NFORI    := SB6->B6_DOC
			//SD2->D2_SERIORI  := SB6->B6_SERIE
			Iif(!empty(SB6->B6_SERIE),SerieNfId("SD2",1,"D2_SERIORI",,,,SB6->B6_SERIE),) //Projeto Chave Unica - Tiago Silva
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Volta a posicao anterio o arquivo de TES          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			MsGoTo(nRegSF4)
			Exit
		EndIf
		RestArea(aAreaAtu)
		dbSkip()
	EndDo
Else
	dbSelectArea("SD2")
	Replace D2_NFORI     With SC6->C6_NFORI
	//Replace D2_SERIORI   With SC6->C6_SERIORI
	Iif(!empty(SC6->C6_SERIORI),SerieNfId("SD2",1,"D2_SERIORI",,,,SC6->C6_SERIORI),) // Projeto Chave Unica - Tiago Silva
	Replace D2_ITEMORI   With SC6->C6_ITEMORI
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Guardo o conteudo do campo C6_TPVENT, C6_FECDSE e
//³ C6_FECHSE para atualizar na tabela SF2 - NfeArg
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "ARG" .And. SC6->(FieldPos("C6_TPVENT"))>0 .And. SC6->(FieldPos("C6_FECDSE"))>0 .And. SC6->(FieldPos("C6_FECHSE"))>0
	cTpVent := SC6->C6_TPVENT
	dDtIniS	:= SC6->C6_FECDSE
	dDtFinS	:= SC6->C6_FECHSE
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Numero do item da nota fiscal                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nItemNF ++
cItemD2 := SomaIt(cItemD2)

cProdXXX := If(lPedidos,SC9->C9_PRODUTO,SD2->D2_COD)

SB1->( dbSetOrder(1) )
SB1->( MsSeek(xFilial("SB1")+cProdXXX) )

dbSelectArea("SD2")
Replace D2_ITEM     With cItemD2
Replace D2_IPI      With Iif(SF4->F4_IPI=="N",0,nxIPI)
Replace D2_PESO     With SB1->B1_PESO
Replace D2_GRUPO    With SB1->B1_GRUPO
Replace D2_TP       With SB1->B1_TIPO
Replace D2_CONTA    With SB1->B1_CONTA
Replace D2_EST      With If( lTpPedBenf, SA2->A2_EST, SA1->A1_EST ) //Bruno 27/11/99 21:01
Replace D2_DOC      With cNumero
//Replace D2_SERIE    With cSerie
SerieNfId("SD2",1,"D2_SERIE",,,,SF2->F2_SERIE) // Projeto Chave Unica - Tiago Silva
Replace D2_EMISSAO  With dDataBase

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Despesas acessórias (frete, seguro, gastos)³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Replace D2_VALFRE	With aRatDesp[nPosCols][1]
Replace D2_SEGURO	With aRatDesp[nPosCols][2]
Replace D2_DESPESA	With aRatDesp[nPosCols][3]

//³Se verifica productos requeridos por RG 3668/14³
If cPaisLoc == "ARG" .and. !Empty(cMv3668) .and. Alltrim(SD2->D2_CF) $ cMv3668 ;
	.and. FunName() $ "MATA468N" .and. Alltrim(cSerie) == "A"
	ValCposRG3668()
Endif

If cPaisLoc == "PTG"
	Replace D2_DESNTRB	With aRatDesp[nPosCols][4]
	Replace D2_TARA		With aRatDesp[nPosCols][5]
Endif

If SD2->(FieldPos("D2_DTDIGIT"))<> 0
	Replace D2_DTDIGIT   With dDataBase
EndIf

Replace D2_TIPODOC  With Iif(D2_TIPO == "B","11","01")     //Nota Fiscal
Replace D2_GERANF   With 'N'
Replace D2_FORMUL   With 'S'     //Formulario proprio

If cPaisLoc $ "EUA|PER|COL|EQU|MEX" .And. SD2->(ColumnPos( "D2_TIPOREM" )) > 0 .And. SC5->(ColumnPos( "C5_TIPOREM" )) > 0
	SD2->D2_TIPOREM := SC5->C5_TIPOREM
EndIf
If !Empty(cPedXXX) .And. If(lPedidos,.T., GetSD2('D2_TIPOREM')<>"1")
		Replace D2_PRUNIT   With nPrcBruto
	Replace D2_IDENTB6  With SC9->C9_IDENTB6
	Replace D2_GRADE    With SC6->C6_GRADE
	Replace D2_LOTECTL  With SC9->C9_LOTECTL
	Replace D2_NUMLOTE  With SC9->C9_NUMLOTE
	Replace D2_DTVALID  With SC9->C9_DTVALID
Else
	Replace D2_PRUNIT   With nPrcBruto
	Replace D2_IDENTB6  With SD2->D2_IDENTB6

	If GetSD2('D2_TIPOREM')==_RMCONS .And. Len(aPosLote[nPosCols]) > 0
		Replace D2_LOTECTL  With aPosLote[nPosCols][1]
		Replace D2_NUMLOTE  With aPosLote[nPosCols][2]
		Replace D2_DTVALID  With aPosLote[nPosCols][3]
	Else
		cLotNum	:=	GetSD2('D2_NUMLOTE')
		cLotCtl	:=	GetSD2('D2_LOTECTL')
		dDtVal	:=	GetSD2('D2_DTVALID')
		nOrdSD3:=SD3->(IndexOrd())
		nRegSD3:=SD3->(Recno())
		SD3->(dbSetOrder(9))
		If (SD3->(MsSeek(xFilial("SD3")+ GetSD2('D2_DOC')+ GetSD2('D2_ITEM')+"DE4")))
			cLotCtl	:=	SD3->D3_LOTECTL
			cLotNum	:=	SD3->D3_NUMLOTE
			dDtVal	:=	SD3->D3_DTVALID
		Endif
		SD3->(DbSetOrder(nOrdSD3))
		SD3->(MsGoTo(nRegSD3))
		Replace D2_LOTECTL  With cLotCtl
		Replace D2_NUMLOTE  With cLotNum
		Replace D2_DTVALID  With dDtVal
	Endif
EndIf

Replace D2_QUANT    	With nQuant
If (cPaisLoc $ "PAR|BOL")
	Replace D2_TOTAL    	With nItemValTot
Else
	Replace D2_TOTAL    	With nItemValTot - IIf(cPaisLoc == "ARG",nDescBon,0)
Endif
//Alexandra Menyashina (14/05/18): Value in Main currency (Rubles)
If cPaisLoc	==	"RUS"
	Replace D2_TOTALM    With xMoeda((nItemValTot - nDesconto),nMoedaCor,1,SF2->F2_DTDIGIT,,nTaxa)
EndIf

If cPaisLoc	==	"PAR"
	Replace D2_PRCVEN   	With nPrcVen
	Replace D2_DESCON   	With nDesconto + (nIndeniz * SC9->C9_QTDLIB)
	nDescTotIT := nDescTotIT + (nDesconto +(nIndeniz * SC9->C9_QTDLIB))
Else
	Replace D2_PRCVEN   	With nPrcVen
	Replace D2_DESCON   	With nDesconto + IIf(cPaisLoc == "ARG",nDescBon,0)
EndIf

If cPaisLoc == "ARG" .and. !lPedidos
	Replace D2_DESC		With GetSD2('D2_DESC')
EndIf
Replace D2_NUMSEQ   	With cNumSeq
Replace D2_BASEORI  	With nBaseOri
Replace D2_ESPECIE  	With cEspecie

If !lPedidos
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualizar Dados do Remito de Sa¡da³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Replace D2_REMITO   With	GetSD2('D2_DOC')
	Replace D2_SERIREM  With	GetSD2('D2_SERIE')
	Replace D2_ITEMREM  With	GetSD2('D2_ITEM')
    Replace D2_TPDCENV  With	GetSF2('F2_TIPOREM')
	Replace D2_ITEMCC   With	GetSD2('D2_ITEMCC')
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Complemento Exterior Mexico                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If cPaisLoc == "MEX" .AND. GETMV("MV_CFDIEXP",,.F.) .AND. SC5->(FieldPos("C5_TIPOPE"))>0
	Replace SD2->D2_FRACCA	 With SC6->C6_FRACCA
	Replace SD2->D2_UNIADU	 With SC6->C6_UNIADU
	Replace SD2->D2_VALADU	 With SC6->C6_VALADU
	nTotUSD := NoRound ((nQuant * SC6->C6_USDADU) / SC6->C6_QTDVEN, 2)
	nVTotUSD += nTotUSD
	Replace SD2->D2_CANADU	 With NoRound ((nQuant * SC6->C6_CANADU) / SC6->C6_QTDVEN, GetSX3Cache("D2_CANADU","X3_DECIMAL"))
	Replace SD2->D2_USDADU	 With nTotUSD
EndIf
If cPaisLoc == "MEX" .And. SC6->(FieldPos("C6_PEDISAT"))>0
	Replace SD2->D2_PEDISAT	 With SC6->C6_PEDISAT
EndIf
If cPaisLoc == "MEX" .And. SC6->(FieldPos("C6_NICO"))>0
	Replace SD2->D2_NICO With SC6->C6_NICO
EndIf

//Guardo os registros para geracao de novo pedido para
//administracao de venda futura.

If lPedidos .And.  SC5->C5_DOCGER == '3'
	AAdd(aNotas[Len(aNotas)][2],SD2->(Recno()))
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualizacao da amarracao Cliente x Produto automaticamente   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualizacao da amarracao cliente x Produto                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lAtuaSA7 )
	dbSelectArea("SA7")
	dbSetOrder(1)
	If !(MsSeek(xFilial("SA7")+SD2->D2_CLIENTE+SD2->D2_LOJA+SD2->D2_COD))
		Reclock("SA7",.T.)
		SA7->A7_FILIAL := xFilial("SA7")
		SA7->A7_PRODUTO:= SD2->D2_COD
		SA7->A7_CLIENTE:= SD2->D2_CLIENTE
		SA7->A7_LOJA   := SD2->D2_LOJA
		SA7->A7_DTREF01:= SD2->D2_EMISSAO
		Replace A7_PRECO01 With xMoeda(SD2->D2_PRUNIT,SF2->F2_MOEDA,1,dDataBase,TamSX3("A7_PRECO01")[2],,nTaxamoeda)
		MsUnlock()
	Else
		Reclock("SA7",.F.)
		If ( SA7->A7_PRECO12 != 0 )
			For nCntFor := 12 To 2
				FieldPut(FieldPos("A7_PRECO"+StrZero(nCntFor-1,2)),FieldGet(FieldPos("A7_PRECO"+StrZero(nCntFor,2))))
				FieldPut(FieldPos("A7_DTREF"+StrZero(nCntFor-1,2)),FieldGet(FieldPos("A7_DTREF"+StrZero(nCntFor,2))))
			Next nCntFor
			SA7->A7_PRECO12 := 0
		EndIf
		For nCntFor := 1 To 12
			If ( FieldGet(FieldPos("A7_PRECO"+StrZero(nCntFor,2))) == 0 )
				FieldPut(FieldPos("A7_PRECO"+StrZero(nCntFor,2)),xMoeda(SD2->D2_PRUNIT,SF2->F2_MOEDA,1,dDataBase,TamSX3("A7_PRECO01")[2],,nTaxamoeda))
				FieldPut(FieldPos("A7_DTREF"+StrZero(nCntFor,2)),SD2->D2_EMISSAO)
			EndIf
		Next nCntFor
		MsUnLock()
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava os Impostos Gerados Atraves da Amarra‡Æo TesXImpostos ³
//³ em SD2. Considerar a base do imposto para gravar            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄLucasÙ
For nC := 1 To Len( aImps[nPosCols,6] )
	If aImps[nPosCols,6,nC,3] <> 0.00 .And. !Empty(aImps[nPosCols,6,nC,6])
		If Substr( aImps[nPosCols,6,nC,6],1,3 ) == "D2_"

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³       Tratamento especifico para localizado PERU             ³
			//³ Abaixo estão os cálculos dos impostos variáveis de acordo    ³
			//³ com as regras de ISC, IGV, PIV e DIG. Caso não seja nenhum   ³
			//³ desses executa normalmente como se fosse não localizado      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		    //Caso seja não seja localizado Peru, executa padrão


			If cPaisLoc $ "PER"

                alAreaX := SFC->(GetArea())
				alAreaY := SA1->(GetArea())

				If aImps[nPosCols,6,nC,1] $ "IGV"

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³          TRATAMENTO EXPECIFICO PARA LOCALIZADO PERU                          ³
				//³ Quando o TES for referente ao imposto do IGV, o valor do IPM, o              ³
				//³ qual é uma porcentagem do IGV,o valor da base, aliquota e valor do           ³
				//³ imposto é gravado nos campos D2_BASIMP3, D2_ALQIMP3 e D2_VALIMP3 para saída. ³
				//³ O VALOR DA BASE é A MESMA UTILIZADA PARA O CáLCULO DO IGV.                   ³
				//³ O VALOR DA ALíQUTOA é PROVENIENTE DE UM PARAMêTRO CHAMADO                    ³
				//³ MV_ALQIPM.                                                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

					DbSelectArea("SF4")
					DbSetOrder(1)
					If DbSeek(xFilial("SF4")+cTes)
						If (SF4->F4_CALCIGV <> "2" .And. SF4->F4_CALCIGV <> "3")

							SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,6] ),aImps[nPosCols,6,nC,4] ) )
							SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,7] ),aImps[nPosCols,6,nC,3] ) )
							SD2->( FieldPut( FieldPos("D2_ALQIMP"+Subst(aImps[nPosCols][6][nC][7],10,1)),aImps[nPosCols][6][nC][2] ) ) //Valor Aliquota

							If Alltrim(aImps[nPosCols,6,nC,7]) $ "D2_BASIMP1"  .And. aImps[nPosCols,6,nC,3] > 0
								If !Empty(aDatoIPM[1]) //No. de Libro Fiscal en SFB para IPM
									cCpoIPM := aDatoIPM[1]
								EndIf
								If aDatoIPM[2] > 0 //Alícuota en SFB para IPM
									nMv_ALQIPM := aDatoIPM[2]
								EndIf
								SD2->( FieldPut( FieldPos( "D2_VALIMP" + Alltrim(cCpoIPM) ), aImps[nPosCols,6,nC,3] * (nMV_ALQIPM/100) ) )
								SD2->( FieldPut( FieldPos( "D2_BASIMP" + Alltrim(cCpoIPM) ), aImps[nPosCols,6,nC,3]                    ) )
								SD2->( FieldPut( FieldPos("D2_ALQIMP" + Alltrim(cCpoIPM))  , nMV_ALQIPM                                ) )
							EndIf
						EndIf
					EndIf

				ElseIf aImps[nPosCols,6,nC,1] == "PIV"

					DbSelectArea("SA1")
					DbSetOrder(1)

					If DbSeek(xFilial("SA1")+ SC9->C9_CLIENTE + SC9->C9_LOJA)

						If SubStr(cMV_AGENTE,1,1) == "N" .And.  SA1->A1_AGENTE == "2"
							SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,6] ),aImps[nPosCols,6,nC,4] ) )
							SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,7] ),aImps[nPosCols,6,nC,3] ) )
							SD2->( FieldPut( FieldPos("D2_ALQIMP"+Subst(aImps[nPosCols][6][nC][7],10,1)),aImps[nPosCols][6][nC][2] ) ) //Valor Aliquota
						EndIf

					EndIf

				ElseIf aImps[nPosCols,6,nC,1] == "DIG"

					DbSelectArea("SA1")
					DbSetOrder(1)

					If DbSeek(xFilial("SA1")+ SC9->C9_CLIENTE + SC9->C9_LOJA)

						If SubStr(cMV_AGENTE,1,1) == "N" .And.  SA1->A1_AGENTE == "3"
							SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,6] ),aImps[nPosCols,6,nC,4] ) )
							SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,7] ),aImps[nPosCols,6,nC,3] ) )
							SD2->( FieldPut( FieldPos("D2_ALQIMP"+Subst(aImps[nPosCols][6][nC][7],10,1)),aImps[nPosCols][6][nC][2] ) ) //Valor Aliquota
						EndIf

					EndIf

				Else
					SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,6] ),aImps[nPosCols,6,nC,4] ) )
					SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,7] ),aImps[nPosCols,6,nC,3] ) )
					SD2->( FieldPut( FieldPos("D2_ALQIMP"+Subst(aImps[nPosCols][6][nC][7],10,1)),aImps[nPosCols][6][nC][2] ) ) //Valor Aliquota
				EndIf

			    RestArea(alAreaX)
			    RestArea(alAreaY)
			Else

				SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,6] ),aImps[nPosCols,6,nC,4] ) )
				SD2->( FieldPut( FieldPos( aImps[nPosCols,6,nc,7] ),aImps[nPosCols,6,nC,3] ) )
				SD2->( FieldPut( FieldPos("D2_ALQIMP"+Subst(aImps[nPosCols][6][nC][7],10,1)),aImps[nPosCols][6][nC][2] ) ) //Valor Aliquota

			EndIf

		EndIf


	EndIf
//Alexandra Menyashina (14/05/18): Value in Main currency (Rubles)
if cPaisLoc == "RUS"
	Replace SD2->D2_BSIMP1M with xMoeda(SD2->D2_BASIMP1,SF2->F2_MOEDA,1,SF2->F2_DTSAIDA,,nTaxamoeda)
	Replace SD2->D2_VLIMP1M with xMoeda(SD2->D2_VALIMP1,SF2->F2_MOEDA,1,SF2->F2_DTSAIDA,,nTaxamoeda)
	Replace SD2->D2_VALBRUT	with (SD2->D2_BASIMP1 + SD2->D2_VALIMP1)
	Replace SD2->D2_VLBRUTM with (SD2->D2_BSIMP1M + SD2->D2_VLIMP1M)
	//private variables declared in A468NEGRA increase (Dec/19/2018)
	nVMercTRUM += SD2->D2_TOTALM
	nVBruTRUM += SD2->D2_VLBRUTM
	nVBasTRUM += SD2->D2_BSIMP1M
	nVImpTRUM += SD2->D2_VLIMP1M
EndIf
Next nC
MsUnlock()

If cPaisLoc == "URU"
	For nC := 1 To Len( aImps[nPosCols][6] )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Impostos Gerados Atraves da Amarra‡Æo TesXImpostos ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SFC->( dbSetOrder(2) )
		If SFC->( MsSeek(xFilial("SFC")+cTes+aImps[nPosCols,6,nC,1]) )
			DbSelectArea("SFB")
			SFB->(DbSetOrder(1))
			SFB->(DbGoTop())
            If DbSeek(xFilial("SFB")+AvKey(aImps[nPosCols,6,nC,1],"FB_CODIGO"))
				nPos:=aScan(aDadSFE,{|x| Alltrim(x[1])+Alltrim(x[2]) == Alltrim(SFB->FB_CODIGO)+Alltrim(&("SD2->D2_ALQIMP"+SFB->FB_CPOLVRO))})
				If nPos==0
					cGrpTrib:=""
					DbSelectArea("SB1")
					SB1->(DbSetOrder(1))
					SB1->(DbGoTop())
					If DbSeek(xfilial("SB1")+AvKey(SD2->D2_COD,"B1_COD"))
						If Alltrim(aImps[nPosCols,6,nC,1])=="IRP"
							cGrpTrib:=SB1->B1_GRPIRPF
						ElseIf	Alltrim(aImps[nPosCols,6,nC,1])=="IRA"
							cGrpTrib:=SB1->B1_GRPIRAE
						ElseIf	Alltrim(aImps[nPosCols,6,nC,1])=="IMS"
							cGrpTrib:=SB1->B1_GRPIMS
						Endif
					Endif
					aAdd(aDadSFE,{aImps[nPosCols,6,nC,1],aImps[nPosCols,6,nC,2],cGrpTrib,aImps[nPosCols,6,nC,3],aImps[nPosCols,6,nC,4],;
					aImps[nPosCols,6,nC,4],SD2->D2_DOC,SD2->D2_SERIE,"S",SD2->D2_CLIENTE,SD2->D2_LOJA,SD2->D2_ESPECIE,SD2->D2_TES,SF2->F2_NATUREZ,SD2->D2_CF})
				Else
					aDadSfe[nPos][4]:=aImps[nPosCols,6,nC,3]
					aDadSfe[nPos][5]:=aImps[nPosCols,6,nC,4]
				Endif
            Endif
        Endif
	Next
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Chamada para integracao com o modulo ACD		  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lIntACD .And. FindFunction("CBMSD2460")
	CBMSD2460()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada, na gravacao dos itens da nota   ³
//³ fiscal para execucao de um execblock criado pelo  ³
//³ usuario                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ElseIf ExistTemplate("MSD2460")
	ExecTemplate("MSD2460",.f.,.f.)
EndIf

If ExistBlock("MSD2460")
	ExecBlock("MSD2460",.f.,.f.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ . Passo 1 -> Totaliza os Pesos por Nota Fiscal    ³
//³                                                   ³
//³Nota: Peso Bruto Inexistente, o valor corrente     ³
//³      refere-se ao Peso Liquido                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SD2")

nl460PBRUTO+=(SD2->D2_QUANT * SD2->D2_PESO)
nl460PLIQUI+=(SD2->D2_QUANT * SD2->D2_PESO)

nQuant := SD2->D2_QUANT

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verificar a Existencia de Remito de Sa¡da.      	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cRemito   := If(lPedidos,SC9->C9_REMITO		,GetSD2('D2_DOC'))
cPedido   := If(lPedidos,SC9->C9_PEDIDO		,GetSD2('D2_PEDIDO'))
cTipoRem  := If(lPedidos,""					,GetSD2('D2_TIPOREM'))
cSeqLibC9 := If(lPedidos,SC9->C9_SEQUEN		,GetSD2('D2_SEQUEN'))
nQtdLibe  := If(lPedidos,SC9->C9_QTDLIB		,GetSD2('D2_QUANT'))
nQtdLibe2 := If(lPedidos,SC9->C9_QTDLIB2	,GetSD2('D2_QTSEGUM'))
cItemPed  := If(lPedidos,SC9->C9_ITEM		,GetSD2('D2_ITEMPV'))

If SF4->F4_ESTOQUE == "S"
	If Empty(SD2->D2_REMITO) .Or. cTipoRem	==	"1" .Or. cTipoRem == _RMCONS
		nBaseCusto := ( nItemValTot+nFreteItem )

		nBaseCusto := xMoeda(nBaseCusto,SF2->F2_MOEDA,1,dDataBase,TamSX3("D2_TOTAL")[2],,SC5->C5_TXMOEDA)

		aEnvCus:={ nBaseCusto, 0, 0.00,;
			" "," ",SD2->D2_NFORI,SD2->D2_SERIORI,;
			SD2->D2_COD,SD2->D2_LOCAL,SD2->D2_QUANT,0.00}

		If SF4->F4_PODER3 == "D"
			dbSelectArea("SB6") // Pega o custo do SB6 na devolucao ARMANDO 22/05/01
			dbSetOrder(3)
			MsSeek(xFilial("SB6")+SD2->D2_IDENTB6+SD2->D2_COD+"R")

			aCM := Array(5)

			aCM[1]:=SB6->B6_CUSTO1
			aCM[2]:=SB6->B6_CUSTO2
			aCM[3]:=SB6->B6_CUSTO3
			aCM[4]:=SB6->B6_CUSTO4
			aCM[5]:=SB6->B6_CUSTO5
		Else
			aCM := PegaCMAtu(SD2->D2_COD,SD2->D2_LOCAL,SD2->D2_TIPO, aEnvCus)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava o custo da nota fiscal de entrada           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aCusto := GravaCusD2(aCM,Iif(SF4->F4_PODER3 == "D","D",SD2->D2_TIPO))

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o saldo final (VFIM) com os dados do SD2 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !lPedidos
			B2AtuComD2(aCusto,Nil,Nil,.F.)
			If Localiza(SD2->D2_COD).And.SD2->D2_TPDCENV == _RMCONS
				SDB->(DbSetOrder(1))
				cChave	:=	SD2->(D2_COD+D2_LOCAL+D2_NUMSEQ+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA)
				SDB->(MsSeek(xFilial()+cChave))
				While !SDB->(EOF()) .And. xFilial('SDB') == SDB->DB_FILIAL .And. cChave == ;
						SDB->(DB_PRODUTO+DB_LOCAL+DB_NUMSEQ+DB_DOC+DB_SERIE+DB_CLIFOR+DB_LOJA)
					Reclock('SDB',.F.)
					Replace	DB_ORIGEM With 'SC6'
					MsUnLock()
					SDB->(DbSkip())
				Enddo
			Endif
		Else
			B2AtuComD2(aCusto,,{ {cPedido,cItemPed,cSeqLibC9,nQtdLibe,nQtd2UM} },.T.)
		Endif

		nQtdFat:= SD2->D2_QUANT

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ So efetuar o controle de Poder de Terceiros se n„o houver           ³
		//³ Remito, Se existir o Controle j  foi efetuado na Gera‡„o do Remito. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SB2")
		RecLock("SB2",.F.)
		If SD2->D2_TIPO=='N'
			If SF4->F4_PODER3=='D'
				Replace B2_QTNP  With B2_QTNP-SD2->D2_QUANT
			ElseIf SF4->F4_PODER3=='R'
				Replace B2_QNPT  With B2_QNPT+SD2->D2_QUANT
			EndIf
		ElseIf SD2->D2_TIPO=='B'
			If SF4->F4_PODER3=='R'
				Replace B2_QNPT  With B2_QNPT+SD2->D2_QUANT
			ElseIf SF4->F4_PODER3=='D'
				Replace B2_QTNP  With B2_QTNP-SD2->D2_QUANT
			EndIf
		EndIf
		MsUnLock()
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ So efetuar o controle de Poder de Terceiros se n„o houver           ³
		//³ Remito, Se existir o Controle j  foi efetuado na Gera‡„o do Remito. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cTipoRem $ "1/"+_RMCONS

			cCodConsig := SD2->D2_COD
			cLocConsig := SD2->D2_LOCDEST
			If Empty(cLocConsig)
				cLocConsig := GetMV("MV_PODER3")
			EndIf

			dbSelectArea("SB2")
			If MsSeek(xFilial("SB2")+cCodConsig+cLocConsig)

				nBaseCusto := ( nItemValTot+nFreteItem )

				nBaseCusto := xMoeda(nBaseCusto,SF2->F2_MOEDA,1,dDataBase,TamSX3("D2_TOTAL")[2],,nTaxamoeda)

				aEnvCus:={ nBaseCusto, 0, 0.00,;
					" "," ",SD2->D2_NFORI,SD2->D2_SERIORI,;
					cCodConsig,cLocConsig,SD2->D2_QUANT,0.00}

				aCM := PegaCMAtu(cCodConsig,cLocConsig,SD2->D2_TIPO, aEnvCus)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Grava o custo da nota fiscal de entrada           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				aCusto := GravaCusD2(aCM,Iif(SF4->F4_PODER3 == "D","D",SD2->D2_TIPO))

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza o saldo final (VFIM) com os dados do SD2 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				B2AtuComD2(aCusto,,{ {cPedido,cItemPed,cSeqLibC9,nQtdLibe,nQtdLibe2} },.T.)
			EndIf
		Else
			aCusCN	:=	{GetSD2('D2_CUSTO1'),GetSD2('D2_CUSTO2'),GetSD2('D2_CUSTO3'),GetSD2('D2_CUSTO4'),GetSD2('D2_CUSTO5')}
			If SD2->D2_QUANT <> GetSD2('D2_QUANT')
				aCusCN[1]	*=	SD2->D2_QUANT /GetSD2('D2_QUANT')
				aCusCN[2]	*=	SD2->D2_QUANT /GetSD2('D2_QUANT')
				aCusCN[3]	*=	SD2->D2_QUANT /GetSD2('D2_QUANT')
				aCusCN[4]	*=	SD2->D2_QUANT /GetSD2('D2_QUANT')
				aCusCN[5]	*=	SD2->D2_QUANT /GetSD2('D2_QUANT')
			EndIf

			Reclock("SD2",.F.)
			Replace	D2_CUSTO1	With	aCusCN[1] ,;
					D2_CUSTO2	With	aCusCN[2] ,;
					D2_CUSTO3	With	aCusCN[3] ,;
					D2_CUSTO4	With	aCusCN[4] ,;
					D2_CUSTO5	With	aCusCN[5]
			MsUnLock()
		EndIf
	EndIf

	If ExistBlock("GRVCOSB2")
		ExecBlock("GRVCOSB2",.F.,.F.)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o arquivo de Demandas SB3 com dados SD2. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !(SD2->D2_TIPO $ "DB") .And. Empty(SD2->D2_REMITO)
		cMes := "B3_Q"+StrZero(Month(SD2->D2_EMISSAO),2)
		dbSelectArea("SB3")
		MsSeek( xFilial("SB3")+SD2->D2_COD)
		If !Found()
			RecLock("SB3",.T.)
			Replace B3_FILIAL With xFilial("SB3"), B3_COD With SD2->D2_COD
		Else
			RecLock("SB3",.F.)
		EndIf
		If SD2->D2_TES <= "500"
			Replace &(cMes) With &(cMes) - SD2->D2_QUANT
		Else
			Replace &(cMes) With &(cMes) + SD2->D2_QUANT
		EndIf
		Replace B3_MES With SD2->D2_EMISSAO
		MsUnLock()
	EndIf
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ So efetuar o controle de Poder de Terceiros se n„o houver           ³
	//³ Remito, Se existir o Controle j  foi efetuado na Gera‡„o do Remito. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Empty(cRemito)
		aCusto := {0,0,0,0,0}
		If SF4->F4_PODER3 $ 'DR'
			dbSelectArea("SB2")
			dbSetOrder(1)
			MsSeek(cFilial+SD2->D2_COD+SD2->D2_LOCAL)
			If Found()
				RecLock("SB2",.F.)
			Else
				CriaSB2(SD2->D2_COD,SD2->D2_LOCAL)
			EndIf
			If SF4->F4_PODER3 == "D"
				Replace B2_QTER  With B2_QTER-SD2->D2_QUANT
			Else
				Replace B2_QTER  With B2_QTER+SD2->D2_QUANT
			EndIf
		EndIf
	EndIf
EndIf

If IntePms()		// Integracao PMS
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza os arquivos de Gerenciamento de Projetos - SIGAPMS - 1:Inclusao³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PmsWriteD2(1,"SD2")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gera Lancamento Controle Poder Terceiros 			³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(cRemito)
	If SC5->C5_TIPO $ 'NB' .and. SF4->F4_PODER3 $ 'RD'
		aCpoSD[01]:=SD2->D2_CLIENTE
		aCpoSD[02]:=SD2->D2_LOJA
		aCpoSD[03]:=SD2->D2_COD
		aCpoSD[04]:=SD2->D2_LOCAL
		aCpoSD[05]:=xMoeda(SD2->D2_PRCVEN,SF2->F2_MOEDA,1,dDataBase,TamSX3("D2_PRCVEN")[2],,nTaxamoeda)
		aCpoSD[06]:="E"
		aCpoSD[07]:=SD2->D2_DOC
		aCpoSD[08]:=SD2->D2_SERIE
		aCpoSD[09]:=SD2->D2_EMISSAO
		aCpoSD[10]:=SD2->D2_EMISSAO
		aCpoSD[11]:=SD2->D2_CF
		aCpoSD[12]:=SD2->D2_QUANT
		aCpoSD[13]:=SD2->D2_UM
		aCpoSD[14]:=SD2->D2_QTSEGUM
		aCpoSD[15]:=SD2->D2_SEGUM
		aCpoSD[16]:=""
		aCpoSD[17]:=SD2->D2_NUMSEQ
		cChaveSB6 := SD2->D2_IDENTB6+SD2->D2_COD
		AtuaSB6(SD2->D2_TES,cChaveSB6,aCpoSD,aCusto,SC5->C5_TIPO)
	EndIf

	If SF4->F4_PODER3 == "R"
		reclock("SD2",.f.)
		Replace SD2->D2_IDENTB6 With SB6->B6_IDENT
		MsUnlock()
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada, para gravar o que for necesario     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄBrunoÄÙ
If ExistBlock("M468SD2")
	ExecBlock( "M468SD2",.F.,.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gera Lancamento Contabeis a nivel de itens        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lLancPad10
	SF2->( dbSetOrder(1) )
	SF2->( MsSeek(xFilial("SF2") + SD2->D2_DOC + SD2->D2_SERIE + SD2->D2_CLIENTE + SD2->D2_LOJA + SD2->D2_FORMUL) )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera Lancamento Contabeis a nivel de itens                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTotal+=DetProva(nHdlPrv,"610","MATA468",cLoteFat)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PcoDetLan("000362","01","MATA468")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualizo a tabela SF2 - NfeArg
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "ARG"
	SF2->( dbSetOrder(1) )
	If SF2->( MsSeek(xFilial("SF2") + SD2->D2_DOC + SD2->D2_SERIE + SD2->D2_CLIENTE + SD2->D2_LOJA + SD2->D2_FORMUL) )
		If !Empty(cTpVent)
			Reclock("SF2",.F.)
			Replace SF2->F2_TPVENT With cTpVent
			MsUnlock()
		Endif
		If !Empty(dDtIniS)
			Reclock("SF2",.F.)
			Replace SF2->F2_FECDSE With dDtIniS
			MsUnlock()
		Endif
		If !Empty(dDtFinS)
			Reclock("SF2",.F.)
			Replace SF2->F2_FECHSE With dDtFinS
			MsUnlock()
		Endif
	EndIf
	SF3->( dbSetOrder(4) )
	If SF3->( MsSeek(xFilial("SF3") + SD2->D2_CLIENTE + SD2->D2_LOJA + SD2->D2_DOC + SD2->D2_SERIE) )
		If !Empty(cTpVent)
			Reclock("SF3",.F.)
			Replace SF3->F3_TPVENT With cTpVent
			MsUnlock()
		Endif
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Efetua a Atualizacao da Assistencia Tecnica                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(cPaisLoc $ "PAR|URU")
	// atulalmente n„o temos Assitencia Tecnica na Argentina Lucas 11.02.92
	If ( SF4->F4_ATUTEC=="S" )
		If ( !Empty(SD2->D2_NUMSERI) )
			AtTrfEqpto(SD2->D2_CODFAB,SD2->D2_LOJAFA,SD2->D2_COD,SD2->D2_NUMSERI,SD2->D2_CLIENTE,SD2->D2_LOJA)
		EndIf
	EndIf
EndIf

**** Verificar se deve ser considerado somente para Colombia
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Rotina para tratar a gravacao do rateio por item nota fiscal de saida.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

aAreaRat := GetArea()
nItemRat := 0
dbSelectArea("AGG")
dbSetOrder(1) // AGG_FILIAL+AGG_PEDIDO+AGG_FORNEC+AGG_LOJA+AGG_ITEMPD+AGG_ITEM
If dbSeek(xFilial("AGG") + SD2->D2_PEDIDO + SD2->D2_CLIENTE + SD2->D2_LOJA + SD2->D2_ITEMPV)
    While AGG->(!EOF()) .AND. AGG->(AGG_FILIAL+AGG_PEDIDO+AGG_FORNEC+AGG_LOJA+AGG_ITEMPD) == xFilial("AGG") + SD2->D2_PEDIDO + SD2->D2_CLIENTE + SD2->D2_LOJA + SD2->D2_ITEMPV
        nItemRat++
        RecLock("AGH",.T.)
        AGH->AGH_FILIAL     :=  xFilial("AGH")
        AGH->AGH_NUM        :=  SF2->F2_DOC

        SerieNfId("AGH",1,"AGH_SERIE",,,, SF2->F2_SERIE )

        AGH->AGH_FORNECE    :=  SD2->D2_CLIENTE
        AGH->AGH_LOJA       :=  SD2->D2_LOJA
        AGH->AGH_ITEMPD     :=  SD2->D2_ITEM
        AGH->AGH_ITEM       :=  STRZERO( nItemRat , TamSX3("AGH_ITEM")[1])
        AGH->AGH_PERC       :=  AGG->AGG_PERC
        AGH->AGH_CC         :=  AGG->AGG_CC
        AGH->AGH_CONTA      :=  AGG->AGG_CONTA
        AGH->AGH_ITEMCTA    :=  AGG->AGG_ITEMCTA
        AGH->AGH_CLVL       :=  AGG->AGG_CLVL
        AGH->AGH_CUSTO1     :=  SD2->D2_CUSTO1 * (AGG->AGG_PERC/100)
        AGH->AGH_CUSTO2     :=  SD2->D2_CUSTO2 * (AGG->AGG_PERC/100)
        AGH->AGH_CUSTO3     :=  SD2->D2_CUSTO3 * (AGG->AGG_PERC/100)
        AGH->AGH_CUSTO4     :=  SD2->D2_CUSTO4 * (AGG->AGG_PERC/100)
        AGH->AGH_CUSTO5     :=  SD2->D2_CUSTO5 * (AGG->AGG_PERC/100)

        aEntidades := CtbEntArr()
        For nEnt := 1 to Len(aEntidades)
            For nDeb := 1 to 2

                cCpo := "AGH_EC"+aEntidades[nEnt]
                cAGG := "AGG_EC"+aEntidades[nEnt]

                If nDeb == 1
                    cCpo += "DB"
                    cAGG += "DB"
                Else
                    cCpo += "CR"
                    cAGG += "CR"
                EndIf

                If AGH->(FieldPos(cCpo))
                    AGH->(&(cCpo)) := AGG->(&(cAGG))
                EndIf

            Next nDeb
        Next nEnt

        MsUnLock()
        //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
        //³ Grava os lancamentos de rateio de Item de NFs SIGAPCO    ³
        //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        PcoDetLan("000362","03","MATA461")

        AGG->(dbSkip())

    EndDo
    RecLock("SD2",.F.)
        SD2->D2_RATEIO := "1"
    MsUnLock()
EndIf

RestArea(aAreaRat)

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ a468nDupl ³ Autor ³ Jose Lucas            ³ Data ³ 11.02.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina para gerar desdobramentos de duplicatas             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATa468n                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nDupl(nValTot,cCond,nTotDesc,aRegSE1,cPrefixo)
LOCAL i,j, nTotDup:=0, nValor:=0, aValor,cParcela,cBanco,nTotCr:=0
LOCAL bVend     := { |x| "SE1->E1_VEND"  + Str(x,1) }
LOCAL bPerComis := { |x| "SE1->E1_COMIS" + Str(x,1) }
LOCAL aVenc     :={}, nDup
Local nPerJur := GetMV("mv_txper")
Local nCont     := 0
Local nMoedaFin	:= SF2->F2_MOEDA
Local cNatureza := ""
Local lPParc	:=.F.
Local cQuery	:= ""
Local cAliasSE1 := ""
Local lUsaNewKey:= TamSX3("F2_SERIE")[1] == 14

// Local variables for Russia
Local nTaxRate   As Numeric
Local NTotBasM   As Numeric
Local nBasM      As Numeric
Local NTotBruM   As Numeric
Local nBruM		 As Numeric
Local NTotImpM   As Numeric
Local nImpM      As Numeric
Local nI		 As Numeric
Local nBasImp1   As Numeric
Local nValImp1   As Numeric
Local nValorTo   As Numeric
Local aVencRusB  As Array
Local aVencRusT  As Array
Local aVencRusI  As Array
nPerJur         := Iif(nPerJur==NIL,0,nPerJur)
cPrefixo        := "   "
cParcela        := GetMV("mv_1dup   ")
cBanco          := SC5->C5_BANCO
If cPaisLoc=="EQU"
	DbSelectArea("SA1")
	If SA1->(DbSeek(xFilial()+IIf(!Empty(SC5->C5_CLIENT),SC5->C5_CLIENT,SC5->C5_CLIENTE)+SC5->C5_LOJAENT))
		cNatureza:=SA1->A1_NATUREZ
		IF !Empty(cNatureza)
			lPParc:=Posicione("SED",1,xFilial("SED")+cNatureza,"ED_RATRET")=="1"
		Endif
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Converte valores da duplicata conforme parametro ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "BRA"
	If GetMv("MV_MOEDTIT") != "S"
		nMoedaFin := 1
	Else
		nMoedaFin := Iif(SC5->C5_MOEDA > 1,Iif(lPedidos,SC5->C5_MOEDA,GetSF2('F2_MOEDA')),nMoedaFin)
	EndIf
Else
	//Localizado Mercado Internacional
	If nTipoGer == 1
		nMoedaFin := Iif(SC5->C5_MOEDA > 1,Iif(lPedidos,SC5->C5_MOEDA,GetSF2('F2_MOEDA')),nMoedaFin)
	ElseIf nTipoGer == 2
		nMoedaFin := nMoedSel
	EndIf
EndIf
If ExistBlock("M468MOED")
	nMoedaFin := ExecBlock("M468MOED",.F.,.F., { lPedidos, nMoedSel, nTipoGer, nMoedaFin })
EndIf

If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
 	nValTot:=	xmoeda(nValTot,SF2->F2_MOEDA,nMoedaFin,dDataBase,aTamSx3Tot[2]+1,SF2->F2_TXMOEDA)
 	nValTot:= 	Round(nValTot    ,aTamSx3Tot[2])
Else
	 nValTot:=	xmoeda(nValTot,SF2->F2_MOEDA,nMoedaFin,dDataBase,aTamSx3Tot[2],SF2->F2_TXMOEDA)
EndIf

If SFB->FB_JNS $ 'J/S' .And. cPaisLoc == 'COL'
	dbSelectArea("SFC")
	dbSetOrder(2)
	If dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RV0")
		nValRetImp 	:= Iif(Len(aImpVarSF2)>2,aImpVarSF2[3][2],0)
		If FC_INCDUPL == '2'
			nValTot := nValTot + nValRetImp
			nTotDup	:= nValRetImp
		ElseIf FC_INCDUPL == '1'
			nTotDup := - nValRetImp
			nValTot := nValTot - nValRetImp
		EndIf
	Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RF0" )//Retenção TIMBRE
		nValRetImp 	:= aImpVarDup[1,2]
		If FC_INCDUPL == '2'
			nValTot := nValTot + nValRetImp
			nTotDup	:= nValRetImp
		ElseIf FC_INCDUPL == '1'
			nTotDup := - nValRetImp
			nValTot := nValTot - nValRetImp
		EndIf
	Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO +"RC0" )//Retenção ICA
		nValRetImp 	:= Iif(Len(aImpVarSF2)>0,aImpVarSF2[1][2],0)
		If FC_INCDUPL == '2'
			nValTot := nValTot + nValRetImp
			nTotDup	:= nValRetImp
		ElseIf FC_INCDUPL == '1'
			nTotDup := - nValRetImp
			nValTot := nValTot - nValRetImp
		EndIf
	EndIf
ElseIf cPaisLoc=="EQU" .And. lPParc
	DbSelectArea("SFC")
	SFC->(dbSetOrder(2))
	If DbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RIR") //Retenção IVA
		cImpRet		:= SFC->FC_IMPOSTO
		nValRetImp 	:= 0
		DbSelectArea("SFB")
		SFB->(dbSetOrder(1))
		If SFB->(DbSeek(xFilial("SFB")+AvKey(cImpRet,"FB_CODIGO")))
		    If Len(aImpVarSF2)>0
			    For nCont:=1 To Len(aImpVarSF2)
			    	If Upper(Alltrim(aImpVarSF2[nCont][1]))==Alltrim("F2_VALIMP"+SFB->FB_CPOLVRO)
						nValRetImp 	:= aImpVarSF2[nCont][2]
						Exit
					EndIf
			    Next
			EndIf
	    EndIf
	    DbSelectArea("SFC")
		If FC_INCDUPL == '2'
			nValTot := nValTot + nValRetImp
			nTotDup	:= nValRetImp
		ElseIf FC_INCDUPL == '1'
			nTotDup := - nValRetImp
			nValTot := nValTot - nValRetImp
		EndIf
    EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quando impostos variaveis acrescentar o Array de impostos Variaveis ³
//³ para a chamada fun‡„o Condicao                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄLucasÄÙ
If cPaisLoc == "PAR" .and. nDescTotIT > 0
	aVenc := Condicao(nValTot - nDescTotIT,cCond,0.00,dDataBase,0.00,aImpVarDup,,nAcresTot)
Else
	aVenc := Condicao(nValTot,cCond,0.00,Iif(cPaisloc == "RUS",dDTSaida,dDataBase),0.00,aImpVarDup,,nAcresTot)
Endif

If ExistBlock("MT468VCT")
	aVenc := ExecBlock("MT468VCT",.F.,.F.,{aVenc})
EndIf

nDup           := Len(aVenc)
cMV_1DUPREF    := NIL
cMV_1DUPNAT    := NIL

If lTpPedBenf
	dbSelectArea("SA2")
Else
	dbSelectArea("SA1")
Endif
nPosArqCli := Recno()

nTotCr := 0
dbSelectArea("SE1")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Este replace (E1_PREFIXO) deve ser antes de gravar³
//³ o IRRF                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cMV_1DUPREF:=subStr(&(GetMv("MV_1DUPREF")),1,TamSX3("E1_PREFIXO")[1])
cMV_1DUPNAT:=&(GetMv("MV_1DUPNAT"))


If lUsaNewKey
	/*CHAVE UNICA - Alterado por Tiago Silva*/
	SE1->(dbSetOrder(1))

	cAliasSE1 := "A468PRFX"
	cQuery := " SELECT MAX(E1_PREFIXO) E1PRFXMAX FROM " + RetSqlName("SE1")
	cQuery += " WHERE E1_FILIAL = '" + xFilial("SE1") + "'"
	cQuery += " AND E1_NUM      = '" + cNumero + "'"
	cQuery += " AND D_E_L_E_T_  = ''"
   	cQuery	  := ChangeQuery(cQuery)
	cAliasSE1 := CriaTrab(Nil,.F.)

	dbUseArea( .T., "TOPCONN", TcGenQry( , , cQuery ), cAliasSE1, .T., .T. )
	DbSelectArea(cAliasSE1)

	If !Empty( (cAliasSE1)->E1PRFXMAX )
		cPrefixo:= Soma1( (cAliasSE1)->E1PRFXMAX , TamSX3("E1_PREFIXO")[1] )
		/*
		Devido ao projeto CHAVE ÚNICA, a consistência abaixo é necessária para
		garantir que o novo título a ser gerado não irá colidir com um título
		da base histórica do cliente criada antes do projeto chave única.
		*/
		While .T.
			If (SE1->(dbSeek(xFilial("SE1")+cPrefixo+cNumero)))
				cPrfx:= Soma1(cPrefixo, TamSX3("E1_PREFIXO")[1])
			Else
				EXIT
			EndIf
		EndDo
	Else
		cPrefixo   :=cMV_1DUPREF
	EndIf
	(cAliasSE1)->(DbCloseArea())
	/*CHAVE UNICA*/
Else
	cPrefixo :=cMV_1DUPREF
Endif

If cPaisLoc == "RUS"
	NTotBasM   := 0
	NTotBruM   := 0
	NTotImpM   := 0
	nBasImp1   := 0
	nValImp1   := 0
	nValorTo   := 0
	For nI := 1 To Len(aImpVarSF2)
		Do Case
			Case aImpVarSF2[nI][1]  == "F2_BASIMP1"
				nBasImp1 += aImpVarSF2[nI][2]
			Case aImpVarSF2[nI][1]  == "F2_VALIMP1"
				nValImp1 += aImpVarSF2[nI][2]
		EndCase
	Next nI
	nValorTo   := nBasImp1 + nValImp1
	aVencRusB  := Condicao(nBasImp1,cCond,0.00,dDTSaida) //BaseM
	aVencRusT  := Condicao(nValorTo,cCond,0.00,dDTSaida) //BrutM
	aVencRusI  := Condicao(nValImp1,cCond,0.00,dDTSaida) //ImpoM
	nTaxRate   := RU09XFUN08(nValImp1/*nTaxAmnt*/,nBasImp1/*nTaxBase*/)  //LocxNF2.PRW
EndIf

For i:=1 To nDup
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ VerIfica moeda para deducao do arredondamento     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc=="EQU" .And. Posicione("SED",1,xFilial("SED")+SF2->F2_NATUREZ,"ED_RATRET")=="1"
		If i==1
			nValor := aVenc[i][2] - nTotDup
		Else
			nValor := aVenc[i][2]
		Endif
	Else
		If (i == nDup)
			If cPaisLoc == "PAR" .and. nDescTotIT > 0
				nValor := (nValTot- nDescTotIT) - nTotDup
			Else
				nValor := nValTot - nTotDup
			EndIf
			If cPaisLoc == "RUS"
				nBasM  := nBasImp1 - NTotBasM
				nBruM  := nValorTo - NTotBruM
				nImpM  := nValImp1 - NTotImpM
			EndIf
		Else
			nValor := aVenc[i][2]
			If cPaisLoc == "RUS"
				nBasM  := aVencRusB[i][2]
				nBruM  := aVencRusT[i][2]
				nImpM  := aVencRusI[i][2]
			EndIf
		EndIf
	EndIf

	If nDup == 1 .AND. cPaisLoc <> "MEX"
		cParcela := " "
	Else
		If cPaisLoc <> "BRA" .And. nDup > 36
			cParcela := StrZero(i,2)
		Else
			cParcela := If(i>1,MaParcela(cParcela),Iif(Empty(cParcela),"A",cParcela))
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o Arquivo de Clientes                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lTpPedBenf
		dbSelectArea("SA2")
	Else
		dbSelectArea("SA1")
	Endif
	MsGoTo( nPosArqCli )


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³   Grava dupliacatas em SE1                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	RecLock("SE1",.T.)
	Replace 	E1_NUM      With cNumero,;
		E1_MOEDA    With nMoedaFin ,;
		E1_VALOR    With Round(nValor,MsDecimais(SE1->E1_MOEDA)) ,;
		E1_SALDO    With Round(nValor,MsDecimais(SE1->E1_MOEDA)),;
		E1_EMISSAO  With Iif(cPaisloc == "RUS",dDTSaida,dDataBase),;
		E1_CLIENTE  With If( lTpPedBenf, SA2->A2_COD , SA1->A1_COD  ) ,; //Bruno 28/11/99 00:16
		E1_LOJA     With If( lTpPedBenf, SA2->A2_LOJA, SA1->A1_LOJA ) ,;
		E1_LA       With "S",;
		E1_NOMCLI   With If(	lTpPedBenf,;
						    	Iif(Empty(SA2->A2_NREDUZ),SA2->A2_NOME,SA2->A2_NREDUZ),;
								Iif(Empty(SA1->A1_NREDUZ),SA1->A1_NOME,SA1->A1_NREDUZ) ;
		                   )

	Replace 	E1_SITUACA  With "0" ,;
		E1_FILIAL   With cFilial  ,;
		E1_EMIS1    With dDataBase,;
		E1_PARCELA  With cParcela ,;
		E1_VENCORI  With aVenc[i][1],;
		E1_TIPO     With cEspecie,;
		E1_VENCTO   With aVenc[i][1],;
		E1_VENCREA  With DataValida(aVenc[i][1],.T.),;
		E1_STATUS   With "A",;
		E1_PORCJUR  With nPerJur,;
		E1_VALJUR   With Round(nValor * (nPerJur / 100),MsDecimais(SE1->E1_MOEDA)),;
		E1_PEDIDO   With SC5->C5_NUM ,;
		E1_OCORREN 	With CriaVar("E1_OCORREN"),;
		E1_DESCFIN  With SE4->E4_DESCFIN,;
		E1_VLCRUZ   With Iif(cPaisLoc $ "ARG|BOL|CHI|PAR|URU",;
							Round(xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,1,SE1->E1_EMISSAO,MsDecimais(1)+1,Iif (((aParams[22] == 2).and.(cPaisLoc=="BOL")),Recmoeda(dDatabase,nMoedSel),SF2->F2_TXMOEDA)),MsDecimais(1)),;
							Round(xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,1,SE1->E1_EMISSAO,,SF2->F2_TXMOEDA),MsDecimais(1));
							)

		If FieldPos("E1_TXMOEDA")>0
			Replace E1_TXMOEDA With Iif (((aParams[22] == 2).and.(cPaisLoc=="BOL")),Recmoeda(dDatabase,nMoedSel),SF2->F2_TXMOEDA)
		EndIf

	Replace E1_PREFIXO	With cPrefixo
	Replace E1_NATUREZ	With cMV_1DUPNAT
	//Replace E1_SERIE	With cSerie
	SerieNfId("SE1",1,"E1_SERIE",,,,SF2->F2_SERIE)//Projeto Chave Unica - Tiago Silva
	Replace E1_DIADESC	With SE4->E4_DIADESC

	// Se o Campo D2_NATUREZ ou C5_NATUREZ estiverem vazios sera mantido
	// o valor que veio do parametro MV_1DUPNAT - Sergio Camurca
	If Empty(SD2->D2_PEDIDO) .and. !lPedidos .and. !Empty(SF2->F2_NATUREZ)
		Replace E1_NATUREZ   With SF2->F2_NATUREZ
	Elseif !Empty(SC5->C5_NATUREZ)
		Replace E1_NATUREZ   With SC5->C5_NATUREZ
	EndIf
	If SE1->(FieldPos("E1_CONDPAG")) > 0
		Replace E1_CONDPAG   With cCond
	EndIf
	If SE1->(FieldPos("E1_CGC")) > 0
		Replace E1_CGC		With If( lTpPedBenf, SA2->A2_CGC, SA1->A1_CGC )
	EndIf

	If cPaisLoc == "COL"
		If !lPedidos .and. !Empty(SF2->F2_TRMPAC)
			Replace E1_TRMPAC   With SF2->F2_TRMPAC
		Elseif !Empty(SC5->C5_TRMPAC)
			Replace E1_TRMPAC   With SC5->C5_TRMPAC
		EndIf
	EndIf

	If cPaisLoc == "RUS"
	   E1_MOEDA := SF2->F2_MOEDA
	   E1_CONUNI := SF2->F2_CONUNI
	   E1_F5QUID := SF2->F2_F5QUID
	   E1_F5QCODE := SF2->F2_CNTID
	   E1_BASIMP1 := nBasM
	   E1_VALIMP1 := nImpM
	   E1_ALQIMP1 := nTaxRate
	   NTotBasM += nBasM
	   NTotBruM += nBruM
	   NTotImpM += nImpM
	EndIf

	If cPaisLoc == "EUA"
		E1_SLPLAID :=  SE1->E1_VALOR
		E1_PORTADO :=  Posicione("SA1",1,xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA,"A1_BCO1")
	EndIf

	dbSelectArea("SED")
	MsSeek(xFilial("SED")+SE1->E1_NATUREZ)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula a comissao , se houver vendedor           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE1")
	For j:=1 To Len(aVend)
		Replace &(EVAL(bVend,j))      With aVend[j][1]
		Replace &(EVAL(bPerComis,j))  With aVend[j][2]
	Next j

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera titulos a receber                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	A040DupRec( "Mata460",(i == 1) )
	nValFun  := 0
	dbSelectArea("SE1")
	aadd( aRegSE1, SE1->(Recno()) )
	nTotDup += SE1->E1_VALOR

	DbSelectArea("SE4")
	DbSetOrder(1)
	MsSeek(xFilial()+cCond)
	dbSelectArea("SE1")
Next i
Return( nTotDup )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a468nGravRE³ Autor ³ Lucas                ³ Data ³ 20.11.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Atualizar os registros de SC9 ou SD2...		              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATa468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nGravRE(cNumero,cSerie,aAtuSC5)
LOCAL nQuant	:= SD2->D2_QUANT
Local cNum 		:= ""
Local cItem		:=	""
Local cCod		:= ""
Local aAreaSD2	:=	{}
Local lAtuPed	:=	.F.
If lPedidos
	lAtuPed	:=	.T.
	cNum 	:=	SD2->D2_PEDIDO
	cItem	:=	SD2->D2_ITEMPV
	cCod	:=	SD2->D2_COD
	If ( !Empty(SC9->C9_CARGA) )
		dbSelectArea("DAK")
		dbSetOrder(1)
		If MsSeek(xFilial("DAK")+SC9->C9_CARGA+SC9->C9_SEQCAR)
			RecLock("SF2",.F.)
			SF2->F2_CARGA  := SC9->C9_CARGA
			SF2->F2_SEQCAR := SC9->C9_SEQCAR
			MsUnLock()
			dbSelectArea("DAI")
			dbSetOrder(4)
			If MsSeek(xFilial("DAI")+SC9->C9_PEDIDO+SC9->C9_CARGA+SC9->C9_SEQCAR)
				RecLock("DAI",.F.)
				DAI->DAI_NFISCA := cNumero
				SerieNfId("DAI",1,"DAI_SERIE",,,,SD2->D2_SERIE) //Projeto Chave Unica - Tiago Silva
				//DAI->DAI_SERIE  := cSerie
				MsUnLock()
			Endif
		EndIf
	EndIf
Else
	aAreaSD2	:=	SD2->(GetArea())
	(cRem)->(MsGoTo(GetSD2('RECNO')))
	RecLock(cRem,.F.)
	If (cRem)->D2_TIPOREM <> _RMCONS
		Replace D2_QTDEFAT   With D2_QTDEFAT + nQuant
	Endif
	Replace D2_OK			With	"  "
	Replace D2_QTDAFAT   With D2_QUANT -(D2_QTDEDEV+D2_QTDEFAT)
	MsUnLock()
	If !Empty((cRem)->D2_PEDIDO)
		If (cRem)->D2_QUANT <> ((cRem)->D2_QTDEFAT + (cRem)->D2_QTDEDEV)
			RecLock("SC9",.F.)
			Replace C9_NFISCAL   With ""
			Replace C9_SERIENF   With ""
			Replace C9_BLEST     With ""
			Replace C9_BLCRED    With ""
			MsUnLock()
		Else
			lAtuPed	:=	.T.
		EndIf
		If !Empty(SC9->C9_CARGA)
			dbSelectArea("DAK")
			dbSetOrder(1)
			If MsSeek(xFilial("DAK")+SC9->C9_CARGA+SC9->C9_SEQCAR)
				RecLock("SF2",.F.)
				SF2->F2_CARGA  := SC9->C9_CARGA
				SF2->F2_SEQCAR := SC9->C9_SEQCAR
				MsUnLock()
			Endif
		EndIf
	EndIf
	cNum 	:=	(cRem)->D2_PEDIDO
	cItem	:=	(cRem)->D2_ITEMPV
	cCod	:=	(cRem)->D2_COD
	RestArea(aAreaSD2)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava qtde entregue quando for gerado a partir de ³
//³ um PV e atualiza os campos NF, Serie e Data.      ³
//³ Sergio Camurca                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lPedidos .Or. lAtuPed
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza Cabecalho de Pedido de Venda                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Ascan(aAtuSC5,cNum) == 0
		AAdd(aAtuSC5,cNum)
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza itens do Pedido de Venda                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SC6->(DbSetOrder(1))
	SC6->(MsSeek(xFilial("SC6")+cNum+cItem+cCod))
	RecLock("SC6",.F.)
	MaAvalSC6("SC6",5)
	MsUnlock()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza Itens de Pedido Liberado                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RecLock("SC9")
	MaAvalSC9("SC9",11)
	MsUnLock()
	RecLock("SC9",.F.)
	Replace C9_OK			With	"  "
	MsUnLock()
Endif

If ExistBlock("M468APED")
	ExecBlock("M468APED",.F.,.F.)
EndIf
Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a468nFrete³ Autor ³ Jose Lucas            ³ Data ³ 15.05.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa para Rateio de Frete.                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpA1 := A460Frete(ExpN1,ExpN2,ExpC1)                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATa468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nFrete(cNumPed,nQtdLib)
LOCAL nParFrete   	:= 0
LOCAL nParSeguro  	:= 0
LOCAL nParDespesa 	:= 0
LOCAL lFreteMoe 	:= Iif(GetMv("MV_FRETMOE") == "S",.T.,.F.)
Local nPosPed		:= 0
Local nPesoTot 		:= 0
Local nValTot 		:= 0
Local nValItem 		:= 0
Local nPesoItem		:= 0
Local aArea			:= GetArea()
Local aAreaSC6		:= SC6->(GetArea())
Local nTaxaFrete 	:= 0
Local nParDesNTr 	:= 0
Local nParTara 		:= 0
Local nRatNTrb 		:= 0
Local nRatTara 		:= 0
Local nFator4		:= 0
Local nFator5		:= 0

nTaxaFrete := SC5->C5_TXMOEDA

If nTaxaFrete <=0
	nTaxaFrete:= Recmoeda(dDatabase,SC5->C5_MOEDA)
EndIf

If cRat == Nil
	cRat  	:= GetNewPar("MV_RATDESP","FR=1;DESP=1;SEG=1")
	nRatDesp := Val(Substr(cRat,AT("DESP=" ,cRat)+5,1))
	nRatFret := Val(Substr(cRat,AT("FR="   ,cRat)+3,1))
	nRatSeg  := Val(Substr(cRat,AT("SEG="  ,cRat)+4,1))
	nRatNTrb := Val(Substr(cRat,AT("NTRB="  ,cRat)+5,1))
	nRatTara := Val(Substr(cRat,AT("TARA="  ,cRat)+5,1))
Endif

aPedTots	:=	{}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se a variavel lfrete estiver com .T. ele ira converter o valor do frete / despesa     ³
//³ e seguro da moda 1  para a moeda do pedido                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc $ "PER|EUA"
	nParfrete   += Iif(lFreteMoe .And. SC5->C5_MOEDA > 1,xMoeda(SC5->C5_FRETE,1,SC5->C5_MOEDA,dDataBase,8,nTaxaFrete ),SC5->C5_FRETE)
ElseIf cPaisLoc == "BOL"
	nParfrete   += Iif(lFreteMoe .And. SC5->C5_MOEDA > 1,;
					xMoeda(Iif(SC5->C5_TPFRETE $ "F|C",SC5->C5_FRETE,0),1,SC5->C5_MOEDA,dDataBase,8,nTaxaFrete ),;
					Iif(SC5->C5_TPFRETE $ "F|C",SC5->C5_FRETE,0))
Else
	nParfrete   += Iif(lFreteMoe .And. SC5->C5_MOEDA > 1,;
					xMoeda(Iif(SC5->C5_TPFRETE=="F",SC5->C5_FRETE,0),1,SC5->C5_MOEDA,dDataBase,8,nTaxaFrete ),;
					Iif(SC5->C5_TPFRETE=="F",SC5->C5_FRETE,0))
Endif
nParSeguro  += Iif(lFreteMoe .And. SC5->C5_MOEDA > 1,;
	xMoeda(SC5->C5_SEGURO,1,SC5->C5_MOEDA,dDataBase,8,nTaxaFrete),;
	SC5->C5_SEGURO)
nParDespesa += Iif(lFreteMoe .And. SC5->C5_MOEDA > 1,;
	xMoeda(SC5->C5_DESPESA,1,SC5->C5_MOEDA,dDataBase,8,nTaxaFrete),;
	SC5->C5_DESPESA)
If cPaisLoc == "PTG"
	nParDesNTr += Iif(lFreteMoe .And. SC5->C5_MOEDA > 1,;
		xMoeda(SC5->C5_DESNTRB,1,SC5->C5_MOEDA,dDataBase,8,nTaxaFrete),;
		SC5->C5_DESNTRB)
	nParTara += Iif(lFreteMoe .And. SC5->C5_MOEDA > 1,;
		xMoeda(SC5->C5_TARA,1,SC5->C5_MOEDA,dDataBase,8,nTaxaFrete),;
		SC5->C5_TARA)
Endif

nPosPed	:=	Ascan(aPedTots,{|x| x[1] == cNumPed})
DbSelectArea('SB1')
DbSetOrder(1)

If nPosPed == 0
	DbSelectArea('SC6')
	DbSetOrder(1)
	MsSeek(xFilial()+SC5->C5_NUM)
	While !EOF() .And. SC5->C5_NUM == SC6->C6_NUM .And. xFilial() == C6_FILIAL
		If !(AllTrim(SC6->C6_TES) $ SuperGetMV("MV_BONUSTS"))
			SB1->(MsSeek(xFilial()+SC6->C6_PRODUTO))
			nPesoTot	+=	SB1->B1_PESO * SC6->C6_QTDVEN
			nValTot	+= SC6->C6_VALOR
			If SC9->C9_PEDIDO == SC6->C6_NUM .And. SC9->C9_ITEM == SC6->C6_ITEM
				nPesoItem	:=	nQtdLib * SB1->B1_PESO
				nValItem		:=	nQtdLib * SC6->C6_PRCVEN
			Endif
		EndIf
		SC6->(DbSkip())
	EndDo
	AAdd(aPedTots,{SC5->C5_NUM,nPesoTot,nValTot})
	nPosPed	:=	Len(aPedTots)
Else
	SB1->(MsSeek(xFilial()+SC9->C9_PRODUTO))
	nPesoItem	:=	nQtdLib * SB1->B1_PESO
	nValItem		:=	nQtdLib * SC9->C9_PRCVEN
Endif

nFator1	:=	If(nRatFret == 2.And.aPedTots[nPosPed][2] >0 ,(nPesoItem/aPedTots[nPosPed][2]),(nValItem/aPedTots[nPosPed][3]))
nFator2	:=	If(nRatSeg  == 2.And.aPedTots[nPosPed][2] >0 ,(nPesoItem/aPedTots[nPosPed][2]),(nValItem/aPedTots[nPosPed][3]))
nFator3	:=	If(nRatDesp == 2.And.aPedTots[nPosPed][2] >0 ,(nPesoItem/aPedTots[nPosPed][2]),(nValItem/aPedTots[nPosPed][3]))

If cPaisLoc == "PTG"
	nFator4	:=	If(nRatNTrb == 2.And.aPedTots[nPosPed][2] >0 ,(nPesoItem/aPedTots[nPosPed][2]),(nValItem/aPedTots[nPosPed][3]))
	nFator5	:=	If(nRatTara == 2.And.aPedTots[nPosPed][2] >0 ,(nPesoItem/aPedTots[nPosPed][2]),(nValItem/aPedTots[nPosPed][3]))
Endif

RestArea(aAreaSC6)
RestArea(aArea)
Return( { nParFrete*nFator1,nParSeguro*nFator2,nParDespesa*nFator3,nParDesNTr*nFator4,nParTara*nFator5 } )

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ a468nTotal  ³ Autor ³ Jose Lucas          ³ Data ³ 15.05.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Obter o Total por Factura para comparar com o valor m¡nimo ³±±
±±³          ³ das perguntas...                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpA1 := a468nTotal(ExpC1)                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATa468n                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nTotal()

Return( {1,1} )


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ a468nConsig³ Autor ³ Lucas               ³ Data ³ 21/11/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Exibir Remitos consignados e imputar quantidades a Faturar ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATa468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nConsig(lPedidos)

Local lRet      := .T.
Local nOpca     := 0
Local cSujFiscal:= ""
Local cProvincia:= ""
Local nQtdeLib  := 0
Local nQtdeOrig := 0
Local nQtdeEntr := 0
Local nPrecTotal:= 0
Local cRetCGC   := If( lTpPedBenf, RetTitle("A2_CGC"), RetTitle("A1_CGC") )

PRIVATE cCodDiario := CtbaVerdia()

Default lPedidos := .F.

If ExistBlock("M468CONS")
	If !(ExecBlock("M468CONS",.F.,.F.))
		Return( lRet )
	EndIf
EndIf

If !lPedidos
	If TRB->D2_OK <> cMarca
		If !a468nMrk()
			Return .F.
		Endif
	Endif

	nQtdeOrig := TRB->D2_QUANT
	nQtdeEntr := TRB->D2_QTDEFAT
	nQtdeLib  := TRB->D2_QTDAFAT
	nPrecTotal:= TRB->D2_PRCVEN  * nQtdeLib
	cCadastro := Iif(SD2->D2_TIPOREM$"1/"+_RMCONS,cRetTitle+OemToAnsi(STR0137),STR0026)  //"cRetTitle+ Consignados(as), "Seleccione cantidad a facturar"

	If lTpPedBenf
		SA2->( MsSeek(xFilial("SA2")+TRB->D2_CLIENTE+TRB->D2_LOJA) )
	Else
		SA1->( MsSeek(xFilial("SA1")+TRB->D2_CLIENTE+TRB->D2_LOJA) )
	Endif

	SX5->( MsSeek(xFilial("SX5")+"SF"+If(lTpPedBenf,SA2->A2_TIPO,SA1->A1_TIPO)) )
	cSujFiscal := X5Descri()

	SX5->( MsSeek(xFilial("SX5")+"12"+If(lTpPedBenf,SA2->A2_EST,SA1->A1_EST)) )
	cProvincia := X5Descri()

	DEFINE MSDIALOG oDlg FROM  09,0 TO 25,76 TITLE cCadastro OF oMainWnd

	@ 001, 002 TO 057, 267 OF oDlg   PIXEL
	@ 058, 002 TO 119, 267 OF oDlg   PIXEL

	@ 007, 005 SAY OemToAnsi(STR0027)    	SIZE 21, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 004 MSGET SA2->A2_COD When .F.  SIZE 23, 11 OF oDlg PIXEL
	Else
		@ 016, 004 MSGET SA1->A1_COD When .F.  SIZE 23, 11 OF oDlg PIXEL
	Endif

	@ 007, 029 SAY OemToAnsi(STR0028)      SIZE 16, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 029 MSGET SA2->A2_LOJA When .F. SIZE 16, 11 OF oDlg PIXEL
	Else
		@ 016, 029 MSGET SA1->A1_LOJA When .F. SIZE 16, 11 OF oDlg PIXEL
	Endif

	@ 007, 048 SAY OemToAnsi(STR0029)     	SIZE 20, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 048 MSGET SA2->A2_NOME When .F. SIZE 107, 11 OF oDlg PIXEL
	Else
		@ 016, 048 MSGET SA1->A1_NOME When .F. SIZE 107, 11 OF oDlg PIXEL
	Endif

	@ 007, 158 SAY cRetCGC  	SIZE 20, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 158 MSGET SA2->A2_CGC Picture pesqpict("SA2","A2_CGC") When .F. SIZE 53, 11 OF oDlg PIXEL
	Else
		@ 016, 158 MSGET SA1->A1_CGC Picture pesqpict("SA1","A1_CGC") When .F. SIZE 53, 11 OF oDlg PIXEL
	Endif

	@ 007, 214 SAY OemToAnsi(STR0033)  		SIZE 30, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 214 MSGET SA2->A2_TEL When .F.  SIZE 50, 11 OF oDlg PIXEL
	Else
		@ 016, 214 MSGET SA1->A1_TEL When .F.  SIZE 50, 11 OF oDlg PIXEL
	Endif

	@ 031, 005 SAY cRetTitle   SIZE 21, 7 OF oDlg PIXEL
	@ 039, 004 MSGET TRB->D2_DOC Picture pesqpict("SD2","D2_DOC") When .F. SIZE 42, 11 OF oDlg PIXEL

	@ 031, 048 SAY OemToAnsi(STR0036) SIZE 25, 7 OF oDlg PIXEL
	@ 039, 048 MSGET cSujFiscal           When .F. SIZE 107, 11 OF oDlg PIXEL

	@ 031, 158 SAY OemToAnsi(STR0037) SIZE 35, 7 OF oDlg PIXEL
	@ 039, 158 MSGET cProvincia           When .F. SIZE 80, 11 OF oDlg PIXEL

	@ 067, 005 SAY OemToAnsi(STR0038)     SIZE 15, 7 OF oDlg PIXEL
	@ 067, 027 SAY OemToAnsi(STR0039)  	SIZE 50, 7 OF oDlg PIXEL
	@ 067, 100 SAY OemToAnsi(STR0040)   	SIZE 50, 7 OF oDlg PIXEL
	@ 067, 157 Say OemToAnsi(STR0041)   	SIZE 50, 7 OF oDlg PIXEL

	@ 076, 005 MSGET TRB->D2_ITEM			SIZE 16, 11 Picture "@!" When .F. OF oDlg PIXEL
	@ 076, 027 MSGET TRB->D2_COD SIZE 68, 11 Picture "@!" When .F. OF oDlg PIXEL
	@ 076, 100 MSGET TRB->D2_PRCVEN  	SIZE 50, 11 Picture PesqPict("SD2","D2_TOTAL") When .F. OF oDlg PIXEL
	@ 076, 157 MSGET nPrecTotal      SIZE 68, 11 Picture PesqPict("SD2","D2_TOTAL") When .F. OF oDlg PIXEL

	@ 094, 005 SAY OemToAnsi(STR0084)   SIZE 50, 7 OF oDlg PIXEL  //"Quantidade Original"
	If SD2->D2_TIPOREM <> _RMCONS
		@ 094, 062 Say OemToAnsi(STR0085)   SIZE 50, 7 OF oDlg PIXEL  //"Quantidade Faturada"
		@ 094, 119 Say OemToAnsi(STR0086)	SIZE 50, 7 OF oDlg PIXEL  //"Quantidade Devolvida"
	Else
		@ 094, 062 Say OemToAnsi(STR0085+"/"+STR0046)   SIZE 70, 7 OF oDlg PIXEL  //"Quantidade Faturada/Devolvida"
	Endif
	@ 094, 176 Say OemToAnsi(STR0087)	SIZE 70, 7 OF oDlg PIXEL  //"Quantidade a Faturar"

	@ 103, 005 MSGET nQtdeOrig       SIZE 52,11 Picture PesqPict("SD2","D2_QUANT") When .F. OF oDlg PIXEL
	If SD2->D2_TIPOREM <> _RMCONS
		@ 103, 062 MSGET nQtdeEntr        SIZE 52,11 Picture PesqPict("SD2","D2_QUANT") When .F. OF oDlg PIXEL
		@ 103, 119 MSGET TRB->D2_QTDEDEV  SIZE 50,11 Picture PesqPict("SD2","D2_QUANT") When .F. OF oDlg PIXEL
	Else
		@ 103, 062 MSGET TRB->D2_QTDEDEV SIZE 70,11 Picture PesqPict("SD2","D2_QUANT") When .F. OF oDlg PIXEL
	Endif
	@ 103, 176 MSGET nQtdeLib        SIZE 50,11 Picture PesqPict("SD2","D2_QUANT") Valid a468nQtde(nQtdeLib,@nPrecTotal,lPedidos) OF oDlg PIXEL

	DEFINE SBUTTON FROM 004, 270 TYPE 1 ACTION (oDlg:End(),nOpca:=1) ENABLE OF oDlg
	DEFINE SBUTTON FROM 020, 270 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg

	ACTIVATE MSDIALOG oDlg

	If nOpca == 1
		Reclock("TRB",.F.)
		Replace TRB->D2_QTDAFAT With nQtdeLib
		MsUnLock()
		If TRB->D2_QTDAFAT  ==  0
			//Desmarca  registro
			a468nMrk()
		EndIf
		DbSelectArea("SD2")
		MsGoTo(TRB->RECNO)
		Reclock("SD2",.F.)
		Replace SD2->D2_QTDAFAT With nQtdeLib
		MsUnLock()
	EndIf
Else
	If TRB->C9_OK <> cMarca
		If !a468nMrk()
			Return .F.
		Endif
	Endif

	nQtdeOrig := TRB->C9_QTDLIB
	nQtdeLib  := nQtdeOrig
	nPrecTotal:= TRB->C9_PRCVEN  * nQtdeLib
	cCadastro := STR0026  //"Seleccione cantidad por facturar"

	If lTpPedBenf
		SA2->( MsSeek(xFilial("SA2")+TRB->C9_CLIENTE+TRB->C9_LOJA) )
	Else
		SA1->( MsSeek(xFilial("SA1")+TRB->C9_CLIENTE+TRB->C9_LOJA) )
	Endif

	SX5->( MsSeek(xFilial("SX5")+"SF"+If(lTpPedBenf,SA2->A2_TIPO,SA1->A1_TIPO)) )
	cSujFiscal := X5Descri()

	SX5->( MsSeek(xFilial("SX5")+"12"+If(lTpPedBenf,SA2->A2_EST,SA1->A1_EST)) )
	cProvincia := X5Descri()

	DEFINE MSDIALOG oDlg FROM  09,0 TO 25,76 TITLE cCadastro OF oMainWnd

	@ 001, 002 TO 057, 267 OF oDlg   PIXEL
	@ 058, 002 TO 119, 267 OF oDlg   PIXEL

	@ 007, 005 SAY OemToAnsi(STR0027)    	SIZE 21, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 004 MSGET SA2->A2_COD When .F.  SIZE 23, 11 OF oDlg PIXEL
	Else
		@ 016, 004 MSGET SA1->A1_COD When .F.  SIZE 23, 11 OF oDlg PIXEL
	Endif

	@ 007, 029 SAY OemToAnsi(STR0028)      SIZE 16, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 029 MSGET SA2->A2_LOJA When .F. SIZE 16, 11 OF oDlg PIXEL
	Else
		@ 016, 029 MSGET SA1->A1_LOJA When .F. SIZE 16, 11 OF oDlg PIXEL
	Endif

	@ 007, 048 SAY OemToAnsi(STR0029)     	SIZE 20, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 048 MSGET SA2->A2_NOME When .F. SIZE 107, 11 OF oDlg PIXEL
	Else
		@ 016, 048 MSGET SA1->A1_NOME When .F. SIZE 107, 11 OF oDlg PIXEL
	Endif

	@ 007, 158 SAY cRetCGC  	SIZE 20, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 158 MSGET SA2->A2_CGC Picture pesqpict("SA2","A2_CGC") When .F. SIZE 53, 11 OF oDlg PIXEL
	Else
		@ 016, 158 MSGET SA1->A1_CGC Picture pesqpict("SA1","A1_CGC") When .F. SIZE 53, 11 OF oDlg PIXEL
	Endif

	@ 007, 214 SAY OemToAnsi(STR0033)  		SIZE 30, 7 OF oDlg PIXEL
	If lTpPedBenf
		@ 016, 214 MSGET SA2->A2_TEL When .F.  SIZE 50, 11 OF oDlg PIXEL
	Else
		@ 016, 214 MSGET SA1->A1_TEL When .F.  SIZE 50, 11 OF oDlg PIXEL
	Endif

	@ 031, 005 SAY cRetTitle   SIZE 21, 7 OF oDlg PIXEL
	@ 039, 004 MSGET TRB->C9_PEDIDO Picture pesqpict("SC9","C9_PEDIDO") When .F. SIZE 42, 11 OF oDlg PIXEL

	@ 031, 048 SAY OemToAnsi(STR0036) SIZE 25, 7 OF oDlg PIXEL
	@ 039, 048 MSGET cSujFiscal When .F. SIZE 107, 11 OF oDlg PIXEL

	@ 031, 158 SAY OemToAnsi(STR0037) SIZE 35, 7 OF oDlg PIXEL
	@ 039, 158 MSGET cProvincia When .F. SIZE 80, 11 OF oDlg PIXEL

	@ 067, 005 SAY OemToAnsi(STR0038) SIZE 15, 7 OF oDlg PIXEL
	@ 076, 005 MSGET TRB->C9_ITEM SIZE 16, 11 Picture "@!" When .F. OF oDlg PIXEL

	@ 067, 027 SAY OemToAnsi(STR0039) SIZE 50, 7 OF oDlg PIXEL
	@ 076, 027 MSGET TRB->C9_PRODUTO SIZE 68, 11 Picture "@!" When .F. OF oDlg PIXEL

	@ 067, 100 SAY OemToAnsi(STR0040) SIZE 50, 7 OF oDlg PIXEL
	@ 076, 100 MSGET TRB->C9_PRCVEN SIZE 50, 11 Picture PesqPict("SD2","D2_TOTAL") When .F. OF oDlg PIXEL

	@ 067, 157 Say OemToAnsi(STR0041) SIZE 50, 7 OF oDlg PIXEL
	@ 076, 157 MSGET nPrecTotal SIZE 68, 11 Picture PesqPict("SD2","D2_TOTAL") When .F. OF oDlg PIXEL

	@ 092, 005 SAY RetTitle("C6_LOCAL") SIZE 27, 7 OF oDlg PIXEL  //"Deposito"
	@ 101, 005 MSGET TRB->C9_LOCAL SIZE 15,11 Picture "@!" When .F. OF oDlg PIXEL

	@ 092, 030 SAY RetTitle("C6_LOTECTL") SIZE 40, 7 OF oDlg PIXEL  //"Lote"
	@ 101, 030 MSGET TRB->C9_LOTECTL SIZE 33,11 Picture "@!" When .F. OF oDlg PIXEL

	@ 092, 070 SAY RetTitle("C6_NUMLOTE") SIZE 37, 7 OF oDlg PIXEL  //"SubLote"
	@ 101, 070 MSGET TRB->C9_NUMLOTE SIZE 23,11 Picture "@!" When .F. OF oDlg PIXEL

	@ 092, 100 SAY OemToAnsi(STR0084) SIZE 50, 7 OF oDlg PIXEL  //"Quantidade Original"
	@ 101, 100 MSGET nQtdeOrig SIZE 52,11 Picture PesqPict("SD2","D2_QUANT") When .F. OF oDlg PIXEL

	@ 092, 156 Say OemToAnsi(STR0087) SIZE 70, 7 OF oDlg PIXEL  //"Quantidade a Faturar"
	@ 101, 156 MSGET nQtdeLib SIZE 50,11 Picture PesqPict("SD2","D2_QUANT") Valid a468nQtde(nQtdeLib,@nPrecTotal,lPedidos) OF oDlg PIXEL

	DEFINE SBUTTON FROM 004, 270 TYPE 1 ACTION (oDlg:End(),nOpca:=1) ENABLE OF oDlg
	DEFINE SBUTTON FROM 020, 270 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg

	ACTIVATE MSDIALOG oDlg

	If nOpca == 1 .And. nQtdeLib <> TRB->C9_QTDLIB
		a468nDivSC9("TRB",nQtdeLib)
	EndIf
EndIf
dbSelectArea("TRB")

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ a468nQtde ³ Autor ³ Lucas                 ³ Data ³ 21.11.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Validar a quantidade do Remito a ser Faturada...           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATa468n - Generaci¢n de Facturas por Remitos.              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nQtde(nQtdeLib,nPrecTotal,lPedidos)
LOCAL lRet := .T.

Default lPedidos := .F.

If !lPedidos
	If nQtdeLib > ( SD2->D2_QUANT - (TRB->D2_QTDEFAT+TRB->D2_QTDEDEV) )
		HELP("",1,"QTNODISP")
		lRet  := .F.
	Else
		nPrecTotal:= ( nQtdeLib * TRB->D2_PRCVEN )
	EndIf
Else
	If nQtdeLib > TRB->C9_QTDLIB
		HELP("",1,"QTNODISP")
		lRet  := .F.
	Else
		nPrecTotal:= ( nQtdeLib * TRB->C9_PRCVEN )
	EndIf
EndIf

Return( lRet.And.nQtdeLib > 0 )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a468nPesq  ³ Autor ³ Lucas                 ³ Data ³ 06.04.01³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa para Pesquisar Pedidos o Remitos a Faturar...     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ a468nPesq(ExpC1,ExpN1,ExpN2)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da opcao selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATa468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a468nPesq(cAlias,nReg,nOpcx)
LOCAL oDlg,nOpca:=0,bSav12 := SetKey(VK_F12)
LOCAL cOrd,oCbx,nOpt1,nI
LOCAL aAreaTRB := GetArea()

SetKey( VK_F12, {||nil} )

cOrd := aOrd[2]
cCampo:=SPACE(40)
For nI:=1 to Len(aOrd)
	aOrd[nI] := OemToAnsi(aOrd[nI])
Next
If IndexOrd() >= Len(aOrd)
	cOrd := aOrd[Len(aOrd)]
	nOpt1 := Len(aOrd)
ElseIf IndexOrd() <= 1
	cOrd := aOrd[1]
	nOpt1 := 1
Else
	cOrd := aOrd[2]
	nOpt1 := IndexOrd()
EndIf

DEFINE MSDIALOG oDlg FROM 5, 5 TO 14, 50 TITLE OemToAnsi(STR0001) //"Buscar"
@ 0.6,1.3 COMBOBOX oCbx VAR cOrd ITEMS aOrd  SIZE 165,44  ON CHANGE (nOpt1:=oCbx:nAt)  OF oDlg FONT oDlg:oFont
@ 2.1,1.3	MSGET cCampo SIZE 165,10
DEFINE SBUTTON FROM 055,122	TYPE 1 ACTION (nOpca := 1,oDlg:End()) ENABLE OF oDlg
DEFINE SBUTTON FROM 055,149.1 TYPE 2 ACTION (DbSelectArea(cAlias),oDlg:End()) ENABLE OF oDlg
ACTIVATE MSDIALOG oDlg CENTERED

If nOpca == 0
	SetKey(VK_F12,bSav12)
	Return 0
EndIf

dbSelectArea( cAlias )
nReg := RecNo()
dbSetOrder(nOpt1)
If lPedidos
	MsSeek(xFilial("SC9")+Alltrim(cCampo),.T.)
Else
	MsSeek(xFilial("SD2")+Alltrim(cCampo),.T.)
EndIf
If ! Found()
	MsGoTo( nReg )
	Help(" ",1,"PESQ01")
EndIf
lRefresh := .t.
SetKey(VK_F12,bSav12)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³x468NFilial³ Autor ³ Lucas		       	 ³ Data ³ 05/04/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retornar filial de SC9 e SD2  para tratamento da MarkBrowse ³±±
±±³          ³ para arquivos TRB originados por Query atraves da SQLCopy() ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATa468n                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function x468nFilial()
Return( If(lPedidos,xFilial("SC9"),xFilial("SD2") ) )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468nMarkAll ºAutor  ³Gilson da Silva   ºFecha ³  08/20/01  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao de marca Tudo definida aqui para usar a a486aMark    º±±
±±º          ³ e tratar os locks do SC9/SD2                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nMrkAll()
Local nRecno	:=	0

DbSelectArea("TRB")
ProcRegua(Reccount())
nRecno	:=	Recno()
DbGoTop()
If !lPedidos
	MsgAlert(STR0185)
Endif
While !EOF()
	IncProc()
	a468nMrk(.T.)
	DbSelectArea("TRB")
	DbSkip()
Enddo
MsGoTo(nRecno)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468nMark ºAutor  ³Gilson da Silva      ºFecha ³  08/20/01  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao de marca da MarkBrowse, definida aqui para tratar os º±±
±±º          ³ locks do SC9/SD2 a efeitos ad concorrencia de processos.   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nMrk(lAll)
Local lRet	:=	.F.
Local nX	:=	0
Local nPosLock := 0
Local cMsg		:=	OemToAnsi(STR0138)//"El titulo est  en uso y no puede ser marcado en este momento"
Local lShwHlp	:=	.F.
Local lGeraNF := .T.
Local aAreaTrb:= {}
Local lM468Mrk := ExistBlock("M468MARKB")
Local lContinua := .T.
Local aAreaD2 := {}
Local nPosProv := 0
Local aUserIn := {}
Local sUserIn := ""
Local nY := 0
Local lPosUs := .F.
Local aIdThre := {}

DEFAULT lAll	:=	.F.

lShwHlp	:=	!lAll

If lM468Mrk
	If ValType( lContinua := ExecBlock("M468MARKB",.F.,.F.,{lPedidos}) ) <> "L"
		lContinua := .T.
	EndIf
EndIf

If lContinua
	If lPedidos
	DbSelectArea("SC9")
	//Este DbSkip é para garantir a re-leitura do registro no TOP
	DbSkip()
	MsGoTo(TRB->RECNO)

	If C9_OK == cMarca
		RecLock("SC9",.F.)
		Replace C9_OK 	 		With "  "
		MsUnLock()
		If cPaisLoc == "EQU" .And. SC5->(ColumnPos("C5_TPVENT")) > 0
			DbselectArea("SC5")
			DbsetOrder(1) //C5_FILIAL + C5_NUM
			If Dbseek(xFilial("SC5")+ TRB->C9_PEDIDO )
				If SC5->C5_TPVENT == "1"
					nLiqCom -= 1
				ElseIf SC5->C5_TPVENT == "2"
					nFact -= 1
				EndIf
			EndIf
		EndIf
		nPosLock	:=	Ascan(aRecnoTRB,SC9->(Recno()))
		If nPosLock > 0
		   Adel(aRecnoTRB,nPosLock)
		   aSize(aRecnoTRB,Len(aRecnoTRB)-1)
		EndIf
		RecLock("TRB",.F.)
		Replace TRB->C9_OK		With "  "
		MsUnlock()
		nPosLock	:=	Ascan(aPedido,C9_PEDIDO)
		If nPosLock > 0
		   Adel(aPedido,nPosLock)
		   aSize(aPedido,Len(aPedido)-1)
		EndIf
			// destravar registro no SC5 qdo o ultimo item do pedido for desmarcado
		If Ascan(aPedido,C9_PEDIDO)< 1
			aAreaTrb:= GetArea()
			DbselectArea("SC5")
			DbsetOrder(1) //C5_FILIAL + C5_NUM
			Dbseek(xFilial("SC5")+ TRB->C9_PEDIDO )
			If RecLock("SC5",.F.)
				MsUnLock()
			EndIf
	    	RestArea(aAreaTrb)
	    EndIf
	    If lFactApoc .And. Len(aProvApoc) > 0 .And. !lAll
	    	nPosProv := aScan(aProvApoc,{|x| x[1] == SC9->C9_CLIENTE})
			If nPosProv > 0
				If aProvApoc[nPosProv][2] == 1
	           		aDel(aProvApoc, nPosProv)
	              	aSize(aProvApoc, Len(aProvApoc)-1)
				Else
          			aProvApoc[nPosProv][2] -= 1
				EndIf
			EndIf
		ElseIf lFactApoc
			aProvApoc := {}
		EndIf
		lRet:= .T.
	Else
		For nX	:=	0	To 1 STEP 0.2
			If Empty(C9_NFISCAL+C9_BLEST+C9_BLCRED+C9_REMITO)
				If C9_OK <> cMarca .And. RecLock("SC9",.F.)
					// Travar registro no SC5 para que o pedido nao possa ser alterado
					IF Ascan(aPedido,TRB->C9_PEDIDO) == 0
						aAreaTrb:= GetArea()
						DbselectArea("SC5")
						SC5->(DbsetOrder(1)) //C5_FILIAL + C5_NUM
						SC5->(Dbseek(xFilial("SC5")+ TRB->C9_PEDIDO ))
						If cPaisLoc == "EQU" .And. SC5->(ColumnPos("C5_TPVENT")) > 0
							If !Empty(SC5->C5_TPVENT)
								If SC5->C5_TPVENT == "1" //Liquidación de Compra
									If nFact > 0
										MsgAlert(STR0242 + STR0244 + STR0243 + STR0245 + "(C5_TPVENT = 1-Si)", STR0009) //"Se han seleccionado previamente Pedidos para generación de " //"Factura de Venta" //", y no se permite la selección de Pedidos que generación de " // "Liquidación de Compra" //Atencion
										Return .F.
									EndIf
									nLiqCom += 1
								ElseIf SC5->C5_TPVENT == "2" //Factura de Venta
									If nLiqCom > 0
										MsgAlert(STR0242 + STR0245 + STR0243 + STR0244 + "(C5_TPVENT = 2-No)", STR0009) //"Se han seleccionado previamente Pedidos para generación de " //"Liquidación de Compra" //", y no se permite la selección de Pedidos que generación de " //"Factura de Venta" //Atencion
										Return .F.
									EndIf
									nFact += 1
								EndIf
							EndIf
						ElseIf cPaisLoc == "COL" .And. SC5->(ColumnPos("C5_UUIDREL")) > 0
							If !M486VLDDR(SC5->C5_UUIDREL,.T.)
								Return .F.
							EndIf
						EndIf
						If RecLock("SC5",.F.)
							lGeraNF:= .T.
							Aadd(aPedido,TRB->C9_PEDIDO)
						Else
							LGeraNF:=.F.
						EndIf
						RestArea(aAreaTrb)
					Else
						Aadd(aPedido,TRB->C9_PEDIDO)
						lGeraNF:= .T.
					EndIf

					If lGeraNF
						AAdd(aRecnoTRB,SC9->(Recno()))
						Replace C9_OK 		With cMarca
						RecLock("TRB",.F.)
						Replace TRB->C9_OK 	With cMarca
						MsUnlock()
						SA1->( MsSeek(xFilial("SA1")+SC9->C9_CLIENTE+SC9->C9_LOJA) )
						If lFactApoc .And. SA1->A1_SITUACA == "4"
	                     	nPosProv := aScan(aProvApoc,{|x| x[1] == SA1->A1_COD})
							If nPosProv == 0
								MSGINFO(Replace(STR0233, "#CodProv#", SA1->(Alltrim(A1_COD) + " - " + Alltrim(A1_NOME) + CRLF + STR0234)), STR0235)
								aAdd(aProvApoc, {SA1->A1_COD, 1})
							Else
								aProvApoc[nPosProv][2] += 1
							EndIf
						EndIf
						nX := 1
						lRet:=	.T.
					Else
						Inkey(0.2)
					Endif
				Else
					Inkey(0.2)
				Endif
				//Atualizar o TRB para o usuario perceber porque o PEDIDO nao pode ser marcado
				RecLock("TRB",.F.)
				Replace TRB->C9_NFISCAL	With SC9->C9_NFISCAL
				Replace TRB->C9_BLCRED	With SC9->C9_BLCRED
				Replace TRB->C9_BLEST	With SC9->C9_BLEST
				Replace TRB->C9_REMITO	With SC9->C9_REMITO
				MsUnlock()
				lShwHlp	:=	.F.
				Exit
			Endif
		Next

	EndIf
	Else
	DbSelectArea("SD2")
	MsGoTo(TRB->RECNO)

	If D2_OK == cMarca
		RecLock("SD2",.F.)
		Replace D2_OK 	 		With "  "
		SD2->(MsUnLock())
		nPosLock	:=	Ascan(aRecnoTRB,SD2->(Recno()))
		Adel(aRecnoTRB,nPosLock)
		aSize(aRecnoTRB,Len(aRecnoTRB)-1)
		RecLock("TRB",.F.)
			Replace TRB->D2_QTDAFAT 	With SD2->D2_QUANT -(SD2->D2_QTDEDEV+SD2->D2_QTDEFAT)
			Replace TRB->D2_QTDEFAT   	With SD2->D2_QTDEFAT
			Replace TRB->D2_QTDEDEV   	With SD2->D2_QTDEDEV
			Replace TRB->D2_OK	  		With "  "
		TRB->(MsUnlock())
		lRet:= .T.
		If lFactApoc .And. Len(aProvApoc) > 0 .And. !lAll
			nPosProv := aScan(aProvApoc,{|x| x[1] == SD2->D2_CLIENTE})
			If nPosProv > 0
				If aProvApoc[nPosProv][2] == 1
					aDel(aProvApoc, nPosProv)
					aSize(aProvApoc, Len(aProvApoc)-1)
				Else
					aProvApoc[nPosProv][2] -= 1
				EndIf
			EndIf
		ElseIf lFactApoc
			aProvApoc := {}
		EndIf
	Else
		If cPaisLoc $ "ARG|BOL|URU|CHI|MEX|PER|COL|EQU"
			aUserIn := GetUserInfoArray()
			For nY := 1 to Len (aUserIn)
				sUserIn := aUserIn[nY][11]

				lPosUs := 'MATA468N' $ sUserIn
				If lPosUs
					aadd(aIdThre,substr(cValToChar(aUserIn[nY][3]),len(cvaltochar(aUserIn[nY][3]))-1,2))
				EndIf
			Next
		EndIf

		aAreaD2 := SD2->(GetArea())
		DbselectArea("SD2")
		DbsetOrder(RETORDEM("SD2","D2_FILIAL+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA+D2_COD+D2_ITEM"))
		If (SD2->(DbSeek(xFilial("SD2") + TRB->D2_DOC + TRB->D2_SERIE + TRB->D2_CLIENTE + TRB->D2_LOJA + TRB->D2_COD + TRB->D2_ITEM)) .And. !Empty(SD2->D2_OK)) .And. ;
			Iif (AllTrim(SD2->D2_OK) == "", .F., Iif (cPaisLoc $ "ARG|BOL|CHI|URU|MEX|PER|COL|EQU", aScan(aIdThre, {|x| x $ SD2->D2_OK}) > 0, .T.))
			cMsg	:=	OemToAnsi(STR0138)
			RestArea(aAreaD2)
		Else
			RestArea(aAreaD2)
			For nX	:=	0	To 1 STEP 0.2
				If Empty(D2_PEDIDO)
					If lTpPedBenf
						SA2->( MsSeek(xFilial("SA2")+SD2->D2_CLIENTE+SD2->D2_LOJA) )
					Else
						SA1->( MsSeek(xFilial("SA1")+SD2->D2_CLIENTE+SD2->D2_LOJA) )
						If lFactApoc .And. SA1->A1_SITUACA == "4"
							nPosProv := aScan(aProvApoc,{|x| x[1] == SA1->A1_COD})
							If nPosProv == 0
								MSGINFO(Replace(STR0233, "#CodProv#", SA1->(Alltrim(A1_COD) + " - " + Alltrim(A1_NOME) + CRLF + STR0234)), STR0235)
								aAdd(aProvApoc, {SA1->A1_COD, 1})
							Else
								aProvApoc[nPosProv][2] += 1
							EndIf
						EndIf
					Endif
					If Empty( If(lTpPedBenf,SA2->A2_COND,SA1->A1_COND) )
						cMsg	:=	STR0171+cRetTitle+STR0172+Chr(13)+Chr(10) //"Nao ha Pedido para este(a) "###", nem condicao de pagamento padrao para este cliente."
						cMsg	+=	STR0173+cRetTitle+STR0174  //"O(A) "###" nao pode ser faturado"
						Exit
					Endif
				Endif
				IF ( TRB->D2_QUANT - (TRB->D2_QTDEFAT+TRB->D2_QTDEDEV)) <= 0
					Exit
					lShwHlp	:=	.F.
				Else
					If TRB->D2_PRCVEN>0
						If D2_QUANT > D2_QTDEFAT
							If D2_OK <> cMarca  .And. RecLock("SD2",.F.)
								AAdd(aRecnoTRB,SD2->(Recno()))
								Replace D2_OK 		With cMarca
								Replace SD2->D2_QTDAFAT With SD2->D2_QUANT -(SD2->D2_QTDEDEV+SD2->D2_QTDEFAT)
								SD2->(MsUnlock())

								RecLock("TRB",.F.)
								Replace TRB->D2_QTDEFAT	With SD2->D2_QTDEFAT
								Replace TRB->D2_QTDAFAT	With SD2->D2_QUANT -(SD2->D2_QTDEDEV+SD2->D2_QTDEFAT)
								Replace TRB->D2_OK		With cMarca
								MsUnlock()
								nX := 2
								lRet:=	.T.
							Else
								Inkey(0.2)
							Endif
						Else
							//Atualizar o TRB para o usuario perceber porque o REMITO nao pode ser marcado
							RecLock("TRB",.F.)
							Replace TRB->D2_QTDEFAT   	With SD2->D2_QTDEFAT
							Replace TRB->D2_QTDAFAT   	With SD2->D2_QUANT -(SD2->D2_QTDEDEV+SD2->D2_QTDEFAT)
							MsUnLock()
							lShwHlp	:=	.F.
							Exit
						Endif
					Else
						If !lAll
							cMsg	:=	STR0171+cRetTitle+OemToAnsi(STR0179)+Chr(13)+Chr(10) //"Nao ha Pedido para este(a) "###", nem valor unitario para o item"
							cMsg	+=	STR0173+cRetTitle+STR0174  //"O(A) "###" nao pode ser faturado"
							exit
						Endif
					Endif
				Endif
			Next
		EndIf
	EndIf
	EndIf

	If !lRet .And. lShwHlp
	MsgAlert(cMsg)
	Endif
EndIf

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DlgTesPendºAutor  ³Bruno Sobieski      ºFecha ³  09/04/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Janela para pedir o tes com que debem ser gerados os pedidosº±±
±±º          ³para Remision futura.                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function DlgTesPend(lUsaCarga)
Local oDlg,oOk,oCancel
Local lOk	:=	.F.
Local lViewTrue := .T.
Local aRetBlk   := {}

SF4->(DbSetOrder(1))

Private cTesPend	:=	"   "

/*
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
Ponto de entrada para retornar a TES de entrega futura e nao exibir a tela
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
If ExistBlock("M468PENT")
	aRetBlk := Execblock("M468PENT",.F.,.F.)
	If ValType(aRetBlk) == "A"
		If ValType(aRetBlk[1]) == "C" .And. ValType(aRetBlk[2]) == "L"
			cTesPend  := aRetBlk[1]
			lViewTrue := aRetBlk[2]
		EndIf
	EndIf
EndIf

If lViewTrue
	Define MSDIALOG oDlg From 0,0 TO 110,300 STYLE DS_MODALFRAME TITLE STR0146 + " " + GetDescRem()+ " " + STR0227 PIXEL //'TES Remision Futura'
	@02,02	TO 35,150	Label '' Of oDlg PIXEL
	@10,05	MSGET cTesPend	SIZE 20,08 F3 'SF4' Of oDlg PIXEL ;
		Valid (ExistCpo('SF4') .And. SF4->F4_CODIGO > '500')
	@08,40	SAY	STR0147 + " " + GetDescRem() + " " + STR0227 ; //"Infome el TES que debe ser utilizado para generacion de pedidos para remision futura"
		SIZE 100,25	of oDlg	PIXEL

	Define SBUTTON oOk		From 038,094 Type 1 ACTION If(SF4->(MsSeek(xFilial()+cTesPend)).And.SF4->F4_DUPLIC == 'S' ;
		.Or. SF4->F4_ESTOQUE=='N', MsgStop(STR0148,STR0149),( oDlg:End(),lOk := .T.));
		ENABLE Of oDlg PIXEL
	//"El TES informado no debe generar movimiento financiero y debe generar movimiento de stocks."###"TES Incorrecto"
	Define SBUTTON oCancel  From 038,124 Type 2 ACTION If(MsgYesNo(STR0150,STR0151),oDlg:End(),Nil) ;
		ENABLE Of oDlg PIXEL //'No serán generados Pedidos para remision futura'###'¿Confirma?'

	ACTIVATE MSDIALOG oDlg CENTERED
Else
	If SF4->(MsSeek(xFilial()+cTesPend)) .And. SF4->F4_DUPLIC == 'S' .Or. SF4->F4_ESTOQUE=='N'
		MsgStop(STR0148,STR0149)
		cTesPend	:=	"   "
	EndIf
EndIf

Return cTesPend
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A468RemFut   ³ Autor ³ Bruno Sobieski	  ³ Data ³ 20.07.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajustas as perguntas do SX1								  		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A462GrvPed()						                          	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 								                              	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA462                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A468RemFut(aSD2Fut,cTesPend)
Local aCabPV		:= {}
Local aItemPV		:= {}
Local aDados		:= {}
Local cCond,cTabela
Local cNumPed		:=	Criavar("C5_NUM")
Local cvC6_PRUNIT	:=	""
Local cvC6_UNSVEN	:=	""
Local cvC6_SEGUM	:=	""
Local aReturn
Local nZ
Local lShowDesc := GetNewPar('MV_DESCSAI','1') == "1"
Local nPorcDesc := 0
Local nPrcVenta := 0
Local nVlrTtlIt := 0
Local aDatSC6 := {} 

// RollBackSx8 necessario pois GetSxeNum já foi executado na CriaVar("C5_NUM") acima
// e ao chamar MATA410 por rotina automatrica, o sistema executara novamente GetSxeNum
// no inicializador padrao do campo C5_NUM.
RollBAckSx8()

SX3->(DbSetOrder(2))
SX3->(MsSeek("C6_PRUNIT"))
cvC6_PRUNIT	:=	Alltrim(SX3->X3_VALID) +If(Empty(SX3->X3_VLDUSER),"",".AND."+Alltrim(SX3->X3_VLDUSER))
SX3->(MsSeek("C6_UNSVEN"))
cvC6_UNSVEN	:=	Alltrim(SX3->X3_VALID) +If(Empty(SX3->X3_VLDUSER),"",".AND."+Alltrim(SX3->X3_VLDUSER))
SX3->(MsSeek("C6_SEGUM"))
cvC6_SEGUM	:=	Alltrim(SX3->X3_VALID) +If(Empty(SX3->X3_VLDUSER),"",".AND."+Alltrim(SX3->X3_VLDUSER))

Private lMsErroAuto := .f.

If lTpPedBenf
	SA2->(DbSetOrder(1))
	SA2->(MsSeek(xFilial("SA2")+SF2->F2_CLIENTE+SF2->F2_LOJA))
Else
	SA1->(DbSetOrder(1))
	SA1->(MsSeek(xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA))
Endif
SB1->(DbSetOrder(1))

cCond	:= If(Empty(SF2->F2_COND),If(lTpPedBenf,SA2->A2_COND,SA1->A1_COND),SF2->F2_COND)
cTabela	:= If( lTpPedBenf, SC5->C5_TABELA, If(Empty(SC5->C5_TABELA),SA1->A1_TABELA,SC5->C5_TABELA) )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Asumo que usa carga, pois mesmo assim pode ser remitido sem carga, no caso contrario, ³
//³nunca poderia utilizar o pedido numa carga e soh poderia usalo em um remito           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Cabecalho
aCabPV:={{"C5_NUM"    ,cNumPed    ,Nil},; // Numero do pedido
	{"C5_TIPO"   ,If(lTpPedBenf,"B","N")         	,Nil},; // Tipo de pedido
	{"C5_CLIENTE",If(lTpPedBenf,SA2->A2_COD ,SA1->A1_COD )	,Nil},; // Codigo do cliente
	{"C5_LOJAENT",If(lTpPedBenf,SA2->A2_LOJA,SA1->A1_LOJA)	,Nil},; // Loja para entrada
	{"C5_LOJACLI",If(lTpPedBenf,SA2->A2_LOJA,SA1->A1_LOJA)	,Nil},; // Loja do cliente
	{"C5_EMISSAO",dDatabase   	,Nil},; // Data de emissao
	{"C5_TABELA" ,cTabela       	,Nil},; // Codigo da Tabela de Preco
	{"C5_CONDPAG",cCond          ,Nil},; // Codigo da condicao de pagamanto*
	{"C5_DESC1"  ,IIf(cPaisLoc == "ARG", SC5->C5_DESC1, 0)           	,Nil},; // Percentual de Desconto
	{"C5_INCISS" ,"N"         	,Nil},; // ISS Incluso
	{"C5_TIPLIB" ,"1"         	,Nil},; // Tipo de Liberacao
	{"C5_MOEDA"  ,SF2->F2_MOEDA 	,Nil},; // Moeda
	{"C5_LIBEROK","S"         	,Nil},; // Liberacao Total
	{"C5_TIPOCLI",If(lTpPedBenf,SA2->A2_TIPO,SA1->A1_TIPO)	,Nil},;
	{"C5_TIPOREM","0"				,Nil},;
	{"C5_VEND1"  ,SF2->F2_VEND1	,Nil},;
	{"C5_DOCGER" ,'2'        		,Nil},;
	{"C5_TPCARGA",'1'        		,Nil},;
	{"C5_NATUREZ",SF2->F2_NATUREZ,Nil}}
	if cPaisLoc == "PAR"
		AAdd(aCabPV,{"C5_DESCONT",SF2->F2_DESCONT,Nil})
			IF SF2->(ColumnPos("F2_TRANSP")) > 0 .And. SC5->(ColumnPos("C5_TRANSP")) > 0
               	AAdd(aCabPV,{"C5_TRANSP",SF2->F2_TRANSP,Nil})
            EndIf
			IF SF2->(ColumnPos("F2_VEICULO")) > 0 .And. SC5->(ColumnPos("C5_VEICULO")) > 0
                  AAdd(aCabPV,{"C5_VEICULO",SF2->F2_VEICULO,Nil})
            EndIf

			IF SF2->(ColumnPos("F2_INCOTER")) > 0 .And. SC5->(ColumnPos("C5_INCOTER")) > 0
				AAdd(aCabPV,{"C5_INCOTER",SF2->F2_INCOTER,Nil})
			ENDIF

			IF SF2->(ColumnPos("F2_TPRESFL")) > 0 .And. SC5->(ColumnPos("C5_TPRESFL")) > 0
				AAdd(aCabPV,{"C5_TPRESFL",SF2->F2_TPRESFL,Nil})
			ENDIF
			IF SF2->(ColumnPos("F2_TPTRANS")) > 0 .And. SC5->(ColumnPos("C5_TPTRANS")) > 0
				AAdd(aCabPV,{"C5_TPTRANS",SF2->F2_TPTRANS,Nil})
			ENDIF
			IF SF2->(ColumnPos("F2_TIPONF")) > 0 .And. SC5->(ColumnPos("C5_TIPONF")) > 0
				AAdd(aCabPV,{"C5_TIPONF",SF2->F2_TIPONF,Nil})
			ENDIF

			IF SF2->(ColumnPos("F2_FECDSE")) > 0 .And. SC5->(ColumnPos("C5_FECDSE")) > 0
				AAdd(aCabPV,{"C5_FECDSE",SF2->F2_FECDSE,Nil})
			ENDIF
			IF SF2->(ColumnPos("F2_FECHSE")) > 0 .And. SC5->(ColumnPos("C5_FECHSE")) > 0
				AAdd(aCabPV,{"C5_FECHSE",SF2->F2_FECHSE,Nil})
			ENDIF
			IF SF2->(ColumnPos("F2_MOTEMIR")) > 0 .And. SC5->(ColumnPos("C5_MODTRAD")) > 0
				AAdd(aCabPV,{"C5_MODTRAD",SF2->F2_MOTEMIR,Nil})
			ENDIF
	EndIF
	If cPaisLoc == "ARG"
		AAdd(aCabPV,{"C5_DESC2",SC5->C5_DESC2,Nil})
		AAdd(aCabPV,{"C5_DESC3",SC5->C5_DESC3,Nil})
		AAdd(aCabPV,{"C5_DESC4",SC5->C5_DESC4,Nil})
	EndIf
//Items
For nZ	:=	1	To	Len(aSD2Fut)
	SD2->(MsGoTo(aSD2Fut[nZ]))
	Sb1->(MsSeek(xFilial()+SD2->D2_COD))
	If cPaisLoc == "RUS"
		AAdd(aItemPV,{{"C6_NUM"    ,cNumPed        ,Nil},; // Numero do Pedido
			{"C6_ITEM"   ,StrZero(nZ,2)  ,Nil},; // Numero do Item no Pedido
			{"C6_PRODUTO",SD2->D2_COD 	,Nil},; // Codigo do Produto
			{"C6_QTDVEN" ,SD2->D2_QUANT	,Nil},; // Quantidade Vendida
			{"C6_PRUNIT" ,SD2->D2_PRUNIT	,If(!Empty(cvC6_PRUNIT),+"Vazio().Or."+cvC6_PRUNIT,Nil)},; // PRECO DE LISTA
			{"C6_PRCVEN" ,SD2->D2_PRCVEN	,Nil},; // Preco Unitario Liquido
			{"C6_VALOR"  ,SD2->D2_TOTAL	,Nil},; // Valor Total do Item
			{"C6_ENTREG" ,dDataBase      ,Nil},; // Data da Entrega
			{"C6_UM"     ,SD2->D2_UM     ,Nil},; // Unidade de Medida Primar.
			{"C6_TES"    ,cTesPend  		,Nil},; // Tipo de Entrada/Saida do Item
			{"C6_LOCAL"  ,SD2->D2_LOCAL	,Nil},; // Almoxarifado
			{"C6_DESCONT",0              ,Nil},; // Percentual de Desconto
			{"C6_COMIS1" ,0              ,Nil},; // Comissao Vendedor
			{"C6_CLI"    ,SD2->D2_CLIENTE,Nil},; // Cliente
			{"C6_LOJA"   ,SD2->D2_LOJA   ,Nil},; // Loja do Cliente
			{"C6_SEGUM"  ,SD2->D2_SEGUM  ,If(!Empty(cvC6_SEGUM ) ,"Vazio().Or."+cvC6_SEGUM  ,Nil)},;
			{"C6_DESCRI" ,SB1->B1_DESC   ,Nil},;
			{"C6_FDESC"  ,SD2->D2_FDESC,  Nil},; // Full description
			{"C6_UNSVEN" ,SD2->D2_QTSEGUM,If(!Empty(cvC6_UNSVEN) ,"Vazio().Or."+cvC6_UNSVEN ,Nil)},;
			{"C6_GERANF" ,"N"            ,Nil},;
			{"C6_QTDEMP" ,0              ,Nil},; // Quantidade Empenhada
			{"C6_QTDLIB" ,0              ,Nil}})  // Quantidade Liberada
	ElseIf cPaisLoc == "ARG"
		aDatSC6 := GetAdvFVal("SC6", { "C6_VALDESC", "C6_DESCONT", "C6_VALOR", "C6_PRUNIT", "C6_PRCVEN"}, xFilial("SC6")+SD2->D2_PEDIDO+SD2->D2_ITEMPV+SD2->D2_COD, 1, { 0, 0, 0, 0, 0 })
		If lShowDesc
			nPorcDesc := ((SD2->D2_DESCON / SD2->D2_TOTAL + SD2->D2_DESCON)*100)
			nPrcVenta := SD2->D2_PRCVEN
			nVlrTtlIt := SD2->D2_TOTAL
		Else
			nPorcDesc := aDatSC6[2] //C6_DESCONT
			nPrcVenta := SD2->D2_PRCVEN + (SD2->D2_DESCON / SD2->D2_QUANT)
			nVlrTtlIt := SD2->D2_TOTAL + SD2->D2_DESCON
		EndIf
	ElseIf cPaisLoc == "PAR"
		If SD2->D2_DESCON <> 0
			nPorcDesc := SD2->D2_DESCON / (SD2->D2_PRUNIT * SD2->D2_QUANT)
			nPrcVenta := SD2->D2_PRUNIT - (SD2->D2_PRUNIT * nPorcDesc)
		Else 
			nPrcVenta := SD2->D2_PRCVEN
		EndIf
	EndIf
	AAdd(aItemPV,{{"C6_NUM"    ,cNumped        ,Nil},; // Numero do Pedido
		{"C6_ITEM"   ,StrZero(nZ,2)  ,Nil},; // Numero do Item no Pedido
		{"C6_PRODUTO",SD2->D2_COD 	,Nil},; // Codigo do Produto
		{"C6_QTDVEN" ,SD2->D2_QUANT	,Nil},; // Quantidade Vendida
		{"C6_PRUNIT" ,Iif(cPaisLoc == "ARG" .and. aDatSC6[4] == 0 ,0 , SD2->D2_PRUNIT)	,If(!Empty(cvC6_PRUNIT),+"Vazio().Or."+cvC6_PRUNIT,Nil)},; // PRECO DE LISTA
		{"C6_PRCVEN" ,IIf(cPaisLoc $ "ARG|PAR", nPrcVenta, SD2->D2_PRCVEN),Nil},; // Preco Unitario Liquido
		{"C6_VALOR"  ,IIf(cPaisLoc == "ARG", nVlrTtlIt, SD2->D2_TOTAL),Nil},; // Valor Total do Item
		{"C6_ENTREG" ,dDataBase      ,Nil},; // Data da Entrega
		{"C6_UM"     ,SD2->D2_UM     ,Nil},; // Unidade de Medida Primar.
		{"C6_TES"    ,cTesPend  		,Nil},; // Tipo de Entrada/Saida do Item
		{"C6_LOCAL"  ,SD2->D2_LOCAL	,Nil},; // Almoxarifado
		{"C6_DESCONT",IIf(cPaisLoc == "ARG", nPorcDesc, 0),Nil},; // Percentual de Desconto
		{"C6_COMIS1" ,0              ,Nil},; // Comissao Vendedor
		{"C6_CLI"    ,SD2->D2_CLIENTE,Nil},; // Cliente
		{"C6_LOJA"   ,SD2->D2_LOJA   ,Nil},; // Loja do Cliente
		{"C6_SEGUM"  ,SD2->D2_SEGUM  ,If(!Empty(cvC6_SEGUM ) ,"Vazio().Or."+cvC6_SEGUM  ,Nil)},;
		{"C6_DESCRI" ,SB1->B1_DESC   ,Nil},;
		{"C6_UNSVEN" ,SD2->D2_QTSEGUM,If(!Empty(cvC6_UNSVEN) ,"Vazio().Or."+cvC6_UNSVEN ,Nil)},;
		{"C6_GERANF" ,"N"            ,Nil},;
		{"C6_QTDEMP" ,0              ,Nil},; // Quantidade Empenhada
		{"C6_QTDLIB" ,0              ,Nil}})  // Quantidade Liberada
		If !(cPaisLoc == "ARG" .AND. nPorcDesc > 0)
			AAdd(aItemPV[nZ],{"C6_VALDESC",IIf(cPaisLoc == "ARG" .AND. aDatSC6[1] >0 , SD2->D2_DESCON,0),Nil}) // Valor de Descuento
		EndIf
Next nZ

If ExistBlock('A468RMFUT')
	aDados	:=	ExecBlock('A468RMFUT',.F.,.F.,{aCabPV,aItemPV})
	aCabPv	:=	aClone(aDados[1])
	aItemPv	:=	aClone(aDados[2])
Endif
MSExecAuto({|x,y,z| Mata410(x,y,z)},aCabPv,aItemPV,3)

If lMsErroAuto
	DisarmTransaction()
	MostraErro()
	If lTpPedBenf
		aReturn	:= {'Error', SA2->A2_COD, SA2->A2_LOJA, SF2->F2_SERIE, SF2->F2_DOC }
	Else
		aReturn	:= {'Error', SA1->A1_COD, SA1->A1_LOJA, SF2->F2_SERIE, SF2->F2_DOC }
	Endif
Else
	RecLock("SF2",.F.)
	Replace F2_PEDPEND   With  cNumPed
	MsUnLock()
	DbSelectArea("SC6")
	dbSetOrder(1)
	MsSeek(xFilial()+cNumPed)
	//Tenho Que garantir a gravacao deste campo com "N" pois o campo pode nao
	//estar em uso e eh preciso que esteja gravado com "N" pois este pedido nao pode ser fatuurado. Bruno.
	While !Eof() .And. C6_FILIAL == xFilial() .And. C6_NUM == cNumPed
		RecLock("SC6",.F.)
		Replace C6_GERANF	With	"N"
		MsUnLock()
		DbSkip()
	Enddo
	If lTpPedBenf
		aReturn	:= { cNumPed, SA2->A2_COD, SA2->A2_LOJA, SF2->F2_SERIE, SF2->F2_DOC }
	Else
		aReturn	:= { cNumPed, SA1->A1_COD, SA1->A1_LOJA, SF2->F2_SERIE, SF2->F2_DOC }
	Endif
EndIf
Return aReturn
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468nAtuTRBºAutor ³Microsiga           ºFecha ³  10/06/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Atualiza o arquivo de trabalho                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function a468nAtuTRB(nRecTRB)
Local aArea := GetArea()

TRB->(MsGoTo(nRecTRB))
Reclock('TRB',.F.)
If lPedidos
	TRB->C9_OK 			:= "  "
	TRB->C9_SERIENF   := cSerie
	TRB->C9_NFISCAL 	:= cNumero
	TRB->C9_BLEST 		:= '10'
	TRB->C9_BLCRED 	:= '10'
Else
	TRB->D2_OK			:=	 "  "
	TRB->D2_QTDEFAT   :=	D2_QTDEFAT + SD2->D2_QUANT
	TRB->D2_QTDAFAT   :=	D2_QUANT -(D2_QTDEDEV+D2_QTDEFAT)
Endif
MsUnLock()
RestArea(aArea)
Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468nNotasºAutor  ³Bruno Sobieski      ºFecha ³  10/07/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Exibir as notas que serao geradas.                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a468nNotas(aNFs,lCarga,lFim,lLimMax,lMT310,c310Num,nQtdeFat,aFacs)
Local oDlg,	lConfirma	:=	.F.
Local nX,nSerie,aSeries := {}
Local nCli	:=	TamSX3('A1_COD')[1]
Local nLoja	:=	TamSX3('A1_LOJA')[1]
Local oLbx,lGet	:=	.T.
Local aTitles	:=	Iif(cPaisloc == "RUS",{STR0051,STR0050,STR0043,STR0028,STR0029,STR0240},If(lFim,{STR0051,STR0050,' ',STR0051,STR0050,STR0043,STR0028,STR0029},{STR0051,STR0050,STR0043,STR0028,STR0029}))
Local aSizes	:=	Iif(cPaisLoc == "RUS",{17,45,30,18,60,100},If(lFim,{20,40,10,20,40,35,18,70},{17,45,30,18,60}))
//'A numeracao das seguintes Notas Fiscais foi modificada'###'Notas Fiscais a serem geradas'
Local cTitle	:=	If(lFim,OemToAnsi(STR0156),OemToAnsi(STR0154))
Local bline6	:=	{|| }
Local bline7	:=	{|| }
Local bline8	:=	{|| }
Local lOk		:=	.T.
Local lConfNum  :=  .T.
Local lValidSAT := .T.
Local nTamSX5,cNumSX5
Local aRenum	:= {}
Local nTamNF 	:= TamSX3("F2_DOC")[1]  // Argentina
Local aNotaRes	:= {}
Local nAltera	:= GetNewPar("MV_ALTNUM",1)
Local aNums		:=	{}
Local aNumMax   :=	{}
Local cProxSerie:= TamSX3("F2_SERIE")[1]
Local nSerieMax := 0
Local cCFDFol	:= ""
Local lCFD		:= .T.
Local aHeadOrd  := {{3,1},{6,2}}
Local bBlockHead:= {||.T.}
Local nOrd      := 0
Local nI        := 0
Local lChgSer	:= IIf(ExistBlock("M468CHGS"),ExecBlock("M468CHGS",.F.,.F.),.T.)		// Ponto de entrada para permitir ou nao alterar a serie da factura
Local lEdCelImps:= .F.
Local lGeraNCF  := .F. // Localizacao Republica Dominicana, quando .T. sera criado o campo NCF, criada para ficar mais limpo nas condicoes
Local lContrFol := .F. // Localizacao Rep. Dom. Controle de Folios
Local lNumDif	:= .F.
Local cSerieVld	:=""
Local lValorAux	:= .F.
Local lCancCFDI := (cPaisLoc == "MEX" .And. SF2->(ColumnPos("F2_SERMAN")) > 0 .And. SF2->(ColumnPos("F2_DOCMAN")) > 0)
Local aSize		:= MsAdvSize()
Local aCoord	:= IIf(lCancCFDI,{{91,aSize[1]+10,400,aSize[5]-200},{06,03,130,aSize[1]+656},{08,06,aSize[1]+647,120},{aSize[1]+596,aSize[1]+626}},{{91,61,400,800},{03,02,130,369},{07,05,361,120},{310,340}})
Local cPicSD2Tot:= PesqPict("SD2","D2_TOTAL")	// * Performance *

Default lMT310  := .F.
Default c310Num := ''
Default lPode  := .T.
Default aFacs	:=	{}

Private oButton
Private lSeqEspecie:= GetMV("MV_SEQESPE",,.F.)
Private aLstImpOri := {} //Array para armazenar os valores originais de impostos aglutinados

lPode := .T.
aSize(aFacs,0)
aNFsOrig := {}
If cPaisLoc=="ARG"
	If Empty(cLocxNFPV)
		cLocxNFPV := MV_PAR01
	EndIf
	SFP->(DbSetOrder(9))
	If SFP->(MsSeek(xFilial("SFP")+ cLocxNFPV))
		While (SFP->(!EOF())) .And. (SFP->FP_PV = cLocxNFPV)
			If SFP->FP_ATIVO <> "2"
				cSerieVld += "'" + AllTrim(SFP->FP_SERIE) + "|'"
			Endif
			SFP->( DBSkip() )
		EndDo
	EndIf
EndIf

If Type("lMSAuto") == "U"
	Private lMSAuto	:=	.F.
Endif

//Controle de Folios Localizacao Republica Dominicana
If cPaisLoc == "DOM"
	lContrFol     :=	AllTrim(FunName())$"MATA410|MATA465N|MATA467N|MATA468N" .And. GetNewPar("MV_CTRLFOL",.F.)
EndIf

If cPaisLoc == "ARG"
	lContrFol     :=	AllTrim(FunName())$"MATA468N|MATA461" .And. GetNewPar("MV_CTRLFOL",.F.)
EndIf

//Republica dominicana. Determina quando deve ser adicionado campo NCF, lGeraNCF utilizada nas demais condicoes
If lContrFol .AND. cPaisLoc == "DOM" .AND. SF2->(FieldPos("F2_NCF")) > 0 .AND. (Trim(cEspecie) $ "NF|NCI|NDI|NCC|NDC")
	lGeraNCF := .T.
EndIf

If !lFim
   	lEdCelImps := A468EdtVls()

	//Republica dominicana adicionado campo NCF
	If lGeraNCF .or. lEdCelImps
		If lGeraNCF
			bline6	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],aFacs[oLbx:nAt,7],Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,15],PesqPict("SD2","D2_TOTAL"))}}
			bline7	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],aFacs[oLbx:nAt,8],aFacs[oLbx:nAt,7],Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,15],PesqPict("SD2","D2_TOTAL"))}}
			bline8	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],aFacs[oLbx:nAt,7],aFacs[oLbx:nAt,8],aFacs[oLbx:nAt,9],Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,15],PesqPict("SD2","D2_TOTAL"))}}
		Else
			bline6	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],Transform(aFacs[oLbx:nAt,10],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL")),,Transform(aFacs[oLbx:nAt,13],PesqPict("SF2","F2_CAE")),Transform(aFacs[oLbx:nAt,13],PesqPict("SF2","F2_CAI"))}}
			bline7	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],Transform(aFacs[oLbx:nAt,10],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,15],PesqPict("SF2","F2_CAE")),Transform(aFacs[oLbx:nAt,16],PesqPict("SF2","F2_CAI"))}}
			bline8	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,7],aFacs[oLbx:nAt,6],Transform(aFacs[oLbx:nAt,10],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,15],PesqPict("SF2","F2_CAE")),Transform(aFacs[oLbx:nAt,16],PesqPict("SF2","F2_CAI"))}}
		EndIf
	Else
		If cPaisloc == "RUS"
			bline6	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],aFacs[oLbx:nAt,7],Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,15],PesqPict("SD2","D2_TOTAL"))}}
			bline7	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],aFacs[oLbx:nAt,7],Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,15],PesqPict("SD2","D2_TOTAL"))}}
			bline8	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],aFacs[oLbx:nAt,7],aFacs[oLbx:nAt,8],aFacs[oLbx:nAt,9],Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,15],PesqPict("SD2","D2_TOTAL"))}}
		Else
			bline6	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],Transform(aFacs[oLbx:nAt,10],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL"))}}
			bline7	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,7],aFacs[oLbx:nAt,6],Transform(aFacs[oLbx:nAt,10],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL"))}}
			bline8	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],aFacs[oLbx:nAt,7],aFacs[oLbx:nAt,8],Transform(aFacs[oLbx:nAt,10],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,11],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,12],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,13],PesqPict("SD2","D2_TOTAL")),Transform(aFacs[oLbx:nAt,14],PesqPict("SD2","D2_TOTAL"))}}
		EndIf
	EndIf
	If lCarga
		AAdd(aTitles,RetTitle('C9_CARGA'))
		AAdd(aSizes,35)
	Else
		Do Case
		Case nSepara == _PEDREM
			AAdd(aTitles,If(lPedidos,RetTitle('D2_PEDIDO'),RetTitle('D2_REMITO')))
			AAdd(aSizes,45)
		Case nSepara == _AGREGADOR
			AAdd(aTitles,RetTitle('C9_AGREG'))
			AAdd(aSizes,50)
		Case nSEPARA == _GRUPO
			AAdd(aTitles,RetTitle('C9_GRUPO'))
			AAdd(aSizes,45)
		EndCase
	Endif

	//Campo NCF e Controle de Folios Loc. Rep. Dom.
	If lGeraNCF
		AAdd(aTitles,"")
		AAdd(aSizes,"")
		AIns(aTitles,3)
		AIns(aSizes,3)
		aTitles[3] := STR0225  //"NCF"
		aSizes[3]  := 60
		a468IniNCF()         //Limpa aNCF ao Entrar na Rotina
	EndIf

	AADD(aTitles,STR0152)    //"Cond. de pago"
	AADD(aSizes,40)
	AADD(aTitles,STR0194)    //"Valor Bruto"
	AADD(aTitles,STR0200)    //"Desconto"
	AADD(aTitles,STR0195)    //"(+) Impostos"
	AADD(aTitles,STR0196)    //"(-) Impostos"
	AADD(aTitles,STR0197)    //"Total Fatura"
	AADD(aSizes,40)
	AADD(aSizes,35)
	AADD(aSizes,35)
	AADD(aSizes,35)
	AADD(aSizes,40)
    If lEdCelImps
		AADD(aTitles,RetTitle('F2_CAE'))
		AADD(aSizes,40)
		AADD(aTitles,RetTitle('F2_CAI'))
		AADD(aSizes,40)
	EndIf

	If lCancCFDI
		bline6	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],Transform(aFacs[oLbx:nAt,10],cPicSD2Tot),Transform(aFacs[oLbx:nAt,11],cPicSD2Tot),Transform(aFacs[oLbx:nAt,12],cPicSD2Tot),Transform(aFacs[oLbx:nAt,13],cPicSD2Tot),Transform(aFacs[oLbx:nAt,14],cPicSD2Tot),aFacs[oLbx:nAt,15],aFacs[oLbx:nAt,16],aFacs[oLbx:nAt,17]}}
		bline7	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,7],aFacs[oLbx:nAt,6],Transform(aFacs[oLbx:nAt,10],cPicSD2Tot),Transform(aFacs[oLbx:nAt,11],cPicSD2Tot),Transform(aFacs[oLbx:nAt,12],cPicSD2Tot),Transform(aFacs[oLbx:nAt,13],cPicSD2Tot),Transform(aFacs[oLbx:nAt,14],cPicSD2Tot),aFacs[oLbx:nAt,15],aFacs[oLbx:nAt,16],aFacs[oLbx:nAt,17]}}
		bline8	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],aFacs[oLbx:nAt,7],aFacs[oLbx:nAt,8],Transform(aFacs[oLbx:nAt,10],cPicSD2Tot),Transform(aFacs[oLbx:nAt,11],cPicSD2Tot),Transform(aFacs[oLbx:nAt,12],cPicSD2Tot),Transform(aFacs[oLbx:nAt,13],cPicSD2Tot),Transform(aFacs[oLbx:nAt,14],cPicSD2Tot),aFacs[oLbx:nAt,15],aFacs[oLbx:nAt,16],aFacs[oLbx:nAt,17]}}
		aAdd(aTitles,RetTitle("F2_SERMAN"))
		aAdd(aTitles,RetTitle("F2_DOCMAN"))
		aAdd(aTitles,RetTitle("F2_UUIDREL"))
		aAdd(aSizes,20)
		aAdd(aSizes,60)
		aAdd(aSizes,100)
	EndIf

	DbSelectArea("SX5")
	If cPaisLoc=="ARG"
		cIdPV	:= POSICIONE("CFH",1, xFilial("CFH")+cPontoVend,"CFH_IDPV")
	EndIf
	For nX	:=	1	To Len(aNFs)
	    If !lSeqEspecie
		   If cPaisLoc =="ARG"
				CFH->(DbSetOrder(1))
				CFH->(MsSeek(xFIlial("CFH")+cLocxNFPV))
				SX5->(DBSetOrder(1))
				SX5->(MSSeek(xFilial("SX5")+"01"+Alltrim(aNFS[nX][3])+cIdPV))
			Else
				DbSeek(xFilial()+'01'+aNFS[nX][3])
			EndIf
		Else
		   DbSeek(xFilial()+'AC'+aNFS[nX][11]+aNFS[nX][3])
		EndIf
		lAchou:=.T.
		If cPaisLoc=="ARG" .And. !Empty(cSerieVld)
			lAchou:= Alltrim(aNFS[nX][3]) $ cSerieVld
		EndIf

		If cPaisloc == "RUS"		//add new line for F2_DTSAIDA
			aAdd(aDTSaida, dDatabase)
		EndIf
		If Found() .And. lAchou
			nSerie	:=	Ascan(aSeries,{|x| x[1] == aNFS[nX][3]})
			If nSerie	==	0
				AAdd(aSeries,{aNFS[nX][3],0})
				nSerie	:=	Len(aSeries)
			Else
				aSeries[nSerie][2]++
			Endif
			//Verifica o tamanho do numero no SX5
			nTamSX5:=Len(Alltrim(X5Descri()))
			//Monta o numero respeitando o tamanho do SX5
			If cPaisLoc == "SAL" .And. lLimMax
			   cProxSerie    := Substr(aNFS[nX][3],1,1)+Soma1(Substr(aNFS[nX][3],2,2),2)
			   nSerieMax     := Ascan(aNumMax,{|x| x[1] == cProxSerie})
			   If nSerieMax  > 0
			      aNFS[nX][3]	:= cProxSerie
			      cNumSx5       := IIf(lMT310,c310Num,StrZero(aNumMax[nSerieMax][2]+1,nTamSX5)	)
			      aNumMax[nSerieMax][2]++
			   Else
				  cNumSx5 :=  IIf(lMT310,c310Num,LocConvNota(X5Descri(),nTamSX5))
				  For nI := 1 to aSeries[nSerie][2]
				     cNumSx5:= Soma1(cNumSX5)
				  Next
			   EndIf
			Else
				If cPaisLoc == "ARG"
					If !lNumDif
						cNumSx5:=IIf(lMT310,c310Num,LocConvNota(X5Descri(),nTamSX5))
					EndIf
					For nI := 1 to aSeries[nSerie][2]
						If !(cNumSx5 == Soma1(aNfs[nX-1][4]))
							cNumSx5:= Soma1(aNfs[nX-1][4])
					   	EndIF
					Next
				Else
					cNumSx5:=IIf(lMT310,c310Num,LocConvNota(X5Descri(),nTamSX5))
					For nI := 1 to aSeries[nSerie][2]
					   cNumSx5:= Soma1(cNumSX5)
					Next
				EndIf
			EndIf

	        //Verifica qual foi a ultima numeração utilizada e compara com a numeração disponível na tabela SX5
			If cPaisLoc == "ARG" .And. (!Empty(aSeries[nSerie][1]) .And. aSeries[nSerie][2] == 0)
				lNumDif := A468VldNum(aNFS[nX][3],@cNumSx5)
			EndIf

			//Verifica si existe el número de documento en la tabla SF2, si existe, asigna el número siguiente.
			If cPaisLoc == "ARG" .And. !lMT310 .And. !Empty(aSeries[nSerie][1]) .And. !Empty(aNFS[nX][3]) .And. !Empty(cPontoVend) .And. FindFunction("ANumExis")
				While ANumExis(aNFS[nX][3],cNumSX5,cPontoVend)
					cNumSX5:= Soma1(cNumSX5)
				EndDo
				//Valida si la secuencia del número de documento está dentro del rango a la fecha emisión del documento anterior y posterior
				If FindFunction("AVldFecNf") .And. lContrFol .And. !AVldFecNf(aNFS[nX][3],cNumSX5,cPontoVend) 
					If nX > 1 
						HELP(" ",1,"FCHNOVLD",,STR0276 + Alltrim(aNFS[nX][3])+"-"+cNumSX5, 2, 0,,,,,,{STR0278 + STR0277 + STR(nX-1) + IIF(nX > 2,STR0280, STR0279) + Alltrim(aNFS[nX][3])+"-"+cNumSX5})
						lConfirma := .F.
						Return lConfirma
					Else
						HELP(" ",1,"FCHNOVLD",,STR0276 + Alltrim(aNFS[nX][3])+"-"+cNumSX5, 2, 0,,,,,,{STR0278})
						lConfirma := .F.
						Return lConfirma
					EndIf
				EndIf
			EndIf

			// Alimenta a variavel com o numero encontrado porem com o tamanho da numeracao de NFs
			aNFS[nX][4]	:=	IIf(lMT310,c310Num,LocConvNota(cNumSX5,TamSX3("F2_DOC")[1]))
			//Verifica se atingiu a numeracao maxima para a serie
			If cPaisLoc == "SAL" .And. cNumSx5 == Repl("9",nTamSX5)
			   lLimMax  := .T.
			   cProxSerie    := Substr(aNFS[nX][3],1,1)+Soma1(Substr(aNFS[nX][3],2,2),2)
			   nSerieMax     := Ascan(aNumMax,{|x| x[1] == cProxSerie})
			   If nSerieMax  == 0
			      AAdd(aNumMax,{cProxSerie,0})
			   Else
			      aNumMax[nSerieMax][2]++
			   EndIf
			EndIf
		Else
			aNFS[nX][4]	:=	STR0153 //"Sin numero"
			lOk	:=	.F.
		Endif
		If aNFS[nX][12]
			AAdd(aFacs,{aNFS[nX][3],aNFS[nX][4],Substr(aNFs[nX][1],1,nCli),Substr(aNFs[nX][1],nCli+1,nLoja),;
				Posicione('SA2',1,xFilial('SA2')+Substr(aNFs[nX][1],1,nCli)+Substr(aNFs[nX][1],nCli+1,nLoja),'A2_NREDUZ'),;
				Posicione('SE4',1,xFilial('SE4')+aNFS[nX][7],'E4_DESCRI'),aNFs[nX][6],NIL,aNFs[nX][11]})
		ElseIf cPaisLoc == "RUS"
				AAdd(aFacs,{aNFS[nX][3],aNFS[nX][4],Substr(aNFs[nX][1],1,nCli),Substr(aNFs[nX][1],nCli+1,nLoja),;
					Posicione('SA1',1,xFilial('SA1')+Substr(aNFs[nX][1],1,nCli)+Substr(aNFs[nX][1],nCli+1,nLoja),'A1_NREDUZ'),;//DTOC(dDatabase),(26/09/18):field F2_DTSAIDA
					DTOC(dDatabase),;
					Posicione('SE4',1,xFilial('SE4')+aNFS[nX][7],'E4_DESCRI'),aNFs[nX][6],NIL,aNFs[nX][11]})
		Else
			AAdd(aFacs,{aNFS[nX][3],aNFS[nX][4],Substr(aNFs[nX][1],1,nCli),Substr(aNFs[nX][1],nCli+1,nLoja),;
				Posicione('SA1',1,xFilial('SA1')+Substr(aNFs[nX][1],1,nCli)+Substr(aNFs[nX][1],nCli+1,nLoja),'A1_NREDUZ'),;
				Posicione('SE4',1,xFilial('SE4')+aNFS[nX][7],'E4_DESCRI'),aNFs[nX][6],NIL,aNFs[nX][11]})
		Endif

		//Campo NCF e Controle de Folios Loc. Rep. Dom.
		If lGeraNCF
			AAdd(aFacs[Len(aFacs)],"")
			AIns(aFacs[Len(aFacs)],3)
			If lOk
				aFacs[Len(aFacs)][3] := a468NCFNF(SerieNfId("SF2",4,"F2_SERIE",dDataBase,aNFS[nX][11],aNFS[nX][3]),aNFS[nX][4])
			Else
				aFacs[Len(aFacs)][3] := Space(Len(SF2->F2_NCF))
			EndIf
			//Cria Indice em aNCF para armazenar NCF's
			a468SetNCF("")
		EndIf
		If cPaisLoc == "PAR"
			Aadd(aFacs[Len(aFacs)],Iif( (GetNewPar('MV_DESCSAI','1') =='2'),aNfs[nX,nLenNFS,1]+aNFS[nX,nLenNFS,2],aNfs[nX,nLenNFS,1]) )
		Else
			Aadd(aFacs[Len(aFacs)],aNfs[nX,nLenNFS,1] + aNfs[nX,nLenNFS,2])
		Endif

		Aadd(aFacs[Len(aFacs)],aNfs[nX,nLenNFS,2])
		Aadd(aFacs[Len(aFacs)],aNfs[nX,nLenNFS,3])
		Aadd(aFacs[Len(aFacs)],aNfs[nX,nLenNFS,4])

		If cPaisLoc == "PAR"
			Aadd(aFacs[Len(aFacs)],(aNfs[nX,nLenNFS,1] + aNfs[nX,nLenNFS,3] - aNfs[nX,nLenNFS,4]) )
			nValorAux:=aFacs[nX,14]
			Iif(nValorAux>=0,lValorAux:=.F.,lValorAux:=.T.)
		Else
			Aadd(aFacs[Len(aFacs)],aNfs[nX,nLenNFS,1] + aNfs[nX,nLenNFS,3] - aNfs[nX,nLenNFS,4])
		Endif
		If lEdCelImps
			Aadd(aFacs[Len(aFacs)],Space(14))
			Aadd(aFacs[Len(aFacs)],Space(15))
		EndIf

		If lCancCFDI
			aAdd(aFacs[Len(aFacs)], Space(GetSX3Cache("F2_SERMAN", "X3_TAMANHO")))
			aAdd(aFacs[Len(aFacs)], Space(GetSX3Cache("F2_DOCMAN", "X3_TAMANHO")))
			aAdd(aFacs[Len(aFacs)], Space(GetSX3Cache("F2_UUID", "X3_TAMANHO"))) // F2_UUIDREL = M(10), F2_UUID = C(36)
		EndIf

		Aadd(aFacs[Len(aFacs)],nX)
	Next	nX
	aNFsOrig 	:= aClone(aNfs) //Armazenar os valores originais do array aNfs
Else
	bline6	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6]}}
	bline7	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,7],aFacs[oLbx:nAt,6]}}
	bline8	:=	{ || {aFacs[oLbx:nAt,1],aFacs[oLbx:nAt,2],aFacs[oLbx:nAt,3],aFacs[oLbx:nAt,4],aFacs[oLbx:nAt,5],aFacs[oLbx:nAt,6],aFacs[oLbx:nAt,7],aFacs[oLbx:nAt,8]}}
	For nX:=	1	To Len(aNFs)
		If !Empty(aNFs[nX][8]+aNFs[nX][9]) .And. aNFs[nX][3]+aNFs[nX][4] <> aNFs[nX][8]+aNFs[nX][9]
			If aNFS[nX][12]
				AAdd(aFacs,{aNFS[nX][8],aNFS[nX][9],'->',aNFS[nX][3],aNFS[nX][4],Substr(aNFs[nX][1],1,nCli),Substr(aNFs[nX][1],nCli+1,nLoja),;
					Posicione('SA2',1,xFilial('SA2')+Substr(aNFs[nX][1],1,nCli)+Substr(aNFs[nX][1],nCli+1,nLoja),'A2_NREDUZ'),;
					 aNFs[nX][11]})
			Else
				AAdd(aFacs,{aNFS[nX][8],aNFS[nX][9],'->',aNFS[nX][3],aNFS[nX][4],Substr(aNFs[nX][1],1,nCli),Substr(aNFs[nX][1],nCli+1,nLoja),;
					Posicione('SA1',1,xFilial('SA1')+Substr(aNFs[nX][1],1,nCli)+Substr(aNFs[nX][1],nCli+1,nLoja),'A1_NREDUZ'),;
					 aNFs[nX][11]})
			Endif
			Aadd(aFacs[Len(aFacs)],nX)
		Endif
	Next
	lGet	:=	.F.
Endif

While lCFD
	If Len(aFacs) > 0
		If !lMSAuto .And. !lMT310 .And. !lValorAux
			If !lFim
				DEFINE MsDialog oDlg FROM aCoord[1,1],aCoord[1,2] To aCoord[1,3],aCoord[1,4] Title cTitle PIXEL //'Facturas a ser generadas'
				If lCancCFDI
					aCoord[2,4] := oDlg:nWidth * .5
					aCoord[3,3] := aCoord[2,4] - 12
					aCoord[4,1] := aCoord[3,3] - 60
					aCoord[4,2] := aCoord[3,3] - 30
				EndIf
				@ aCoord[2,1],aCoord[2,2] To aCoord[2,3],aCoord[2,4] PIXEL of oDlg
				oLBx := TWBrowse():New(aCoord[3,1],aCoord[3,2],aCoord[3,3],aCoord[3,4],,aTitles,aSizes,oDlg,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
				oLbx:SetArray(aFacs)
				If !lEdCelImps
					//Na Republica dominicana, campo NCF adicionado no browse
					If (Len(aSizes) == 11 + IIf(lCancCFDI,3,0) .AND. !lGeraNCF) .OR. (lGeraNCF .AND. Len(aSizes) == 12 + IIf(lCancCFDI,3,0))
						oLbx:bLine:=bLine6
					ElseIf (Len(aSizes) == 12 + IIf(lCancCFDI,3,0) .AND. !lGeraNCF) .OR. (lGeraNCF .AND. Len(aSizes) == 13 + IIf(lCancCFDI,3,0))
						oLbx:bLine:=bLine7
					Else
						oLbx:bLine:=bLine8
					Endif
					If !((nSEPARA == _CLIENTE) .Or. (nSEPARA == _NOQUEBRA))
						bBlockHead := &("{|oLbx,nCol| a468COrd(nCol,oLbx,aHeadOrd,@aFacs,@nOrd),oLbx:SetFocus(),oLbx:Refresh()}")
						oLbx:bHeaderClick:= bBlockHead
					EndIf
				Else
					If Len(aSizes) == 12
						oLbx:bLine:=bLine6
					ElseIf Len(aSizes) = 13
						oLbx:bLine:=bLine7	// igual ao bLine8 - por cliente, nao agrupa
					Else
						oLbx:bLine:=bLine8	// por remito, por grupo, por agregador
					Endif
				Endif
			Else
				DEFINE MsDialog  oDlg FROM  91,61 To 400,635  Title cTitle PIXEL //'Facturas a ser generadas'
				@ 03,05 To 130,280 PIXEL of oDlg
				oLBx := TWBrowse():New( 07,07,270,120,,aTitles,aSizes,	oDlg,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
				oLbx:SetArray(aFacs)
				If Len(aSizes) == 6
					oLbx:bLine:=bLine6
				ElseIf Len(aSizes) == 7
					oLbx:bLine:=bLine7
				Else
					oLbx:bLine:=bLine8
				Endif
			Endif

			If lChgSer
				oLbx:bLDblClick  := {|| If(lGet,A468DblClic(oLbx:nAt,@aNFs,oLbx,@aFacs,aFacs[oLbx:nAt,Len(aFacs[oLbx:nAt])],aTitles),Nil)}
			EndIf
			If !lFim
				@ 135, 020 SAY STR0155 Of oDlg PIXEL //'Haga doble click en la serie para cambiarla'
				If lCancCFDI
					@ 145, 020 SAY OemToAnsi(STR0275) Of oDlg PIXEL //"Haga clic en Serie Sustit o Docto Sustit para indicar si la factura a generar sustituye a un CFDI previo (Tipo Relación CFDI='04')."
				EndIf
			Endif
			Define SBUTTON oButton FROM  135,IIf(lFim,250,aCoord[4,1]) Type 1 Of oDlg ENABLE Action (a468COrd(1,oLbx,aHeadOrd,@aFacs,@nOrd) .And. IIf(a468nVldSer(aFacs,1,.T.),;
			(oDlg:End(),lConfirma := .T.),NIL)) //WHEN lOk
			oButton:lActive:=lOk
			If !lFim
				Define SBUTTON FROM  135,aCoord[4,2] Type 2 Of oDlg ENABLE Action oDlg:End()
			Endif
			Activate Dialog oDlg CENTERED ON INIT If(!lFim .And. !((nSEPARA == _CLIENTE) .Or. (nSEPARA == _NOQUEBRA)),;
														a468COrd(3,oLbx,aHeadOrd,@aFacs,@nOrd),Nil)
		Else
			lConfirma:=	.T.
			If cPaisLoc== "PAR" .and. !lMSAuto
				lConfirma:=	.F.
				MsgAlert(STR0248,STR0247)
			EndIf
		Endif
	EndIf

	If !lFim
		If cPaisLoc $ "PAR|BOL" .and. !lPode
			lConfirma := .F.
		EndIf
		If lConfirma
			For nX:=1 To Len(aNFs)
				//Alteracion para rutina MATA475 - EUA
				If !lMT310 .And. cPaisLoc <> "EUA"
					lRet	:=	a468nChkNum(aNFs[nX][4],aNFs[nX][3],!(GetMv("MV_FACTAUT") == "S"),@lValidSAT,nQtdeFat)
				Else
					lRet    := .T.
				EndIf
				If !lRet
					AAdd(aRenum	,{nX,aNFs[nX][4],aNFs[nX][3]})
				Else
					AAdd(aNotaRes,aNFs[nX][4]+aNFs[nX][3])
				Endif
			Next
			DbSelectArea( "SX5" )

			If Len(aRenum) >0
				If nAltera == 2
					//" A numeracao da Nota Fiscal ja existe, confirma alteracao da numeracao automaticamente"
					lConfirma := MsgYesNo(OemToAnsi(STR0166))
				ElseIF nAltera==3
					lConfirma := .f.
					//"Numero da Nota Fiscal ja existe"###"Numero Nota Fiscal "
					MsgInfo(OemToAnsi(STR0167),OemToAnsi(STR0168))
				EndIf
				If lConfirma
					For nX:=1 To Len(aRenum)
						If !lSeqEspecie
							DbSeek(xFilial()+'01'+aNFs[nX][3])
						Else
							DbSeek(xFilial()+'AC'+aNFs[nX][11]+aNFs[nX][3])
						EndIf
						If Found()
							If GetMv("MV_FACTAUT") == "S"
								cNumero := LocConvNota(X5Descri(),Len(Alltrim(X5Descri())))
								While !a468nChkNum(cNumero,aRenum[nX][3],.F.,,nQtdeFat) .Or. Ascan(aNotaRes,cNumero+aRenum[nX][3]) <> 0
									cNumero := Soma1(cNumero,nTamNf)
								EndDo
							Else
								cNumero := LocConvNota(X5Descri(),Len(Alltrim(X5Descri())))
								While !a468nChkNum(cNumero,aRenum[nX][3],.T.,@lValidSAT,nQtdeFat) .or. ;
									Ascan(aNotaRes,cNumero+aRenum[nX][3]) <> 0
									lConfNum  := a468nGetNum(lValidSAT,aNFs[nX][4],aNFs[nX][3])	// intervencao do usuario
									If !lConfNum
										lConfirma  := .F.
										Exit
									EndIf
									lValidSAT  := .T.
								EndDo
							Endif
							AAdd(aNotaRes,cNumero+aRenum[nX][3])
							If GetMv("MV_FACTAUT") == "S" .Or. (cPaisLoc == "PTG" .And. lHashPTG)
								If cNumero <> aNFs[aRenum[nX][1]][4]
									aNFS[aRenum[nX][1]][8]	:=	 aNFs[aRenum[nX][1]][3]
									aNFS[aRenum[nX][1]][9]	:=	 aNFs[aRenum[nX][1]][4]
								Endif
								aNFS[aRenum[nX][1]][4]	:=	 cNumero
							Else
								If cNumero <> aNFs[nX][4]
									aNFS[nX][8]	:=	 aNFs[nX][3]
									aNFS[nX][9]	:=	 aNFs[nX][4]
								Endif
								aNFS[nX][4]	:=	 cNumero
							EndIf
						Endif
					Next
				Endif
			EndIf
		EndIf
	Endif
	For nX:= 1 To Len(aNFS)
		AAdd(aNums,{aNFS[nX][3],aNFS[nX][4]})
	Next

	If cPaisLoc == "SAL"
		For nX:= 1 To Len(aNums)
			//Verifica se alguma serie atingiu numeracao maxima - El Salvador
			If lLimMax  := aNums[nX][2] == Repl("9",TamSx3("L1_DOC")[1])
				Exit
			EndIf
		Next nX
	EndIf

	lCFD := .F.
	If lConfirma
		If lGerarCFD .And. !lFim
			cCFDFol := ""
			For nX := 1 To Len(aNFS)
				If CFDChkFol(cFilAnt,aNFS[nX][3],aNFS[nX][4],,.F.,.F.) == 2
					cCFDFol += Padr(Alltrim(aNFS[nX][3]) + ": ",TamSX3("F2_SERIE")[1]+2) + aNFS[nX][4] + CRLF
				Endif
			Next
			If !Empty(cCFDFol)
				cCFDFol := STR0156 + CRLF + STR0187 + CRLF + cCFDFol + CRLF   //"A numeracao para esta(s) serie(s) nao pertence ao intervalo estabelecido:"
				lConfirma := .F.
				MsgAlert(cCFDFol,STR0186)
				lCFD := .T.
			Endif
		Endif
	Endif
Enddo

If ExistBlock('A468VNUM')
	lConfirma	:=	ExecBlock('A468VNUM',.F.,.F.,{aNums,lConfirma,aNFS,aFacs})
EndIf

Return lConfirma

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468nChgSeºAutor  ³Bruno Sobieski      ºFecha ³  10/07/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Permitir trocar a serie das notas que serao geradas.        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a468nChgSer(nPos,aNFs,oLbx,aFacs,nPosNfs)

Local nClick 	:= oLbx:nColPos
Local lOk		:=	.F.
Local lRetNum   :=  .F.
Local nX,aSeries	:=	{},nSerie,cTmp
Local nTamSX5,cNumSX5
Local nLenFacs  := 0
Local nI        := 0
Local cNCF      := ""  // Numero NCF. Localizacao Republica Dominicana
Local lContrFol := .F. // Controle de Folios Loc. Rep. Dominicana
Local lDifNum	:= .F.
Local lReutiliza:= GetMv("MV_USAMNUM",,.T.)
Local nRegs		:=	0
Local cAliasNew	:= ""
Local cQuery		:= ""
Local lRet 			:= .T.
Local lCancCFDI := (cPaisLoc == "MEX" .And. SF2->(ColumnPos("F2_SERMAN")) > 0 .And. SF2->(ColumnPos("F2_DOCMAN")) > 0)
Local aDocObt 	:= {}
Local cTamSerNf	:= Space(TamSx3("F2_SERIE")[1])

Default nPosNfs := nPos

//Controle de Folios, Loc. Rep. Dominicana
If cPaisLoc == "DOM"
	lContrFol     :=	AllTrim(FunName())$"MATA410|MATA465N|MATA467N|MATA468N" .And. GetNewPar("MV_CTRLFOL",.F.)
ElseIf cPaisLoc $ "BOL|PAR"
	lContrFol     :=	AllTrim(FunName())$"MATA468N|MATA461"
ElseIf cPaisLoc $ "ARG"
	lContrFol 	  := AllTrim(FunName())$"MATA468N|MATA461" .And. GetNewPar("MV_CTRLFOL",.F.)
EndIf

If nClick == 1
	cTmp := aFacs[nPos][nClick]
	While .T.
		lEditCell(@aFacs,oLbx,,nClick)
		If LastKey() ==   27
			aFacs[nPos][1]	:=	cTmp
			Exit
		Else
		   If !lSeqEspecie
		   	  If (cPaisLoc == "ARG")
		   	  		lRetNum  := a468ExtSer(aFacs[nPos][1])
			    	If !lRetNum
			    		aFacs[nPos][1] := cTmp
			       	Return lOk
			 		EndIf
		   	  Else
		   	  		lRetNum  := ExistCpo("SX5","01"+aFacs[nPos][1])
		   	  EndIf
		   Else
		      lRetNum  := ExistCpo("SX5","AC"+aFacs[nPos][9]+aFacs[nPos][1])
		   EndIf
		   If lRetNum
		      If a468nVldSer(aFacs,nPos,.F.)
			     lOk	:=	.T.
			     Exit
		      Else
				aFacs[nPos][1]	:=	cTmp
				Exit
		      EndIf
		   EndIf
		Endif
	Enddo
ElseIf nClick == 2 .and. GetMV("MV_FACTAUT") == "N"
	cTmp := aFacs[nPos][nClick]
	While .T.
		lEditCell(@aFacs,oLbx,,nClick)
		If LastKey() ==   27
			aFacs[nPos][nClick] :=	cTmp
		Else
			If cPaisLoc == "BOL"
				cAliasNew := GetNextAlias()
				cQuery :=  "Select F3_NFISCAL,F3_SERIE FROM"+  RetSqlName( "SF3" )+" "
				cQuery += "WHERE F3_NFISCAL = '" + aFacs[nPos][nClick] + "' AND  F3_SERIE='"+ aFacs[nPos][1]+"' AND F3_DTCANC <> ''"
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasNew,.F.,.T.)
				dbSelectArea(cAliasNew)
				COUNT TO nRegs
				If nRegs == 0
					aNFs[nPosNfs][4] := aFacs[nPos][nClick]
				Else
					MsgAlert(OemToAnsi(STR0014)+ OemToAnsi(STR0016)+ "Y se encuentra en estatus Anulada"  )
					aFacs[nPos][nClick] := aNFs[nPosNfs][4]
				EndIf
				(cAliasNew)->(dbCloseArea())
			Else
				aNFs[nPosNfs][4] := aFacs[nPos][nClick]
			EndIf
			If cPaisLoc $ "PAR|BOL"
					Do Case
						Case Alltrim(cEspecie) == "NF"
							cEspecie := "1"
					EndCase

				dbSelectArea("SFP")
				SFP->(dbGoTop())
				dbSetOrder(5)
				If DbSeek(xFilial("SFP")+cFilAnt+aFacs[nPos][1]+cEspecie)
					lRet := .F.
					While AllTrim(SFP->FP_FILIAL+SFP->FP_FILUSO+SFP->FP_SERIE+SFP->FP_ESPECIE) == AllTrim(xFilial("SFP")+cFilAnt+aFacs[nPos][1]+cEspecie)
						If  !(cPaisLoc=="BOL") .and. aFacs[nPos][nClick] >= SFP->FP_NUMINI .and. aFacs[nPos][nClick] <= SFP->FP_NUMFIM
							lRet := .T.
							lPode := .T.
				 			Exit
						ElseIf cPaisLoc=="BOL" .and. (Empty(SFP->FP_NUMINI) .or. aFacs[nPos][nClick] >= SFP->FP_NUMINI) .and. (Empty(SFP->FP_NUMFIM) .or. aFacs[nPos][nClick] <= SFP->FP_NUMFIM)
							lRet := .T.
							lPode := .T.
				 			Exit
						Else
							lRet := .F.
						EndIf
						SFP->(dbSkip())
					EndDo
	            		If lRet
							If SFP->FP_ATIVO == "1" .or. cPaisloc == "BOL"
	   							If lRet .and. dDataBase <= SFP->FP_DTAVAL
			 					lRet := .T.
			 				Else
								Aviso(STR0009 + clDoc,STR0214,{STR0176}) //"ATENCAO"###"A data de emissão deste documento está fora do limite cadastrado no controle de formulários. Portanto, não poderá ser utilizada para a emissão do documento fiscal."###"OK"
			 					lPode := .F.
					 			Exit
			 				EndIf
						Else
							Aviso(STR0009,STR0246,{STR0176}) //"ATENCAO"###"Este range está cadastrado porém não está ativo."###"OK"
							lPode := .F.
							Exit
						EndIf
	            	Else
	            		Aviso(STR0009 + aFacs[nPos][nClick],STR0215,{STR0176}) //"ATENCAO"###"Não existe este número cadastrado em nenhum range com esta série ou espécie."###"OK"
						lPode := .F.
		            	Exit
	            	EndIf
				Else
					Aviso(STR0009 + aFacs[nPos][nClick],STR0216,{STR0176}) //"ATENCAO"###"Esta série e espécie não está cadastrada no controle de  formulários. Portanto, não poderá ser utilizada para a emissão do documento fiscal."###"OK"
					lPode := .F.
					Exit
				EndIf
			EndIf
		EndIf
		Exit
	Enddo
//Campo NCF na Rep. Dom.
ElseIf nClick == 3 .AND. lContrFol .AND. cPaisLoc == "DOM" .AND. SF2->(FieldPos("F2_NCF")) > 0 .AND. (Trim(cEspecie) $ "NF|NCI|NDI|NCC|NDC")
	cTmp := aFacs[nPos][nClick]
	While .T.
		lEditCell(@aFacs,oLbx,"@!",nClick)
		If LastKey() ==   27
			aFacs[nPos][nClick] :=	cTmp
		Else
			a468SetNCF(aFacs[nPos][nClick],nPos)
		EndIf
		Exit
	Enddo
Endif
SX5->(DbGoTop())
If lOk
	For nX	:=	1	To Len(aFacs)
	    If !lSeqEspecie
	    	If cPaisLoc == "ARG"
		   		SX5->(MsSeek(xFilial()+'01'+AllTrim(aFacs[nX][1])+cIdPV))
		   	Else
		   		SX5->(MsSeek(xFilial()+'01'+aFacs[nX][1]))
		   	EndIf
		Else
			If cPaisLoc == "ARG"
		   		SX5->(MsSeek(xFilial()+'AC'+aFacs[nX][9]+AllTrim(aFacs[nX][1])+cIdPV))
		   	Else
		   		SX5->(MsSeek(xFilial()+'AC'+aFacs[nX][9]+aFacs[nX][1]))
		   	EndIf
		EndIf
		nSerie	:=	Ascan(aSeries,{|x| x[1] == aFacs[nX][1]})
		If nSerie	==	0
			AAdd(aSeries,{aFacs[nX][1],0,.F.})
			nSerie	:=	Len(aSeries)
		Else
			aSeries[nSerie][2]++
		Endif
		//Verifica o tamanho do numero no SX5
		nTamSX5:=Len(Alltrim(X5Descri()))
		//Monta o numero respeitando o tamanho do SX5
		If cPaisLoc == "ARG" .And. nClick == 1
			If SX5->(Found())
				If !lDifNum
					cNumSx5 := LocConvNota(X5Descri(),nTamSX5)
				Elseif (nX-1) > 0
					If aFacs[nX][1] !=  aFacs[nX-1][1]
			   			cNumSx5 := LocConvNota(X5Descri(),nTamSX5)
			   		Endif
				EndIf
				If aSeries[nSerie][2] >= 1
					cNumSX5 := iIF(Ascan(aFacs,{|x| x[1] == aSeries[nSerie][1]})>0,aFacs[Ascan(aFacs,{|x| x[1] == aSeries[nSerie][1]})][2],aFacs[1][2])//aFacs[nSerie][2] //cNumSX5 := 	aFacs[1][2]
				EndIf
				For nI := 1 to aSeries[nSerie][2]
				   	If !(cNumSx5 == Soma1(aFacs[nX-1][2])) .And. aFacs[nX][1] == aFacs[nX-1][1]
						cNumSx5:= Soma1(aFacs[nX-1][2])
					EndIF
				Next nI
			Else
				cNumSx5 := LocConvNota(X5Descri(),nTamSX5)
		    EndIf
		Else
			If cPaisLoc == "RUS"
			   cNumSx5 := LocConvNota(SX5->X5_DESCRI, nTamSX5)
			  Else
			   cNumSx5 := LocConvNota(X5Descri(),nTamSX5)
			EndIf
			For nI := 1 to aSeries[nSerie][2]
			   cNumSx5:= Soma1(cNumSX5)
			Next
		EndIf

        //Verifica qual foi a ultima numeração utilizada e compara com a numeração disponível na tabela SX5
		If cPaisLoc == "ARG" .And. nClick == 1 .And. (!Empty(aSeries[nSerie][1]) .And. aSeries[nSerie][2] == 0) .And. lReutiliza
			lDifNum := A468VldNum(aFacs[nX][1],@cNumSx5)
			If  lDifNum  //Son diferentes
				aSeries[nSerie][3]:=.T.
				For nI := 1 to aSeries[nSerie][2]
				   	cNumSx5:= Soma1(cNumSX5)
				Next nI
			Endif
		ElseIf cPaisLoc == "ARG" .And. Empty (aFacs[nX][1]) .And. !Empty (aFacs[nX][2])
			aFacs[nX][1] := cTamSerNf
			aFacs[nX][2] := ""
		EndIf

		//Verifica si existe el número de documento en la tabla SF2, si existe, asigna el número siguiente.
		If cPaisLoc == "ARG" .And. !Empty(aFacs[nX][1]) .And. !Empty(aSeries[nSerie][1]) .And. !Empty(cPontoVend) .And. FindFunction("ANumExis")
			While ANumExis(aFacs[nX][1],cNumSX5,cPontoVend) .Or. (AScan(aDocObt,{|x| (x[1] == aSeries[nSerie][1] .And. x[2] == cNumSX5)}) != 0)
				cNumSX5:= Soma1(cNumSX5)
			EndDo
			//Valida si la secuencia del número de documento está dentro del rango a la fecha emisión del documento anterior y posterior
			If FindFunction("AVldFecNf") .And. lContrFol .And. !AVldFecNf(aFacs[nX][1],cNumSX5,cPontoVend)
				If aSeries[nSerie][2] > 0
					HELP(" ",1,"FCHNOVLD",,STR0276 + Alltrim(aSeries[nSerie][1])+"-"+cNumSX5, 2, 0,,,,,,{STR0278 + STR0277 + STR(aSeries[nSerie][2]) + IIF(aSeries[nSerie][2] > 1,STR0280, STR0279) + Alltrim(aSeries[nSerie][1])+"-"+cNumSX5})
					lOk := .F.
					Exit
				Else
					HELP(" ",1,"FCHNOVLD",,STR0276 + Alltrim(aSeries[nSerie][1])+"-"+cNumSX5, 2, 0,,,,,,{STR0278})
					lOk := .F.
					Exit
				EndIf
			EndIf
		EndIf

		// Alimenta a variavel com o numero encontrado porem com o tamnaho da numeracao de NFs
		aFacs[nX][2]	:=	LocConvNota(cNumSX5,TamSX3("F2_DOC")[1])
		aNFS[aFacs[nX][Len(aFacs[nX])]][4]	:=	aFacs[nX][2]
		aNFS[aFacs[nX][Len(aFacs[nX])]][3]	:=	aFacs[nX][1]
		//Se registran guarda en la variable aDocObt los documentos que se van generando
		If cPaisLoc == "ARG" 
			AADD(aDocObt, {aFacs[nX][1], aFacs[nX][2]})
		EndIf
		//Controle de Folios e Geracao NCF Rep. Dominicana
		If lContrFol .AND. cPaisLoc == "DOM" .AND. SF2->(FieldPos("F2_NCF")) > 0 .AND. (Trim(cEspecie) $ "NF|NCI|NDI|NCC|NDC") .AND. ;
		!Empty(aFacs[nX][1]) .AND. !Empty(aFacs[nX][2]) .AND. aFacs[nX][2] != STR0153 //Sin Numero
			//Indice 3 qdo Rep Dom. e Campo F2_NCF existente, se o campo estiver vazio sera gerado automaticamente.
			cNCF := ChkFolDOM(cFilAnt,aFacs[nX][1],aFacs[nX][2],"",lMSAuto,cEspecie)
			If (cNCF <> "")
				aFacs[nX][3] := cNCF
			Else
				aFacs[nX][2] := Space(TamSX3("F2_DOC")[1])
				aFacs[nX][1] := Space(TamSX3("F2_SERIE")[1])
				aFacs[nX][3] := Space(TamSX3("F2_NCF")[1])
				aNFS[aFacs[nX][Len(aFacs[nX])]][4]	:=	aFacs[nX][2]
				aNFS[aFacs[nX][Len(aFacs[nX])]][3]	:=	aFacs[nX][1]
				lOk := .F.
			EndIf
			a468SetNCF(cNCF,nX)
		EndIf
	Next	nX
	MsAguarde( {|| a468nImp(@aNFs,If(lPedidos,'SC9','SD2'),lPedidos,nPos,nPos)},STR0198,STR0199) //"Aguarde"###"Atualizando o resumo de faturas a serem geradas."
	nLenFacs := Len(aFacs[1]) - IIf(lCancCFDI,4,1)
	If !A468EdtVls()
		If cPaisLoc == "PAR"
			aFacs[nPos,nLenFacs] := (aNFS[nPosNfs,nLenNFS,1] + aNFS[nPosNfs,nLenNFS,3] - aNFS[nPosNfs,nLenNFS,4])
			aFacs[nPos,nLenFacs-3] := aNFS[nPosNfs,nLenNFS,2]
			aFacs[nPos,nLenFacs-2] := aNFS[nPosNfs,nLenNFS,3]
			aFacs[nPos,nLenFacs-1] := aNFS[nPosNfs,nLenNFS,4]
			aFacs[nPos,nLenFacs-4] := Iif( (GetNewPar('MV_DESCSAI','1') =='2'),aNfs[nPosNfs,nLenNFS,1]+aNFS[nPosNfs,nLenNFS,2],aNfs[nPosNfs,nLenNFS,1])
		Else
			aFacs[nPos,nLenFacs] := aNFS[nPosNfs,nLenNFS,1] + aNFS[nPosNfs,nLenNFS,3] - aNFS[nPosNfs,nLenNFS,4]
			aFacs[nPos,nLenFacs-3] := aNFS[nPosNfs,nLenNFS,2]
			aFacs[nPos,nLenFacs-2] := aNFS[nPosNfs,nLenNFS,3]
			aFacs[nPos,nLenFacs-1] := aNFS[nPosNfs,nLenNFS,4]
			aFacs[nPos,nLenFacs-4] := aNFS[nPosNfs,nLenNFS,1] + aNFS[nPosNfs,nLenNFS,2]
		Endif
	Else
		aFacs[nPos,nLenFacs-2] := aNFS[nPosNfs,nLenNFS,1] + aNFS[nPosNfs,nLenNFS,3] - aNFS[nPosNfs,nLenNFS,4]
		aFacs[nPos,nLenFacs-5] := aNFS[nPosNfs,nLenNFS,2]
		aFacs[nPos,nLenFacs-4] := aNFS[nPosNfs,nLenNFS,3]
		aFacs[nPos,nLenFacs-3] := aNFS[nPosNfs,nLenNFS,4]
		aFacs[nPos,nLenFacs-6] := aNFS[nPosNfs,nLenNFS,1] + aNFS[nPosNfs,nLenNFS,2]
	EndIf
	oButton:lActive:=lOk
	oLbx:SetFocus()
	oLbx:Refresh()
	If cPaisLoc == "BOL" .and. lContrFol
	 	LVlSerBol(aFacs[nPos,1])
	EndIf
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³          TRATAMENTO EXPECIFICO PARA LOCALIZADO PARAGUAY                      ³
	//³ Abaixo está implementado o controle de FOLIOS para o localizado PARAGUAY     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc $ "PAR|BOL" .And. lContrFol
		If cPaisLoc == "BOL"
			lPode := .T.
		ENDIF
	
	alAreax := GetArea()
	alAreaY := SF2->(GetArea())
	For nX := 1 to Len(aFacs)
		DbSelectArea("SF2")
		DbSetOrder(1)

		If TamSX3("F2_SERIE")[1] == 14 //Projeto Chave Unica - Tiago Silva
			cSerId:=SerieNfId("SF2",4,"F2_SERIE",dDataBase,aFacs[nX][9],aFacs[nX][1],)
		Else
			cSerId:=aFacs[nX][1]
		EndIf

		If DbSeek(xFilial("SF2")+aFacs[nX][2]+cSerId)
			Aviso(STR0009,STR0218 + Alltrim(aFacs[nX][2]) + STR0219 + Alltrim(aFacs[nX][1]) + STR0220 + aFacs[nX][9] + STR0221,{STR0176}) //"ATENCAO"###"A nota de número: "###, série: ###, espécie: ###: já existe cadastrada. Insira outro número ou série.###"OK"
			lRet := .F.
		EndIf
		If lRet

		DbSelectArea("SFP")
		DbSetOrder(5)

		Do Case
			Case Alltrim(aFacs[nX][9]) $ "NF"
			clEspecie := "1"
		EndCase
			clDoc := " - " + Alltrim(aFacs[nX][1]) + " - " + Alltrim(aFacs[nX][2])

		If DbSeek(xFilial("SFP")+cFilAnt+aFacs[nX][1]+clEspecie)
			lRet := .F.
			While AllTrim(SFP->FP_FILIAL+SFP->FP_FILUSO+SFP->FP_SERIE+SFP->FP_ESPECIE) == AllTrim(xFilial("SFP")+cFilAnt+aFacs[nX][1]+clEspecie)
				If !(cpaisLoc == "BOL") .and. SFP->FP_NUMINI <= aFacs[nX][2] .and. aFacs[nX][2] > SFP->FP_NUMFIM
					lRet := .F.
				 	Exit
				ElseIf cpaisLoc == "BOL" .and. (!Empty(SFP->FP_NUMINI) .and. SFP->FP_NUMINI <= aFacs[nX][2]) .and. (!Empty(SFP->FP_NUMFIM) .and. aFacs[nX][2] > SFP->FP_NUMFIM)
					lRet := .F.
				 	Exit
				Else
					lRet := .T.
					Exit
				EndIf
				SFP->(dbSkip())
			EndDo
	            If lRet
					If SFP->FP_ATIVO == "1" .or. cPAisLoc == "BOL"
						If lRet .and. dDataBase <= SFP->FP_DTAVAL
							lRet := .T.
						Else
							Aviso(STR0009 + clDoc,STR0214,{STR0176}) //"ATENCAO"###"A data de emissão deste documento está fora do limite cadastrado no controle de formulários. Portanto, não poderá ser utilizada para a emissão do documento fiscal."###"OK"
			 				lPode := .F.
					 		Exit
			 			EndIf
					Else
						Aviso(STR0009,STR0246,{STR0176}) //"ATENCAO"###"Este range está cadastrado porém não está ativo."###"OK"
						lPode := .F.
						Exit
					EndIf
	            Else
	            	Aviso(STR0009 + clDoc,STR0215,{STR0176}) //"ATENCAO"###"Não existe este número cadastrado em nenhum range com esta série ou espécie."###"OK"
					lPode := .F.
		            Exit
	            EndIf
			Else
				Aviso(STR0009 + clDoc,STR0216,{STR0176}) //"ATENCAO"###"Esta série e espécie não está cadastrada no controle de  formulários. Portanto, não poderá ser utilizada para a emissão do documento fiscal."###"OK"
				lPode := .F.
				Exit
			EndIf
		EndIf
	Next nX
	RestArea(alAreaX)
	RestArea(alAreaY)
	EndIf
Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºProgram   ³a468nChkNumAuthor ³Microsiga           º Date ³  12/14/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Checa a numeracao e trava para outros usuarios              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUse       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function a468nChkNum(cNumero,cSerie,lMsg,lValidSAT,nQtdeFat)

Local lRet		:=	.T.
Local aAreaAtu,aAreaSF1,aAreaSF2,aAreaSF3
Local cSerNf := ""
Local cTipoNF := ""
Local cTipoOk := ""
Local cTipContNF:= Iif (ValType(lFiscal)== "L" .and. lFiscal ,GetNewPar("MV_CONTNFI","I"),GetMV("MV_CONTNF"))
Local lReutiliza:= GetMv("MV_USAMNUM",,.T.)
Local nQtdeVez   := 1  // Qtde de numero de fatura reservada
Local nX        := 0
Local lUsaNewKey:= TamSX3("F2_SERIE")[1] == 14
DEFAULT lValidSAT  := .T.

cTipoOk	:=	"CN "
If lUsaNewKey // Projeto Chave Unica - Tiago Silva
	cSerNf 	:= serienfid("SF2",4,"F2_SERIE",ddatabase,cEspecie,cSerie)
Else
	cSerNf 	:= Padr(cSerie ,Len(Criavar("F2_SERIE",.F.)))
Endif
cTipoNF  := Padr(cTipo ,Len(Criavar("F2_TIPO",.F.)))

aAreaAtu:=GetArea()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a NF esta sendo digitada em outra estacao.              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//
// Isaac Silva 30/12/09
Do While nQtdeVez <= nQtdeFat  .And. lRet	// INICIO
	//
	cMayUsSF2  := "cMayUsSF2"+cValToChar(nQtdeVez)
	cMayUsSF1  := "cMayUsSF1"+cValToChar(nQtdeVez)
	&cMayUsSF2 := ""
	&cMayUsSF1 := ""
	// Define se a numeracao de notas de debito e creditosao independentes ( I ) ou seguem a sequencia (M)
	If cTipContNF == "I"
		&cMayUsSF2 := "SF2"+xFilial("SF2")+cNumero+cSerNf+'S'
	Else
		&cMayUsSF2 := "SF2"+xFilial("SF2")+cNumero+cSerNf+'S'
		&cMayUsSF1 := "SF1"+xFilial("SF1")+cNumero+cSerNf+'S'
	Endif

	If !LockByName(&cMayUsSF2,.T.,!Empty(xFilial("SF2")),.T.)
		If lMsg
			MsgAlert(OemToAnsi(STR0158))
		Endif
		lRet	:=	.F.
	Else
		// Verifico a existencia da NF no SF2
		dbSelectArea("SF2")
		aAreaSF2:=GetArea()
		dbSetOrder(1)
		If DbSeek(xFilial("SF2")+cNumero+cSerNf)
			If AllTrim(cTipContNF )<>"I"  .or.  SF2->F2_TIPODOC == '01'
				UnLockByName(&cMayUsSF2,.T.,!Empty(xFilial("SF2")),.T.)
				lRet:=.F.
			EndIf
		EndIf
		RestArea(aAreaSF2)
	EndIf
	// Verifico a existencia da NF no SF1
	If  lRet .And. cTipContNF <> "I"
		lRet:=LockByName(&cMayUsSF1,.T.,!Empty(xFilial("SF1")),.T.)
		If lRet
			dbSelectArea("SF1")
			aAreaSF1:=GetArea()
			dbSetOrder(1)
			If MsSeek(xFilial("SF1")+cNumero+cSerNf,.T.)
				If  F1_FORMUL == 'S'
					UnLockByName(&cMayUsSF2,.T.,!Empty(xFilial("SF2")),.T.)
					UnLockByName(&cMayUsSF1,.T.,!Empty(xFilial("SF1")),.T.)
					lRet:=.F.
				EndIf
			Endif
			RestArea(aAreaSF1)
		Else
			UnLockByName(&cMayUsSF2,.T.,!Empty(xFilial("SF2")),.T.)
		Endif
	Endif

	If lRet
		// Verifico a existencia da NF no SF3
		dbSelectArea("SF3")
		aAreaSF3:=GetArea()
		dbSetOrder(6)
		If MsSeek(xFilial("SF3")+cNumero+cSerNf)
			If F3_FORMUL == 'S'
				If IIf(Empty(F3_DTCANC),.T.,!lReutiliza)
					If AllTrim(cTipContNF)<>"I" .Or.  AllTrim(SF3->F3_ESPECIE) == AllTrim(cEspecie)
						lRet:=.F.
							UnLockByName(&cMayUsSF2,.T.,!Empty(xFilial("SF2")),.T.)
							UnLockByName(&cMayUsSF1,.T.,!Empty(xFilial("SF1")),.T.)
					EndIf
				EndIf
			Endif
		EndIf
		RestArea(aAreaSF3)
	EndIf
	If lRet .And. AllTrim(cEspecie) $ "NF/NDC"
		lRet := VldSX5Num(cNumero,cSerie,,cSerNf)
	EndIf
	nQtdeVez:= nQtdeVez+1
Enddo // LOOP FINAL
If lRet .And. cPaisLoc == "GUA"
   lRet  := ValNumSAT(cSerie,cNumero,"1")
   If !lRet .And. lValidSAT
      lValidSAT  := .F.
	  //"Atenção"###"Numeracao: "###" nao autorizada por resolucao. Entre em contato com a SAT."###"Ok"
	  Aviso(STR0009,STR0176+cNumero+"/"+cSerie+STR0177,{STR0180})
   EndIf
EndIf
If lRet
	DEFAULT __aCodes := {}
	For nX := 1 to nQtdeFat
		//Isaac Silva 04/01/2010
		cMayUsSF2 := "cMayUsSF2"+cValToChar(nX)
		cMayUsSF1 := "cMayUsSF1"+cValToChar(nX)
		aadd(__aCodes,{&cMayUsSF2,&cMayUsSF1})
	Next nX
EndIf
RestArea(aAreaAtu)
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºProgram   ³a468nGetNuºAuthor ³Microsiga           º Date ³  12/14/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Solicita novo numero de nota caso o numero digitado ja      º±±
±±º          ³exista                                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUse       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function a468nGetNum(lValidSAT,cNumAnt,cSerie)
Local lConfirma  := .T.
Local cNovoNum   := cNumero

DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0159) From 10,30 To 19,68 // Novo numero
If lValidSAT
   @ 1,.80 Say OemToAnsi(STR0160) + cSerie + "   " + cNumAnt + OemtoAnsi(STR0161) // A NF numero  ## ja existe
Else
   @ 1,.80 Say OemToAnsi(STR0176) + cNovoNum + "/"  + cSerie + OemtoAnsi(STR0178) + ;
     chr(13) + OemtoAnsi(STR0179)  //"Numeracao: "###" nao autorizada por resolucao."###"Entre em contato com a SAT."
EndIf
@ 2,.80 Say OemtoAnsi(STR0162)  // Digite um novo numero
@ 3,.80 Get cSerie when .F.
@ 4,.80 Get cNumero
DEFINE SBUTTON FROM 51,090  TYPE 2 ACTION (lConfirma := .F.,oDlg:End()) ENABLE OF oDlg
DEFINE SBUTTON FROM 51,120  TYPE 1 ACTION (lConfirma := .T.,oDlg:End()) ENABLE OF oDlg

ACTIVATE MSDIALOG oDlg CENTERED

Return (lConfirma)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºProgram   ³CarregaArrayºAutor  ³Bruno Sobieski    º Date ³  24.06.02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Carrega dados do SF2 e SD2 ativo em um array                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUse       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function SetSD2SF2()
Local aArea		:=	GetArea()
Local aAreaSF2
Local nX	:=	0 ,cChave:=""

Default aSF2	:=	{{"",""}}
aSD2	:=	{}

DbSelectArea("SD2")
For nX:=1	To fCount()
	AAdd(aSD2,{FieldName(nX),FieldGet(nX)})
Next
Aadd(aSD2,{'RECNO',SD2->(Recno())})

cChave	:=	xFilial('SF2')+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA+SD2->D2_FORMUL
If aSF2[1][1] <> cChave
	aAreaSF2	:=	SF2->(GetArea())
	DbSelectArea("SF2")
	DbSetOrder(1)
	MsSeek(cChave)
	aSF2	:=	{{cChave,""}}
	For nX:=1	To fCount()
		AAdd(aSF2,{FieldName(nX),FieldGet(nX)})
	Next
	Aadd(aSF2,{'RECNO',SF2->(Recno())})
	RestArea(aAreaSF2)
Endif
RestArea(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºProgram   ³GetSD2      ºAutor  ³Bruno Sobieski    º Date ³  24.06.02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Pega o valor de um campo no array aSD2.                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUse       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GetSD2(cCampo)
Local xRet
If aSD2 <> Nil
	xRet	:=	aSD2[AScan(aSD2,{|x| x[1]==cCampo})][2]
Else
	xRet	:=	Criavar(cCampo)
Endif
Return xRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºProgram   ³GetSF2      ºAutor  ³Bruno Sobieski    º Date ³  24.06.02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Pega o valor de um campo no array aSF2.                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUse       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function GetSF2(cCampo)
Local xRet
If aSF2 <> Nil
	xRet	:=	aSF2[AScan(aSF2,{|x| x[1]==cCampo})][2]
Else
	xRet	:=	Criavar(cCampo)
Endif

Return xRet
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A468RemEnt   ³ Autor ³ Alexandre Silva   ³ Data ³ 17.07.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Geracao automatica do remito de consignacao de entrada para³±±
±±³          ³ o faturamento da venda.(Tipo 62 Beneficiamento)      	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³  A468RemEnt(aNFs)      									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³aNFs: Nota fiscal para gravacao							  ³±±
±±³			 ³		                          							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A468RemEnt(aNFs,oProcess)

Local aPergs		:= {.F.,(mv_par13==1),(mv_par11==1),(mv_par12==1),.T.}
Local aAreaSF2 	:=	SF2->(GetArea())
Local aAreaSD2		:=	SD2->(GetArea())
Local aAreaAnt  	:= GetArea()
Local lRetGravacao:=	.F.
Local lGrava		:=	.T.
Local cProxNum		:= ""
Local cTES			:= ""
Local cCF			:=	""
Local lConsig		:=	.F.
Local lContinua	:=	.T.
Local lItemsCons	:=	ExistBlock('M468SD1')
Local lCabCons  	:=	ExistBlock('M468SF1')
Local nQuant	:=	0,nQuant2	:=	0
Local nX,nIp

Private aHeader	:=	{}
Private aSF1		:=	{}
Private aSD1		:=	{}
Private aCols		:=	{}
Private nItemAtu	:=	0
Private cTransp	:=	"" //usado para validacao da transpotadora nao remover.
Private cNFiscal
Private cNumero
Private cSerie
Private cTipo

DbSelectArea('SX3')
DbSetOrder(1)
If (aHeadSF1 == Nil) .Or. (Empty(aHeader) .And. aHeadSD1 == Nil)
	MsSeek('SD1')
	While X3_ARQUIVO == 'SD1' .And. !EOF()
		AADD(aHeader,{ TRIM(X3Titulo()), X3_CAMPO, X3_PICTURE,X3_TAMANHO, X3_DECIMAL, X3_VALID,	X3_USADO,X3_TIPO, X3_ARQUIVO,X3_CONTEXT } )
		dbSkip()
	Enddo
	MsSeek('SF1')
	aHeadSF1	:=	{}
	While X3_ARQUIVO == 'SF1' .And. !EOF()
		If (AllTrim(X3_CAMPO) <> "F1_DIACTB") .OR.  (cPaisLoc == "PTG" .AND. AllTrim(X3_CAMPO) == "F1_DIACTB")
			AADD(aHeadSF1, X3_CAMPO)
		EndIf
		dbSkip()
	Enddo
Else
	aHeader	:=	aClone(aHeadSD1)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Pega o proximo numero do SX5³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aNotaOri	:=	PegaNum("RET")
If aNotaOri[2] == Nil
	Return .F.
Endif

For nX:=1 To Len(aHeadSF1)
	AAdd(aSF1,CriaVar(aHeadSF1[nX],.F.))
Next
AAdd(aSF1,.F.)

If !lMSAuto
	oProcess:SetRegua2(Len(aNFs[2]))
Endif
For nIp := 1 To Len(aNFs[2])
	SD2->(MsGoTo(aNFs[2][nIp]))
	nQuant	:=	If(lPedidos,SD2->D2_QUANT,SD2->D2_QTDAFAT)
	nQuant2	:=	If(nQuant=0,0,ConvUM(SD2->D2_COD,nQuant,0,2) )
	If nIp == 1
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³  Incluir Remitos de Entrada                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SF2->(dbSetOrder(1))
		If SF2->(MsSeek(xFilial("SD2")+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA))
			PutSF1('F1_DOC'  		,aNotaOri[2]		)
			PutSF1('F1_SERIE'		,aNotaOri[1]		)
			PutSF1('F1_FORNECE'  ,SF2->F2_CLIENTE	)
			PutSF1('F1_LOJA'     ,SF2->F2_LOJA		)
			PutSF1('F1_MOEDA'    ,SF2->F2_MOEDA		)
			PutSF1('F1_TXMOEDA'	,SF2->F2_TXMOEDA	)
			PutSF1('F1_NATUREZ' 	,SF2->F2_NATUREZ	)
			PutSF1('F1_EMISSAO'  ,dDataBase			)
			PutSF1('F1_DTDIGIT'  ,dDataBase			)
			PutSF1('F1_FRETINC'  ,"N"					)
			PutSF1('F1_TIPOREM'  ,"0"            	)
			PutSF1('F1_GERAPED'  ,"2"					)
			If cPaisLoc == "COL"
				If SF1->(ColumnPos("F1_TRMPAC")) > 0 .And. SF2->(ColumnPos("F2_TRMPAC")) > 0
					PutSF1('F1_TRMPAC',SF2->F2_TRMPAC)
				EndIf
				If SF1->(ColumnPos("F1_TPACTIV")) > 0 .And. SF2->(ColumnPos("F2_TPACTIV")) > 0
					PutSF1('F1_TPACTIV',SF2->F2_TPACTIV)
				EndIf
				If SF1->(ColumnPos("F1_CODMUN")) > 0 .And. SF2->(ColumnPos("F2_CODMUN")) > 0
					PutSF1('F1_CODMUN',SF2->F2_CODMUN)
				EndIf
				If SF1->(ColumnPos("F1_SOPORT")) > 0
					PutSF1('F1_SOPORT',"N")
				EndIf
			EndIf
			If (cPaisLoc == "PER") .And. ( SF1->(FieldPos("F1_TPDOC")) > 0 )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Quando se tratar do Peru atualiza F1_TPDOC="001009"(Guia de Remission - Remitente) ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				PutSF1('F1_TPDOC' ,"001009")
			EndIf

			PutSF1('F1_PEDVEND'	,"AUTO  "			)
			If SF1->(FieldPos("F1_RUTCLI")) > 0
				If SF2->F2_TIPO == "B"
					PutSF1('F1_RUTCLI',SA2->A2_CGC)
				Else
					PutSF1('F1_RUTCLI',SA1->A1_CGC)
				Endif
			Endif
			If SF1->(FieldPos("F1_QTDEFOL")) > 0
				PutSF1("F1_QTDEFOL",CriaVar("F1_QTDEFOL",.T.))
			Endif
			If ( cPaisLoc == "PTG" )
				PutSF1('F1_DIACTB'  ,MV_PAR26)
			EndIf
		Else
			lGrava := .F.
		EndIf
	Endif
	lContinua :=	.F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Uso o TES de saida para verificar se o TES de entrada ³
	//³controla poder de terceiro.                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SF4")
	dbSetOrder(1)
	MsSeek(xFilial("SF4")+SD2->D2_TES)
	If SD2->D2_TIPOREM == _RMCONS
		lConsig	:=	.T.
		//Verifica se o tes de consignacao tem um tes de devolucao associado.
		If	!Empty(SF4->F4_TESDV) .And. MsSeek(xFilial("SF4")+SF4->F4_TESDV) .And. SF4->F4_PODER3 == "D"  .And. lGrava
			If !lMSAuto
				oProcess:IncRegua2(STR0163+aNotaOri[1]+" "+aNotaOri[2]) //'Generando retorno '
			Endif
			cTES 		:=	SF4->F4_CODIGO
			cCF		:= SF4->F4_CF
			cProxNum	:=	ProxNum()
			AAdd(aSD1,Array(Len(aHeader )+1))
			For nX:=1 To Len(aHeader)
				aSD1[Len(aSD1)][nX]	:=	CriaVar(aHeader[nX][2],.F.)
			Next
			aSD1[Len(aSD1)][nX]	:=	.F.

			AAdd(aPosLote,{SD2->D2_LOTECTL,SD2->D2_NUMLOTE,SD2->D2_DTVALID})

			PutSD1('D1_DOC'  		,aNotaOri[2]		)
			PutSD1('D1_SERIE'		,aNotaOri[1]		)
			PutSD1('D1_FORNECE'  ,SD2->D2_CLIENTE	)
			PutSD1('D1_LOJA'     ,SD2->D2_LOJA		)
			PutSD1('D1_EMISSAO'  ,dDataBase			)
			PutSD1('D1_DTDIGIT'  ,dDataBase			)
			PutSD1('D1_COD'  		,SD2->D2_COD    	)
			PutSD1('D1_UM'       ,SD2->D2_UM			)
			PutSD1('D1_QUANT'    ,nQuant)
			PutSD1('D1_VUNIT'    ,SD2->D2_PRCVEN + (SD2->D2_DESCON/nQuant)	)
			PutSD1('D1_TOTAL'    ,(nQuant * (SD2->D2_PRCVEN+(SD2->D2_DESCON/nQuant))))
			PutSD1('D1_SEGUM'    ,SD2->D2_SEGUM		)
			PutSD1('D1_QTSEGUM'  ,nQuant2         )
			PutSD1('D1_LOCAL'    ,SD2->D2_LOCAL		)
			PutSD1('D1_NUMSEQ'   ,cProxNum			)
			PutSD1('D1_TES'      ,cTES					)
			PutSD1('D1_CF'       ,cCF					)
			PutSD1('D1_GRUPO'    ,SD2->D2_GRUPO		)
			PutSD1('D1_LOCALIZ'  ,SD2->D2_LOCALIZ	)
			PutSD1('D1_IDENTB6'	,SD2->D2_IDENTB6	)
			PutSD1('D1_LOTECTL'	,SD2->D2_LOTECTL	)
			PutSD1('D1_NUMLOTE'  ,SD2->D2_NUMLOTE	)
			PutSD1('D1_DTVALID'  ,SD2->D2_DTVALID	)
			PutSD1('D1_IDENTB6'  ,SD2->D2_IDENTB6	)
			PutSD1('D1_TP'     	,SD2->D2_TP  		)
			PutSD1('D1_NFORI'		,SD2->D2_DOC    	)
			PutSD1('D1_SERIORI'	,SD2->D2_SERIE  	)
			PutSD1('D1_ITEMORI'	,SD2->D2_ITEM	  	)
			PutSD1('D1_QTDACLA'	,nQuant				)
			PutSD1('D1_STSERV'	,SD2->D2_STSERV 	)
			PutSD1('D1_QTDEDEV'	,nQuant				)
			PutSD1('D1_VALDEV'	,SD2->D2_PRCVEN*nQuant	)
			If lItemsCons
				aSD1[Len(aSD1)]	:=	aClone(ExecBlock('M468SD1',.F.,.F.,{aClone(aSD1[Len(aSD1)]),aClone(aHeader)} ))
			Endif
		Else
			Help(" ",1,"N468TES3")
			lGrava := .F.
			Exit
		EndIf
	Endif
Next nIp

If lGrava
	If lCabCons
		aSF1	:=	aClone(ExecBlock('M468SF1',.F.,.F.,{aClone(aSF1),aClone(aHeadSF1)}))
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Grava o remito de entrada     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MsAguarde( {|| lRetGravacao := GravaNfGeral({aHeadSF1,aSF1},aSD1,HeaderCpos(),63,aClone(aPergs),,.F.,,,,aNotaOri[2])},OemToAnsi(STR0165),OemToAnsi(STR0164)) //"Gravando Registros..."
EndIf

RestArea(aAreaSF2)
RestArea(aAreaSD2)
RestArea(aAreaAnt)

Return (lRetGravacao .Or. !lConsig)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³PutSD1    ºAutor  ³Bruno Sobieski      ºFecha ³  07/08/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Grava o conteudo do xValor no array de referencia do SD1    º±±
±±º          ³dependendo co campo cCpo                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP7                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PutSD1(cCpo,xValor)

aSD1[Len(aSD1)][AScan(aHeader,{|x| Alltrim(x[2])==cCpo})]	:=	xValor

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³PutSF1    ºAutor  ³Bruno Sobieski      ºFecha ³  07/08/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Grava o conteudo do xValor no array de referencia do SF1    º±±
±±º          ³dependendo co campo cCpo                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP7                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PutSF1(cCpo,xValor)

aSF1[AScan(aHeadSF1,{|x| Alltrim(x)==cCpo})]	:=	xValor

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PegaNum     ³ Autor ³ Bruno Sobieski     ³ Data ³ 10.07.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pega o numero do remito de vendas.                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MatARem                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PegaNum(cSerie)

Local cNumero
Local aRet	  := {Nil,Nil}
Local lRetNum := .T.

DbSelectArea("SX5")
DbSetOrder(1)
If lSeqEspecie
   lRetNum  := MsSeek( xFilial("SX5")+"AC"+"RFN"+cSerie,.F. )
Else
   lRetNum  := MsSeek( xFilial("SX5")+"01"+cSerie,.F. )
EndIf
If lRetNum
	cNumero := LocConvNota(X5Descri(),TamSX3('F2_DOC')[1])
	aRet	:=	{cSerie,cNumero}
Else
    //"Atencao"###'Nao foi achada numeracao para a serie'
	Aviso(STR0009,STR0169+cSerie+'"',{"OK"})
Endif

Return aRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468LibPedº Autor ³ Paulo Augusto      ºFecha ³  17/09/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Programa para liberar os arquivos do SC5                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468A                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a468LibPed()
// Destravar registros no SC5
Local aAreaPed:= GetArea()
Local cPedidoAnt := ""
Local nX
// Verifica se variavel existe e ordena por numero de pedido
aPedido	:=IIf( Type("aPedido")=="U",{},Asort(aPedido))

DbSelectArea("SC5")
DbSetOrder(1)
For nX := 1 To Len(aPedido)
	If aPedido[nX] <> cPedidoAnt .and. MSSEEK(xFilial("SC5") + aPedido[nX])
		MsUnLock()
		cPedidoAnt := aPedido[nX]
	EndIf
Next nX

RestArea(aAreaPed)
aPedido		:=	{}

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468nVldSeº Autor ³Fernando Machima    ºFecha ³  03/02/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validacao da serie com o tipo do cliente(Loc. El Salvador) º±±
±±º          ³ Valida se a numeracao esta homologada por alguma resolucao º±±
±±º          ³ (Loc. Guatemala)                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a468nVldSer(aFacs,nPosAtual,lLoop)

Local lRet       := .T.
Local cSerieNF   := ""
Local cCodClie   := ""
Local cLojaClie  := ""
Local cNumNF     := ""
Local cCFDSer    := ""
Local cCFDFol    := ""
Local nCFDChk	 := 0
Local nX		 := 0
Local alAreaX
Local alAreaY
local aRetCAEA		:={}
Local clEspecie	 := ""
Local clDoc      := ""
Local cNCF       := "" //NCF utilizado na Localizacao Rep. Dominicana
Local cSerId	 := ""
Local aAreaAt	 :={}
Local aAreaSA1	 :={}
//Controle de Folios
Local lContrFol     :=	.F.

If cPaisLoc == "MEX"
	lContrFol     :=	 SF1->(FieldPos("F1_NUMAUT")) > 0 .And. SF1->(FieldPos("F1_CODCTR")) > 0 ;
						.And. SF2->(FieldPos("F2_NUMAUT")) > 0 .And. SF2->(FieldPos("F2_CODCTR")) > 0 .And. SF2->(FieldPos("F2_LIMEMIS")) > 0 ;
						.And. SF3->(FieldPos("F3_NUMAUT")) > 0 .And. SF3->(FieldPos("F3_CODCTR")) > 0 ;
						.And. AllTrim(FunName())$"MATA465N|MATA467N|MATA468N" ;
						.And. GetNewPar("MV_CTRLFOL",.F.)
ElseIF cPaisLoc == "VEN"
	lContrFol     :=.T.
Else
		lContrFol     :=	AllTrim(FunName())$"MATA465N|MATA467N|MATA468N|MATA461" .And. GetNewPar("MV_CTRLFOL",.F.)
EndIf


If cPaisLoc == "SAL"
    cSerieNF   := aFacs[nPosAtual][1]
    cCodClie   := aFacs[nPosAtual][3]
    cLojaClie  := aFacs[nPosAtual][4]

	If lLoop
		For nX := 1 to Len(aFacs)
			cSerieNF   := aFacs[nX][1]
			cCodClie   := aFacs[nX][3]
			cLojaClie  := aFacs[nX][4]

			lRet  := a468nCliSer(cSerieNF,cCodClie,cLojaClie)
			If !lRet
				Loop
			EndIf
		Next nX
	Else
		lRet  := a468nCliSer(cSerieNF,cCodClie,cLojaClie)
	EndIf
	If !lRet
		//"Atencao"###"Os tipos de documento e cliente sao incompativeis."###
		//"A serie iniciada por 0(zero) deve ser usada para o documento do tipo Credito Fiscal, "###
		//"enquanto a serie iniciada por 1(um) deve ser utilizada para Fatura."###"Ok"
		Aviso(STR0009,STR0181+chr(13)+STR0182+STR0183,{OemToAnsi(STR0180)})
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida se para a numeracao selecionada ha alguma resolucao(SAT)  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ElseIf cPaisLoc == "GUA"
	If lLoop
		For nX := 1 to Len(aFacs)
			cSerieNF   := aFacs[nX][1]
			cNumNF     := aFacs[nX][2]

			If !(lRet := ValNumSAT(cSerieNF,cNumNF,"1"))
	           //"Atenção"###"Numeracao: "###" nao autorizada por resolucao. Entre em contato com a SAT."###"Ok"
	           Aviso(STR0009,STR0176+cNumNF+"/"+cSerieNF+STR0177,{STR0180})
			   Exit
			EndIf
		Next nX
	EndIf
ElseIf lGerarCFD
	If lLoop
		cCFDSer := ""
		cCFDFol := ""
		For nX := 1 To Len(aFacs)
			nCFDChk := CFDChkFol(cFilAnt,aFacs[nX][1],aFacs[nX][2],,.F.,.F.)
			If nCFDChk <> 0
				If nCFDChk == 1
					If At(aFacs[nX][1],cCFDSer) == 0
						cCFDSer += aFacs[nX][1] + CRLF
					Endif
				ElseIf nCFDChk == 2
					If At(aFacs[nX][1],cCFDFol) == 0
						cCFDFol += Padr(Alltrim(aFacs[nX][1]) + ": ",TamSX3("F2_SERIE")[1]+2) + aFacs[nX][2] + CRLF
					Endif
				Endif
			Endif
		Next
		If !Empty(cCFDSer)
			cCFDSer := STR0188 + CRLF + cCFDSer + CRLF	//"Esta(s) serie(s) nao esta(ao) registrada(s) no controle de folios:"
			cCFDSer += STR0189  					 	//"Deseja continuar com a geracao de notas fiscais ?"
			lRet := MsgYesNo(cCFDSer,STR0186)			//"Comprovantes Fiscais Digitais"
		Endif
		If lRet
			If !Empty(cCFDFol)
				cCFDFol := STR0190 + CRLF + cCFDFol + CRLF	//"O numero de folio para esta(s) serie(s) nao pertence ao intervalo estabelecido:"
				lRet := .F.
				MsgAlert(cCFDFol,STR0186)					//"Comprovantes Fiscais Digitais"
			Endif
		Endif
	Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a serie esta cadastrada no cadastro de folios (SFP)  ³
//³ e se numeracao e valida e esta dentro do range                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ElseIf lContrFol
	If lLoop
		For nX := 1 To Len(aFacs)
			If  cPaisloc == "ARG"     .And. !(ChkFolARG(cFilAnt,aFacs[nX][1],aFacs[nX][2],,lMSAuto,,cPontoVend))
				lRet := .F.
			ElseIf  cPaisloc == "VEN" .And. !(CtrFolios(cFilAnt,aFacs[nX][1],cEspecie,aFacs[nX][2]))
				lRet := .F.
			ElseIf cPaisloc == "EQU"  .And. !(ChkFolEQU(cFilAnt,aFacs[nX][1],aFacs[nX][2],,lMSAuto))
				lRet := .F.
			ElseIf cPaisLoc == "DOM" .AND. SF2->(FieldPos("F2_NCF")) > 0 .AND. (Trim(cEspecie) $ "NF|NCI|NDI|NCC|NDC") .AND. ;
			!Empty(aFacs[nX][1]) .AND. !Empty(aFacs[nX][2]) .AND. aFacs[nX][2] != STR0153 //Sin Numero
				//Indice 3 qdo Rep Dom. e Campo F2_NCF existente, se o campo estiver vazio sera gerado automaticamente.
				If Empty(aFacs[nX][3])
					cNCF := ChkFolDOM(cFilAnt,aFacs[nX][1],aFacs[nX][2],"",lMSAuto,MVNOTAFIS)
					lRet := (cNCF!="")
					aFacs[nX][3] := Space(TamSX3("F2_NCF")[1])
					a468SetNCF(cNCF,nX)
				EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Release 11.5 - Chile	 - F2CHI                                      ³
			//³Validar controle de formulario considerando as seguintes especies :³
			//³1-FCT (Factura) , 2-FCX (Factura Exenta)                           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			ElseIf GetRpoRelease("R5") .AND. cPaisloc == "CHI"
				lRet := ChkFolCHI(cFilAnt	,aFacs[nX][1],aFacs[nX][2], "1|2",;
									NIL		,.F.)

			ElseIf  cPaisLoc == "URU" .AND. !(ChkFolURU(cFilAnt,aFacs[nX][1],aFacs[nX][2],,lMSAuto))
				lRet :=.F.
			EndIf
		Next
	EndIf
EndIf

//Verifica se Existe CAEA
If lRet .And. cPaisLoc == "ARG" .And. FindFunction("ExisteCAEA") .And. lLoop
	For nX:= 1 To Len(aFacs)
		lRet  := ExisteCaea(cFilAnt,aFacs[nX][1],aFacs[nX][2], .F. /*lMSAuto*/,cEspecie,dDataBase,@aRetCAEA)
	Next
endif
If lRet .And. cPaisLoc == "ARG"
	aAreaAt:=GetArea()
	aAreaSA1:=SA1->(GetArea("SA1"))
	SA1->( dbSetOrder(1) )
	For nX:= 1 To Len(aFacs)
		If SA1->( MsSeek(xFilial("SA1")+aFacs[nX][3]+aFacs[nX][4]) )
			lRet  :=  GrvRG1415(aFacs[nX])
			If !lRet
				nX:= Len(aFacs)
			EndIf
		EndIf
	Next
	SA1->(RestArea(aAreaSA1))
	RestArea(aAreaAt)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³          TRATAMENTO EXPECIFICO PARA LOCALIZADO PERU                          ³
//³ Abaixo está implementado o controle de FOLIOS para o localizado PERU         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If lRet .and. lLoop .and. cPaisLoc $ "PER/COL"
	alAreax := GetArea()
	alAreaY := SF2->(GetArea())
	For nX := 1 to Len(aFacs)
		DbSelectArea("SF2")
		DbSetOrder(1)

		If TamSX3("F2_SERIE")[1] == 14 //Projeto Chave Unica - Tiago Silva
			cSerId:=SerieNfId("SF2",4,"F2_SERIE",dDataBase,aFacs[nX][9],aFacs[nX][1],)
		Else
			cSerId:=aFacs[nX][1]
		EndIf

		If DbSeek(xFilial("SF2")+aFacs[nX][2]+cSerId)
			Aviso(STR0009,STR0218 + Alltrim(aFacs[nX][2]) + STR0219 + Alltrim(aFacs[nX][1]) + STR0220 + aFacs[nX][9] + STR0221,{STR0176}) //"ATENCAO"###"A nota de número: "###, série: ###, espécie: ###: já existe cadastrada. Insira outro número ou série.###"OK"
			lRet := .F.
		EndIf
		If lRet

		DbSelectArea("SFP")
		DbSetOrder(5)

		Do Case
			Case Alltrim(aFacs[nX][9]) $ "NF"
				clEspecie := "1"
		EndCase
			clDoc := " - " + Alltrim(aFacs[nX][1]) + " - " + Alltrim(aFacs[nX][2])

		If DbSeek(xFilial("SFP")+cFilAnt+aFacs[nX][1]+clEspecie)
			lRet := .F.
			While AllTrim(SFP->FP_FILIAL+SFP->FP_FILUSO+SFP->FP_SERIE+SFP->FP_ESPECIE) == AllTrim(xFilial("SFP")+cFilAnt+aFacs[nX][1]+clEspecie)
				If SFP->FP_NUMINI <= aFacs[nX][2] .and. SFP->FP_NUMFIM >= aFacs[nX][2]
					lRet := .T.
				 	Exit
				Else
					lRet := .F.
				EndIf
				SFP->(dbSkip())
			EndDo
	            If lRet
	   			If lRet .and. dDataBase <= SFP->FP_DTAVAL
			 		lRet := .T.
			 	Else
					 		Aviso(STR0009 + clDoc,STR0214,{STR0176}) //"ATENCAO"###"A data de emissão deste documento está fora do limite cadastrado no controle de formulários. Portanto, não poderá ser utilizada para a emissão do documento fiscal."###"OK"
			 		lRet := .F.
					 		Exit
			 	EndIf
	            Else
	            	Aviso(STR0009 + clDoc,STR0215,{STR0176}) //"ATENCAO"###"Não existe este número cadastrado em nenhum range com esta série ou espécie."###"OK"
		            	Exit
	            EndIf
		Else
				Aviso(STR0009 + clDoc,STR0216,{STR0176}) //"ATENCAO"###"Esta série e espécie não está cadastrada no controle de  formulários. Portanto, não poderá ser utilizada para a emissão do documento fiscal."###"OK"
			lRet := .F.
				Exit
		EndIf
		EndIf
	Next nX

	RestArea(alAreaX)
	RestArea(alAreaY)
EndIf

If cPaisLoc == "ARG" .And. lRet .And. A468EdtVls()

	For nX := 1 to Len(aFacs)
		SA1->(DbSetOrder(1))
		If SA1->(DbSeek(xFilial("SA1")+aFacs[nX][3]+aFacs[nX][4]))
			If !(ALLTRIM(SA1->A1_SERIE) == ALLTRIM(aFacs[nX][1]))
	   			lRet:= .F.
	            //"Atenção"###"Não é permitido a geração de Fatura Líquido Produto com Série diferente da cadastrada para o cliente:"###"Ok"
	            Aviso(STR0009,STR0224+"   "+STR0051+" = "+SA1->A1_SERIE,{STR0176})
			    Exit
			Endif

		EndIf
	Next nX
EndIF

Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468nCliSeº Autor ³Fernando Machima    ºFecha ³  03/02/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validacao da serie com o tipo do cliente(Loc. El Salvador) º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a468nCliSer(cSerieNF,cCodClie,cLojaClie)

Local lRet       := .T.
Local lCredFisc  := .T.

If !lTpPedBenf
	SA1->(DbSetOrder(1))
	If SA1->(DbSeek(xFilial("SA1")+cCodClie+cLojaClie))
	   lCredFisc  := SA1->A1_TIPO $ "1|4"
	EndIf

	If lCredFisc
	   lRet  := Substr(cSerieNF,1,1) == "0"
	Else
	   lRet  := Substr(cSerieNF,1,1) == "1"
	EndIf
Else
	lRet := .T.
Endif

Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468nTpPedº Autor ³Cristiano Denardi   ºFecha ³  15/02/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Busca do Tipo do Pedido (Normal ou Beneficiamento)         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ ExpL1 ( Resultado do Tipo do Pedido )					  º±±
±±º          ³       .T. -> Beneficiamento (SA2)                          º±±
±±º          ³       .F. -> Normal         (SA1)                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a468nTpPed( cCliFor, cLj, cPedNum )

Local 	lRet       	:= .F.
Local 	aArea		:= GetArea()
Default cClifor		:= "" // Cod  Cliente ou Fornecedor
Default cLj			:= "" // Loja Cliente ou Fornecedor
Default cPedNum 	:= "" // Numero do Pedido

If !Empty(cCliFor) .And. !Empty(cLj) .And. !Empty(cPedNum)
	DbSelectArea( "SC5" )
	DbSetOrder(3) // C5_FILIAL+C5_CLIENTE+C5_LOJACLI+C5_NUM
	If DbSeek( xFilial("SC5") + cCliFor + cLj + cPedNum )
		If C5_TIPO = "B"
			lRet := .T.
		Endif
	EndIf
Endif

RestArea( aArea )
Return  ( lRet  )


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³a468nFreRem ³ Autor ³Sabrina Passini      ³ Data ³ 10.06.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa para Rateio de Frete (Remito Manual)              ³±±
±±³ÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nFreRem(cNumRem,cSerRem,nQtdLib)
LOCAL nParFrete    	:= 0
LOCAL nParSeguro  	:= 0
LOCAL nParDespesa 	:= 0
LOCAL lFreteMoe   	:= Iif(GetMv("MV_FRETMOE") == "S",.T.,.F.)
Local nPosRem	  	:= 0
Local nPesoTot 	  	:= 0
Local nValTot 	  	:= 0
Local nValItem 	  	:= 0
Local nPesoItem	  	:= 0
Local aArea		  	:= GetArea()
Local aAreaSD2	  	:= SD2->(GetArea())
Local nTaxaFrete  	:= 0
Local nParDesNTr 	:= 0
Local nParTara 		:= 0
Local nRatNTrb 		:= 0
Local nRatTara 		:= 0
Local nFator4		:= 0
Local nFator5		:= 0

nTaxaFrete := SF2->F2_TXMOEDA

If nTaxaFrete <=0
	nTaxaFrete:= Recmoeda(dDatabase,SF2->F2_MOEDA)
EndIf

If cRat == Nil
	cRat     := GetNewPar("MV_RATDESP","FR=1;DESP=1;SEG=1")
	nRatDesp := Val(Substr(cRat,AT("DESP=" ,cRat)+5,1))
	nRatFret := Val(Substr(cRat,AT("FR="   ,cRat)+3,1))
	nRatSeg  := Val(Substr(cRat,AT("SEG="  ,cRat)+4,1))
	nRatNTrb := Val(Substr(cRat,AT("NTRB="  ,cRat)+5,1))
	nRatTara := Val(Substr(cRat,AT("TARA="  ,cRat)+5,1))
Endif

nParfrete 	:= SF2->F2_FRETE
nParSeguro	:= SF2->F2_SEGURO
nParDespesa	:= SF2->F2_DESPESA

If cPaisLoc == "PTG"
	nParDesNTr 	:= SF2->F2_DESNTRB
	nParTara 	:= SF2->F2_TARA
Endif

nPosRem		:=	Ascan(aRemTots,{|x| x[1] == cNumRem+cSerRem})

DbSelectArea('SB1')
DbSetOrder(1)
SB1->(MsSeek(xFilial()+(cRem)->D2_COD))
If !(AllTrim((cRem)->D2_TES) $ SuperGetMV("MV_BONUSTS"))
	nPesoItem	:=	nQtdLib *  SB1->B1_PESO
	nValItem	:=	nQtdLib * (cRem)->D2_PRCVEN
Endif
If nPosRem == 0
	DbSelectArea('SD2')
	DbSetOrder(3)   //D2_FILIAL+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA+D2_COD+D2_ITEM
	DbSeek(xFilial()+cNumRem+cSerRem)
	While !EOF() .And. cNumRem == SD2->D2_DOC .And. SD2->D2_SERIE == cSerRem .And. xFilial() == SD2->D2_FILIAL
		If !(AllTrim(SD2->D2_TES) $ SuperGetMV("MV_BONUSTS"))
			SB1->(MsSeek(xFilial()+ SD2->D2_COD))
			nPesoTot    += SB1->B1_PESO * SD2->D2_QUANT
			nValTot 	+= SD2->D2_TOTAL
		Endif
		SD2->(DbSkip())
	EndDo

	AAdd(aRemTots,{cNumRem+cSerRem,nPesoTot,nValTot})
	nPosRem	:=	Len(aRemTots)
Endif

nFator1	:=	If(nRatFret == 2.And.aRemTots[nPosRem][2] >0 ,(nPesoItem/aRemTots[nPosRem][2]),(nValItem/aRemTots[nPosRem][3]))
nFator2	:=	If(nRatSeg  == 2.And.aRemTots[nPosRem][2] >0 ,(nPesoItem/aRemTots[nPosRem][2]),(nValItem/aRemTots[nPosRem][3]))
nFator3	:=	If(nRatDesp == 2.And.aRemTots[nPosRem][2] >0 ,(nPesoItem/aRemTots[nPosRem][2]),(nValItem/aRemTots[nPosRem][3]))

If cPaisLoc == "PTG"
	nFator4	:=	If(nRatNTrb == 2.And.aRemTots[nPosRem][2] >0 ,(nPesoItem/aRemTots[nPosRem][2]),(nValItem/aRemTots[nPosRem][3]))
	nFator5	:=	If(nRatTara == 2.And.aRemTots[nPosRem][2] >0 ,(nPesoItem/aRemTots[nPosRem][2]),(nValItem/aRemTots[nPosRem][3]))
Endif

RestArea(aAreaSD2)
RestArea(aArea)

Return( { nParFrete*nFator1,nParSeguro*nFator2,nParDespesa*nFator3,nParDesNTr*nFator4,nParTara*nFator5 } )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468nImp  ºAutor  ³Marcello            ºFecha ³ 23/06/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Calculo de impostos para as notas a serem geradas.          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468nImp(aNFs,cAlias,lPedido,nIni,nFim,oProcess)
Local nNFS			:= 0
Local nI			:= 0
Local nFrete     	:= 0
Local nSeguro		:= 0
Local nDespesa		:= 0
Local nDesNTrb		:= 0
Local nTara			:= 0
Local nVlrTot   	:= 0
Local nVlrDsc   	:= 0
Local nVlrTotal 	:= 0
Local nVlrDscTot	:= 0
Local nPrcVen   	:= 0
Local nPrcBrut  	:= 0
Local nMoedaSF2 	:= 0
Local nX			:= 0
Local nFreteRat		:= 0
Local nDespRat		:= 0
Local nSegRat		:= 0
Local nNtrbRat 		:= 0
Local nTaraRat 		:= 0
Local nFatorRj		:= 0
Local nTotSub		:= 0
Local nTotSom		:= 0
Local nTotDesp		:= 0
Local nFrete  		:= 0
Local nAuxFret		:= 0
Local nSeg			:= 0
Local nAuxSeg		:= 0
Local nDesp			:= 0
Local nAuxDesp		:= 0
Local nDifDesp		:= 0
Local nCont			:= 0
Local nMoedaRem		:= 1
Local nMaxItem		:= 0
Local nDifer		:= 0
Local nDecs			:= 0
Local nCli			:= TamSX3('A1_COD')[1]
Local nLoja			:= TamSX3('A1_LOJA')[1]
Local cTes      	:= ""
Local _cCfo			:= ""
Local cSFC			:= ""
Local aRatDesp		:= {}
Local aPedDel		:= {}
Local lAcresDup     := ( SuperGetMv("MV_ACRSDUP",.F.,.F.) == .T.)
Local lM468ACRE     := ExistBlock("M468ACRE")
Local nPos          := 0
Local nC5Descont    := 0
Local cTpdpind 		:= GetNewPar("MV_TPDPIND","1")
Local cCliente		:= ""
Local cLoja			:= ""
Local nlCont		:= 1
Local nlCont2		:= 1
Local nlCont3		:= 1
Local llFlag		:= .F.
Local nlValTot		:= 0
Local alDeleta		:= {}
Local nlMinDIG 		:= GetNewPar("MV_MINDETR",0)
Local nPrcSC9 		:= 0
Local lPrcDec		:= SuperGetMV("MV_PRCDEC",,.F.)
Local nFacReg		:= 0
Local nDescItem     := 0
Local nMv_Cent		:= 0
Local nMoedCent		:= 0
Local lAjusta       := .T.
Local nDifer1		:= 0
Local nIndeniz		:= 0
Local cFunName		:= FunName()
Local nDec			:= GetSX3Cache("F2_FRETE","X3_DECIMAL")
Local nZ			:= 0
Private cRem		:= "SD2"
Private aImpTotal	:= {}
Private aRegFIE 	:= {}
Private lRegFIE 	:= {}
Private nItReg	:= 0

Default nIni		:= 1
Default nFim		:= Len(aNFs)

nTaxamoeda 	:= IIf( Type("nTaxamoeda")=="U",0,nTaxamoeda)

If oProcess <> NIL
	oProcess:SetRegua1(Len(aNFs))
Endif
aTotaFat := {}

dIni := (dDatabase + 1) - 365

For nNFs :=	nIni To nFim
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa variaveis de Acumulo de Impostos Vari veis       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTotInden 	:= 0.00
	nFrete      := 0.00
	nSeguro     := 0.00
	nDespesa    := 0.00
	nDesNTrb	:= 0.00
	nTara		:= 0.00
	nVlrTot    	:= 0.00
	nVlrDsc    	:= 0.00
	nVlrTotal  	:= 0.00
	nVlrDscTot 	:= 0.00
	nFreteRat	:=	0
	nSegRat		:=	0
	nDespRat	:=	0
	nNtrbRat 	:= 0
	nTaraRat 	:= 0
	aFrete		:= {}
	aUltItem    := {}
	aImpVarSF2  := {}
	aImps       := {}
	aRatDesp	:= {}
	aImpVarSD2  := Iif(cPaisLoc<>"PTG",{0,0,0,0,0,{},"",""},{0,0,0,0,0,{},"",0,0,0,0})
	nPrcVen     := 0.00
	nPrcBrut    := 0.00
	aImps		:= {}
	aPedDel		:= {}
	aNFS[nNFs,nLenNFS] := {0,0,0,0}
	nVlrMerc	:= 0
	nTotDesp    := 0
	nPrcSC9		:= 0

	If oProcess <> NIL
		oProcess:IncRegua1(STR0050 + " " + AllTrim(Str(nNFs)))
	Endif

	If oProcess <> NIL
		oProcess:SetRegua2(Len(aNFs[nNFS][2]))
	Endif

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Tratamento de IB para monotributistas - Argentina           ³
	³ AGIP 177/2009                                               ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	_nTotOper_ := 0
	_aValItem_ := {}
	If cPaisLoc == "ARG"
		If FindFunction("RetTotOper")
			If !aNFs[nNFs][12]			//nao e para beneficiamento
				cCliente := Substr(aNFs[nNFs][1],1,nCli)
				cLoja    := Substr(aNFs[nNFs][1],nCli+1,nLoja)
				If SA1->(DbSeek(xFilial("SA1") + cCliente + cLoja))
					If SA1->A1_TIPO == "M"
						nPos := Ascan(_aTotOper_,{|cliente| cliente[1] == SA1->A1_COD .And. cliente[2] == SA1->A1_LOJA})
						If nPos == 0
							Aadd(_aTotOper_,{cCliente,cLoja,0,{}})	//cliente,loja,total de operacoes,{item,valmerc}
							_aTotOper_[Len(_aTotOper_),3] := RetTotOper(SA1->A1_COD,SA1->A1_LOJA,"C",dIni,dDatabase,1)
							_nTotOper_ := _aTotOper_[Len(_aTotOper_),3]
						Else
							_nTotOper_ := _aTotOper_[nPos,3]
							For nX := 1 To Len(_aTotOper_[nPos,4])
								If _aTotOper_[nPos,4,nX,1] < nNFs
									_nTotOper_ += _aTotOper_[nPos,4,nX,2]
								Endif
							Next
						Endif
					Endif
				Endif
			Endif
		Endif
	Endif

	For nI	:=	1 To Len(aNFs[nNFS][2])  //qtde de itens selecionados

		If oProcess <> NIL
			oProcess:IncRegua2(STR0090 + " " + AllTrim(Str(nI)))
		Endif

		(cAlias)->(MsGoTo(aNFs[nNFs][2][nI]))

		lTpPedBenf := aNFs[nNFs][12]

		cSerie	:=	Alltrim(aNFs[nNFs][3])+Space(3-Len(Alltrim(aNfs[nNfs][3])))

		If lPedidos .or. ( !Empty((cRem)->D2_PEDIDO) .and. ( lConvRem .or. Empty((cRem)->D2_TOTAL)))
			SC5->( dbSetOrder(1) )
			SC6->( dbSetOrder(1) )
			SC9->( dbSetOrder(1) )
			SF4->( dbSetOrder(1) )
			If !lPedidos
				SC5->( MsSeek(xFilial("SC5")+(cRem)->D2_PEDIDO) )
				SC9->( MsSeek(xFilial("SC9")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_SEQUEN+(cRem)->D2_COD) )
				SC6->( MsSeek(xFilial("SC6")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_COD) )
			Else
				SC5->( MsSeek(xFilial("SC5")+ SC9->C9_PEDIDO) )
				SC6->( MsSeek(xFilial("SC6")+ SC9->C9_PEDIDO+SC9->C9_ITEM+SC9->C9_PRODUTO) )
			Endif
			SF4->( MsSeek(xFilial("SF4")+ SC6->C6_TES) )
			If Ascan(aPedDel,SC5->C5_NUM) == 0
				Aadd(aPedDel,SC5->C5_NUM)
			Endif
			//Alexandra Menyashina (14/05/18): Date for moeda is taken in Sales Invoice (Only for Russia)
			If cPaisloc == "RUS"
				nTaxamoeda	:=	RecMoeda(dDTSaida,SC5->C5_MOEDA)
			Else
				A468TxMoed(@nTaxamoeda,SC5->C5_MOEDA,SC5->C5_TXMOEDA,lPedidos,cAltTx,nMoedSel,nTipoGer,aTxMoedas)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³  Calcula acrescimo financeiro e reajuste  		   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nPrcBrut := If(SC6->C6_PRUNIT<>0,SC6->C6_PRUNIT,iif( (cPaisLoc == "PAR"),  (SC6->C6_VALOR+SC6->C6_VALDESC)/SC6->C6_QTDVEN , SC9->C9_PRCVEN) )
			If !Empty(SC5->C5_REAJUST) .And. lReajuste
				nPrcVen := Formula(SC5->C5_REAJUST)
				IF SC6->C6_PRUNIT<>0 .and. !EMPTY(SC9->C9_REMITO)
					nFatorRj  := (nPrcVen/SC6->C6_PRUNIT)
				ELSE
					nFatorRj  := (nPrcVen/SC9->C9_PRCVEN)
				ENDIF
				nPrcBrut := (nPrcBrut * nFatorRj)
			Else
				nPrcVen	:= SC9->C9_PRCVEN
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Calculo do Acrescimo Financeiro                                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nAcresFin := 0
			If ( SC5->C5_ACRSFIN <> 0 )
				If lAcresDup
					nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
				Else
					If SF4->F4_DUPLIC=="S"
						nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
					Endif
				Endif
			EndIf

			If lM468ACRE
				nAcresFin := Execblock("M468ACRE",.f.,.f.,{nPrcVen,nPrcBruto})
			Endif

			If nAcresFin <> 0
				nPrcVen := nPrcVen + nAcresFin
			EndIf

			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Tratamento de IB para monotributistas - Argentina           ³
			³ AGIP 177                                                    ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			Aadd(_aValItem_,{nI,.F.,xmoeda(nPrcVen,SC5->C5_MOEDA ,1,dDataBase,aTamSx3Prc[2]+1)})

			If nTipoGer==2
				If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
					nPrcVen:= xmoeda(nPrcVen,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
					nPrcVen	:= 	Round(nPrcVen,aTamSx3Prc[2])
					nPrcBrut:= xmoeda(nPrcBrut,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
					nPrcBrut:= 	Round(nPrcBrut,aTamSx3Prc[2])
				Else
					nPrcVen:= xmoeda(nPrcVen,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
					nPrcBrut:= xmoeda(nPrcBrut,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
				EndIf
			ElseIf !lPedidos
				nMoedaRem:=Posicione("SF2",1,xFilial('SF2')+(cRem)->D2_DOC+(cRem)->D2_SERIE+(cRem)->D2_CLIENTE+(cRem)->D2_LOJA,"F2_moeda")
				If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
					nPrcVen:= xmoeda(nPrcVen,SC5->C5_MOEDA ,nMoedaRem,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
					nPrcVen	:= 	Round(nPrcVen,aTamSx3Prc[2])
					nPrcBrut:= xmoeda(nPrcBrut,SC5->C5_MOEDA ,nMoedaRem,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
					nPrcBrut:= 	Round(nPrcBrut,aTamSx3Prc[2])
				Else
					nPrcVen:= xmoeda(nPrcVen,SC5->C5_MOEDA ,nMoedaRem,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
					nPrcBrut:= xmoeda(nPrcBrut,SC5->C5_MOEDA ,nMoedaRem,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
				EndIf
			EndIf
			SC6->( MsSeek(xFilial("SC6")+ SC9->C9_PEDIDO+SC9->C9_ITEM+SC9->C9_PRODUTO) )
			IF cAltTx == "2" .and. cPaisloc == "ARG" .and. Len(aParams)>=22 .and.  aParams[22] == 2 .and. (nTipoGer==nMoedSel)
				nVlrTot  := SC9->C9_QTDLIB * IIf(AllTrim(SC6->C6_TES) $ SuperGetMV("MV_BONUSTS"),0,nPrcVen)
			ElseIf cPaisLoc == "BOL" .And.  lPedidos

					nVlrTot  := SC9->C9_QTDLIB *nPrcVen

			Else
				nVlrTot  := IIf(!(cPaisLoc $"BRA|ARG|MEX"), (SC6->C6_VALOR * SC9->C9_QTDLIB)/SC6->C6_QTDVEN, SC9->C9_QTDLIB * IIf(AllTrim(SC6->C6_TES) $ SuperGetMV("MV_BONUSTS"),0,nPrcVen))
			EndIF
			If (cTpdpind == "2" .And. SF4->F4_DUPLIC=="S") .Or. (cTpdpind <> "2")
				nPos := AScan(aTotaFat,{|x| x[1] == SC9->C9_PEDIDO })
				If nPos > 0
					aTotaFat[nPos,2] += SC9->C9_QTDLIB * nPrcVen
				Else
					AADD(aTotaFat,{SC9->C9_PEDIDO,SC9->C9_QTDLIB * nPrcVen})
				EndIf
			EndIf
			cTes     := SC6->C6_TES
			_cCfo    := SC6->C6_CF
		Else
			nVlrTot  := (cRem)->D2_QTDAFAT * (Iif((AllTrim((cRem)->D2_TES) $ SuperGetMV("MV_BONUSTS")),0,(cRem)->D2_TOTAL/(cRem)->D2_QUANT ))
			nMoedaRem:=Posicione("SF2",1,xFilial('SF2')+(cRem)->D2_DOC+(cRem)->D2_SERIE+(cRem)->D2_CLIENTE+(cRem)->D2_LOJA,"F2_moeda")

			A468TxMoed(@nTaxamoeda,nMoedaRem,SF2->F2_TXMOEDA,lPedidos,cAltTx,nMoedSel,nTipoGer,aTxMoedas)
			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Tratamento de IB para monotributistas - Argentina           ³
			³ AGIP 177                                                    ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			Aadd(_aValItem_,{nI,.F.,xmoeda(((cRem)->D2_TOTAL/(cRem)->D2_QUANT),nMoedaRem,1,dDataBase,aTamSx3Prc[2]+1)})

			If !Empty((cRem)->D2_PEDIDO)
				If Ascan(aPedDel,(cRem)->D2_PEDIDO) == 0
					Aadd(aPedDel,(cRem)->D2_PEDIDO)
				Endif
			Endif
			If nTipoGer==2
				If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
					IF cAltTx == "2" .and. cPaisloc == "ARG" .and.  Len(aParams)>=22 .and.  aParams[22] == 2 .and. (nTipoGer==nMoedSel)
						nVlrTot	:= xmoeda(nVlrTot, nMoedaRem ,nMoedSel,dDataBase,aTamSx3Tot[2]+1,,nTaxaMoeda)
					Else
						nVlrTot	:= xmoeda(nVlrTot, nMoedaRem ,nMoedSel,dDataBase,aTamSx3Tot[2]+1,nTaxaMoeda)
					EndIf
					nVlrTot	:= 	Round(nVlrTot,aTamSx3Tot[2])
				Else
					nVlrTot:= xmoeda(nVlrTot, nMoedaRem ,nMoedSel,dDataBase,aTamSx3Tot[2],nTaxaMoeda)
				EndIf
			EndIf
			If (cRem)->D2_TIPOREM == _RMCONS .and. !Empty((cRem)->D2_PEDIDO)
				cTes     := Posicione("SC6",1,xFilial("SC6")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_COD,"C6_TES")
				_cCfo    := Posicione("SF4",2,xFilial("SF4")+(cRem)->D2_TES,"F4_CF")
			Else
				cTes     := (cRem)->D2_TES
				_cCfo    := (cRem)->D2_CF
			Endif
		EndIf
	Next nI

	//Fazer os rateios
	aImpTotal := {}
	nMaxItem := Len(aNFs[nNFS][2])
	For nI	:=	1 To nMaxItem
		(cAlias)->(MsGoTo(aNFs[nNFs][2][nI]))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posicionar os arquivos para que a a468nGravD2()   ³
		//³ todos os arquivos posicionados...                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lTpPedBenf
			SA2->( dbSetOrder(1) )
		Else
			SA1->( dbSetOrder(1) )
		Endif
		SC6->( dbSetOrder(1) )
		SC9->( dbSetOrder(1) )
		SC5->( dbSetOrder(1) )
		SF4->( dbSetOrder(1) )
		lPedOk	:=	.F.
		nVlrDsc:=0
		If lPedidos
			SC5->( MsSeek(xFilial("SC5")+ SC9->C9_PEDIDO) )
			If lTpPedBenf
				SA2->( MsSeek(xFilial("SA2")+ SC9->C9_CLIENTE+SC9->C9_LOJA) )
			Else
				SA1->( MsSeek(xFilial("SA1")+ SC9->C9_CLIENTE+SC9->C9_LOJA) )
			Endif
			SC6->( MsSeek(xFilial("SC6")+ SC9->C9_PEDIDO+SC9->C9_ITEM+SC9->C9_PRODUTO) )
			SF4->( MsSeek(xFilial("SF4")+ SC6->C6_TES) )
			//Alexandra Menyashina (14/05/18): Date for moeda is taken in Sales Invoice (Only for Russia)
			If cPaisloc == "RUS"
				nTaxamoeda	:=	RecMoeda(dDTSaida,SC5->C5_MOEDA)
			Else
				A468TxMoed(@nTaxamoeda,SC5->C5_MOEDA,SC5->C5_TXMOEDA,lPedidos,cAltTx,nMoedSel,nTipoGer,aTxMoedas)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³  Calcula acrescimo financeiro e reajuste // Pedido 	 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cPaisLoc $ "MEX|PER"
				nPrcBrut := SC9->C9_PRCVEN + (SC6->C6_VALDESC / SC9->C9_QTDLIB)
			Else
				nPrcBrut := If(SC6->C6_PRUNIT<>0,SC6->C6_PRUNIT,iif( (cPaisLoc $ "PAR|BOL"),  (SC6->C6_VALOR+SC6->C6_VALDESC)/SC6->C6_QTDVEN , SC9->C9_PRCVEN) )
			EndIf

			If !Empty(SC5->C5_REAJUST) .And. lReajuste
				nPrcVen := Formula(SC5->C5_REAJUST)
				IF SC6->C6_PRUNIT<>0 .and. !EMPTY(SC9->C9_REMITO)
					nFatorRj  := (nPrcVen/SC6->C6_PRUNIT)
				ELSE
					nFatorRj  := (nPrcVen/SC9->C9_PRCVEN)
				ENDIF
				nPrcBrut := (nPrcBrut * nFatorRj)
			Else
				nPrcVen	:= SC9->C9_PRCVEN
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Calculo do Acrescimo Financeiro                                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( SC5->C5_ACRSFIN <> 0 )
				If lAcresDup
					nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
				Else
					If SF4->F4_DUPLIC=="S"
						nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
					Endif
				Endif
			EndIf

			If lM468ACRE
				nAcresFin := Execblock("M468ACRE",.f.,.f.,{nPrcVen,nPrcBruto})
			Endif

			If nAcresFin <> 0
				nPrcVen := nPrcVen + nAcresFin
			EndIf

			//Desconto referente a indenizacao
			If SC5->C5_PDESCAB <> 0
				nPrcVen := nPrcVen * (1 - (SC5->C5_PDESCAB/100))
			Endif
			// Calculo referente ao rateio do campo C5_DESCONT
			nC5Descont := 0
			If SC5->C5_DESCONT <> 0
				If (cTpdpind == "2" .And. SF4->F4_DUPLIC=="S") .Or. (cTpdpind <> "2")
					nPos := AScan(aTotaFat,{|x| x[1] == SC5->C5_NUM })
					If nPos > 0
						If nTipoGer==2
							If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
								nPrcSC9:= xmoeda(SC9->C9_PRCVEN,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
								nPrcSC9:= Round(nPrcSC9    ,aTamSx3Prc[2])
							Else
								nPrcSC9:= xmoeda(SC9->C9_PRCVEN,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
							EndIf
							nC5Descont:= a410Arred((SC9->C9_QTDLIB * nPrcSC9 * SC5->C5_DESCONT) / iif(cPaisLoc<>"PAR",aTotaFat[nPos,2],M468ToPed(SC5->C5_NUM)),"D2_DESCON")
						Else
							nC5Descont:= a410Arred((SC9->C9_QTDLIB * SC9->C9_PRCVEN * SC5->C5_DESCONT) / iif(cPaisLoc<>"PAR",aTotaFat[nPos,2],M468ToPed(SC5->C5_NUM)),"D2_DESCON")
						EndIf
							nC5Descont:= nC5Descont / SC9->C9_QTDLIB
					EndIf
					nPrcVen := nPrcVen - nC5Descont
				EndIf
			EndIf

			If nTipoGer==2
				If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
					IF cAltTx == "2" .and. cPaisloc == "ARG" .and. Len(aParams)>=22 .and.  aParams[22] == 2  .and. (nTipoGer==nMoedSel)
						nPrcVen:= xmoeda(nPrcVen,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,,nTaxaMoeda )
						nPrcVen:= Round(nPrcVen    ,aTamSx3Prc[2])
						nPrcBrut:= xmoeda(nPrcBrut,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,,nTaxaMoeda )
						nPrcBrut:= Round(nPrcBrut,aTamSx3Prc[2])
					Else
						nPrcVen:= xmoeda(nPrcVen,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda )
						nPrcVen:= Round(nPrcVen    ,aTamSx3Prc[2])
						nPrcBrut:= xmoeda(nPrcBrut,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda )
						nPrcBrut:= Round(nPrcBrut,aTamSx3Prc[2])
						If cPaisLoc == "MEX"
							nVlrDsc := xMoeda(SC6->C6_VALDESC, SC5->C5_MOEDA, nMoedSel, dDataBase, aTamSx3Prc[2]+1, nTaxaMoeda)
							nVlrDsc := Round(nVlrDsc, aTamSx3Prc[2])
						EndIf
					EndIF
				Else
					nPrcVen:= xmoeda(nPrcVen,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
					nPrcBrut:= xmoeda(nPrcBrut,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
				EndIf
			EndIf

			nMoedaSF2:= SC5->C5_MOEDA
			nDecs := MsDecimais(If(nTipoGer==1,nMoedaSF2,nMoedSel))
			IF cAltTx == "2" .and. cPaisloc == "ARG" .and. Len(aParams)>=22 .and.  aParams[22] == 2 .and. (nTipoGer==nMoedSel)
				nVlrTot := SC9->C9_QTDLIB * IIf(AllTrim(SC6->C6_TES) $ SuperGetMV("MV_BONUSTS"),0,nPrcVen)
			Else
				nVlrTot := IIf(!(cPaisLoc $"BRA|ARG|PAR|MEX"), (SC6->C6_VALOR * SC9->C9_QTDLIB)/SC6->C6_QTDVEN, SC9->C9_QTDLIB * IIf(AllTrim(SC6->C6_TES) $ SuperGetMV("MV_BONUSTS"),0,nPrcVen))
			EndIF
			If cPaisLoc $ "BOL|CHI|COL" .And.  lPedidos
				If Len(aParams)>=22 .and.  aParams[22] == 2
					nVlrTot  := xmoeda(nVlrTot,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
				Endif
			Endif
			nVlrTot := A410Arred(nVlrTot,"D2_TOTAL")
			If cPaisLoc $ "PER"
				nVlrDsc := A410Arred((SC6->C6_VALDESC * SC9->C9_QTDLIB) / SC6->C6_QTDVEN ,"D2_DESCON")
			ElseIf cPaisLoc == "CHI"
				nVlrDsc := xmoeda(SC6->C6_VALDESC,SC5->C5_MOEDA,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
			ElseIf cPaisLoc $ "MEX|COL"
				nVlrDsc := a410Arred(nVlrDsc, 'D2_DESCON')
			ElseIf (cPaisLoc $ "ARG" .And. !(AllTrim(SC6->C6_TES) $ SuperGetMV("MV_BONUSTS"))) .Or. !(cPaisLoc $ "ARG|MEX|PER|COL")
				If cPaisLoc == "ARG" .and. GetNewPar('MV_DESCSAI','1') =='2'
					nVlrDsc := xmoeda(SC6->C6_VALDESC,SC5->C5_MOEDA,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
				ElseIf cPaisLoc == "PAR" .And. SC5->C5_PDESCAB <> 0
					If nAcresFin > 0
						nVlrDsc := (nPrcBrut * SC9->C9_QTDLIB) - ((nPrcVen - nAcresFin) * SC9->C9_QTDLIB)
					Else
						nVlrDsc := (nPrcBrut * SC9->C9_QTDLIB) - (nPrcVen * SC9->C9_QTDLIB)
					EndIf
				Else
					nVlrDsc := If((A410Arred(nPrcBrut*SC9->C9_QTDLIB,"D2_DESCON")-nVlrTot)>0,A410Arred(nPrcBrut*SC9->C9_QTDLIB,"D2_DESCON")-nVlrTot,0)
				EndIf
			EndIf

			nVlrTot := Round(nVlrTot,nDecs)
			cTes := SC6->C6_TES
			_cCfo:= SC6->C6_CF
			cProvEnt	:=	IIf(SC6->(FieldPos('C6_PROVENT'))>0,SC6->C6_PROVENT,'')
		Else
			nMoedaSF2:=Posicione("SF2",1,xFilial('SF2')+(cRem)->D2_DOC+(cRem)->D2_SERIE+(cRem)->D2_CLIENTE+(cRem)->D2_LOJA,"F2_MOEDA")
			cProvEnt	:=	IIf(SD2->(FieldPos('D2_PROVENT'))>0,(cRem)->D2_PROVENT,'')

			If !Empty((cRem)->D2_PEDIDO)
				SC9->( MsSeek(xFilial("SC9")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_SEQUEN+(cRem)->D2_COD) )
			EndIf

			A468TxMoed(@nTaxamoeda,nMoedaSF2,SF2->F2_TXMOEDA,lPedidos,cAltTx,nMoedSel,nTipoGer,aTxMoedas)

			If !Empty((cRem)->D2_PEDIDO) .and. ( lConvRem .or. Empty((cRem)->D2_TOTAL))
				SC5->( MsSeek(xFilial("SC5")+(cRem)->D2_PEDIDO) )
				SC9->( MsSeek(xFilial("SC9")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_SEQUEN+(cRem)->D2_COD) )
				SC6->( MsSeek(xFilial("SC6")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_COD) )
				SF4->( MsSeek(xFilial("SF4")+ SC6->C6_TES) )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³  Calcula acrescimo financeiro e reajuste // Remito	 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nPrcBrut := If(SC6->C6_PRUNIT<>0,SC6->C6_PRUNIT,iif( (cPaisLoc == "PAR"),  (SC6->C6_VALOR+SC6->C6_VALDESC)/SC6->C6_QTDVEN , SC9->C9_PRCVEN) )
				If !Empty(SC5->C5_REAJUST) .And. lReajuste
					nPrcVen := Formula(SC5->C5_REAJUST)
					IF SC6->C6_PRUNIT<>0 .and. !EMPTY(SC9->C9_REMITO)
						nFatorRj  := (nPrcVen/SC6->C6_PRUNIT)
					ELSE
						nFatorRj  := (nPrcVen/SC9->C9_PRCVEN)
					ENDIF
					nPrcBrut := (nPrcBrut * nFatorRj)
				Else
					nPrcVen	:= SC9->C9_PRCVEN
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Calculo do Acrescimo Financeiro                                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( SC5->C5_ACRSFIN <> 0 )
					If lAcresDup
						nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
					Else
						If SF4->F4_DUPLIC=="S"
							nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
						Endif
					Endif
				EndIf

				If lM468ACRE
					nAcresFin := Execblock("M468ACRE",.f.,.f.,{nPrcVen,nPrcBruto})
				Endif

				If nAcresFin <> 0
					nPrcVen := nPrcVen + nAcresFin
				EndIf

				//Desconto referente a indenizacao
				If SC5->C5_PDESCAB <> 0
					If cPaisLoc == "PAR"
						nIndeniz  := nPrcVen * (SC5->C5_PDESCAB/100)
						nPrcVen   := nPrcVen - nIndeniz
					Else
						nPrcVen := nPrcVen * (1 - (SC5->C5_PDESCAB/100))
					EndIf
				Endif
				// Calculo referente ao rateio do campo C5_DESCONT
				nC5Descont := 0
				If SC5->C5_DESCONT <> 0
					If (cTpdpind == "2" .And. SF4->F4_DUPLIC=="S") .Or. (cTpdpind <> "2")
						nPos := AScan(aTotaFat,{|x| x[1] == SC5->C5_NUM })
						If nPos > 0
							If nTipoGer==2
								If SuperGetMV("MV_ARREFAT")== "S"     // Arredonda Valores
									nPrcSC9:= xmoeda(SC9->C9_PRCVEN,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
									nPrcSC9:= Round(nPrcSC9    ,aTamSx3Prc[2])
								Else
									nPrcSC9:= xmoeda(SC9->C9_PRCVEN,SC5->C5_MOEDA ,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
								EndIf
								nC5Descont:= a410Arred((SC9->C9_QTDLIB * nPrcSC9 * SC5->C5_DESCONT) / aTotaFat[nPos,2],"D2_DESCON")
							Else
								nC5Descont:= a410Arred((SC9->C9_QTDLIB * SC9->C9_PRCVEN * SC5->C5_DESCONT) / aTotaFat[nPos,2],"D2_DESCON")
							EndIf
							nC5Descont:= nC5Descont / SC9->C9_QTDLIB
						EndIf
						nPrcVen := nPrcVen - nC5Descont
					EndIf
				EndIf
				If SC5->C5_MOEDA <> nMoedaSF2
					If SuperGetMV("MV_ARREFAT")== "S"
				    	nPrcVen :=xMoeda(nPrcVen,SC5->C5_MOEDA,nMoedaSF2,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
				    	nPrcVen	:= 	Round(nPrcVen    ,aTamSx3Prc[2])
				    	nPrcBrut := xMoeda(nPrcBrut,SC5->C5_MOEDA,nMoedaSF2,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
				    	nPrcBrut :=	Round(nPrcBrut,aTamSx3Prc[2])
				    Else
						nPrcVen :=xMoeda(nPrcVen,SC5->C5_MOEDA,nMoedaSF2,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
						nPrcBrut:=xMoeda(nPrcBrut,SC5->C5_MOEDA,nMoedaSF2,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
					EndIf
				EndIf
				If nTipoGer==2
					If SuperGetMV("MV_ARREFAT")== "S"
						nPrcVen:= xmoeda(nPrcVen,nMoedaSF2 ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
				  	  	nPrcVen	:= 	Round(nPrcVen    ,aTamSx3Prc[2])
						nPrcBrut:= xmoeda(nPrcBrut,nMoedaSF2 ,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
				  	  	nPrcBrut:= Round(nPrcBrut,aTamSx3Prc[2])
				    Else
						nPrcVen:= xmoeda(nPrcVen,nMoedaSF2 ,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
						nPrcBrut:= xmoeda(nPrcBrut,nMoedaSF2 ,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
					EndIf
				EndIf
				nVlrTot  := (Iif(AllTrim((cRem)->D2_TES) $ SuperGetMV("MV_BONUSTS"),0,nPrcVen))*(cRem)->D2_QTDAFAT
				nVlrTot := A410Arred(nVlrTot,"D2_TOTAL")
				nVlrDsc := If((A410Arred(nPrcBrut*SC9->C9_QTDLIB,"D2_DESCON")-nVlrTot)>0,A410Arred(nPrcBrut*SC9->C9_QTDLIB,"D2_DESCON")-nVlrTot,0)
				If nTipoGer==2
					If SuperGetMV("MV_ARREFAT")== "S"
						nVlrDsc	:= 	Round(nVlrDsc    ,MsDecimais(nMoedSel))
					EndIf
				EndIf

				lPedOk	:=	.T.
			Else
				If !Empty((cRem)->D2_PRCVEN)
					nPrcVen	:=  (cRem)->D2_PRCVEN
				nPrcBrut:=  If((cRem)->D2_PRUNIT<>0,(cRem)->D2_PRUNIT,iif( (cPaisLoc == "PAR"),  ((cRem)->D2_TOTAL+(cRem)->D2_DESCON)/(cRem)->D2_QUANT , (cRem)->D2_PRCVEN))
				ElseIf !Empty(SA1->A1_TABELA)  //Busca o preco nos arqs. DA0/DA1
					nPrcVen	:= MaTabPrVen(SA1->A1_TABELA,(cRem)->D2_COD,(cRem)->D2_QUANT,(cRem)->D2_CLIENTE,(cRem)->D2_LOJA,;
					Posicione("SF2",1,xFilial('SF2')+(cRem)->D2_DOC+(cRem)->D2_SERIE+(cRem)->D2_CLIENTE+(cRem)->D2_LOJA+(cRem)->D2_FORMUL,'F2_MOEDA'))
					nPrcBrut:= nPrcVen
				Else
					nPrcVen	:= Posicione("SB1",1,xFilial('SB1')+(cRem)->D2_COD,'B1_PRV1')
					nPrcBrut:= nPrcVen
				Endif
				cTes     := Posicione("SC6",1,xFilial("SC6")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_COD,"C6_TES")
				_cCfo    := Posicione("SF4",2,xFilial("SF4")+(cRem)->D2_TES,"F4_CF")
				If nTipoGer==2
					If SuperGetMV("MV_ARREFAT")== "S"
						IF cAltTx == "2" .and. cPaisloc == "ARG" .and. Len(aParams)>=22 .and.  aParams[22] == 2 .and. (nTipoGer==nMoedSel)
							nPrcBrut :=xmoeda(nPrcBrut,nMoedaSF2,nMoedSel,dDataBase,aTamSx3Prc[2]+1,1,nTaxaMoeda)
							nPrcVen :=xmoeda(nPrcVen,nMoedaSF2,nMoedSel,dDataBase,aTamSx3Prc[2]+1,1,nTaxaMoeda)
							nPrcBrut:= 	Round(nPrcBrut ,aTamSx3Prc[2])
							nPrcVen := 	Round(nPrcVen  ,aTamSx3Prc[2])
						Else
							nPrcBrut :=xmoeda(nPrcBrut,nMoedaSF2,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
							nPrcVen :=xmoeda(nPrcVen,nMoedaSF2,nMoedSel,dDataBase,aTamSx3Prc[2]+1,nTaxaMoeda)
							nPrcBrut:= 	Round(nPrcBrut ,aTamSx3Prc[2])
							nPrcVen := 	Round(nPrcVen  ,aTamSx3Prc[2])
						EndIf
					Else
						nPrcBrut :=xmoeda(nPrcBrut,nMoedaSF2,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
						nPrcVen :=xmoeda(nPrcVen,nMoedaSF2,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
					EndIf
				EndIf
				If cPaisLoc=="CHI" .And. lPrcDec .And. nTipoGer==2 .And. nMoedSel == 1
					nPrcBrut := A410Arred( nPrcBrut,"D2_TOTAL",nMoedSel)
					nPrcVen  := A410Arred( nPrcVen ,"D2_TOTAL",nMoedSel)
				EndIf

				nVlrTot := (Iif(AllTrim((cRem)->D2_TES) $ SuperGetMV("MV_BONUSTS"),0,nPrcVen))*(cRem)->D2_QTDAFAT
				nVlrTot := A410Arred(nVlrTot,"D2_TOTAL")
				nVlrDsc := If((A410Arred(nPrcBrut*(cRem)->D2_QTDAFAT,"D2_DESCON")-nVlrTot)>0,A410Arred(nPrcBrut*(cRem)->D2_QTDAFAT,"D2_DESCON")-nVlrTot,0)
				If ( Alltrim((cRem)->D2_ESPECIE) == "RFN" .And. GetNewPar('MV_DESCSAI','1') =='2'  ) .or.  (Alltrim((cRem)->D2_ESPECIE) == "RFN" .and. cPaisLoc=="ARG")
					If cPaisLoc=="ARG"
						nVlrDsc := xmoeda((cRem)->D2_DESCON,nMoedaSF2,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
				    Else
						nVlrDsc := (cRem)->D2_DESCON
				    EndIf
				ElseIf cPaisLoc == 'MEX'
					nVlrDsc := (cRem)->D2_DESCON
				Else
					nVlrDsc := If((A410Arred(nPrcBrut*(cRem)->D2_QTDAFAT,"D2_DESCON")-nVlrTot)>0,A410Arred(nPrcBrut*(cRem)->D2_QTDAFAT,"D2_DESCON")-nVlrTot,0)
				Endif
				If nTipoGer==2
					If cPaisLoc == "MEX"
						nVlrDsc := xMoeda(nVlrDsc,nMoedaSF2,nMoedSel,dDataBase,aTamSx3Prc[2],nTaxaMoeda)
					EndIf
					If SuperGetMV("MV_ARREFAT")== "S"
						nVlrDsc	:= 	Round(nVlrDsc    ,MsDecimais(nMoedSel))
					EndIf
				EndIf
		 	Endif
			If (cRem)->D2_TIPOREM == _RMCONS .and. !Empty((cRem)->D2_PEDIDO)
				cTes     := Posicione("SC6",1,xFilial("SC6")+(cRem)->D2_PEDIDO+(cRem)->D2_ITEMPV+(cRem)->D2_COD,"C6_TES")
				_cCfo    := Posicione("SF4",2,xFilial("SF4")+(cRem)->D2_TES,"F4_CF")
			Else
				cTes     := (cRem)->D2_TES
				_cCfo    := (cRem)->D2_CF
			Endif
		    If nPrcVen <= 0
				nVlrTot  := (Iif(AllTrim((cRem)->D2_TES) $ SuperGetMV("MV_BONUSTS"),0,(cRem)->D2_TOTAL/(cRem)->D2_QUANT))*(cRem)->D2_QTDAFAT

				If nTipoGer==2
					nVlrTot	:= xmoeda(nVlrTot,nMoedaSF2 ,nMoedSel,dDataBase,aTamSx3Tot[2]+1,nTaxaMoeda)
				EndIf
			Else
				nVlrTot  := (Iif(AllTrim((cRem)->D2_TES) $ SuperGetMV("MV_BONUSTS"),0,nPrcVen))*(cRem)->D2_QTDAFAT
			EndIf
			nVlrTot := A410Arred(nVlrTot,"D2_TOTAL")
			If lTpPedBenf
				SA2->( MsSeek(xFilial("SA2")+(cRem)->D2_CLIENTE+(cRem)->D2_LOJA) )
			Else
				SA1->( MsSeek(xFilial("SA1")+(cRem)->D2_CLIENTE+(cRem)->D2_LOJA) )
			Endif
		Endif
		//
		nDecs := MsDecimais(If(nTipoGer==1,nMoedaSF2,nMoedSel))
		//
		If (lPedidos.Or.lPedOk)
			If SC5->C5_FRETE+SC5->C5_DESPESA+SC5->C5_SEGURO+(Iif(cPaisLoc=="PTG",SC5->C5_DESNTRB+SC5->C5_TARA,0)) > 0
				// Se o parametro "MV_FRETMOE" estiver com "S" o valores ja vem convertidos para a moeda do pedido (1 -> C5_MOEDA)
				// Caso contrario ele traz o valor que esta gravado no SC5
				// por Item
				aTotais	:= a468nFrete(SC5->C5_NUM,If(lPedidos,SC9->C9_QTDLIB,(cRem)->D2_QTDAFAT))
				If cPaisLoc == "MEX" .And. cFunName == "MATA468N"
					For nZ := 1 To Len(aTotais)
						aTotais[nZ] := Round(aTotais[nZ], nDec)
					Next nZ
				EndIf

				AAdd(aFrete,aClone(aTotais))
				If nTipoGer==1
					nFrete		+=	aTotais[1]
					nSeguro		+=	aTotais[2]
					nDespesa	+=	aTotais[3]
					nFreteRat	:=	aTotais[1]
					nSegRat		:=	aTotais[2]
					nDespRat	:=	aTotais[3]
					If cPaisLoc == "PTG"
						nDesNTrb += aTotais[4]
						nTara    += aTotais[5]
						nNtrbRat := aTotais[4]
						nTaraRat := aTotais[5]
					Endif
				Else
					nFrete		+=	xMoeda(aTotais[1],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nSeguro		+=	xMoeda(aTotais[2],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nDespesa	+=	xMoeda(aTotais[3],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nFreteRat	:=	xMoeda(aTotais[1],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nSegRat		:=	xMoeda(aTotais[2],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nDespRat	:=	xMoeda(aTotais[3],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					If cPaisLoc == "PTG"
						nDesNTrb += xMoeda(aTotais[4],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
						nTara    += xMoeda(aTotais[5],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
						nNtrbRat := xMoeda(aTotais[4],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
						nTaraRat := xMoeda(aTotais[5],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					Endif
				EndIf
			Endif
		Else
			If SF2->F2_FRETE+SF2->F2_DESPESA+SF2->F2_SEGURO+Iif(cPaisLoc=="PTG",SC5->C5_DESNTRB+SC5->C5_TARA,0) > 0
				aTotais	:= a468nFreRem((cRem)->D2_DOC,(cRem)->D2_SERIE,(cRem)->D2_QTDAFAT)
				AAdd(aFrete,aClone(aTotais))
				If nTipoGer==1
					nFrete		+=	aTotais[1]
					nSeguro		+=	aTotais[2]
					nDespesa	+=	aTotais[3]
					nFreteRat	:=	aTotais[1]
					nSegRat		:=	aTotais[2]
					nDespRat	:=	aTotais[3]
					If cPaisLoc == "PTG"
						nDesNTrb += aTotais[4]
						nTara    += aTotais[5]
						nNtrbRat := aTotais[4]
						nTaraRat := aTotais[5]
					Endif
				Else
					nFrete		+=	xMoeda(aTotais[1],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nSeguro		+=	xMoeda(aTotais[2],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nDespesa	+=	xMoeda(aTotais[3],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nFreteRat	:=	xMoeda(aTotais[1],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nSegRat		:=	xMoeda(aTotais[2],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					nDespRat	:=	xMoeda(aTotais[3],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					If cPaisLoc == "PTG"
						nDesNTrb += xMoeda(aTotais[4],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
						nTara    += xMoeda(aTotais[5],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
						nNtrbRat := xMoeda(aTotais[4],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
						nTaraRat := xMoeda(aTotais[5],nMoedaSF2 ,nMoedSel,dDataBase,8,nTaxaMoeda)
					Endif
				EndIf
			Endif
		Endif

		If cPaisLoc == "CHI" .And. lPrcDec
			nVlrTotal  += A410Arred(nVlrTot,"D2_TOTAL",If(nTipoGer==2,nMoedSel,nMoedaSF2))
		Else
			nVlrTotal  += nVlrTot
		EndIf

		IF cPaisLoc == "PAR"

			nMoedCent := SC5->C5_MOEDA
			If nMoedCent == 1
				nMv_Cent := GetNewPar("MV_CENT",0)
			Else
				nMv_Cent := GetNewPar("MV_CENT"+cValtoChar(nMoedCent),0)
			EndIF
		EndIf

		IF cPaisLoc == "PAR" .and. nVlrDsc == 0 .and. SC5->C5_PDESCAB > 0
			If nIndeniz > 0  .and. nAcresFin > 0
				 nVlrDscTot += Round(((nVlrTot + (nAcresFin * SC9->C9_QTDLIB)) * SC5->C5_PDESCAB)/100,nMv_Cent)
			Else
				nVlrDscTot += Round((nVlrTot * SC5->C5_PDESCAB)/100,nMv_Cent)
			EndIf
		Else
			nVlrDscTot += nVlrDsc
		EndIf

		//Calculo de impostos.
		aImpVarSD2[1] := IIf(lPedidos,SC9->C9_QTDLIB,(cRem)->D2_QTDAFAT)
		aImpVarSD2[2] := nPrcVen
		aImpVarSD2[3] := ( nVlrTot + nVlrDsc)
		aImpVarSD2[4] := nFreteRat
		aImpVarSD2[5] := (nDespRat + nSegRat)
		aImpVarSD2[6] := {}
		If cPaisLoc == "COL" //Tratamento de Terceiros - Denis
			If lTpPedBenf
				aImpVarSD2[7] := SA2->A2_CGC
			Else
				aImpVarSD2[7] := SA1->A1_CGC
			Endif
		Endif
		If cPaisLoc == "ARG" .Or. cPaisLoc == "BOL"
			aImpVarSD2[7] := cProvEnt
			aImpVarSD2[8] := _cCfo
        Endif
		If cPaisLoc == "PTG"
			aImpVarSD2[8] 	:= nDespRat
			aImpVarSD2[9] 	:= nSegRat
			aImpVarSD2[10] 	:= nNtrbRat
			aImpVarSD2[11] 	:= nTaraRat
		Endif
		l468NPed := (lPedidos.Or.lPedOk)
		SF4->(DbSetOrder(1))
		SF4->( MsSeek( xFilial("SF4")+cTes) )   //Posiociona no registro de TES correspondente ao item

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³       Tratamento especifico para localizado PERU                ³
		//³  Para o localizado Peru a função A460TESXIP é chamada passando  ³
		//³ como parâmetros o código do cliente assim como a loja no final, ³
		//³ lá é utilizado para verificar se o imposto é calculado para PIV ³
		//³ ou DIG.															³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	    //Caso seja não seja localizado Peru, executa padrão

		If cPaisLoc $ "PER"
			If SD2->(FieldPos("D2_VALADI")) > 0 .and. Len(aNFs[nNFs][13]) > 0 .and. nFacReg <> nNFs
				nFacReg := nNFs
				aRegFIE := {}
				lRegFIE := {}
				RegFR3(aNFs[nNFs])
			EndIf
			nItReg := nI
			A460TesxIp(aImpVarSD2,nVlrTot,nVlrTotal,IIf(lPedidos,SC9->C9_PRODUTO,(cRem)->D2_COD),nI,nVlrDsc,nVlrDscTot,aUltItem,nMaxItem,SC9->C9_CLIENTE,SC9->C9_LOJA)
		Else
			If cPaisLoc == "MEX" .and. SD2->(FieldPos("D2_VALADI")) > 0 .and. Len(aNFs[nNFs][13]) > 0 .and. nFacReg <> nNFs
				nFacReg := nNFs
				aRegFIE := {}
				lRegFIE := {}
				RegFR3(aNFs[nNFs])
			EndIf
			nItReg := nI
			If cPaisLoc == "ARG"
				A460TesxIp(aImpVarSD2,nVlrTot,nVlrTotal,IIf(lPedidos,SC9->C9_PRODUTO,(cRem)->D2_COD),nI,nVlrDsc,nVlrDscTot,aUltItem,nMaxItem,,,nDescItem)
			Else
				A460TesxIp(aImpVarSD2,nVlrTot,nVlrTotal,IIf(lPedidos,SC9->C9_PRODUTO,(cRem)->D2_COD),nI,nVlrDsc,nVlrDscTot,aUltItem,nMaxItem)
			EndIf
		EndIf
		If nI < nMaxItem		//Quando igual, a A460TesxIP faz a adicao para o calculo do impostos por total.
			Aadd(aImps, aClone(aImpVarSD2))
		Endif
		nTotDesp += (nFreteRat + nSegRat + nDespRat + Iif(cPaisLoc == "PTG",nNtrbRat+nTaraRat,0))

		If !(cPaisLoc $ "EUA|PAR|ARG|URU|CHI|COL|MEX" )
			nFrete  += nFreteRat
		EndIf
		nAuxFret += Round(nFreteRat,2)
		nSeg  += nSegRat
		nAuxSeg += Round(nSegRat,2)
		nDesp += nDespRat
		nAuxDesp += Round(nDespRat,2)

		Aadd(aRatDesp,{nFreteRat,nSegRat,nDespRat,nNtrbRat,nTaraRat})
	Next nI

	nDifDesp := nFrete - nAuxFret // Arredondamento Frete
	nCent := 1/(10 ** 2)
	nCont := 1
	IF nDifDesp > 0
		While nDifDesp > 0
			IF nCont > Len(aRatDesp)
				nCont := 1
			EndIF
			If nDifDesp < 0.01
				aRatDesp[nCont,1] += nDifDesp
				nDifDesp -= nDifDesp
			Else
				aRatDesp[nCont,1] += nCent
				nDifDesp -= nCent
			EndIF
			nCont ++
		Enddo
	ElseIF  nDifDesp < 0
		While nDifDesp < 0
			IF nCont > Len(aRatDesp)
				nCont := 1
			EndIF
			If nDifDesp > -0.01
				aRatDesp[nCont,1] -= (nDifDesp)*-1
				nDifDesp += (nDifDesp)*-1
			Else
				aRatDesp[nCont,1] -= nCent
				nDifDesp += nCent
			EndIF
			nCont ++
		Enddo
	EndIF

	nDifDesp := nSeg - nAuxSeg // Arredondamento Seguro
	nCent := 1/(10 ** 2)
	nCont := 1
	IF nDifDesp > 0
		While nDifDesp > 0
			IF nCont > Len(aRatDesp)
				nCont := 1
			EndIF
			If nDifDesp < 0.01
				aRatDesp[nCont,2] += nDifDesp
				nDifDesp -= nDifDesp
			Else
				aRatDesp[nCont,2] += nCent
				nDifDesp -= nCent
			EndIf
			nCont ++
		Enddo
	ElseIF  nDifDesp < 0
		While nDifDesp < 0
			IF nCont > Len(aRatDesp)
				nCont := 1
			EndIF
			If nDifDesp > -0.01
				aRatDesp[nCont,2] -= (nDifDesp)*-1
				nDifDesp += (nDifDesp)*-1
			Else
				aRatDesp[nCont,2] -= nCent
				nDifDesp += nCent
			EndIf
			nCont ++
		Enddo
	EndIf

	nDifDesp := nDesp - nAuxDesp // Arredondamento Despesas
	nCent := 1/(10 ** 2)
	nCont := 1
	IF nDifDesp > 0
		While nDifDesp > 0
			IF nCont > Len(aRatDesp)
				nCont := 1
			EndIF
			If nDifDesp < 0.01
				aRatDesp[nCont,3] += nDifDesp
				nDifDesp -= nDifDesp
			Else
				aRatDesp[nCont,3] += nCent
				nDifDesp -= nCent
			EndIf
			nCont ++
		Enddo
	ElseIF  nDifDesp < 0
		While nDifDesp < 0
			IF nCont > Len(aRatDesp)
				nCont := 1
			EndIF
			If nDifDesp > -0.01
				aRatDesp[nCont,3] -= (nDifDesp)*-1
				nDifDesp += (nDifDesp)*-1
			Else
				aRatDesp[nCont,3] -= nCent
				nDifDesp += nCent
			EndIf
			nCont ++
		Enddo
	EndIf

	//ajustes para evitar erro de arredondamento
	aImpostos := {}
	For nI := 1 To Len(aImps)
		For nX := 1 To Len(aImps[nI,6])
			If Len(aImps[nI,6,nX]) >= 4 .And. aImps[nI,6,nX,4] <> 0
				nVlrImp := Iif(cPaisLoc == "MEX",Round(aImps[nI,6,nX,4],nDecs), NoRound(aImps[nI,6,nX,4],nDecs))
				nDifer := aImps[nI,6,nX,4] - nVlrImp
				aImps[nI,6,nX,4] := nVlrImp
				//guarda as diferencas agrupadas por imposto e aliquota
				nPosImp := Ascan(aImpostos,{|imp| imp[1] == aImps[nI,6,nX,1] .And. imp[2] == aImps[nI,6,nX,2]})
				If nPosImp == 0
					Aadd(aImpostos,{aImps[nI,6,nX,1],aImps[nI,6,nX,2],0,{}})
					nPosImp := Len(aImpostos)
				Endif
				aImpostos[nPosImp,3] += nDifer
				Aadd(aImpostos[nPosImp,4],{nI,nX})
			Endif
		Next
	Next
	For nI := 1 To Len(aImpostos)
		If aImpostos[nI,3] <> 0
			nDifer := Round(aImpostos[nI,3],nDecs)
			nCent := 1/(10 ** nDecs)
			While nDifer <> 0
				nDifer1 := nDifer
				nX := 1
				While nDifer <> 0 .and. nX <= Len(aImpostos[nI,4])
					lAjusta := .T.
					If  cPaisloc == "ARG" .And. funname() == "MATA468N"
						If  aImps[aImpostos[nI,4,nX,1],6,aImpostos[nI,4,nX,2],4] == Round(aImps[aImpostos[nI,4,nX,1],6,aImpostos[nI,4,nX,2],3] * (aImps[aImpostos[nI,4,nX,1],6,aImpostos[nI,4,nX,2],2]/100), MsDecimais(nDecs))
							lAjusta := .F.
						Endif
					Endif

					If  lAjusta
						aImps[aImpostos[nI,4,nX,1],6,aImpostos[nI,4,nX,2],4] += nCent
						nDifer -= nCent
					ElseIf  nX == Len(aImpostos[nI,4]) .And. nDifer1 == nDifer
						aImps[aImpostos[nI,4,nX,1],6,aImpostos[nI,4,nX,2],4] += nDifer
						nDifer -= nDifer1
					Endif

					nX++
				Enddo
			Enddo
		Endif
	Next
	If cPaisLoc $ "PER"
		nlValTot := 0
		llFlag   := .F.

		For nlCont := 1 To Len(aImps)

			nlValTot += IIf(cPaisLoc != "BRA", aImps[nlCont][2], aImps[nlCont][1]*aImps[nlCont][2])

			For nlCont2 := 1 To Len(aImps[nlCont][6])

				If aImps[nlCont][6][nlCont2][1] $ "DIG"
					llFlag := .T.
					aAdd(alDeleta,{nlCont,nlCont2})
				ElseIf aImps[nlCont][6][nlCont2][1] # "IGI"
					nlValTot += aImps[nlCont][6][nlCont2][4]
				EndIf

			Next nlCont2

		Next nlCont

		nlValTot += SC5->C5_FRETE+SC5->C5_DESPESA+SC5->C5_SEGURO - SC5->C5_DESCONT

		nlValTot := xMoeda(nlValTot,SC5->C5_MOEDA,1,dDataBase)
		If llFlag
			If nlValTot <= nlMinDIG
		 		For nlCont3 := 1 To Len(alDeleta)
					aDel(aImps[ alDeleta[nlCont3][1] ][6], alDeleta[nlCont3][2] )
					aSize(aImps[ alDeleta[nlCont3][1] ][6],Len(aImps[ alDeleta[nlCont3][1] ][6])-1)
		 		Next nlCont3
			EndIf

		EndIf

	EndIf
	If cPaisLoc <> "PTG"

		If A468EdtVls()
			aNFS[nNFs,nLenNFS - 8] := aClone(aImps)		//	19-6=13
			aNFS[nNFs,nLenNFS - 7] := aClone(aRatDesp)	//	19-5=14
			aNFS[nNFs,nLenNFS - 6] := aClone(aPedDel)	//	19-4=15
			aNFS[nNFs,nLenNFS - 5] := nFrete			//	19-3=16
			aNFS[nNFs,nLenNFS - 4] := nSeguro			//	19-2=17
			aNFS[nNFs,nLenNFS - 3] := nDespesa 			//	19-1=18
		Else
			aNFS[nNFs,nLenNFS - 6] := aClone(aImps)		//	19-6=13
			aNFS[nNFs,nLenNFS - 5] := aClone(aRatDesp)	//	19-5=14
			aNFS[nNFs,nLenNFS - 4] := aClone(aPedDel)	//	19-4=15
			aNFS[nNFs,nLenNFS - 3] := nFrete			//	19-3=16
			aNFS[nNFs,nLenNFS - 2] := nSeguro			//	19-2=17
			aNFS[nNFs,nLenNFS - 1] := nDespesa 			//	19-1=18
		EndIf

	Else
		aNFS[nNFs,nLenNFS - 8] := aClone(aImps)
		aNFS[nNFs,nLenNFS - 7] := aClone(aRatDesp)
		aNFS[nNFs,nLenNFS - 6] := aClone(aPedDel)
		aNFS[nNFs,nLenNFS - 5] := nFrete
		aNFS[nNFs,nLenNFS - 4] := nSeguro
		aNFS[nNFs,nLenNFS - 3] := nDespesa
	    aNFS[nNFs,nLenNFS - 2] := nDesNTrb
	    aNFS[nNFs,nLenNFS - 1] := nTara
	Endif

	//calcula o valor dos impostos que sao somados a nota fiscal
	nTotSom  := 0
	nTotSub  := 0
	nValMerc := nVlrTotal + nTotDesp
	For nI := 1 To Len(aImps)
		For nX := 1 To Len(aImps[nI][6])
			cSFC := Left(aImps[nI,6,nX,5],1)
			If cSFC $ "1S"
				nTotSom +=  aImps[nI,6,nX,4]
			ElseIf cSFC $ "2R"
				nTotSub += aImps[nI,6,nX,4]
			Endif
		Next
	Next
	If cPaisLoc=="ARG" .And.  Alltrim((cRem)->D2_ESPECIE) == "RFN" .And. GetNewPar('MV_DESCSAI','1') =='1'
		aNFs[nNFs,nLenNFS] := {nValMerc-nVlrDscTot,nVlrDscTot,nTotSom,nTotSub,}
	Else
		aNFs[nNFs,nLenNFS] := {nValMerc,nVlrDscTot,nTotSom,nTotSub,}
	EndIf
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Tratamento de IB para monotributistas - Argentina           ³
	³ AGIP 177/2009                                               ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If cPaisLoc == "ARG"
		If !lTpPedBenf		//nao e para beneficiamento
			cCliente := Substr(aNFs[nNFs][1],1,nCli)
			cLoja    := Substr(aNFs[nNFs][1],nCli+1,nLoja)
			nPos := Ascan(_aTotOper_,{|cliente| cliente[1] == cCliente .And. cliente[2] == cLoja})
			If nPos > 0
				nI := Ascan(_aTotOper_[nPos,4],{|item| item[1] == nNFs})
				If nI == 0
					Aadd(_aTotOper_[nPos,4],{nNFs,0})
					nI := Len(_aTotOper_[nPos,4])
				Endif
				_aTotOper_[nPos,4,nI,2] := 0
				For nX := 1 To Len(_aValItem_)
					If _aValItem_[nX,2]
						_aTotOper_[nPos,4,nI,2] += _aValItem_[nX,3]
					Endif
				Next
			Endif
		Endif
	Endif
Next nNFs
aNFsOrig 	:= aClone(aNfs) //Armazenar os valores originais do array aNfs
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a468COrd  ³ Autor ³Keber Dias Gomes       ³ Data ³05/06/2006  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Alteracao na visualizacao ordem das faturas a ser geradas.    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Coluna do browse                                       ³±±
±±³          ³ExpO2: Objeto                                                 ³±±
±±³          ³ExpA3: Array de ordem [1]-Coluna [2]-Indice                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a468COrd(nCol,oLbx,aHeadOrd,aFacs,nOrd)
Local nPosOrd := aScan(aHeadOrd,{|x| x[1] == nCol })
Local nx

If nOrd <> nPosOrd
	If nPosOrd == 1
		aSort(aFacs,,,{ |x,y| x[3]+x[4]+x[1]+x[2] < y[3]+y[4]+y[1]+y[2] })
		nOrd := 1
	ElseIf nPosOrd == 2
		aSort(aFacs,,,{ |x,y| x[7]+x[1]+x[2] < y[7]+x[1]+x[2] })
		nOrd := 2
	Else
		aSort(aFacs,,,{|x,y| x[Len(aFacs[1])] < y[Len(aFacs[1])]})
		nOrd := 0
	EndIf

	If nPosOrd > 0
		For nx := 1 to Len(aHeadOrd)
			cRes := If(nCol == aHeadOrd[nx,1],"COLDOWN","COLRIGHT")
			oLbx:SetHeaderImage(aHeadOrd[nx,1],cRes)
		Next
	Else
		For nx := 1 to Len(aHeadOrd)
			oLbx:SetHeaderImage(aHeadOrd[nx,1],"COLRIGHT")
		Next
	EndIf
	oLbx:Refresh()
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a468nDivSC9³ Autor ³Kleber Dias Gomes     ³ Data ³11/04/2007  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina quebra da quantidade do SC9.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias com os itens do pedido de venda                  ³±±
±±³          ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a468nDivSC9(cAliasTrb,nQtdNew)
Local aArea     := GetArea()
Local aAreaSC5  := SC5->(GetArea())
Local aAreaSC6  := SC6->(GetArea())
Local aAreaSC9  := SC9->(GetArea())
Local aAreaTRB  := (cAliasTRB)->(GetArea())
Local aSaldos   := {}
Local aOldSC6   := Array(6)
Local aClone    := {}
Local nX        := 0
Local cPedido   := (cAliasTRB)->C9_PEDIDO
Local cItem     := (cAliasTRB)->C9_ITEM
Local cLiberOk  := ""
Local cMarca	:=	GetMark(,'SC9','C9_OK')

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Pesquisa o registro no SC9                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SC9")
dbSetOrder(1)
If MsSeek(xFilial("SC9")+cPedido+cItem+(cAliasTRB)->C9_SEQUEN+(cAliasTRB)->C9_PRODUTO) .And. SoftLock("SC9")
	dbSelectArea("SC5")
	dbSetOrder(1)
	MsSeek(xFilial("SC5")+cPedido)

	dbSelectArea("SC6")
	dbSetOrder(1)
	MsSeek(xFilial("SC6")+cPedido+cItem)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Processamento da divisao do item de pedido de venda liberado           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aadd(aSaldos,{})
	aadd(aSaldos[1],SC9->C9_LOTECTL)
	aadd(aSaldos[1],SC9->C9_NUMLOTE)
	aadd(aSaldos[1],SC6->C6_LOCALIZ)
	aadd(aSaldos[1],SC6->C6_NUMSERI)
	aadd(aSaldos[1],nQtdNew)
	aadd(aSaldos[1],SC9->C9_POTENCI)
	aadd(aSaldos[1],SC9->C9_DTVALID)
	aadd(aSaldos,{})
	aadd(aSaldos[2],SC9->C9_LOTECTL)
	aadd(aSaldos[2],SC9->C9_NUMLOTE)
	aadd(aSaldos[2],SC6->C6_LOCALIZ)
	aadd(aSaldos[2],SC6->C6_NUMSERI)
	aadd(aSaldos[2],SC9->C9_QTDLIB-nQtdNew)
	aadd(aSaldos[2],SC9->C9_POTENCI)
	aadd(aSaldos[2],SC9->C9_DTVALID)

	Begin Transaction
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Trava registro para atualizacao do pedido de venda                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RecLock("SC5")
	RecLock("SC6")
	RecLock("SC9")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o status do pedido quanto a liberacao                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cLiberOk := SC5->C5_LIBEROK
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Divide o SC9 pela quantidades informadas                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SC9->(a460Estorna())
	For nX := 1 To Len(aSaldos)
		aOldSC6[1] := SC6->C6_LOTECTL
		aOldSC6[2] := SC6->C6_NUMLOTE
		aOldSC6[3] := SC6->C6_LOCALIZ
		aOldSC6[4] := SC6->C6_NUMSERI
		aOldSC6[5] := SC6->C6_DTVALID
		aOldSC6[6] := SC6->C6_POTENCI

		SC6->C6_LOTECTL := aSaldos[nX][1]
		SC6->C6_NUMLOTE := aSaldos[nX][2]
		SC6->C6_LOCALIZ := aSaldos[nX][3]
		SC6->C6_NUMSERI := aSaldos[nX][4]
		SC6->C6_POTENCI := aSaldos[nX][6]
		SC6->C6_DTVALID := aSaldos[nX][7]

		MaLibDoFat(SC6->(RecNo()),aSaldos[nX][5],.T.,.T.,.F.,.F.,.F.,.F.)

		SC6->C6_LOTECTL := aOldSC6[1]
		SC6->C6_NUMLOTE := aOldSC6[2]
		SC6->C6_LOCALIZ := aOldSC6[3]
		SC6->C6_NUMSERI := aOldSC6[4]
		SC6->C6_DTVALID := aOldSC6[5]
		SC6->C6_POTENCI := aOldSC6[6]
	Next nX
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Retorna o status do pedido de venda quanto a liberacao                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RecLock("SC5")
	SC5->C5_LIBEROK := 	cLiberOk

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o arquivo temporario com os novos itens criados               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea(cAliasTRB)
	For nX := 1 To FCount()
		aadd(aClone,FieldGet(nX))
	Next nX

	dbSelectArea("SC9")
	dbSetOrder(1) //C9_FILIAL+C9_PEDIDO+C9_ITEM+C9_SEQUEN+C9_PRODUTO+C9_BLEST+C9_BLCRED
	MsSeek(xFilial("SC9")+cPedido+cItem)

	While !Eof() .And. xFilial("SC9") == SC9->C9_FILIAL .And. cPedido == SC9->C9_PEDIDO .And. cItem == SC9->C9_ITEM
		If Empty(SC9->C9_BLCRED+SC9->C9_BLEST)
			dbSelectArea(cAliasTRB)
			dbSetOrder(5)
			If MsSeek(xFilial("SC9")+SC9->C9_PEDIDO+SC9->C9_ITEM+SC9->C9_SEQUEN)
			   RecLock(cAliasTRB,.F.)
			Else
				RecLock(cAliasTRB,.T.)
				For nX := 1 To FCount()
					FieldPut(nX,aClone[nX])
				Next nX
			EndIf
			(cAliasTRB)->C9_SEQUEN := SC9->C9_SEQUEN
			(cAliasTRB)->C9_QTDLIB := SC9->C9_QTDLIB
			(cAliasTRB)->RECNO     := SC9->(Recno())

			If ExistBlock("M468DVC9")
				If !ExecBlock("M468DVC9",.F.,.F., {SC9->C9_PEDIDO,SC9->C9_ITEM,SC9->C9_SEQUEN,SC9->C9_QTDLIB})
					(cAliasTRB)->C9_OK     := cMarca
				EndIf
			Else
				(cAliasTRB)->C9_OK     := cMarca
			EndIf

			MsUnLock()
		EndIf

		dbSelectArea("SC9")
		dbSkip()
	EndDo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Deleta do arquivo temporario os itens as sequencias que foram perdidas ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea(cAliasTRB)
	dbSetOrder(5)
	MsSeek(xFilial("SC9")+cPedido+cItem)
	While !Eof() .And. xFilial("SC9") == (cAliasTRB)->C9_FILIAL .And.;
		cPedido == (cAliasTRB)->C9_PEDIDO .And.;
		cItem == (cAliasTRB)->C9_ITEM
		dbSelectArea("SC9")
		dbSetOrder(1)
		If !MsSeek(xFilial("SC9")+(cAliasTRB)->C9_PEDIDO+(cAliasTRB)->C9_ITEM+(cAliasTRB)->C9_SEQUEN) .Or.;
			!Empty(SC9->C9_BLCRED+SC9->C9_BLEST)
			RecLock(cAliasTRB,.F.)
			dbDelete()
			MsUnLock()
		EndIf

		dbSelectArea(cAliasTRB)
		dbSkip()
	EndDo
	End Transaction
EndIf

RestArea(aAreaTRB)
RestArea(aAreaSC9)
RestArea(aAreaSC6)
RestArea(aAreaSC5)
RestArea(aArea)

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468NAdianºAutor  ³Vendas CRM          ºFecha ³ 24/08/2009  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida a regra em relacao ao Pedido de Vendas quando utili-º±±
±±º          ³-za condicao de pagamento com Adiantamento.                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468NAdian(cNumPedido, cCondPagto, aRecs, lRespVlrInf, lActVlrInf, cCliente, cLoja,lSeg)
Local lRet     := .T.
Local aAreaSC9 := SC9->(GetArea())
Local aAreaSC5 := SC5->(GetArea())
Local nValTot  := 0 // Total do pedido (Liberado)
Local nValAdt  := 0 // Valor total do Adiantamento
Local aVenc	   := {} // Array de parcelas
Local aPedidos := {}
Local nI 	   := 0
Local lSeek	   := .F.
Local cFilSD2  := xFilial("SD2")
Local cFilSF2  := xFilial("SF2")

Default lSeg:=.F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³O processo de Recebimento Antecipado estará disponivel ³
//³apenas para TOP no Financeiro.                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFDEF TOP
	If A410UsaAdi( cCondPagto )
		lRet := .F.
		If lPedidos
			DbSelectArea("SC9")
			DbSetOrder(1) // C9_FILIAL+C9_PEDIDO+C9_ITEM+C9_SEQUEN+C9_PRODUTO
			If DbSeek( xFilial("SC9")+cNumPedido )
				lSeek := .T.
				While 	SC9->C9_FILIAL == xFilial("SC9") .AND. SC9->C9_PEDIDO == cNumPedido

					If aScan(aRecs, {|x|x==SC9->(RECNO())}) > 0
						nValTot += SC9->C9_QTDLIB * SC9->C9_PRCVEN
					EndIf

					SC9->(DbSkip())
				EndDo
				SC5->(DbSetOrder(1)) // C5_FILIAL+C5_NUM
				If SC5->(DbSeek( xFilial("SC5")+cNumPedido ))
					nValTot += SC5->C5_FRETE+SC5->C5_SEGURO+SC5->C5_DESPESA
				EndIf
			Endif
		ElseIf cPaisLoc == "PER"
			DbSelectArea("SD2")
			SD2->(DbSetOrder(8)) //D2_FILIAL+D2_PEDIDO+D2_ITEMPV
			If SD2->(DbSeek(cFilSD2+cNumPedido))
				lSeek := .T.
				While SD2->D2_FILIAL == cFilSD2 .AND. SD2->D2_PEDIDO == cNumPedido

					If aScan(aRecs, {|x|x == SD2->(RECNO())}) > 0
						nValTot += SD2->D2_TOTAL
					EndIf

					SD2->(DbSkip())
				EndDo
				SF2->(DbSetOrder(1)) //F2_FILIAL+F2_DOC+F2_SERIE+F2_CLIENTE+F2_LOJA+F2_FORMUL+F2_TIPO
				If SF2->(DbSeek(cFilSF2+SF2->F2_DOC+SF2->F2_SERIE+SF2->F2_CLIENTE+SF2->F2_LOJA))
					nValTot += SF2->F2_FRETE+SF2->F2_SEGURO+SF2->F2_DESPESA
				EndIf
			Endif
		Endif

		If lSeek
			aVenc := Condicao(nValTot,cCondPagto,0.00,dDataBase,0.00,aImpVarDup,,nAcresTot)
			If Len(aVenc) > 0
				// aVenc[1,2] - Valor da primeira parcela
				// Carrega array de Adiantamentos relacionados ao pedido
				aPedidos := FPedAdtPed( "R", {cNumPedido}, .F. )
				For nI := 1 To Len(aPedidos)
					nValAdt += aPedidos[nI][3]
				Next nI

				If aVenc[1,2] > nValAdt
					// Indica se o usuário ja respondeu ao questionamento nesta liberacao
					If !lRespVlrInf
						lRespVlrInf := .T.
						lActVlrInf	:= MsgYesNo(STR0202 + CRLF+ STR0203) // "Foram encontrado(s) pedido(s) com valor do Adiantamento inferior ao valor da primeira parcela." # "Deseja selecionar agora os Adiantamento(s)?"
					EndIf
					If lActVlrInf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Abre a tela do financeiro para inclusao³
						//³de Adiantamento                        ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lSeg
							lRet := .T.
						Else
							If A468NPedido(cNumPedido, cCliente, cLoja, nValAdt, aVenc[1,2], cCondPagto)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Chamada recursiva para saber se     ³
								//³foi atendida a regra do Adiantamento³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								lRet := a468NAdian(cNumPedido, cCondPagto, aRecs, @lRespVlrInf, @lActVlrInf, cCliente, cLoja,.T.)
							EndIf
						EndIf
					EndIf
				Else
					lRet := .T.
				EndIf
			EndIf
		EndIf
	EndIf
#ENDIF
RestArea(aAreaSC9)
RestArea(aAreaSC5)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a468NCompAdºAutor ³Vendas CRM          ºFecha ³ 24/08/2009  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza a compensacao do Titulo a Receber quando trata-se  º±±
±±º          ³da parcela a Vista e o pedido utilizou Adiantamento.        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468NCompAd(aAtuSC5, aRegSE1, aRecnoAdt, aRecs)
Local aAreaSE1		:= SE1->(GetArea())
Local aAreaSC5		:= SC5->(GetArea())
Local aAreaSC9		:= SC9->(GetArea())
Local lContabiliza 	:= .T.
Local lDigita 		:= .T.
Local lAglutina 	:= .F.
Local aCodPedidos	:= {} 	// Recebe o codigo dos Pedidos
Local aRecRet		:= {}	// Retorno da funcao que carrega os titulos de Adiantamento
Local nI			:= 0 	// Variavel utilizado em loop
Local nAux			:= 0 	// Variavel utilizado em loop
Local aRecNo		:= {}	// Recebe o Recno do Titulo de Adiantamento
Local aRecVlr		:= {}	// Recebe o valor limite para compensação do Titulo de Adiantamento
Local nVlrParc1		:= 0	// Valor da primeira parcela da Nota Fiscal
Local aPedidos		:= {}	// Array para ajuste do saldo no relacionamento do Financeiro
Local nOrderTRB	 	:=	1
Local cFilSC9		:= xFilial("SC9")
Local cFilSD2		:= xFilial("SD2")

Default aRecs		:= NIL
Default aRecnoAdt   := NIL

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega o pergunte da rotina de compensação financeira³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("FIN330",.F.)

lContabiliza 	:= MV_PAR09 == 1
lDigita			:= MV_PAR07 == 1

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se há ao menos 1 parcela nesta venda³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Len(aRegSE1) >= 1

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Carrega os titulos de Adiantamentos relacionados aos³
	//³Pedidos da Nota.                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ValType(aRecnoAdt) == "U"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Carregar um array com todos os registros do arquivo temporario³
		//³que devem ser faturados.                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If aRecs == Nil
			aRecs	:=	{}
			If Select("TRB") <> 0
				dbSelectArea( "TRB" )
				nOrderTRB	:=	IndexOrd()
				DbSetOrder(4)
				TRB->(DbGoTop())
				If lPedidos
					While TRB->(!Eof()) .And. TRB->C9_FILIAL == cFilSC9
						SC9->(MsGoTo(TRB->RECNO))
						If !Empty(TRB->C9_NFISCAL)
							AAdd(aRecs,	SC9->(RECNO()))
						Endif
						DbSkip()
					Enddo
					DbSetOrder(nOrderTRB)
				ElseIf cPaisLoc == "PER"
					cMarca	:=	GetMark(,'SD2','D2_OK')
					While TRB->(!Eof()) .And. TRB->D2_FILIAL == cFilSD2
						SD2->(MsGoTo(TRB->RECNO))
						If aScan(aRNo, {|x|x == SD2->(RECNO())}) > 0
							AAdd(aRecs,	SD2->(RECNO()))
						EndIf
						DbSkip()
					Enddo
					DbSetOrder(nOrderTRB)
				EndIf
			EndIf
		Endif

		For nI := 1 To Len(aAtuSC5)

			aPedidos := {}
			nVlrParc1 := A468NP1Vlr(aAtuSC5[nI], aRecs)

			// RA's
			aRecRet := FPedAdtPed( "R", { aAtuSC5[nI] }, .F. )
			For nAux := 1 To Len(aRecRet)
				aAdd(aRecNo, 	aRecRet[nAux, 2])

				If nVlrParc1 >= aRecRet[nAux, 3]

					aAdd(aRecVlr,	aRecRet[nAux, 3])
					nVlrParc1 -= aRecRet[nAux, 3]
				ElseIf nVlrParc1 > 0

                	aAdd(aRecVlr,	nVlrParc1)
                	nVlrParc1 := 0
    			Else
    				aAdd(aRecVlr,	0)
				EndIf

				// Array para ajuste do saldo do relacionamento no Financeiro
				aAdd( aPedidos, {aRecRet[nAux, 1], aRecRet[nAux, 2], aRecVlr[Len(aRecVlr)]} )
			Next nAux
			aAdd(aCodPedidos, {aAtuSC5[nI], aClone(aPedidos)} )
		Next nI
	Else
		aRecRet := aClone(aRecnoAdt)

		For nI := 1 To Len(aRecRet)
			aAdd(aRecNo, 	aRecRet[nI, 2])
			aAdd(aRecVlr,	aRecRet[nI, 3])
		Next nI
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Compensa os valores no Financeiro³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SE1->(MsGoTo(aRegSE1[1]))

	MaIntBxCR(3,{aRegSE1[1]},,aRecNo,,{lContabiliza,lAglutina,lDigita,.F.,.F.,.F.},,,,,SE1->E1_VALOR,,aRecVlr)

	If Len(aCodPedidos) > 0
		For nI := 1 To Len(aCodPedidos)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ajuste do saldo do relacionamento no Financeiro³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		    FPedAdtGrv( "R", 4, aCodPedidos[nI, 1], aCodPedidos[nI, 2] )
		    nVladiant += aCodPedidos[nI,2,1,3]
		Next nI
	EndIf
EndIf

RestArea(aAreaSE1)
RestArea(aAreaSC5)
RestArea(aAreaSC9)
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468NPedidoºAutor ³Vendas CRM          ºFecha ³ 24/08/2009  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Exibe tela de usuario para corrigir o valor dos Adiantamen-º±±
±±º          ³-tos do Pedido.                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A468NPedido(cNumPed, cCliente, cLoja, nValAdt, nValParc1, cCondPagto)
Local cGetNumero	:= cNumPed
Local cGetCliente	:= cCliente
Local cGetLoja	 	:= cLoja
Local cGetNome		:= Posicione("SA1", 1, xFilial("SA1")+cCliente+cLoja, "A1_NOME")
Local cGetVlrP1	 	:= Round(nValParc1, 2)
Local cGetVlrAd	 	:= Round(nValAdt, 2)
Local cGetVlrSld	:= Round(nValParc1 - nValAdt, 2)
Local oGetNumero
Local oGetCliente
Local oGetLoja
Local oGetNome
Local oGetVlrP1
Local oGetVlrAd
Local oGetVlrSld
Local lRet 			:= .T.
Local aRecnoSE1 	:= FPedAdtPed( "R", {cNumPed}, .F. )
Local oDlg				// Dialog Principal


DEFINE MSDIALOG oDlg TITLE STR0204 FROM A468PosTla(178),A468PosTla(181) TO A468PosTla(461),A468PosTla(597) PIXEL // "Valor do Adiantamento inferior a parcela à vista"

	// Cria as Groups do Sistema
	@ A468PosTla(003),A468PosTla(002) TO A468PosTla(060),A468PosTla(155) LABEL STR0205 PIXEL OF oDlg // "Informações do Pedido"
	@ A468PosTla(060),A468PosTla(002) TO A468PosTla(131),A468PosTla(155) LABEL STR0206 PIXEL OF oDlg // "Valores do Pedido"

	// Cria Componentes Padroes do Sistema
	@ A468PosTla(015),A468PosTla(009) Say STR0207 Size A468PosTla(018),A468PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg // "Número"
	@ A468PosTla(015),A468PosTla(050) MsGet oGetNumero Var cGetNumero Size A468PosTla(060),A468PosTla(009) COLOR CLR_BLACK Picture "@!" PIXEL OF oDlg When .F.

	@ A468PosTla(030),A468PosTla(009) Say STR0027 Size A468PosTla(018),A468PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg // "Cliente"
	@ A468PosTla(030),A468PosTla(050) MsGet oGetCliente Var cGetCliente Size A468PosTla(060),A468PosTla(009) COLOR CLR_BLACK Picture "@!" PIXEL OF oDlg When .F.
	@ A468PosTla(030),A468PosTla(120) MsGet oGetLoja Var cGetLoja Size A468PosTla(027),A468PosTla(009) COLOR CLR_BLACK Picture "@!" PIXEL OF oDlg When .F.

	@ A468PosTla(045),A468PosTla(009) Say STR0029 Size A468PosTla(018),A468PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg // "Nome"
	@ A468PosTla(045),A468PosTla(050) MsGet oGetNome Var cGetNome Size A468PosTla(097),A468PosTla(009) COLOR CLR_BLACK Picture "@!" PIXEL OF oDlg When .F.

	@ A468PosTla(075),A468PosTla(009) Say STR0208 Size A468PosTla(038),A468PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg // "Parcela à vista"
	@ A468PosTla(075),A468PosTla(050) MsGet oGetVlrP1 Var cGetVlrP1 Size A468PosTla(060),A468PosTla(009) COLOR CLR_BLACK Picture "@E 999,999,999.99" PIXEL OF oDlg When .F.

	@ A468PosTla(090),A468PosTla(009) Say STR0209 Size A468PosTla(038),A468PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg // "Adiantamentos"
	@ A468PosTla(090),A468PosTla(050) MsGet oGetVlrAd Var cGetVlrAd Size A468PosTla(060),A468PosTla(009) COLOR CLR_BLACK Picture "@E 999,999,999.99" PIXEL OF oDlg When .F.

	@ A468PosTla(105),A468PosTla(009) Say STR0210 Size A468PosTla(038),A468PosTla(008) COLOR CLR_RED PIXEL OF oDlg // "Diferença"
	@ A468PosTla(105),A468PosTla(050) MsGet oGetVlrSld Var cGetVlrSld Size A468PosTla(060),A468PosTla(009) COLOR CLR_RED Picture "@E -999,999,999.99" PIXEL OF oDlg When .F.

	// Botoes disponiveis na tela
	@ A468PosTla(007),A468PosTla(167) Button STR0211 Size A468PosTla(037),A468PosTla(012) PIXEL OF oDlg ACTION (lRet:= .F.,oDlg:End()) // "Ignora Pedido"
	@ A468PosTla(025),A468PosTla(167) Button STR0212 Size A468PosTla(037),A468PosTla(012) PIXEL OF oDlg ACTION (A410Adiant(cNumPed, cCondPagto, nValParc1, aRecnoSE1, .F., cCliente, cLoja, .T.),oDlg:End())	 // "Adiantamentos"

	@ A468PosTla(134),A468PosTla(005) Say STR0213 Size A468PosTla(158),A468PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg	 // "Para alterar o valor do Adiantamento, clique em Adiantamentos."
ACTIVATE MSDIALOG oDlg CENTERED

Return(lRet)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa   ³A468PosTla³ Autores ³ Vendas CRM      ³ Data ³10/05/05  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao  ³ Funcao responsavel por manter o Layout independente da ³±±
±±³           ³ resolucao horizontal do Monitor do Usuario.            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468PosTla(nTam)
Local nHRes	:=	oMainWnd:nClientWidth	// Resolucao horizontal do monitor
	If nHRes == 640	// Resolucao 640x480 (soh o Ocean e o Classic aceitam 640)
		nTam *= 0.8
	ElseIf (nHRes == 798).Or.(nHRes == 800)	// Resolucao 800x600
		nTam *= 1
	Else	// Resolucao 1024x768 e acima
		nTam *= 1.28
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tratamento para tema "Flat"³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If "MP8" $ oApp:cVersion
		If (Alltrim(GetTheme()) == "FLAT") .Or. SetMdiChild()
			nTam *= 0.90
		EndIf
	EndIf
Return Int(nTam)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa   ³A468NP1Vlr³ Autor   ³ Vendas CRM      ³ Data ³31/08/09  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao  ³ Retorna o valor da primeira parcela do pedido.         ³±±
±±³           ³                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468NP1Vlr(cNumPedido, aRecs)
Local aAreaSC9 	:= SC9->(GetArea())
Local aAreaSC5 	:= SC5->(GetArea())
Local aAreaSF2		:= SF2->(GetArea())
Local aAreaSD2		:= SD2->(GetArea())
Local nValor	:= 0
Local nValTot	:= 0
Local cCondPagto:= ""
Local cFilSD2		:= xFilial("SD2")
Local cFilSF2		:= xFilial("SF2")
Local cFilSC9		:= xFilial("SC9")
Local cFilSC5		:= xFilial("SC5")

If lPedidos
	DbSelectArea("SC9")
	DbSetOrder(1) // C9_FILIAL+C9_PEDIDO+C9_ITEM+C9_SEQUEN+C9_PRODUTO
	If DbSeek( xFilial("SC9")+cNumPedido )
		While SC9->C9_FILIAL == xFilial("SC9") .AND. SC9->C9_PEDIDO == cNumPedido
			If aScan(aRecs, {|x|x==SC9->(RECNO())}) > 0
				nValTot += SC9->C9_QTDLIB * SC9->C9_PRCVEN
			EndIf
			SC9->(DbSkip())
		End
		SC5->(DbSetOrder(1)) // C5_FILIAL+C5_NUM
		If SC5->(DbSeek( xFilial("SC5")+cNumPedido ))
			nValTot += SC5->C5_FRETE+SC5->C5_SEGURO+SC5->C5_DESPESA
			cCondPagto	:= SC5->C5_CONDPAG
			aVenc := Condicao(nValTot,cCondPagto,0.00,dDataBase,0.00,aImpVarDup,,nAcresTot)
			If Len(aVenc) > 0
				nValor := aVenc[1,2]
			EndIf
		EndIf
	EndIf
ElseIf cPaisLoc == "PER"
	DbSelectArea("SD2")
	DbSetOrder(8) //D2_FILIAL+D2_PEDIDO+D2_ITEMPV
	If DbSeek(cFilSD2+cNumPedido )
		While SD2->D2_FILIAL == cFilSD2 .AND. SD2->D2_PEDIDO == cNumPedido
			If aScan(aRecs, {|x|x == SD2->(RECNO())}) > 0
				nValTot += SD2->D2_TOTAL
			EndIf
			SD2->(DbSkip())
		End
		SF2->(DbSetOrder(1)) // F2_FILIAL+F2_DOC+F2_SERIE+F2_CLIENTE+F2_LOJA
		If SF2->(DbSeek(cFilSF2+SF2->F2_DOC+SF2->F2_SERIE+SF2->F2_CLIENTE+SF2->F2_LOJA))
			nValTot += SF2->F2_FRETE+SF2->F2_SEGURO+SF2->F2_DESPESA
			cCondPagto	:= SF2->F2_COND
			aVenc := Condicao(nValTot,cCondPagto,0.00,dDataBase,0.00,aImpVarDup,,nAcresTot)
			If Len(aVenc) > 0
				nValor := aVenc[1,2]
			EndIf
		EndIf
	EndIf
EndIf

RestArea(aAreaSC9)
RestArea(aAreaSC5)
RestArea(aAreaSF2)
RestArea(aAreaSD2)
Return nValor

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa   ³A468TxMoed³ Autor   ³ Vendas CRM      ³ Data ³30/12/10  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao  ³ Retorna o valor da taxa utilizada para conversão da    ³±±
±±³           ³ moeda considerando parâmetro MV_ALTTXFT                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468TxMoed(nTaxamoeda,nMoeda,nTxMoeda,lPedidos,cAltTx,nMoedSel,nTipoGer,aTxMoedas)
Local nTasaNew := 0

Default nMoeda     := IIF (nTipoGer ==1,nMoeda,nMoedSel)
Default nTxMoeda   := 1
Default nTaxamoeda := 1

If Alltrim(cAltTx)=="0"
	nTaxamoeda  := nTxMoeda
	If (nMoeda > 1)
		nTaxamoeda:= IIF(!lPedidos .And. !Empty(GetSD2('D2_PEDIDO')).And.(nMoeda == SC5->C5_MOEDA .Or. nMoedSel == SC5->C5_MOEDA),SC5->C5_TXMOEDA,nTxMoeda)
   	ElseIf nTipoGer == 2
	    If !lPedidos .And. !Empty(GetSD2('D2_PEDIDO'))
    		If nMoedSel >1
    	    	nTaxamoeda  := IIF( nMoedSel == SC5->C5_MOEDA,SC5->C5_TXMOEDA,Recmoeda(dDatabase,nMoedSel) )
    	    Else
    	    	nTaxamoeda  := nTxMoeda
    	    Endif
    	Else
		    nTaxamoeda  := Recmoeda(dDatabase,nMoedSel)
	    Endif
	Endif
ElseIf Alltrim(cAltTx)=="1"
	   nTaxamoeda  := IIF(nMoeda == 1 .And. nTipoGer == 2,Recmoeda(dDatabase,nMoedSel),Recmoeda(dDatabase,nMoeda))
ElseIf Alltrim(cAltTx)=="2"
		IF cPaisloc == "ARG" .and. Len(aParams)>=22 .and.  aParams[22] == 2 .and. (nTipoGer==nMoedSel)
			nTaxamoeda:= aTxMoedas[nMoedSel][2]
		Else
			nTaxamoeda:= aTxMoedas[nMoeda][2]
		EndIf
		If !lPedidos .And. nTaxaMoeda == 0 .And. !Empty(GetSD2('D2_PEDIDO'))
			nTaxamoeda:= aTxMoedas[nMoeda][2]
		EndIf
EndIf

If nTaxaMoeda <= 0
	nTaxamoeda  := IIF(nTipoGer == 1,Recmoeda(dDatabase,nMoeda),Recmoeda(dDatabase,nMoedSel)) //Recmoeda(dDatabase,nMoeda)
EndIf

If ExistBlock("MT468TX")
	nTasaNew := ExecBlock("MT468TX",.F.,.F., {nTaxamoeda,nMoeda,nTxMoeda,lPedidos,nMoedSel,nTipoGer,aTxMoedas})
	If (ValType(nTasaNew) == "N")
		If nTasaNew <> 0
			nTaxamoeda := nTasaNew
		EndIf
	EndIf
EndIf

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a468GetNCF³ Autor ³ Vendas CRM            ³ Data ³ 06/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna valor de indice do array aNCF Loc. Rep. Dom.       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpC1 := a468GetNCF(ExpN1)                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Caracter, Numero NCF (Rep. Dom.)                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³ ExpN1 - Posicao do Array aNCF                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468GetNCF(nPos)
Return IIf(Len(aNCF) >= nPos,aNCF[nPos],NIL)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a468SetNCF³ Autor ³ Vendas CRM            ³ Data ³ 06/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Seta ou Adiciona novo valor em aNCF.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ a468SetNCF(ExpX1,ExpN2)                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³ ExpX1 - Valor da Array                                     ³±±
±±³          ³ ExpN2 - Posicao na Array                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468SetNCF(xVal,nPos)
Default nPos := 0
If nPos == 0
	Aadd(aNCF,xVal)
Else
	If Len(aNCF) >= nPos
		aNCF[nPos] := xVal
	Else
		Return .F.
	EndIf
EndIf
Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a468NCFNF ³ Autor ³ Vendas CRM            ³ Data ³ 06/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Inicializa array NCF Loc. Rep. Dom.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpC1 := a468NCFNF(ExpC1,ExpC2)                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Caracter, Numero NCF (Rep. Dom.) do SF2 para Serie, Nota   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³ ExpC1 - Serie F2_SERIE                                     ³±±
±±³          ³ ExpC2 - Documento F2_DOC                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468NCFNF(cSerNF,cNumNF)
Local cNCF   := ""
Local aArea  := GetArea()
Local aSF2   := SF2->(GetArea())
DbSelectArea("SF2")
DbSetOrder(1) // F2_FILIAL + F2_DOC + F2_SERIE
If MSSeek(XFilial("SF2")+cNumNF+cSerNF)
	cNCF := SF2->F2_NCF
EndIf
RestArea(aSF2)
RestArea(aArea)
Return cNCF

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a468IniNCF³ Autor ³ Vendas CRM            ³ Data ³ 06/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Inicializa array NCF Loc. Rep. Dom.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ a468IniNCF()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA468n                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a468IniNCF()
	aNCF := {}
Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma ³A468DblClicºAutor  ³Alberto Deviciente  ºFecha ³  23/08/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Permite editar alguns valores quando executado duplo clique.º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function A468DblClic(nPos,aNFs,oLbx,aFacs,nPosNfs,aTitles)
Local nClick 	:= oLbx:nColPos
Local cColClic  := ""
Local cDTSaida	:= Iif(cPaisloc == "RUS", aFacs[nPos][nClick], "")

If nClick == 1 .or. nClick == 2
	A468nChgSer(@nPos,@aNFs,oLbx,@aFacs,nPosNfs)
ElseIf nClick == 6 .AND. cPaisLoc == "RUS"
	lEditCell(@aFacs,oLbx,"@d",6)
	If LastKey() ==   27
		If !Empty(cDTSaida) .And. DToC(CToD(Alltrim(cDTSaida))) == AllTrim(cDTSaida)
			aFacs[nPos][6] := CTOD(cDTSaida)
		Else
			aFacs[nPos][6] := dDatabase
		EndIf
	Else
		If ! Empty(aFacs[nPos][nClick]) .And. (ValType(aFacs[nPos][nClick]) == "D" .OR. DToC(CToD(Alltrim(aFacs[nPos][nClick]))) == AllTrim(aFacs[nPos][nClick]))
			aDTSaida[nPos] := aFacs[nPos][nClick]
			oLbx:SetFocus()
			oLbx:REFRESH()
		Else
			aFacs[nPos][6] := dDatabase
			aDTSaida[nPos] := dDatabase
		EndIf
	EndIf
ELseIf cPaisLoc == "MEX" .And. (aTitles[nClick] $ RetTitle('F2_SERMAN') + "/" + RetTitle('F2_DOCMAN'))
	A468ChgRel(nPos,aNFs,oLbx,aFacs,nPosNfs,aTitles)
Else
	//Verifica qual a coluna clicada
	if aTitles[nClick] == STR0200    	//"Desconto"
		cColClic  := "1"
	elseif aTitles[nClick] == STR0195	//"(+) Impostos"
		cColClic  := "2"
	elseif aTitles[nClick] == STR0196	//"(-) Impostos"
		cColClic  := "3"
	elseif aTitles[nClick] == RetTitle('F2_CAE')
		cColClic  := "4"
	elseif aTitles[nClick] == RetTitle('F2_CAI')
		cColClic  := "5"
	endif


	if !empty(cColClic)
		If cColClic $ ("123")
			If A468EdtVls() //Verifica se permite editar as celulas
				//Permite Editar os campos ( Desconto, (+) Imposto, (-) Imposto )
				A468nChgImp(@nPos,@aNFs,oLbx,@aFacs,nPosNfs,nClick,cColClic)
			EndIf
		Else
			If A468EdtVls() //Verifica se permite editar as celulas
				A468nChgCAE(@nPos,@aNFs,oLbx,@aFacs,nPosNfs,aTitles)
			EndIf
		EndIF
	endif
endif
Return


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma ³A468nChgImpºAutor  ³Alberto Deviciente  ºFecha ³  23/08/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Permitir editar os valores de impostodas da notas que serao º±±
±±º          ³ geradas.                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468nChgImp(nPos,aNFs,oLbx,aFacs,nPosNfs,nClick,cColClic)
Local oDlgDetImp
Local oListImps
Local aListImps  := {}
Local aListAnt   := {}
Local nOpca 	 := 0
Local cTitDialog := ""
Local lColDescon := cColClic == "1" //Coluna "Desconto"
Local lColImpMai := cColClic == "2" //Coluna "(+) Impostos"
Local lColImpMen := cColClic == "3" //Coluna "(-) Impostos"
Local nVlrAnt    := 0
Local nPosColImp := 0
Local nX 		 := 0
Local nY 		 := 0
Local nZ 		 := 0
Local cPictGet 	 := PesqPict("SD2","D2_TOTAL")
Local lEdCelImps := A468EdtVls()

Local nPosTotFat := Len(aFacs[nPos])-Iif(lEdCelImps,3,1) 	//Posicao "Total Fatura"
Local nPosImpMen := nPosTotFat-1 		//Posicao "(-) Impostos"
Local nPosImpMai := nPosImpMen-1 		//Posicao "(+) Impostos"
Local nPosDescon := nPosImpMai-1 		//Posicao "Desconto"
Local nPosVlrBrt := nPosDescon-1 		//Posicao "Valor Bruto"
Local nPosItANfs := 0
Local nPosImpNfs := 0
Local nPosic     := 0
Local nValor     := 0
Local nFator     := 0
Local nDifDesc   := 0

Private oVlrTotal
Private n_TotVlrs := 0

if lColDescon
	nVlrAnt := aFacs[nPos][nPosDescon]

	MaFisEditCell(@aFacs[nPos][nPosDescon],oLbx,cPictGet,nClick,'Positivo()')

    Aviso(STR0009, STR0226, {STR0176})	//"Ao alterar o desconto, os ajustes feitos manualmente nos valores dos impostos serão perdidos."

	if aFacs[nPos][nPosDescon] <> nVlrAnt

		if (aFacs[nPos][nPosDescon] - nVlrAnt) > aFacs[nPos][nPosTotFat]
			Aviso(STR0009, "El valor de descuento no puede ser mayor que el valor del total de la factura", {STR0176})
			aFacs[nPos][nPosDescon] := nVlrAnt
			Return
		endif

		nDifDesc := aFacs[nPos][nPosDescon] - nVlrAnt

		//Atualiza se necessario a base de calculo e os valores dos impostos
		A468AtuImp(nPos,nDifDesc,@aNFs,@aFacs,nPosImpMai,nPosTotFat)

		//Atualiza valor de Desconto no array aNFs
		aNFs[nPos][nLenNFS][2] := aFacs[nPos][nPosDescon]

		//Atualiza o Total Fatura
		aFacs[nPos][nPosTotFat] -= aFacs[nPos][nPosDescon] - nVlrAnt

	endif

	Return

elseif lColImpMai //Valores Imposto (+)

	nVlrAnt := aFacs[nPos][nPosImpMai]
	nPosColImp := nLenNFS - Iif(lEdCelImps,8,6) //Posicao da coluna dos "Impostos (+)" no array aNFS

elseif lColImpMen  //Valores Imposto (-)

	nVlrAnt := aFacs[nPos][nPosImpMen]
	nPosColImp := nLenNFS - Iif(lEdCelImps,7,5) //Posicao da coluna dos "Impostos (-)" no array aNFS

endif

//Percorre array na posicao dos impostos calculados para apresentar na tela de "Detalhes"
if lColImpMai .or. lColImpMen

	//Percorre todos os itens
	for nX:=1 to len(aNFS[nPos][nPosColImp])
		if len(aNFS[nPos][nPosColImp][nX]) > 5
			 //Percorre todos os impostos de cada item
			for nY:=1 to len(aNFS[nPos][nPosColImp][nX][6])
				if aNFsOrig[nPos][nPosColImp][nX][6][nY][4] > 0 //So apresenta o imposto se existir valor maior que zero
					nPosic := aScan(aListImps,{|x| x[1] == aNFs[nPos][nPosColImp][nX][6][nY][1] })
					if nPosic == 0
						aAdd(aListImps, {aNFs[nPos][nPosColImp][nX][6][nY][1],; 											//Cod.
										Posicione('SFB',1,xFilial("SFB")+aNFs[nPos][nPosColImp][nX][6][nY][1],"FB_DESCR"),;	//Descricao do imposto
						 				aNFs[nPos][nPosColImp][nX][6][nY][4],; 												//Valor do imposto
									 				{nX},; 																	//Posicao do Item deste valor de imposto no array aNFs
									 				{nY} } ) 																//Posicao deste valor de imposto no array aNFs
					else
						aListImps[nPosic][3] += aNFs[nPos][nPosColImp][nX][6][nY][4] 				//Soma Valor do imposto
						aAdd(aListImps[nPosic][4], nX)
						aAdd(aListImps[nPosic][5], nY)
					endif
				endif
			next nY
		endif
	next nX

	if len(aLstImpOri ) == 0
		aLstImpOri := aClone(aListImps)
	endif

	aListAnt := aClone(aListImps)

endif

if len(aListImps) == 0
	Aviso(STR0009, "No hay ningún valor para la edición", {STR0176})
	Return
endif

cTitDialog := "Detalles"+" "+iif(lColImpMai,STR0195,STR0196)

aEval( aListImps, {|x| n_TotVlrs += x[3] } )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Dialog detalhado dos impostos.                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFINE MSDIALOG oDlgDetImp TITLE cTitDialog FROM 00,00 TO 250,430 PIXEL
@ 15,05 TO 105,210 LABEL "" OF oDlgDetImp PIXEL

oListImps := TWBrowse():New( 020,010,195,080,,{"Cod.", "Descripcion", "Vlr. Impuesto"},{20,100,20},oDlgDetImp,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
oListImps:SetArray(aListImps)
oListImps:bLine := {||	{ 	aListImps[oListImps:nAt,1],;										// Cod.
							aListImps[oListImps:nAt,2],;										// Descricao
							Transform(aListImps[oListImps:nAt,3],PesqPict("SD2","D2_TOTAL"))} }	// Valor
oListImps:bLDblClick  := {|| A468DblImp(oListImps:nAt,oListImps,@aListImps,@aNFs,@aFacs,nPos,nPosNfs,nPosColImp,lColImpMai,lColImpMen,nPosTotFat,nPosImpMen,nPosImpMai,nPosDescon,nPosVlrBrt) }

if lColImpMai .or. lColImpMen
	TSay():New( 112/*<nRow>*/, 140/*<nCol>*/, {|| "Total" }	/*<{cText}>*/, oDlgDetImp/*[<oWnd>]*/, /*[<cPict>]*/, /*<oFont>*/, /*<.lCenter.>*/, /*<.lRight.>*/, /*<.lBorder.>*/, .T./*<.lPixel.>*/, /*<nClrText>*/, /*<nClrBack>*/, 30/*<nWidth>*/, 08/*<nHeight>*/, /*<.design.>*/, /*<.update.>*/, /*<.lShaded.>*/, /*<.lBox.>*/, /*<.lRaised.>*/, /*<.lHtml.>*/ ) //"Total"
endif

//Campo - Total
oVlrTotal:= TGET():Create(oDlgDetImp)
oVlrTotal:cName := "oVlrTotal"
oVlrTotal:nLeft := 310
oVlrTotal:nTop := 220
oVlrTotal:nWidth := 85
oVlrTotal:nHeight := 21
oVlrTotal:lShowHint := .F.
oVlrTotal:lReadOnly := .F.
oVlrTotal:Align := 0
oVlrTotal:cVariable := "n_TotVlrs"
oVlrTotal:bSetGet := {|u| If(PCount()>0,n_TotVlrs:=u,n_TotVlrs) }
oVlrTotal:lVisibleControl := iif(lColImpMai .or. lColImpMen,.T.,.F.)
oVlrTotal:lPassword := .F.
oVlrTotal:lHasButton := .F.
oVlrTotal:PICTURE := PesqPict("SD2","D2_TOTAL")
oVlrTotal:bWhen := {|| .F.}

ACTIVATE MSDIALOG oDlgDetImp ON INIT EnchoiceBar(oDlgDetImp, { || Iif(A468VldOK(lColImpMai,nPosImpMen,nVlrAnt,n_TotVlrs,aFacs[nPos][nPosTotFat]),(nOpca := 1, oDlgDetImp:End()),Nil) }, { || nOpca := 0, oDlgDetImp:End() }) CENTER

if nOpca == 1

	//Atualiza o Total Fatura
	if lColImpMai
		aFacs[nPos][14] += n_TotVlrs - aFacs[nPos][nPosImpMai]
		aFacs[nPos][nPosImpMai] := n_TotVlrs //Atualiza a coluna Editada
	else
		aFacs[nPos][14] -= n_TotVlrs - aFacs[nPos][nPosImpMen]
		aFacs[nPos][nPosImpMen] := n_TotVlrs //Atualiza a coluna Editada
	endif

	//Atualiza valores detalhados dos impostos no array aNFs
	if lColImpMai .or. lColImpMen
		For nX:=1 To Len(aListImps)

			if aListAnt[nX][3] <> aListImps[nX][3]


				for nZ:= 1 to len(aListImps[nX][4])
					nPosItANfs := aListImps[nX][4][nZ] //Posicao do Item no array aNFs
					nPosImpNfs := aListImps[nX][5][nZ] //Posicao dos Impostos no array

					nFator := aNFs[nPos][nPosColImp][nPosItANfs][6][nPosImpNfs][4] / aListAnt[nX][3]

					nValor := aNFs[nPos][nPosColImp][nPosItANfs][6][nPosImpNfs][4] + ( nFator * ( aListImps[nX][3] - aListAnt[nX][3] ) )

					aNFs[nPos][nPosColImp][nPosItANfs][6][nPosImpNfs][4] := nValor

				next nZ

			endif
		Next nX
	endif

	//Atualiza valores no array aNFs
	if lColImpMai
		aNFs[nPos][nLenNFS][3] := n_TotVlrs
	elseif lColImpMen
		aNFs[nPos][nLenNFS][4] := n_TotVlrs
	endif

endif
Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468DblImpºAutor  ³Alberto Deviciente  ºFecha ³  24/08/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Permitir editar os valores de impostos detalhados das notas º±±
±±º          ³ que serao geradas.                                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468DblImp(nLin,oListImps,aListImps,aNFs,aFacs,nPosFacs,nPosNfs,nPosColImp,lColImpMai,lColImpMen,nPosTotFat,nPosImpMen,nPosImpMai,nPosDescon,nPosVlrBrt)
Local nVlrAnt 	:= aListImps[nLin][3]
Local cPictGet 	:= PesqPict("SD2","D2_TOTAL")

If oListImps:nColPos <> 3
	Return
EndIf

MaFisEditCell(@aListImps[nLin][3],oListImps,cPictGet,3,'Positivo()')

If aListImps[nLin][3] <> nVlrAnt

	//Valida valor informado pelo usuario
	If !A468VldCmp(aLstImpOri[nLin][3], aListImps[nLin][3], aListImps[nLin][1])
		aListImps[nLin][3] := nVlrAnt
		Return
	EndIf

	n_TotVlrs := n_TotVlrs - nVlrAnt + aListImps[nLin][3]
	oVlrTotal:Refresh()

EndIf
Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468VldCmpºAutor  ³Alberto Deviciente  ºFecha ³  23/08/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida o valor do imposto informado pelo usuario.           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468VldCmp(nImpCalc, nVlrInfo, cCodImp)
Local lRet 		:= .T.
Local nDifer 	:= 0
Local nDiferA 	:= 0
Local lVldValor	:= .F.
Local aAreaAtu	:={}
Local aAreaAtuSFB:={}
Local cMensag 	:= ""

//Valida a digita‡„o do valor do imposto
lVldValor:=  !Empty(cCodImp) .And. SFB->(FieldPos("FB_PERCALT")) > 0 .And. SFB->(FieldPos("FB_VLRALT")) > 0

nDiferA		:= nVlrInfo - nImpCalc
nDifer		:= nDiferA
If lVldValor
	aAreaAtu:=GetArea()
	aAreaAtuSFB:=SFB->(GetArea())
	SFB->(DbSetOrder(1))
	SFB->(Dbseek(xfilial("SFB")+Alltrim(cCodImp))  )
	lVlPerc:= Abs(nDiferA)>(nVlrInfo * (SFB->FB_PERCALT/100))
	If lVlPerc .or. (!lVlPerc .And. Abs(nDifer) > SFB->FB_VLRALT )
		cMensag := "El valor modificado es superior al "+if(lVlPerc,"%","valor")+" maximo permitido para modificacion"
		Aviso( STR0009, cMensag, {STR0176} )
		lRet  := .F.
	Endif
	RestArea(aAreaAtu)
	SFB->(RestArea(aAreaAtuSFB))
EndIf
Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468VldOK ºAutor  ³Alberto Deviciente  ºFecha ³  24/08/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida valores informados pelo usuario na telinha de detalheº±±
±±º          ³dos impostos.                                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468VldOK(lColImpMai, nPosImpMen, nValAnt, nValNew, nValTotFact)
Local lRet := .T.

If lColImpMai
	If (nValNew < nValAnt) .and. ((nValAnt - nValNew) > nValTotFact)
		Aviso(STR0009, "La factura total no puede ser negativo", {STR0176})
		lRet := .F.
	EndIf
ElseIf nPosImpMen
	If (nValNew > nValAnt) .and. ((nValNew - nValAnt) > nValTotFact)
		Aviso(STR0009, "La factura total no puede ser negativo", {STR0176})
		lRet := .F.
	EndIf
EndIf

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468EdtVlsºAutor  ³Alberto Deviciente  ºFecha ³  31/08/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se permite editar celulas de valores de Desconto,  º±±
±±º          ³(+)imposto e (-)imposto.                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468EdtVls()
Local lLPSC5 := (SC5->(FieldPos("C5_LIQPROD"))>0) // Determina se o campo existe na estrutura da tabela
Local lLPSF2 := (SF2->(FieldPos("F2_LIQPROD"))>0) // Determina se o campo existe na estrutura da tabela
Local lRet   := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Somente permite editar a celulas de decontos e impostos caso se tratar de "CONSIGNACAO(Liquido Produto)"  ³
//³e o parametro MV_EDITIMP estiver definido com .T.                                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lRet := Iif(GetNewPar("MV_EDITIMP", .F.) .and. (Type("lPedidos")<>"U"),.T.,.F.)

If lRet
	lRet := Iif((!lPedidos .and. lLPSF2 .and. SF2->F2_LIQPROD=="1" ) .or.;
	 			( lPedidos .and. lLPSC5 .and. SC5->C5_LIQPROD=="1" .and. SC5->C5_DOCGER == "1"),.T.,.F.)
EndIf
Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468AtuImpºAutor  ³Alberto Deviciente  ºFecha ³  04/10/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica e atualiza se necessario a base de calculo e o    º±±
±±º          ³ valor dos impostos.                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468AtuImp(nPos,nVlDifDesc,aNFs,aFacs,nPosImpMai,nPosTotFat)
Local nX, nY
Local cCodImpos 	:= ""
Local nPercet 		:= 0
Local nVlBaseOri 	:= 0
Local nVlrBase 		:= 0
Local nVlrImpost 	:= 0
Local nImpostAtu    := 0
Local nVlrTotImp    := 0  //Armazena a somatoria dos impostos recalculados
Local nVlrBruto 	:= aNFs[nPos][nLenNFS][1]
Local nDescProp 	:= nVlDifDesc / nVlrBruto   //Desconto proporcional
Local lEdCelImps := A468EdtVls()

Local nPosColImp 	:= nLenNFS - Iif(lEdCelImps,8,6) //Posicao da coluna dos "Impostos (+)" no array aNFS

Local nRecnoSD2     := 0
Local cTES  		:= ""
Local aAreaSD2		:= SD2->(GetArea())
Local aAreaSC6		:= SC6->(GetArea())

DbSelectArea("SFC")
SFC->(DbSetOrder(2))

//Percorre os itens da fatura
for nX:=1 to len(aNFS[nPos][nPosColImp])
	nRecnoSD2 := aNFS[nPos][2][nX]
	SD2->(dbGoTo(nRecnoSD2))

	cTES := Iif(lPedidos,SC6->C6_TES,Posicione("SC6",1,xFilial("SC6")+SD2->D2_PEDIDO+SD2->D2_ITEMPV+SD2->D2_COD,"C6_TES"))

	//Atualiza o valor unitario do item
	aNFs[nPos][nPosColImp][nX][2] := aNFs[nPos][nPosColImp][nX][2] - (aNFsOrig[nPos][nPosColImp][nX][2] * nDescProp)

	//Atualiza o valor total do item
	aNFs[nPos][nPosColImp][nX][3] := aNFs[nPos][nPosColImp][nX][3] - (aNFsOrig[nPos][nPosColImp][nX][3] * nDescProp)

	if len(aNFS[nPos][nPosColImp][nX]) > 5
		//Percorre todos os impostos de cada item da fatura
		for nY:=1 to len(aNFS[nPos][nPosColImp][nX][6])
			if aNFsOrig[nPos][nPosColImp][nX][6][nY][4] > 0 //So considera o imposto se o valor original calculado for maior que zero

				//Atualiza o valor do imposto para seu valor original
				aNFs[nPos][nPosColImp][nX][6][nY][4] := aNFsOrig[nPos][nPosColImp][nX][6][nY][4] //Atualiza para Valor Original do imposto

				cCodImpos 	:= aNFs[nPos][nPosColImp][nX][6][nY][1] 	//Codigo do imposto
				nPercet 	:= aNFs[nPos][nPosColImp][nX][6][nY][2] 	//Percentual de calculo do imposto
				nVlBaseOri	:= aNFsOrig[nPos][nPosColImp][nX][6][nY][3] //Valor Base Original para calculo do imposto
				nVlrBase	:= aNFs[nPos][nPosColImp][nX][6][nY][3] 	//Valor Base para calculo do imposto
				nVlrImpost 	:= aNFsOrig[nPos][nPosColImp][nX][6][nY][4] //Valor Original do imposto

				//Transforma em porcentagem
				nPercet := nPercet / 100

				nImpostAtu := nVlrImpost

				if !empty(cTES)
					if DbSeek(xFilial("SFC") + cTES + cCodImpos)
						if SFC->FC_LIQUIDO == "S" //Considera o calculo sobre o valor liquido, entao faz o recalculo do valor e base do imposto

							//Recalcula a base do imposto
							nVlrBase := nVlrBase - (nVlBaseOri * nDescProp)

							//Recalcula o valor do imposto
							nImpostAtu  := nVlrBase * nPercet

							//Atualiza no array a base de calculo do imposto e o valor do imposto
							aNFs[nPos][nPosColImp][nX][6][nY][3] := nVlrBase	//Atualiza o Valor Base para calculo do imposto
							aNFs[nPos][nPosColImp][nX][6][nY][4] := nImpostAtu 	//Atualiza o Valor do imposto

						endif
					endif
				endif

				nVlrTotImp += nImpostAtu

			endif
		next nY
	endif
next nX

//Atualiza o Total Fatura
aFacs[nPos][nPosTotFat] += nVlrTotImp - aFacs[nPos][nPosImpMai]
aFacs[nPos][nPosImpMai] := nVlrTotImp //Atualiza o total de "(+)impostos"

//Atualiza o valor total de "(+)impostos" no array aNFs
aNFs[nPos][nLenNFS][3] := nVlrTotImp

aLstImpOri := {} //Limpa array, pois a base de calculo e valores dos impostos foram recalculados

SD2->(RestArea(aAreaSD2))
SC6->(RestArea(aAreaSC6))
Return


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468nChgCAEºAutor  ³Vendas CRM          ºFecha ³10/03/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Permite usuario alterar o CAE e CAI em casos de consignacaoº±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468nChgCAE(nPos,aNFs,oLbx,aFacs,nPosNfs,aTitles)
Local nClick 	:= oLbx:nColPos
Local cTmp
Local nSoma :=  IIf(Len(aTitles)=13,3,2)
Local nValAnt1 :=	oLbx:aArray[nPosNfs,IIf(Len(aTitles)=13,12,13)]
Local nValAnt2 :=	oLbx:aArray[nPosNfs,IIf(Len(aTitles)=13,13,14)]

If aTitles[nClick] == RetTitle('F2_CAE')
	cTmp := aFacs[nPos][nClick+nSoma]
ElseIf aTitles[nClick] == RetTitle('F2_CAI')
	cTmp := aFacs[nPos][nClick+nSoma]
EndIf

While .T.
	If aTitles[nClick] == RetTitle('F2_CAE')
		MaFisEditCell(@aFacs[nPos][nClick+nSoma],oLbx,"@E",nClick)
	ElseIf aTitles[nClick] == RetTitle('F2_CAI')
		MaFisEditCell(@aFacs[nPos][nClick+nSoma],oLbx,"@E",nClick)
	EndIf
	If LastKey() ==   27
		aFacs[nPos][nClick+2] :=	cTmp
	Else
		If aTitles[nClick] == RetTitle('F2_CAE')
			aNFs[nPosNfs][19] := aFacs[nPos][nClick+nSoma]
			If Len(aTitles) == 13
				oLbx:aArray[nPosNfs,12] := nValAnt1
			Else
				oLbx:aArray[nPosNfs,13] := nValAnt1
			EndIf
		ElseIf aTitles[nClick] == RetTitle('F2_CAI')
			aNFs[nPosNfs][20] := aFacs[nPos][nClick+nSoma]
			If Len(aTitles) == 13
				oLbx:aArray[nPosNfs,13] := nValAnt2
			Else
				oLbx:aArray[nPosNfs,14] := nValAnt2
			EndIf
		EndIf
	EndIf
	Exit
Enddo

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A468VldNumºAutor  ³ Vendas/CRM	     ºFecha ³  24/09/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida a numeração da fatura, buscando sempre a última     º±±
±±º          ³ numeração que foi utilizada e compara com a numeração      º±±
±±º          ³ disponível na tabela SX5.							      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA468N - Argentina                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A468VldNum(cSerNfs,cNumSx5)
Local aAlias	:= GetArea()
Local cNumAux 	:= ""
Local cAliasNew := ""
Local cQuery	:= ""
Local lNumDif	:= .F.


If  TamSX3("F2_SERIE")[1] == 14 //Projeto Chave Unica - TIago Silva
	cSerNfs:=SerieNfId("SF2",4,"F2_SERIE",dDataBase,cEspecie,cSerNfs,)
Endif

#IFDEF TOP
	cAliasNew := GetNextAlias()
	cQuery := "SELECT MAX(F2_DOC) F2_DOC FROM " + RetSqlName( "SF2" )
	cQuery += " WHERE F2_FILIAL = '" + xFilial( "SF2" ) + "' AND "
	cQuery += "	F2_SERIE = '"+cSerNfs+"' AND "
	cQuery += " F2_EMISSAO = '"+DTOS(dDataBase)+"' AND D_E_L_E_T_ = ' ' AND F2_FORMUL = 'S'"
	If (cPaisLoc == "ARG") .And. !Empty( cPontoVend )
		cQuery += " AND F2_PV = '" + cPontoVend + "'
	EndIf
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasNew,.F.,.T.)
	dbSelectArea(cAliasNew)
	If !(Eof()) .And. !Empty((cAliasNew)->F2_DOC)
		cNumAux := (cAliasNew)->F2_DOC
		If cNumSx5 >= Soma1(cNumAux,TamSX3("F2_DOC")[1])
			cNumSx5 := Soma1(cNumAux,TamSX3("F2_DOC")[1])
			lNumDif := .F.
		EndIf
	Else
		(cAliasNew)->(dbCloseArea())
		cAliasNew := GetNextAlias()
		cQuery := "SELECT MAX(F2_DOC) F2_DOC FROM " + RetSqlName( "SF2" )
		cQuery += " WHERE F2_FILIAL = '" + xFilial( "SF2" ) + "' AND F2_SERIE = '"+cSerNfs+"' AND "
		cQuery += "F2_EMISSAO < '"+DTOS(dDataBase)+"' AND D_E_L_E_T_ = ' ' AND F2_FORMUL = 'S'"
		If (cPaisLoc == "ARG") .And. !Empty( cPontoVend )
			cQuery += " AND F2_PV = '" + cPontoVend + "'
		EndIf
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasNew,.F.,.T.)
		dbSelectArea(cAliasNew)
		If !(Eof()) .And. !Empty((cAliasNew)->F2_DOC)
			cNumAux := (cAliasNew)->F2_DOC
			If cNumSx5 >= Soma1(cNumAux,TamSX3("F2_DOC")[1])
				cNumSx5 := Soma1(cNumAux,TamSX3("F2_DOC")[1])
				lNumDif := .F.
			EndIf
		EndIf
	EndIf
	If Select(cAliasNew) <> 0
		(cAliasNew)->(dbCloseArea())
	EndIf
#ENDIF

RestArea(aAlias)
Return lNumDif

//-------------------------------------------------------------------
/*/{Protheus.doc} a468ExtSer
Função utilizada para verificar se a série existe na SFP para o Ponto
de venda informado.

@author Leandro Prado
@since 24/02/2014
@version 1.0

/*/
//-------------------------------------------------------------------
Static Function a468ExtSer(cSerie)
Local lRet := .F.


("SFP")->(DbSetOrder(9))
If ("SFP")->(MsSeek(xFilial("SFP")+cPontoVend))

	While SFP->(!EOF()) .And. cPontoVend == SFP->FP_PV .And. SFP->FP_SERIE <> cSerie
		SFP->( DBSkip() )
	EndDo

	If SFP->FP_SERIE == cSerie
		IF SFP->FP_ATIVO <> "2"
			lRet := .T.
		Else
			Alert(STR0232)//"Não existe relacionamento entre o Ponto de Venda e a Série informada."
		EndIF
	Else
		Alert(STR0232)//"Não existe relacionamento entre o Ponto de Venda e a Série informada."
	EndIf

EndIf

Return lRet

/*ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿
  ³Fun‡ao    ³ ValidTRM    ³ Autor ³ Jonathan Gonzalez   ³ Data ³ 06/05/2016 ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Descri‡ao ³Valida la moneda y TRM de los pedidos o Remitos seleccionados  ³
  ³          ³para hacer su agrupacion.                                      ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Sintaxe   ³ ValidTRM( ExpA1 , ExpA2, ExpL1 )                              ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Parametros³ ExpC1 = campos de quebra                                      ³
  ³          ³ ExpN2 = Pedido o Remito a trabajar                            ³
  ³          ³ ExpL1 = valora booleano para saber si es pedido o remision    ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Uso       ³ a468nProces                                                   ³
  ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function ValidTRM( cQuebra , nRecs, lPedidos )
	Local aArea    := GetArea()
	Local cValor   := ""
	Local aValor   := {}

	If lPedidos
		SC9->(MsGoTo(nRecs))
		SC5->(DbSelectArea( "SC5" ))
		SC5->(DbSetOrder(3)) // C5_FILIAL+C5_CLIENTE+C5_LOJACLI+C5_NUM
		If SC5->(DbSeek( xFilial("SC5") + SC9->C9_CLIENTE + SC9->C9_LOJA + SC9->C9_PEDIDO ))
			If ALLTRIM(STR(SC5->C5_MOEDA)) == "1" .AND. SC5->C5_TRMPAC == "2"
				cQuebra := REPLACE(cQuebra, "SC5->C5_TRMPAC", "STR(SC5->C5_MOEDA)+SC5->C5_TRMPAC")
				cValor  := Alltrim( &(cQuebra) )
				AADD( aValor , cQuebra  )
				AADD( aValor , cValor )
			ElseIf ALLTRIM(STR(SC5->C5_MOEDA)) <> "1" .AND. SC5->C5_TRMPAC $ "|1|2|"
				cQuebra := REPLACE(cQuebra, "SC5->C5_TRMPAC", "STR(SC5->C5_MOEDA)+SC5->C5_TRMPAC+STR( SC5->C5_TXMOEDA )")
				cValor  := Alltrim( &(cQuebra) )
				AADD( aValor , cQuebra  )
				AADD( aValor , cValor )
			Else
				cValor  := Alltrim( &(cQuebra) )
				AADD( aValor , cQuebra  )
				AADD( aValor , cValor )
			EndIf
		EndIf
	Else
		SD2->(MsGoTo(nRecs))
		SF2->(DbSelectArea("SF2"))
		SF2->(dbSetOrder(1)) //F2_CLIENTE+F2_DOC+F2_SERIE+F2_CLIENTE+F2_LOJA+F2_FORMUL+F2_TIPO

		If SF2->( DbSeek( xFilial("SF2") + SD2->D2_DOC + SD2->D2_SERIE + SD2->D2_CLIENTE + SD2->D2_LOJA + SD2->D2_FORMUL ) )
			If ALLTRIM(STR(SF2->F2_MOEDA)) == "1" .AND. SF2->F2_TRMPAC == "2"
				cQuebra := REPLACE(cQuebra, "SF2->F2_TRMPAC", "STR(SF2->F2_MOEDA)+SF2->F2_TRMPAC")
				cValor  := Alltrim( &(cQuebra) )
				AADD( aValor , cQuebra  )
				AADD( aValor , cValor )
			ElseIf ALLTRIM(STR(SF2->F2_MOEDA)) <> "1" .AND. SF2->F2_TRMPAC $ "|1|2|"
				cQuebra := REPLACE(cQuebra, "SF2->F2_TRMPAC", "STR(SF2->F2_MOEDA)+SF2->F2_TRMPAC+STR( SF2->F2_TXMOEDA )")
				cValor  := Alltrim( &(cQuebra) )
				AADD( aValor , cQuebra  )
				AADD( aValor , cValor )
			Else
				cValor  := Alltrim( &(cQuebra) )
				AADD( aValor , cQuebra  )
				AADD( aValor , cValor )
			EndIf
		EndIf
	EndIf

	RestArea(aArea)
return aValor

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³ValCposRG3668³ Autor ³ Emanuel Villicaña     ³ Data ³20/03/15  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³Valida si las fechas son validas de los productos              ³±±
±±³          ³productos requeridos por RG 3668/14                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ValCposRG3668(ExpA1)                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³MATA468N                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ValCposRG3668()

	If AI0->(FieldPos("AI0_ADIC5")) > 0  .and. SF2->(FieldPos("F2_ADIC5")) > 0
		If !Empty(AI0->AI0_ADIC5) .And. !Empty(AI0->AI0_ADIC61) .And. !Empty(AI0->AI0_ADIC62) .And. !Empty(AI0->AI0_ADIC7) .and.;
			(SF2->F2_EMISSAO >= AI0->AI0_DESDE .and. SF2->F2_EMISSAO <= AI0->AI0_HASTA) ;
			.and. Empty(SF2->F2_ADIC5)
	    	Replace SF2->F2_ADIC5  With AI0->AI0_ADIC5
			Replace SF2->F2_ADIC61 With AI0->AI0_ADIC61
			Replace SF2->F2_ADIC62 With AI0->AI0_ADIC62
			Replace SF2->F2_ADIC7  With AI0->AI0_ADIC7
		EndIf
	EndIf

Return

/*ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿
  ³Fun‡ao    ³ RegFR3      ³ Autor ³ Raul Ortiz          ³ Data ³ 09/08/2016 ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Descri‡ao ³Registra en tabla FR3 la relacion del Pedidos con compensansion³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Sintaxe   ³ RegFR3( aPedV )                                               ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Parametros³ aPedV = pedido de venta                                       ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Uso       ³ a468nGera, a468nImp                                           ³
  ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Static Function RegFR3(aPedV)
	Local aAreaFIE	:= FIE->(GetArea())
	Local aAreaSE1	:= SE1->(GetArea())
	Local cClave 	:= xFilial("FIE") + "R"  + IIf(lPedidos .AND. cPaisLoc <> "PER", aPedV[6], SC9->C9_PEDIDO)
	Local aProrrat	:= {}
	Local nValor 	:= aPedV[19][1]
	Local nValImp	:= 0
	Local nI 		:= 0
	Local cFilSE1	:= xFilial("SE1")

	If nValor == 0
		For nI := 1 To Len(aPedV[13])
			nValor += aPedV[13][nI][2]
		Next nI
	EndIf

	DbSelectArea("FIE")
	DbSelectArea("SE1")

	FIE->(dbSetOrder(1)) //FIE_FILIAL+FIE_CART+FIE_PEDIDO

	If FIE->(DbSeek(cClave))
		aProrrat := ProrratPDV(aPedV[13], nValor)
		While FIE->(!(Eof())) .and. FIE->(FIE_FILIAL+FIE_CART+FIE_PEDIDO) == cClave
			SE1->(dbSetOrder(1)) //E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO
			If SE1->(DbSeek(cFilSE1 + FIE->FIE_PREFIX + FIE->FIE_NUM + FIE->FIE_PARCEL + FIE->FIE_TIPO))
				nValImp := SE1->E1_VALOR
			Else
				nValImp := 0
			EndIf
			AADD(aRegFIE, {FIE->FIE_CART,FIE->FIE_PEDIDO,FIE->FIE_PREFIX,FIE->FIE_PARCEL,FIE->FIE_TIPO,FIE->FIE_CLIENTE,FIE->FIE_LOJA,;
			IIf(cPaisLoc == "PER", FIE->FIE_SALDO, FIE->FIE_VALOR),FIE->FIE_NUM,aProrrat,nValImp})
			FIE->(DbSkip())
		Enddo
	EndIf

RestArea(aAreaSE1)
RestArea(aAreaFIE)
Return

/*ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿
  ³Fun‡ao    ³ ProrratPDV  ³ Autor ³ Raul Ortiz          ³ Data ³ 09/08/2016 ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Descri‡ao ³ Retorna cuota sobre el valor del pedido de venta entre comp.  ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Sintaxe   ³ ProrratPDV( aItems , nValor )                                 ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Parametros³ aItems = Pedido de Venta                                      ³
  ³          ³ nValor = Valor Bruto                                          ³
  ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
  ³Uso       ³ RegFR3                                                        ³
  ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function ProrratPDV(aItems, nValor)
	Local nItem		:= 0
	Local nPorc		:= 0
	Local aProrrat	:= {}

	For nItem := 1 To Len(aItems)
		If cPaisLoc == "PER"
			nPorc := nVlrAdiant/nValMerc
		Else
			nPorc := aItems[nItem][2]/nValor
		EndIf
		AADD(aProrrat,nPorc)
	Next
Return aProrrat

//DMA3-1379 - Merge 12.1.17 - Russia_R4 to Sustentacao and Main
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SX3Virtual  ³ Autor ³ ARodriguez         ³ Data ³ 04/06/19 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Arreglo de campos virtuales con inicializador Browse		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array de campos virtuales por agregar a MarkBrow() ³±±
±±³          ³ ExpA2 = Array de campos virtuales para crear tabla temporal³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpC3 = String de campos virtuales						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGAFAT                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function SX3Virtual(aCamposPE, aCamposV)
	Local aArea		:= GetArea()
	Local aAreaSX3	:= GetArea("SX3")
	Local xN		:= 0

	DbSelectArea("SX3")
	DbSetOrder(2)

	For xN := 1 to Len(aCamposPE)
		If DbSeek(aCamposPE[xN])
			If X3uso(X3_USADO) .And. cNivel >= X3_NIVEL .And. X3_BROWSE == "S" .And. X3_CONTEXT == "V" .And. !Empty(X3_INIBRW)
				AAdd(aCamposV, {X3_CAMPO, X3_TIPO, X3_TAMANHO, X3_DECIMAL, Alltrim(X3_INIBRW)} )
				cCamposV += Trim(X3_CAMPO) + "|"
			EndIf
		EndIf
	Next xN

	RestArea(aAreaSX3)
	RestArea(aArea)
Return cCamposV

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Sql2Trb     ³ Autor ³ ARodriguez         ³ Data ³ 04/06/19 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria temporario a partir de uma Query					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Query a ser processada							  ³±±
±±³          ³ ExpA2 = Array com estrutura do arquivo temporario		  ³±±
±±³          ³ ExpC3 = Nome do alias para o arquivo temporario			  ³±±
±±³          ³ ExpA4 = Array con campos virtuales						  ³±±
±±³          ³ ExpC5 = String con campos virtuales						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ TOPCONNECT (copiada de SqlToTrb)                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Sql2Trb( cQuery, aStruTmp, cAliasTmp, aCamposV, cCamposV )
Local nI		:= 0
Local nJ        := 0
Local nF        := 0
Local nG        := 0
Local nTotalRec := 0
Local aStruQry 	:= {}

Default aCamposV := {}
Default cCamposV := ""

cQuery := ChangeQuery(cQuery)
MsAguarde({|| dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "TMP", .F., .T.)}, STR0005)

For nJ := 1 to Len(aStruTmp)
	If !(aStruTmp[nJ,2] $ 'CM')
		TCSetField("TMP", aStruTmp[nJ,1], aStruTmp[nJ,2],aStruTmp[nJ,3],aStruTmp[nJ,4])
	EndIf
Next nJ

nTotalRec	:= TMP->(RecCount())
aStruQry	:= TMP->(DbStruct())
nF			:= Len(aStruQry)
nG			:= Len(aCamposV)
TMP->(DbGoTop())
ProcRegua( nTotalRec )

While ! TMP->(Eof())
	IncProc()
	(cAliasTmp)->(DbAppend())
	For nI := 1 To nF
		If aStruQry[nI,2] <> 'M' .And. !(Trim(aStruQry[nI,1]) $ cCamposV)
			(cAliasTmp)->(FieldPut(FieldPos(aStruQry[nI,1]),TMP->(FieldGet(TMP->(FieldPos(aStruQry[nI,1]))))))
		Endif
	Next nI

	// Llenar contenido de campos virtuales
	For nI := 1 To nG
		If lPedidos
			SC9->( DbGoto(TMP->RECNO) )
		Else
			SD2->( DbGoto(TMP->RECNO) )
		Endif
		bBlock := ErrorBlock( { |e| ChecErro(e) } )
		BEGIN SEQUENCE
			xResult := &(aCamposV[nI,5])
		RECOVER
			xResult := ""
		END SEQUENCE
		ErrorBlock(bBlock)

		If !Empty(xResult)
			(cAliasTmp)->(FieldPut(FieldPos(aCamposV[nI,1]), xResult))
		EndIf
	Next nI

	TMP->(DbSkip())
End

TMP->(dbCloseArea())
DbSelectArea(cAliasTmp)
Return cCamposV
/*/{Protheus.doc} M468GETSFP
Obtiene datos de tabla Control de Formularios (SFP)
@type function
@author luis.enriquez
@since 27/Noviembre/2019
@version 1.0
@return ${return}, ${aDatos}
/*/
Static Function M468GETSFP()
	Local aArea    := GetArea()
	Local cPtoEmi  := ""
	Local cEstabl  := ""
	Local aDatos   := {}

	DbSelectArea("SFP")
	SFP->(DbSetOrder(1)) //FP_FILIAL+FP_FILUSO+FP_SERIE+FP_CAI+FP_ESPECIE
	If (SFP->(DbSeek(xFilial("SFP") + cFilAnt + cSerie)))
		cPtoEmi := SFP->FP_PTOEMIS
		cEstabl := SFP->FP_ESTABL
	EndIf
	aDatos := {cPtoEmi,cEstabl}
	RestArea(aArea)
Return aDatos
/*/{Protheus.doc} M468ToPed
Obtiene el valor total del peido de venta
@type function
@parametros cPedido(Numero de pedido)
@author adrian.perez
@since 10/Marzo/2022
@version 1.0
@return , nToPedPar (total del pedido)
/*/
Static function M468ToPed(cPedido)

	Local aAreSC6Pa	:= SC6->(GetArea())
	Local aAreSD2Pa	:= SD2->(GetArea())
	Local nToPedPar := 0
	SC6->(dbSelectArea("SC6"))
	SC6->(DbSetOrder(1))

	If (SC6->(MsSeek(xFilial("SC6") + cPedido) ) )
		While SC6->(!EOF())  .and. SC6->C6_NUM==cPedido
			nToPedPar:=	nToPedPar+ SC6->C6_valor
			SC6->(dbSkip())
		EndDo
	EndIf
	SC6->(RestArea(aAreSC6Pa))
	SD2->(RestArea(aAreSD2Pa))
Return nToPedPar


/*/{Protheus.doc} a487Cores
Funcion para el control de las reglas de las leyendas de los títulos mostrados en el browse.
@type function
@parametros lPedidos(Indica si es un pedido o remisión)
@author oscar.lopez
@since 30/Abril/2021
@version 1.0
@return
/*/
Function a487Cores(lPedidos)

	Local aCores := {}

	If lPedidos
		AAdd(aCores, {'Empty(TRB->C9_NFISCAL)',		'BR_VERDE'})		//Pendientes de Facturar
		AAdd(aCores, {'!Empty(TRB->C9_NFISCAL)',	'BR_VERMELHO'})		//Facturados
	Else
		AAdd(aCores, {'( TRB->D2_QUANT - (TRB-> D2_QTDEFAT+TRB->D2_QTDEDEV)) > 0',	'BR_VERDE'})		//Pendientes de Facturar
		AAdd(aCores, {'( TRB->D2_QUANT - (TRB-> D2_QTDEFAT+TRB->D2_QTDEDEV)) <= 0',	'BR_VERMELHO'})		//Facturados
	EndIf

Return aCores

/*/{Protheus.doc} a468Legen
Muestra descripción de la leyenda
@type function
@parametros
@author oscar.lopez
@since 30/Abril/2021
@version 1.0
@return
/*/
Function a468Legen()

	Local aLegenda := { {"BR_VERDE"		,STR0250} ,;	//"Pendientes de facturar"
						{"BR_VERMELHO"	,STR0251} }		//"Facturados"

	BrwLegenda(STR0005, , aLegenda) //"Preparación de la Factura"

Return

/*/{Protheus.doc} LibMet468n
Función utilizada para validar la fecha de la LIB para ser utilizada en Telemetria
@type       Function
@author     Faturación
@since      2021
@version    12.1.27
@return     _lMetric, lógico, si la LIB puede ser utilizada para Telemetria
/*/
Static Function LibMet468n()

If _lMetric == Nil
	_lMetric := (FWLibVersion() >= "20210517") .And. FindClass('FWCustomMetrics')
EndIf

Return _lMetric

/*/{Protheus.doc} a468Legen
Obtiene el campo de libro fiscal y alicuota para el Impuesto de Promoción Municipal (IPM)
@type function
@parametros
@author luis.enriquez
@since 30/09/2021
@version 1.0
@return
/*/
Function a468ImpIPM()
	Local aAreaSFB  := SFB->(GetArea())
	Local cImpto    := "IPM"
	Local cCpoLvro  := "3"
	Local nAliqImp  := GetNewPar("MV_ALQIPM",0)

	DbSelectArea("SFB")
	SFB->(DbSetOrder(1)) //FB_FILIAL + FB_CODIGO

	If SFB->(MsSeek(xFilial("SFB") + cImpto))
		cCpoLvro := SFB->FB_CPOLVRO
		nAliqImp := SFB->FB_ALIQ
	EndIf

	RestArea(aAreaSFB)
Return { cCpoLvro, nAliqImp }

/*/{Protheus.doc} M468InfExp
	Obtiene datos para generacion de nodo exportacion cuando se genera pedido de venta, a partir de la serie seleccionada.
	@type  Function
	@author oscar.lopez
	@since 07/11/2021
	@version 1.0
	@param cFilSeri, string, Filial de la serie selecionada
	@param cSerDocto, string, Serie seleccionada
	@return aRet, array, Arreglo con información de punto emisión, establecimiento y numero de autorizacion
	@example
	M468InfExp(cFilSeri, cSerDocto)
	/*/
Function M468InfExp(cFilSeri, cSerDocto)
	Local aArea := GetArea()
	Local aRet	:= {}

	DbSelectArea("SFP")
	SFP->(DbSetOrder(5))//FP_FILIAL+FP_FILUSO+FP_SERIE+FP_ESPECIE+FP_PV
	IF SFP->(MsSeek(xFilial("SFP")+cFilSeri+cSerDocto+'1'))
		AAdd(aRet, SFP->FP_PTOEMIS)
		AAdd(aRet, SFP->FP_ESTABL)
		AAdd(aRet, SFP->FP_NUMAUT)
	EndIf
	RestArea(aArea)
Return aRet

/*/{Protheus.doc} M468InfExp
Obtener la Serie de Nota Fiscal basandose en el Tipo de Cliente.
@type  Function
@author raul.medina
@since 12/2021
@version 1.0
@return cSerie, Caracter,
@example
/*/
Static Function M468ser(cSerie)

If cPaisLoc == "ARG"
   If SA1->A1_TIPO $ "E"
      //³ Serie "E" qdo Cliente Tipo == "E" - Exportaci¢n.                   ³
      cSerie := "E  "
   ElseIf SA1->A1_TIPO $ "F-M-N-Z-X"
      //³ Serie "B" qdo Cliente Tipo == "F" - Consumidor Final.              ³
      //³                               "M" - Monotributista.                ³
      //³                               "N" - Responsavel No Inscripto.      ³
      //³                               "Z" - Sujeto No Categorizado.        ³
      //³                               "X" - Exento Subjetivo.              ³
      cSerie := "B  "
   Else
      //³ Serie "A" qdo Cliente Tipo == "I" - Responsavel Inscripto.         ³
      //³                               "Y" - Inscripto S/I.V.A.             ³
      cSerie := "A  "
   EndIf
Endif

Return (cSerie)

/*/{Protheus.doc} A468ChgRel
	Registra Serie/Folio NF relacionada en SF3
	@type    Static Function
	@author  ARodriguez
	@since   18/02/2022
	@version 1.0
	@param   nPos, n, Posición de aFacs (browse de facturas a generar)
	@param   aNFs, a, array de ítems de pedidos/remisiones a facturar
	@param   oLbx, o, Objeto visual de la ventana de facturas a generar
	@param   aFacs, a, arrary de facturas a generar
	@param   nPosNfs, n, Posición de aNFs
	@param   aTitles, a, arrary de títulos de columnas de facturas a generar
	@return  nil
/*/
Function A468ChgRel(nPos,aNFs,oLbx,aFacs,nPosNfs,aTitles)
Local oDlg			:= Nil
Local nLenFacs		:= Len(aFacs[1])
Local lRet			:= .T.

Private cSerOri		:= ""
Private cNFRef		:= ""
Private cUUIDRel	:= ""
Private cEspecie	:= ""	// Consulta a SF3

If nPos > 0

	cSerOri  := aFacs[nPos][nLenFacs-3]
	cNFRef   := aFacs[nPos][nLenFacs-2]
	cUUIDRel := aFacs[nPos][nLenFacs-1]
	cEspecie := PadR(MVNOTAFIS,GetSX3Cache("F2_ESPECIE", "X3_TAMANHO"))

	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0269) FROM 180,180 TO 350,700 PIXEL //"Relación con CFDI a Sustituir"
	@ 010,010 SAY OemToAnsi(STR0051) OF oDlg PIXEL //"Serie"
	@ 008,035 MSGET cSerOri PICTURE "@!" OF oDlg PIXEL VALID A468ValRel(cSerOri,cNFRef,@cUUIDRel,1) F3 "DOCSUS"
	@ 025,010 SAY OemToAnsi(STR0050) OF oDlg PIXEL //"Factura"
	@ 023,035 MSGET cNFRef PICTURE "@!" OF oDlg PIXEL VALID A468ValRel(cSerOri,cNFRef,@cUUIDRel,1)
	@ 040,010 SAY OemToAnsi(STR0270) OF oDlg PIXEL //"UUID"
	@ 038,035 MSGET cUUIDRel PICTURE "@!" OF oDlg PIXEL WHEN .F.
	DEFINE SBUTTON FROM 060,200 TYPE 1 ENABLE OF oDlg ACTION (lRet := A468ValRel(cSerOri, cNFRef, cUUIDRel,2), IIf(lRet,oDlg:End(),))
	DEFINE SBUTTON FROM 060,230 TYPE 2 ENABLE OF oDlg ACTION (lRet := .F., oDlg:End())
	ACTIVATE MSDIALOG oDlg CENTERED

	If lRet
		aFacs[nPos][nLenFacs-3] := cSerOri
		aFacs[nPos][nLenFacs-2] := cNFRef
		aFacs[nPos][nLenFacs-1] := cUUIDRel
	EndIf

EndIf

Return Nil

/*/{Protheus.doc} A468ValRel
	Valida Serie/Folio NF relacionada en SF3, como factura cancelada y CFDI pendiente de timbrar
	@type    Static Function
	@author  ARodriguez
	@since   21/02/2022
	@version 1.0
	@param   cSerOri, c, Serie NF
	@param   cNFRef, c, Folio NF
	@param   cUUIDRel, c, Folio fiscal
	@param   nVal, n, Opción de validación; 2 para finalizar
	@return  lRet, l, ok?
/*/
Static Function A468ValRel(cSerOri,cNFRef,cUUIDRel,nVal)
Local cAliasQry	:= GetNextAlias()
Local cDtCanc	:= ""
Local cUUIDs	:= ""
Local lRet		:= .T.

If !Empty(cSerOri) .And. !Empty(cNFRef)
	BeginSQL Alias cAliasQry
		SELECT F3_DTCANC, F3_CNATREC, F3_STATUS
			FROM %Table:SF3% SF3
			WHERE F3_FILIAL = (%exp:XFILIAL("SF3")%)
			AND SF3.F3_SERIE = %Exp:cSerOri%
			AND SF3.F3_NFISCAL = %Exp:cNFRef%
			AND SF3.F3_TIPOMOV = 'V'
			AND SF3.F3_ESPECIE = %Exp:MVNOTAFIS%
			AND SF3.%NotDel%
	EndSQL

	cUUIDRel := Space(Len(cUUIDRel))

	If (cAliasQry)->(Eof())
		Aviso(OemToAnsi(STR0009),OemToAnsi(STR0271),{OemToAnsi(STR0176)}) //"La factura no existe."
		lRet := .F.

	Else
		Do While (cAliasQry)->(!Eof())
			If !Empty((cAliasQry)->F3_CNATREC) .And. (cAliasQry)->F3_STATUS == 'S'
				cDtCanc := (cAliasQry)->F3_DTCANC
				cUUIDRel := (cAliasQry)->F3_CNATREC
				Exit
			EndIf
			(cAliasQry)->(dbSkip())
		Enddo

		(cAliasQry)->(dbCloseArea())

		If Empty(cUUIDRel)
			Aviso(OemToAnsi(STR0009),OemToAnsi(STR0272),{OemToAnsi(STR0176)}) //"La factura no está cancelada o ya se obtuvo acuse de la cancelación."
			lRet := .F.

		Else
			// Query de facturas emitidas a partir de la fecha de cancelación del CFDI relacionado
			BeginSQL Alias cAliasQry
				SELECT R_E_C_N_O_
					FROM %Table:SF2% SF2
					WHERE F2_FILIAL = (%exp:XFILIAL("SF2")%)
					AND SF2.F2_TIPODOC = '01'
					AND SF2.F2_ESPECIE = %Exp:MVNOTAFIS%
					AND SF2.F2_RELSAT = '04'
					AND SF2.F2_EMISSAO >= %Exp:cDtCanc%
					AND SF2.%NotDel%
			EndSQL

			Do While (cAliasQry)->(!Eof())
				SF2->(dbGoto((cAliasQry)->R_E_C_N_O_))
				cUUIDs := SF2->F2_UUIDREL
				If !Empty(cUUIDs) .And. cUUIDRel $ cUUIDs
					Aviso(OemToAnsi(STR0009),OemToAnsi(STR0273)+SF2->(F2_SERIE+"/"+F2_DOC),{OemToAnsi(STR0176)}) //"El folio fiscal ya está relacionado a la factura "
					lRet := .F.
					Exit
				EndIf
				(cAliasQry)->(dbSkip())
			Enddo

			(cAliasQry)->(dbCloseArea())

		EndIf

	EndIf

ElseIf Empty(cSerOri) .And. Empty(cNFRef)
	cUUIDRel := Space(Len(cUUIDRel))

ElseIf nVal == 2
	Aviso(OemToAnsi(STR0009),OemToAnsi(STR0274),{OemToAnsi(STR0176)}) //"Debe definir serie y número de factura o dejar ambos campos en blanco."
	lRet := .F.

EndIf

Return lRet
