#INCLUDE "MATA450.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWLIBVERSION.CH"

//Posicoes do array aSaldos
#DEFINE _LIMCREDM 1,1
#DEFINE _LIMCRED  1,2
#DEFINE _SALDUPM  2,1
#DEFINE _SALDUP   2,2
#DEFINE _SALPEDLM 3,1
#DEFINE _SALPEDL  3,2
#DEFINE _MCOMPRAM 4,1
#DEFINE _MCOMPRA  4,2
#DEFINE _SALDOLCM 5,1
#DEFINE _SALDOLC  5,2
#DEFINE _MAIDUPLM 6,1
#DEFINE _MAIDUPL  6,2
#DEFINE _ITATUM   7,1
#DEFINE _ITATU    7,2
#DEFINE _PEDATUM  8,1
#DEFINE _PEDATU   8,2
#DEFINE _SALPEDM  9,1
#DEFINE _SALPED   9,2
#DEFINE _VALATRM  10,1
#DEFINE _VALATR   10,2
#DEFINE _LCFINM   11,1
#DEFINE _LCFIN    11,2
#DEFINE _SALFINM  12,1
#DEFINE _SALFIN   12,2

#DEFINE _STRASALDOS 12,2

#DEFINE BR_LC      01
#DEFINE BR_LCFIN   02
#DEFINE BR_SALDUP  03
#DEFINE BR_SALDUPM 04
#DEFINE BR_SALFIN  05
#DEFINE BR_SALFINM 06
#DEFINE BR_SALPED  07
#DEFINE BR_SALPEDB 08
#DEFINE BR_SALPEDL 09
#DEFINE BR_MCOMPRA 10
#DEFINE BR_MAIDUPL 11
#DEFINE BR_MSALDO  12
#DEFINE BR_PAGATR  13
#DEFINE BR_NROPAG  14
#DEFINE BR_METR    15
#DEFINE BR_TITPROT 16
#DEFINE BR_DTULTIT 17
#DEFINE BR_CHQDEVO 18
#DEFINE BR_DTULCHQ 19
#DEFINE BR_PRICOM  20
#DEFINE BR_ULTCOM  21
#DEFINE BR_ULTVIS  22
#DEFINE BR_NROCOM  23

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MATA450A  ³ Autor ³ Eduardo Riera         ³ Data ³28.01.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Analise de Credito / Cliente                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATA450A()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea       := GetArea()
Local aBrowse     := {}
Local cAliasTRB   := ""
Local cNomeTRB    := ""
Local cAliasPed   := ""
Local cNomePed    := ""
Local aUsRotina   := {}
Local aFieldsLgpd		  := {}

Private oTempTbTrb	:= Nil
Private oTempTbPed	:= Nil

Private  cFiltro		:= ""
Private  cFiltro2		:= ""
PRIVATE cCadastro := OemToAnsi(STR0061) //"Analise de Credito - (Cliente)"
PRIVATE b450Pcli  := {|lEnd,lCria| Ma450PCli(@cAliasTRB,@cNomeTRB,@aBrowse,lEnd,lCria,@cAliasPed,@cNomePed, @oTempTbTrb, @oTempTbPed, @aFieldsLgpd )}
PRIVATE aRotina   := MenuDef()
	
If VerSenha(136)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de entrada para adicao ao menu de rotinas feitas pelo usuario     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("M450AROT")
		aUsRotina := ExecBlock("M450AROT",.F.,.F.)
		If ValType(aUsRotina) == "A"
			AEval(aUsRotina, {|x| AAdd( aRotina, x )})
		EndIf
	EndIf
	cAliasTRB 	:= "TRB"
	cAliasPed	:= "PED" 
		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Montagem da tabela temporaria                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Processa(b450PCli,,,.T.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Interface da tabela temporaria                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	mBrowse( 7, 4, 20, 74, "TRB", aBrowse,,,,,,,,,,,,,,,,,,, aFieldsLgpd)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Restaura a integridade da rotina                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	(cAliasTRB)->( DbCloseArea() )
	(cAliasPed)->( DbCloseArea() )
	//---------------------------------
	//Exclui  tabelas temporárias 
	//---------------------------------
	
	If( valtype(oTempTbTrb) == "O")
		oTempTbTrb:Delete()
		freeObj(oTempTbTrb)
		oTempTbTrb := nil
	EndIf
	
	If( valtype(oTempTbPed) == "O")
		oTempTbPed:Delete()
		freeObj(oTempTbPed)
		oTempTbPed := nil
	EndIf
	
Else
	HELP(" ",1,"SEMPERM")
Endif
dbSelectArea("SA1")
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Ma450PCli ³ Autor ³ Eduardo Riera         ³ Data ³27.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de montagem do arquivo de trabalho para a liberacao de³±±
±±³          ³credito por cliente                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias da tabela temporaria (inicializado na rotina)   ³±±
±±³          ³ExpC2: Nome fisico do arquivo temporario (idem ao anterior)  ³±±
±±³          ³ExpA3: Array com os dados a serem exibidos na MBrowse        ³±±
±±³          ³       [1] Titulo da coluna a ser exibida                    ³±±
±±³          ³       [2] Nome do campo                                     ³±±
±±³          ³       [3] Tipo do campo                                     ³±±
±±³          ³       [4] Tamanho do campo                                  ³±±
±±³          ³       [6] Decimal do campo                                  ³±±
±±³          ³       [7] Picture do campo                                  ³±±
±±³          ³ExpL5: Controle de finalizacao do usuario                    ³±±
±±³          ³ExpL6: Indica se o arquivo temporario deve ser criado        ³±±
±±³          ³ExpC7: Alias da tabela temporaria (inicializado na rotina)   ³±±
±±³          ³ExpC8: Nome fisico do arquivo temporario (idem ao anterior)  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo criar e atualizar o arquivo    ³±±
±±³          ³temporario a ser exibido para processamento da liberacao de  ³±±
±±³          ³credito por cliente.                                         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA450A                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma450PCli(cAliasTrb,cNomeTrb,aBrowse,lEnd,lCria,cAliasPed,cNomePed, oTempTbTrb, oTempTbPed, aFieldsLgpd )

Local aArea   	:= GetArea()
Local aStruSA1  	:= {}
Local aStruSC5  	:= {}
Local cQuery    	:= ""
Local cAliasSA1 	:= "SA1"
Local cAliasSC5 	:= "SC5"
Local cAliasSC9 	:= "SC9"
Local lEmpresa  	:= FWModeAccess("SA1",3)=="C"
Local nX        	:= 0
Local cInsert		:= ""
Local cBlob         := ""	
Local nValor		:= 0
Local nMCUSTO		:= Val(SuperGetMv("MV_MCUSTO"))
Local aFieldsOfs	:= {}
Local aFieldsBrow 	:= {}	

Local cDicCampo     := ""
Local cDicBrowse    := ""
Local cDicContex    := ""
Local cDicTipo      := ""
Local nDicTam       := 0
Local nDicDec       := 0
Local cDicTitulo    := ""
Local cDicPict      := ""

Default oTempTbTrb	:= Nil 
Default oTempTbPed	:= Nil 
DEFAULT cAliasTRB   := ""
DEFAULT cNomeTrb    := ""
DEFAULT aBrowse     := {}
DEFAULT lCria       := .T.
DEFAULT aFieldsLgpd := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Cria os arquivos de trabalho                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

M450DicIni("SA1")
cDicCampo  := M450RetCmp()
cDicArq    := cValToChar(GetSX3Cache(cDicCampo, "X3_ARQUIVO"))

While !M450DicEOF() .And. cDicArq == "SA1"
	
	cDicBrowse := GetSX3Cache(cDicCampo, "X3_BROWSE")
	cDicContex := GetSX3Cache(cDicCampo, "X3_CONTEXT")
	cDicTipo   := GetSX3Cache(cDicCampo, "X3_TIPO")

	If (cDicBrowse == "S" .Or. AllTrim(cDicCampo)$"A1_COD,A1_LOJA,A1_NOME") .And. cDicContex <> "V" .AND. cDicTipo <> "M"
		nDicTam    := GetSX3Cache(cDicCampo, "X3_TAMANHO")
		nDicDec    := GetSX3Cache(cDicCampo, "X3_DECIMAL")
		cDicTitulo := M450DicTit(cDicCampo)
		cDicPict   := X3Picture(cDicCampo)

		aadd(aStruSA1,{ cDicCampo, cDicTipo, nDicTam, nDicDec })
		aadd(aBrowse,{cDicTitulo,cDicCampo,cDicTipo,nDicTam,nDicDec,cDicPict,,,,,,AllTrim(cDicCampo)})
		aAdd(aFieldsBrow,SX3->X3_CAMPO)
	EndIf

	M450PrxDic()
	cDicCampo := M450RetCmp()
	cDicArq   := cValToChar(GetSX3Cache(cDicCampo, "X3_ARQUIVO"))
	
EndDo

If FATPDActive() .And. FTPDUse(.T.)
	FATPDLoad(Nil,Nil,aFieldsBrow,Nil)
	aFieldsOfs := FATPDColObfuscate(aFieldsBrow)

	For nX := 1 To Len(aFieldsBrow)
		If aFieldsOfs[nX]
			aAdd(aFieldsLgpd,aFieldsBrow[nX])
		EndIf
	Next

	FATPDUnload()
EndIf

aadd(aStruSC5,{"C5_VALOR","N",18,2})

M450DicIni("SC5")
cDicCampo  := M450RetCmp()
cDicArq    := cValToChar(GetSX3Cache(cDicCampo, "X3_ARQUIVO"))

While !M450DicEOF() .And. cDicArq == "SC5"

	cDicBrowse := GetSX3Cache(cDicCampo, "X3_BROWSE")
	cDicContex := GetSX3Cache(cDicCampo, "X3_CONTEXT")
	cDicTipo   := GetSX3Cache(cDicCampo, "X3_TIPO")

	If (cDicBrowse == "S" .Or. AllTrim(cDicCampo)$"C5_FILIAL,C5_CLIENTE,C5_LOJACLI") .And. cDicContex <> "V" .AND. cDicTipo <> "M"
		nDicTam    := GetSX3Cache(cDicCampo, "X3_TAMANHO")
		nDicDec    := GetSX3Cache(cDicCampo, "X3_DECIMAL")
				
		aadd(aStruSC5,{ cDicCampo, cDicTipo, nDicTam, nDicDec })
	EndIf

	M450PrxDic()
	cDicCampo := M450RetCmp()
	cDicArq   := cValToChar(GetSX3Cache(cDicCampo, "X3_ARQUIVO"))

EndDo

aadd(aStruSC5,{"C5_FLAG","L",1,0})

If( valtype(oTempTbTrb) == "O")
	oTempTbTrb:Delete()
	freeObj(oTempTbTrb)
	oTempTbTrb := nil
EndIf

If( valtype(oTempTbPed) == "O")
	oTempTbPed:Delete()
	freeObj(oTempTbPed)
	oTempTbPed := nil
EndIf

//-------------------------------------------------------------------
// Estrutura tabela temporaria TRB.  
//-------------------------------------------------------------------
oTempTbTrb	:= FWTemporaryTable():New( cAliasTRB )

//-------------------------------------------------------------------
// Estrutura tabela temporaria PED.  
//-------------------------------------------------------------------
oTempTbPed	:= FWTemporaryTable():New( cAliasPed )

//-------------------------------------------------------------------
// Atribui o  os índices.  
//-------------------------------------------------------------------
oTempTbTrb:SetFields( aStruSA1 )
oTempTbTrb:AddIndex("1",{"A1_COD","A1_LOJA"})

//------------------
//Criação da tabela
//------------------
oTempTbTrb:Create()

(cAliasTRB)->( DBSetOrder( 1 ) ) 
	
//-------------------------------------------------------------------
// Atribui o  os índices.  
//-------------------------------------------------------------------
oTempTbPed:SetFields( aStruSC5 )
oTempTbPed:AddIndex("1",{"C5_CLIENTE", "C5_LOJACLI", "C5_NUM"})

//------------------
//Criação da tabela
//------------------
oTempTbPed:Create()

(cAliasPed)->( DBSetOrder( 1 ) ) 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Preenche o arquivo temporario                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

cAliasSC5 := "Ma450PCli"
cAliasSC9 := "Ma450PCli"
cAliasSA1 := "Ma450PCli"

cQuery    := "SELECT SC9.C9_CLIENTE,SC9.C9_LOJA"
For nX := 1 To Len(aStruSA1)
	cQuery += ",SA1."+aStruSA1[nX][1]+" "
Next nX

For nX := 1 To Len(AStruSC5)
	If AStruSC5[nX][1]<>"C5_FLAG" .And. AStruSC5[nX][1]<>"C5_VALOR"
		cQuery += ",SC5."+AStruSC5[nX][1]+" "
	EndIf
Next nX

cQuery += ",SC5.C5_MOEDA,SC9.C9_PEDIDO,SC9.C9_PRCVEN,SC9.C9_QTDLIB,SA1.A1_MOEDALC "
cQuery += "FROM "+RetSqlName("SC9")+" SC9, "
cQuery += RetSqlName("SA1")+" SA1, "
cQuery += RetSqlName("SC5")+" SC5  "
cQuery += "WHERE "
If !lEmpresa
	cQuery    += "SC9.C9_FILIAL = '"+xFilial("SC9")+"' AND "		
EndIf
cQuery += "SC9.C9_BLCRED<>'"+Repl(" ",Len(SC9->C9_BLCRED))+"' AND "
cQuery += "SC9.C9_BLCRED<>'10' AND "
cQuery += "SC9.C9_BLCRED<>'ZZ' AND "
cQuery += "SC9.C9_BLCRED<>'09' AND "
cQuery += "SC9.D_E_L_E_T_=' ' AND "
cQuery += "SA1.A1_FILIAL='"+xFilial("SA1")+"' AND "
cQuery += "SA1.A1_COD = SC9.C9_CLIENTE AND "
cQuery += "SA1.A1_LOJA = SC9.C9_LOJA AND "
cQuery += "SA1.D_E_L_E_T_=' ' AND "

If !lEmpresa
	cQuery += "SC5.C5_FILIAL='"+xFilial("SC5")+"' AND "
Else
	cQuery += "SC5.C5_FILIAL=SC9.C9_FILIAL AND "
EndIf
cQuery += "SC5.C5_NUM=SC9.C9_PEDIDO AND "
cQuery += "SC5.D_E_L_E_T_=' ' "

If ExistBlock("M450ABRW")
	cQuery := ExecBlock('M450ABRW',.F.,.F.,{ cQuery })
EndIf

cQuery += "ORDER BY SC9.C9_CLIENTE,SC9.C9_LOJA,SC9.C9_PEDIDO,SC9.C9_ITEM "
cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC9,.T.,.T.)

For nX := 1 To Len(aStruSA1)
	If aStruSA1[nX][2]<>"C"
		TcSetField(cAliasSC9,aStruSA1[nX][1],aStruSA1[nX][2],aStruSA1[nX][3],aStruSA1[nX][4])
	EndIf
Next nX                           

For nX := 1 To Len(aStruSC5)
	If aStruSC5[nX][2]<>"C"
		TcSetField(cAliasSC9,aStruSC5[nX][1],aStruSC5[nX][2],aStruSC5[nX][3],aStruSC5[nX][4])
	EndIf
Next nX
	
dbSelectArea(cAliasSC9)
ProcRegua((cAliasSC9)->(LastRec()))

While !Eof()	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o cliente ja foi incluido                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea(cAliasTRB)
	
	If !MsSeek((cAliasSC9)->C9_CLIENTE+(cAliasSC9)->C9_LOJA)
		cInsert := "INSERT INTO "+oTempTbTrb:GetRealName()+" ("  
		
		For nX := 1 to Len(aStruSA1)
			If aStruSA1[nX][2] <> "M"
				cInsert += aStruSA1[nX][1]
				If nX < Len(aStruSA1)
					cInsert += ","
				EndIf
			EndIf			
		Next
		cInsert += " ) "
		 
		cInsert += "Values (" 
		For nX := 1 to Len(aStruSA1)
			If aStruSA1[nX][2] == "D"
				cInsert +=  "'" + DTOS((cAliasSA1)->(FieldGet(FieldPos(aStruSA1[nX][1])))) + "'"
			ElseIf aStruSA1[nX][2] $ "C"
				cInsert += "'" + StrTran( (cAliasSA1)->(FieldGet(FieldPos(aStruSA1[nX][1]))), "'", "''") + "'"
			ElseIf aStruSA1[nX][2] == "N"
				cInsert +=  Str((cAliasSA1)->(FieldGet(FieldPos(aStruSA1[nX][1])))) 
			EndIf
			If nX < Len(aStruSA1)
				cInsert += ","
			EndIf			
		Next
		cInsert += " ) "
	
		If TcSqlExec(cInsert) < 0
			Conout("TCSQLError() " + TCSQLError())
		Else
			TCRefresh(oTempTbTrb:GetRealName()) 
		endif
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o pedido ja foi incluido                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea(cAliasPed)

	If !MsSeek((cAliasSC9)->C9_CLIENTE+(cAliasSC9)->C9_LOJA+(cAliasSC9)->C9_PEDIDO)
		
		(cAliasPed)->( DBAppend( .F. ) )
		For nX := 1 To Len( aStruSC5 )
				Do Case
					Case aStruSC5[nX][1] == "C5_VALOR"
						nValor := xMoeda(A410Arred((cAliasSC9)->C9_PRCVEN*(cAliasSC9)->C9_QTDLIB,"C6_VALOR"),(cAliasSC5)->C5_MOEDA,IIf((cAliasSA1)->A1_MOEDALC>0,(cAliasSA1)->A1_MOEDALC,nMCUSTO))	
						(cAliasPed)->( FieldPut( nX, nValor ) )
					
					Case aStruSC5[nX][2] == "M"
						SC5->( DbSetOrder(1) ) 
						If SC5->( DbSeek( (cAliasSC5)->C5_FILIAL + (cAliasSC5)->C5_NUM  ) )
							cBlob := SC5->(FieldGet(FieldPos(aStruSC5[nX][1])))
							If !Empty( cBlob )
								(cAliasPed)->( FieldPut( nX, cBlob ) )
							EndIf
							
						EndIf
					
					Case aStruSC5[nX][1] == "C5_FLAG"
						(cAliasPed)->( FieldPut( nX, .F. ) ) 
					
					Otherwise
						(cAliasPed)->( FieldPut( nX, (cAliasSC5)->(FieldGet(FieldPos(aStruSC5[nX][1])))) ) 	
				
				EndCase			
		Next nX
		(cAliasPed)->( DBCommit() )
	ElseIf MsSeek((cAliasSC9)->C9_CLIENTE+(cAliasSC9)->C9_LOJA+(cAliasSC9)->C9_PEDIDO)
		For nX := 1 To Len( aStruSC5 )
			If aStruSC5[nX][1] == "C5_VALOR"
				nValor += xMoeda(A410Arred((cAliasSC9)->C9_PRCVEN*(cAliasSC9)->C9_QTDLIB,"C6_VALOR"),(cAliasSC5)->C5_MOEDA,IIf((cAliasSA1)->A1_MOEDALC>0,(cAliasSA1)->A1_MOEDALC,nMCUSTO))	
				(cAliasPed)->( FieldPut( nX, nValor ) )
			EndIf		
		Next nX
	EndIf

	If lEnd
		Exit
	EndIf
	IncProc()
	dbSelectArea(cAliasSC9)
	dbSkip()
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a integridade da rotina                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

(cAliasSC9)->( DbCloseArea() )

dbSelectArea("SC9")
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Ma450ClMan³ Autor ³ Eduardo Riera         ³ Data ³27.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Interface da rotina de liberacao de credito manual por       ³±±
±±³          ³cliente                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias da tabela temporaria                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo realizar a interface da libera-³±±
±±³          ³cao de credito por cliente e atualizar as tabela necessarias ³±±
±±³          ³conforme a liberacao/rejeicao efetuada.                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA450A                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma450ClMan( cAliasTrb , nOpcX )

Local aArea		:= GetArea()
Local aAreaSM0	:= SM0->(GetArea())
Local aAreaSC9	:= SC9->(GetArea())
Local aSize		:= MsAdvSize( .F. )
Local aObjects	:= {}
Local aInfo		:= {}
Local aPosObj		:= {}
Local aBrowse		:= {}
Local aValor		:= Array(23)
Local aRegSC6		:= {}
Local bWhile		:= {|| !Eof()}
Local nMCustoCL	:= 0
Local nMCustoCL2	:= 0
Local nMCusto		:= 0
Local nSaldoLC	:= 0
Local nIdealLC	:= 0
Local nOpcA		:= 0
Local nValAtraso	:= 0
Local nTpLiber	:= 1
Local nVlrLiber	:= 0
Local nTmC9PRCVEN	:= GetSX3Cache("C9_PRCVEN","X3_TAMANHO") // Tamanho do campo
Local nDcC9PRCVEN	:= GetSX3Cache("C9_PRCVEN","X3_DECIMAL") // Decimais do campo
Local nTmC9QTDLIB	:= GetSX3Cache("C9_QTDLIB","X3_TAMANHO") // Tamanho do campo
Local nDcC9QTDLIB	:= GetSX3Cache("C9_QTDLIB","X3_DECIMAL") // Decimais do campo 
Local cQuebra		:= ""
Local cTexto1		:= ""
Local cTexto2		:= ""
Local cMoeda1		:= ""
Local cMoedaLC	:= ""
Local cSavFil		:= cFilAnt
Local cAliasSA1	:= "SA1"
Local cAliasSC5	:= "SC5"
Local cAliasSC9	:= "SC9"
Local cEmpresa	:= ""
Local lSA1			:= .F.
Local lValido		:= .F.
Local lEnd			:= .F.
Local lContinua	:= .T.
Local lGestao		:= IIf(FWSizeFilial() > 2, .T., .F.)
Local lPosicion	:= .F.
Local lTPMTA450I	:= ExistTemplate("MTA450I")
Local lPEMTA450I	:= ExistBlock("MTA450I")
Local lPEMTA450R	:= ExistBlock("MTA450R")
Local lPEMT450RP	:= ExistBlock("MTA450RP")
Local lPEMT450CL	:= ExistBlock("MTA450CL")
Local nTam			:= 0
Local cEmpAtu		:= ""
Local nSalvEmp	:= 0
Local oPanel
Local oDlg
Local oColuna
Local oColuna1
Local oColuna2
Local oColuna3
Local oColuna4
Local oColuna5
Local oColuna6
Local oBrowse
Local oGetDB
Local oRadio
Local oMsGet
Local oQryLib
Local aButtons
Local nPosBtn
Local nQtBtn
Local oBtn
Local oMenu
Local cFilSA1		:= ""
Local aPDCols	:= {}
Local lPDColObf		:= .F.
Local aPDColFie		:= {}
Local aPDFields     := {"A1_LC","A1_LCFIN","A1_SALFIN","A1_SALFINM","A1_PAGATR","A1_METR","A1_TITPROT","A1_CHQDEVO","A1_NOME","A1_RISCO","A1_CLASSE","C5_CGCINT","C5_IMINT"}
Local aSetField		:= {}
Local cDicCampo     := ""
Local cDicArq       := ""
Local cDicBrowse    := ""
Local cDicContex    := ""
Local cDicTitulo    := ""
Local cDicPicture   := ""
Local nDicTam       := 0
Local nDicDec       := 0
Local cDicValid     := ""
Local cDicUsado     := ""
Local cDicTipo      := ""
Local cQuery		:= ""
Local lUseOffBal 	:= FindFunction( "RskIsActive" ) .And. RskIsActive()
Local lRskBtnWhen 	:= !lUseOffBal .Or. ( lUseOffBal .And. RskType() == 2 ) 	//2=OFFBalance
Local lVerLib		:= FWLibVersion() >= "20211116"
Local nX 			:= 0

Default nOpcX		:= 0

Private aHeader	:= {}

If !ctbValiDt( Nil, dDataBase, .T., Nil, Nil, { "FAT002" }, Nil )
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aheader                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aadd(aHeader,{RetTitle("C6_VALOR"),"C5_VALOR",PesqPict("SC6","C6_VALOR",18,2),18,2,"","","N","TRB",""})
aAdd(aPDColFie,"C6_VALOR")

M450DicIni("SC5")
cDicCampo  := M450RetCmp()
cDicArq    := cValToChar(GetSX3Cache(cDicCampo, "X3_ARQUIVO"))

While !M450DicEOF() .And. cDicArq == "SC5"

	cDicBrowse := GetSX3Cache(cDicCampo, "X3_BROWSE")
	cDicContex := GetSX3Cache(cDicCampo, "X3_CONTEXT")
	
	If	cDicBrowse == "S" .or. AllTrim(cDicCampo) == "C5_FILIAL"

		cDicTitulo  := M450DicTit(cDicCampo)
		cDicPicture := X3Picture(cDicCampo)
		nDicTam     := GetSX3Cache(cDicCampo, "X3_TAMANHO")
		nDicDec     := GetSX3Cache(cDicCampo, "X3_DECIMAL")
		cDicValid   := GetSX3Cache(cDicCampo, "X3_VALID")
		cDicUsado   := GetSX3Cache(cDicCampo, "X3_USADO")
		cDicTipo    := GetSX3Cache(cDicCampo, "X3_TIPO")

		aAdd(aHeader,{AllTrim(cDicTitulo),;
		                      cDicCampo,;
		                      cDicPicture,;
		                      nDicTam,;
		                      nDicDec,;
		                      cDicValid,;
		                      cDicUsado,;
		                      cDicTipo,;
		                      cDicArq,;
		                      cDicContex})
		aAdd(aPDColFie, cDicCampo)
	EndIf
	
	M450PrxDic()
	cDicCampo := M450RetCmp()
	cDicArq   := cValToChar(GetSX3Cache(cDicCampo, "X3_ARQUIVO"))

EndDo

FATPDLoad(Nil,Nil,aPDColFie,Nil)
aPDCols := FATPDColObfuscate(aPDColFie)
FATPDUnload()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona registros                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SA1->(dbSetOrder(1))
SA1->(MsSeek(xFilial("SA1")+(cAliasTRB)->A1_COD+(cAliasTRB)->A1_LOJA))
nMCusto   := Val(SuperGetMv("MV_MCUSTO"))
nMCustoCL := IIf(SA1->A1_MOEDALC > 0,SA1->A1_MOEDALC,nMCusto)

cMCusto   := " "+Pad(SuperGetMv("MV_SIMB"+AllTrim(STR(nMCusto))),4)
cMoedaLC  := " "+Pad(SuperGetMv("MV_SIMB"+AllTrim(STR(nMCustoCL))),4)
cMoeda1   := " "+Pad(SuperGetMv("MV_SIMB"+AllTrim(STR(1))),4)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Filtra os arquivo de pedidos para nao demonstrar outros dados       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PED->(dbSetOrder(1))
PED->(MsSeek((cAliasTRB)->A1_COD+(cAliasTRB)->A1_LOJA))
cFiltro := 'C5_CLIENTE = "'+(cAliasTRB)->A1_COD+'" .AND.  C5_LOJACLI = "'+(cAliasTRB)->A1_LOJA+'"'

DbSelectArea("PED")
SET FILTER TO &(cFiltro)
PED->(DBGoTop())
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Analisar o atraso de Todas as Filiais do Sistema                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aValor					:= AFill(aValor,0)
aValor[BR_DTULTIT]	:= Ctod("")
aValor[BR_DTULCHQ]	:= Ctod("")
aValor[BR_PRICOM]		:= Ctod("")
aValor[BR_ULTCOM]		:= Ctod("")
aValor[BR_ULTVIS]		:= Ctod("")

If	FWModeAccess("SA1",3) == "C"
	cEmpresa	:= cEmpAnt
	bWhile		:= {|| !Eof() .And. SM0->M0_CODIGO == cEmpresa}
Else
	cEmpresa	:= cEmpAnt+cFilAnt
	bWhile		:= {|| !Eof() .And. SM0->M0_CODIGO+FWGETCODFILIAL == cEmpresa}
EndIf	
nSalvEmp		:= SM0->(Recno())
dbSelectArea("SM0")
dbSetOrder(1)
MsSeek(cEmpresa)
While Eval(bWhile)
	If ( SuperGetMv("MV_CREDCLI")=="L" ) //Mantido dentro do while, pois laço altera posicionamento na SM0
		nValAtraso += FtSomaAtr(FWGETCODFILIAL)
		If !lSA1
			aValor[BR_LC     ] += SA1->A1_LC
			aValor[BR_LCFIN  ] += SA1->A1_LCFIN
			aValor[BR_SALDUP ] += SA1->A1_SALDUP
			aValor[BR_SALDUPM] += SA1->A1_SALDUPM
			aValor[BR_SALFIN ] += SA1->A1_SALFIN
			aValor[BR_SALFINM] += SA1->A1_SALFINM
			aValor[BR_SALPED ] += SA1->A1_SALPED
			aValor[BR_SALPEDB] += SA1->A1_SALPEDB
			aValor[BR_SALPEDL] += SA1->A1_SALPEDL
			aValor[BR_MCOMPRA] := Max(SA1->A1_MCOMPRA,aValor[BR_MCOMPRA])
			aValor[BR_MAIDUPL] := Max(SA1->A1_MAIDUPL,aValor[BR_MAIDUPL])
			aValor[BR_MSALDO ] := Max(SA1->A1_MSALDO,aValor[BR_MSALDO ])
			aValor[BR_PAGATR ] += SA1->A1_PAGATR
			aValor[BR_NROPAG ] += SA1->A1_NROPAG
			aValor[BR_METR   ] := Max(SA1->A1_METR,aValor[BR_METR   ])
			aValor[BR_TITPROT] += SA1->A1_TITPROT
			aValor[BR_DTULTIT] := Max(SA1->A1_DTULTIT,aValor[BR_DTULTIT])
			aValor[BR_CHQDEVO] += SA1->A1_CHQDEVO
			aValor[BR_DTULCHQ] := Max(SA1->A1_DTULCHQ,aValor[BR_DTULCHQ])
			aValor[BR_PRICOM ] := Min(SA1->A1_PRICOM,aValor[BR_PRICOM ])
			aValor[BR_ULTCOM ] := Max(SA1->A1_ULTCOM,aValor[BR_ULTCOM ])
			aValor[BR_ULTVIS ] := Max(SA1->A1_ULTVIS,aValor[BR_ULTVIS ])
			aValor[BR_NROCOM]  += SA1->A1_NROCOM	
			
			nMCustoCL2 := SA1->A1_MOEDALC	//Carrega a moeda do cliente			
		EndIf		
	Else
		cFilSA1    := xFilial("SA1")
		SA1->(dbSetOrder(1))
		SA1->(dbSeek(cFilSA1+(cAliasTRB)->A1_COD))
		While SA1->(! Eof()) .And. SA1->A1_FILIAL == cFilSA1 .And. SA1->A1_COD == (cAliasTRB)->A1_COD

			nMCustoCL2 := IIf(SA1->A1_MOEDALC > 0, SA1->A1_MOEDALC, nMCusto)

			nValAtraso += FtSomaAtr(FWGETCODFILIAL)

			If !lSA1
				aValor[BR_LC     ] += xMoeda(SA1->A1_LC,nMCustoCL2,nMCustoCL)
				aValor[BR_LCFIN  ] += xMoeda(SA1->A1_LCFIN,nMCustoCL2,nMCustoCL)
				aValor[BR_SALDUP ] += SA1->A1_SALDUP
				aValor[BR_SALDUPM] += xMoeda(SA1->A1_SALDUPM,nMCustoCL2,nMCustoCL)
				aValor[BR_SALFIN ] += SA1->A1_SALFIN
				aValor[BR_SALFINM] += xMoeda(SA1->A1_SALFINM,nMCustoCL2,nMCustoCL)
				aValor[BR_SALPED ] += xMoeda(SA1->A1_SALPED,nMCustoCL2,nMCustoCL)
				aValor[BR_SALPEDB] += xMoeda(SA1->A1_SALPEDB,nMCustoCL2,nMCustoCL)
				aValor[BR_SALPEDL] += xMoeda(SA1->A1_SALPEDL,nMCustoCL2,nMCustoCL)
				aValor[BR_MCOMPRA] := Max(xMoeda(SA1->A1_MCOMPRA,nMCustoCL2,nMCustoCL),aValor[BR_MCOMPRA])
				aValor[BR_MAIDUPL] := Max(xMoeda(SA1->A1_MAIDUPL,nMCustoCL2,nMCustoCL),aValor[BR_MAIDUPL])
				aValor[BR_MSALDO ] := Max(xMoeda(SA1->A1_MSALDO,nMCustoCL2,nMCustoCL),aValor[BR_MSALDO])
				aValor[BR_PAGATR ] += xMoeda(SA1->A1_PAGATR,nMCustoCL2,nMCustoCL)
				aValor[BR_NROPAG ] += SA1->A1_NROPAG
				aValor[BR_METR   ] := Max(SA1->A1_METR,aValor[BR_METR])
				aValor[BR_TITPROT] += SA1->A1_TITPROT
				aValor[BR_DTULTIT] := Max(SA1->A1_DTULTIT,aValor[BR_DTULTIT])
				aValor[BR_CHQDEVO] += SA1->A1_CHQDEVO
				aValor[BR_DTULCHQ] := Max(SA1->A1_DTULCHQ,aValor[BR_DTULCHQ])
				aValor[BR_PRICOM ] := Min(SA1->A1_PRICOM,aValor[BR_PRICOM])
				aValor[BR_ULTCOM ] := Max(SA1->A1_ULTCOM,aValor[BR_ULTCOM])
				aValor[BR_ULTVIS ] := Max(SA1->A1_ULTVIS,aValor[BR_ULTVIS])
				aValor[BR_NROCOM]  += SA1->A1_NROCOM
			EndIf
			SA1->(DbSkip())
		EndDo
		SA1->(dbSetOrder(1))
		SA1->(MsSeek(cFilSA1+(cAliasTRB)->A1_COD+(cAliasTRB)->A1_LOJA))
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza os dados do SA1 apenas uma vez                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	lSA1 := .T.

	If lGestao
    	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se Filial esta compartilhada e força posicionar na prox filial³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        If FWModeAccess("SA1",3) == "C" .And. FWModeAccess("SE1",3) == "C"
        	DbSelectArea("SM0") 
    		nTam := At("F", SM0->M0_LEIAUTE)-1
    		//posiciona na prox un de neg 
    		cEmpAtu	:= SM0->M0_CODFIL  
    		While SM0->(! Eof()) .And. SubStr(SM0->M0_CODFIL, 1, nTam) == SubStr(cEmpAtu, 1, nTam) 
				lPosicion	:= .T.
    			SM0->(dbSkip()) 
    		EndDo	
    	EndIf	    
    Else
	    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Forca a saida quando o SE1 estiver compartilhado               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	    If ( FWModeAccess("SE1",3) == "C" .Or. FWModeAccess("SA1",3) == "E" ) 
			Exit
		EndIf
	EndIf
	DbSelectArea("SM0")
	If !lPosicion
		SM0->(dbSkip())
	EndIf
EndDo

SM0->(dbGoto(nSalvEmp))

dbSelectArea("SA1")
dbSetOrder(1)
dbSeek(xFilial("SA1")+(cAliasTRB)->A1_COD+(cAliasTRB)->A1_LOJA)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do cabecalho dos dados a serem analisados                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nSaldoLC  := aValor[BR_LC]-aValor[BR_SALDUPM]-aValor[BR_SALPEDL]
nIdealLC  := Abs(Min(nSaldoLc - aValor[BR_SALPEDB],0))

aadd(aBrowse,{"","","","","","",""})
aBrowse[01][1] := RetTitle("A1_LC")
aBrowse[01][2] := AllTrim(TransForm(xMoeda(aValor[BR_LC],nMCustoCl,1),X3Picture("A1_LC")))
aBrowse[01][3] := AllTrim(TransForm(xMoeda(aValor[BR_LC],nMCustoCl,nMCusto),X3Picture("A1_LC")))
aBrowse[01][4] := RetTitle("A1_LCFIN")
aBrowse[01][5] := AllTrim(TransForm(xMoeda(aValor[BR_LCFIN],nMCustoCl,1),X3Picture("A1_LCFIN")))
aBrowse[01][6] := AllTrim(TransForm(xMoeda(aValor[BR_LCFIN],nMCustoCl,nMCusto),X3Picture("A1_LCFIN")))

aadd(aBrowse,{"","","","","","",""})
aBrowse[02][1] := RetTitle("A1_SALDUP")
aBrowse[02][2] := AllTrim(TransForm(aValor[BR_SALDUP],X3Picture("A1_SALDUP")))
aBrowse[02][3] := AllTrim(TransForm(xMoeda(aValor[BR_SALDUPM],nMCustoCl,nMCusto),X3Picture("A1_SALDUPM")))
aBrowse[02][4] := RetTitle("A1_SALFIN")
aBrowse[02][5] := AllTrim(TransForm(aValor[BR_SALFIN],X3Picture("A1_SALFIN")))
aBrowse[02][6] := AllTrim(TransForm(xMoeda(aValor[BR_SALFINM],nMCustoCl,nMCusto,dDataBase),X3Picture("A1_SALFIN")))

aadd(aBrowse,{"","","",	"","","",""})
aBrowse[03][1] := RetTitle("A1_SALPED")
aBrowse[03][2] := AllTrim(TransForm(xMoeda(aValor[BR_SALPED],nMCustoCl,1),X3Picture("A1_SALPED")))
aBrowse[03][3] := AllTrim(TransForm(xMoeda(aValor[BR_SALPED],nMCustoCl,nMCusto),X3Picture("A1_SALPED")))

aadd(aBrowse,{"","","","","","",""})
aBrowse[04][1] := RetTitle("A1_SALPEDB")
aBrowse[04][2] := AllTrim(TransForm(xMoeda(aValor[BR_SALPEDB],nMCustoCl,1),X3Picture("A1_SALPEDB")))
aBrowse[04][3] := AllTrim(TransForm(xMoeda(aValor[BR_SALPEDB],nMCustoCl,nMCusto),X3Picture("A1_SALPEDB")))

aadd(aBrowse,{"","","","","","",""})
aBrowse[05][1] := RetTitle("A1_SALPEDL")
aBrowse[05][2] := AllTrim(TransForm(xMoeda(aValor[BR_SALPEDL],nMCustoCl,1),X3Picture("A1_SALPEDL")))
aBrowse[05][3] := AllTrim(TransForm(xMoeda(aValor[BR_SALPEDL],nMCustoCl,nMCusto),X3Picture("A1_SALPEDL")))

aadd(aBrowse,{"","","","","","",""}) //"Saldo Limite Credito"
aBrowse[06][1] := OemToAnsi(STR0025)
aBrowse[06][2] := AllTrim(TransForm(xMoeda(nSaldoLC,nMCustoCl,1),X3Picture("A1_LC")))
aBrowse[06][3] := AllTrim(TransForm(xMoeda(nSaldoLC,nMCustoCl,nMCusto),X3Picture("A1_LC")))
aBrowse[06][4] := OemToAnsi(STR0062) //"Adicional LC"
aBrowse[06][5] := AllTrim(TransForm(xMoeda(nIdealLC,nMCustoCl,1),X3Picture("A1_LC")))
aBrowse[06][6] := AllTrim(TransForm(xMoeda(nIdealLC,nMCustoCl,nMCusto),X3Picture("A1_LC")))

aadd(aBrowse,{"","","","","","",""})

aadd(aBrowse,{"","","","","","",""})
aBrowse[08][1] := OemToAnsi(RetTitle("A1_MCOMPRA"))
aBrowse[08][2] := AllTrim(TransForm(xMoeda(aValor[BR_MCOMPRA],nMCustoCl,1),X3Picture("A1_MCOMPRA")))
aBrowse[08][3] := AllTrim(TransForm(xMoeda(aValor[BR_MCOMPRA],nMCustoCl,nMCusto),X3Picture("A1_MCOMPRA")))
aBrowse[08][4] := OemToAnsi(RetTitle("A1_MAIDUPL"))
aBrowse[08][5] := AllTrim(TransForm(xMoeda(aValor[BR_MAIDUPL],nMCustoCl,1),X3Picture("A1_MAIDUPL")))
aBrowse[08][6] := AllTrim(TransForm(xMoeda(aValor[BR_MAIDUPL],nMCustoCl,nMCusto),X3Picture("A1_MAIDUPL")))

aadd(aBrowse,{"","","","","","",""})
aBrowse[09][1] := RetTitle("A1_MSALDO")
aBrowse[09][2] := AllTrim(TransForm(xMoeda(aValor[BR_MSALDO],nMCustoCl,1),X3Picture("A1_MSALDO")))
aBrowse[09][3] := AllTrim(TransForm(xMoeda(aValor[BR_MSALDO],nMCustoCl,nMCusto),X3Picture("A1_MSALDO")))
aBrowse[09][4] := RetTitle("A1_PAGATR")
aBrowse[09][5] := AllTrim(TransForm(xMoeda(aValor[BR_PAGATR],1,1),X3Picture("A1_PAGATR")))
aBrowse[09][6] := AllTrim(TransForm(xMoeda(aValor[BR_PAGATR],1,nMCusto),X3Picture("A1_PAGATR")))

aadd(aBrowse,{"","","","","","",""})
aBrowse[10][1] := RetTitle("A1_NROCOM")
aBrowse[10][2] := AllTrim(TransForm(aValor[BR_NROCOM],X3Picture("A1_NROCOM")))
aBrowse[10][3] := ""
aBrowse[10][4] := RetTitle("A1_NROPAG")
aBrowse[10][5] := AllTrim(TransForm(aValor[BR_NROPAG],X3Picture("A1_NROPAG")))
aBrowse[10][6] := ""

aadd(aBrowse,{"","","","","","",""})
aBrowse[11][1] := OemToAnsi(OemToAnsi(STR0032)) //Atraso atual
aBrowse[11][2] := AllTrim(TransForm(nValAtraso,X3Picture("A1_MCOMPRA")))
aBrowse[11][3] := AllTrim(TransForm(xMoeda(nValAtraso,1,nMCusto),X3Picture("A1_MCOMPRA")))
aBrowse[11][4] := RetTitle("A1_METR")
aBrowse[11][5] := AllTrim(TransForm(aValor[BR_METR],X3Picture("A1_METR")))
aBrowse[11][6] := ""

aadd(aBrowse,{"","","","","","",""})
aBrowse[12][1] := RetTitle("A1_TITPROT")
aBrowse[12][2] := AllTrim(TransForm(aValor[BR_TITPROT],X3Picture("A1_TITPROT")))
aBrowse[12][3] := ""
aBrowse[12][4] := RetTitle("A1_DTULTIT")
aBrowse[12][5] := DtoC(aValor[BR_DTULTIT])
aBrowse[12][6] := ""

aadd(aBrowse,{"","","","","","",""})
aBrowse[13][1] := RetTitle("A1_CHQDEVO")
aBrowse[13][2] := AllTrim(TransForm(aValor[BR_CHQDEVO],X3Picture("A1_CHQDEVO")))
aBrowse[13][3] := ""
aBrowse[13][4] := RetTitle("A1_DTULCHQ")
aBrowse[13][5] := Dtoc(aValor[BR_DTULCHQ])
aBrowse[13][6] := ""

aadd(aBrowse,{"","","","","","",""})
aBrowse[14][1] := RetTitle("A1_PRICOM")
aBrowse[14][2] := AllTrim(TransForm(aValor[BR_PRICOM],X3Picture("A1_PRICOM")))
aBrowse[14][3] := ""
aBrowse[14][4] := RetTitle("A1_ULTCOM")
aBrowse[14][5] := Dtoc(aValor[BR_ULTCOM])
aBrowse[14][6] := ""

aadd(aBrowse,{"","","","","","",""})
aBrowse[15][1] := RetTitle("A1_ULTVIS")
aBrowse[15][2] := AllTrim(TransForm(aValor[BR_ULTVIS],X3Picture("A1_ULTVIS")))
aBrowse[15][3] := ""  

IF (Existblock("M450TMAN"))
	If !(ExecBlock("M450TMAN",.F.,.F.))
		lContinua := .F.
	Endif	
Endif

IF (Existblock("M450BRW"))
	aBrowse := ExecBlock("M450BRW",.F.,.F., {aBrowse})
Endif

If lContinua
	If !IsBlind()
		//Inicializa variaveis com lista de campos que devem ser ofuscados de acordo com usuario.
		FATPDLoad(/*cUser*/,/*aAlias*/, aPDFields)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula as coordenadas da interface                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		AAdd( aObjects, { 100, 030, .T., .F.,.T. } )
		AAdd( aObjects, { 100, 090, .T., .T.,.T. } )
		AAdd( aObjects, { 100, 030, .T., .F.,.F. } )
		aInfo   := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects,.T.)
		
		SetEnch(,.F.) //Retira o Texto do aRotina
		DEFINE MSDIALOG oDlg TITLE STR0063 FROM aSize[7],0 TO aSize[6],aSize[5] OF oMainWnd PIXEL //"Analise de Credito - ( CLIENTE )"
		oFolder := TFolder():New(aPosObj[2,1],aPosObj[2,2],{STR0067,STR0068,STR0069},{"",""},oDlg,,,,.T.,.F.,aPosObj[2,3],aPosObj[2,4]) //"Analise"###"Pedidos"###"Condicoes"
		@ aPosObj[1,1],aPosObj[1,2] MSPANEL oPanel PROMPT "" SIZE aPosObj[1,3],aPosObj[1,4] OF oDlg CENTERED RAISED
		cTexto1 := AllTrim(RetTitle("C5_CLIENTE"))+"/"+AllTrim(RetTitle("C5_LOJACLI"))+": "+SA1->A1_COD+"/"+SA1->A1_LOJA+"  -  "+RetTitle("A1_NOME")+": " + FATPDObfuscate(SA1->A1_NOME,"A1_NOME")
		@ 003,005 SAY cTexto1 SIZE aPosObj[1,3],010 OF oPanel PIXEL
		cTexto2 := AllTrim(RetTitle("A1_RISCO"))+": "+FATPDObfuscate(X3Combo("A1_RISCO",SA1->A1_RISCO),"A1_RISCO")
		cTexto2 += "  -  "+RetTitle("A1_CLASSE")+": "+FATPDObfuscate(X3Combo("A1_CLASSE",SA1->A1_CLASSE),"A1_CLASSE")
		cTexto2 += "  -  "+RetTitle("A1_VENCLC")+": "+Dtoc(SA1->A1_VENCLC)
		@ 015,005 SAY cTexto2 SIZE aPosObj[1,3],009 OF oPanel PIXEL
		
		@ 005,005 TO aPosObj[2,4]-20,aPosObj[2,3]-10 OF oFolder:aDialogs[3] PIXEL
		@ 010,010 RADIO oRadio VAR nTpLiber 3D SIZE 080,011 PROMPT STR0070,STR0071+cMoedaLC OF oFolder:aDialogs[3] PIXEL ; //"Todos os Pedidos"###"Liberar o valor de"
			ON CLICK (IIf(oRadio:nOption==2,oMsGet:Enable(),oMsGet:Disable()),nVlrLiber:=IIf(oRadio:nOption==1,0,nVlrLiber),oMsGet:Refresh())
		@ 019,92 MSGET oMsGet VAR nVlrLiber PICTURE X3Picture("A1_LC") SIZE 060,009 OF oFolder:aDialogs[3] PIXEL VALID nVlrLiber >= 0
		
		oGetDB := MsGetDB():New(005,005,aPosObj[2,4]-20,aPosObj[2,3]-10,1,"AlwaysTrue","AlwaysTrue","",.F., , ,.F., ,"PED",Nil,Nil,Nil,oFolder:aDialogs[2])
		
		If FATPDActive() .And. FTPDUse(.T.)
			oGetDB:oBrowse:aObfuscatedCols := aPDCols
		EndIf
		
		oBrowse := TSBrowse():New(5,5,aPosObj[2,3]-10,aPosObj[2,4]-20,oFolder:aDialogs[1],,35,,1 )
		oBrowse:SetArray(aBrowse)
		
		oColuna:= TcColumn():New(OemToAnsi(STR0064)) //"Informacoes"
		oColuna:lNoLite := .F.
		oColuna:nWidth  := 60
		oColuna:nAlign  := 0
		oBrowse:AddColumn(oColuna)
		
		oColuna1 := TcColumn():New(OemToAnsi(cMoeda1))
		oColuna1:lNoLite := .T.
		oColuna1:nWidth  := 60
		oColuna1:nAlign  := 2
		oBrowse:AddColumn(oColuna1)
		
		oColuna2 := TcColumn():New(OemToAnsi(cMCusto))
		oColuna2:lNoLite := .T.
		oColuna2:nWidth  := 60
		oColuna2:nAlign  := 2
		oBrowse:AddColumn(oColuna2)
		
		oColuna3 := TcColumn():New(OemToAnsi(STR0064)) //"Informacoes"
		oColuna3:lNoLite := .T.
		oColuna3:nWidth  := 60
		oColuna3:nAlign  := 0
		oBrowse:AddColumn(oColuna3)
		
		oColuna4 := TcColumn():New(OemToAnsi(cMoeda1))
		oColuna4:lNoLite := .T.
		oColuna4:nWidth  := 60
		oColuna4:nAlign  := 2
		oBrowse:AddColumn(oColuna4)
		
		oColuna5 := TcColumn():New(OemToAnsi(cMCusto))
		oColuna5:lNoLite := .T.
		oColuna5:nWidth  := 60
		oColuna5:nAlign  := 2
		oBrowse:AddColumn(oColuna5)
		
		oColuna6 := TcColumn():New(OemToAnsi(""))
		oColuna6:lNoLite := .T.
		oColuna6:nWidth  := 2
		oColuna6:nAlign  := 0
		oBrowse:AddColumn(oColuna6)



		lPDColObf := FATPDIsObfuscate("A1_LC")
		If FATPDActive() .And. FTPDUse(.T.) .And. lPDColObf 
			oBrowse:aObfuscatedCols := {.F.,.T.,.T.,.F.,.T.,.T.,.T.}
		EndIf
		
		
		@ aPosObj[3,1],aPosObj[3,2] TO aPosObj[3,3],aPosObj[3,4] OF oDlg PIXEL
		@ aPosObj[3,1]+10,aPosObj[3,2]+010 BUTTON OemToAnsi(STR0010)  SIZE 40,12 FONT oDlg:oFont ACTION (a450F4con()) OF oDlg PIXEL //"Consulta"
		@ aPosObj[3,1]+10,aPosObj[3,2]+050 BUTTON OemToAnsi(STR0037)  SIZE 40,12 FONT oDlg:oFont ACTION (cCadastro:=OemToAnsi(STR0037),A030Visual("SA1",SA1->(RecNo()),1) ) OF oDlg PIXEL //"Cliente"
		@ aPosObj[3,1]+10,aPosObj[3,2]+090 BUTTON OemToAnsi(STR0065)  SIZE 40,12 FONT oDlg:oFont ACTION (nOpcA := 1,oDlg:End() ) WHEN lRskBtnWhen OF oDlg PIXEL //"Libera"
		@ aPosObj[3,1]+10,aPosObj[3,2]+130 BUTTON OemToAnsi(STR0012)  SIZE 40,12 FONT oDlg:oFont ACTION (nOpcA := 3,oDlg:End() ) WHEN lRskBtnWhen OF oDlg PIXEL //"Rejeita"
		@ aPosObj[3,1]+10,aPosObj[3,2]+170 BUTTON OemToAnsi(STR0066)  SIZE 40,12 FONT oDlg:oFont ACTION (oDlg:End() ) OF oDlg PIXEL //"Sair"
		
		If ExistBlock( "MT450ABT" )
			aButtons := ExecBlock( "MT450ABT",.F.,.F. )
			nPosBtn := aPosObj[3,2]+170+40
			oBtn := tButton():New(aPosObj[3,1]+10,nPosBtn,"...",oDlg,,40,12,,,,.T.)
			oMenu := TMenu():New(0,0,0,0,.T.)
			If ValType( aButtons ) = "A"		
				For nQtBtn := 1 To Len(aButtons)				
					oMenu:Add(TMenuItem():New(oDlg,aButtons[nQtBtn][1],,,,aButtons[nQtBtn][2],,,,,,,,,.T.))
				Next
				oBtn:SetPopupMenu( oMenu )
				oDlg:Refresh()
			EndIf					
		Endif
		
		FATPDLogUser("MA450CLMAN")
		ACTIVATE DIALOG oDlg CENTERED ON INIT oMsGet:Disable()
	EndIf
	
	IF (Existblock("M450CMAN"))
		If !(ExecBlock("M450CMAN",.F.,.F.,{nOpcA}))
			nOpcA := 0
		Endif	
	Endif
	If IsBlind()
		nOpcA := nOpcX
	EndIf
	
	If nOpcA <> 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Efetua a atualizacao da liberacao dos pedidos                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SM0")
		dbSeek(cEmpresa)
		
		//Monta query e mantem em cache para novas execuções
		cQuery := "SELECT SC9.C9_CLIENTE, SC9.C9_LOJA, SC9.C9_BLCRED, SC5.C5_TIPLIB, SC9.C9_PEDIDO, "
		cQuery += "SC9.R_E_C_N_O_ SC9RECNO, SC6.R_E_C_N_O_ SC6RECNO, "
		cQuery += "SC9.C9_PRCVEN, SC9.C9_QTDLIB, SC5.C5_MOEDA, SC5.C5_CONDPAG "
		cQuery += "FROM "+RetSqlName("SC9")+" SC9 "
		
		cQuery += "INNER JOIN "+RetSqlName("SC5")+" SC5 "
		cQuery += "ON SC5.C5_FILIAL = ? AND SC5.D_E_L_E_T_=' ' AND SC5.C5_NUM = SC9.C9_PEDIDO "

		cQuery += "INNER JOIN "+RetSqlName("SC6")+" SC6 "
		cQuery += "ON SC6.C6_FILIAL = ? AND SC6.D_E_L_E_T_=' ' AND SC6.C6_NUM = SC9.C9_PEDIDO "
		cQuery += "AND SC6.C6_ITEM = SC9.C9_ITEM AND SC6.C6_PRODUTO = SC9.C9_PRODUTO "

		cQuery += "WHERE SC9.C9_FILIAL = ? AND SC9.D_E_L_E_T_=' ' "
		If ( SuperGetMv("MV_CREDCLI") == "L" )
			cQuery	+= "AND SC9.C9_CLIENTE = '"+(cAliasTRB)->A1_COD+"' AND SC9.C9_LOJA = '"+(cAliasTRB)->A1_LOJA+"' "
		Else
			cQuery	+= "AND SC9.C9_CLIENTE = '"+(cAliasTRB)->A1_COD+"' "
		EndIf
		cQuery += "AND SC9.C9_BLCRED NOT IN ('  ', '09', '10', 'ZZ') "
		cQuery += "ORDER BY "+SqlOrder(SC9->(IndexKey()))

		cQuery := ChangeQuery(cQuery)

		aSetField := {	{'C9_PRCVEN','N',nTmC9PRCVEN,nDcC9PRCVEN},;
						{'C9_QTDLIB','N',nTmC9QTDLIB,nDcC9QTDLIB}}

		oQryLib:= IIf(lVerLib, FwExecStatement():New(cQuery), FWPreparedStatement():New(cQuery))

		While Eval(bWhile)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Seleciona a filial posicionada na SM0                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cFilAnt := FWGETCODFILIAL

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Efetua a liberacao/rejeicao dos itens liberados                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
			dbSelectArea("SC9")
			dbSetOrder(2)
			cAliasSC9 := "Ma450ClMan"
			cAliasSC5 := "Ma450ClMan"
			cAliasSA1 := "Ma450ClMan"

			//Altera parâmetros variáveis na query
			oQryLib:SetString(1,FWxFilial("SC5"))
			oQryLib:SetString(2,FWxFilial("SC6"))
			oQryLib:SetString(3,FWxFilial("SC9"))

			If lVerLib
				oQryLib:OpenAlias("Ma450ClMan")
				For nX := 1 To Len(aSetField)
					TCSetField("Ma450ClMan", aSetField[nX][1], aSetField[nX][2], aSetField[nX][3], aSetField[nX][4])
				Next
			Else
				//Recupera a consulta já com os parâmetros injetados
				cQuery := oQryLib:GetFixQuery()
				//Executa a query
				MpSysOpenQuery(cQuery,"Ma450ClMan",aSetField)
			EndIf

			While (cAliasSC9)->(! Eof())
				/* Integração RISK - TOTVS Mais Negócios
				Os pedidos feitos com pagamento TOTVS Mais Negócios só podem ser liberados pela plataforma RISK*/
				If lUseOffBal .And. ( RskEvlCredit( 1, ( cAliasSC9 )->C9_PEDIDO ) .Or. ;
					( RskType() == 2 .And. !RskTermB( ( cAliasSC9 )->C9_CLIENTE + ( cAliasSC9 )->C9_LOJA, ( cAliasSC9 )->C5_CONDPAG) ) )		
						( cAliasSC9 )->( DbSkip() )
						Loop
				Endif
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica o tipo de pedido                                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
				If (cAliasSC5)->C5_TIPLIB == "1" .Or. nOpcA <> 1
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica o tipo de Liberacao                                        ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
					If nTpLiber == 1
						lValido := .T.
					Else
						If xMoeda(A410Arred((cAliasSC9)->C9_PRCVEN*(cAliasSC9)->C9_QTDLIB,"C6_VALOR"),(cAliasSC5)->C5_MOEDA,IIf(nMCustoCL2>0,nMCustoCL2,Val(SuperGetMv("MV_MCUSTO")))) <= nVlrLiber //A execução do Supergetmv foi mantida dentro do looping devido a mundança da cfilant pelo FWGETCODFILIAL
							lValido := .T.
						Else
							lValido := .F.
						EndIf
					EndIf
					If lValido
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Posiciono registros                                                 ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						SC9->(MsGoto((cAliasSC9)->SC9RECNO))
						
						If !Empty((cAliasSC9)->C9_BLCRED) .And. (cAliasSC9)->C9_BLCRED<>'09' .And. (cAliasSC9)->C9_BLCRED<>'10' .And. (cAliasSC9)->C9_BLCRED<>'ZZ'
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Efetua a liberacao ou estorno                                       ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If nOpcA == 1
								SC9->(a450Grava(1,.T.,.F.))
								//Verifica se o novo DCL está configurado
								If SuperGetMv("MV_DCLNEW",.F.,.F.)
									DCLMTA450I()
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Pontos de Entrada 				                                    ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								ElseIf lTPMTA450I
									ExecTemplate("MTA450I",.F.,.F.,{nOpca,dDataBase})																
								EndIf
	
								If lPEMTA450I
									ExecBlock("MTA450I",.F.,.F.,{nOpca,dDataBase})																
								EndIf
							Else
								SC9->(a450Grava(2,.T.,.F.))
								If lPEMTA450R
									ExecBlock("MTA450R",.F.,.F.)
								EndIf
							EndIf
							nVlrLiber -= xMoeda(A410Arred((cAliasSC9)->C9_PRCVEN*(cAliasSC9)->C9_QTDLIB,"C6_VALOR"),(cAliasSC5)->C5_MOEDA,IIf(nMCustoCL2>0,nMCustoCL2,Val(SuperGetMv("MV_MCUSTO")))) //A execução do Supergetmv foi mantida dentro do looping devido a mundança da cfilant pelo FWGETCODFILIAL
						EndIf
					EndIf
				Else				
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Efetua a Liberacao por pedido                                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !Empty((cAliasSC9)->C9_BLCRED) .And. (cAliasSC9)->C9_BLCRED<>'09' .And. (cAliasSC9)->C9_BLCRED<>'10' .And. (cAliasSC9)->C9_BLCRED<>'ZZ'
						aadd(aRegSC6,(cAliasSC9)->SC6RECNO)
					EndIf
				EndIf
				cQuebra := (cAliasSC9)->C9_PEDIDO
				dbSelectArea(cAliasSC9)
				dbSkip()
				If cQuebra <> (cAliasSC9)->C9_PEDIDO .Or. (cAliasSC9)->(Eof())
					If (cAliasSC9)->(Eof())
						lEnd := .T.
					Else
						lEnd := .F.
					EndIf
					If lPEMT450RP
						ExecBlock("MTA450RP",.F.,.F.,{ nOpca, cQuebra } )
					EndIf	
					Begin Transaction
						If !Empty(aRegSC6)
							dbSelectArea("SC5")
							dbSetOrder(1)
							MsSeek(xFilial("SC5")+cQuebra)
							MaAvalSC5("SC5",3,.F.,.F.,,,,,,cQuebra,aRegSC6,.T.,nTpLiber<>1,@nVlrLiber)
						EndIf
						If lPEMT450CL
							ExecBlock("MTA450CL",.F.,.F.,{nOpca,aRegSC6})
						EndIf
					End Transaction
					aRegSC6 := {}
					dbSelectArea(cAliasSC9)
					If lEnd
						Exit
					EndIf
				EndIf
			EndDo
		
			dbSelectArea(cAliasSC9)
			dbCloseArea()
			dbSelectArea("SC9")
			cAliasSC9 := "SC9"

			// Integrado ao wms devera avaliar as regras para convocacao do servico e
			// disponibilizar os registros do SDB para convocacao
			If IntWMS()
				WmsAvalExe()
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Forca a saida quando o SC9 estiver compartilhado               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( FWModeAccess("SC9",3)=="C".Or. FWModeAccess("SA1",3)=="E" )
				Exit
			EndIf
			dbSelectArea("SM0")
			dbSkip()
		EndDo
		//Destroi o Objeto
		FreeObj(oQryLib)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Retira o cliente do arquivo temporario                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Ma450Atu( @cAliasTRB , (cAliasTRB)->A1_COD )
	EndIf

Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a integridade da rotina                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

RestArea(aAreaSC9)
RestArea(aAreaSM0)
RestArea(aArea)
cFilAnt := cSavFil
FATPDUnload() //Finaliza load da ultima carga quando não passa parâmetro
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A450ClAut ³ Rev.  ³ Eduardo Riera         ³ Data ³02.02.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de interface da reavalicao de credito por cliente     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina realiza a interface com o usuario para a rotina  ³±±
±±³          ³de processamento da reavaliacao de credito.                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma450ClAut()
Local aArea   := GetArea()

If !ctbValiDt( Nil, dDataBase, .T., Nil, Nil, { "FAT002" }, Nil )
	Return Nil
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ mv_par01 Pedido de          ?                                 ³
//³ mv_par02 Pedido ate         ?                                 ³
//³ mv_par03 Cliente de         ?                                 ³
//³ mv_par04 Cliente ate        ?                                 ³
//³ mv_par05 Dta Liberacao de   ?                                 ³
//³ mv_par06 Dta Liberacao ate  ?                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Pergunte("LIBAUT",.T.) )
	If MsgYesNo(OemToAnsi(STR0034),OemToAnsi(STR0035))       //"Confirma Libera‡„o Automatica dos Pedidos ?"###"Aten‡„o"
		Processa({|lEnd| Ma450Proces("SC9",.T.,.F.,@lEnd,FWModeAccess("SA1",3)=="C")},,,.T.)
		CloseBrowse()
	EndIf
EndIf
RestArea(aArea)
Return(Nil)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Ma450Psq  ³ Rev.  ³ Eduardo Riera         ³ Data ³02.02.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de pesquisa da liberacao por cliente                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina realiza a interface com o usuario para a pesquisa³±±
±±³          ³de clientes.                                                 ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma450Psq()

Local xPesq    := Space(TamSx3("A1_COD")[1]+TamSx3("A1_LOJA")[1])
Local nOpcA    := 0
Local oDlg
Local oBut1
Local oBut2
Local oBmp
Local oPesq

DEFINE MSDIALOG oDlg TITLE OemtoAnsi(STR0001)  FROM 09,0 TO 20,50 OF oMainWnd  //"Pesquisar"

@ 000,000 BITMAP oBmp RESNAME "PROJETOAP" oF oDlg SIZE 30, 1000 NOBORDER WHEN .F. PIXEL ADJUST
@ 014,035 SAY RetTitle("A1_COD")+"/"+RetTitle("A1_LOJA") of oDlg PIXEL
@ 028,035 MSGET oPesq VAR xPesq Picture "@!" SIZE 153,010 Of oDlg PIXEL

DEFINE SBUTTON oBut1 FROM 062, 130 TYPE 1 ACTION ( nOpca := 1, oDlg:End() ) ENABLE of oDlg		 	
DEFINE SBUTTON oBut2 FROM 062, 160 TYPE 2 ACTION ( nOpca := 0, oDlg:End() )  ENABLE of oDlg		

ACTIVATE MSDIALOG oDlg CENTERED

If nOpcA == 1
	dbSelectArea("TRB")
	dbSetOrder(1)
	dbSeek(xPesq,.T.)
EndIf
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Ma450Refr ³Autor  ³ Eduardo Riera         ³ Data ³23.03.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de refresh da rotina de liberacao de credito          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina realiza a interface com o usuario para a atualiza³±±
±±³          ³cao da interface de liberacao de credito                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma450Refr()

MBrChgLoop(.F.)
Processa({|lEnd| Eval(b450PCli,lEnd,.T.)},,,.T.)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Marco Bianchi         ³ Data ³01/09/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³    1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function MenuDef()
	
Private aRotina	:= {{STR0004,   "Ma450ClMan", 0, 2, 0, NIL},;	// "Manual"
               	    {STR0003,   "Ma450ClAut", 0, 2, 0, NIL},;	// "Automática"												
               	    {"Refresh", "Ma450Refr",  0, 3, 0, .F.},;	// "Refresh"
               	    {STR0001,   "Ma450Psq",   0, 1, 0, .F.}}	// "Pesquisar"

If ExistBlock("MA450MNU")
	ExecBlock("MA450MNU",.F.,.F.)
EndIf
Return(aRotina)

//------------------------------------------------------------------
/*/{Protheus.doc} Ma450Atu()
Rotina para atualizar o browse de acordo com parametro MV_CREDCLI

@param		cAliasTRB	, Char	, Tabela temporaria - Browse de clientes
@param		cCliente	, Char	, Codigo do cliente
@author 	danilo.salve
@since 		23/06/2018
@version 	12.1.17
@return 	Nulo
/*/
//-------------------------------------------------------------------
Static Function Ma450Atu( cAliasTRB , cCliente )
	
	Local aAreaTRB	:= {}
	
	Default cAliasTRB	:= ""
	Default cCliente	:= ""
	
	If SuperGetMv("MV_CREDCLI")=="L"
		RecLock(cAliasTRB,.F.)
		DBDelete()
		MsUnLock()
	Else
		aAreaTRB	:= (cAliasTRB)->( GetArea() )
		(cAliasTRB)->(DbGoTop())
		If (cAliasTRB)->(DbSeek(cCliente))
			While (cAliasTRB)->(! Eof()) .And. (cAliasTRB)->A1_COD == cCliente
				RecLock(cAliasTRB,.F.)
				DBDelete()
				MsUnLock()
				(cAliasTRB)->(DbSkip())
			Enddo
		Endif
		RestArea(aAreaTRB)
		aSize(aAreaTRB,0)
	Endif
	
Return Nil




//-----------------------------------------------------------------------------------
/*/{Protheus.doc} FATPDLoad
    @description
    Inicializa variaveis com lista de campos que devem ser ofuscados de acordo com usuario.
	Remover essa função quando não houver releases menor que 12.1.27

    @type  Function
    @author Squad CRM & Faturamento
    @since  05/12/2019
    @version P12.1.27
    @param cUser, Caractere, Nome do usuário utilizado para validar se possui acesso ao 
        dados protegido.
    @param aAlias, Array, Array com todos os Alias que serão verificados.
    @param aFields, Array, Array com todos os Campos que serão verificados, utilizado 
        apenas se parametro aAlias estiver vazio.
    @param cSource, Caractere, Nome do recurso para gerenciar os dados protegidos.
    
    @return cSource, Caractere, Retorna nome do recurso que foi adicionado na pilha.
    @example FATPDLoad("ADMIN", {"SA1","SU5"}, {"A1_CGC"})
/*/
//-----------------------------------------------------------------------------------
Static Function FATPDLoad(cUser, aAlias, aFields, cSource)
	Local cPDSource := ""

	If FATPDActive()
		cPDSource := FTPDLoad(cUser, aAlias, aFields, cSource)
	EndIf

Return cPDSource


//-----------------------------------------------------------------------------------
/*/{Protheus.doc} FATPDUnload
    @description
    Finaliza o gerenciamento dos campos com proteção de dados.
	Remover essa função quando não houver releases menor que 12.1.27

    @type  Function
    @author Squad CRM & Faturamento
    @since  05/12/2019
    @version P12.1.27
    @param cSource, Caractere, Remove da pilha apenas o recurso que foi carregado.
    @return return, Nulo
    @example FATPDUnload("XXXA010") 
/*/
//-----------------------------------------------------------------------------------
Static Function FATPDUnload(cSource)    

    If FATPDActive()
		FTPDUnload(cSource)    
    EndIf

Return Nil

//-----------------------------------------------------------------------------------
/*/{Protheus.doc} FATPDIsObfuscate
    @description
    Verifica se um campo deve ser ofuscado, esta função deve utilizada somente após 
    a inicialização das variaveis atravez da função FATPDLoad.
	Remover essa função quando não houver releases menor que 12.1.27

    @type  Function
    @author Squad CRM & Faturamento
    @since  05/12/2019
    @version P12.1.27
    @param cField, Caractere, Campo que sera validado
    @param cSource, Caractere, Nome do recurso que buscar dados protegidos.
    @param lLoad, Logico, Efetua a carga automatica do campo informado
    @return lObfuscate, Lógico, Retorna se o campo será ofuscado.
    @example FATPDIsObfuscate("A1_CGC",Nil,.T.)
/*/
//-----------------------------------------------------------------------------------
Static Function FATPDIsObfuscate(cField, cSource, lLoad)
    
	Local lObfuscate := .F.

    If FATPDActive()
		lObfuscate := FTPDIsObfuscate(cField, cSource, lLoad)
    EndIf 

Return lObfuscate

//-----------------------------------------------------------------------------------
/*/{Protheus.doc} FATPDColObfuscate
    @description
    Verifica se a coluna de um grid deve ser ofuscado, tendo como base uma lista de
    campos, esta função deve utilizada somente após a inicialização das variaveis 
    atravez da função FATPDLoad.
	Remover essa função quando não houver releases menor que 12.1.27

    @type  Function
    @author Squad CRM & Faturamento
    @since  05/12/2019
    @version P12.1.27
    @param cField, Caractere, Campo que sera validado
    @param cSource, Caractere, Nome do recurso que buscar dados protegidos.

    @return lObfuscate, Lógico, Retorna se o campo será ofuscado.
    @example FATPDIsObfuscate({"A1_COD","A1_NOME","A1_CGC"})
/*/
//-----------------------------------------------------------------------------------
Static Function FATPDColObfuscate(aFields, cSource)  
    
	Local aPDColObf	:= {}

    If FATPDActive()
		aPDColObf := FTPDColObfuscate(aFields, cSource)  
    EndIf 

Return aPDColObf  

//-----------------------------------------------------------------------------
/*/{Protheus.doc} FATPDObfuscate
    @description
    Realiza ofuscamento de uma variavel ou de um campo protegido.
	Remover essa função quando não houver releases menor que 12.1.27

    @type  Function
    @sample FATPDObfuscate("999999999","U5_CEL")
    @author Squad CRM & Faturamento
    @since 04/12/2019
    @version P12
    @param xValue, (caracter,numerico,data), Valor que sera ofuscado.
    @param cField, caracter , Campo que sera verificado.
    @param cSource, Caractere, Nome do recurso que buscar dados protegidos.
    @param lLoad, Logico, Efetua a carga automatica do campo informado

    @return xValue, retorna o valor ofuscado.
/*/
//-----------------------------------------------------------------------------
Static Function FATPDObfuscate(xValue, cField, cSource, lLoad)
    
    If FATPDActive()
		xValue := FTPDObfuscate(xValue, cField, cSource, lLoad)
    EndIf

Return xValue   

//-----------------------------------------------------------------------------
/*/{Protheus.doc} FATPDLogUser
    @description
    Realiza o log dos dados acessados, de acordo com as informações enviadas, 
    quando a regra de auditoria de rotinas com campos sensíveis ou pessoais estiver habilitada
	Remover essa função quando não houver releases menor que 12.1.27

   @type  Function
    @sample FATPDLogUser(cFunction, nOpc)
    @author Squad CRM & Faturamento
    @since 06/01/2020
    @version P12
    @param cFunction, Caracter, Rotina que será utilizada no log das tabelas
    @param nOpc, Numerico, Opção atribuída a função em execução - Default=0

    @return lRet, Logico, Retorna se o log dos dados foi executado. 
    Caso o log esteja desligado ou a melhoria não esteja aplicada, também retorna falso.

/*/
//-----------------------------------------------------------------------------
Static Function FATPDLogUser(cFunction, nOpc)

	Local lRet := .F.

	If FATPDActive()
		lRet := FTPDLogUser(cFunction, nOpc)
	EndIf 

Return lRet  

//-----------------------------------------------------------------------------
/*/{Protheus.doc} FATPDActive
    @description
    Função que verifica se a melhoria de Dados Protegidos existe.

    @type  Function
    @sample FATPDActive()
    @author Squad CRM & Faturamento
    @since 17/12/2019
    @version P12    
    @return lRet, Logico, Indica se o sistema trabalha com Dados Protegidos
/*/
//-----------------------------------------------------------------------------
Static Function FATPDActive()

    Static _lFTPDActive := Nil
  
    If _lFTPDActive == Nil
        _lFTPDActive := ( GetRpoRelease() >= "12.1.027" .Or. !Empty(GetApoInfo("FATCRMPD.PRW")) )  
    Endif

Return _lFTPDActive  

//-----------------------------------------------------------------------------------
/*/{Protheus.doc} M450DicIni()
Funcao para inicializar as variaveis de controle para consulta a
dados do SX3 via API's

@param		cArqCpos	, Char    , Alias a ser utilizado na consulta SX3 dos campos
@author 	Squad CRM & Faturamento
@since 		14/05/2020
@version 	12.1.27
@return 	Nulo
/*/
//-----------------------------------------------------------------------------------
Static Function M450DicIni(cArqCpos)

	Static nNumCpo    := 0  
	Static aCamposDic := {}
	Static cAliasDic  := ""  
	Static lFWSX3Util := Nil
	Static nQtdCampos := 0

	Local aCmpsAux1 := {}
	Local aCmpsAux2 := {}
	Local nCampo    := ""

	Default cArqCpos := ""

	// Inicializar variaveis
	aSize(aCamposDic, 0)
	nNumCpo    := 1
	cAliasDic  := cArqCpos

	// Realizar as verificacoes de que os componentes para tratar os Debitos 
	// tecnicos estao no ambiente do cliente
	If lFWSX3Util == Nil
		M450VrfSQ()
	EndIf

	// Iniciar ou posicionar nas estruturas de dados para buscar o campo do
	// alias do cArqSX3 para utilizacao pelas demais funcoes associadas a esta
	If lFWSX3Util
		aCmpsAux1 := FWSX3Util():GetAllFields(cAliasDic)
		nQtdCampos := Len(aCmpsAux1)

		// Ordenar pelo campo X3_ORDEM
		For nCampo = 1 To nQtdCampos
			aAdd(aCmpsAux2, {aCmpsAux1[nCampo], GetSX3Cache(aCmpsAux1[nCampo], "X3_ORDEM")})
		Next nCampo
		aSort(aCmpsAux2, , , {|campo1, campo2| campo1[2] < campo2[2]})
		For nCampo = 1 To nQtdCampos
			aAdd(aCamposDic, aCmpsAux2[nCampo][1])
		Next nCampo
		FreeObj(aCmpsAux1)
		FreeObj(aCmpsAux2)
	Else
		DbSelectArea("SX3")
		SX3->(dbSetOrder(1))
		SX3->(MsSeek(cAliasDic))
	Endif

Return Nil

//-------------------------------------------------------------------------------
/*/{Protheus.doc} M450VrfSQ()
Funcao para verificar se os componentes indicados pelo Framework para realizar
a leitura dos dicionários SX3 estao no ambiente.

@param		Nao ha
@author 	Squad CRM & Faturamento
@since 		14/05/2020
@version 	12.1.27
@return 	Nulo
/*/
//-------------------------------------------------------------------------------
Static Function M450VrfSQ()
	Local cVersaoLib := ""
	
	cVersaoLib := FWLibVersion()

	If cVersaoLib > "20180823"
		lFWSX3Util := .T.
	Else
		lFWSX3Util := .F.
	EndIf

Return Nil

//-------------------------------------------------------------------------------
/*/{Protheus.doc} M450PrxDic()
Funcao para posicionar na proxima linha do SX3 para ler os seus respectivos dados

@param		Nao ha
@author 	Squad CRM & Faturamento
@since 		14/05/2020
@version 	12.1.27
@return 	Nulo
/*/
//-------------------------------------------------------------------------------
Static Function M450PrxDic()

	If lFWSX3Util
		nNumCpo++
	Else
		SX3->(DbSkip())
	EndIf
Return

//-------------------------------------------------------------------------------
/*/{Protheus.doc} M450RetCmp()
Funcao para retornar o campo da posicionada linha no SX3 

@param		Nao ha
@author 	Squad CRM & Faturamento
@since 		14/05/2020
@version 	12.1.27
@return 	cCampo , Char , Campo da linha posicionada no SX3
/*/
//-------------------------------------------------------------------------------
Static Function M450RetCmp()
	Local cCampo  := ""
	Local nPosCpo := 0

	If lFWSX3Util
		If nNumCpo <= nQtdCampos
			cCampo := aCamposDic[nNumCpo]	
		EndIf
	Else
		nPosCpo := SX3->(FieldPos("X3_CAMPO"))
		cCampo  := SX3->(FieldGet(nPosCpo))
	EndIf
Return cCampo

//-------------------------------------------------------------------------------
/*/{Protheus.doc} M450DicEOF()
Funcao para retornar se o SX3 esta no final de arquivo ou nao

@param		Nao ha
@author 	Squad CRM & Faturamento
@since 		14/05/2020
@version 	12.1.27
@return 	lEhEOF , Boolean , Indica se esta no final do arquivo ou nao
/*/
//-------------------------------------------------------------------------------
Static Function M450DicEOF()

	Local lEhEOF := .F.

	If lFWSX3Util
		If nNumCpo > nQtdCampos
			lEhEOF := .T.
		EndIf
	Else
		lEhEOF := SX3->(EOF())
	EndIf

Return lEhEOF

//-------------------------------------------------------------------------------
/*/{Protheus.doc} M450DicTit()
Funcao para retornar o titulo do campo do SX3

@param		Nao há
@author 	Squad CRM & Faturamento
@since 		15/06/2020
@version 	12.1.27
@return 	cTitulo , Character , Titulo do campo no idioma do ambiente
/*/
//-------------------------------------------------------------------------------
Static Function M450DicTit(cCampo)

	Local cTitulo := ""

	If lFWSX3Util
		cTitulo := FWX3Titulo(cCampo)
	Else
		cTitulo := X3Titulo()
	EndIf

Return cTitulo
