#INCLUDE "PROTHEUS.CH" 
#INCLUDE "DBTREE.CH"  
#INCLUDE "FATA300.CH"    
#INCLUDE "CRMDEF.CH"
#INCLUDE "FWMVCDEF.CH"  
//------------------------------------------------------------------------------
/*/{Protheus.doc} FATA300

Cadastro de Oportunidade de Venda

@sample	FATA300()

@param		ExpN1 - Operacao para Rotina Automatica (MVCRotAuto).
			ExpA2 - Oportunidade de Venda.
			ExpA3 - Time de Vendas.
			ExpA4 - Concorrentes.
			ExpA5 - Parceiros.
			ExpA6 - Contatos.
			ExpA7 - Produtos.
			ExpC8 - Filtro padrão do Browse.
			ExpA9 - Adiciona um filtro na lista de opcoes do Browse.
			ExpC10 - Visão padrao que deve ser aberta na criação do Browse.
			ExpA11 - Agrupadores 

@return		ExpL - Verdadeiro / Falso

@author		Anderson Silva
@since		20/03/2014
@version	12
/*/
//------------------------------------------------------------------------------
Function FATA300( nOperation, aAD1Master, aAD2Detail, aAD3Detail,;
				  aAD4Detail, aAD9Detail, aADJDetail, cFilDef	,;
				  aAddFil, cVDefault ) 
Local aArea			:= {}
Local aAutoRot		:= {}

Private cCadastro	:= STR0001	//"Oportunidade de Venda"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
Private aRotina		:= If(nModulo == 73, FwLoadMenuDef("CRMA110"), MenuDef())

Private aCbAD1Sta		:= {}										//Array com os status do AD1_STATUS
Private lFt300D1St	:= ExistBlock("Ft300D1St")				//ponto de entrada para adicionar AD1_STATUS

Default nOperation	:= MODEL_OPERATION_INSERT
Default aAD1Master	:= {} 
Default aAD2Detail	:= {}
Default aAD3Detail	:= {}
Default aAD4Detail	:= {}
Default aAD9Detail	:= {} 
Default aADJDetail	:= {}
Default cFilDef		:= ""
Default aAddFil		:= {}
Default cVDefault	:= ""

If Len(aAD1Master) == 0 
	aArea := GetArea()
	//-------------------------------
	// Browse Oportunidade de Venda.
	//-------------------------------
	BrowseDef( /*oMBrowse*/, cFilDef, aAddFil, cVDefault )
	RestArea(aArea) 
Else

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cabeçalho - Oportunidade de Venda. ³ 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd(aAutoRot,{"AD1MASTER",aAD1Master})
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grid - Time de Vendas. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
	aAdd(aAutoRot,{"AD2DETAIL",aAD2Detail})
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grid - Concorrentes. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd(aAutoRot,{"AD3DETAIL",aAD3Detail})
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grid - Parceiros. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd(aAutoRot,{"AD4DETAIL",aAD4Detail})
	 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grid - Contatos. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd(aAutoRot,{"AD9DETAIL",aAD9Detail})
	  
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grid - Produtos. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd(aAutoRot,{"ADJDETAIL",aADJDetail})
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grid - Evolucao da Venda (Pipeline) e populado automaticamente ao definir  ³
	//³ um Processo / Estagio de Venda atraves dos campos AD1_PROVEN / AD1_STAGE.  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Rotina Automatica através do MVC  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FwMvcRotAuto(ModelDef(),"AD1",nOperation,aAutoRot,/*lSeek*/,.T.) 

EndIf

Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} BrowseDef

Browse de Cadastro de Oportunidade de Venda

@sample	BrowseDef( oMBrowse, cFilDef, aAddFil, cVDefault )

@param		oMBrowse	, Objeto	, Browse criado pelo Widget da Area de Trabalho.
			cFilDef	, Caracter	, Filtro padrao.
			aAddFil	, Array		, Filtros relacionados.
			cVDefault	, Caracter , Visao padrao.
			
@return	oMBrowse	, Objeto	, Retorna o objeto FWMBrowse.

@author	Anderson Silva
@since		05/12/2015
@version	P12
/*/
//------------------------------------------------------------------------------
Static Function BrowseDef( oMBrowse, cFilDef, aAddFil, cVDefault )

Local oTableAtt		:= Nil
Local nX			:= 0
Local aLegend		:= {}
Local aLegendNew	:= {}
Local lWidget		:= .F.
Local cFilUser		:= ""
Local cMainProc		:= IIF(nModulo==73, "CRMA110", "FATA300")

Default oMBrowse	:= Nil
Default cFilDef		:= ""
Default aAddFil		:= {}
Default cVDefault	:= ""

//------------------------------------
// Legenda da Oportunidade de Venda.
//------------------------------------
aAdd(aLegend,{"AD1->AD1_STATUS=='1'","BR_VERDE"		, STR0017}) //Em Aberto
aAdd(aLegend,{"AD1->AD1_STATUS=='2'","BR_PRETO"		, STR0018})	//Perdido
aAdd(aLegend,{"AD1->AD1_STATUS=='3'","BR_AMARELO"	, STR0019})	//Suspenso
aAdd(aLegend,{"AD1->AD1_STATUS=='9'","BR_VERMELHO"	, STR0020})	//Encerrado

If Empty( oMBrowse )
	oMBrowse := FWMBrowse():New()
	oMBrowse:SetAlias("AD1")
Else
	lWidget := .T.
EndIf

oMBrowse:SetCanSaveArea(.T.) 

//-----------------------------------------------------------
// Ponto de Entrada para alterar cores do Browse do Cadastro.
//-----------------------------------------------------------
If ExistBlock("FT30COR")
	aLegendNew := ExecBlock("FT30COR",.F.,.F.,{aLegend})
	If ValType(aLegendNew) == "A" 
		aLegend := aClone(aLegendNew)
	EndIf
Endif

//------------------------------------
// Adiciona as legendas no browse. 
//------------------------------------
For nX := 1 To Len(aLegend)
	oMBrowse:AddLegend(aLegend[nX][1],aLegend[nX][2],aLegend[nX][3])
Next nX

//----------------------------
// Filtro padrão do usuario. 
//----------------------------
If ExistBlock("FT300FILBW")
	cFilUser := ExecBlock("FT300FILBW",.F.,.F.)
	If ValType( cFilUser ) == "C" .And. !Empty( cFilUser )
		oMBrowse:AddFilter(STR0401,cFilUser,.T.,.T.) //"Filtro de Usuário"
		oMBrowse:ExecuteFilter()
	EndIf
EndIf	
		
//------------------------------------------------------
// Adiciona as colunas da Evolucao da Venda no browse. 
//------------------------------------------------------
aLPVendas := {"",{|| Ft300LPVBr() },"C","@BMP",0,1,0,.F.,{||.T.},.T.,{|| Ft300LPVen() },,,,.F.}
aLEVendas := {"",{|| Ft300LEVBr() },"C","@BMP",0,1,0,.F.,{||.T.},.T.,{|| Ft300LEVen() },,,,.F.}

oMBrowse:AddColumn(aLPVendas)
oMBrowse:AddColumn(aLEVendas)

//------------------------------------------------------
// Filtro Default do Browse de Oportunidade de Venda. 
//------------------------------------------------------
If !Empty(cFilDef)
	oMBrowse:SetFilterDefault(cFilDef)
EndIf

//---------------------------------------------------------
//Filtros adicionais do Browse de Oportunidade de Venda. 
//---------------------------------------------------------
For nX := 1 To Len(aAddFil)
	oMBrowse:DeleteFilter( aAddFil[nX][ADDFIL_ID] )
	oMBrowse:AddFilter( aAddFil[nX][ADDFIL_TITULO], ;
					      aAddFil[nX][ADDFIL_EXPR], ;
					      aAddFil[nX][ADDFIL_NOCHECK], ;
					      aAddFil[nX][ADDFIL_SELECTED], ; 
					      aAddFil[nX][ADDFIL_ALIAS], ;
					      aAddFil[nX][ADDFIL_FILASK], ;
					      aAddFil[nX][ADDFIL_FILPARSER], ;
					      aAddFil[nX][ADDFIL_ID] )		 
	oMBrowse:ExecuteFilter()	 
Next nX

oMBrowse:SetDescription(STR0001) //"Oportunidade de Venda"
oMBrowse:SetCacheView( .F. )

If !lWidget

	oTableAtt := TableAttDef()
	oMBrowse:SetAttach(.T.)	
	oMBrowse:SetViewsDefault(oTableAtt:aViews)
	oMBrowse:SetChartsDefault(oTableAtt:aCharts)

		// selecionando a visão inicial 
	If !Empty( cVDefault ) 
		nScan := aScan( oTableAtt:aViews, { |x| x:cID == cVDefault } )
		If nScan > 0 
			oMBrowse:SetIDViewDefault( oTableAtt:aViews[nScan]:cID )
		EndIf
	EndIf
		
	oMBrowse:SetIDChartDefault( "DSFunil" )
			
	//Se não for SIGACRM inibe a exibição do gráfico
	If nModulo <> 73
		oMBrowse:SetOpenChart( .F. )
	EndIf		
	oMBrowse:SetMainProc(cMainProc)
	oMBrowse:SetTotalDefault("AD1_NROPOR","COUNT",STR0368) // "Total de Registros"
	oMBrowse:Activate()
	
EndIf

Return Nil



//------------------------------------------------------------------------------
/*/{Protheus.doc} TableAttDef

Cria as visões e gráficos padrão para a Oportunidade de Venda.

@sample		TableAttDef()

@param		Nenhum

@return		ExpA - Array de Objetos com as Visoes.

@author		Cristiane Nishizaka
@since		28/04/2014
@version	12
/*/
//------------------------------------------------------------------------------
Static Function TableAttDef()

Local oTableAtt		:= Nil
Local oDSMyAbert	:= Nil // Minhas Oportunidades Abertas
Local oDSAbertas	:= Nil // Oportunidades Abertas 	 
Local oDSConquis	:= Nil // Oportunidades Conquistadas
Local oDSPerdida	:= Nil // Oportunidades Perdidas
Local oDSSuspens	:= Nil // Oportunidades Suspensas
Local oDSFechada	:= Nil // Oportunidades Fechadas
Local oDSPorProb	:= Nil // Pizza: Oportunidades Por Probabilidade de Sucesso
Local oDSFunil		:= Nil // Funil: Funil de Vendas
Local oDSPorCamp	:= Nil // Pizza: Oportunidades Por Campanha
Local oDSPorStat	:= Nil // Pizza: Oportunidades Por Status
Local oDSLidVend	:= Nil // Colunas: Placar de Líderes de Venda
Local oDSPrincOp	:= Nil // Colunas: Principais Oportunidades
Local oDSEXRPorD	:= Nil // Colunas (2 séries): Receita Estimada X Receita Real (Por Data)
Local oDSRcPorCp	:= Nil // Colunas: Receita Gerada Por Campanha
Local oDSRcPorVd	:= Nil // Colunas: Receita Estimada X Receita Real (Por Vendedor)
Local lFt300VwPe	:= ExistBlock("CRMBRWVIEW")	
Local cRotina		:= "FATA300"
Local cAliasView	:= "AD1"
Local lFt300Cpv		:= ExistBlock("FT300CPV")
Local aCamposVis	:= {}
Local aUserPaper	:= {}
Local cCodUser 		:= If(SuperGetMv("MV_CRMUAZS",, .F.), CRMXCodUser(), RetCodUsr())  
Local cSeqPaper		:= " "

// Campos para exibição
If lFt300Cpv
	aCamposVis := ExecBlock("FT300CPV")
	If	ValType(aCamposVis) <> "A" .or. Empty(aCamposVis)
		aCamposVis := {"AD1_NROPOR", "AD1_REVISA", "AD1_DESCRI", "AD1_VEND",   "AD1_NOMVEN", "AD1_VERBA",;
		               "AD1_PROSPE", "AD1_LOJPRO", "AD1_NOMPRO", "AD1_CODCLI", "AD1_LOJCLI", "AD1_NOMCLI",;
		               "AD1_RCINIC", "AD1_RCFECH", "AD1_DTINI",  "AD1_DTPFIM", "AD1_CUSTO",  "AD1_FEELIN",;
		               "AD1_STATUS"}
	EndIf
EndIf

// Tabela Oportunidade de Venda
If lFt300VwPe   //CRMBRWVIEW(cRotina,cAliasview )
	oTableAtt := ExecBlock("CRMBRWVIEW", .F.,.F.,{cRotina,cAliasView})	
EndIf 

If Empty ( oTableAtt )

	oTableAtt := FWTableAtt():New()
	oTableAtt:SetAlias("AD1")
	
	If ( IsInCallStack("CRMA110") .Or. IsInCallStack("CRMA290") .Or. IsInCallStack("CRMA290A") .Or. IsInCallStack("CRM290CWGT") )
		aUserPaper := CRMXGetPaper()
		
		If !Empty( aUserPaper )
			cCodUser 	:= aUserPaper[USER_PAPER_CODUSR]
			cSeqPaper	:= aUserPaper[USER_PAPER_SEQUEN] + aUserPaper[USER_PAPER_CODPAPER]			
		EndIf
	
		// Minhas Oportunidades Abertas 
		oDSMyAbert := FWDSView():New()
		oDSMyAbert:SetName(STR0347) // "Minhas Oportunidades Abertas"
		oDSMyAbert:SetID("DSMyAbert") 
		oDSMyAbert:SetOrder(1) // AD1_FILIAL+AD1_NROPOR
		If lFt300Cpv
			oDSMyAbert:SetCollumns(aCamposVis)
		Else
			oDSMyAbert:SetCollumns({"AD1_NROPOR", "AD1_REVISA", "AD1_DESCRI", "AD1_VERBA",  "AD1_MOEDA",;
			                        "AD1_RCINIC", "AD1_RCFECH", "AD1_RCREAL", "AD1_CUSTO",  "AD1_FEELIN",;
			                        "AD1_FCS",    "AD1_DESFCS", "AD1_FCI",    "AD1_DESFCI", "AD1_PROPOS", "AD1_STAGE"})
		EndIf
		oDSMyAbert:SetPublic(.T.)
		
		oDSMyAbert:AddFilterRelation( "AO4", "AO4_CHVREG", "AD1_FILIAL+AD1_NROPOR" )
		If !Empty( aUserPaper )
			oDSMyAbert:AddFilter(STR0348, "AO4_ENTIDA == 'AD1' .And. AO4_CODUSR == '"+ cCodUser +"' .And. ( AO4_USRPAP == '" + cSeqPaper + "' .Or. AO4_USRPAP == ' ' ) .And. AO4_CTRLTT == .T.","AO4")
		Else
			oDSMyAbert:AddFilter(STR0348, "AO4_ENTIDA == 'AD1' .AND. AO4_CODUSR == '"+cCodUser+"' .AND. AO4_CTRLTT == .T.","AO4")
		EndIf
		oDSMyAbert:AddFilter(STR0347, "AD1_STATUS == '1'") //"Minhas Oportunidades Abertas" 
		oTableAtt:AddView(oDSMyAbert)
		
		// "Minhas Oportunidades Compartilhadas"   
		oDSMyCompa := FWDSView():New()
		oDSMyCompa:SetName(STR0369)	//"Minhas Oportunidades Compartilhadas"
		oDSMyCompa:SetID("DSMyCompa") 
		oDSMyCompa:SetOrder(1) // AD1_FILIAL+AD1_NROPOR
		If lFt300Cpv
			oDSMyCompa:SetCollumns(aCamposVis)
		Else
			oDSMyCompa:SetCollumns({"AD1_NROPOR", "AD1_REVISA", "AD1_DESCRI", "AD1_VERBA",  "AD1_MOEDA",;
			                        "AD1_RCINIC", "AD1_RCFECH", "AD1_RCREAL", "AD1_CUSTO",  "AD1_FEELIN",;
			                        "AD1_FCS",    "AD1_DESFCS", "AD1_FCI",    "AD1_DESFCI", "AD1_PROPOS",;
			                        "AD1_STAGE",  "AD1_STATUS"})
		EndIf
		oDSMyCompa:SetPublic(.T.)
		oDSMyCompa:AddFilterRelation( "AO4", "AO4_CHVREG", "AD1_FILIAL+AD1_NROPOR" )
		If !Empty( aUserPaper )
			oDSMyCompa:AddFilter(STR0369, "AO4_ENTIDA == 'AD1' .And. AO4_CODUSR == '"+ cCodUser +"' .And. ( AO4_USRPAP == '" + cSeqPaper + "' .Or. AO4_USRPAP == ' ' ) .And.  AO4_USRCOM <> ' '","AO4") // Oportunidades Compartilhadas 
		Else
			oDSMyCompa:AddFilter(STR0369, "AO4_ENTIDA == 'AD1' .And. AO4_CODUSR == '"+ cCodUser +"' .And. AO4_USRCOM <> ' '","AO4") // Oportunidades Compartilhadas 
		EndIf 
		oTableAtt:AddView(oDSMyCompa)
	
	EndIf
	
	// Oportunidades Abertas 
	oDSAbertas := FWDSView():New()
	oDSAbertas:SetName(STR0349) // "Oportunidades Abertas"
	oDSAbertas:SetID("DSAbertas") 
	oDSAbertas:SetOrder(1) // AD1_FILIAL+AD1_NROPOR
	If lFt300Cpv
		oDSAbertas:SetCollumns(aCamposVis)
	Else
		oDSAbertas:SetCollumns({"AD1_NROPOR", "AD1_REVISA", "AD1_DESCRI", "AD1_VERBA",  "AD1_MOEDA",;
		                        "AD1_RCINIC", "AD1_RCFECH", "AD1_RCREAL", "AD1_CUSTO",  "AD1_FEELIN",;
		                        "AD1_FCS",    "AD1_DESFCS", "AD1_FCI",    "AD1_DESFCI", "AD1_PROPOS", "AD1_STAGE"})
	EndIf
	oDSAbertas:SetPublic(.T.)
	oDSAbertas:AddFilter(STR0349, "AD1_STATUS == '1'")
	oTableAtt:AddView(oDSAbertas)
	
	// Oportunidades Conquistadas 
	oDSConquis := FWDSView():New()
	oDSConquis:SetName(STR0350) // "Oportunidades Conquistadas"
	oDSConquis:SetID("DSConquis") 
	oDSConquis:SetOrder(1) // AD1_FILIAL+AD1_NROPOR
	If lFt300Cpv
		oDSConquis:SetCollumns(aCamposVis)
	Else
		oDSConquis:SetCollumns({"AD1_NROPOR", "AD1_REVISA", "AD1_DESCRI", "AD1_VERBA",  "AD1_MOEDA",  "AD1_RCINIC",;
		                        "AD1_RCFECH", "AD1_RCREAL", "AD1_CUSTO",  "AD1_FEELIN", "AD1_FCS",    "AD1_DESFCS",;
		                        "AD1_FCI",    "AD1_DESFCI", "AD1_PROPOS", "AD1_STAGE",  "AD1_ENCERR", "AD1_MTVENC"})
	EndIf
	oDSConquis:SetPublic(.T.)
	oDSConquis:AddFilter(STR0350,"AD1_STATUS == '9'") // "Oportunidades Conquistadas"
	oTableAtt:AddView(oDSConquis)
	
	// Oportunidades Perdidas 
	oDSPerdida := FWDSView():New()
	oDSPerdida:SetName(STR0351)  // "Oportunidades Perdidas"
	oDSPerdida:SetID("DSPerdida") 
	oDSPerdida:SetOrder(1) // AD1_FILIAL+AD1_NROPOR
	If lFt300Cpv
		oDSPerdida:SetCollumns(aCamposVis)
	Else
		oDSPerdida:SetCollumns({"AD1_NROPOR", "AD1_REVISA", "AD1_DESCRI", "AD1_VERBA",  "AD1_MOEDA", "AD1_RCINIC",;
		                        "AD1_RCFECH", "AD1_RCREAL", "AD1_CUSTO",  "AD1_FEELIN", "AD1_FCS",   "AD1_DESFCS",;
		                        "AD1_FCI",    "AD1_DESFCI", "AD1_PROPOS", "AD1_STAGE"})
	EndIf
	oDSPerdida:SetPublic(.T.)
	oDSPerdida:AddFilter(STR0351, "AD1_STATUS == '2'") //"Oportunidades Perdidas"
	oTableAtt:AddView(oDSPerdida)
	
	// Oportunidades Suspensas 
	oDSSuspens := FWDSView():New()
	oDSSuspens:SetName(STR0352) // "Oportunidades Suspensas"
	oDSSuspens:SetID("DSSuspens") 
	oDSSuspens:SetOrder(1) // AD1_FILIAL+AD1_NROPOR
	If lFt300Cpv
		oDSSuspens:SetCollumns(aCamposVis)
	Else
		oDSSuspens:SetCollumns({"AD1_NROPOR", "AD1_REVISA", "AD1_DESCRI", "AD1_VERBA",  "AD1_MOEDA", "AD1_RCINIC",;
		                        "AD1_RCFECH", "AD1_RCREAL", "AD1_CUSTO",  "AD1_FEELIN", "AD1_FCS",   "AD1_DESFCS",;
		                        "AD1_FCI",    "AD1_DESFCI", "AD1_PROPOS", "AD1_STAGE"})
	EndIf
	oDSSuspens:SetPublic(.T.)
	oDSSuspens:AddFilter(STR0352, "AD1_STATUS == '3'") //"Oportunidades Suspensas"
	oTableAtt:AddView(oDSSuspens)
	
	// Oportunidades Fechadas 
	oDSFechada := FWDSView():New()
	oDSFechada:SetName(STR0353) //"Oportunidades Fechadas"
	oDSFechada:SetID("DSFechada") 
	oDSFechada:SetOrder(1) // AD1_FILIAL+AD1_NROPOR
	If lFt300Cpv
		oDSFechada:SetCollumns(aCamposVis)
	Else
		oDSFechada:SetCollumns({"AD1_NROPOR", "AD1_REVISA", "AD1_DESCRI", "AD1_VERBA",  "AD1_MOEDA",  "AD1_RCINIC",;
		                        "AD1_RCFECH", "AD1_RCREAL", "AD1_CUSTO",  "AD1_FEELIN", "AD1_FCS",    "AD1_DESFCS",;
		                        "AD1_FCI",    "AD1_DESFCI", "AD1_PROPOS", "AD1_STAGE",  "AD1_ENCERR", "AD1_MTVENC"})
	EndIf
	oDSFechada:SetPublic( .T. )
	oDSFechada:AddFilter(STR0353,"AD1_STATUS $ '2,9'") //"Oportunidades Fechadas"
	oTableAtt:AddView(oDSFechada)	
	
	//Gráficos
	
	// Pizza: Oportunidades Por Probabilidade de Sucesso
	oDSPorProb := FWDSChart():New()	
	oDSPorProb:SetName(STR0360)   //"Oportunidades Por Probabilidade de Sucesso"
	oDSPorProb:SetTitle(STR0360)  //"Oportunidades Por Probabilidade de Sucesso"  
	oDSPorProb:SetID("DSPorProb") 
	oDSPorProb:SetType("PIECHART")
	oDSPorProb:SetSeries({{"AD1","AD1_NROPOR","COUNT"}})
	oDSPorProb:SetCategory({{"AD1", "AD1_FEELIN"}})
	oDSPorProb:SetPublic(.T.)
	oDSPorProb:SetLegend(CONTROL_ALIGN_BOTTOM) //Inferior
	oDSPorProb:SetTitleAlign(CONTROL_ALIGN_CENTER) 
	oTableAtt:AddChart(oDSPorProb)
	
	// Funil: Funil de Vendas
	oDSFunil := FWDSChart():New()	
	oDSFunil:SetName(STR0361)   //"Funil de Vendas"
	oDSFunil:SetTitle(STR0361)  //"Funil de Vendas"  
	oDSFunil:SetID("DSFunil") 
	oDSFunil:SetType("FUNNELCHART")
	oDSFunil:SetSeries({{"AD1","AD1_VERBA","SUM"}})
	oDSFunil:SetCategory({{"AC2", "AC2_STAGE + '-' + AC2_DESCRI"}})
	oDSFunil:SetOrderField(2)	// 1 - Ordena pela Series; 2 - Ordena pela Categoria
	oDSFunil:SetOrderType(1)  // 1 - Ordem Crescente; 2 - Ordem Decrescente
	oDSFunil:SetPublic(.T.)
	oDSFunil:SetLegend(CONTROL_ALIGN_BOTTOM) //Inferior
	oDSFunil:SetTitleAlign(CONTROL_ALIGN_CENTER)
	oDSFunil:SetPicture(TxSX3Campo("AD1_VERBA")[5])
	oTableAtt:AddChart(oDSFunil)
	
	// Pizza: Oportunidades Por Campanha
	oDSPorCamp := FWDSChart():New()	
	oDSPorCamp:SetName(STR0354)   //"Oportunidades Por Campanha"
	oDSPorCamp:SetTitle(STR0354)  //"Oportunidades Por Campanha"  
	oDSPorCamp:SetID("DSPorCamp") 
	oDSPorCamp:SetType("PIECHART")
	oDSPorCamp:SetSeries({{"AD1","AD1_NROPOR","COUNT"}})
	oDSPorCamp:SetCategory({{"SUO", "UO_DESC"}})
	oDSPorCamp:SetPublic(.T.)
	oDSPorCamp:SetLegend(CONTROL_ALIGN_BOTTOM) //Inferior
	oDSPorCamp:SetTitleAlign(CONTROL_ALIGN_CENTER) 
	oTableAtt:AddChart(oDSPorCamp)
	
	// Pizza: Oportunidades Por Status
	oDSPorStat := FWDSChart():New()
	oDSPorStat:SetName(STR0355) //"Oportunidades Por Status"
	oDSPorStat:SetTitle(STR0355)//"Oportunidades Por Status"
	oDSPorStat:SetID("DSPorStat") 
	oDSPorStat:SetType("PIECHART")
	oDSPorStat:SetSeries({{"AD1","AD1_NROPOR","COUNT"}})
	oDSPorStat:SetCategory({{"AD1", "AD1_STATUS"}})
	oDSPorStat:SetPublic(.T.)
	oDSPorStat:SetLegend(CONTROL_ALIGN_BOTTOM) //Inferior
	oDSPorStat:SetTitleAlign(CONTROL_ALIGN_CENTER) 
	oTableAtt:AddChart(oDSPorStat)
	
	// Colunas: Placar de Líderes de Venda
	oDSLidVend := FWDSChart():New()	
	oDSLidVend:SetName(STR0356)  	//"Placar de Líderes de Venda"
	oDSLidVend:SetTitle(STR0356)	//"Placar de Líderes de Venda"
	oDSLidVend:SetID("DSLidVend") 
	oDSLidVend:SetType("BARCOMPCHART")
	oDSLidVend:SetSeries({{"AD1","AD1_VERBA","SUM"}})
	oDSLidVend:SetCategory({{"SA3","A3_NOME"}})
	oDSLidVend:SetPublic(.T.)
	oDSLidVend:SetLegend(CONTROL_ALIGN_BOTTOM) //Inferior
	oDSLidVend:SetTitleAlign(CONTROL_ALIGN_CENTER) 
	oTableAtt:AddChart(oDSLidVend)
	
	// Colunas: Principais Oportunidades
	oDSPrincOp := FWDSChart():New()	
	oDSPrincOp:SetName(STR0367)		//"Principais Oportunidades"
	oDSPrincOp:SetTitle(STR0367)	//"Principais Oportunidades"
	oDSPrincOp:SetID("DSPrincOp") 
	oDSPrincOp:SetType("BARCOMPCHART")
	oDSPrincOp:SetSeries({{"AD1","AD1_VERBA","SUM"}})
	oDSPrincOp:SetCategory({{"AD1","AD1_DESCRI"}} )
	oDSPrincOp:SetPublic(.T.)
	oDSPrincOp:SetLegend(CONTROL_ALIGN_BOTTOM) //Inferior
	oDSPrincOp:SetTitleAlign(CONTROL_ALIGN_CENTER) 
	oTableAtt:AddChart(oDSPrincOp)
	
	// Colunas (2 séries): Receita Estimada X Receita Real (Por Data)
	oDSEXRPorD := FWDSChart():New()
	oDSEXRPorD:SetName(STR0357) //"Receita Estimada X Receita Real (Por Data)"
	oDSEXRPorD:SetTitle(STR0357)//"Receita Estimada X Receita Real (Por Data)"
	oDSEXRPorD:SetID("DSEXRPorD") 
	oDSEXRPorD:SetType("BARCOMPCHART")
	oDSEXRPorD:SetSeries({{"AD1","AD1_VERBA","SUM"},{"AD1","AD1_RCREAL","SUM"}})
	oDSEXRPorD:SetCategory({{"AD1","AD1_DTFIM"}})
	oDSEXRPorD:SetPublic(.T.)
	oDSEXRPorD:SetLegend(CONTROL_ALIGN_BOTTOM) //Inferior
	oDSEXRPorD:SetTitleAlign(CONTROL_ALIGN_CENTER) 
	oTableAtt:AddChart(oDSEXRPorD)
	
	// Colunas: Receita Gerada Por Campanha
	oDSRcPorCp := FWDSChart():New()
	oDSRcPorCp:SetName(STR0358) //"Receita Gerada Por Campanha"
	oDSRcPorCp:SetTitle(STR0358) //"Receita Gerada Por Campanha"
	oDSRcPorCp:SetID("DSRcPorCp") 
	oDSRcPorCp:SetType("BARCOMPCHART")
	oDSRcPorCp:SetSeries({{"AD1","AD1_RCREAL","SUM"}})
	oDSRcPorCp:SetCategory({{"SUO", "UO_DESC"}})
	oDSRcPorCp:SetPublic(.T.)
	oDSRcPorCp:SetLegend(CONTROL_ALIGN_BOTTOM) //Inferior
	oDSRcPorCp:SetTitleAlign(CONTROL_ALIGN_CENTER) 
	oTableAtt:AddChart(oDSRcPorCp)
	
	// Colunas: Receita Estimada X Receita Real (Por Vendedor)
	oDSRcPorVd := FWDSChart():New()
	oDSRcPorVd:SetName(STR0359) //"Receita Estimada X Receita Real (Por Vendedor)"
	oDSRcPorVd:SetTitle(STR0359)//"Receita Estimada X Receita Real (Por Vendedor)"
	oDSRcPorVd:SetID("DSRcPorVd") 
	oDSRcPorVd:SetType("BARCOMPCHART")
	oDSRcPorVd:SetSeries({{"AD1","AD1_VERBA","SUM"},{"AD1","AD1_RCREAL","SUM"}})
	oDSRcPorVd:SetCategory({{"SA3","A3_NOME"}})
	oDSRcPorVd:SetPublic(.T.)
	oDSRcPorVd:SetLegend(CONTROL_ALIGN_BOTTOM) //Inferior
	oDSRcPorVd:SetTitleAlign(CONTROL_ALIGN_CENTER) 
	oTableAtt:AddChart(oDSRcPorVd)
EndIf	
Return(oTableAtt)

//------------------------------------------------------------------------------
/*/{Protheus.doc} ModelDef

Modelo de dados do cadastro de Oportunidade de Venda.

@sample		ModelDef() 

@param		Nenhum

@return		ExpO - Objeto MPFormModel

@author		Anderson Silva
@since		20/03/2014
@version	12               
/*/
//------------------------------------------------------------------------------
Static Function ModelDef() 
 
Local nCtrlADJ	 := SuperGetMv("MV_FATMNTP",,1)
Local oModel 	 	:= Nil																							// Modelo de Dados da Oportunidade de Venda.
Local oStructAD1	:= FWFormStruct(1,"AD1",/*bAvalCampo*/,/*lViewUsado*/)									// Estrutura da Tabela AD1 - Oportunidade de Venda.
Local oStructAD2	:= FWFormStruct(1,"AD2",/*bAvalCampo*/,/*lViewUsado*/)									// Estrutura da Tabela AD2 - Time de Vendas.
Local oStructAD3	:= FWFormStruct(1,"AD3",/*bAvalCampo*/,/*lViewUsado*/)									// Estrutura da Tabela AD3 - Concorrentes. 
Local oStructAD4	:= FWFormStruct(1,"AD4",/*bAvalCampo*/,/*lViewUsado*/)									// Estrutura da Tabela AD4 - Parceiros.
Local oStructAD9	:= FWFormStruct(1,"AD9",/*bAvalCampo*/,/*lViewUsado*/)									// Estrutura da Tabela AD9 - Contatos.
Local oStructADJ	:= FWFormStruct(1,"ADJ",FATA300CPO(),/*lViewUsado*/)									// Estrutura da Tabela ADJ - Produtos da Oportunidade de Venda.
Local oStructAIJ	:= FWFormStruct(1,"AIJ",/*bAvalCampo*/,/*lViewUsado*/)									// Estrutura da Tabela AIJ - Evolucao da Venda (Pipeline).
Local bPosVldMdl	:= {|oModel| F300MdlPVal(oModel)}															// Pos-Validacao do Model Oportunidade de Venda (MPFormModel).
Local bCommitMdl	:= {|oModel| F300CmtMdl(oModel)}															// Bloco de commit do Model.
Local bLinPreAD2	:= {|oMdlAD2,nLine,cAction,cField| F300AD2LPre(oMdlAD2,nLine,cAction,cField) }		// Pre-Validacao da linha do Time de Vendas.
Local bLoadAIJ		:= {|oMdlAIJ| F300LdAIJ(oMdlAIJ) }															// Faz o load da tabela AIJ - Evolucao da Venda (Pipeline).
Local bVldActive	:= {|oModel| F300VldMdlAct(oModel)}														// Valida o Model antes de ativar o mesmo.
Local bActive		:= {|oModel| F300MdlAct(oModel)}															// Trata informacoes do model durante a sua ativacao.
Local aMemoAD1 		:= {{"AD1_CODMEM","AD1_MEMO"}}																// Array para ser utilizado na funcao FWMemoVirtual.								
Local aMemoAD4 		:= {{"AD4_CODMEM","AD4_MEMO"}}																// Array para ser utilizado na funcao FWMemoVirtual.								
Local aAux			:= {}

//Chama Ponto de entrada para adicionar mais status para o campo AD1_STATUS
If  Type("lFt300D1St") == "L" .And. lFt300D1St
	aCbAD1Sta	:= Ft300AD1Sta()
EndIf

// Limpa o FCS e FCI nao deixando preencher os dois juntos
aAux := FwStruTrigger("AD1_FCS","AD1_FCI","",.F.,Nil,Nil,Nil)
oStructAD1:AddTrigger(aAux[1],aAux[2],aAux[3],aAux[4])

aAux := FwStruTrigger("AD1_FCS","AD1_DESFCI","",.F.,Nil,Nil,Nil)
oStructAD1:AddTrigger(aAux[1],aAux[2],aAux[3],aAux[4])

aAux := FwStruTrigger("AD1_FCI","AD1_FCS","",.F.,Nil,Nil,Nil)
oStructAD1:AddTrigger(aAux[1],aAux[2],aAux[3],aAux[4])

aAux := FwStruTrigger("AD1_FCI","AD1_DESFCS","",.F.,Nil,Nil,Nil)
oStructAD1:AddTrigger(aAux[1],aAux[2],aAux[3],aAux[4])

//Carrega os valores para o campo AD1_STATUS no Model
If Type("lFt300D1St") == "L" .And. lFt300D1St
	oStructAD1:SetProperty("AD1_STATUS",MODEL_FIELD_VALUES,aCbAD1Sta)
EndIf

// Inicializa os campos de historico.
oStructAD2:SetProperty("AD2_HISTOR",MODEL_FIELD_INIT,FwBuildFeature(STRUCT_FEATURE_INIPAD,"2"))
oStructAD3:SetProperty("AD3_HISTOR",MODEL_FIELD_INIT,FwBuildFeature(STRUCT_FEATURE_INIPAD,"2"))
oStructAD9:SetProperty("AD9_HISTOR",MODEL_FIELD_INIT,FwBuildFeature(STRUCT_FEATURE_INIPAD,"2"))
oStructADJ:SetProperty("ADJ_HISTOR",MODEL_FIELD_INIT,FwBuildFeature(STRUCT_FEATURE_INIPAD,"2"))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona campo de legenda na estrutura da Evolucao da Venda. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
oStructAIJ:AddField(	AllTrim("")									,;  	// [01] C Titulo do campo
						AllTrim(STR0308)							,;   	// [02] C ToolTip do campo 
		     			"AIJ_LEGEND" 								,;    	// [03] C identificador (ID) do Field
		         		"C" 										,;    	// [04] C Tipo do campo
		            	15 											,;    	// [05] N Tamanho do campo
		              	0 											,;    	// [06] N Decimal do campo
		                Nil 										,;    	// [07] B Code-block de validação do campo
		                Nil											,;     	// [08] B Code-block de validação When do campo
		                Nil 										,;    	// [09] A Lista de valores permitido do campo
		                Nil 										,;  	// [10] L Indica se o campo tem preenchimento obrigatório
		                {|| "BR_VERDE" } 							,;   	// [11] B Code-block de inicializacao do campo
		                Nil 										,;  	// [12] L Indica se trata de um campo chave
		                Nil 										,;     	// [13] L Indica se o campo pode receber valor em uma operação de update.
		                .T. )              									// [14] L Indica se o campo é virtual
	 

If nCtrlADJ == 4
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona RECNO para controle da gravação da GRID agrupadores. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
	oStructADJ:AddField(	"R_E_C_N_O_"								,;  	// [01] C Titulo do campo
							"R_E_C_N_O_"								,;   	// [02] C ToolTip do campo 
		     				"R_E_C_N_O_" 								,;    	// [03] C identificador (ID) do Field
			         		"N" 										,;    	// [04] C Tipo do campo
		            		15 											,;    	// [05] N Tamanho do campo
		              		0 											,;    	// [06] N Decimal do campo
		                	Nil 										,;    	// [07] B Code-block de validação do campo
		                	Nil											,;     	// [08] B Code-block de validação When do campo
		                	Nil 										,;    	// [09] A Lista de valores permitido do campo
		                	Nil 										,;  	// [10] L Indica se o campo tem preenchimento obrigatório
		              		Nil				 							,;   	// [11] B Code-block de inicializacao do campo
			                Nil 										,;  	// [12] L Indica se trata de um campo chave
		                	Nil 										,;     	// [13] L Indica se o campo pode receber valor em uma operação de update.
			                .F. )              									// [14] L Indica se o campo é virtual
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para campos do tipo Memo com o conteudo na SYP ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
FWMemoVirtual(oStructAD1,aMemoAD1)
FWMemoVirtual(oStructAD4,aMemoAD4)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Instancia o modelo de dados da Oportunidade de Venda. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel := MPFormModel():New("FATA300",/*bPreValidacao*/,bPosVldMdl,bCommitMdl,/*bCancel*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona no modelo formulario e grids. ³ 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabeçalho - Oportunidade de Venda. ³ 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:AddFields("AD1MASTER",/*cOwner*/,oStructAD1,/*bPreValidacao*/,/*bPosValidacao*/,/*bCarga*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Time de Vendas. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
oModel:AddGrid("AD2DETAIL","AD1MASTER",oStructAD2,bLinPreAD2,/*bLinePost*/,/*bPreVal*/,/*bPosVal*/,/*bLoad*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Concorrentes. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:AddGrid("AD3DETAIL","AD1MASTER",oStructAD3,/*bLinePre*/,/*bLinePost*/,/*bPreVal*/,/*bPosVal*/,/*bLoad*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Parceiros. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:AddGrid("AD4DETAIL","AD1MASTER",oStructAD4,/*bLinePre*/,/*bLinePost*/,/*bPreVal*/,/*bPosVal*/,/*bLoad*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Contatos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:AddGrid("AD9DETAIL","AD1MASTER",oStructAD9,/*bLinePre*/,/*bLinePost*/,/*bPreVal*/,/*bPosVal*/,/*bLoad*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Produtos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:AddGrid("ADJDETAIL","AD1MASTER",oStructADJ,/*bLinePre*/,/*bLinePost*/,/*bPreVal*/,/*bPosVal*/,/*bLoad*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Evolucao da Venda (Pipeline). ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:AddGrid("AIJDETAIL","AD1MASTER",oStructAIJ,/*bLinePre*/,/*bLinePost*/,/*bPreVal*/,/*bPosVal*/,bLoadAIJ)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do relacionamento. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Time de Vendas. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:SetRelation("AD2DETAIL",{{"AD2_FILIAL","xFilial('AD2')"},{"AD2_NROPOR","AD1_NROPOR"},{"AD2_REVISA","AD1_REVISA"}},AD2->( IndexKey(1)))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Concorrentes. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:SetRelation("AD3DETAIL",{{"AD3_FILIAL","xFilial('AD3')"},{"AD3_NROPOR","AD1_NROPOR"},{"AD3_REVISA","AD1_REVISA"}},AD3->( IndexKey(1)))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Parceiros. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:SetRelation("AD4DETAIL",{{"AD4_FILIAL","xFilial('AD4')"},{"AD4_NROPOR","AD1_NROPOR"},{"AD4_REVISA","AD1_REVISA"}},AD4->( IndexKey(1)))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Contatos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:SetRelation("AD9DETAIL",{{"AD9_FILIAL","xFilial('AD9')"},{"AD9_NROPOR","AD1_NROPOR"},{"AD9_REVISA","AD1_REVISA"}},AD9->( IndexKey(1)))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Produtos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:SetRelation("ADJDETAIL",{{"ADJ_FILIAL","xFilial('ADJ')"},{"ADJ_NROPOR","AD1_NROPOR"},{"ADJ_REVISA","AD1_REVISA"}},ADJ->( IndexKey(1)))
 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Evolucao da Venda (Pipeline). ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:SetRelation("AIJDETAIL",{{"AIJ_FILIAL","xFilial('AIJ')"},{"AIJ_NROPOR","AD1_NROPOR"},{"AIJ_REVISA","AD1_REVISA"},{"AIJ_PROVEN","AD1_PROVEN"}},AIJ->( IndexKey(1)))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Permite de Grid sem dados. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:GetModel("AD2DETAIL"):SetOptional(.T.)	// Time de Vendas
oModel:GetModel("AD3DETAIL"):SetOptional(.T.)	// Concorrentes
oModel:GetModel("AD4DETAIL"):SetOptional(.T.)	// Parceiros
oModel:GetModel("AD9DETAIL"):SetOptional(.T.)	// Contatos
oModel:GetModel("ADJDETAIL"):SetOptional(.T.)	// Produtos
oModel:GetModel("AIJDETAIL"):SetOptional(.T.)	// Evolucao da Venda

// Adicao do modelo da AO4 para evitar a validacao indevida do relacionamento SX9 antes da funcao CRMA200PAut
AO4GdModel("AD1MASTER", oModel, "AD1" )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Bloqueia edição da linha ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nCtrlADJ == 4
	oModel:GetModel("ADJDETAIL"):CanUpdateLine(.F.)
	oModel:GetModel("ADJDETAIL"):CanInsertLine(.F.)
Else
	oModel:GetModel("ADJDETAIL"):SetOnlyQuery(.T.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Validação de linha duplicada. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:GetModel("AD2DETAIL"):SetUniqueLine({"AD2_VEND"})
oModel:GetModel("AD3DETAIL"):SetUniqueLine({"AD3_CODCON"})
oModel:GetModel("AD4DETAIL"):SetUniqueLine({"AD4_PARTNE"})
oModel:GetModel("AD9DETAIL"):SetUniqueLine({"AD9_CODCON"})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Permissoes para Grid. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:GetModel("AIJDETAIL"):SetNoInsertLine(.T.)
oModel:GetModel("AIJDETAIL"):SetNoDeleteLine(.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida se o Model(MPFormModel) pode ser ativado. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:SetVldActivate(bVldActive)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realiza validações e alterações no Model(MPFormModel) ³
//³ da Oportunidade de Venda após a sua ativação.  		  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:SetActivate(bActive)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Descricao do Model. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oModel:SetDescription(STR0001) // "Oportunidade de Venda"

Return(oModel)

//------------------------------------------------------------------------------
/*/{Protheus.doc} ViewDef

Interface da Oportunidade de Venda.

@sample		ViewDef()

@param		Nenhum

@return		ExpO - Objeto FWFormView

@author		Anderson Silva
@since		20/03/2014
@version	12             
/*/
//------------------------------------------------------------------------------
Static Function ViewDef()

Local cFatProp   	:= SuperGetMV("MV_FATPROP",,"O")						// Abre tela de Orcamento ou proposta Comercial no botao FORECAST
Local nCtrlADJ		:= SuperGetMv("MV_FATMNTP",,1)							// Controla a exibicao de produtos na oportunidade.   
Local lMultVist 	:= SuperGetMv("MV_MULVIST",,.F.)   						// Multipla Vistorias Tecnica
Local oView 		:= Nil													// Interface da Oportunidade de Venda.
Local oModel		:= FWLoadModel("FATA300")								// Modelo de Dados da Oportunidade de Venda.
Local oStructAD1	:= FWFormStruct(2,"AD1",/*bAvalCampo*/,/*lViewUsado*/)	// Estrutura da Tabela AD1 - Oportunidade de Venda.
Local oStructAD2	:= FWFormStruct(2,"AD2",/*bAvalCampo*/,/*lViewUsado*/)	// Estrutura da Tabela AD2 - Time de Vendas.
Local oStructAD3	:= FWFormStruct(2,"AD3",/*bAvalCampo*/,/*lViewUsado*/)	// Estrutura da Tabela AD3 - Concorrentes.
Local oStructAD4	:= FWFormStruct(2,"AD4",/*bAvalCampo*/,/*lViewUsado*/)	// Estrutura da Tabela AD4 - Parceiros.
Local oStructAD9	:= FWFormStruct(2,"AD9",/*bAvalCampo*/,/*lViewUsado*/)	// Estrutura da Tabela AD9 - Contatos.
Local oStructADJ	:= FWFormStruct(2,"ADJ",FATA300CPO(),/*lViewUsado*/)	// Estrutura da Tabela ADJ - Produtos da Oportunidade de Venda.
Local oStructAIJ	:= FWFormStruct(2,"AIJ",/*bAvalCampo*/,/*lViewUsado*/)	// Estrutura da Tabela AIJ - Evolução da Venda (Pipeline).
Local lPyme			:= IIF(Type("__lPyme") <> "U",__lPyme,.F.)					// Serie 3 do Protheus
Local bCanViewAct	:= {|oView| F300CanViewAct(oView) }						// Bloco de codigo para alterar a view antes da sua ativacao.
Local bAftViewAct	:= {|oView| F300AftViewAct(oView) } 					// Bloco de codigo para alterar a view depois da sua ativacao.
Local lAddButton	:= .T.													// Cria botao de usuario
Local lFt300Orc		:= ExistBlock("FT300ORC")									// Ponto de entrada
Local lFt300But		:= ExistBlock("FT300BUT")									// Ponto de entrada									
Local aButUser		:= {}		
Local uRetorno		:= Nil														// Retorno do ponto de entrada
Local nOpc			:= 0
Local lOrcSimp	 	:= SuperGetMV('MV_ORCSIMP',, '2') == '1'

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona campo de legenda na estrutura da Evolucao da Venda. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
oStructAIJ:AddField(	"AIJ_LEGEND" 								,;	// [01] C Nome do Campo
						"01" 										,; 	// [02] C Ordem
						AllTrim("")									,; 	// [03] C Titulo do campo
	     				AllTrim(STR0308)							,; 	// [04] C Descrição do campo 
	         			{STR0308} 	   								,; 	// [05] A Array com Help
	            		"C" 										,; 	// [06] C Tipo do campo
	            		"@BMP" 										,; 	// [07] C Picture
	              		Nil 										,; 	// [08] B Bloco de Picture Var
	                	"" 											,; 	// [09] C Consulta F3
	                 	.F. 										,;	// [10] L Indica se o campo é evitável
	                  	Nil 										,; 	// [11] C Pasta do campo
	                   	Nil 										,;	// [12] C Agrupamento do campo
	                    Nil 										,; 	// [13] A Lista de valores permitido do campo (Combo)
	                    Nil 										,;	// [14] N Tamanho Maximo da maior opção do combo
	                    Nil 										,;	// [15] C Inicializador de Browse
	                    .T. 										,;	// [16] L Indica se o campo é virtual
	                    Nil )                 							// [17] C Picture Variável    

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Remove os campos da estrutura da Oportunidade de Venda. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oStructAD1:RemoveField("AD1_CODMEM")
oStructAD1:RemoveField("AD1_IDESTN")
oStructAD1:RemoveField("AD1_NVESTN")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Vistoria Tecnica do Gestão de Serviços e CRM. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (( nModulo <> 28 .And. nModulo <> 73) .OR. lPyme .OR. lMultVist .Or. lOrcSimp)
	oStructAD1:RemoveField("AD1_VISTEC")
	oStructAD1:RemoveField("AD1_CODVIS")
	oStructAD1:RemoveField("AD1_SITVIS")
EndIf 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Remove os campos da estrutura do Time de Vendas. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oStructAD2:RemoveField("AD2_NROPOR")
oStructAD2:RemoveField("AD2_REVISA")
oStructAD2:RemoveField("AD2_HISTOR")
oStructAD2:RemoveField("AD2_IDESTN")
oStructAD2:RemoveField("AD2_NVESTN")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Remove os campos da estrutura de Concorrentes. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oStructAD3:RemoveField("AD3_NROPOR")
oStructAD3:RemoveField("AD3_REVISA")
oStructAD3:RemoveField("AD3_HISTOR")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Remove os campos da estrutura de Parceiros. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oStructAD4:RemoveField("AD4_NROPOR")
oStructAD4:RemoveField("AD4_REVISA")
oStructAD4:RemoveField("AD4_HISTOR")
oStructAD4:RemoveField("AD4_CODMEM")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Remove os campos da estrutura de Contatos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oStructAD9:RemoveField("AD9_NROPOR")
oStructAD9:RemoveField("AD9_REVISA")
oStructAD9:RemoveField("AD9_HISTOR")
 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Remove os campos da estrutura de Produtos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oStructADJ:RemoveField("ADJ_FILIAL")
oStructADJ:RemoveField("ADJ_NROPOR")
oStructADJ:RemoveField("ADJ_REVISA")
oStructADJ:RemoveField("ADJ_HISTOR")

If nCtrlADJ == 4
	oStructADJ:RemoveField("ADJ_HISTOR")
	oStructADJ:RemoveField("ADJ_PROPOS")
	oStructADJ:RemoveField("ADJ_NUMORC")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Remove os campos da estrutura da Evolução da Venda. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oStructAIJ:RemoveField("AIJ_NROPOR")
oStructAIJ:RemoveField("AIJ_REVISA")
oStructAIJ:RemoveField("AIJ_HISTOR")
oStructAIJ:RemoveField("AIJ_STATUS")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Os campos de Prospect / Loja e Cliente / Loja ficará no modo de 	³
//³visualizacao pois os seus valores serao atribuidos pelas rotinas	³
//³Area de Trabalho do Faturamento e SubClientes do CRM.			 	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If IsInCallStack("FATA320") .OR. IsInCallStack("CRMA120")
	oStructAD1:SetProperty("AD1_PROSPE",MVC_VIEW_CANCHANGE,.F.)
	oStructAD1:SetProperty("AD1_LOJPRO",MVC_VIEW_CANCHANGE,.F.)		
	oStructAD1:SetProperty("AD1_CODCLI",MVC_VIEW_CANCHANGE,.F.)
	oStructAD1:SetProperty("AD1_LOJCLI",MVC_VIEW_CANCHANGE,.F.)	
EndIf

//Carrega os valores para o campo AD1_STATUS na View
If Type("lFt300D1St") == "L" .And. lFt300D1St
	oStructAD1:SetProperty("AD1_STATUS",MVC_VIEW_COMBOBOX,aCbAD1Sta)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Instancia a interface da Oportunidade de Venda. ³ 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView := FWFormView():New()
oView:SetModel(oModel)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabeçalho - Oportunidade de Venda. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:AddField("VIEW_AD1",oStructAD1,"AD1MASTER")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Time de Vendas. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:AddGrid("VIEW_AD2",oStructAD2,"AD2DETAIL")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Concorrentes. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:AddGrid("VIEW_AD3",oStructAD3,"AD3DETAIL")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Parceiros. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:AddGrid("VIEW_AD4",oStructAD4,"AD4DETAIL")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Contatos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:AddGrid("VIEW_AD9",oStructAD9,"AD9DETAIL")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Produtos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:AddGrid("VIEW_ADJ",oStructADJ,"ADJDETAIL")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grid - Evolucao da Venda (Pipeline). ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:AddGrid("VIEW_AIJ",oStructAIJ,"AIJDETAIL")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Box - Cabeçalho da Oportunidade de Venda. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:CreateHorizontalBox("TOP",50)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Box - Rodape da Oportunidade de Venda (Time de Vendas, Concorrentes, Parceiros, Contatos, Produtos, Evolucao da Venda (Pipeline) ). ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:CreateHorizontalBox("BOTTOM",50)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Folder - Criação das Pastas. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:CreateFolder("FOLDER","BOTTOM")
oView:AddSheet("FOLDER","TAB_AD2",STR0007)	// "Time de Vendas"
oView:AddSheet("FOLDER","TAB_AD3",STR0008)	// "Concorrentes"
oView:AddSheet("FOLDER","TAB_AD4",STR0009)	// "Parceiros"
oView:AddSheet("FOLDER","TAB_AD9",STR0010)	// "Contatos"
oView:AddSheet("FOLDER","TAB_ADJ",STR0070)	// "Produtos"
oView:AddSheet("FOLDER","TAB_AIJ",STR0241)	// "Evolução da Venda"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Box dentro do Folder - Rodape da Oportunidade de Venda ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:CreateHorizontalBox("HBX_AD2",100,,,"FOLDER","TAB_AD2") // "Time de Vendas"
oView:CreateHorizontalBox("HBX_AD3",100,,,"FOLDER","TAB_AD3") // "Concorrentes"
oView:CreateHorizontalBox("HBX_AD4",100,,,"FOLDER","TAB_AD4") // "Parceiros"
oView:CreateHorizontalBox("HBX_AD9",100,,,"FOLDER","TAB_AD9") // "Contatos"
oView:CreateHorizontalBox("HBX_ADJ",100,,,"FOLDER","TAB_ADJ") // "Produtos"
oView:CreateHorizontalBox("HBX_AIJ",100,,,"FOLDER","TAB_AIJ") // "Evolução da Venda"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seta a view no janelamento criado anteriormente. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:SetOwnerView("VIEW_AD1","TOP")
oView:SetOwnerView("VIEW_AD2","HBX_AD2")	// "Time de Vendas"
oView:SetOwnerView("VIEW_AD3","HBX_AD3") 	// "Concorrentes"
oView:SetOwnerView("VIEW_AD4","HBX_AD4")	// "Parceiros"
oView:SetOwnerView("VIEW_AD9","HBX_AD9")	// "Contatos"
oView:SetOwnerView("VIEW_ADJ","HBX_ADJ")	// "Produtos"
oView:SetOwnerView("VIEW_AIJ","HBX_AIJ")	// "Evolução da Venda"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Configura campos do ModelGrid para incrementar automaticamente. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:AddIncrementField("VIEW_ADJ","ADJ_ITEM")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona os funcionalidades da Oportunidade de Venda em Ações Relacionadas. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If AllTrim(cFatProp) == "O" .AND. nCtrlADJ <> 3 .AND. nCtrlADJ <> 4
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para usuario desconsiderar o botao de Orçamento na View. ³
	//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lFt300Orc
		If Type("ALTERA") == "L" 
			nOpc := IIF(ALTERA,4,2)
		EndIf
		If AllTrim(Str(nOpc)) $ "2|4"
			uRetorno := ExecBlock("FT300ORC",.F.,.F.,{oModel, nOpc })	
			If ValType(uRetorno) == "L"
				lAddButton := uRetorno
			EndIf
		EndIf	
	EndIf
	
	If lAddButton 
		oView:AddUserButton(STR0011,"",{|| Ft300Orc()},,,{MODEL_OPERATION_VIEW,MODEL_OPERATION_UPDATE})											//"Orçamento"
	EndIf
	
ElseIf AllTrim(cFatProp) == "P" .AND. nCtrlADJ <> 3
	oView:AddUserButton(STR0075,"",{|| FATA600(oModel)},,,{MODEL_OPERATION_VIEW,MODEL_OPERATION_UPDATE})											//"Proposta Comercial"
EndIf 
  
oView:AddUserButton(STR0065,"",{|| Ft300AnCusto()},,,{MODEL_OPERATION_VIEW,MODEL_OPERATION_UPDATE}) 												//"Análise do Custo" 
oView:AddUserButton(STR0309,"",{|| Ft300AFinCta()},/*cToolTip*/,/*nShortCut*/,{MODEL_OPERATION_VIEW,MODEL_OPERATION_UPDATE}) 					//"Avaliação Financeira"
oView:AddUserButton(STR0310,"",{|| Ft300PendF()},/*cToolTip*/,/*nShortCut*/,{MODEL_OPERATION_VIEW,MODEL_OPERATION_UPDATE})						//"Pendência Financeira"
oView:AddUserButton(STR0066,"",{|| FT300Track()},/*cToolTip*/,/*nShortCut*/,{MODEL_OPERATION_VIEW,MODEL_OPERATION_UPDATE}) 					//"System Tracker" 
oView:AddUserButton(STR0067,"",{|| FT300Hist()},/*cToolTip*/,/*nShortCut*/,{MODEL_OPERATION_VIEW,MODEL_OPERATION_UPDATE}) 						//"Historico"
oView:AddUserButton(STR0235,"",{|| Ft300Perfil()},/*cToolTip*/,/*nShortCut*/) 																		//"Perfil"
oView:AddUserButton(STR0261,"",{|| Ft300LEVen()},/*cToolTip*/,/*nShortCut*/) 																		//"Legenda Evolução da Venda"

If nCtrlADJ == 4
	oView:AddUserButton(STR0387,"",{|oModel| FT300AtuADJ(oModel),oView:Refresh() },,VK_F4,{MODEL_OPERATION_INSERT,MODEL_OPERATION_UPDATE}) 	//"Agrupadores"
EndIf

oView := CRMXAddAct("AD1",oView) //Adcionar Rotinas no 'Ações relacionadas' do Formulário		
																									 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para adicionar novos botoes na Oportunidade de Venda. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lFt300But
	aButUser := ExecBlock("FT300BUT",.F.,.F.,{oView})
	If ( ValType(aButUser) == "A" .And. Len( aButUser ) > 0 ) 
		aEval(aButUser,{|x| oView:AddUserButton(x[1],x[2],x[3],x[4],x[5],x[6])})	
	EndIf	
EndIf

aSort(oView:aUserButtons,,,{ | x,y | y[1] > x[1] } )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fecha o formulario ao confirmar uma operação CRUD. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:SetCloseOnOk( { || .T. } )
oView:ShowInsertMessage(.F.)
oView:ShowUpdateMessage(.F.)
 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seta formulario continuo para Oportunidade de Venda. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:SetContinuousForm()   

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seta algumas regras de negocio antes da ativacao da View. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:SetViewCanActivate(bCanViewAct)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seta algumas regras de negocio depois que a View foi ativada. ³
//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oView:SetAfterViewActivate(bAftViewAct)  

Return(oView)  

//------------------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
MenuDef da Oportunidade de Venda
@sample		MenuDef()
@param		Nenhum
@return		ExpA - Rotinas CRUD / Acoes Relacionadas
@author		Anderson Silva
@since		20/03/2014 
@version	12             
/*/
//------------------------------------------------------------------------------
Static Function MenuDef() 

Local uRotina		:= Nil
Local lPyme			:= IIF(Type("__lPyme") <> "U",__lPyme,.F.)
Local lFt300Mnu		:= ExistBlock("FT300MNU")	//Ponto de Entrada para adicionar novas funções nas 'Ações Relacionadas' no Browse da Oportunidade de Venda.
Local lOrcSimp	 	:= SuperGetMV('MV_ORCSIMP',, '2') == '1'
Local aRotina		:= {}
Local aEntRelac  	:= {}

ADD OPTION aRotina   TITLE STR0002 ACTION "PesqBrw"                            OPERATION 1 ACCESS 0 	// "Pesquisar"
ADD OPTION aRotina   TITLE STR0003 ACTION "VIEWDEF.FATA300"                    OPERATION 2 ACCESS 0 	// "Visualizar"
ADD OPTION aRotina   TITLE STR0004 ACTION "VIEWDEF.FATA300"                    OPERATION 3 ACCESS 0 	// "Incluir"
ADD OPTION aRotina   TITLE STR0005 ACTION "VIEWDEF.FATA300"                    OPERATION 4 ACCESS 0		// "Alterar"
ADD OPTION aRotina   TITLE STR0006 ACTION "VIEWDEF.FATA300"                    OPERATION 5 ACCESS 0 	// "Excluir"
ADD OPTION aEntRelac TITLE STR0012 ACTION "MsDocument('AD1',AD1->(RecNo()),4)" OPERATION 4 ACCESS 0		// "Banco de Conhecimento"
ADD OPTION aRotina   TITLE STR0036 ACTION "Ft300Rev"                           OPERATION 2 ACCESS 0 	// "Comparar"
ADD OPTION aRotina   TITLE STR0016 ACTION "Ft300Leg"                           OPERATION 2 ACCESS 0 	// "Legenda"

If nModulo == 28 .AND. !lPyme .And. !lOrcSimp
	// Solicitação de Vistoria Técnica para o Modulo Gestão de Serviços
	ADD OPTION aRotina TITLE STR0233 ACTION "TECA290"	OPERATION 4 ACCESS 0 	// "Solicitação Vistoria. Técnica"
EndIf

ADD OPTION aRotina TITLE  STR0366 ACTION aEntRelac 	    OPERATION 8 ACCESS 0	//"Relacionadas"

If lFt300Mnu
	uRotina := ExecBlock("FT300MNU",.F.,.F.,{aRotina})
	If ValType(uRotina) == "A"
		aRotina := aClone(uRotina)
    EndIf
EndIf
Return aRotina

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300F3U5

Rotina de consulta de contatos da entidade utilizada na oportunidade. 

@sample	Ft300F3U5()

@param		Nenhum

@return	ExpL - Verdadeiro / Falso

@author	Anderson Silva
@since		20/03/2014 
@version	12             
/*/
//------------------------------------------------------------------------------
Function Ft300F3U5()

Local aArea			:= GetArea()
Local aAreaAC8		:= AC8->(GetArea())
Local oModel	 	:= FwModelActive()
Local oMdlAD1	 	:= oModel:GetModel("AD1MASTER")
Local cQuery		:= ""
Local cEntidade		:= ""
Local cCodEnt		:= ""
Local lRetorno		:= .T.
Local lObfNContat	:= .F.
Local cAliTmp		:= "SU5TMP"
Local cPesq	 		:= Space(50)
Local nRecno		:= 0
Local oDlg			:= Nil
Local oLstBx		:= Nil
Local aContato		:= {}
Local bRet			:= {|| If(!Empty(aTail(oLstBx:aArray[oLstBx:nAt])),(lRetorno := .T.,nRecno := IIf(Len(oLstBx:aArray)>=oLstBx:nAt,aTail(oLstBx:aArray[oLstBx:nAt]),0),oDlg:DeActivate()),(lRetorno := .F.,MsgInfo(STR0208)))}
Local bVisual		:= {|| SaveInter(),If(!Empty(aTail(oLstBx:aArray[oLstBx:nAt])),(nRecno := IIf(Len(oLstBx:aArray)>=oLstBx:nAt,aTail(oLstBx:aArray[oLstBx:nAt]),0),ALTERA := .F.,SU5->(DbGoTo(nRecno),A70Visual("SU5",nRecno,2))),Nil),RestInter()}
Local oPesq			:= Nil


If !Empty(oMdlAD1:GetValue("AD1_CODCLI"))
	cEntidade	:= "SA1"
	cCodEnt	:= oMdlAD1:GetValue("AD1_CODCLI")+oMdlAD1:GetValue("AD1_LOJCLI")
ElseIf !Empty(oMdlAD1:GetValue("AD1_PROSPE"))
	cEntidade	:= "SUS"
	cCodEnt	:= oMdlAD1:GetValue("AD1_PROSPE")+oMdlAD1:GetValue("AD1_LOJPRO")
EndIf

If Empty(cEntidade)
	MsgInfo(STR0112) //"Nenhuma entidade (Código do Cliente/Código do Prospect) foi selecionada"
	lRetorno := .F.
EndIf

If lRetorno

	cQuery	:= "SELECT U5_CODCONT,U5_CONTAT,SU5.R_E_C_N_O_ AS RECN FROM " + RetSqlName("SU5") + " SU5 "
	cQuery	+= "INNER JOIN " + RetSqlName("AC8") + " AC8 ON AC8_FILIAL = '"+xFilial("AC8")+"' AND AC8_FILENT = '"+xFilial(cEntidade)+"' "
	cQuery	+= "AND AC8_ENTIDA = '"+cEntidade+"' AND AC8_CODENT = '"+cCodEnt+"' AND AC8_CODCON = U5_CODCONT "
	cQuery	+= "AND AC8.D_E_L_E_T_ = ' ' "
	cQuery	+= "WHERE SU5.D_E_L_E_T_ = ' '"

	cQuery	:= ChangeQuery(cQuery)

	If Select(cAliTmp) > 0
		(cAliTmp)->(DbCloseArea())
	EndIf

	DbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliTmp,.T.,.T.)
	DbGoTop()

	While !(cAliTmp)->(Eof())
		AAdd(aContato,{(cAliTmp)->U5_CODCONT,(cAliTmp)->U5_CONTAT,(cAliTmp)->RECN})
		(cAliTmp)->(DbSkip())
	EndDo

	(cAliTmp)->(DbCloseArea())

	If Len(aContato) == 0
		aAdd(aContato,{Nil,Nil,Nil})
	EndIf
	oDlg := FWDialogModal():New()
	oDlg:SetBackground(.F.) // .T. -> escurece o fundo da janela
	oDlg:SetTitle(STR0114)//"Consulta"
	oDlg:SetEscClose(.T.)//permite fechar a tela com o ESC
	oDlg:SetSize(210,270) //cria a tela maximizada (chamar sempre antes do CreateDialog)
	oDlg:EnableFormBar(.T.)

	oDlg:CreateDialog() //cria a janela (cria os paineis)
	oPanel := oDlg:getPanelMain()

	oDlg:createFormBar()//cria barra de botoes

	oDlg:AddButton(STR0135,{|| oDlg:Deactivate()}, STR0139, , .T., .F., .T., )//Cancelar
	oDlg:AddButton(STR0014,{|| Eval(bRet)}, STR0014, , .T., .F., .T., )//OK
	oDlg:AddButton(STR0004,{|| Ft300IncCon(cEntidade,cCodEnt,oLstBx)}, STR0004, , .T., .F., .T., )//Incluir
	oDlg:AddButton(STR0003,{|| Eval(bVisual)}, STR0003, , .T., .F., .T., )//Visualizar

	//Texto de pesquisa
	@ 003,002 MsGet oPesq Var cPesq Size 219,009 COLOR CLR_BLACK PIXEL OF oPanel

	//Interface para selecao de indice e filtro
	@ 003,228 Button STR0002 Size 037,012 PIXEL OF oPanel ACTION IF(!Empty(aTail(oLstBx:aArray[oLstBx:nAt])),Ft300LbxSCon(oLstBx,cPesq),Nil) //Pesquisar

	//ListBox      
	@ 20,03 LISTBOX oLstBx FIELDS HEADER STR0115,STR0116 SIZE 264,139 OF oPanel PIXEL //"Código"###"Nome"
	oLstBx:bLDblClick := bRet

	//Metodos da ListBox
	oLstBx:SetArray(aContato)
	oLstBx:bLine 	:= {|| {aContato[oLstBx:nAt,1],;
	                      aContato[oLstBx:nAt,2],;
	                      aContato[oLstBx:nAt,3]}}
	If FATPDActive() .And. FTPDUse(.T.)
		lObfNContat				:= FATPDIsObfuscate("U5_CONTAT",Nil,.T.)
		oLstBx:aObfuscatedCols	:= {.F.,lObfNContat}   
	EndIf   
	oDlg:Activate()
	FATPDLogUser("FT300F3U5")
EndIf

If lRetorno
	DbSelectArea("SU5")
	DbGoTo(nRecno)
EndIf

If aArea[1] <> "SU5"
	RestArea(aArea)
EndIf

RestArea(aAreaAC8)
Return(lRetorno)


//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300LbxSCon

Realiza a pesquisa no objeto do ListBox.	 

@sample		Ft300LbxSCon(oLstBx,cPesq)

@param		ExpO1 - Objeto ListBox de Contatos
			ExpC2 - Chave para pesquisa

@return		Nenhum

@author		Anderson Silva
@since		07/04/2014 
@version	12             
/*/
//------------------------------------------------------------------------------
Static Function Ft300LbxSCon(oLstBx,cPesq) 

Local nLen	:= 0
Local nPos	:= 0 

Default oLstBx	:= Nil
Default cPesq	:= ""

If !Empty( cPesq )
	cPesq 	:= AllTrim(Upper(cPesq))
	nLen	:= Len(cPesq)
	nPos	:= aScan(oLstBx:aArray,{|x| Left(Upper(x[1]),nLen) == cPesq .Or. Left(Upper(x[2]),nLen) == cPesq })
	If nPos > 0
		oLstBx:nAt := nPos
		oLstBx:Refresh()  
	EndIf 
EndIf 

Return Nil  

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300SelP

Interface de selecao de Proposta Comercial para avaliacao financeira do Cliente ou Prospect. 

@sample 	Ft300SelP(cNrOport,cRevisa,cEntidade,aSocios)

@param		ExpC1 - Numero da Oportunidade de Venda
			ExpC2 - Revisao da Oportunidade de Venda
			ExpC3 - Entidade para ser avalidada (Cliente ou Prospect).
			ExpA4 - Socios do Grupo Societario
			
@return		ExpL - Verdadeiro / Falso

@author		Anderson Silva
@since		03/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Function Ft300SelP(cNrOport,cRevisa,cEntidade,aSocios)

Local aListBox		:= {} 											//Array com as propostas
Local oOkPrd    	:= LoadBitMap(GetResources(), "LBOK")     	//Img. Marcado
Local oNoPrd    	:= LoadBitMap(GetResources(), "LBNO")     	//Img. Desmarcado
Local oDlgProp   	:= Nil                                         	//Objeto Dialog
Local oListBox	:= Nil                                         	//Objeto ListBox
Local lRetorno	:= .F.											//Retorno da funcao para indicar se ha propostas comercial para avaliacao de credito.
Local cFilADY		:= xFilial("ADY")

Default aSocios 	:= {}

DEFINE FONT oBold NAME "Arial" SIZE 0, -12 BOLD

DbSelectArea("ADY")
//ADY_FILIAL+ADY_OPORTU+ADY_REVISA+ADY_PROPOS                                                                                                                     
ADY->(DbSetOrder(2))

If ADY->(DbSeek(cFilADY+cNrOport+cRevisa))
	
	While ( ADY->(!Eof()) .AND. ADY->ADY_FILIAL == cFilADY .AND.;
		 ADY->ADY_OPORTU == cNrOport .AND. ADY->ADY_REVISA == cRevisa )
		 aAdd(aListBox,{.F.,ADY->ADY_PROPOS,dToc(ADY->ADY_DATA)})
		ADY->(DbSkip())		 
	End 
	 
EndIf

If Len(aListBox) > 0 
	
	If Len(aListBox) > 1
		
		DEFINE MSDIALOG oDlgProp TITLE STR0188 FROM  000,000 TO 200,450 PIXEL OF oMainWnd STYLE DS_MODALFRAME STATUS  //"Selecione uma Proposta Comercial para Avaliação Financeira."
		
		oListBox := TWBrowse():New(04,02,225,080,,{" ",STR0087,STR0088},,oDlgProp,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
		oListBox:SetArray(aListBox)
		oListBox:bLDblClick := {|| Ft300SelIt(oListBox, aListBox)}
		oListBox:bLine := { || {If(aListBox[oListBox:nAt,1],oOkPrd,oNoPrd),aListBox[oListBox:nAt,2],aListBox[oListBox:nAt,3]}}
		
		@ 086 ,020  BUTTON STR0093 	  SIZE 85 ,10  FONT oDlgProp:oFont ACTION (IIF(Ft300CFP(oListBox,aListBox,cEntidade,aSocios),oDlgProp:End(),Nil))  OF oDlgProp PIXEL //"Confirmar"
		
		oDlgProp:LEscClose := .F.   //Nao Permitir fechar a janela pelo ESC do teclado
		
		ACTIVATE MSDIALOG oDlgProp CENTERED
		
	Else
		If cEntidade == "SA1"
			Ft300AvlFCli(aListBox[1,2],aSocios)
		Else
			Ft300AvlFPro(aListBox[1,2])	
		EndIf
		
	EndIf
Else
	lRetorno := .F.
	Help("",1,"FT300SELP",,STR0331,1) //"Não há Propostas Comercial associada a esta Oportunidade de Venda para Avaliação de Financeira."	
EndIf

Return( lRetorno )

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300CFP

Confirma a selecao da Proposta Comercial selecionada pela função Ft300SelP().

@sample 	Ft300CFP(oListBox,aList,cEntidade,aSocios)

@param		ExpO1 - Objeto Browse.
			ExpA2 - Propostas Comercial.
			ExpC3 - Entidade para ser avalidada (Cliente ou Prospect).
			ExpA4 - Socios do Grupo Societario
			
@return		ExpL - Verdadeiro / Falso 

@author		Anderson Silva
@since		03/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Static Function Ft300CFP(oListBox,aList,cEntidade,aSocios)

Local cProposta	:= ""		// Codigo da Proposta
Local nI   		:= 0      	// Incremento utilizado no laco For
Local lRetorno 	:= .F.    	// Retorno da validacao

//Inicializa o checkbox
For nI := 1 To Len(aList)
	
	If aList[nI][1]
		cProposta := aList[nI,2]
		If cEntidade == "SA1"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Faz avaliacao financeira por cliente. ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Ft300AvlFCli(cProposta,aSocios)
		Else
			Ft300AvlFPro(cProposta)
		EndIf
		lRetorno := .T.
		Exit
	EndIf
	
Next nI

If !lRetorno
	Aviso(STR0136,STR0189,{STR0161},2) //Atencao//"Selecione uma proposta!"/{Fechar}
EndIf

Return(lRetorno)

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300LtCred

Interface com o(s) cliente(s) com limite de credito reprovado.

@sample 	Ft300LtCred(aCliCred,cProposta,cRevisao,dEmissao,nTotProp)

@param		ExpA1 - Array com o(s) cliente(s) com limite reprovado.
			ExpC2 - Codigo da proposta.
			ExpC3 - Revisao da proposta. 
			ExpC4 - Emissao da proposta.
			ExpC5 - Valor total da proposta.  
			
@return		ExpL - Verdadeiro

@author		Anderson Silva
@since		03/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Function Ft300LtCred(aCliCred,cProposta,cRevisao,dEmissao,nTotProp)

Local cSimb1   	:= Alltrim(SuperGetMV("MV_SIMB1")) 											//Simbolo da moeda 1
Local cTotProp 	:= cSimb1+Space(1)+AllTrim(Transform(nTotProp,"@E 999,999,999.99"))  	//Valor total da proposta
Local oBtnOk	:= Nil                                                        					//Objeto Ok
Local oGroup1	:= Nil                                                          		   		//GrupoBox
Local oGroup2	:= Nil                                                          		   		//GrupoBox
Local oPanel1	:= Nil                                                          		   		//Panel superior
Local oPanel2	:= Nil                                                          		   		//Panel central
Local oPanel3 	:= Nil                                                         		   			//Panel inferior
Local oSay1		:= Nil                                                            		   		//Objeto Say
Local oSay2		:= Nil                                                           		   		//Objeto Say
Local oSay3		:= Nil                                                            		   		//Objeto Say
Local oSay4		:= Nil                                                            		   		//Objeto Say
Local oSay5		:= Nil                                                            		   		//Objeto Say
Local oSay6		:= Nil                                                            		  		//Objeto Say
Local oSay7		:= Nil                                                           		   		//Objeto Say
Local oSay8     := Nil                                                     		  				//Objeto Say
Local lPar4 	:= .F.         										   		   					//Compatibilidade do objeto TFont
Local lBold		:= .T.          									   		   					//Estilo negrito
Local oTFont    := Nil                                                                     		//Objeto TFont
Local oTFont2 	:= Nil                                                          		  	    //Objeto TFont
Local oDlg  	:= Nil                                                                        	//Objeto MSDialog Limite de crédito insufiente

DEFINE MSDIALOG oDlg TITLE STR0192 FROM 000, 000  TO 315,750 PIXEL OF oMainWnd STYLE DS_MODALFRAME STATUS  //"Limite de crédito insuficiente"

oTFont := TFont():New('Arial',/*uPar2*/,15,lPar4,lBold)
oTFont2 := TFont():New('Arial',/*uPar2*/,15,lPar4,/*lBold*/)

oPanel1 := TPanel():New(	00,00,/*cText*/,oDlg,/*oFont*/,/*lCentered*/,;
							/*uParam7*/,/*nClrText*/,/*nClrBack*/,;
							305,025,/*lLowered*/,/*lRaised*/)

oPanel2 := TPanel():New(	00,00,/*cText*/,oDlg,/*oFont*/,/*lCentered*/,;
							/*uParam7*/,/*nClrText*/,/*nClrBack*/,;
							305,277,/*lLowered*/,/*lRaised*/)

oPanel3 := TPanel():New(	021,00,/*cText*/,oDlg,/*oFont*/,/*lCentered*/,;
							/*uParam7*/,/*nClrText*/,/*nClrBack*/,;
							305,018,/*lLowered*/,/*lRaised*/)

@ 002, 002 GROUP oGroup1 TO 023,376 PROMPT STR0193 OF oPanel1 COLOR 0, 16777215 PIXEL    	//"Proposta Comercial"
@ 010, 006 SAY oSay1 PROMPT STR0194 SIZE 053, 007 OF oPanel1 FONT oTFont PIXEL             //"Numero:"
@ 010, 035 SAY oSay2 PROMPT cProposta SIZE 053, 007 OF oPanel1 FONT oTFont2 PIXEL
@ 010, 064 SAY oSay3 PROMPT STR0195 SIZE 053, 007 OF oPanel1 FONT oTFont PIXEL 			//"Revisão:"
@ 010, 092 SAY oSay4 PROMPT cRevisao SIZE 053, 007 OF oPanel1 FONT oTFont2 PIXEL
@ 010, 106 SAY oSay5 PROMPT STR0196 SIZE 053, 007 OF oPanel1 FONT oTFont PIXEL				//"Emissão:"
@ 010, 137 SAY oSay6 PROMPT dEmissao SIZE 053, 007 OF oPanel1 FONT oTFont2 PIXEL
@ 010, 174 SAY oSay7 PROMPT STR0197 SIZE 053, 007 OF oPanel1 FONT oTFont PIXEL 			//"Valor Total:"
@ 010, 210 SAY oSay8 PROMPT cTotProp SIZE 053, 007 OF oPanel1 FONT oTFont2 PIXEL
@ 002, 002 GROUP oGroup2 TO 113,376 PROMPT STR0198 OF oPanel2 COLOR 0, 16777215 PIXEL  	//"Cliente(s) com limite de crédito insuficiente ou vencido:"
@ 003, 336 BUTTON oBtnOk PROMPT STR0199 SIZE 037, 012 OF oPanel3 PIXEL ACTION oDlg:End() //"OK"

oDlg:lEscClose := .F.  //Nao permite fechar a janela pelo ESC do teclado.

Ft300BrwLCrd(aCliCred,oPanel2)

// Don't change the Align Order
oPanel1:Align := CONTROL_ALIGN_TOP
oPanel2:Align := CONTROL_ALIGN_ALLCLIENT
oPanel3:Align := CONTROL_ALIGN_BOTTOM

ACTIVATE MSDIALOG oDlg CENTERED
Return(.T.)

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300BrwLCrd

Browse com o(s) cliente(s) com limite de credito reprovado.

@sample 	Ft300BrwLCrd(aCliCred,oPanel2)

@param		ExpA1 - Array com o(s) cliente(s) com limite reprovado. 
			ExpO2 - Objeto oPanel2 central.

@return		ExpL - Verdadeiro

@author		Anderson Silva
@since		03/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Static Function Ft300BrwLCrd(aCliCred,oPanel2)

Local oBrowse   	:= Nil										  					//Objeto Browse
Local nRow 			:= 10	   		   	   					 						//Coordenada vertical.
Local nCol      	:= 05 	   		   	   					 						//Coordenada horizontal.
Local nWidth    	:= 368		   					 								//Largura em pixels do objeto.
Local nHeight   	:= 100		  	    	 			    						//Altura em pixels do objeto.
Local aHeaders  	:={STR0200,STR0201,STR0202,STR0203,STR0204,STR0205}  	//Titulo dos campos no cabeçalho. //{"Cliente","Loja","Nome","Valor LC","Venc. LC","Status"}
Local aColSizes 	:={30,25,110,50,45,95}           			   			    //Largura das colunas.
Local bLDblClick 	:= {|| }							    						//Bloco de codigo que sera executado quando clicar duas vezes no objeto.
Local uParam20 		:=.F.    														//Compatibilidade.
Local lPixel    	:=.T.    														//Considera as coordenadas passadas em pixels.
Local lParam24  	:=.F.    														//Compatibilidade.


oBrowse := TCBrowse():New( nRow,nCol,nWidth,nHeight,/*bLine*/,aHeaders,aColSizes,;
							  oPanel2,/*cField*/,/*uValue1*/,/*uValue2*/,/*bChange*/,bLDblClick,;
							  /*bRClick*/,/*oFont*/,/*oCursor*/,/*nClrFore*/,/*nClrBack*/,/*cMsg*/,;
							  uParam20,/*cAlias*/,lPixel,/*bWhen*/,lParam24,/*bValid*/,/*lHScroll*/,/*lVScroll*/)

oBrowse:SetArray(aCliCred)
oBrowse:bLine := {||	{	aCliCred[oBrowse:nAT,1],;
							aCliCred[oBrowse:nAt,2],;
							aCliCred[oBrowse:nAt,3],;
							aCliCred[oBrowse:nAt,4],;
							aCliCred[oBrowse:nAt,5],;
							aCliCred[oBrowse:nAt,6]}}

// Scroll type
oBrowse:nScrollType := 0
If FATPDActive() .And. FTPDUse(.T.)
	//Ofuscamento por coluna
	oBrowse:aObfuscatedCols := {.F.,.F.,FATPDIsObfuscate("A1_NOME",Nil,.T.),FATPDIsObfuscate("A1_LC",Nil,.T.),FATPDIsObfuscate("A1_VENCLC",Nil,.T.),.F.}
EndIf

Return(.T.)

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300AnCusto

Analise do custo da Oportunidade de Venda. 

@sample 	Ft300AnCusto()

@param		Nenhum

@return		Nenhum

@author		Anderson Silva
@since		28/03/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Static Function Ft300AnCusto()

Local oModel	:= FwModelActive()					// Model (MPFormModel) ativo da Oportunidade de Venda.
Local oMdlAD1	:= oModel:GetModel("AD1MASTER")		// ModelField da Opotunidade de Venda.
Local aList		:= Array(5)							// ListBoxes utilizados no diálogo para seleção do item a ser analisado
Local aParam	:= {}									// Array com os parametros da analise de custo da oportunidade de venda.
Local cPerg		:= "FTA300"							// Pergunte utilizado
Local nExibir	:= 1									// Item na array que exibe as informações referentes ao custo
Local oBold		:= Nil									// Objeto com a fonte utilizada no diálogo
Local oDlg		:= Nil									// Objeto do diálogo
Local aCusto	:= Ft300Custo()						// Array com os valores dos apontamentos dos custos da Oportunidade de Venda.

DEFINE MSDIALOG oDlg TITLE STR0055  FROM 09,0 TO 31,60 OF oMainWnd

	DEFINE FONT oBold NAME "Arial" SIZE 0, -13 BOLD
	
	@  0, 0  BITMAP RESNAME "PROJETOAP" oF oDlg SIZE 30, 1000 NOBORDER WHEN .F. PIXEL ADJUST
	
	@ 03, 40 SAY STR0057+oMdlAD1:GetValue("AD1_NROPOR") FONT oBold PIXEL //"Análise de custo da Oportunidade de Venda - "
	
	@ 14, 30 TO 16 ,400 LABEL '' OF oDlg   PIXEL
	
	@ 24, 30 LISTBOX aList[1] Fields HEADER STR0058,STR0059 SIZE 200,120 OF oDlg PIXEL //"Total"###"Valor"
	aList[1]:SetArray(aCusto)
	aList[1]:bLine := {||{aCusto[aList[1]:nAt,1],TransForm(aCusto[aList[1]:nAt,2],PesqPict("AD6","AD6_TOTAL"))}}
	aList[1]:Refresh()
	
	@ 24, 30 LISTBOX aList[2] Fields HEADER STR0060,STR0059 SIZE 200,120 OF oDlg PIXEL //"Vendedor"###"Valor"
	aList[2]:SetArray(aCusto)
	aList[2]:bLine := {||{aCusto[aList[2]:nAt,1],TransForm(aCusto[aList[2]:nAt,2],PesqPict("AD6","AD6_TOTAL"))}}
	aList[2]:Refresh()
	aList[2]:Hide()
	
	@ 24, 30 LISTBOX aList[3] Fields HEADER STR0061,STR0059 SIZE 200,120 OF oDlg PIXEL //"Data"###"Valor"
	aList[3]:SetArray(aCusto)
	aList[3]:bLine := {||{aCusto[aList[3]:nAt,1],TransForm(aCusto[aList[3]:nAt,2],PesqPict("AD6","AD6_TOTAL"))}}
	aList[3]:Refresh()
	aList[3]:Hide()
	
	@ 24, 30 LISTBOX aList[4] Fields HEADER STR0062,STR0059 SIZE 200,120 OF oDlg PIXEL //"Evento"###"Valor"
	aList[4]:SetArray(aCusto)
	aList[4]:bLine := {||{aCusto[aList[4]:nAt,1],TransForm(aCusto[aList[4]:nAt,2],PesqPict("AD6","AD6_TOTAL"))}}
	aList[4]:Refresh()
	aList[4]:Hide()
	
	@ 24, 30 LISTBOX aList[5] Fields HEADER STR0063,STR0059 SIZE 200,120 OF oDlg PIXEL //"Produto"###"Valor"
	aList[5]:SetArray(aCusto)
	aList[5]:bLine := {||{aCusto[aList[5]:nAt,1],TransForm(aCusto[aList[5]:nAt,2],PesqPict("AD6","AD6_TOTAL"))}}
	aList[5]:Refresh()
	aList[5]:Hide()
	
	DEFINE SBUTTON FROM 150, 172 TYPE 5  ACTION (If(Pergunte(cPerg,.T.),;
							(aParam :=Ft300Param(),;
							 aCusto :=Ft300Custo(aParam),;
							 aList[nExibir]:Hide(),;
							 nExibir:=aParam[9,2],;
							 aList[nExibir]:SetArray(aCusto),;
							 aList[nExibir]:bLine:={||{aCusto[aList[nExibir]:nAt,1],TransForm(aCusto[aList[nExibir]:nAt,2],PesqPict("AD6","AD6_TOTAL"))}},;
							 aList[nExibir]:Refresh(),;
							 aList[nExibir]:Show()),)) ENABLE of oDlg
							 
	DEFINE SBUTTON FROM 150, 204 TYPE 1  ACTION (oDlg:End())  ENABLE of oDlg

ACTIVATE MSDIALOG oDlg CENTERED  

Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300LPVen

Legenda do Processo de Venda (Interface).

@sample 	Ft300LPVen()

@param		Nenhum

@return		Nenhum

@author		Anderson Silva
@since		15/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Function Ft300LPVen()

Local oLegenda  :=  FWLegend():New()

oLegenda:Add("","BR_VERDE"	 	,STR0249) 		// "Processo de vendas em dia."
oLegenda:Add("","BR_AMARELO" 	,STR0250)  	// "Processo de vendas em alerta."
oLegenda:Add("","BR_VERMELHO"	,STR0251) 		// "Processo de vendas em atraso." 
oLegenda:Add("","BR_BRANCO"		,STR0255) 	   	// "Processo de vendas encerrada sem atraso"
oLegenda:Add("","BR_PRETO"		,STR0256) 		// "Processo de vendas encerrada com atraso."
                                              
oLegenda:Activate()
oLegenda:View()
oLegenda:DeActivate()

Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300LEVen

Legenda da Evolucao da Venda (Interface).

@sample 	Ft300LEVen()

@param		Nenhum

@return		Nenhum 

@author		Anderson Silva
@since		15/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Function Ft300LEVen()

Local oLegenda  :=  FWLegend():New()

oLegenda:Add("","BR_VERDE"   	,STR0252) 	   	// "Evolução da venda em dia."
oLegenda:Add("","BR_AMARELO" 	,STR0253)  	// "Evolução da venda em alerta."
oLegenda:Add("","BR_VERMELHO"	,STR0254) 		// "Evolução da venda em atraso." 
oLegenda:Add("","BR_BRANCO"		,STR0257) 	   	// "Evolução da venda encerrada sem atraso"
oLegenda:Add("","BR_PRETO"		,STR0258) 		// "Evolução da venda encerrada com atraso."
                                                             
oLegenda:Activate()
oLegenda:View()
oLegenda:DeActivate()

Return( .T. )

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300Leg

Legenda do browse da Oportunidade de Venda (Interface).

@sample 	Ft300Leg()

@param		Nenhum

@return		Nenhum

@author		Anderson Silva
@since		15/04/2013
@version	P12
/*/
//------------------------------------------------------------------------------
Function Ft300Leg()

Local aCoresNew		:= {}
Local aLegendas		:= {}
Local aCores    	:= {}
Local lFt30Leg		:= ExistBlock("FT30LEG")

Local oLegenda2  :=  FWLegend():New()
Local lLegNum	 := oLegenda2:lNumeric

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Legenda do Status da Oportunidade de Venda  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd(aCores,{IIf (!lLegNum,"BR_VERDE",oLegenda2:aColor[aScan(oLegenda2:aColor,{|x| AllTrim(x[2]) == "BR_VERDE"})][3]),STR0017})			//"Em Aberto"
aAdd(aCores,{IIf (!lLegNum,"BR_PRETO",oLegenda2:aColor[aScan(oLegenda2:aColor,{|x| AllTrim(x[2]) == "BR_PRETO"})][3]),STR0018})			//"Perdido"
aAdd(aCores,{IIf (!lLegNum,"BR_AMARELO",oLegenda2:aColor[aScan(oLegenda2:aColor,{|x| AllTrim(x[2]) == "BR_AMARELO"})][3]),STR0019})		//"Suspenso"
aAdd(aCores,{IIf (!lLegNum,"BR_VERMELHO",oLegenda2:aColor[aScan(oLegenda2:aColor,{|x| AllTrim(x[2]) == "BR_VERMELHO"})][3]),STR0020})	//"Encerrado"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para alterar cores da legenda do Status da Oportunidade de Venda. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lFt30Leg
	aCoresNew := ExecBlock("FT30LEG",.F.,.F.,{aCores})
	If ValType(aCoresNew) == "A"
		aCores := aClone(aCoresNew)
	EndIf
Endif

aAdd( aLegendas,{ STR0262, aCores } )    // "Oportunidade"

aCores := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Legenda da Evolucao da Venda da Oportunidade de Venda.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd(aCores,{IIf (!lLegNum,"BR_VERDE",oLegenda2:aColor[aScan(oLegenda2:aColor,{|x| AllTrim(x[2]) == "BR_VERDE"})][3]),STR0263})			//"Em dia"
aAdd(aCores,{IIf (!lLegNum,"BR_AMARELO",oLegenda2:aColor[aScan(oLegenda2:aColor,{|x| AllTrim(x[2]) == "BR_AMARELO"})][3]),STR0264})		//"Em alerta"
aAdd(aCores,{IIf (!lLegNum,"BR_VERMELHO",oLegenda2:aColor[aScan(oLegenda2:aColor,{|x| AllTrim(x[2]) == "BR_VERMELHO"})][3]),STR0265})	//"Em atraso"
aAdd(aCores,{IIf (!lLegNum,"BR_BRANCO",oLegenda2:aColor[aScan(oLegenda2:aColor,{|x| AllTrim(x[2]) == "BR_BRANCO"})][3]),STR0266})		//"Encerrado sem Atraso"
aAdd(aCores,{IIf (!lLegNum,"BR_PRETO",oLegenda2:aColor[aScan(oLegenda2:aColor,{|x| AllTrim(x[2]) == "BR_PRETO"})][3]),STR0267})			//"Encerrado com Atraso"

AAdd( aLegendas, { STR0268, aCores } ) 		// "Processo de Venda"
AAdd( aLegendas, { STR0269, aCores } ) 		// "Evolução de Venda"

FreeObj(oLegenda2)

Ft300DlgLeg(STR0270,aLegendas)        		// "Legendas"

Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300DlgLeg

Dialog das Legendas da Oportunidade de Venda.

@sample 	Ft300DlgLeg(cTitulo,aLegendas)

@param		ExpC1 - Titulo da Legenda
			ExpA2 - Array com as legendas

@return		Nenhum

@author		Anderson Silva
@since		15/04/2013
@version	P12
/*/
//------------------------------------------------------------------------------
Static Function Ft300DlgLeg(cTitulo,aLegendas)

Local nY   		:= 0
Local nX       	:= 0
Local nZ		:= 0
Local nGrupo	:= 0
Local nSizeAdic	:= 5
Local nQtdLegs	:= 0
Local nLinha	:= 0
Local aBmp      := {}
Local oDlgLeg	:= Nil

SetKey(VK_F1, {|| oDlgLeg:End()})

For nX := 1 to Len(aLegendas)
	nQtdLegs := Len(aLegendas[nX][2])
	nSizeAdic += 50 + (nQtdLegs * 20)
Next nX

DEFINE MSDIALOG oDlgLeg FROM 0,0 TO nSizeAdic + 10,320 TITLE cTitulo OF oMainWnd PIXEL

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³No onclick do usuario a tela sera fechada³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oDlgLeg:bLClicked:= {||oDlgLeg:End()}
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Fonte especifico para a descricao das legendas³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DEFINE FONT oBold NAME "Arial" SIZE 0, -13 BOLD
	
	nLinha := 3
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Titulo da legenda³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nGrupo := 1 to Len(aLegendas)
		
		aBmp  := Array(Len(aLegendas[nGrupo][2]))
		
		@nLinha,37 SAY If((nZ+=1)==nZ,aLegendas[nZ][1]+If(nY==Len(aLegendas),If((nZ:=0)==nZ,"",""),""),"") SIZE 100,9 FONT oBold OF oDlgLeg PIXEL
		nLinha += 8
		@nLinha,35 TO nLinha+2,400 LABEL '' OF oDlgLeg PIXEL
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Itens da legenda³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nX := 1 to Len(aLegendas[nGrupo][2])
			
			nLinha += 10
			
			@ nLinha,43 BITMAP aBmp[nX] RESNAME aLegendas[nGrupo][2][nX][1] OF oDlgLeg SIZE 20,10 PIXEL NOBORDER
			@ nLinha,53 SAY If((nY+=1)==nY,aLegendas[nZ][2][nY][2]+If(nY==Len(aLegendas[nZ][2]),If((nY:=0)==nY,"",""),""),"") SIZE 100,9 OF oDlgLeg PIXEL
			
		Next nX
		
		nY := 0
		nLinha += 15
		
	Next nGrupo
	nZ	:= 0
	
ACTIVATE MSDIALOG oDlgLeg CENTERED

SetKey(VK_F1, {||})


Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300SelIt

Altera a selecao de um item da tela de selecao de propostas

@sample 	Ft300SelIt(oListBox,aList)

@param		ExpO1 - Objeto TWBrowse.
			ExpA1 - Propostas Comercial.

@return		Nenhum

@author		Anderson Silva
@since		03/04/2013
@version	P12
/*/
//------------------------------------------------------------------------------
Static Function Ft300SelIt(oListBox, aList)

Local nI 	:= 0
Local lVal	:= aList[oListBox:nAt][1]

//Inicializa o checkbox
For nI := 1 To Len(aList)
	aList[nI][1] := .F.
Next nI
aList[oListBox:nAt][1]:=!lVal
oListBox:Refresh()

Return Nil   

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300ChkPro

Interface para selecionar a proposta que sera efetivada pelo usuario.

@sample 	Ft300ChkPro(oModel,cCodProp)

@param		ExpO1 - Model da Oportunidade de Venda (MPFormModel).
			ExpC1 - Código da Proposta Comercial selecionada pelo usuario.(@Ref)
			
@return		Nenhum

@author		Anderson Silva
@since		08/04/2013
@version	P12
/*/
//------------------------------------------------------------------------------
Function Ft300ChkPro(oModel,cCodProp)

Local cOldArea	:= Alias()
Local cAliasADY	:= GetNextAlias()
Local oMdlAD1		:= oModel:GetModel("AD1MASTER")	
Local cNrOport	:= oMdlAD1:GetValue("AD1_NROPOR")
Local oDlgProp	:= Nil
Local oListBox	:= Nil
Local aListBox	:= {}
Local oOkPrd		:= LoadBitMap(GetResources(),"LBOK")
Local oNoPrd		:= LoadBitMap(GetResources(),"LBNO")
Local lRetorno 	:= .F.

DbSelectArea("ADY")	//Seleciona area das propostas comerciais
ADY->(DbSetOrder(2))	//ADY_FILIAL+ADY_OPORTU+ADY_REVISA+ADY_PROPOS
//-------------------------------------------------------------------------
// Obtenho as propostas áptas a serem utilizadas no encerramento da oportu.
//------------------------------------------------------------------------
BeginSQL 	Alias cAliasADY

	COLUMN ADY_DATA   AS DATE
	COLUMN ADY_SINCPR AS LOGICAL

	SELECT ADY_FILIAL, ADY_OPORTU,ADY_STATUS,ADY_SINCPR,
	       ADY_PROPOS,ADY_DATA
	  FROM %Table:ADY%
	 WHERE ADY_FILIAL = %xFilial:ADY%
	   AND ADY_OPORTU = %Exp:cNrOport%
	   AND ADY_STATUS Not In ('C','F')
	   AND %NotDel%
	 ORDER BY %ORDER:ADY%

EndSQL

While (cAliasADY)->(!Eof())
	aAdd(aListBox,{IIF((cAliasADY)->ADY_SINCPR,.T.,.F.),(cAliasADY)->ADY_PROPOS,(cAliasADY)->ADY_DATA })
	(cAliasADY)->(dbSkip())
EndDo	
(cAliasADY)->(dbCloseArea())

dBSelectArea(cOldArea)

If Len(aListBox) > 0
	
	If Len(aListBox) > 1		
		
		DEFINE FONT oBold NAME "Arial" SIZE 0, -12 BOLD
		
		DEFINE MSDIALOG oDlgProp TITLE STR0094 + oMdlAD1:GetValue("AD1_NROPOR")+"/"+oMdlAD1:GetValue("AD1_REVISA") FROM  000,000 TO 200,450 PIXEL OF oMainWnd STYLE DS_MODALFRAME STATUS //"Aprovar proposta gerada para oportunidade: "
			
			oListBox := TWBrowse():New( 04,02,225,080,,{" ",STR0087,STR0088},,oDlgProp,,,,,,,,,,,,.F.,,.T.,,.F.,,,) //"No.Proposta"###"Tipo de Venda"
			oListBox:SetArray(aListBox)
			oListBox:bLDblClick := {|| Ft300SelIt(oListBox, aListBox)}
			oListBox:bLine := { || {If(aListBox[oListBox:nAt,1],oOkPrd,oNoPrd),aListBox[oListBox:nAt,2],aListBox[oListBox:nAt,3]}}
					
			@ 086 ,020  BUTTON STR0093 	SIZE 85 ,10  FONT oDlgProp:oFont ACTION (If(Ft300CnfIt(oListBox,aListBox,@cCodProp),(lRetorno := .T.,oDlgProp:End()),))  OF oDlgProp PIXEL  		//"Confirmar"
						
			oDlgProp:lEscClose := .F.			
	
		ACTIVATE MSDIALOG oDlgProp CENTERED
	
	Else
		cCodProp := aListBox[1,2]
	EndIf
		
Else
	Aviso( STR0021, STR0092, { STR0014 }, 2 ) //"Atencao !"###"Nao há propostas a serem encerradas."###"Sim"###"Nao"			
EndIf

dBSelectArea(cOldArea)
Return(lRetorno)

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300Grupo

Interface do do Grupo(s) Societario(s).   

@sample 	Ft300Grupo(cCodCli,cLojCli,aGrupos,aSocios,lRateio,lAvlFinanc,cCodGpo)

@param		ExpC1 - Codigo do Cliente.
			ExpC2 - Loja do Cliente.
			ExpA3 - Grupo societarios do cliente.
			ExpA4 - Retorna os socios do grupo societario.
			ExpL5 - Retorna se o pedido foi rateado.
			ExpL6 - Flag para informar se há pendencia financeira para o Grupo Societario.
			ExpC7 - Codigo do grupo societario selecionado.

@return		Nenhum

@author		Anderson Silva
@since		03/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Function Ft300Grupo(cCodCli,cLojCli,aGrupos,aSocios,lRateio,lAvlFinanc,cCodGpo)

Local cClient 	:= AllTrim(Posicione("SA1",1,xFilial("SA1")+cCodCli+cLojCli,"A1_NOME")) 	//Retorna o nome do cliente
Local aGpoSel 	:= {}                                                    		  					//Array que contem o grupo selecionado pelo usuario
Local oBtnOK	:= Nil                                                    		   					//Objeto OK
Local oGroup1	:= Nil                                                          		   			//GrupoBox
Local oPanel1	:= Nil                                                          		   			//Panel superior
Local oPanel2	:= Nil                                                          		   			//Panel central
Local oPanel3	:= Nil                                                          		   			//Panel inferior
Local oSay1		:= Nil                                                            		   			//Objeto Say
Local oSay2   	:= Nil                                                       		   				//Objeto Say
Local oSay3   	:= Nil                                                         		   				//Objeto Say
Local oSay4   	:= Nil                                                         		   				//Objeto Say
Local oSay5   	:= Nil                                                         		   				//Objeto Say
Local oSay6   	:= Nil                                                        		  				//Objeto Say
Local lPar4 	:= .F.         										   		   						//Compatibilidade do objeto TFont
Local lBold		:= .T.          									   		   						//Estilo negrito
Local oTFont	:= Nil 
Local oTFont2	:= Nil                                                        		  				//Objeto TFont
Local oDlg    	:= Nil                                                         		  				//Objeto MSDialog Grupo Societario

Default cCodCli		:= ""
Default cLojCli		:= ""
Default aGrupos		:= {}
Default aSocios		:= {}
Default lRateio		:= .F.
Default lAvlFinanc	:= .F.
Default cCodGpo	    := ""

DEFINE MSDIALOG oDlg TITLE STR0130 FROM 000, 000  TO 250,420 PIXEL OF oMainWnd STYLE DS_MODALFRAME STATUS  //Selecione um Grupo Societario

	oTFont		:= TFont():New('Arial',/*uPar2*/,15,lPar4,lBold)
	oTFont2	:= TFont():New('Arial',/*uPar2*/,15,lPar4,/*lBold*/)
	
	oPanel1	:= TPanel():New(00,00,/*cText*/,oDlg,/*oFont*/,/*lCentered*/,;
								  /*uParam7*/,/*nClrText*/,/*nClrBack*/,;
								  000,022,/*lLowered*/,/*lRaised*/)
	
	oPanel2	:= TPanel():New(021,00,/*cText*/,oDlg,/*oFont*/,/*lCentered*/,;
								  /*uParam7*/,/*nClrText*/,/*nClrBack*/,;
								  000,100,/*lLowered*/,/*lRaised*/)
	
	oPanel3 := TPanel():New(134,00,/*cText*/,oDlg,/*oFont*/,/*lCentered*/,;
							   /*uParam7*/,/*nClrText*/,/*nClrBack*/,;
							   000,018,/*lLowered*/,/*lRaised*/)
	
	@ 004,003 SAY oSay1 PROMPT STR0131 SIZE 045, 010 OF oPanel1 FONT oTFont PIXEL    //Cliente
	@ 004,026 SAY oSay2 PROMPT cCodCli SIZE 025,010 OF oPanel1 FONT oTFont2 PIXEL
	@ 004,050 SAY oSay3 PROMPT STR0132 SIZE 045, 010 OF oPanel1 FONT oTFont PIXEL   //Loja
	@ 004,065 SAY oSay4 PROMPT cLojCli SIZE 165,010 OF oPanel1 FONT oTFont2   PIXEL
	@ 013,003 SAY oSay5 PROMPT STR0133 SIZE 045, 010 OF oPanel1 FONT oTFont PIXEL   //Nome
	@ 013,023 SAY oSay6 PROMPT cClient SIZE 250,010 OF oPanel1 FONT oTFont2 PIXEL  
	@ 003,173 BUTTON oBtnOK PROMPT STR0134 SIZE 035, 012 OF oPanel3 PIXEL ACTION IIF(Ft300ValGpo(aGpoSel,@aSocios,@lRateio,@lAvlFinanc,@cCodGpo),oDlg:End(),Nil)  //OK
	@ 000,002 GROUP oGroup1 TO 084,211 PROMPT STR0140 OF oPanel2 PIXEL  //"Grupo(s)"
	
	oDlg:lEscClose := .F.   //Nao Permitir fechar a janela pelo ESC do teclado
	
	aGpoSel := Ft300BrwGpo(aGrupos,oPanel2)
	
	// Don't change the Align Order
	oPanel1:Align := CONTROL_ALIGN_TOP
	oPanel2:Align := CONTROL_ALIGN_ALLCLIENT
	oPanel3:Align := CONTROL_ALIGN_BOTTOM
	
ACTIVATE MSDIALOG oDlg CENTERED
FATPDLogUser("FT300GRUPO")
Return Nil 

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300BrwGpo

Browse para marcacao do grupo societario.  

@sample 	Ft300BrwGpo(aGrupos,oPanel2)

@param		ExpA1 - Grupo societarios do cliente.
			ExpO2 - Painel que será apresentado os grupos.
			
@return		ExpA - Grupo selecionado 

@author		Anderson Silva
@since		03/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Static Function Ft300BrwGpo(aGrupos,oPanel2)

Local oBrowse   	:= Nil										 	//Objeto Browse
Local aBrowse  		:= aGrupos             				     	//Busca os socios atraves do grupo selecionado
Local oOk 	   		:= LoadBitmap( GetResources(), "LBOK")  	//Desenho do Checked
Local oNo 	   		:= LoadBitmap( GetResources(), "LBNO")  	//Desenho do Not Checked
Local nRow 			:= 08	   		   	   						  	//Coordenada vertical.
Local nCol      	:= 05 	   		   	   						 	//Coordenada horizontal.
Local nWidth    	:= 203  			   						 	//Largura em pixels do objeto.
Local nHeight   	:= 073		  	    	 			   	  		//Altura em pixels do objeto.
Local aHeaders  	:= {"",STR0141,STR0142,STR0143}         	//Titulo dos campos no cabeçalho. #Codigo#Grupo#Nr.Socios#
Local aColSizes 	:= {1,30,120,20}           			    	//Largura das colunas.
Local bLDblClick 	:= {|| }							    		//Bloco de codigo que sera executado quando clicar duas vezes no objeto.
Local uParam20 		:= .F.    										//Compatibilidade.
Local lPixel    	:= .T.    										//Considera as coordenadas passadas em pixels.
Local lParam24  	:= .F.    										//Compatibilidade.

oBrowse := TCBrowse():New(nRow,nCol,nWidth,nHeight,/*bLine*/,aHeaders,aColSizes,;
							 oPanel2,/*cField*/,/*uValue1*/,/*uValue2*/,/*bChange*/,bLDblClick,;
							 /*bRClick*/,/*oFont*/,/*oCursor*/,/*nClrFore*/,/*nClrBack*/,/*cMsg*/,;
							 uParam20,/*cAlias*/,lPixel,/*bWhen*/,lParam24,/*bValid*/,/*lHScroll*/,/*lVScroll*/)

oBrowse:SetArray(aBrowse)
oBrowse:bLine := {|| {;
						IIF(aBrowse[oBrowse:nAT,1],oOk,oNo),;
							aBrowse[oBrowse:nAt,2]			,;
							aBrowse[oBrowse:nAt,3]			,;
							aBrowse[oBrowse:nAt,4]			;
																}}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Marcacao do grupo societario  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oBrowse:bLDblClick := {|| AEval(aBrowse,{|x| x[1] := .F.}),aBrowse[oBrowse:nAT,1] := !aBrowse[oBrowse:nAT,1],oBrowse:Refresh(),;
oBrowse:DrawSelect()}

// Scroll type
oBrowse:nScrollType := 0

Return(aBrowse)

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300RPed

Interface para rateio do Pedido de Venda em membros do Grupo Societario.

@sample 	Ft300RPed(cCodGpo,aSocios,lRateio)

@param		ExpC1 - Codigo do Grupo Societario.
			ExpA2 - Socios do Grupo Societatio.
			ExpL3 - Flag para informar que o Pedido de Venda devera ser rateado
			entre os membros do Grupo Societario.
			
@return		Nenhum

@author		Anderson Silva
@since		16/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Function Ft300RPed(cCodGpo,aSocios,lRateio)

Local oBtnOK	:= Nil                                                              		//Objeto OK
Local oBtnCan	:= Nil                                                            			//Objeto Fechar
Local oGroup1	:= Nil                                                            			//GroupBox
Local oPanel1	:= Nil                                                            			//Panel superior
Local oPanel2	:= Nil                                                            			//Panel central
Local oPanel3	:= Nil                                                            			//Panel inferior
Local oSay1		:= Nil                                                            			//Objeto Say
Local oSay2		:= Nil																		//Objeto Say
Local oSay3		:= Nil																		//Objeto Say
Local oSay4		:= Nil																		//Objeto Say
Local oSay5		:= Nil																		//Objeto Say
Local oSay6		:= Nil															    		//Objeto Say
Local oTFont	:= Nil																		//Objeto TFont
Local oTFont2	:= Nil
Local oDlg		:= Nil                                                             			//Objeto MSDialog rateio de pedidos de vendas
Local cNomGpo	:= AllTrim(Posicione("AGT",1,xFilial("AGT")+cCodGpo,"AGT_DESCRI"))			//Nome do grupo socioetario
Local cTotal	:= "0%"                                                     				//Subtotal do rateio
Local lPar4		:= .F.                                                     					//Compatibilidade do objeto TFont
Local lBold		:= .T.     																	//Estilo negrito

DEFINE MSDIALOG oDlg TITLE STR0145 FROM 000, 000  TO 275,487 PIXEL OF oMainWnd STYLE DS_MODALFRAME STATUS   //#"Rateio do Pedido de Venda"#

	oTFont	:= TFont():New('Arial',/*uPar2*/,15,lPar4,lBold)
	oTFont2	:= TFont():New('Arial',/*uPar2*/,15,lPar4,/*lBold*/)
	
	oPanel1 := TPanel():New(	00,00,/*cText*/,oDlg,/*oFont*/,/*lCentered*/,;
									/*uParam7*/,/*nClrText*/,/*nClrBack*/,;
									290,015,/*lLowered*/,/*lRaised*/)
	
	oPanel2	:= TPanel():New(	021,00,/*cText*/,oDlg,/*oFont*/,/*lCentered*/,;
									/*uParam7*/,/*nClrText*/,/*nClrBack*/,;
									290,100,/*lLowered*/,/*lRaised*/)
	
	oPanel3 := TPanel():New(	134,00,/*cText*/,oDlg,/*oFont*/,/*lCentered*/,;
									/*uParam7*/,/*nClrText*/,/*nClrBack*/,;
									290,018,/*lLowered*/,/*lRaised*/)
	
	@ 004,003 SAY oSay1 PROMPT STR0146 SIZE 045, 010 OF oPanel1 FONT oTFont PIXEL   //Codigo:
	@ 004,026 SAY oSay2 PROMPT cCodGpo SIZE 100,010 OF oPanel1 FONT oTFont2 PIXEL
	@ 004,045 SAY oSay3 PROMPT STR0147 SIZE 045, 010 OF oPanel1 FONT oTFont PIXEL  //"Grupo:"
	@ 004,065 SAY oSay4 PROMPT cNomGpo SIZE 100,010 OF oPanel1 FONT oTFont2 PIXEL
	@ 004,003 SAY oSay5 PROMPT STR0148 SIZE 045, 010 OF oPanel3 FONT oTFont COLOR CLR_HRED PIXEL //"SubTotal:"
	@ 004,031 SAY oSay6 PROMPT cTotal SIZE 100,010 OF oPanel3 FONT oTFont2 PIXEL
	@ 003,160 BUTTON oBtnOK PROMPT STR0134 SIZE 035, 012 OF oPanel3 PIXEL ACTION IIF(Ft300ValRat(@aSocios),(lRateio := .T.,oDlg:End()),Nil)
	@ 003,206 BUTTON oBtnCan PROMPT STR0135 SIZE 035, 012 OF oPanel3 ACTION IIF(Aviso(STR0136,STR0137,{STR0138,STR0139},1)==1,oDlg:End(),Nil) PIXEL //"Atenção!"##"Deseja cancelar o rateio do pedido de venda?""Sim"##"Nao"  //Cancelar
	@ 000,002 GROUP oGroup1 TO 104,244 PROMPT STR0149 OF oPanel2 PIXEL
	
	oDlg:lEscClose := .F.  //Nao Permitir fechar a janela pelo ESC do teclado
	
	aSocios := Ft300BrwRat(cCodGpo,oPanel2,oSay6)
	
	// Don't change the Align Order
	oPanel1:Align := CONTROL_ALIGN_TOP
	oPanel2:Align := CONTROL_ALIGN_ALLCLIENT
	oPanel3:Align := CONTROL_ALIGN_BOTTOM

ACTIVATE MSDIALOG oDlg CENTERED

Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300BrwRat

Browse para marcacao do rateio do Pedido de Vendas entre socios do 
Grupo Societario. 

@sample 	Ft300BrwRat(cCodGpo,oPanel2,oSay6)

@param		ExpC1 - Codigo do Grupo Societario.
			ExpO2 - Objeto oPanel2 Central.
			ExpO3 - Objeto Say

@return		Nenhum
 
@author		Anderson Silva
@since		16/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Static Function Ft300BrwRat(cCodGpo,oPanel2,oSay6)

Local oBrowse		:= Nil 						   					//Objeto Browse
Local aBrowse  		:= Ft300BSoc(cCodGpo) 					  		//Busca os societarios atraves do grupo selecionado.
Local oOk 	   		:= LoadBitmap( GetResources(), "LBOK")   		//Desenho do Checked.
Local oNo 	   		:= LoadBitmap( GetResources(), "LBNO")   		//Desenho do Not Checked.
Local nRow 			:= 08	   		   						  		//coordenada vertical.
Local nCol      	:= 05 	   		   						 		//coordenada horizontal.
Local nWidth    	:= 236  			   							//largura em pixels do objeto.
Local nHeight   	:= 093		  	    	 						//altura em pixels do objeto.
Local aHeaders  	:= {'',STR0141,STR0150,STR0151,STR0152} 		//título dos campos no cabeçalho. ##Codigo#Loja#Nome#% do pedido##
Local aColSizes 	:= {1,15,25,120,25}           					// largura das colunas.
Local bLDblClick 	:= {|| }										//bloco de código que será executado quando clicar duas vezes no objeto.
Local uParam20 		:= .F.    								    	//Compatibilidade.
Local lPixel    	:=.T.    										//considera as coordenadas passadas em pixels.
Local lParam24  	:=.F.    										//Compatibilidade.

oBrowse := TCBrowse():New(nRow,nCol,nWidth,nHeight,/*bLine*/,aHeaders,aColSizes,;
                          oPanel2,/*cField*/,/*uValue1*/,/*uValue2*/,/*bChange*/,bLDblClick,;
                          /*bRClick*/,/*oFont*/,/*oCursor*/,/*nClrFore*/,/*nClrBack*/,/*cMsg*/,;
                          uParam20,/*cAlias*/,lPixel,/*bWhen*/,lParam24,/*bValid*/,/*lHScroll*/,/*lVScroll*/)

oBrowse:SetArray(aBrowse)
oBrowse:bLine := {|| {;
						IIF(aBrowse[oBrowse:nAT,1],oOk,oNo),;
						aBrowse[oBrowse:nAt,2],;
						aBrowse[oBrowse:nAt,3],;
						aBrowse[oBrowse:nAt,4],;
						aBrowse[oBrowse:nAt,5];
						}}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Troca a imagem no duplo click do mouse.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oBrowse:bLDblClick := {|| Ft300ClkBwR(aBrowse,oBrowse,oSay6),oBrowse:DrawSelect()}

// Scroll type
oBrowse:nScrollType := 0

FATPDLogUser("FT300BRWRAT")
Return(aBrowse)

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300ClkBwR

Tramento do evento click do browse Rateio do Pedido de Vendas.

@sample 	Ft300ClkBwR(aBrowse,oBrowse,oSay6)

@param		ExpA1 - Socios do Grupo Societario.
			ExpO2 - Objeto oBrowse.
			ExpO3 - Objeto Say

@return		Nenhum

@author		Anderson Silva
@since		16/04/2014
@version	P12
/*/
//------------------------------------------------------------------------------
Static Function Ft300ClkBwR(aBrowse,oBrowse,oSay6)

Local nCol := oBrowse:ColPos()  //Retorna o numero da coluna posicionada

Do Case
	Case nCol == 1
	
		aBrowse[oBrowse:nAt][1] := !aBrowse[oBrowse:nAt][1]  //Troca o desenho do Checked e Not Checked.
		
		If !aBrowse[oBrowse:nAt][1]
			aBrowse[oBrowse:nAt][5] := 0
			Ft300AtSTot(oBrowse,oSay6)
		EndIf
		
	Case nCol == 5
		
		lEditCell(aBrowse,oBrowse,'@E 999.99',5) // Somente editar a coluna 5 % do pedido
		
		If aBrowse[oBrowse:nAt][5] == 0
			aBrowse[oBrowse:nAt][1] := .F.
		Else
			aBrowse[oBrowse:nAt][1] := .T.
		EndIf
		
		Ft300AtSTot(oBrowse,oSay6)
EndCase

Return(.T.)

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300SPWF

Interface para selecionar a Proposta Comercial que sera enviada atraves do WorkFlow. 

@sample		Ft300SPWF()

@param		Nenhum
			
@return		Nenhum

@author		Anderson Silva
@since		14/04/2014
@version	P12          
/*/
//-----------------------------------------------------------------------------
Function Ft300SPWF()

Local aArea			:= GetArea()
Local aAreaADY		:= ADY->(GetArea())
Local aListBox		:= {} 														//Array com as propostas
Local oOkPrd    	:= LoadBitMap(GetResources(), "LBOK")      			//Img. Marcado
Local oNoPrd    	:= LoadBitMap(GetResources(), "LBNO")      	       	//Img. Desmarcado
Local oDlgProp   	:= Nil                                                    	//Objeto Dialog
Local oListBox   	:= Nil                                                    	//Objeto ListBox
Local cFilADY		:= xFilial("ADY")

DEFINE FONT oBold NAME "Arial" SIZE 0, -12 BOLD

DbSelectArea("ADY")
//ADY_FILIAL+ADY_OPORTU+ADY_REVISA+ADY_PROPOS                                                                                                                     
ADY->(DbSetOrder(2))

If ADY->(DbSeek(cFilADY+AD1->AD1_NROPOR+AD1->AD1_REVISA))
	
	While ( ADY->(!Eof()) .AND. ADY->ADY_FILIAL == cFilADY .AND.;
		 ADY->ADY_OPORTU == AD1->AD1_NROPOR .AND. ADY->ADY_REVISA == AD1->AD1_REVISA )
		 aAdd(aListBox,{.F.,ADY->ADY_PROPOS,dToc(ADY->ADY_DATA)})
		ADY->(DbSkip())		 
	End 
	 
EndIf

If Len(aListBox) > 0  
		
	If Len(aListBox) > 1
		
		DEFINE MSDIALOG oDlgProp TITLE STR0159 FROM  000,000 TO 200,450 PIXEL OF oMainWnd STYLE DS_MODALFRAME STATUS  //"Workflow Processo de Venda"
		
		oListBox := TWBrowse():New( 04,02,225,080,,{" ",STR0087,STR0088},,oDlgProp,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
		oListBox:SetArray(aListBox)
		oListBox:bLDblClick := {|| Ft300SelIt(oListBox, aListBox)}
		oListBox:bLine := { || {If(aListBox[oListBox:nAt,1],oOkPrd,oNoPrd),aListBox[oListBox:nAt,2],aListBox[oListBox:nAt,3]}}
		
		@086,020 BUTTON STR0093 SIZE 85,10 FONT oDlgProp:oFont ACTION (IIF(Ft300CFPWF(oListBox,aListBox),oDlgProp:End(),Nil))  OF oDlgProp PIXEL  		//"Confirmar"
		
		oDlgProp:LEscClose := .F.   //Nao Permitir fechar a janela pelo ESC do teclado 
		
		ACTIVATE MSDIALOG oDlgProp CENTERED
		
	Else
		
		Ft300PrepWF(aListBox[1,2])       			
	
	EndIf
	FATPDLogUser("FT300SPWF")
EndIf
	
RestArea(aAreaADY)
RestArea(aArea)	
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300Rev

Compara as revisões de Oportunidades de Vendas.

@sample		Ft300Rev(cAlias,nReg)

@param 		ExpC1 - Tabela AD1 - Oportunidade de Venda.
			ExpN2 - Numero do Registro (RecNo).

@return		Nenhum

@author		Anderson Silva
@since		16/04/2014
@version	P12          
/*/
//-----------------------------------------------------------------------------
Function Ft300Rev(cAlias,nReg)

Local aLstHeader	:= {}
Local aLstCols		:= {}
Local cLine			:= "{||}"
Local aCmp			:= {}
Local cVar     		:= ""
Local nOpca			:= 0
Local oDlg			:= Nil
Local oBold			:= Nil
Local oFont1		:= Nil
Local oBmp			:= Nil
Local oList			:= Nil
Local oOk      		:= LoadBitmap(GetResources(), "LBOK")	// Não remover esta variável, pois ela é utilizada pelo Bloco de Código que é retornado na variável cLine
Local oNo      		:= LoadBitmap(GetResources(), "LBNO")	// Não remover esta variável, pois ela é utilizada pelo Bloco de Código que é retornado na variável CLine

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Retorna as revisoes das Oportunidades de Venda. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Ft300RetRev(AD1->AD1_NROPOR,@aLstHeader,@aLstCols,@cLine)

If Len(aLstCols) > 1
	
	DEFINE DIALOG oDlg TITLE STR0029 FROM 0,-300 TO 470,600 OF oMainWnd PIXEL //"Comparador das revisões"

	DEFINE FONT oBold 	NAME "Arial"   		SIZE 0, -13 BOLD
	DEFINE FONT oFont1	NAME "Courier New" 	SIZE 7,15
	
	@  0, 0  BITMAP oBmp RESNAME "PROJETOAP" oF oDlg SIZE 30, 1000 NOBORDER WHEN .F. PIXEL ADJUST
	
	@ 03, 40 SAY STR0030 FONT oBold PIXEL //"Selecione as revisões que deseja comparar"
	
	@ 14, 30 TO 16 ,450 LABEL '' OF oDlg   PIXEL

	@ 40, 30 LISTBOX oList VAR cVar Fields SIZE 420, 170 ON DBLCLICK (Ft300ClkRev(@aLstCols,oList:nAt)) OF oDlg PIXEL FONT oFont1
	
	oList:aHeaders := aLstHeader
	oList:SetArray(aLstCols)
	oList:bLine := &(cLine)
	oList:nFreeze := 1

	@ 22 , 412 BUTTON STR0003  SIZE 039, 013 OF oDlg PIXEL Action( Ft300VisRev(aLstCols,oList:nAt) ) //"Visualizar"

	@ 218, 369 BUTTON STR0014  SIZE 039, 013 OF oDlg PIXEL Action( IIF(Ft300ROk(aLstCols,@aCmp),(nOpca := 1,oDlg:End()),) )//"OK"
	@ 218, 412 BUTTON STR0129  SIZE 039, 013 OF oDlg PIXEL Action( nOpca := 0, oDlg:End() )//"Cancelar" 

	ACTIVATE MSDIALOG oDlg CENTERED  

	If nOpca == 1
		Processa({||Ft300Cmp(aCmp)},STR0031,STR0032,.F.)//"Processando"###"Comparando as revisões da oportunidade de venda..."
	EndIf
Else
	Help(" ",1,"FT300REV")
EndIf

Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300Cmp

Interface de comparacao das revisoes da Oportunidade de Venda.

@sample		Ft300Cmp(aCmp)

@param		ExpA1 - Revisoes da Oportunidade de Venda.
			
@return		Nenhum

@author		Anderson Silva
@since		16/04/2014
@version	P12          
/*/
//-----------------------------------------------------------------------------
Static Function Ft300Cmp(aCmp)

Local oDlg		:= Nil
Local oTree		:= Nil
Local oTree2	:= Nil
Local oMenu		:= Nil
Local oMenu2	:= Nil
Local aOpVComp 	:= {}
Local aOrigem  	:= {}
Local aDestino 	:= {}
Local aButtons 	:= {}
Local aObjects 	:= {}
Local aPosObj  	:= {}
Local aInfo    	:= {}
Local aSize    	:= MsAdvSize(.T.)

/*
ESTRUTURA DO RETORNO DA Ft300Tree
[1] - Alias
[2] - Chave
[3] - Descricao
[4] - Cargo
[5] - Cargo Pai
[6] - Tipo Diferenca (N - Normal, C - Change, E - Deleted, I - Inserted)
[7] - E Recurso ? (Truee,False)
*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta um array com a estrutura do tree de oportunidade de venda      ³
//³que sera utilizado como base na comparacao.                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aOrigem := Ft300Tree(aCmp[1])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta um array com a estrutura do tree de oportunidade de venda      ³
//³que sera utilizado como base na comparacao.                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aDestino:= Ft300Tree(aCmp[2])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta um array com a estrutura do tree de oportunidade de venda      ³
//³da comparacao entre as versoes.                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aOpVComp:= Ft300Compara(aOrigem,aDestino)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta a  tela com o tree da versao base e com o tree da versao³
//³resultado da comparacao.                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd( aObjects, { 100, 100, .T., .T., .F. } )  
aAdd( aObjects, { 100, 100, .T., .T., .F. } )  
aInfo  := { aSize[1],aSize[2],aSize[3],aSize[4],3,3 } 
aPosObj:= MsObjSize( aInfo, aObjects, .T.,.T. )  

DEFINE MSDIALOG oDlg TITLE STR0035 FROM aSize[7],0 TO aSize[6],aSize[5] OF oMainWnd PIXEL //"Comparação das Revisões"
	MENU oMenu POPUP
		MENUITEM STR0003 ACTION Ft300VisCom(@oTree,aOrigem) //"Visualizar"
	ENDMENU 

	MENU oMenu2 POPUP
		MENUITEM STR0003 ACTION Ft300VisCom(@oTree2,aOpVComp)//"Visualizar"
		MENUITEM STR0036 ACTION Ft300Item(oTree,oTree2,aOrigem,aOpVComp,aCmp[1],aCmp[2])//"Comparar"
	ENDMENU

	oTree:= DbTree():New(aPosObj[1,1], aPosObj[1,2],aPosObj[1,3],aPosObj[1,4], oDlg,,,.T.)
	oTree:bRClicked := {|o,x,y|  oMenu:Activate(x,y,oTree) } // Posição x,y em relação a Dialog 
	oTree:bChange   := {|| Ft300CtrMenu(1,oMenu,oTree)}
	oTree:lShowHint := .F. 
	Ft300MontaTree(@oTree,aOrigem)
	
	oTree2:= DbTree():New(aPosObj[2,1], aPosObj[2,2],aPosObj[2,3],aPosObj[2,4], oDlg,,,.T.)
	oTree2:bRClicked := {|o,x,y|  oMenu2:Activate(x,y,oTree2) } // Posição x,y em relação a Dialog 
	oTree2:bChange   := {|| Ft300CtrMenu(2,oMenu2,oTree2)}
	oTree2:lShowHint := .F. 
	Ft300MontaTree(@oTree2,aOpVComp)
	
	AAdd( aButtons, { "DBG09"   , { || Ft300Inf() }, STR0016 } ) //"Legenda"
	AAdd( aButtons, { "PMSSETADOWN", { || Ft300Nav(1,aOpVComp,@oTree,@oTree2) }, STR0037, STR0068 } )  //"Proxima Diferenca"
	AAdd( aButtons, { "PMSSETAUP"  , { || Ft300Nav(2,aOpVComp,@oTree,@oTree2) }, STR0038, STR0069 } )  //"Diferenca Anterior"

ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg, {||oDlg:End()} ,{||oDlg:End()},,aButtons)
FATPDLogUser("FT300CMP")
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300Inf

Legenda do comparador da Oportunidade de Venda.

@sample		Ft300Inf()

@param		Nenhum

@return		Nenhum

@author		Anderson Silva
@since		16/04/2014
@version	P12          
/*/
//-----------------------------------------------------------------------------
Static Function Ft300Inf()

Local oDlg		:= Nil
Local oBmp1		:= Nil
Local oBmp2		:= Nil
Local oBmp3		:= Nil
Local oBmp4		:= Nil
Local oBmp5		:= Nil
Local oBmp6		:= Nil
Local oBmp7		:= Nil
Local oBmp8		:= Nil
Local oBmp9		:= Nil
Local oBmp10	:= Nil
Local oBmp11	:= Nil
Local oBmp12	:= Nil
Local oBmp13	:= Nil
Local oBmp14	:= Nil
Local oBmp15	:= Nil
Local oBmp16	:= Nil
Local oBmp17	:= Nil
Local oBmp18	:= Nil
Local oBut1		:= Nil

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Cria tela com os bitmaps utilizados no tree para correta identificacao.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

DEFINE MSDIALOG oDlg TITLE STR0016 OF oMainWnd PIXEL FROM 0,0 TO 365,550 //"Legenda"

	@ 2,3 TO 180,273 LABEL STR0016 PIXEL //"Legenda"
	
	@ 8,10 BITMAP oBmp1 RESNAME "NOTE" SIZE 16,16 NOBORDER PIXEL
	@ 8,20 SAY STR0001+STR0046 OF oDlg PIXEL //"Oportunidade de Venda"###" - Modificada"
	
	@ 8,150 BITMAP oBmp2 RESNAME "BPMSEDT4" SIZE 16,16 NOBORDER PIXEL
	@ 8,160 SAY STR0001+STR0047 OF oDlg PIXEL //"Oportunidade de Venda"###" - Não Alterada"
	
	@ 20,10 BITMAP oBmp3 RESNAME "EXCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 20,20 SAY STR0008+STR0048 OF oDlg PIXEL //"Concorrente"###" - Excluido"
	
	@ 32,10 BITMAP oBmp4 RESNAME "NOTE" SIZE 16,16 NOBORDER PIXEL
	@ 32,20 SAY STR0008+STR0049 OF oDlg PIXEL //"Concorrente"###" - Modificado"
	
	@ 44,10 BITMAP oBmp5 RESNAME "BMPINCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 44,20 SAY STR0008+STR0050 OF oDlg PIXEL //"Concorrente"###" - Incluido"
	
	@ 56,10  BITMAP oBmp6 RESNAME "PMSTASK1" SIZE 16,16 NOBORDER PIXEL
	@ 56,20  SAY STR0008+STR0051 OF oDlg PIXEL //"Concorrente"###" - Não Alterado"
	
	@ 68,10 BITMAP oBmp7 RESNAME "EXCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 68,20 SAY STR0052+STR0048 OF oDlg PIXEL //"Representante"###" - Excluido"
	
	@ 80,10 BITMAP oBmp8 RESNAME "NOTE" SIZE 16,16 NOBORDER PIXEL
	@ 80,20 SAY STR0052+STR0049 OF oDlg PIXEL //"Representante"###" - Modificado"
	
	@ 92,10 BITMAP oBmp9 RESNAME "BMPINCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 92,20 SAY STR0052+STR0050 OF oDlg PIXEL //"Representante"###" - Incluido"
	
	@ 104,10 BITMAP oBmp10 RESNAME "PMSTASK2" SIZE 16,16 NOBORDER PIXEL
	@ 104,20 SAY STR0052+STR0051 OF oDlg PIXEL //"Representante"###" - Não Alterado"
	
	@ 20,150 BITMAP oBmp11 RESNAME "EXCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 20,160 SAY STR0053+STR0048 OF oDlg PIXEL //"Parceiro"###" - Excluido"
	
	@ 32,150 BITMAP oBmp12 RESNAME "NOTE" SIZE 16,16 NOBORDER PIXEL
	@ 32,160 SAY STR0053+STR0049 OF oDlg PIXEL //"Parceiro"###" - Modificado"
	
	@ 44,150 BITMAP oBmp13 RESNAME "BMPINCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 44,160 SAY STR0053+STR0050 OF oDlg PIXEL //"Parceiro"###" - Incluido"
	
	@ 56,150 BITMAP oBmp14 RESNAME "PMSTASK3" SIZE 16,16 NOBORDER PIXEL
	@ 56,160 SAY STR0053+STR0051 OF oDlg PIXEL //"Parceiro"###" - Não Alterado"
	
	@ 68,150 BITMAP oBmp15 RESNAME "EXCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 68,160 SAY STR0054+STR0048 OF oDlg PIXEL //"Contato"###" - Excluido"
	
	@ 80,150 BITMAP oBmp16 RESNAME "NOTE" SIZE 16,16 NOBORDER PIXEL
	@ 80,160 SAY STR0054+STR0049 OF oDlg PIXEL //"Contato"###" - Modificado"
	
	@ 92,150 BITMAP oBmp17 RESNAME "BMPINCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 92,160 SAY STR0054+STR0050 OF oDlg PIXEL //"Contato"###" - Incluido"
	
	@ 104,150 BITMAP oBmp18 RESNAME "PMSTASK4" SIZE 16,16 NOBORDER PIXEL
	@ 104,160 SAY STR0054+STR0051 OF oDlg PIXEL //"Contato"###" - Não Alterado"

	@ 115,10 BITMAP oBmp7 RESNAME "EXCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 115,20 SAY STR0341+STR0048 OF oDlg PIXEL //"Produto"###" - Excluido"
	
	@ 127,10 BITMAP oBmp8 RESNAME "NOTE" SIZE 16,16 NOBORDER PIXEL
	@ 127,20 SAY STR0341+STR0049 OF oDlg PIXEL //"Produto"###" - Modificado"
	
	@ 139,10 BITMAP oBmp9 RESNAME "BMPINCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 139,20 SAY STR0341+STR0050 OF oDlg PIXEL //"Produto"###" - Incluido"
	
	@ 151,10 BITMAP oBmp10 RESNAME "PMSTASK5" SIZE 16,16 NOBORDER PIXEL
	@ 151,20 SAY STR0341+STR0051 OF oDlg PIXEL //"Produto"###" - Não Alterado"
	
	@ 115,150 BITMAP oBmp7 RESNAME "EXCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 115,160 SAY STR0342+STR0048 OF oDlg PIXEL //"Processo / Estágio"###" - Excluido"
	
	@ 127,150 BITMAP oBmp8 RESNAME "NOTE" SIZE 16,16 NOBORDER PIXEL
	@ 127,160 SAY STR0342+STR0049 OF oDlg PIXEL //"Processo / Estágio"###" - Modificado"
	
	@ 139,150 BITMAP oBmp9 RESNAME "BMPINCLUIR" SIZE 16,16 NOBORDER PIXEL
	@ 139,160 SAY STR0342+STR0050 OF oDlg PIXEL //"Processo / Estágio"###" - Incluido"
	
	@ 151,150 BITMAP oBmp10 RESNAME "PMSTASK6" SIZE 16,16 NOBORDER PIXEL
	@ 151,160 SAY STR0342+STR0051 OF oDlg PIXEL //"Processo / Estágio"###" - Não Alterado"
	
 
	DEFINE SBUTTON oBut1 FROM 164,244 TYPE 1  ACTION (oDlg:End())  ENABLE of oDlg

ACTIVATE MSDIALOG oDlg CENTERED

Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} FATA300

Cadastro de Oportunidade de Venda

@sample	FATA300()

@param		ExpO1 - ModelGrid dos Produtos da Oportunidade
			ExpC2 - Código da Proposta Comercial para filtrar os produtos por proposta sincronizada.
			ExpN3 - Tratamento dado ao ADJ (ler a descricao do parametro MV_FATMNTP )
		

@return	ExpA - Produtos da Proposta Comercial Sincronizada

@author	Anderson Silva
@since		30/01/2014
@version	12
/*/
//------------------------------------------------------------------------------

Function Ft300LdADJ(oMdlADJ,cCodProp,nOpcADJ)

Local nCtrlADJ	 	:= SuperGetMv("MV_FATMNTP",,1)
Local aAreaADJ 		:= ADJ->(GetArea())
Local oStructADJ	:= oMdlADJ:GetStruct()
Local aCamposADJ	:= oStructADJ:GetFields()
Local aLoadADJ 		:= {}
Local aLdAgrup   	:= {}
Local nLinha		:= 0
Local nY			:= 0
Local cCondProp		:= ".T."
Local cCondicao		:= ".T."
Local uValue		:= ""
Local nRecNum		:= 0
Local cFilADJ		:= xFilial("ADJ")
Local cFilAOL		:= xFilial("AOL")
Local cFilAOM		:= xFilial("AOM")

Private INCLUI		:= .F.

If nCtrlADJ == 4
	
	If ADJ->(dbSeek(cFilADJ+AD1->(AD1_NROPOR+AD1_REVISA)))
	
		WHile ADJ->(!Eof()) .And. ADJ->ADJ_FILIAL == cFilADJ .And. ADJ->(ADJ_NROPOR+ADJ_REVISA) == AD1->(AD1_NROPOR+AD1_REVISA)
	
			nRecNum := ADJ->(Recno())
			aAdd(aLdAgrup,{nRecNum ,{} })	
	
			For nY := 1 To Len(aCamposADJ)	

				If "R_E_C_N_O_" $ AllTrim(aCamposADJ[nY][MODEL_FIELD_IDFIELD])
					uValue := nRecNum
				ElseIf "ADJ_RESUMO" $ AllTrim(aCamposADJ[nY][MODEL_FIELD_IDFIELD])
					uValue := Posicione("AOL", 1, cFilAOL + ADJ->ADJ_CODAGR, "AOL_RESUMO")                                                   
				ElseIf "ADJ_DSCNIV" $ AllTrim(aCamposADJ[nY][MODEL_FIELD_IDFIELD])
					uValue := Posicione("AOM", 1, cFilAOM + ADJ->ADJ_CODAGR + ADJ->ADJ_CODNIV , "AOM_DESCRI")                                 
				ElseIf !aCamposADJ[nY][MODEL_FIELD_VIRTUAL]
					uValue := ADJ->( FieldGet( FieldPos( aCamposADJ[nY][MODEL_FIELD_IDFIELD] ) ) )
				Else
					uValue := CriaVar( aCamposADJ[nY][MODEL_FIELD_IDFIELD], .T. )
				EndIf
	
				aAdd(aLdAgrup[Len(aLdAgrup),2] , uValue )
	
			Next nY
	
			ADJ->(dbSkip())
		EndDo	
	
	EndIf
	
	aLoadADJ := aLdAgrup

Else

	DbSelectArea("ADJ")
	DbSetOrder(4)//ADJ_FILIAL+ADJ_NROPOR+ADJ_REVISA+ADJ_PROPOS+ADJ_NUMORC+ADJ_ITEM
	
	// Por padrao posiciona na chave principal para trazer todos os registros da ADJ
	lRetorno 	:= DbSeek(cFilADJ+AD1->AD1_NROPOR+AD1->AD1_REVISA)
	
	If nOpcADJ == 1 .AND. !Empty(cCodProp)
		lRetorno	:= DbSeek(cFilADJ+AD1->AD1_NROPOR+AD1->AD1_REVISA+cCodProp)
		cCondProp	:= "ADJ->ADJ_PROPOS == '"+cCodProp+"'"
	ElseIf nOpcADJ == 3 
		// Apresenta todos os registors inseridos manualmente na ADJ.
		cCondicao := "ADJ_PROPOS <> '"+Space(TAMSX3("ADJ_PROPOS")[1])+"' .OR. ADJ_NUMORC <> '"+Space(TAMSX3("ADJ_NUMORC")[1])+"'"		 
	EndIf
	 
	If lRetorno
	
		While ADJ->(!Eof()) .AND. ADJ->ADJ_FILIAL == cFilADJ .AND.;
			  	ADJ->ADJ_NROPOR == AD1->AD1_NROPOR .AND. ADJ->ADJ_REVISA == AD1->AD1_REVISA .AND.;
			  	&(cCondProp)	
			
			//Limpa linhas de defeito antigo que gravada ADJ com produto em branco
			If Empty( ADJ->ADJ_PROD )
				RecLock("ADJ",.F.)
				ADJ->(DbDelete())
				MsUnlock()
			ElseIf &(cCondicao) 
				nLinha++
				aAdd(aLoadADJ,{0,Array(Len(aCamposADJ))})
				For nY := 1 To Len(aCamposADJ)
					If !aCamposADJ[nY][MODEL_FIELD_VIRTUAL]
						aLoadADJ[nLinha][2][nY]	:= &("ADJ->"+aCamposADJ[nY][MODEL_FIELD_IDFIELD])
					Else
						aLoadADJ[nLinha][2][nY]	:= CriaVar(aCamposADJ[nY][MODEL_FIELD_IDFIELD],.T.)
					EndIf
				Next nY
			EndIf
		
			ADJ->(DbSkip())
		End
		
	EndIf

EndIf

RestArea(aAreaADJ)

Return(aLoadADJ)

//------------------------------------------------------------------------------
/*/{Protheus.doc} FT300AtuADJ
Atualiza informações do agrupador na grid de produtod (ADJ)
@sample		FT300AtuADJ()
@param		ExpO1 - ModelGrid Oportunidade de Venda
@return		Nenhum 
@author		Cleyton F.Alves
@since		30/01/2014
@version	12.5.6
/*/
//------------------------------------------------------------------------------
Static Function FT300AtuADJ(oModel)

Local cVarClie	:= FwFldGet("AD1_CODCLI")
Local cVarPros	:= FwFldGet("AD1_PROSPE")
Local oModelADJ	:= oModel:GetModel("ADJDETAIL")
Local aGridADJ	:= CRMA910A( cVarClie,cVarPros )
Local nX			:= 0
Local nY			:= 0

oModelADJ:CanUpdateLine(.T.)
oModelADJ:CanInsertLine(.T.)

If len(aGridADJ) > 0
	
	For nX := 1 To Len(aGridADJ)
		If oModelADJ:Length() < nX
			oModelADJ:AddLine()
		EndIf
		
		oModelADJ:GoLine(nX)
		
		If oModelADJ:IsDeleted()
			oModelADJ:UndeleteLine()
		EndIf
		
		oModelADJ:SetValue("ADJ_CODAGR",aGridADJ[nX,1])
		oModelADJ:SetValue("ADJ_RESUMO",aGridADJ[nX,2])
		oModelADJ:SetValue("ADJ_CODNIV",aGridADJ[nX,3])
		oModelADJ:SetValue("ADJ_DSCNIV",aGridADJ[nX,4])
		oModelADJ:SetValue("ADJ_FCAST" ,Iif(aGridADJ[nX,5],"1","2"))
	Next nX
	
	For nY := nX To oModelADJ:Length()
		oModelADJ:GoLine(nY)
		If !oModelADJ:IsDeleted()
			oModelADJ:DeleteLine(.T.,.T.)
		EndIf
	Next nY

	If !oModelADJ:IsEmpty()
		oModelADJ:GoLine(1)
	EndIf
	
Else
	
	Help( ,, "FT300AtuADJ",, STR0381, 1, 0 ) //"Agrupador não possui regra de comercialização ou você não possui os privilégios necessário para acessar este nível, sendo assim, o mesmo não será incluso na oportunidade de vendas."
	
Endif

oModelADJ:CanUpdateLine(.F.)
oModelADJ:CanInsertLine(.F.)

Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} FATA300AGR
Controle de deleção da ADJ
@sample	FATA300AGR(oModel)
@param	ExpO1 - ModelGrid dos Produtos da Oportunidade
@return	Nil
@author	Squad CRM/Faturamento
@since		30/01/2014
@version	12.1.6
/*/
//------------------------------------------------------------------------------
Function FATA300AGR(oMdlADJAGR)

Local aArea			:= {}
Local aAreaADJ		:= {}
Local cFilADJ		:= ""
Local nLength		:= 0
Local nX			:= 0
Local nCtrlADJ 		:= SuperGetMv("MV_FATMNTP",,1)

Default oMdlADJAGR	:= NIL
	
If Valtype(oMdlADJAGR) == "O"
	aArea		:= GetArea()
	aAreaADJ	:= ADJ->( GetArea() )
	cFilADJ		:= xFilial("ADJ")
	nLength		:= oMdlADJAGR:Length()

	ADJ->( DbSetOrder(1) )  //ADJ_FILIAL+ADJ_NROPOR+ADJ_REVISA+ADJ_ITEM+ADJ_PROD
	If nLength > 0
		For nX := 1 to nLength
			oMdlADJAGR:GoLine(nX)
			If oMdlADJAGR:IsDeleted()
				If	nCtrlADJ == 4
					ADJ->( MsSeek(cFilADJ + oMdlADJAGR:GetValue('ADJ_NROPOR') + oMdlADJAGR:GetValue('ADJ_REVISA')) )
				Else
					ADJ->( MsSeek(cFilADJ + oMdlADJAGR:GetValue('ADJ_NROPOR') + oMdlADJAGR:GetValue('ADJ_REVISA') + oMdlADJAGR:GetValue('ADJ_ITEM') + oMdlADJAGR:GetValue('ADJ_PROD')) )
				EndIf
				
				If ADJ->( !Eof() ) .And. ( Empty(ADJ->ADJ_PROPOS) .And. Empty(ADJ->ADJ_CODAGR) )
					RecLock("ADJ",.F.)
					ADJ->(DbDelete())
					ADJ->(MsUnLock())
				EndIf
			EndIf
		Next nX
	EndIf
	RestArea(aAreaADJ)
	RestArea(aArea)
	aSize(aAreaADJ,0)
	aSize(aArea,0)
EndIf
Return Nil 

//------------------------------------------------------------------------------
/*/{Protheus.doc} FATA300CPO

Carrega os campos da ADJ conforme a parametrização do MV_FATMNTP.

@sample	FATA300CPO()

@return	ExpA - Codblock da execução dos campos

@author	Cleyton F.Alves
@since		30/01/2014
@version	12.5.6
/*/
//------------------------------------------------------------------------------

Function FATA300CPO()

Local nCtrlADJ 	:= SuperGetMv("MV_FATMNTP",,1)
Local bReturn  	:= Nil 
Local lFT300Cpo	:= ExistBlock("FT300CPO")
Local cFields		:= "ADJ_FILIAL|ADJ_NROPOR|ADJ_REVISA|ADJ_PROPOS|ADJ_NUMORC|ADJ_HISTOR|ADJ_CODAGR|ADJ_CODNIV|ADJ_RESUMO|ADJ_DSCNIV|ADJ_FCAST|ADJ_IDINT"
Local cFieldsUsr	:= ""

If nCtrlADJ == 4
	If lFT300Cpo
		cFieldsUsr := ExecBlock("FT300CPO",.f.,.f.)
		If ValType(cFieldsUsr) <> "C"
			cFieldsUsr := ""
		EndIf
	EndIf
	bReturn := {|cCampo| AllTrim(cCampo) $ cFields + "|" + cFieldsUsr}
EndIf

Return(bReturn)

//------------------------------------------------------------------------------
/*/{Protheus.doc} FT300Num

Obtem o proximo numero para a oportunidade, verificando se o
numero sugerido na GetSxeNum nao foi utilizado.

@sample	FT300Num()

@param		Nenhum	
		

@return	cRet, caracter, Numero da Oportunidade.

@author	Anderson Silva
@since		04/07/2015
@version	12
/*/
//------------------------------------------------------------------------------
Function FT300Num()

Local aArea		:= GetArea()
Local aAreaAD1	:= AD1->(GetArea())
Local cFilter		:= AD1->( DBFilter() )
Local cRet			:= ""
Local lOk			:= .F.
Local cFilAD1		:= xFilial("AD1")

AD1->( DBClearFilter() )
AD1->( DBSetOrder(1) )
 
While !lOk
	cRet	:= GetSXENum( "AD1", "AD1_NROPOR" )
	lOk 	:= !( AD1->( DBSeek( cFilAD1 + cRet ) ) )
	If !lOk
		ConfirmSX8()
	EndIf
End

If !Empty( cFilter )
	DBSelectArea( "AD1" ) 
	SET FILTER TO &cFilter
EndIf

RestArea( aAreaAD1 )
RestArea( aArea )

Return( cRet )

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300AD1Sta
Executa o PE FT300D1ST para inclusão de novos status no campo AD1_STATUS
@sample	Ft300AD1Sta()
@return	ExpA - Array com os status atuais e os informados pelo PE
@author	Serviços
@since		12/04/2016
@version	12.1.7
/*/
//------------------------------------------------------------------------------
Function Ft300AD1Sta()
Local aArea		:= GetArea()					// Armazena o posicionamendo do alias atual
Local aAreaSX3	:= SX3->(GetArea())			// Armazena o posicionamento do SX3
Local aRet 		:= Posicione("SX3",2,"AD1_STATUS","StrToArray(X3Cbox(),';')")	//Carrega os Status atuais existentes na configuração do campo no Dicionário SX3
Local aRetPE		:= {}
Local nX			:= 0

aRetPE		:= ExecBlock("Ft300D1St",.F.,.F.)
If ValType(aRetPE) == "A"
	For nX := 1 to Len(aRetPE)
		aAdd(aRet, aRetPE[nX])
	Next nX
	aSort(aRet,,,{|x,y| y > x})
EndIf

RestArea(aAreaSX3)
RestArea(aArea)
aRetPE		:= {}
aAreaSX3	:= {}
aArea		:= {} 
Return aRet

//------------------------------------------------------------------------------
/*/{Protheus.doc} Ft300InBra
Executa o PE Ft300InBra para inclusão de novos status no campo AD1_STATUS
@sample	Ft300InBra()
@return	ExpA - Array com os status atuais e os informados pelo PE
@author	Serviços
@since		10/01/2019
@version	12.1.17
/*/
//------------------------------------------------------------------------------
Function Ft300InBra()
Return(IIF(!EMPTY(AD1->AD1_CHVCAM),POSICIONE("SUO",1,XFILIAL("SUO")+ALLTRIM(AD1->AD1_CHVCAM),"UO_DESC"),""))

//-----------------------------------------------------------------------------------
/*/{Protheus.doc} FATPDIsObfuscate
    @description
    Verifica se um campo deve ser ofuscado, esta função deve utilizada somente após 
    a inicialização das variaveis atravez da função FATPDLoad.
	Remover essa função quando não houver releases menor que 12.1.27

    @type  Function
    @author Squad CRM & Faturamento
    @since  05/12/2019
    @version P12.1.27
    @param cField, Caractere, Campo que sera validado
    @param cSource, Caractere, Nome do recurso que buscar dados protegidos.
    @param lLoad, Logico, Efetua a carga automatica do campo informado
    @return lObfuscate, Lógico, Retorna se o campo será ofuscado.
    @example FATPDIsObfuscate("A1_CGC",Nil,.T.)
/*/
//-----------------------------------------------------------------------------------
Static Function FATPDIsObfuscate(cField, cSource, lLoad)
    
	Local lObfuscate := .F.

    If FATPDActive()
		lObfuscate := FTPDIsObfuscate(cField, cSource, lLoad)
    EndIf 

Return lObfuscate




//-----------------------------------------------------------------------------
/*/{Protheus.doc} FATPDLogUser
    @description
    Realiza o log dos dados acessados, de acordo com as informações enviadas, 
    quando a regra de auditoria de rotinas com campos sensíveis ou pessoais estiver habilitada
	Remover essa função quando não houver releases menor que 12.1.27

   @type  Function
    @sample FATPDLogUser(cFunction, nOpc)
    @author Squad CRM & Faturamento
    @since 06/01/2020
    @version P12
    @param cFunction, Caracter, Rotina que será utilizada no log das tabelas
    @param nOpc, Numerico, Opção atribuída a função em execução - Default=0

    @return lRet, Logico, Retorna se o log dos dados foi executado. 
    Caso o log esteja desligado ou a melhoria não esteja aplicada, também retorna falso.

/*/
//-----------------------------------------------------------------------------
Static Function FATPDLogUser(cFunction, nOpc)

	Local lRet := .F.

	If FATPDActive()
		lRet := FTPDLogUser(cFunction, nOpc)
	EndIf 

Return lRet  

//-----------------------------------------------------------------------------
/*/{Protheus.doc} FATPDActive
    @description
    Função que verifica se a melhoria de Dados Protegidos existe.

    @type  Function
    @sample FATPDActive()
    @author Squad CRM & Faturamento
    @since 17/12/2019
    @version P12    
    @return lRet, Logico, Indica se o sistema trabalha com Dados Protegidos
/*/
//-----------------------------------------------------------------------------
Static Function FATPDActive()

    Static _lFTPDActive := Nil
  
    If _lFTPDActive == Nil
        _lFTPDActive := ( GetRpoRelease() >= "12.1.027" .Or. !Empty(GetApoInfo("FATCRMPD.PRW")) )  
    Endif

Return _lFTPDActive

//-----------------------------------------------------------------------------------
/*/{Protheus.doc} AO4GdModel

Cria um GridModel associado ao modelo informado no parãmetro, para evitar
a validação do SX9 da entidade principal do modelo informado com a AO4

@param, cIDModel, ID do modelo principal                              , String
@param, oModel  , Objeto do modelo a que o novo modelo serah associado, MPFormModel

@sample		AO4GdModel(cIDModel, oModel)

@return, Nil

@author		Squad CRM/Faturamento
@since		30/06/2021
@version	12.1.27
/*/
//----------------------------------------------------------------------------------
Static Function AO4GdModel(cIDMasterM, oModel, cAliasMast )
Local oStructAO4 := FWFormStruct(1,"AO4",/*bAvalCampo*/,/*lViewUsado*/)
Default cIDMasterM := ""
Default cAliasMast := ""

oModel:AddGrid("AO4CHILD",cIDMasterM,oStructAO4,/*bPreValid*/,/*bPosValid*/, , ,{|oGridModel, lCopy|LoadGdAO4(oGridModel, lCopy)})
oModel:SetRelation( "AO4CHILD" ,{ { "AO4_FILIAL", "FWxFilial( 'AO4' )" }, { "AO4_ENTIDA", cAliasMast }, { "AO4_CHVREG", ( cAliasMast )->( IndexKey( 1 ) ) }  }, AO4->( IndexKey( 1 ) ) )
oModel:GetModel("AO4CHILD"):SetOnlyView()
oModel:GetModel("AO4CHILD"):SetOnlyQuery()
oModel:GetModel("AO4CHILD"):SetOptional(.T.)
oModel:GetModel("AO4CHILD"):SetNoInsertLine(.T.)
oModel:GetModel("AO4CHILD"):SetNoUpdateLine(.T.)
oModel:GetModel("AO4CHILD"):SetNoDeleteLine(.T.)

Return Nil

//-----------------------------------------------------------------------------------
/*/{Protheus.doc} LoadGdAO4 

Bloco de carga dos dados do submodelo.
Este bloco sera invocado durante a execução do metodo activate desta classe.
O bloco recebe por parametro o objeto de model do FormGrid(FWFormGridModel) e um 
valor lógico indicando se eh uma operação de copia.

@param, oGridModel, objeto de model do FormGrid, FWFormGridModel
@param, lCopy     , indica se eh uma operação de copia, Boolean

@sample	LoadGdAO4(oGridModel, lCopy)

@return, aLoad, array com os dados que serão carregados no objeto, 
                o array deve ter a estrutura abaixo:
					[n]
					[n][1] ExpN: Id do registro (RecNo)
					[n][2] Array com os dados, os dados devem seguir exatamente 
					       a mesma ordem da estrutura de dados submodelo

@author		Squad CRM/Faturamento
@since		30/06/2021
@version	12.1.27
/*/
//----------------------------------------------------------------------------------
Static Function LoadGdAO4(oGridModel, lCopy)
	
	Local aLoad      := {}
	Local oStructAO4 := FWFormStruct(1,"AO4",/*bAvalCampo*/,/*lViewUsado*/)
	Local aFields    := {}
	Local nField     := 0
	Local nQtFields  := 0
	Local xValue     := Nil
	Local cField     := ""
	Local cType      := ""
	Local nLen       := 0

	aFields   := oStructAO4:GetFields()
	nQtFields := Len(aFields)

	AAdd(aLoad, {0,{}})

	For nField := 1 To nQtFields
		
		cField := aFields[nField][3]
		
		If Alltrim(cField) == "AO4_FILIAL"
			xValue := XFilial("AO4")
			cType  := ""
		Else
			cType  := aFields[nField][4]
			nLen   := aFields[nField][5]	
		EndIf

		Do Case
			Case cType == "C"
				xValue := Space(nLen)
			Case cType == "N"
				xValue := 0
			Case cType == "L"
				xValue := .T.
			Case cType == "D"
				xValue := CToD("  /  /    ")
		End Case

		AAdd(aLoad[1][2], xValue)
	Next nField

	FwFreeObj(oStructAO4)
	FwFreeObj(aFields)

Return aLoad
