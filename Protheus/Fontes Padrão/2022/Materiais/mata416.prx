#INCLUDE "PROTHEUS.CH"
#INCLUDE "MATA416.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWEVENTVIEWCONSTS.CH"     
#INCLUDE "FWADAPTEREAI.CH"

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ MATA416  ³ Autor ³ Eduardo Riera         ³ Data ³ 07.01.98  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa de Baixa dos Orcamentos de Venda                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void MATA416(void)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Eduardo       ³26.06.98³16726A³Numeracao das Ordens de Prod. e SC1 e SC7³±±
±±³Aline C. Vale ³02.09.99³23696A³Verificar Estado do cliente p/alterar Cfo³±±
±±³Alves         ³29.09.99³xxxxxx³Preparando para executar rotinas automati³±±
±±³              ³        ³      ³cas disparadas pelo SigaAuto             ³±±
±±³ sandro       ³26.01.00³xxxxxx³ retirada da variavel lmshelpauto ref    ³±±
±±³              ³        ³      ³ a manutencao automatica                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATA416(xAutoCab,xAutoItens)

Local lGerar   := .F.
Local lContinua:=.F.
Local cAlias   := Alias()
Local nOps     := 0
Local nOpc     := 0
Local nX       := 0
Local nCntFor  := 0
Local nMaxFor  := 0
Local aCores := {	{ 'SCJ->CJ_STATUS=="A"'	, 'ENABLE' 		},;
					{ 'SCJ->CJ_STATUS=="B"'	, 'DISABLE'		},;
					{ 'SCJ->CJ_STATUS=="C"'	, 'BR_PRETO'	},;
					{ 'SCJ->CJ_STATUS=="D"'	, 'BR_AMARELO'	},;
					{ 'SCJ->CJ_STATUS=="F"'	, 'BR_MARROM'	}}
Local cFiltraSCJ	:= " "
Local bFiltraBrw	:= " "
Local aIndexSCJ		:= {}
	
PRIVATE aHeadC6:= {}
PRIVATE aHeadD4:= {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas na geracao de SCS aglutinadas por data  ³
//³ de necessidade.                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aDataOPC1 := {}
PRIVATE aDataOPC7 := {}
PRIVATE aOPC1     := {}
PRIVATE aOPC7     := {}
PRIVATE lEnd      := .F.
PRIVATE INCLUI    := .T.
PRIVATE lMTA650I  := (ExistBlock( "MTA650I" ) )
PRIVATE lMT650C1  := (ExistBlock( "MT650C1" ) )
PRIVATE lM650EmpT := (ExistTemplate( "EMP650"  ) ) 
PRIVATE lM650Emp  := (ExistBlock( "EMP650"  ) )
PRIVATE cPedido   := ""
PRIVATE cItemPV   := ""
PRIVATE cCadastro := OemtoAnsi(STR0001) //"Baixa de Or‡amentos"
PRIVATE l416Auto  := ( xAutoCab <> NIL  .and. xAutoItens <> NIL )
PRIVATE aAutoCab  := {}
PRIVATE aAutoItens:= {}
PRIVATE aValidGet := {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para integracao com programa MATA650    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aSav650 := Array(20)
PRIVATE lConsTerc
PRIVATE lConsNPT
PRIVATE aRotina := MenuDef()
PRIVATE	lProj711 := .F.
PRIVATE	lMata712 := .F.
PRIVATE	lPCPA107 := .F.
PRIVATE	lZrHeader:= .T.

If ExistBlock("MATA416A")
	ExecBlock("MATA416A",.F.,.F.)
EndIf	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ mv_par01 Mostra Ordem de Producao   ? Sim/Nao        ³
//³ mv_par02 Mostra Empenho do PV.      ? Sim/Nao        ³
//³ mv_par03 Gera PV s/ SugestÆo        ? Sim/Nao        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ativa tecla F-10 para parametros                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTA416",.F.)
If !(l416Auto)
	SetKey( VK_F12 , {|| Pergunte("MTA416",.T.) } )
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta aHeader do SC6                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aHeadC6 := {}
dbSelectArea("SX3")
dbSetOrder(1)
MsSeek("SC6",.T.)
While ( !Eof() .And. (SX3->X3_ARQUIVO == "SC6") )
	If (  ((X3Uso(SX3->X3_USADO) .And. ;
			!( Trim(SX3->X3_CAMPO) == "C6_NUM" ) .And.;
			Trim(SX3->X3_CAMPO) != "C6_QTDEMP"  .And.;
			Trim(SX3->X3_CAMPO) != "C6_QTDENT") .And.;
			cNivel >= SX3->X3_NIVEL) .Or.;
			Trim(SX3->X3_CAMPO)=="C6_NUMORC" .Or. ;
			Trim(SX3->X3_CAMPO)=="C6_NUMOP"  .Or. ;
			Trim(SX3->X3_CAMPO)=="C6_ITEMOP" .Or. ;
			Trim(SX3->X3_CAMPO)=="C6_OP" .Or. ;
			Trim(SX3->X3_CAMPO)=="C6_OPC" )	
		Aadd(aHeadC6,{TRIM(X3Titulo()),;
			SX3->X3_CAMPO,;
			SX3->X3_PICTURE,;
			SX3->X3_TAMANHO,;
			SX3->X3_DECIMAL,;
			If(Trim(SX3->X3_CAMPO)=="C6_NUMORC",".F.",SX3->X3_VALID),;
			SX3->X3_USADO,;
			SX3->X3_TIPO,;
			SX3->X3_ARQUIVO,;
			SX3->X3_CONTEXT } )
	EndIf
	dbSelectArea("SX3")
	dbSkip()
EndDo
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta aHeader do SD4                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX3")
dbSetOrder(1)
MsSeek("SD4")
While ( !Eof() .And. SX3->X3_ARQUIVO == "SD4" )
	If ( X3Uso(SX3->X3_USADO) .And. cNivel >= SX3->X3_NIVEL )
		Aadd(aHeadD4,{ Trim(X3Titulo()),;
			SX3->X3_CAMPO,;
			SX3->X3_PICTURE,;
			SX3->X3_TAMANHO,;
			SX3->X3_DECIMAL,;
			SX3->X3_VALID,;
			SX3->X3_USADO,;
			SX3->X3_TIPO,;
			SX3->X3_ARQUIVO,;
			SX3->X3_CONTEXT })
	EndIf
	dbSelectArea("SX3")
	dbSkip()
EndDo
dbSelectArea("ABI")
dbSelectArea("SCJ")
dbSetOrder(1)
If (l416Auto)
	aAutoCab   := xAutoCab
	aAutoItens := xAutoItens
	MBrowseAuto(4,Aclone(aAutoCab),"SCJ")
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para alterar cores do Browse do Cadastro    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("MA416COR")
		aCores := ExecBlock("MA416COR",.F.,.F.,aCores)
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verificacao de filtro na Mbrowse                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( ExistBlock("MA416FIL") )
		cFiltraSCJ := AllTrim(ExecBlock("MA416FIL",.F.,.F.))
		If Valtype(cFiltraSCJ) == "C" .And. !Empty(cFiltraSCJ)
			bFiltraBrw 	:= {|| FilBrowse("SCJ",@aIndexSCJ,@cFiltraSCJ)}
			Eval(bFiltraBrw)
			If ( Eof() )
				HELP(" ",1,"RECNO")
			EndIf
		EndIf
	EndIf
	
	MsSeek(xFilial("SCJ"))
	mBrowse( 6, 1,22,75,"SCJ",,,,,,aCores)
EndIf
INCLUI := .F. // For‡ado para compatibilizacao
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe SC's ou OP's para serem geradas           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetKey( VK_F12 , Nil )
Pergunte("MTA650",.F.)
//Salvar variaveis existentes
For nx := 1 to 20
	aSav650[nx] := &("mv_par"+StrZero(nx,2))
Next nx
lConsNPT  := (aSav650[14] == 1)
lConsTerc := !(aSav650[15] == 1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gera SC's aglutinadas por OP.                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( aSav650[06] == 2 )
	nMaxFor  := Len(aOPC1)
	For nCntFor := 1 to nMaxFor
		A650GravC1(	aOPC1[nCntFor,1],aOPC1[nCntFor,2],aOPC1[nCntFor,3],;
			aOPC1[nCntFor,4],aOPC1[nCntFor,5],aOPC1[nCntFor,6],;
			aOPC1[nCntFor,7],aOPC1[nCntFor,8],aOPC1[nCntFor,9],;
			aOPC1[nCntFor,10])
	Next nCntFor
	nMaxFor  := Len(aOPC7)
	For nCntFor := 1 to nMaxFor
		A650GravC7(	aOPC7[nCntFor,1],aOPC7[nCntFor,2],aOPC7[nCntFor,3],;
			aOPC7[nCntFor,4],aOPC7[nCntFor,5],aOPC7[nCntFor,6],;
			aOPC7[nCntFor,7])
	Next nCntFor
ElseIf ( aSav650[06] == 3 )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera SC's aglutinadas por data de Necessidade.               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nMaxFor := Len(aDataOPC1)
	For nCntFor := 1 to nMaxFor
		A650GravC1(	aDataOPC1[nCntFor,1],aDataOPC1[nCntFor,2],;
			aDataOPC1[nCntFor,3],aDataOPC1[nCntFor,4],;
			aDataOPC1[nCntFor,5],aDataOPC1[nCntFor,6],;
			aDataOPC1[nCntFor,7],aDataOPC1[nCntFor,8],;
			aDataOPC1[nCntFor,9],aDataOPC1[nCntFor,10])
	Next nCntFor
	nMaxFor := Len(aDataOPC7)
	For nCntFor := 1 to nMaxFor
		A650GravC7(	aDataOPC7[nCntFor,1],aDataOPC7[nCntFor,2],;
			aDataOPC7[nCntFor,3],aDataOPC7[nCntFor,4],;
			aDataOPC7[nCntFor,5],aDataOPC7[nCntFor,6],;
			aDataOPC7[nCntFor,7])
	Next nCntFor
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe OP's Intermediarias para geracao          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContinua:= .T. 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o Numero de Registros a Processar                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lContinua
		a650RegOPI(@lGerar, @nOps, Funname())		
	Else
		dbSelectArea("BAT")
		dbSetOrder(2)
		While !Eof()
			If ( Empty(BAT->OK) .And. BAT->OR == "S" )
				lGerar := .T.
				nOps++
			EndIf
			dbSkip()
		End
	EndIf
	If ( lGerar )
		MTA650OK(@nOpc)
		If ( nOpc == 1 )
			Pergunte("MTA650",.F.)
			Processa({|lEnd| MA650Process(@lEnd,nOps,.T.)},STR0019,OemToAnsi(STR0020),.F.)   //"Gera‡„o de OPs Intermediarias e SCs"###"Gerando OPs Intermediarias e SCs..."
		EndIf
	EndIf	
Endif
dbSelectArea(cAlias)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A416GrvBx ³ Autor ³ Eduardo Riera         ³ Rev. ³30.11.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de interface da baixa manual dos orcamentos de venda  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo controlar a interface da baixa ³±±
±±³          ³manual do orcamento de venda                                 ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A416GrvBx()

Local aArea     := GetArea()
Local bSetKey   := SetKey(VK_F12,Nil)
Local lLibPv	:= .F.
Local lShowPV 	:= SuperGetMv("MV_FATTEPO",,.T.)

If SuperGetMV("MV_ORCSLIB",,.F.)
	Pergunte("MTA410",.F.)
	lLibPV := MV_PAR01==1
EndIf

Pergunte("MTA416",.F.)

MaBxOrc(SCJ->CJ_NUM,MV_PAR01==1,MV_PAR02==1,MV_PAR03==1,lShowPV,aHeadC6,aHeadD4,lLibPV)

SetKey(VK_F12,bSetKey)
RestArea(aArea)

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Ma416Auto ³ Autor ³ Eduardo Riera         ³ Rev. ³30.11.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Interface da baixa automatica do Orcamento de Venda          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhuma                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo controlar a interface da baixa ³±±
±±³          ³automatica do pedido de venda                                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MA416Auto()

Local aArea   := GetArea()
Local nOpcA   := 0
Local bSetKey := Nil
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ mv_par01 Orcamento de       ?                                 ³
//³ mv_par02 Orcamento ate      ?                                 ³
//³ mv_par03 Emissao de         ?                                 ³
//³ mv_par04 Emissao ate        ?                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If !ctbValiDt( Nil, dDataBase, .T., Nil, Nil, { "FAT001" }, Nil )
	Return .F.
EndIf

bSetKey := SetKey(VK_F12,Nil)

Pergunte("MT416A",.F.)
FormBatch(cCadastro,{   OemToAnsi(STR0024),;    //"  Este programa  tem  como  objetivo  gerar automaticamente as libera‡”es     "
	OemToAnsi(STR0025),;    //"  de pedidos, tomando-se como base o cr‚dito do cliente e a existencia         "
	OemToAnsi(STR0026) },;  //"  dos produtos em estoque e a data de entrega do item do pedido.               "
	{ { 5,.T.,{|o| Pergunte("MT416A",.T.)}},;
	{ 1,.T.,{|o| nOpcA := 1, o:oWnd:End()   }},;
	{ 2,.T.,{|o| o:oWnd:End()}}})
If ( nOpcA == 1 )
	Processa({|lEnd| Ma416Proc()})
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da rotina                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetKey(VK_F12,bSetKey)
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Ma416Proc ³ Autor ³ Eduardo Riera         ³ Rev. ³30.11.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de Processamento da baixa automatica do Pedido de Ven-³±±
±±³          ³da                                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhuma                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo controlar o processamento da   ³±±
±±³          ³baixa automatica do pedido de venda.                         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MA416Proc()

Local aArea     := GetArea()
Local cAliasSCJ := "SCJ"
Local cQuery    := ""
Local lBaixa    := .T. 
Local lMTA416BX := ExistBlock( "MTA416BX" ) 
Local aStruSCJ  := {} 
Local nLoop     := 0 	               

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ mv_par01 Orcamento de       ?                                 ³
//³ mv_par02 Orcamento ate      ?                                 ³
//³ mv_par03 Emissao de         ?                                 ³
//³ mv_par04 Emissao ate        ?                                 ³
//³ mv_par05 Libera PV          ?                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Selecao dos orcamentos a serem baixados                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SCJ")
dbSetOrder(1)

cAliasSCJ := "MA416PROC"
           
If lMTA416BX                           
	cQuery := "SELECT * "	
Else
	cQuery := "SELECT CJ_FILIAL,CJ_NUM "
EndIf 	
	
cQuery += "FROM "+RetSqlName("SCJ")+" SCJ "
cQuery += "WHERE SCJ.CJ_FILIAL='"+xFilial("SCJ")+"' AND "
cQuery += "SCJ.CJ_NUM >= '"+MV_PAR01+"' AND "
cQuery += "SCJ.CJ_NUM <= '"+MV_PAR02+"' AND "
cQuery += "SCJ.CJ_EMISSAO >= '"+Dtos(MV_PAR03)+"' AND "
cQuery += "SCJ.CJ_EMISSAO <= '"+Dtos(MV_PAR04)+"' AND "	
If SuperGetMV("MV_ORCCOT")
	cQuery += "SCJ.CJ_COTCLI='"+Space(Len(SCJ->CJ_COTCLI))+"' AND "
EndIf
cQuery += "SCJ.CJ_STATUS='A' AND "
cQuery += "SCJ.D_E_L_E_T_=' ' "
cQuery += "ORDER BY "+SqlOrder(SCJ->(IndexKey()))

cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSCJ,.T.,.T.)

If lMTA416BX 
	aStruSCJ := SCJ->( dbStruct() ) 
	For nLoop := 1 To Len( aStruSCJ ) 
		If aStruSCJ[ nLoop, 2 ] <> "C" 
			TcSetField( cAliasSCJ, aStruSCJ[ nLoop, 1 ],aStruSCJ[ nLoop, 2 ],aStruSCJ[ nLoop, 3 ],aStruSCJ[ nLoop, 4 ])
		EndIf 		
	Next nLoop
EndIf 	 	

dbSelectArea(cAliasSCJ)
ProcRegua(SCJ->(LastRec()))

While ( !Eof() .And. (cAliasSCJ)->CJ_FILIAL == xFilial("SCJ") )
     
	lBaixa := .T. 
	If lMTA416BX 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de entrada para selecionar os itens a serem baixados   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lBaixa := ExecBlock( "MTA416BX", .F., .F., { cAliasSCJ } )
	EndIf 	

	If lBaixa	
		MaBxOrc((cAliasSCJ)->CJ_NUM,.F.,.F.,.T.,.F.,aHeadC6,aHeadD4,MV_PAR05==1)
		FreeUsedCode(.T.)
	EndIf 		

	IncProc()

	dbSelectArea(cAliasSCJ)
	dbSkip()
EndDo

(cAliasSCJ)->( DbCloseArea() )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da rotina                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MaBxOrc   ³ Autor ³ Eduardo Riera         ³ Rev. ³30.11.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de baixa do Orcamento de Venda                        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Numero do Orcamento de Venda                          ³±±
±±³          ³ExpL2: Mostra Ordem de Producao                              ³±±
±±³          ³ExpL3: Mostra Empenho                                        ³±±
±±³          ³ExpL4: Gera pedido de venda                                  ³±±
±±³          ³ExpL5: Mostra Pedido de Venda                                ³±±
±±³          ³ExpA6: aHeader do SC6                                   (OPC)³±±
±±³          ³ExpA7: aHeader do SD4                                   (OPC)³±±
±±³          ³ExpL8: Indica se o pedido de venda deve ser liberado    (OPC)³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo baixar o orcamento de venda    ³±±
±±³          ³gerando Ordem de Producao, empenhos e Pedido de venda        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MaBxOrc(cNumOrc,lMostraOP,	lMostraEmp,lGeraPV,lMostraPV,aHeadC6,aHeadD4,lLibPV)

Local aArea 		:= GetArea()
Local aAreaSCJ		:= SCJ->(GetArea())
Local aAreaOrc		:= {}
Local aRegSCK		:= {}
Local aRegSCJ		:= {}
Local aLockSCJ		:= {}
Local aRegSC2		:= {}
Local aRegSD4		:= {}
Local aRegPed		:= {}
Local aStruSCK		:= {}
Local aDadosCfo		:= {}
Local lSugestao		:= .F. // Indica se h  uma sugestao de Or‡amento
Local lPedido		:= .F. // Indica se ser  gerado um PV.
Local lPedGrv		:= .T. // Indica se o pedido foi gravado
Local lEstrutura	:= .F. // Indica se o Produto possui estrutura
Local lOPComp       := .F. // Validar se o Pergunte("MTA416") está selecionado para Gerar OP para os Componentes
Local lOpPai		:= .F. // Indica se foi gerada OP para o PV
Local lMta416PV		:= (existblock("MTA416PV"))
Local aOpPai		:= {}  // Numero das Op's Geradas
Local aLoteEco		:= {}
Local aColsC6		:= {}
Local aColsD4		:= {}
Local nPos1			:= 0
Local nSaldo		:= 0 // Saldo do item ( OP )
Local nCntFor		:= 0
Local nMaxFor		:= 0
Local nAcols		:= 0
Local nUsado		:= 0
Local nParcTp9		:= GetMv("MV_NUMPARC")
Local nX			:= 0
Local nY			:= 0
Local nZ			:= 0
Local nMaxVend		:= Fa440CntVen()
Local nStack		:= GetSX8Len()  
Local bCampo		:= {|x| FieldName(x) }
Local cCampo		:= ""
Local cNumOp		:= ""
Local cItemOp		:= ""
Local cSeqC2		:= "000"
Local cRoteiro		:= ""
Local cQuery		:= ""
Local cAliasSCK		:= "SCK"
Local cAliasSCJ		:= "SCJ"
Local cSavFil		:= cFilAnt
Local cItSC6		:= "00"
Local cVend			:= "1"          
Local cParcela		:= "123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ0"
Local oDlg
Local aAreaSE4		:= {}
Local lMopc			:= (!(SuperGetMv("MV_REPGOPC",,"N") == "N") .And. SCK->(ColumnPos("CK_MOPC")) > 0)	//Verifica se está utilizando o campo memo de opcionais
Local lGEMORCxPV	:= ExistTemplate("GEMORCxPV",,.T.)
Local dMVNT2006I	:= CtoD(SuperGetMv("MV_NT2006I",.F.,"05/04/2021"))
Local lNT2006I		:= ( SCJ->(ColumnPos("CJ_CODA1U")) > 0 .AND. SCJ->(ColumnPos("CJ_INDPRES")) > 0 .AND.;
                	     SC5->(ColumnPos("C5_CODA1U")) > 0 .AND. SC5->(ColumnPos("C5_INDPRES")) > 0 .AND.;
					     AliasInDic("A1U") .AND.;
					     FindFunction("FATA760") )	//Existe o campo do Código do Intermediador no Orçamento e no Pedido de Venda (Campos inseridos durante a Versão 12.1.27)
Local lLiber  		:= .F.
Local lTransf 		:= .F.
Local lCK_OPER		:= SCK->(ColumnPos("CK_OPER")) > 0 	//Validar se o campo CK_OPER foi criado como campo Real e não mais Virtual
Local cFilSB1		:= xFilial("SB1")
Local cFilSE4		:= xFilial("SE4")
Local cFilSF4		:= xFilial("SF4")
Local cFilSA1		:= xFilial("SA1")
Local lCampBol		:= cPaisLoc == "BOL" .and. FindFunction("loadCamBol")

Private aSize		:= MsAdvSize()
Private aObjects 	:= {} 
Private aInfo    	:= {} 
Private aPosObj  	:= {} 
PRIVATE aHeader   	:= {}
PRIVATE aCols     	:= {{.F.}}
PRIVATE aHeadGrade	:= {}
PRIVATE aColsGrade	:= {}
PRIVATE aMemoSC6 	:= { { 'C6_CODINF', 'C6_INFAD' } }

If Type("aGEMCVnd") == "U"
	PRIVATE aGEMCVnd :={"",{},{}}
EndIf

l416Auto          := If (Type("l416Auto") == "U",.f.,l416Auto)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa os DEFAULT´s do sistema                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFAULT lMostraOP := .F.
DEFAULT lMostraEmp:= .F.
DEFAULT lGeraPV   := .T.
DEFAULT lMostraPV := .F.
DEFAULT lLibPV    := .F.
DEFAULT aHeadC6   := {}
DEFAULT aHeadD4   := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta aHeader do SC6                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(aHeadC6)
	dbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek("SC6",.T.)
	While ( !Eof() .And. (SX3->X3_ARQUIVO == "SC6") )
		If (  ((X3Uso(SX3->X3_USADO) .And. ;
				!( Trim(SX3->X3_CAMPO) == "C6_NUM" ) .And.;
				Trim(SX3->X3_CAMPO) != "C6_QTDEMP"  .And.;
				Trim(SX3->X3_CAMPO) != "C6_QTDENT") .And.;
				cNivel >= SX3->X3_NIVEL) .Or.;
				Trim(SX3->X3_CAMPO)=="C6_NUMORC" .Or. ;
				Trim(SX3->X3_CAMPO)=="C6_NUMOP"  .Or. ;
				Trim(SX3->X3_CAMPO)=="C6_ITEMOP" .Or. ;
				Trim(SX3->X3_CAMPO)=="C6_OP" .Or. ;
				Trim(SX3->X3_CAMPO)=="C6_OPC" )	
			Aadd(aHeadC6,{TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				If(Trim(SX3->X3_CAMPO)=="C6_NUMORC".Or.Trim(SX3->X3_CAMPO)=="C6_OP",".F.",SX3->X3_VALID),;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_ARQUIVO,;
				SX3->X3_CONTEXT } )
		EndIf
		dbSelectArea("SX3")
		dbSkip()
	EndDo
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta aHeader do SD4                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(aHeadD4)
	dbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek("SD4")
	While ( !Eof() .And. SX3->X3_ARQUIVO == "SD4" )
		If ( X3Uso(SX3->X3_USADO) .And. cNivel >= SX3->X3_NIVEL )
			Aadd(aHeadD4,{ Trim(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				SX3->X3_VALID,;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_ARQUIVO,;
				SX3->X3_CONTEXT })
		EndIf
		dbSelectArea("SX3")
		dbSkip()
	EndDo
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona no Orcamento de Venda                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SCJ")
dbSetOrder(1)
MsSeek(xFilial("SCJ")+cNumOrc)
aAreaOrc := GetArea()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Orderna os orcamentos de venda por filiais para gerar o pedido de venda ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFDEF TOP
	cAliasSCK := "MABXORC"

	cQuery := "SELECT "
	cQuery += "CK_FILENT,CK_FILVEN,"
	cQuery += "CK_PRODUTO,CK_LOCAL,CK_ITEM,R_E_C_N_O_ SCKRECNO "
	cQuery += "FROM "+RetSqlName("SCK")+" "
	cQuery += "WHERE CK_FILIAL='"+xFilial("SCK")+"' AND "
	cQuery += "CK_NUM='"+SCJ->CJ_NUM+"' AND "
	cQuery += "D_E_L_E_T_=' ' "	

	cQuery := ChangeQuery(cQuery)

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSCK,.T.,.T.)	
	While (cAliasSCK)->(!Eof())
		aadd(aRegSCK,{ (cAliasSCK)->SCKRECNO, (cAliasSCK)->CK_FILENT, (cAliasSCK)->CK_FILVEN, (cAliasSCK)->CK_ITEM })
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Tratamento para DEAD - LOCK do SB2                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		(cAliasSCK)->(dbSkip())
	EndDo
	(cAliasSCK)->(dbCloseArea())
	dbSelectArea("SCK")

#ELSE
	dbSelectArea("SCK")
	dbSetOrder(1)
	MsSeek(xFilial("SCK")+SCJ->CJ_NUM,.T.)
	While ( !Eof() .And. xFilial("SCK")==SCK->CK_FILIAL .And. ;
			SCJ->CJ_NUM == SCK->CK_NUM )
		aadd(aRegSCK,{ SCK->(RecNo()),SCK->CK_FILENT,SCK->CK_FILVEN,SCK->CK_ITEM })
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Tratamento para DEAD - LOCK do SB2                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		dbSelectArea("SCK")
		dbSkip()
	EndDo
#ENDIF
aRegSCK := aSort(aRegSCK,,,{|x,y| x[2]+x[3]+x[4] < y[2]+y[3]+y[4] })

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tratamento para DEAD - LOCK do SCJ                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SuperGetMV("MV_ORCCOT") .And. !Empty(SCJ->CJ_COTCLI)
	#IFDEF TOP
		cAliasSCJ := "MABXORC"

		cQuery := "SELECT "
		cQuery += "R_E_C_N_O_ SCJRECNO,CJ_NUM "
		cQuery += "FROM "+RetSqlName("SCJ")+" SCJ "
		cQuery += "WHERE SCJ.CJ_FILIAL='"+xFilial("SCJ")+"' AND "
		cQuery += "SCJ.CJ_COTCLI='"+SCJ->CJ_COTCLI+"' AND "
		cQuery += "SCJ.CJ_NUM<>'"+cNumOrc+"' AND "
		cQuery += "SCJ.CJ_STATUS='A' AND "
		cQuery += "SCJ.D_E_L_E_T_=' ' "	

		cQuery := ChangeQuery(cQuery)

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSCJ,.T.,.T.)	

		While !Eof()
			aadd(aRegSCJ,MABXORC->SCJRECNO)
			aadd(aLockSCJ,MABXORC->CJ_NUM)
			dbSelectArea("MABXORC")
			dbSkip()
		EndDo

		dbSelectArea("MABXORC")
		dbCloseArea()
		dbSelectArea("SCJ")
	#ELSE
		cCotacao := SCJ->CJ_COTCLI
		dbSelectArea("SCJ")
		dbSetOrder(2)
		MsSeek(xFilial("SCJ")+SCJ->CJ_COTCLI)
		While !Eof() .And. xFilial("SCJ")==SCJ->CJ_FILIAL .And.;
				SCJ->CJ_COTCLI == cCotacao
			If SCJ->CJ_NUM<>cNumOrc .And. SCJ->CJ_STATUS == 'A'
				aadd(aRegSCJ,SCJ->(RecNo()))
				aadd(aLockSCJ,SCJ->CJ_NUM)
			EndIf
			dbSelectArea("SCJ")	
			dbSkip()
		EndDo
	#ENDIF
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Estoque esta disponivel para atualizacoes                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MultLock("SCJ",aLockSCJ,1) .AND. Len(aRegSCK) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inicia a baixa do Orcamento de venda                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RestArea(aAreaOrc)
	SCK->(MsGoto(aRegSCK[1,1]))
	If SCJ->(SimpleLock())
		Pergunte("MTA416",.F.)
		lOPComp := IIF(ValType(MV_PAR04) == "N", MV_PAR04 == 2, .F.) 
		For nX := 1 To Len(aRegSCK)
			aOpPai := {}	
			If Empty(SCK->CK_NUMPV)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verifica a filial de gravacao do pedido de venda                        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Empty(SCK->CK_FILENT)
					cFilAnt := SCK->CK_FILENT
				EndIf

				aadd(aRegPed,SCK->(RecNo()))
				lPedGrv := .F.
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Localiza a sugestao de orcamento                                        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SBG")
				dbSetOrder(1)
				lSugestao := ( MsSeek(xFilial("SBG")+SCK->CK_PRODUTO,.F.) )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Gera Pedido de Venda quando:                                            ³
				//³ - Quando a Sugestao de orcamento indicar que deve ser gerado um PV     ³
				//³ - Quando nao ha sugestao mas o parametro lGeraPV solicitar a gravacao  ³	
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( ((lSugestao .And. SBG->BG_GERAPV $ "S") .Or. (!lSugestao .And. lGeraPV)) .And. Empty(SCK->CK_NUMPV) )
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Posiciona registros                                                     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea("SB1")
					dbSetOrder(1)
					MsSeek(cFilSB1+SCK->CK_PRODUTO)
	
					dbSelectArea("SE4")
					dbSetOrder(1)
					MsSeek(cFilSE4+SCJ->CJ_CONDPAG)
	
					dbSelectArea("SF4")
					dbSetOrder(1)
					MsSeek(cFilSF4+SCK->CK_TES)

					If (!lPedido) 
						dbSelectArea("SA1")
						dbSetOrder(1)
						MsSeek(cFilSA1+SCJ->CJ_CLIENTE+SCJ->CJ_LOJA)
						
						lPedido := .T. 		 						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Cria as variaveis do Pedido de Venda                                    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						dbSelectArea("SC5")
						nMaxFor := FCount()
						For nCntFor := 1 To nMaxFor
							M->&(EVAL(bCampo,nCntFor)) := CriaVar(FieldName(nCntFor),.T.)
						Next nCntFor
						M->C5_TIPO    := "N"
						M->C5_CLIENTE := SCJ->CJ_CLIENTE
						M->C5_LOJACLI := SCJ->CJ_LOJA
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Atualiza as informacoes padroes a partir do Cliente                     ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						ALTERA := l416Auto
						aAreaSE4:= SE4->(GetArea())
						a410Cli("C5_CLIENTE",M->C5_CLIENTE,.F.)
						a410Loja("C5_LOJACLI",M->C5_LOJACLI,.F.)										
						M->C5_CLIENT := SCJ->CJ_CLIENT
						a410Cli("C5_CLIENT",M->C5_CLIENT,.F.)	
						
						M->C5_LOJAENT := SCJ->CJ_LOJAENT
						a410Loja("C5_LOJAENT",M->C5_LOJAENT,.F.)
						M->C5_TIPOCLI := Iif(SCJ->(ColumnPos("CJ_TIPOCLI")) > 0,SCJ->CJ_TIPOCLI,SA1->A1_TIPO)
						RestArea(aAreaSE4)
						M->C5_CONDPAG := SCJ->CJ_CONDPAG
	
						M->C5_TABELA  := If( Empty(SCJ->CJ_TABELA), Space( Len( SC5->C5_TABELA ) ), SCJ->CJ_TABELA )
	
						M->C5_DESC1   := SCJ->CJ_DESC1
						M->C5_DESC2   := SCJ->CJ_DESC2
						M->C5_DESC3   := SCJ->CJ_DESC3
						M->C5_DESC4   := SCJ->CJ_DESC4
						M->C5_FRETE   := SCJ->CJ_FRETE
						M->C5_SEGURO  := SCJ->CJ_SEGURO
						M->C5_DESPESA := SCJ->CJ_DESPESA
						M->C5_FRETAUT := SCJ->CJ_FRETAUT
						M->C5_ACRSFIN := SE4->E4_ACRSFIN
						M->C5_MOEDA   := SCJ->CJ_MOEDA
						M->C5_TXMOEDA := SCJ->CJ_TXMOEDA 
						M->C5_TIPLIB  := SCJ->CJ_TIPLIB
						M->C5_TPCARGA := SCJ->CJ_TPCARGA
						M->C5_DESCONT := SCJ->CJ_DESCONT
						M->C5_PDESCAB := SCJ->CJ_PDESCAB
						M->C5_PAISENT := SA1->A1_PAIS

						If SCJ->(ColumnPos("CJ_TPFRETE")) > 0
							M->C5_TPFRETE := SCJ->CJ_TPFRETE
						EndIf
						If lCampBol
							loadCamBol()
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Transfere condicao de pagamento tipo 9                                  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						For nCntFor :=  1 To nParcTp9
							cCampo := SubStr( cParcela, nCntFor, 1 ) 
							cCampo := "CJ_PARC"+cCampo
							nPos1 := SCJ->(FieldPos(cCampo))
							cCampo := "C5"+SubStr(cCampo,3)
							M->&(cCampo) := SCJ->(FieldGet(nPos1))
							cCampo := SubStr( cParcela, nCntFor, 1 ) 
							cCampo := "CJ_DATA"+cCampo
							nPos1 := SCJ->(FieldPos(cCampo))
							cCampo := "C5"+SubStr(cCampo,3)	
							M->&(cCampo) := SCJ->(FieldGet(nPos1))
						Next nCntFor
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Transfere vendedores                                                    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						For nCntFor := 1 To nMaxVend
							cCampo := "CJ_VEND"+cVend
							If SCJ->(FieldPos(cCampo)) > 0
								nPos1 := SCJ->(FieldPos(cCampo))
								cCampo := "C5"+SubStr(cCampo,3)	
								M->&(cCampo) := SCJ->(FieldGet(nPos1))
							EndIf
							cCampo := "CJ_COMIS"+cVend
							If SCJ->(FieldPos(cCampo)) > 0
								nPos1 := SCJ->(FieldPos(cCampo))
								cCampo := "C5"+SubStr(cCampo,3)	
								M->&(cCampo) := SCJ->(FieldGet(nPos1))
							EndIf
							cVend := Soma1(cVend,1)
						Next nCntFor

						If lNT2006I .AND. dMVNT2006I <= dDataBase //Valida a vigência da NT2020-006
							M->C5_CODA1U	:= SCJ->CJ_CODA1U
							M->C5_INDPRES	:= SCJ->CJ_INDPRES
						EndIf

					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Preenche o Acols do Pedido de Venda                                     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nUsado := Len(aHeadC6)
					aadd(aColsC6,Array(nUsado+1))
					nAcols := Len(aColsC6)
					aColsC6[nAcols,nUsado+1] := .F.
					For nCntFor := 1 To nUsado
						Do Case
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_ITEM" )
								cItSC6 := Soma1(cItSC6)
								aColsC6[nAcols,nCntFor] := cItSC6
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_PRODUTO" )
								aColsC6[nAcols,nCntFor] := SCK->CK_PRODUTO
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_TPPROD" )
								aColsC6[nAcols,nCntFor] := SCK->CK_TPPROD
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_UM" )
								aColsC6[nAcols,nCntFor] := SB1->B1_UM
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_SEGUM" )
								aColsC6[nAcols,nCntFor] := SB1->B1_SEGUM
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_UNSVEN" ) .AND. !Empty(SB1->B1_SEGUM) .AND. !Empty(SB1->B1_CONV)
								IF SB1->B1_TIPCONV == "M"
									aColsC6[nAcols,nCntFor] := (SCK->CK_QTDVEN * SB1->B1_CONV)
								else
									aColsC6[nAcols,nCntFor] := (SCK->CK_QTDVEN / SB1->B1_CONV)
								EndIf
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_OPER" )
								aColsC6[nAcols,nCntFor] := IIf(lCK_OPER,SCK->CK_OPER,Space(aHeadC6[nCntFor,4]))
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_COMIS1" )
								aColsC6[nAcols,nCntFor] := SCK->CK_COMIS1
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_QTDVEN" )
								aColsC6[nAcols,nCntFor] := SCK->CK_QTDVEN
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_PRCVEN" )
								aColsC6[nAcols,nCntFor] := SCK->CK_PRCVEN
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_VALOR" )
								aColsC6[nAcols,nCntFor] := SCK->CK_VALOR
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_TES" )
								aColsC6[nAcols,nCntFor] := SCK->CK_TES
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_CF" )

								aDadosCfo := {}

								Aadd(aDadosCfo,{"OPERNF"  ,"S"}) 
								Aadd(aDadosCfo,{"TPCLIFOR",M->C5_TIPOCLI})
								Aadd(aDadosCfo,{"UFDEST"  ,SA1->A1_EST})
								Aadd(aDadosCfo,{"INSCR"   ,SA1->A1_INSCR})
								Aadd(aDadosCfo,{"CONTR"   ,SA1->A1_CONTRIB})

								aColsC6[nAcols,nCntFor] := MaFisCfo(,SF4->F4_CF,aDadosCfo)

							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_SEGUM" )
								aColsC6[nAcols,nCntFor] := SB1->B1_SEGUM
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_CODISS" )
								aColsC6[nAcols,nCntFor] := SB1->B1_CODISS
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_LOCAL" )
								aColsC6[nAcols,nCntFor] := SCK->CK_LOCAL
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_VALDESC" )
								aColsC6[nAcols,nCntFor] := SCK->CK_VALDESC
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_DESCONT" )
								aColsC6[nAcols,nCntFor] := SCK->CK_DESCONT
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_ENTREG" )
								aColsC6[nAcols,nCntFor] := SCK->CK_ENTREG
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_PEDCLI" )
								aColsC6[nAcols,nCntFor] := SCK->CK_PEDCLI
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_DESCRI" )
								aColsC6[nAcols,nCntFor] := SCK->CK_DESCRI
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_PRUNIT" )
								aColsC6[nAcols,nCntFor] := SCK->CK_PRUNIT
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_NUMORC" )
								aColsC6[nAcols,nCntFor] := SCK->CK_NUM+SCK->CK_ITEM
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_OPC" )
								aColsC6[nAcols,nCntFor] := SCK->CK_OPC
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_MOPC" )
								aColsC6[nAcols,nCntFor] := If(!lMopc, SCK->CK_OPC, SCK->CK_MOPC)
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_OBS" )
								aColsC6[nAcols,nCntFor] := SCK->CK_OBS
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_CLASFIS" )
								aColsC6[nAcols,nCntFor] := SCK->CK_CLASFIS
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_PROJPMS" )
								aColsC6[nAcols,nCntFor] := SCK->CK_PROJPMS
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_TASKPMS" )
								aColsC6[nAcols,nCntFor] := SCK->CK_TASKPMS
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_EDTPMS" )
								aColsC6[nAcols,nCntFor] := SCK->CK_EDTPMS
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_QTDLIB" )
								If lLibPV
									aColsC6[nAcols,nCntFor] := SCK->CK_QTDVEN
								Else
									aColsC6[nAcols,nCntFor] := 0
								EndIf
							Case ( "C6_COMIS" $ AllTrim(aHeadC6[nCntFor,2])  )
								If	SCK->(FieldPos("CK"+SubStr(AllTrim(aHeadC6[nCntFor,2]),3)))>0
									aColsC6[nAcols,nCntFor] := SCK->(FieldGet(FieldPos("CK"+SubStr(AllTrim(aHeadC6[nCntFor,2]),3))))
								Else
									aColsC6[nAcols,nCntFor] := CriaVar(aHeadC6[nCntFor,2],.T.)
								EndIf
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_CONTRAT" )
								aColsC6[nAcols,nCntFor] := SCK->CK_CONTRAT
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_ITEMCON" )
								aColsC6[nAcols,nCntFor] := SCK->CK_ITEMCON
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_FCICOD" )
								aColsC6[nAcols,nCntFor] := SCK->CK_FCICOD	
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_VLIMPOR" )
								aColsC6[nAcols,nCntFor] := SCK->CK_VLIMPOR
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_CONTA" )
								aColsC6[nAcols,nCntFor] := SB1->B1_CONTA
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_CLVL" )
								aColsC6[nAcols,nCntFor] := SB1->B1_CLVL
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_ITEMCTA" )
								aColsC6[nAcols,nCntFor] := SB1->B1_ITEMCC
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_CC" )
								aColsC6[nAcols,nCntFor] := SB1->B1_CC
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_INFAD" )
								aColsC6[nAcols,nCntFor] := ""
							OtherWise
								aColsC6[nAcols,nCntFor] := CriaVar(aHeadC6[nCntFor,2],.T.)

								// Template GEM
								// Retorna os valores para o campos criados pelo template
								If ExistTemplate("GEMSCKField",,.T.) 
									aColsC6[nAcols,nCntFor] := ExecTemplate("GEMSCKField",.F.,.F.,{ AllTrim(aHeadC6[nCntFor,2]) ,aColsC6[nAcols,nCntFor] })
								EndIf

						EndCase
					Next nCntFor
					If l416Auto .AND. FindFunction("GetParAuto")
						aRetAuto := GetParAuto("MATA416TESTCASE")
						If !Empty(aRetAuto)
							For  nZ :=1 to Len(aColsC6)
								aColsC6[nZ,4]		:= aRetAuto[nZ,1]
								aColsC6[nZ,5]		:= aRetAuto[nZ,2]
								aColsC6[nZ,6]		:= aRetAuto[nZ,3]
								aColsC6[nZ,7]		:= aRetAuto[nZ,4]
							Next
						EndIf
					EndIF
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Execblock para alteracao do aHeader e do aCols                          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( lMta416PV )
						// Variaveis para o ExecBlock
						_aCols 	:= aColsC6
						_aHeader	:= aHeadC6
						ExecBlock("MTA416PV",.F.,.F.,Len(_aCols)) 
						aColsC6  :=  _aCols
						aHeadC6  := _aHeader						
					EndIf
				EndIf                                                                       
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verifica a necessida das Ordens de Producao                             ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( lSugestao )
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Posiciona registros                                                     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea("SB1")
					dbSetOrder(1)
					MsSeek(xFilial("SB1")+SCK->CK_PRODUTO)
	
					dbSelectArea("SF4")
					dbSetOrder(1)
					MsSeek(xFilial("SF4")+SCK->CK_TES)
	
					dbSelectArea("SB2")
					dbSetOrder(1)
					If !MsSeek(xFilial("SB2")+SCK->CK_PRODUTO+SCK->CK_LOCAL)
						CriaSB2(SCK->CK_PRODUTO,SCK->CK_LOCAL)
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Gera Ordem de Producao para o Produto Pai ( SCK )                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( SBG->BG_GERAOP $ "S" .And. Empty(SCK->CK_NUMOP) )
						Pergunte("MTA650",.F.)
						Begin Transaction
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica o saldo em estoque para identificar a necessiade da OP.        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							nSaldo := (SaldoSB2(.T.)+SB2->B2_SALPEDI-SB2->B2_QEMPN+AvalQtdPre("SB2",2)) - SCK->CK_QTDVEN
							If ( nSaldo  < 0 .And. SF4->F4_ESTOQUE=="S" )
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Grava a Ordem de Producao para o Pedido de Venda                        ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								lOpPai := .T.
								aLoteEco := CalcLote(SCK->CK_PRODUTO,Abs(nSaldo),"F")
								cNumOp   := GetNumSc2(.T.)
								cItemOp  := "01"
								cSeqC2   := "000"
								cRoteiro := SB1->B1_OPERPAD
								nMaxFor  := Len(aLoteEco)
	
								For nCntFor := 1 To 1 //nMaxFor
									cSeqC2:=Soma1(cSeqc2)
									aadd(aOpPai,{ 	cNumOp+cItemOp+cSeqC2,;
										aLoteEco[nCntFor] ,;
										Abs(nSaldo) })
	
									a650GeraC2( SCK->CK_PRODUTO,;
										aLoteEco[nCntFor],;
										dDataBase,dDataBase,dDataBase, , , , ,.T.,SCK->CK_LOCAL,;
										SCK->CK_OPC,;
										NIL,;
										NIL,;
										NIL,;
										cNumOp,;
										cItemOp,;
										cSeqC2,"","")
									RecLock("SC2")
									SC2->C2_OBS    := "ORC.N."+SCK->CK_NUM
									
									aadd(aRegSC2,SC2->(RecNo()))
	
								Next nCntFor
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Guarda o Numero da Ordem de Producao no Orcamento de Venda              ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								RecLock("SCK",.F.)
								SCK->CK_NUMOP := cNumOp+cItemop
								A650PutBatch(SC2->C2_FILIAL+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+SC2->C2_ITEMGRD,.T.,SC2->C2_DATPRI,SC2->C2_DATPRF)
							EndIf
						End Transaction
						
						If ( lMostraOp )
							For nY := 1 To Len(aRegSC2)
								cCadastro := STR0021 //"Ordem de Produ‡Æo"
								SC2->(AxVisual("SC2",aRegSC2[nY],2))
							Next nY
							aRegSC2 := {}
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Guarda o Numero da Ordem de Producao no Orcamento de Venda              ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					For nCntFor := 1 To nUsado
						Do Case
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_NUMOP" )
								aColsC6[nAcols,nCntFor] := SubStr(SCK->CK_NUMOP,1,6)
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_ITEMOP" )
								aColsC6[nAcols,nCntFor] := SubStr(SCK->CK_NUMOP,7,2)
							Case ( AllTrim(aHeadC6[nCntFor,2]) == "C6_OP" )
								If !Empty(SCK->CK_NUMOP)
									aColsC6[nAcols,nCntFor] := "01"
								EndIf
						EndCase
					Next nCntFor
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Gera as Ordens de Producao para os sub-itens do orcamento de venda      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					Begin Transaction
						dbSelectArea("SCL")	
						dbSetOrder(1)
						MsSeek(xFilial("SCL")+SCJ->CJ_NUM+SCK->CK_ITEM,.T.)
						While ( !Eof() .And. xFilial("SCL") ==  SCL->CL_FILIAL .And.;
								SCJ->CJ_NUM  == SCL->CL_NUM .And.;
								SCK->CK_ITEM == SCL->CL_ITEMORC )
							If ( SBG->BG_GERAOPI $ "S" )
								If ( Empty(SCL->CL_NUMOP) )
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Posiciona Registros                                  ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									dbSelectArea("SB1")
									dbSetOrder(1)
									MsSeek(xFilial("SB1")+SCL->CL_PRODUTO)
	
									dbSelectArea("SB2")
									dbSetOrder(1)
									If !MsSeek(xFilial("SB2")+SCL->CL_PRODUTO+SCK->CK_LOCAL,.F.)
										CriaSB2(SCL->CL_PRODUTO,SCK->CK_LOCAL)
									EndIf
	
									dbSelectArea("SG1")
									dbSetOrder(1)
									If MsSeek(xFilial("SG1")+SCL->CL_PRODUTO,.F.)
										lEstrutura := .T.
									Else
										lEstrutura := .F.
									EndIf
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³Verifica o saldo em estoque para identificar a necessiade da OP.        ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									nSaldo := (SaldoSB2(.T.)+SB2->B2_SALPEDI-SB2->B2_QEMPN+AvalQtdPre("SB2",2))
									nSaldo -= ( SCK->CK_QTDVEN * SCL->CL_QUANT )							
									If ( nSaldo < 0 .And. Empty(SCL->CL_NUMOP) .And. SF4->F4_ESTOQUE == "S")
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³Grava a Ordem de Producao para os Itens do Orcamento de Venda           ³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										If ( Empty(cNumOp) )
											cNumOp   := GetNumSc2(.T.)
											cItemOp  := "01"
											cSeqC2   := "001"
										EndIf
										aLoteEco := CalcLote(SCL->CL_PRODUTO,Abs(nSaldo),If(lEstrutura,"F","C"))
										cRoteiro := SB1->B1_OPERPAD
										nMaxFor := Len(aLoteEco)
										For nCntFor := 1 To nMaxFor
											If lEstrutura .Or. lOPComp
												cItemOp := Soma1(cItemOp,2)
												cSeqC2  := "001"
												a650GeraC2(SCL->CL_PRODUTO,;
												           Abs(aLoteEco[nCntFor]),;
												           dDataBase,dDataBase,dDataBase, , , , , ,SCK->CK_LOCAL,;
												           SCK->CK_OPC,;
												           NIL,;
												           NIL,;
												           NIL,;
												           cNumOp,;
												           cItemOp,;
												           cSeqC2,"","")
	
												RecLock("SC2")
												SC2->C2_OBS   := "ORC.N."+SCK->CK_NUM
												SC2->C2_BATCH :=""
												aadd(aRegSC2,SC2->(RecNo()))
	
												RecLock("SCL",.F.)
												SCL->CL_NUMOP := cNumOp
	
												A650PutBatch(SC2->C2_FILIAL+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+SC2->C2_ITEMGRD,.T.,SC2->C2_DATPRI,SC2->C2_DATPRF)
											Else
												a650GeraC1(SCL->CL_PRODUTO,;
												           Abs(aLoteEco[nCntFor]),;
												           cNumOp,dDataBase,,,0,SCK->CK_LOCAL)
												RecLock("SCL",.F.)
												SCL->CL_NUMOP := "SC GERADA"
											EndIf
										Next nCntfor
									EndIf
								EndIf
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica se o empenho deve ser feito para as Ordens de Producao         ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ( SBG->BG_GERAEMP $ "S" .And. lOpPai )
								nMaxFor := Len(aOpPai)
								For nCntFor := 1 To nMaxFor
									nSaldo := ( aOpPai[nCntFor,2] )*SCL->CL_QUANT
									dbSelectArea("SD4")
									RecLock("SD4",.T.)
									SD4->D4_FILIAL  := xFilial("SD4")
									SD4->D4_COD     := SCL->CL_PRODUTO
									SD4->D4_LOCAL   := SCK->CK_LOCAL
									SD4->D4_OP      := aOpPai[nCntFor,1]
									SD4->D4_DATA    := dDataBase
									SD4->D4_QSUSP   := 0.00
									SD4->D4_QTDEORI := nSaldo
									SD4->D4_QUANT   := nSaldo
									SD4->D4_QTSEGUM := ConvUM(SD4->D4_COD, nSaldo, 0, 2)
									SD4->D4_TRT     := SCL->CL_ITEM
									SD4->D4_NUMLOTE := ""
									SD4->D4_LOTECTL := ""
									SD4->D4_DTVALID := Ctod("")
									SD4->D4_OPORIG  := ""
	
									aadd(aRegSD4,SD4->(RecNo()))
	
									RecLock("SB2",.F.)
									SB2->B2_QEMP  := SB2->B2_QEMP + SD4->D4_QUANT
									SB2->B2_QEMP2 := SB2->B2_QEMP2 + SD4->D4_QTSEGUM
								Next nCntFor
							EndIf	
							dbSelectArea("SCL")
							dbSkip()
						EndDo				
					End Transaction
					If ( lMostraOp )
						For nY := 1 To Len(aRegSC2)
							cCadastro := STR0021 //"Ordem de Produ‡Æo"
							SC2->(DbGoto(aRegSC2[nY]))
							SC2->(AxVisual("SC2",aRegSC2[nY],2))
						Next nY
						aRegSC2 := {}
					EndIf
					If ( lMostraEmp )
						aColsD4 := {}
						For nY := 1 To Len(aRegSD4)
							dbSelectArea("SD4")
							MsGoto(aRegSD4[nY])
	
							nUsado := Len(aHeadD4)						
							aadd(aColsD4,Array(nUsado+3))	// Colunas do Alias e Recno do Walk-Thru e flag de delecao
							nPos1 := Len(aColsD4)
							For nAcols := 1 To nUsado
								aColsD4[nPos1,nAcols]:= FieldGet(FieldPos(aHeadD4[nACols,2]))
							Next nACols
							aColsD4[nPos1,nUsado+1] := "SD4"			// Utilizado no Walk-Thru
							aColsD4[nPos1,nUsado+2] := aRegSD4[nY]		// Utilizado no Walk-Thru
							aColsD4[nPos1,nUsado+3] := .F.
						Next nY
						aCols   := aColsD4
						aHeader := aHeadD4
						
						// Cria campos para Walk-Thru
						ADHeadRec("SD4")

						If Len(aCols)>0
							aSize := MsAdvSize()
							aObjects := {}
							AAdd( aObjects, { 100, 100, .t., .t. } )
							
							aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
							aPosObj := MsObjSize( aInfo, aObjects )
							
							DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0023) From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL
							MsGetDados():New(aPosObj[1,1], aPosObj[1,2] ,aPosObj[1,3],  aPosObj[1,4],1,"AllwaysTrue","AllwaysTrue","",.T.)	
							ACTIVATE MSDIALOG oDlg On INIT EnchoiceBar(oDlg,{||oDlg:End()},{||oDlg:End()})
						EndIf
						aRegSD4 := {}
					EndIf
				EndIf
			EndIf
	
			SCK->(MsGoto(aRegSCK[Min(nX+1,Len(aRegSCK)),1]))
			If ( lPedido .And. ( SCK->CK_FILENT <> cFilAnt .Or. nX == Len(aRegSCK)) )
				If !Empty(aColsC6)
	
					SCK->(MsGoto(aRegSCK[nX,1]))
					aCols   := aColsC6
					aHeader := aHeadC6
					For nCntFor := 1 To Len(aCols)
						MatGrdMont(nCntFor)
					Next nCntFor
					
					//
					// Template GEM - Gestao de Empreendimentos Imobiliarios 
					// Carrega a condicao de venda customizado do orcamento para o pedido de venda
					//
					If lGEMORCxPV .And. HasTemplate("LOT")
						// Copia a condicao de venda do orcamento para o pedido de venda
						// Alias LJT para LJN
						aGEMCVnd := ExecTemplate("GEMORCxPV",.F.,.F.,{ SCJ->CJ_NUM ,SCJ->CJ_CONDPAG })
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Variaveis Utilizadas pela Funcao a410Inclui          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					PRIVATE ALTERA := .F.
					PRIVATE INCLUI := .T.
					PRIVATE lShowOpc := .T.// considerar opcionais se houver alteração na efetivacao do Orcamento.
								
					If lMostraPV
						cCadastro := STR0022 //"Pedido de Venda"
						Pergunte("MTA410",.F.)
						lPedGrv := SC5->(a410Inclui(Alias(),Recno(),4,.T.,nStack,aRegPed)) == 1
					Else
						IF lLibPV //Para liberação do Pedido de Venda carrega os perguntes da rotina de liberação
							Pergunte("MTA440",.F.)
							lLiber := MV_PAR02 == 1
							lTransf:= MV_PAR01 == 1
							Pergunte("MTA416",.F.)
						ENDIF	
						lPedGrv := SC5->(A410Grava(lLiber,lTransf,1,NIL,NIL,NIL,NIL,nStack))
						For nY := 1 To Len(aRegPed)
							SCK->(MsGoto(aRegSCK[nY][1]))
							RecLock("SCK",.F.)
							SCK->CK_NUMPV := M->C5_NUM
							MsUnLock()
						next nY
					EndIf
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Apos gerar o pedido reinicializa as variaveis de controle               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
				aRegPed := {}
				aColsC6 := {}
				lPedido := .F.
				cItSC6  := "00"
			EndIf
	
			SCK->(MsGoto(aRegSCK[Min(nX+1,Len(aRegSCK)),1]))
	
		Next nX
		If lPedGrv
			Begin Transaction
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza o status do orcamento - Baixa                                 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
				RecLock("SCJ",.F.)
				MaAvalOrc("SCJ",13)
				SCJ->CJ_STATUS := "B" //Nao retirar, pode ser que a transacao falhe.
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza o status dos orcamentos vinculados a cotacao - Cancelado      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
				For nY := 1 To Len(aRegSCJ)
	
					SCJ->(dbGoto(aRegSCJ[nY]))
					dbSelectArea("SCK")
					dbSetOrder(1)    		
					#IFDEF TOP
						lQuery := .T.
						cAliasSCK := "MABXORC"
						aStruSCK  := SCK->(dbStruct())
	
						cQuery := "SELECT * "
						cQuery += "FROM "+RetSqlName("SCK")+" "
						cQuery += "WHERE CK_FILIAL='"+xFilial("SCK")+"' AND "
						cQuery += "CK_NUM='"+SCJ->CJ_NUM+"' AND "
						cQuery += "D_E_L_E_T_=' '"
	
						cQuery := ChangeQuery(cQuery)
	
						dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSCK,.T.,.T.)
	
						For nX := 1 To Len(aStruSCK)
							If aStruSCK[nX][2] <> "C"
								TcSetField(cAliasSCK,aStruSCK[nX][1],aStruSCK[nX][2],aStruSCK[nX][3],aStruSCK[nX][4])
							EndIf
						Next nX
	
					#ELSE    		
						MsSeek(xFilial("SCK")+SCJ->CJ_NUM)
					#ENDIF
	
					While ( !Eof() .And. (cAliasSCK)->CK_FILIAL==xFilial("SCK") .And.;
							(cAliasSCK)->CK_NUM == SCJ->CJ_NUM )
						MaAvalOrc(cAliasSCK,4)
						dbSelectArea(cAliasSCK)
						dbSkip()
					EndDo
					If lQuery
						dbSelectArea(cAliasSCK)
						dbCloseArea()
						dbSelectArea("SCJ")
					EndIf
					RecLock("SCJ")
					MaAvalOrc("SCJ",14)
					MsUnlock()
				Next nY
			End Transaction
		EndIf
		If ( ExistBlock("MT416FIM") )
			RestArea(aAreaOrc)
			ExecBlock("MT416FIM",.f.,.f.)
		EndIf		
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a Integridade da rotina                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cFilAnt := cSavFil
MsUnLockAll()
RestArea(aAreaSCJ)
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³M416AtuSCK³ Autor ³ Heny Fila             ³ Rev. ³10.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao dos registros do SCK                   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: Array de registros do SCK                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo baixar o orcamento de venda    ³±±
±±³          ³atualizandoOrdem de Producao, empenhos e Pedido de venda     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M416AtuSCK(aRegSCK)              

Local nY := 0 

Default aRegSCK := {}

For nY := 1 To Len(aRegSCK)
	SCK->(MsGoto(aRegSCK[nY]))
	RecLock("SCK",.F.)
	SCK->CK_NUMPV := M->C5_NUM
	MaAvalOrc("SCJ",3)
	MsUnLock()
	
	dbSelectArea("SBG")
	dbSetOrder(1)
	If MsSeek(xFilial("SBG")+SCK->CK_PRODUTO,.F.)
		If SBG->BG_GERAOP == "S"
			dbSelectArea("SC6")
			dbSetOrder(1)
			MsSeek(xFilial("SC6")+M->C5_NUM,.T.)
			While ( !Eof() .And. xFilial("SC6")==SC6->C6_FILIAL .And.;
						SC6->C6_NUM == M->C5_NUM )
				If ( !Empty(SC6->C6_NUMOP) )
					lOpPV := .F.
					dbSelectArea("SC2")
					dbSetOrder(1)
					MsSeek(xFilial()+SC6->C6_NUMOP+SC6->C6_ITEMOP)
					While ( !Eof() .And. xFilial("SC2")==SC2->C2_FILIAL .And.;
							SC6->C6_NUMOP  == SC2->C2_NUM .And.;
							SC6->C6_ITEMOP == SC2->C2_ITEM )
						lOpPv := .T.
						Reclock("SC2")
						SC2->C2_PEDIDO := SC6->C6_NUM
						SC2->C2_ITEMPV := SC6->C6_ITEM
						dbSelectArea("SC2")
						dbSkip()
					EndDo
					If ( !lOpPv )
						RecLock("SC6")
						SC6->C6_NUMOP  := ""
						SC6->C6_ITEMOP := ""
						SC6->C6_OP		:= ""
					EndIf
				EndIf
				dbSelectArea("SC6")
				dbSkip()
			EndDo
		Endif							
	Endif
Next nY

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Marco Bianchi         ³ Data ³01/09/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
               
Private aRotina := {	{ STR0002,"AxPesqui"	, 0 , 1 , 0 , .F.},;	//"Pesquisar"
						{ STR0003,"A415Visual"	, 0 , 2 , 0 , NIL},;	//"Visualizar"
						{ STR0004,"A415Exclui"	, 0 , 2 , 0 , NIL},;	//"Excluir"
						{ STR0005,"A415Baixa"	, 0 , 4 , 0 , NIL},;	//"eFetivar"
						{ STR0038,"A416Desbl"	, 0 , 2 , 0 , NIL},;	//"Desbloquear" 
						{ STR0006,"A415Cancel"	, 0 , 2 , 0 , NIL},;	//"Cancelar"
						{ STR0027,"Ma416Auto"	, 0 , 4 , 0 , NIL},;
						{ STR0028,"A416Legend"	, 0 , 2 }}   			//"Legenda"
						
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica motivo de bloqueio por regra/verba                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If	SuperGetMv("MV_VEBLQRG", .F., .F.)	
	Aadd(aRotina,{STR0039,"OrcBlqRegB", 0 , 0 , 0 , .F.})		// "Blq. Regra"
EndIf

If ExistBlock("MA416MNU")
	ExecBlock("MA416MNU",.F.,.F.)
EndIf
Return(aRotina)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A416Legend³Autor  ³ Kleber Dias Gomes     ³ Data ³08/09/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Demonstra a legenda das cores da mbrowse                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina monta uma dialog com a descricao das cores da    ³±±
±±³          ³Mbrowse.                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A416Legend()

Local aCores := {	{ 'ENABLE'    , STR0029 },; //'Orcamento em Aberto'
					{ 'DISABLE'   , STR0030 },; //'Orcamento Baixado'
					{ 'BR_PRETO'  , STR0031 },; //'Orcamento Cancelado' 	
					{ 'BR_AMARELO', STR0032 },; //'Orcamento nao Orcado'
					{ 'BR_MARROM' , STR0037}}	//'Orcamento bloqueado'

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para alterar cores da legenda    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ           	
If ExistBlock("MA415LEG")
	aCores := ExecBlock("MA415LEG",.F.,.F.,aCores)
Endif

BrwLegenda(cCadastro,STR0028,aCores )   //Pedido Liberado
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A416Desbl ºAutor  ³Vendas Clientes     º Data ³  04/04/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Aciona a tela para visualizacao do Orcamento/Proposta a ser º±±
±±º          ³aprovado ou reprovado                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³MATA416/MATA415                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A416Desbl(cAlias,nReg,nOpcx)
Local aArea := GetArea() 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Chama a funcao p/ visualizacao da Proposta ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("ADY")
DbSetOrder(1)
If DbSeek(xFilial("ADY")+SCJ->CJ_PROPOST)
	FWExecView(Upper(STR0003),"VIEWDEF.FATA600",MODEL_OPERATION_VIEW,/*oDlg*/,/*bCloseOnOk*/,/*bOk*/,/*nPercReducao*/)
Else
	HELP(" ",1,"A416DESBL")	
EndIf	

RestArea(aArea)
Return Nil
