#INCLUDE "PROTHEUS.CH"
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MATXPLN   ³ Autor ³ Eduardo Riera         ³ Data ³ 12.12.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Biblioteca de funcoes das rotinas de planilha dos modulos de ³±±
±±³          ³materiais                                                    ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Materiais                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FtPipeLine³ Autor ³Eduardo Riera          ³ Data ³07.02.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de calculo do valor do PipeLine.                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: cCodigo                                               ³±±
±±³          ³ExpN2: Tipo de Data (1-Data Inicio/2-Prev.de Encerramento)   ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de Termino                                       ³±±
±±³          ³ExpC5: Processo de Venda                                     ³±±
±±³          ³ExpC6: Estagio de Venda                                      ³±±
±±³          ³ExpN7: Status da Oportunidade                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: Valor do PipeLine.                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar o calculo do montante  ³±±
±±³          ³em valor contido nas oportunidades de venda.                 ³±±
±±³          ³                                                             ³±±
±±³          ³Quando um dos parametros desta funcao nao for informado sera ³±±
±±³          ³assumido todos os registros corresponte ao parametro omitido ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Materiais                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FtPipeLine(cCodigo,nTpData,dDataIni,dDataFim,cProcesso,cEstagio,nStatus)

Local aArea      := GetArea()
Local aAreaSA3   := SA3->(GetArea())
Local aAreaAD1   := AD1->(GetArea())
Local aGrupos    := {}

Local bFilGrupos := { || .T. } 

Local cSeek      := ""
Local cComp      := ""
Local cSeekSA3   := ""
Local cQuery     := ""
Local cArqQry    := ""
Local cIn        := ""
Local nLoop
Local nValor     := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa as variaveis defaults                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

DEFAULT cCodigo   := cCodigo
DEFAULT nTpData   := 1
DEFAULT cProcesso := ""
DEFAULT cEstagio  := ""

DEFAULT nStatus   := 0

If Empty( nStatus )
	cStatus := ""
Else
	cStatus := Str( nStatus, 1 )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Acerta o Tamanho da Variaveis                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodigo   := PadR(cCodigo  ,Len(SA3->A3_COD))
cProcesso := PadR(cProcesso,Len(AD1->AD1_PROVEN))
cEstagio  := PadR(cEstagio ,Len(AD1->AD1_STAGE))


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona os grupos que estao abaixo deste representante                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( aGrupos := FtReprEst( cCodigo ) )
	
	cIn := "( "
	
	For nLoop := 1 to Len( aGrupos )
		cIn       += "'" + aGrupos[ nLoop, 1 ] + "',"
	Next nLoop
	
	cIn := Left( cIn, Len( cIn ) - 1 ) + ") "
	
EndIf


cArqQry := GetNextAlias()

cQuery  := "SELECT AD1.AD1_MOEDA,AD1.AD1_DTFIM,SUM(AD1.AD1_VERBA) AD1_VERBA "
cQuery  += "FROM "+RetSqlName("SA3")+" SA3,"+RetSqlName("AD1")+" AD1 "
cQuery  += "WHERE SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "

If Empty( cIn )
	cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
Else
	cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
EndIf

cQuery  += "SA3.D_E_L_E_T_=' ' AND "
cQuery  += "AD1.AD1_FILIAL='"+xFilial("AD1")+"' AND "
cQuery  += "AD1.AD1_VEND=SA3.A3_COD AND "

If ( nTpData == 1 )
	If ( !Empty(dDataIni) )
		cQuery += "AD1.AD1_DTINI>='"+Dtos(dDataIni)+"' AND "
	EndIf
	If ( !Empty(dDataFim) )
		cQuery += "AD1.AD1_DTINI<='"+Dtos(dDataFim)+"' AND "
	EndIf
Else
	If ( !Empty(dDataIni) )
		cQuery += "AD1.AD1_DTFIM>='"+Dtos(dDataIni)+"' AND "
	EndIf
	If ( !Empty(dDataFim) )
		cQuery += "AD1.AD1_DTFIM<='"+Dtos(dDataFim)+"' AND "
	EndIf
EndIf
If ( !Empty(cProcesso) )
	cQuery += "AD1.AD1_PROVEN='"+cProcesso+"' AND "
EndIf
If ( !Empty(cEstagio) )
	cQuery += "AD1.AD1_STAGE='"+cEstagio+"' AND "
EndIf
If ( !Empty(cStatus) )
	cQuery += "AD1.AD1_STATUS='"+cStatus+"' AND "
EndIf

cQuery += "AD1.D_E_L_E_T_=' ' "
cQuery += "GROUP BY AD1.AD1_MOEDA,AD1.AD1_DTFIM "
cQuery += "ORDER BY AD1.AD1_MOEDA,AD1.AD1_DTFIM "

cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)

TcSetField(cArqQry,"AD1_VERBA","N",18,2)
TcSetField(cArqQry,"AD1_MOEDA","N",2,0)
TcSetField(cArqQry,"AD1_DTFIM","D",8,0)

While ( !Eof() )
	nValor += xMoeda(AD1_VERBA,AD1_MOEDA,1,AD1_DTFIM)
	dbSelectArea(cArqQry)
	dbSkip()
EndDo
dbSelectArea(cArqQry)
dbCloseArea()
dbSelectArea("AD1")

RestArea(aAreaAD1)
RestArea(aAreaSA3)
RestArea(aArea)
Return(nValor)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FtMetaVend³ Autor ³Eduardo Riera          ³ Data ³12.12.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de calculo das metas de venda.                        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Tipo de Meta  :( 1-Valor    )                         ³±±
±±³          ³                      ( 2-Quantidade )                       ³±±
±±³          ³ExpC2: cCodigo do Vendedor/Supervisor/Gerente                ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de Termino                                       ³±±
±±³          ³ExpC5: Regiao de Vendas                                      ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: Valor da Meta de Venda                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar o calculo do montante  ³±±
±±³          ³das metas de venda.                                          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Materiais                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FtMetaVenda(nTpMeta,cCodigo,dDataIni,dDataFim,cRegiao,cTipo,cGrupo,cProduto)

Local aArea   := GetArea()
Local aAreaSA3:= SA3->(GetArea())
Local aAreaSCT:= SCT->(GetArea())

Local cQuery  := ""
Local cArqQry := "FTMETA"
Local cSeek   := ""
Local cComp   := ""
Local cIn     := ""
Local nLoop	  := 0
Local nValor  := 0
Local lSoma   := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa as variaveis defaults                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFAULT nTpMeta := 1
DEFAULT cCodigo := ""
DEFAULT cRegiao := ""
DEFAULT cTipo   := ""
DEFAULT cGrupo  := ""
DEFAULT cProduto:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Acerta o Tamanho da Variaveis                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodigo := PadR(cCodigo,Len(SA3->A3_COD))
cRegiao := PadR(cRegiao,Len(SCT->CT_REGIAO))
cTipo   := PadR(cTipo,Len(SCT->CT_TIPO))
cGrupo  := PadR(cGrupo,Len(SCT->CT_GRUPO))
cProduto:= PadR(cProduto,Len(SCT->CT_PRODUTO))

If !Empty( cCodigo )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os grupos que estao abaixo deste representante                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( aGrupos := FtReprEst( cCodigo ) )
		
		cIn := "( "
		
		For nLoop := 1 to Len( aGrupos )
			
			cIn += "'" + aGrupos[ nLoop, 1 ] + "',"
			
		Next nLoop
		
		cIn := Left( cIn, Len( cIn ) - 1 ) + ") "
		
	EndIf
	
EndIf


If ( nTpMeta == 1 )
	cQuery := "SELECT SCT.CT_DATA,SCT.CT_MOEDA,SUM(SCT.CT_VALOR) CT_VALOR "
Else
	cQuery := "SELECT SUM(SCT.CT_QUANT) CT_QUANT "
EndIf
cQuery += "FROM "
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os Vendedores.                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !Empty(cCodigo) )
	cQuery += RetSqlName("SA3")+" SA3,"
EndIf
cQuery += RetSqlName("SCT")+" SCT "
cQuery += "WHERE "
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os Vendedores.                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !Empty(cCodigo) )
	cQuery += "SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "
	
	If Empty( cIn )
		cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
	Else
		cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
	EndIf
	
	cQuery += "SA3.D_E_L_E_T_=' ' AND "
EndIf
cQuery += "SCT.CT_FILIAL='"+xFilial("SCT")+"' AND "
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os Vendedores.                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !Empty(cCodigo) )
	cQuery += "SCT.CT_VEND=SA3.A3_COD AND "
EndIf
If ( !Empty(dDataIni) )
	cQuery += "SCT.CT_DATA>='"+Dtos(dDataIni)+"' AND "
EndIf
If ( !Empty(dDataFim) )
	cQuery += "SCT.CT_DATA<='"+Dtos(dDataFim)+"' AND "
EndIf
If ( !Empty(cRegiao) )
	cQuery += "SCT.CT_REGIAO='"+cRegiao+"' AND "
EndIf
If ( !Empty(cTipo) )
	cQuery += "SCT.CT_TIPO='"+cTipo+"' AND "
EndIf
If ( !Empty(cGrupo) )
	cQuery += "SCT.CT_GRUPO='"+cGrupo+"' AND "
EndIf
If ( !Empty(cProduto) )
	cQuery += "SCT.CT_PRODUTO='"+cProduto+"' AND "
EndIf
cQuery += "SCT.D_E_L_E_T_=' ' "
If ( nTpMeta == 1 )
	cQuery += "GROUP BY SCT.CT_DATA,SCT.CT_MOEDA "
	cQuery += "ORDER BY SCT.CT_DATA,SCT.CT_MOEDA "
EndIf

cQuery := ChangeQuery(cQuery)
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
If ( nTpMeta == 1 )
	TcSetField(cArqQry,"CT_MOEDA","N",2,0)
	TcSetField(cArqQry,"CT_VALOR","N",18,2)
	TcSetField(cArqQry,"CT_DATA","D",8,0)
Else
	TcSetField(cArqQry,"CT_QUANT","N",18,2)
EndIf
While ( !Eof() )
	If ( nTpMeta == 1 )
		nValor += xMoeda(CT_VALOR,CT_MOEDA,1,CT_DATA)
	Else
		nValor += CT_QUANT
	EndIf
	dbSelectArea(cArqQry)
	dbSkip()
EndDo
dbSelectArea(cArqQry)
dbCloseArea()
dbSelectArea("SCT")

RestArea(aAreaSCT)
RestArea(aAreaSA3)
RestArea(aArea)
Return(nValor)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FtNfVendas³ Autor ³Eduardo Riera          ³ Data ³12.12.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Calcula o Valor das Vendas com base nas notas fiscais de     ³±±
±±³          ³saida para intergracao com MsOffice.                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Tipo de Meta :(1-Numerico-Valor liquido - desconto )  ³±±
±±³          ³                     (2-Numerico-Quantidade )                ³±±
±±³          ³                     (3-Numerico-Valor bruto + desconto )    ³±±
±±³          ³                     (4-Array-contendo todos os valores acima³±±
±±³          ³                     (5-Array-contendo todos os valores acima³±±
±±³          ³                      por produto                            ³±±
±±³          ³ExpC2: cCodigo                                               ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de Termino                                       ³±±
±±³          ³ExpC5: Regiao de Vendas.                                     ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda para conversao                                  ³±±
±±³          ³ExpCA: Cliente                                               ³±±
±±³          ³ExpCB: Loja                                                  ³±±
±±³          ³ExpCC: Expressao a ser adicionada na Query ou Filtro para    ³±±
±±³          ³       SGBD ISAM                                             ³±±
±±³          ³ExpCD: Determina se devem ser consideradas Notas fiscais (1) ³±±
±±³          ³       REMITOS (2) ou ambos tipos de documento (3)           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpX1: Valor / Array conforme tipo da Meta                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula o Valor das Vendas com base nas notas fiscais de     ³±±
±±³          ³saida                                                        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Materiais                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FtNfVendas(nTpMeta,cCodigo,dDataIni,dDataFim,cRegiao,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,cQueryAdd,cTipoDoc,cDupli,cEstoq, cCateg)

Local aArea   := GetArea()
Local aAreaSA3:= SA3->(GetArea())
Local aAreaSF4:= SF4->(GetArea())
Local aAreaSD2:= SD2->(GetArea())
Local aAreaSF2:= SF2->(GetArea())
Local aGrupos := {}
Local cQuery  := ""
Local cArqQry := "FtNfVendas"
Local cSeek   := ""
Local cComp   := ""
Local cVend   := ""
Local cIn     := ""
Local xRetorno := 0
Local nCntVend:= Fa440CntVen()
Local nCntFor := 0
Local nX      := 0
Local lVend   := .F.
Local nLoop
Local cRegiaoNF := ""
Local nVlrAux := 0

DEFAULT nTpMeta := 1
DEFAULT cCodigo := ""
DEFAULT dDataIni:= dDataBase
DEFAULT dDataFim:= dDataBase
DEFAULT cRegiao := ""
DEFAULT cTipo   := ""
DEFAULT cGrupo  := ""
DEFAULT cProduto:= ""
DEFAULT nMoeda  := 0
DEFAULT cCliente:= ""
DEFAULT cLoja   := ""
DEFAULT cTipoDoc:= '3'
DEFAULT cDupli	 := "'S'"
DEFAULT cEstoq	 := "'S'"
DEFAULT cCateg 	 := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Acerta o Tamanho da Variaveis                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodigo := PadR(cCodigo,Len(SA3->A3_COD))
cRegiao := PadR(cRegiao,Len(SF2->F2_REGIAO))
cTipo   := PadR(cTipo,Len(SD2->D2_TP))
cGrupo  := PadR(cGrupo,Len(SD2->D2_GRUPO))
cProduto:= PadR(cProduto,Len(SD2->D2_COD))

If nTpMeta == 4
	xRetorno := { 0, 0, 0 }
EndIf
If nTpMeta == 5
	xRetorno := {}
EndIf

If !Empty( cCodigo )
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os grupos que estao abaixo deste representante                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( aGrupos := FtReprEst( cCodigo ) )
		
		cIn := "( "
		
		For nLoop := 1 to Len( aGrupos )
			cIn += "'" + aGrupos[ nLoop, 1 ] + "',"
		Next nLoop
		
		cIn := Left( cIn, Len( cIn ) - 1 ) + ") "
		
	EndIf
	
EndIf



Do Case
	Case ( nTpMeta == 1 )
		cQuery := "SELECT SUM(SD2.D2_TOTAL) D2_TOTAL "
	Case ( nTpMeta == 2 )
		cQuery := "SELECT SUM(SD2.D2_QUANT) D2_QUANT "
	Case ( nTpMeta == 3 )
		cQuery := "SELECT SUM(SD2.D2_TOTAL+SD2.D2_DESCON) D2_TOTAL "
	Case ( nTpMeta == 4 )
		cQuery := "SELECT SUM(SD2.D2_TOTAL) D2_TOTAL, SUM(SD2.D2_TOTAL+SD2.D2_DESCON) D2_TOTDESC,SUM(SD2.D2_QUANT) D2_QUANT "
	OtherWise
		cQuery := "SELECT D2_COD,SUM(SD2.D2_TOTAL) D2_TOTAL, SUM(SD2.D2_TOTAL+SD2.D2_DESCON) D2_TOTDESC,SUM(SD2.D2_QUANT) D2_QUANT "
EndCase

If !Empty( nMoeda )
	cQuery += ",F2_MOEDA,D2_EMISSAO "
EndIf

cQuery += "FROM "

cQuery += RetSqlName("SD2")+" SD2,"
cQuery += RetSqlName("SF4")+" SF4,"
cQuery += RetSqlName("SF2")+" SF2 "

If !Empty(AllTrim(cCateg))
	cQuery += "," + RetSqlName("ACV")+" ACV "
EndIf

cQuery += "WHERE "

cQuery += "SF2.F2_FILIAL='"+xFilial("SF2")+"' AND "
cQuery += "SF2.F2_TIPO='N' AND "

If ( !Empty(dDataIni) )
	cQuery += "SF2.F2_EMISSAO>='"+Dtos(dDataIni)+"' AND "
EndIf
If ( !Empty(dDataFim) )
	cQuery += "SF2.F2_EMISSAO<='"+Dtos(dDataFim)+"' AND "
EndIf

If ( !Empty(cRegiao) )
	If cPaisLoc == "BRA"
		cQuery += "SF2.F2_REGIAO='"+cRegiao+"' AND "
	Else
		cQuery += "EXISTS ( SELECT A1_REGIAO FROM " + RetSqlName( "SA1" ) + " SA1 WHERE "
		cQuery += "SA1.A1_COD=SD2.D2_CLIENTE AND SA1.A1_LOJA=SD2.D2_LOJA AND "
		cQuery += "SA1.A1_REGIAO='" + cRegiao + "' AND "
		cQuery += "SA1.D_E_L_E_T_=' ') AND "
	Endif
Endif

If ( !Empty(cCliente) )
	cQuery += "SF2.F2_CLIENTE='"+cCliente+"' AND "
EndIf
If ( !Empty(cLoja) )
	cQuery += "SF2.F2_LOJA='"+cLoja+"' AND "
EndIf
If cTipoDoc == '1' .Or. cTipoDoc == '3'
	cQuery += " NOT ("+IsRemito(3,'SF2.F2_TIPODOC')+") AND "
ElseIf cTipoDoc == '2'
	cQuery += IsRemito(3,'SF2.F2_TIPODOC')+" AND "
Endif
cQuery += "SF2.D_E_L_E_T_=' ' AND "
cQuery += "SD2.D2_FILIAL='"+xFilial("SD2")+"' AND "
cQuery += "SD2.D2_SERIE=SF2.F2_SERIE AND "
cQuery += "SD2.D2_DOC=SF2.F2_DOC AND "
cQuery += "SD2.D2_CLIENTE=SF2.F2_CLIENTE AND "
cQuery += "SD2.D2_LOJA=SF2.F2_LOJA AND "
If ( !Empty(cTipo) )
	cQuery += "SD2.D2_TP='"+cTipo+"' AND "
EndIf
If ( !Empty(cGrupo) )
	cQuery += "SD2.D2_GRUPO='"+cGrupo+"' AND "
EndIf
If ( !Empty(cProduto) )
	cQuery += "SD2.D2_COD='"+cProduto+"' AND "
EndIf
cQuery += "SD2.D_E_L_E_T_=' ' AND "

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os Vendedores.                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( cCodigo )
	
	cQuery += "EXISTS ( SELECT A3_FILIAL FROM " + RetSqlName( "SA3" ) + " SA3 WHERE "
	
	If ( !Empty(cCodigo) )
		cVend := "1"
		cQuery += "("
		For nCntFor := 1 To nCntVend
			cQuery += "SF2.F2_VEND"+cVend+"=SA3.A3_COD OR "
			cVend := Soma1(cVend,Len(SF2->F2_VEND1))
		Next nCntFor
		cQuery := SubStr(cQuery,1,Len(cQuery)-3)+") AND "
	EndIf
	
	cQuery += "SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "
	
	If Empty( cIn )
		cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
	Else
		cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
	EndIf
	
	cQuery += "	SA3.D_E_L_E_T_=' ' ) AND "
	
EndIf

If !Empty(AllTrim(cCateg))
	If RetTpCat(cCateg) == 1 //Por Produto
		cQuery += " SD2.D2_COD = ACV.ACV_CODPRO "
		cQuery += " AND ACV_FILIAL = '" + FWxFilial("ACV") + "' "
		cQuery += " AND ACV_CATEGO = '" + cCateg + "' AND "
	Else //Por Grupo
		cQuery += " SD2.D2_GRUPO = ACV.ACV_GRUPO "
		cQuery += " AND ACV_FILIAL = '" + FWxFilial("ACV") + "' "
		cQuery += " AND ACV_CATEGO = '" + cCateg + "' AND "		
	EndIf
EndIf

cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
cQuery += "SF4.F4_CODIGO=SD2.D2_TES AND "
cQuery += "SF4.F4_DUPLIC IN (" + cDupli + ") AND "
cQuery += "SF4.F4_ESTOQUE IN (" + cEstoq + ") AND "
cQuery += "SF4.D_E_L_E_T_=' ' "

If !Empty(cQueryAdd)
	cQuery += " AND "+cQueryAdd
EndIf
If nTpMeta <> 5
	If !Empty( nMoeda )
		cQuery += "GROUP BY F2_MOEDA,D2_EMISSAO"
	EndIf
Else
	If !Empty( nMoeda )
		cQuery += "GROUP BY F2_MOEDA,D2_EMISSAO,D2_COD"
	Else
		cQuery += "GROUP BY D2_COD "
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Seleciona as remisiones nao faturadas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc <> "BRA" .And. cTipoDoc == "3"
	cQuery += " UNION ALL "
	Do Case
		Case ( nTpMeta == 1 )
			cQuery += "SELECT SUM(SD2.D2_PRCVEN * SD2.D2_QTDAFAT) D2_TOTAL "
		Case ( nTpMeta == 2 )
			cQuery += "SELECT SUM(SD2.D2_QTDAFAT) D2_QUANT "
		Case ( nTpMeta == 3 )
			cQuery += "SELECT SUM((SD2.D2_TOTAL+SD2.D2_DESCON) * (SD2.D2_QTDAFAT / SD2.D2_QUANT)) D2_TOTAL "
		Case ( nTpMeta == 4 )
			cQuery += "SELECT SUM(SD2.D2_PRCVEN * SD2.D2_QTDAFAT) D2_TOTAL, SUM((SD2.D2_TOTAL+SD2.D2_DESCON) * (SD2.D2_QTDAFAT / SD2.D2_QUANT)) D2_TOTDESC,SUM(SD2.D2_QTDAFAT) D2_QUANT "
		OtherWise
			cQuery += "SELECT D2_COD,SUM(SD2.D2_PRCVEN * SD2.D2_QTDAFAT) D2_TOTAL, SUM((SD2.D2_TOTAL+SD2.D2_DESCON) * (SD2.D2_QTDAFAT / SD2.D2_QUANT)) D2_TOTDESC,SUM(SD2.D2_QTDAFAT) D2_QUANT "
	EndCase
	If !Empty( nMoeda )
		cQuery += ",F2_MOEDA,D2_EMISSAO "
	EndIf
	cQuery += "FROM "
	cQuery += RetSqlName("SD2")+" SD2,"
	cQuery += RetSqlName("SF4")+" SF4,"
	cQuery += RetSqlName("SF2")+" SF2 "
	cQuery += "WHERE "
	cQuery += "SF2.F2_FILIAL='"+xFilial("SF2")+"' AND "
	cQuery += "SF2.F2_TIPO='N' AND "
	If ( !Empty(dDataIni) )
		cQuery += "SF2.F2_EMISSAO>='"+Dtos(dDataIni)+"' AND "
	EndIf
	If ( !Empty(dDataFim) )
		cQuery += "SF2.F2_EMISSAO<='"+Dtos(dDataFim)+"' AND "
	EndIf
	If ( !Empty(cRegiao) )
		If cPaisLoc == "BRA"
			cQuery += "SF2.F2_REGIAO='"+cRegiao+"' AND "
		Else
			cQuery += "EXISTS ( SELECT A1_REGIAO FROM " + RetSqlName( "SA1" ) + " SA1 WHERE "
			cQuery += "SA1.A1_COD=SD2.D2_CLIENTE AND SA1.A1_LOJA=SD2.D2_LOJA AND "
			cQuery += "SA1.A1_REGIAO='" + cRegiao + "' AND "
			cQuery += "SA1.D_E_L_E_T_=' ') AND "
		Endif
	Endif
	If ( !Empty(cCliente) )
		cQuery += "SF2.F2_CLIENTE='"+cCliente+"' AND "
	EndIf
	If ( !Empty(cLoja) )
		cQuery += "SF2.F2_LOJA='"+cLoja+"' AND "
	EndIf
	cQuery += IsRemito(3,'SF2.F2_TIPODOC')+" AND "
	cQuery += "SF2.D_E_L_E_T_=' ' AND "
	cQuery += "SD2.D2_FILIAL='"+xFilial("SD2")+"' AND "
	cQuery += "SD2.D2_SERIE=SF2.F2_SERIE AND "
	cQuery += "SD2.D2_DOC=SF2.F2_DOC AND "
	cQuery += "SD2.D2_CLIENTE=SF2.F2_CLIENTE AND "
	cQuery += "SD2.D2_LOJA=SF2.F2_LOJA AND "
	If ( !Empty(cTipo) )
		cQuery += "SD2.D2_TP='"+cTipo+"' AND "
	EndIf
	If ( !Empty(cGrupo) )
		cQuery += "SD2.D2_GRUPO='"+cGrupo+"' AND "
	EndIf
	If ( !Empty(cProduto) )
		cQuery += "SD2.D2_COD='"+cProduto+"' AND "
	EndIf
	cQuery += "SD2.D2_QTDAFAT > 0 AND "
	cQuery += "SD2.D_E_L_E_T_=' ' AND "
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica os Vendedores.                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( cCodigo )
		cQuery += "EXISTS ( SELECT A3_FILIAL FROM " + RetSqlName( "SA3" ) + " SA3 WHERE "
		If ( !Empty(cCodigo) )
			cVend := "1"
			cQuery += "("
			For nCntFor := 1 To nCntVend
				cQuery += "SF2.F2_VEND"+cVend+"=SA3.A3_COD OR "
				cVend := Soma1(cVend,Len(SF2->F2_VEND1))
			Next nCntFor
			cQuery := SubStr(cQuery,1,Len(cQuery)-3)+") AND "
		EndIf
		cQuery += "SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "
		If Empty( cIn )
			cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
		Else
			cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
		EndIf
		cQuery += "	SA3.D_E_L_E_T_=' ' ) AND "
	EndIf
	cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
	cQuery += "SF4.F4_CODIGO=SD2.D2_TES AND "
	cQuery += "SF4.F4_DUPLIC IN (" + cDupli + ") AND "
	cQuery += "SF4.F4_ESTOQUE IN (" + cEstoq + ") AND "
	cQuery += "SF4.D_E_L_E_T_=' ' "
	If !Empty(cQueryAdd)
		cQuery += " AND "+cQueryAdd
	EndIf
	If nTpMeta <> 5
		If !Empty( nMoeda )
			cQuery += "GROUP BY F2_MOEDA,D2_EMISSAO"
		EndIf
	Else
		If !Empty( nMoeda )
			cQuery += "GROUP BY F2_MOEDA,D2_EMISSAO,D2_COD"
		Else
			cQuery += "GROUP BY D2_COD "
		EndIf
	EndIf
Endif

cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
If ( nTpMeta == 1 .Or. nTpMeta == 3 )
	TcSetField(cArqQry,"D2_TOTAL","N",18,2)
ElseIf nTpMeta == 2
	TcSetField(cArqQry,"D2_QUANT","N",18,2)
Else
	TcSetField(cArqQry,"D2_QUANT"  ,"N",18,2)
	TcSetField(cArqQry,"D2_TOTAL"  ,"N",18,2)
	TcSetField(cArqQry,"D2_TOTDESC","N",18,2)
EndIf

If !Empty( nMoeda )
	TcSetField(cArqQry,"F2_MOEDA"  ,"N",2,0)
	TcSetField(cArqQry,"D2_EMISSAO","D",8,0)
EndIf

While ( !Eof() )
	Do Case
		Case ( nTpMeta == 1 .Or. nTpMeta == 3 )
			xRetorno += If( Empty( nMoeda ), D2_TOTAL, xMoeda( D2_TOTAL, F2_MOEDA, nMoeda, D2_EMISSAO ) )
		Case nTpMeta == 2
			xRetorno += D2_QUANT
		Case nTpMeta == 4
			xRetorno[ 1 ] += If( Empty( nMoeda ), D2_TOTAL, xMoeda( D2_TOTAL, F2_MOEDA, nMoeda, D2_EMISSAO ) )
			xRetorno[ 2 ] += D2_QUANT
			xRetorno[ 3 ] += If( Empty( nMoeda ), D2_TOTDESC, xMoeda( D2_TOTDESC, F2_MOEDA, nMoeda, D2_EMISSAO ) )
		OtherWise
			nX := aScan(xRetorno,{|x| x[1] == D2_COD})
			If nX == 0
				aadd(xRetorno,{D2_COD,0,0,0})
				nX := Len(xRetorno)
			EndIf
			xRetorno[nX][2] += If( Empty( nMoeda ), D2_TOTAL, xMoeda( D2_TOTAL, F2_MOEDA, nMoeda, D2_EMISSAO ) )
			xRetorno[nX][3] += D2_QUANT
			xRetorno[nX][4] += If( Empty( nMoeda ), D2_TOTDESC, xMoeda( D2_TOTDESC, F2_MOEDA, nMoeda, D2_EMISSAO ) )
	EndCase
	dbSelectArea(cArqQry)
	dbSkip()
EndDo

dbSelectArea(cArqQry)
dbCloseArea()
dbSelectArea("SD2")

RestArea(aAreaSD2)
RestArea(aAreaSF2)
RestArea(aAreaSF4)
RestArea(aAreaSA3)
RestArea(aArea)
Return(xRetorno)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FtNfDevol ³ Autor ³Eduardo Riera          ³ Data ³12.12.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Calcula o Valor das Devolucoes com base nas notas fiscais de ³±±
±±³          ³entrada pra integracao com MsOffice.                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Tipo de Meta :(1-Numerico-Valor liquido - desconto )  ³±±
±±³          ³                     (2-Numerico-Quantidade )                ³±±
±±³          ³                     (3-Numerico-Valor bruto + desconto )    ³±±
±±³          ³                     (4-Array-contendo todos os valores acima³±±
±±³          ³                     (5-Array-contendo todos os valores acima³±±
±±³          ³                      por produto                            ³±±
±±³          ³ExpC2: cCodigo                                               ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de Termino                                       ³±±
±±³          ³ExpC5: Regiao de Vendas.                                     ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda para conversao                                  ³±±
±±³          ³ExpCA: Cliente                                               ³±±
±±³          ³ExpCB: Loja                                                  ³±±
±±³          ³ExpCC: Determina se devem ser consideradas Notas fiscais (1) ³±±
±±³          ³       REMITOS (2) ou ambos tipos de documento (3)           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpX1: Valor conforme tipo da Meta                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula o Valor das Devolucoes com base nas notas fiscais de ³±±
±±³          ³entrada considerando apenas as datas de entrada e nao as     ³±±
±±³          ³notas de origem                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Materiais                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FtNfDevol(nTpMeta,cCodigo,dDataIni,dDataFim,cRegiao,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,cTipoDoc,cDupli,cEstoq, cCateg)

Local aArea   := GetArea()
Local aAreaSD1:= SD1->(GetArea())
Local aAreaSD2:= SD2->(GetArea())
Local aAreaSF2:= SF2->(GetArea())
Local aAreaSF4:= SF4->(GetArea())
Local aAreaSA3:= SA3->(GetArea())
Local cQuery  := ""
Local cArqQry := "FtNfDevol"
Local cSeek   := ""
Local cComp   := ""
Local cVend   := ""
Local cIn     := ""
Local xRetorno:= 0
Local nCntVend:= Fa440CntVen()
Local nCntFor := 0
Local nX      := 0
Local lVend   := .F.
Local nLoop
Local cRegiaoNF := ""
Local nVlrAux := 0

DEFAULT nTpMeta := 1
DEFAULT cCodigo := ""
DEFAULT dDataIni:= dDataBase
DEFAULT dDataFim:= dDataBase
DEFAULT cRegiao := ""
DEFAULT cTipo   := ""
DEFAULT cGrupo  := ""
DEFAULT cProduto:= ""
DEFAULT nMoeda  := 0
DEFAULT cCliente:= ""
DEFAULT cLoja   := ""
DEFAULT cTipoDoc:= '3'

DEFAULT cDupli		:= "'S'"
DEFAULT cEstoq		:= "'S'"
DEFAULT cCateg		:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Acerta o Tamanho da Variaveis                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodigo := PadR(cCodigo,Len(SA3->A3_COD))
cRegiao := PadR(cRegiao,Len(SF2->F2_REGIAO))
cTipo   := PadR(cTipo,Len(SD2->D2_TP))
cGrupo  := PadR(cGrupo,Len(SD2->D2_GRUPO))
cProduto:= PadR(cProduto,Len(SD2->D2_COD))

If nTpMeta == 4
	xRetorno := { 0, 0, 0 }
EndIf
If nTpMeta == 5
	xRetorno := {}
EndIf

If !Empty( cCodigo )
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os grupos que estao abaixo deste representante                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( aGrupos := FtReprEst( cCodigo ) )
		
		cIn := "( "
		
		For nLoop := 1 to Len( aGrupos )
			cIn += "'" + aGrupos[ nLoop, 1 ] + "',"
		Next nLoop
		
		cIn := Left( cIn, Len( cIn ) - 1 ) + ") "
		
	EndIf
	
EndIf



Do Case
	Case ( nTpMeta == 1 )
		cQuery := "SELECT SUM(SD1.D1_TOTAL-SD1.D1_VALDESC) D1_TOTAL "
	Case ( nTpMeta == 2 )
		cQuery := "SELECT SUM(SD1.D1_QUANT) D1_QUANT "
	Case ( nTpMeta == 3 )
		cQuery := "SELECT SUM(SD1.D1_TOTAL) D1_TOTAL "
	Case ( nTpMeta == 4 )
		cQuery := "SELECT SUM(SD1.D1_TOTAL-SD1.D1_VALDESC) D1_TOTAL,SUM(SD1.D1_QUANT) D1_QUANT,SUM(SD1.D1_TOTAL) D1_TOTDESC "
	OtherWise
		cQuery := "SELECT D1_COD,SUM(SD1.D1_TOTAL-SD1.D1_VALDESC) D1_TOTAL,SUM(SD1.D1_QUANT) D1_QUANT,SUM(SD1.D1_TOTAL) D1_TOTDESC "
EndCase

If !Empty( nMoeda )
	cQuery += ",D1_DTDIGIT,F2_MOEDA "
EndIf

cQuery += "FROM "
cQuery += RetSqlName("SD2")+" SD2,"
cQuery += RetSqlName("SD1")+" SD1,"
cQuery += RetSqlName("SF4")+" SF4,"
cQuery += RetSqlName("SF2")+" SF2 "

If !Empty(AllTrim(cCateg))
	cQuery += "," + RetSqlName("ACV")+" ACV "
EndIf

cQuery += "WHERE "
cQuery += "SD1.D1_FILIAL='"+xFilial("SD1")+"' AND "
cQuery += "SD1.D1_TIPO='D' AND "
If ( !Empty(dDataIni) )
	cQuery += "SD1.D1_DTDIGIT>='"+Dtos(dDataIni)+"' AND "
EndIf
If ( !Empty(dDataFim) )
	cQuery += "SD1.D1_DTDIGIT<='"+Dtos(dDataFim)+"' AND "
EndIf
If ( !Empty(cCliente) )
	cQuery += "SD1.D1_FORNECE='"+cCliente+"' AND "
EndIf
If ( !Empty(cLoja) )
	cQuery += "SD1.D1_LOJA='"+cLoja+"' AND "
EndIf
If cTipoDoc == '1' .Or. cTipoDoc == '3'
	cQuery += " NOT ("+IsRemito(3,'SD1.D1_TIPODOC')+") AND "
ElseIf cTipoDoc == '2'
	cQuery += IsRemito(3,'SD1.D1_TIPODOC')+" AND "
Endif
cQuery += "SD1.D_E_L_E_T_=' ' AND "
cQuery += "SD2.D2_FILIAL='"+xFilial("SD2")+"' AND "
cQuery += "SD2.D2_DOC=SD1.D1_NFORI AND "
cQuery += "SD2.D2_SERIE=SD1.D1_SERIORI AND "
cQuery += "SD2.D2_ITEM=SubString(SD1.D1_ITEMORI,1,2) AND "
If ( !Empty(cTipo) )
	cQuery += "SD2.D2_TP='"+cTipo+"' AND "
EndIf
If ( !Empty(cGrupo) )
	cQuery += "SD2.D2_GRUPO='"+cGrupo+"' AND "
EndIf
If ( !Empty(cProduto) )
	cQuery += "SD2.D2_COD='"+cProduto+"' AND "
EndIf
cQuery += "SD2.D_E_L_E_T_=' ' AND "
cQuery += "SF2.F2_FILIAL='"+xFilial("SF2")+"' AND "
cQuery += "SF2.F2_SERIE=SD2.D2_SERIE AND "
cQuery += "SF2.F2_DOC=SD2.D2_DOC AND "
cQuery += "SF2.F2_CLIENTE=SD2.D2_CLIENTE AND "
cQuery += "SF2.F2_LOJA=SD2.D2_LOJA AND "

If ( !Empty(cRegiao) )
	If cPaisLoc == "BRA"
		cQuery += "SF2.F2_REGIAO='"+cRegiao+"' AND "
	Else
		cQuery += "EXISTS ( SELECT A1_REGIAO FROM " + RetSqlName( "SA1" ) + " SA1 WHERE "
		cQuery += "SA1.A1_COD=SD2.D2_CLIENTE AND SA1.A1_LOJA=SD2.D2_LOJA AND "
		cQuery += "SA1.A1_REGIAO='" + cRegiao + "' AND "
		cQuery += "SA1.D_E_L_E_T_=' ') AND "
	EndIf
Endif

cQuery += "SF2.D_E_L_E_T_=' ' AND "

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os Vendedores.                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( cCodigo )
	
	cQuery += "EXISTS ( SELECT A3_FILIAL FROM " + RetSqlName( "SA3" ) + " SA3 WHERE "
	
	If ( !Empty(cCodigo) )
		cVend := "1"
		cQuery += "("
		For nCntFor := 1 To nCntVend
			cQuery += "SF2.F2_VEND"+cVend+"=SA3.A3_COD OR "
			cVend := Soma1(cVend,Len(SF2->F2_VEND1))
		Next nCntFor
		cQuery := SubStr(cQuery,1,Len(cQuery)-3)+") AND "
	EndIf
	
	cQuery += "SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "
	
	If Empty( cIn )
		cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
	Else
		cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
	EndIf
	
	cQuery += "	SA3.D_E_L_E_T_=' ' ) AND "
	
EndIf

If !Empty(AllTrim(cCateg))
	If RetTpCat(cCateg) == 1 //Por Produto
		cQuery += " SD1.D1_COD = ACV.ACV_CODPRO "
		cQuery += " AND ACV_FILIAL = '" + FWxFilial("ACV") + "' "
		cQuery += " AND ACV_CATEGO = '" + cCateg + "' AND "
	Else //Por Grupo
		cQuery += " SD1.D1_GRUPO = ACV.ACV_GRUPO "
		cQuery += " AND ACV_FILIAL = '" + FWxFilial("ACV") + "' "
		cQuery += " AND ACV_CATEGO = '" + cCateg + "' AND "		
	EndIf
EndIf

cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
cQuery += "SF4.F4_CODIGO=SD2.D2_TES AND "
cQuery += "SF4.F4_DUPLIC IN (" + cDupli + ") AND "
cQuery += "SF4.F4_ESTOQUE IN (" + cEstoq + ") AND "
cQuery += "SF4.D_E_L_E_T_=' ' "

If nTpMeta <> 5
	If !Empty( nMoeda )
		cQuery += "GROUP BY F2_MOEDA,D1_DTDIGIT "
	EndIf
Else
	If !Empty( nMoeda )
		cQuery += "GROUP BY F2_MOEDA,D1_DTDIGIT,D1_COD "
	Else
		cQuery += "GROUP BY D1_COD "
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Seleciona as remisiones nao faturadas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc <> "BRA" .And. cTipoDoc == '3'
	cQuery += " UNION ALL "
	Do Case
		Case ( nTpMeta == 1 )
			cQuery += "SELECT SUM((SD1.D1_TOTAL-SD1.D1_VALDESC) * (SD1.D1_QTDACLA / SD1.D1_QUANT)) D1_TOTAL "
		Case ( nTpMeta == 2 )
			cQuery += "SELECT SUM(SD1.D1_QTDACLA) D1_QUANT "
		Case ( nTpMeta == 3 )
			cQuery += "SELECT SUM(SD1.D1_VUNIT * SD1.D1_QTDACLA) D1_TOTAL "
		Case ( nTpMeta == 4 )
			cQuery += "SELECT SUM((SD1.D1_TOTAL-SD1.D1_VALDESC) * (SD1.D1_QTDACLA / SD1.D1_QUANT)) D1_TOTAL,SUM(SD1.D1_QTDACLA) D1_QUANT,SUM(SD1.D1_VUNIT * SD1.D1_QTDACLA) D1_TOTDESC "
		OtherWise
			cQuery += "SELECT D1_COD,SUM((SD1.D1_TOTAL-SD1.D1_VALDESC) * (SD1.D1_QTDACLA / SD1.D1_QUANT)) D1_TOTAL,SUM(SD1.D1_QTDACLA) D1_QUANT,SUM(SD1.D1_VUNIT * SD1.D1_QTDACLA) D1_TOTDESC "
	EndCase
	If !Empty( nMoeda )
		cQuery += ",D1_DTDIGIT,F2_MOEDA "
	EndIf
	cQuery += "FROM "
	cQuery += RetSqlName("SD2")+" SD2,"
	cQuery += RetSqlName("SD1")+" SD1,"
	cQuery += RetSqlName("SF4")+" SF4,"
	cQuery += RetSqlName("SF2")+" SF2 "
	cQuery += "WHERE "
	cQuery += "SD1.D1_FILIAL='"+xFilial("SD1")+"' AND "
	cQuery += "SD1.D1_TIPO='D' AND "
	If ( !Empty(dDataIni) )
		cQuery += "SD1.D1_DTDIGIT>='"+Dtos(dDataIni)+"' AND "
	EndIf
	If ( !Empty(dDataFim) )
		cQuery += "SD1.D1_DTDIGIT<='"+Dtos(dDataFim)+"' AND "
	EndIf
	If ( !Empty(cCliente) )
		cQuery += "SD1.D1_FORNECE='"+cCliente+"' AND "
	EndIf
	If ( !Empty(cLoja) )
		cQuery += "SD1.D1_LOJA='"+cLoja+"' AND "
	EndIf
	cQuery += IsRemito(3,'SD1.D1_TIPODOC')+" AND "
	cQuery += "SD1.D1_QTDACLA > 0 AND "
	cQuery += "SD1.D_E_L_E_T_=' ' AND "
	cQuery += "SD2.D2_FILIAL='"+xFilial("SD2")+"' AND "
	cQuery += "SD2.D2_DOC=SD1.D1_NFORI AND "
	cQuery += "SD2.D2_SERIE=SD1.D1_SERIORI AND "
	cQuery += "SD2.D2_ITEM=SubString(SD1.D1_ITEMORI,1,2) AND "
	If ( !Empty(cTipo) )
		cQuery += "SD2.D2_TP='"+cTipo+"' AND "
	EndIf
	If ( !Empty(cGrupo) )
		cQuery += "SD2.D2_GRUPO='"+cGrupo+"' AND "
	EndIf
	If ( !Empty(cProduto) )
		cQuery += "SD2.D2_COD='"+cProduto+"' AND "
	EndIf
	cQuery += "SD2.D_E_L_E_T_=' ' AND "
	cQuery += "SF2.F2_FILIAL='"+xFilial("SF2")+"' AND "
	cQuery += "SF2.F2_SERIE=SD2.D2_SERIE AND "
	cQuery += "SF2.F2_DOC=SD2.D2_DOC AND "
	cQuery += "SF2.F2_CLIENTE=SD2.D2_CLIENTE AND "
	cQuery += "SF2.F2_LOJA=SD2.D2_LOJA AND "
	If ( !Empty(cRegiao) )
		If cPaisLoc == "BRA"
			cQuery += "SF2.F2_REGIAO='"+cRegiao+"' AND "
		Else
			cQuery += "EXISTS ( SELECT A1_REGIAO FROM " + RetSqlName( "SA1" ) + " SA1 WHERE "
			cQuery += "SA1.A1_COD=SD2.D2_CLIENTE AND SA1.A1_LOJA=SD2.D2_LOJA AND "
			cQuery += "SA1.A1_REGIAO='" + cRegiao + "' AND "
			cQuery += "SA1.D_E_L_E_T_=' ') AND "
		EndIf
	Endif
	cQuery += "SF2.D_E_L_E_T_=' ' AND "
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica os Vendedores.                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( cCodigo )
		cQuery += "EXISTS ( SELECT A3_FILIAL FROM " + RetSqlName( "SA3" ) + " SA3 WHERE "
		If ( !Empty(cCodigo) )
			cVend := "1"
			cQuery += "("
			For nCntFor := 1 To nCntVend
				cQuery += "SF2.F2_VEND"+cVend+"=SA3.A3_COD OR "
				cVend := Soma1(cVend,Len(SF2->F2_VEND1))
			Next nCntFor
			cQuery := SubStr(cQuery,1,Len(cQuery)-3)+") AND "
		EndIf
		cQuery += "SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "
		If Empty( cIn )
			cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
		Else
			cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
		EndIf
		cQuery += "	SA3.D_E_L_E_T_=' ' ) AND "
	EndIf
	cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
	cQuery += "SF4.F4_CODIGO=SD2.D2_TES AND "
	cQuery += "SF4.F4_DUPLIC IN (" + cDupli + ") AND "
	cQuery += "SF4.F4_ESTOQUE IN (" + cEstoq + ") AND "
	cQuery += "SF4.D_E_L_E_T_=' ' "
	If nTpMeta <> 5
		If !Empty( nMoeda )
			cQuery += "GROUP BY F2_MOEDA,D1_DTDIGIT "
		EndIf
	Else
		If !Empty( nMoeda )
			cQuery += "GROUP BY F2_MOEDA,D1_DTDIGIT,D1_COD "
		Else
			cQuery += "GROUP BY D1_COD "
		EndIf
	EndIf
Endif

cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
If ( nTpMeta == 1 .Or. nTpMeta == 3 )
	TcSetField(cArqQry,"D1_TOTAL","N",18,2)
ElseIf nTpMeta == 2
	TcSetField(cArqQry,"D1_QUANT","N",18,2)
Else
	TcSetField(cArqQry,"D1_QUANT"  ,"N",18,2)
	TcSetField(cArqQry,"D1_TOTAL"  ,"N",18,2)
	TcSetField(cArqQry,"D1_TOTDESC","N",18,2)
EndIf

If !Empty( nMoeda )
	TcSetField(cArqQry,"F2_MOEDA"  ,"N",2,0)
	TcSetField(cArqQry,"D1_DTDIGIT","D",8,0)
EndIf

While ( !Eof() )
	Do Case
		Case ( nTpMeta == 1 .Or. nTpMeta == 3 )
			xRetorno += If( Empty( nMoeda ), D1_TOTAL, xMoeda( D1_TOTAL, F2_MOEDA, nMoeda, D1_DTDIGIT ) )
		Case nTpMeta == 2
			xRetorno += D1_QUANT
		Case nTpMeta == 4
			xRetorno[ 1 ] += If( Empty( nMoeda ), D1_TOTAL, xMoeda( D1_TOTAL, F2_MOEDA, nMoeda, D1_DTDIGIT ) )
			xRetorno[ 2 ] += D1_QUANT
			xRetorno[ 3 ] += If( Empty( nMoeda ), D1_TOTDESC, xMoeda( D1_TOTDESC, F2_MOEDA, nMoeda, D1_DTDIGIT ) )
		OtherWise
			nX := aScan(xRetorno,{|x| x[1] == D1_COD})
			If nX == 0
				aadd(xRetorno,{D1_COD,0,0,0})
				nX := Len(xRetorno)
			EndIf
			xRetorno[nX][2] += If( Empty( nMoeda ), D1_TOTAL, xMoeda( D1_TOTAL, F2_MOEDA, nMoeda, D1_DTDIGIT ) )
			xRetorno[nX][3] += D1_QUANT
			xRetorno[nX][4] += If( Empty( nMoeda ), D1_TOTDESC, xMoeda( D1_TOTDESC, F2_MOEDA, nMoeda, D1_DTDIGIT ) )
	EndCase
	
	dbSelectArea(cArqQry)
	dbSkip()
EndDo

dbSelectArea(cArqQry)
dbCloseArea()
dbSelectArea("SD1")


RestArea(aAreaSD1)
RestArea(aAreaSD2)
RestArea(aAreaSF2)
RestArea(aAreaSF4)
RestArea(aAreaSA3)
RestArea(aArea)
Return(xRetorno)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FtNfDesc  ³ Autor ³Eduardo Riera          ³ Data ³12.12.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Calcula o valor dos descontos com base nas notas fiscais de  ³±±
±±³          ³saida.                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: cCodigo                                               ³±±
±±³          ³ExpD2: Data de Inicio                                        ³±±
±±³          ³ExpD3: Data de Termino                                       ³±±
±±³          ³ExpC4: Regiao de Vendas.                                     ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: Valor do desconto                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula o Valor dos Descontos com base nas notas fiscais de  ³±±
±±³          ³saida.                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Materiais                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FtNfDesc(cCodigo,dDataIni,dDataFim,cRegiao,cTipo,cGrupo,cProduto)

Local aArea   := GetArea()
Local aAreaSA3:= SA3->(GetArea())
Local aAreaSF4:= SF4->(GetArea())
Local aAreaSD2:= SD2->(GetArea())
Local aAreaSF2:= SF2->(GetArea())
Local cQuery  := ""
Local cArqQry := "FtNfDesc"
Local cSeek   := ""
Local cComp   := ""
Local cVend   := ""
Local cIn     := ""
Local nValor  := 0
Local nCntVend:= Fa440CntVen()
Local nCntFor := 0
Local lVend   := .F.
Local nLoop
Local cRegiaoNF := ""

DEFAULT cCodigo := ""
DEFAULT dDataIni:= dDataBase
DEFAULT dDataFim:= dDataBase
DEFAULT cRegiao := ""
DEFAULT cTipo   := ""
DEFAULT cGrupo  := ""
DEFAULT cProduto:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Acerta o Tamanho da Variaveis                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodigo := PadR(cCodigo,Len(SA3->A3_COD))
cRegiao := PadR(cRegiao,Len(SF2->F2_REGIAO))
cTipo   := PadR(cTipo,Len(SD2->D2_TP))
cGrupo  := PadR(cGrupo,Len(SD2->D2_GRUPO))
cProduto:= PadR(cProduto,Len(SD2->D2_COD))

If !Empty( cCodigo )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os grupos que estao abaixo deste representante                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( aGrupos := FtReprEst( cCodigo ) )
		
		cIn := "( "
		
		For nLoop := 1 to Len( aGrupos )
			cIn	+= "'" + aGrupos[ nLoop, 1 ] + "',"
		Next nLoop
		
		cIn := Left( cIn, Len( cIn ) - 1 ) + ") "
		
	EndIf
	
EndIf


cQuery := "SELECT SUM(SD2.D2_DESCON) D2_TOTAL "
cQuery += "FROM "

cQuery += RetSqlName("SD2")+" SD2,"
cQuery += RetSqlName("SF4")+" SF4,"
cQuery += RetSqlName("SF2")+" SF2 "
cQuery += "WHERE "

cQuery += "SF2.F2_FILIAL='"+xFilial("SF2")+"' AND "
cQuery += "SF2.F2_TIPO='N' AND "

If ( !Empty(dDataIni) )
	cQuery += "SF2.F2_EMISSAO>='"+Dtos(dDataIni)+"' AND "
EndIf
If ( !Empty(dDataFim) )
	cQuery += "SF2.F2_EMISSAO<='"+Dtos(dDataFim)+"' AND "
EndIf

If ( !Empty(cRegiao) )
	If cPaisLoc == "BRA"
		cQuery += "SF2.F2_REGIAO='"+cRegiao+"' AND "
	Else
		cQuery += "EXISTS ( SELECT A1_REGIAO FROM " + RetSqlName( "SA1" ) + " SA1 WHERE "
		cQuery += "SA1.A1_COD=SD2.D2_CLIENTE AND SA1.A1_LOJA=SD2.D2_LOJA AND "
		cQuery += "SA1.A1_REGIAO='" + cRegiao + "' AND "
		cQuery += "SA1.D_E_L_E_T_=' ') AND "
	EndIf
Endif

cQuery += " NOT "+IsRemito(3,'SF2.F2_TIPODOC')+" AND "
cQuery += "SF2.D_E_L_E_T_=' ' AND "

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os Vendedores.                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( cCodigo )
	
	cQuery += "EXISTS ( SELECT A3_FILIAL FROM " + RetSqlName( "SA3" ) + " SA3 WHERE "
	
	If ( !Empty(cCodigo) )
		cVend := "1"
		cQuery += "("
		For nCntFor := 1 To nCntVend
			cQuery += "SF2.F2_VEND"+cVend+"=SA3.A3_COD OR "
			cVend := Soma1(cVend,Len(SF2->F2_VEND1))
		Next nCntFor
		cQuery := SubStr(cQuery,1,Len(cQuery)-3)+") AND "
	EndIf
	
	cQuery += "SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "
	
	If Empty( cIn )
		cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
	Else
		cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
	EndIf
	
	cQuery += "	SA3.D_E_L_E_T_<>'*' ) AND "
	
EndIf

cQuery += "SD2.D2_FILIAL='"+xFilial("SD2")+"' AND "
cQuery += "SD2.D2_SERIE=SF2.F2_SERIE AND "
cQuery += "SD2.D2_DOC=SF2.F2_DOC AND "
cQuery += "SD2.D2_CLIENTE=SF2.F2_CLIENTE AND "
cQuery += "SD2.D2_LOJA=SF2.F2_LOJA AND "
If ( !Empty(cTipo) )
	cQuery += "SD2.D2_TP='"+cTipo+"' AND "
EndIf
If ( !Empty(cGrupo) )
	cQuery += "SD2.D2_GRUPO='"+cGrupo+"' AND "
EndIf
If ( !Empty(cProduto) )
	cQuery += "SD2.D2_COD='"+cProduto+"' AND "
EndIf
cQuery += "SD2.D_E_L_E_T_<>'*' AND "
cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
cQuery += "SF4.F4_CODIGO=SD2.D2_TES AND "
cQuery += "SF4.F4_DUPLIC='S' AND "
cQuery += "SF4.F4_ESTOQUE='S' AND "
cQuery += "SF4.D_E_L_E_T_<>'*' "

cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
TcSetField(cArqQry,"D2_TOTAL","N",18,2)

While ( !Eof() )
	nValor += D2_TOTAL
	dbSelectArea(cArqQry)
	dbSkip()
EndDo

dbSelectArea(cArqQry)
dbCloseArea()
dbSelectArea("SD2")

RestArea(aAreaSD2)
RestArea(aAreaSF2)
RestArea(aAreaSF4)
RestArea(aAreaSA3)
RestArea(aArea)
Return(nValor)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FtPdVendas³ Autor ³Eduardo Riera          ³ Data ³12.12.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Calcula o Valor das Vendas com base nos pedidos de venda     ³±±
±±³          ³para integracao com o MsOffice.                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Tipo de Meta :(1-Numerico-Valor liquido - desconto )  ³±±
±±³          ³                     (2-Numerico-Quantidade )                ³±±
±±³          ³                     (3-Numerico-Valor bruto + desconto )    ³±±
±±³          ³                     (4-Numerico-Saldo liquido - desconto )  ³±±
±±³          ³                     (5-Numerico-Saldo Quantidade )          ³±±
±±³          ³                     (6-Numerico-Saldo bruto + desconto )    ³±±
±±³          ³                     (7-Array-contendo todos os valores acima³±±
±±³          ³                     (8-Array-contendo todos os valores acima³±±
±±³          ³                      por produto                            ³±±
±±³          ³ExpC2: cCodigo                                               ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de Termino                                       ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda para conversao                                  ³±±
±±³          ³ExpCA: Cliente                                               ³±±
±±³          ³ExpCB: Loja                                                  ³±±
±±³          ³ExpCC: Expressao a ser adicionada na Query ou Filtro para    ³±±
±±³          ³       SGBD ISAM                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpX1: Valor / Array conforme tipo da Meta                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula o Valor das Vendas com base nas notas fiscais de     ³±±
±±³          ³saida                                                        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Materiais                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FtPdVendas(nTpMeta,cCodigo,dDataIni,dDataFim,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,cQueryAdd)

Local aArea   := GetArea()
Local aAreaSA3:= SA3->(GetArea())
Local aAreaSF4:= SF4->(GetArea())
Local aAreaSC6:= SC6->(GetArea())
Local aAreaSC5:= SC5->(GetArea())
Local aAreaSB1:= SB1->(GetArea())
Local aGrupos := {}
Local cQuery  := ""
Local cArqQry := "FtPDVendas"
Local cSeek   := ""
Local cComp   := ""
Local cVend   := ""
Local cIn     := ""
Local xRetorno := 0
Local nCntVend:= Fa440CntVen()
Local nCntFor := 0
Local nX      := 0
Local lVend   := .F.
Local nLoop
DEFAULT nTpMeta := 1
DEFAULT cCodigo := ""
DEFAULT dDataIni:= dDataBase
DEFAULT dDataFim:= dDataBase
DEFAULT cTipo   := ""
DEFAULT cGrupo  := ""
DEFAULT cProduto:= ""
DEFAULT nMoeda  := 0
DEFAULT cCliente:= ""
DEFAULT cLoja   := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Acerta o Tamanho da Variaveis                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodigo := PadR(cCodigo,Len(SA3->A3_COD))
cTipo   := PadR(cTipo,Len(SB1->B1_TIPO))
cGrupo  := PadR(cGrupo,Len(SB1->B1_GRUPO))
cProduto:= PadR(cProduto,Len(SC6->C6_PRODUTO))

If nTpMeta == 7
	xRetorno := { 0, 0, 0 ,0,0,0}
EndIf
If nTpMeta == 8
	xRetorno := {}
EndIf

If !Empty( cCodigo )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os grupos que estao abaixo deste representante                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( aGrupos := FtReprEst( cCodigo ) )
		
		cIn := "( "
		
		For nLoop := 1 to Len( aGrupos )
			cIn	+= "'" + aGrupos[ nLoop, 1 ] + "',"
		Next nLoop
		
		cIn := Left( cIn, Len( cIn ) - 1 ) + ") "
		
	EndIf
	
EndIf



Do Case
	Case ( nTpMeta == 1 )
		cQuery := "SELECT SUM(SC6.C6_VALOR) C6_VALOR "
	Case ( nTpMeta == 2 )
		cQuery := "SELECT SUM(SC6.C6_QTDVEN) C6_QTDVEN "
	Case ( nTpMeta == 3 )
		cQuery := "SELECT SUM(SC6.C6_VALDESC+(SC6.C6_QTDVEN*(SC6.C6_PRUNIT-SC6.C6_PRCVEN))) C6_VALOR "
	Case ( nTpMeta == 4 )
		cQuery := "SELECT SUM((SC6.C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_VALOR "
	Case ( nTpMeta == 5 )
		cQuery := "SELECT SUM(SC6.C6_QTDVEN-SC6.C6_QTDENT) C6_QTDVEN "
	Case ( nTpMeta == 6 )
		cQuery := "SELECT SUM((SC6.C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT))+((SC6.C6_PRUNIT-SC6.C6_PRCVEN)*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_VALOR "
	Case ( nTpMeta == 7 )
		cQuery := "SELECT SUM(SC6.C6_VALOR) C6_VALOR,"
		cQuery += "SUM(SC6.C6_QTDVEN) C6_QTDVEN,"
		cQuery += "SUM(SC6.C6_VALDESC+(SC6.C6_QTDVEN*(SC6.C6_PRUNIT-SC6.C6_PRCVEN))) C6_TOTDESC,"
		cQuery += "SUM(SC6.C6_QTDVEN-SC6.C6_QTDENT) C6_QTDVEN2,"
		cQuery += "SUM((SC6.C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_VALOR2,"
		cQuery += "SUM(((SC6.C6_PRUNIT-SC6.C6_PRCVEN)*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_TOTDESC2 "
	Otherwise
		cQuery := "SELECT SC6.C6_PRODUTO,SUM(SC6.C6_VALOR) C6_VALOR,"
		cQuery += "SUM(SC6.C6_QTDVEN) C6_QTDVEN,"
		cQuery += "SUM(SC6.C6_VALDESC+(SC6.C6_QTDVEN*(SC6.C6_PRUNIT-SC6.C6_PRCVEN))) C6_TOTDESC,"
		cQuery += "SUM(SC6.C6_QTDVEN-SC6.C6_QTDENT) C6_QTDVEN2,"
		cQuery += "SUM((SC6.C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_VALOR2,"
		cQuery += "SUM(((SC6.C6_PRUNIT-SC6.C6_PRCVEN)*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_TOTDESC2 "
EndCase

If !Empty( nMoeda )
	cQuery += ",C5_MOEDA,C5_EMISSAO "
EndIf

cQuery += "FROM "

cQuery += RetSqlName("SC6")+" SC6,"
cQuery += RetSqlName("SF4")+" SF4,"
cQuery += RetSqlName("SC5")+" SC5,"
cQuery += RetSqlName("SB1")+" SB1 "
cQuery += "WHERE "

cQuery += "SC5.C5_FILIAL='"+xFilial("SC5")+"' AND "
cQuery += "SC5.C5_TIPO='N' AND "

If ( !Empty(dDataIni) )
	cQuery += "SC5.C5_EMISSAO>='"+Dtos(dDataIni)+"' AND "
EndIf
If ( !Empty(dDataFim) )
	cQuery += "SC5.C5_EMISSAO<='"+Dtos(dDataFim)+"' AND "
EndIf
If ( !Empty(cCliente) )
	cQuery += "SC5.C5_CLIENTE='"+cCliente+"' AND "
EndIf
If ( !Empty(cLoja) )
	cQuery += "SC5.C5_LOJACLI='"+cLoja+"' AND "
EndIf
cQuery += "SC5.D_E_L_E_T_=' ' AND "
cQuery += "SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
cQuery += "SC6.C6_NUM=SC5.C5_NUM AND "
cQuery += "SC6.C6_CLI=SC5.C5_CLIENTE AND "
cQuery += "SC6.C6_LOJA=SC5.C5_LOJACLI AND "
cQuery += "SC6.C6_BLQ NOT IN('R ','S ') AND "
If ( !Empty(cProduto) )
	cQuery += "SC6.C6_PRODUTO='"+cProduto+"' AND "
EndIf
cQuery += "SC6.D_E_L_E_T_=' ' AND "
cQuery += "SB1.B1_FILIAL='"+xFilial("SB1")+"' AND "
cQuery += "SB1.B1_COD=SC6.C6_PRODUTO AND "
If ( !Empty(cTipo) )
	cQuery += "SB1.B1_TIPO='"+cTipo+"' AND "
EndIf
If ( !Empty(cGrupo) )
	cQuery += "SB1.B1_GRUPO='"+cGrupo+"' AND "
EndIf
cQuery += "SB1.D_E_L_E_T_=' ' AND "
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os Vendedores.                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( cCodigo )
	
	cQuery += "EXISTS ( SELECT A3_FILIAL FROM " + RetSqlName( "SA3" ) + " SA3 WHERE "
	
	If ( !Empty(cCodigo) )
		cVend := "1"
		cQuery += "("
		For nCntFor := 1 To nCntVend
			cQuery += "SC5.C5_VEND"+cVend+"=SA3.A3_COD OR "
			cVend := Soma1(cVend,Len(SC5->C5_VEND1))
		Next nCntFor
		cQuery := SubStr(cQuery,1,Len(cQuery)-3)+") AND "
	EndIf
	
	cQuery += "SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "
	
	If Empty( cIn )
		cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
	Else
		cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
	EndIf
	
	cQuery += "	SA3.D_E_L_E_T_=' ' ) AND "
	
EndIf
cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
cQuery += "SF4.F4_CODIGO=SC6.C6_TES AND "
cQuery += "SF4.F4_DUPLIC='S' AND "
cQuery += "SF4.F4_ESTOQUE='S' AND "
cQuery += "SF4.D_E_L_E_T_<>'*' "
If !Empty(cQueryAdd)
	cQuery += " AND "+cQueryAdd
EndIF
If nTpMeta <> 8
	If !Empty( nMoeda )
		cQuery += "GROUP BY C5_MOEDA,C5_EMISSAO "
	EndIf
Else
	If !Empty( nMoeda )
		cQuery += "GROUP BY C5_MOEDA,C5_EMISSAO,C6_PRODUTO"
	Else
		cQuery += "GROUP BY C6_PRODUTO"
	EndIf
EndIf

cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
Do Case
	Case ( nTpMeta == 1 .Or. nTpMeta == 3 .Or. nTpMeta == 4 .Or. nTpMeta == 6 )
		TcSetField(cArqQry,"C6_VALOR","N",18,2)
	Case nTpMeta == 2 .Or. nTpMeta == 5
		TcSetField(cArqQry,"C6_QTDVEN","N",18,2)
	OtherWise
		TcSetField(cArqQry,"C6_QTDVEN","N",18,2)
		TcSetField(cArqQry,"C6_VALOR","N",18,2)
		TcSetField(cArqQry,"C6_TOTDESC","N",18,2)
		TcSetField(cArqQry,"C6_QTDVEN2","N",18,2)
		TcSetField(cArqQry,"C6_VALOR2","N",18,2)
		TcSetField(cArqQry,"C6_TOTDESC2","N",18,2)
EndCase

If !Empty( nMoeda )
	TcSetField(cArqQry,"C5_MOEDA"  ,"N",2,0)
	TcSetField(cArqQry,"C5_EMISSAO","D",8,0)
EndIf

While ( !Eof() )
	Do Case
		Case ( nTpMeta == 1 .Or. nTpMeta == 3 .Or. nTpMeta == 4 .Or. nTpMeta == 6 )
			xRetorno += If( Empty( nMoeda ), C6_VALOR, xMoeda( C6_VALOR, C5_MOEDA, nMoeda, C5_EMISSAO ) )
		Case nTpMeta == 2 .Or. nTpMeta == 5
			xRetorno += C6_QTDVEN
		Case nTpMeta == 7
			xRetorno[ 1 ] += If( Empty( nMoeda ), C6_VALOR, xMoeda( C6_VALOR, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ 2 ] += C6_QTDVEN
			xRetorno[ 3 ] += If( Empty( nMoeda ), C6_TOTDESC, xMoeda( C6_TOTDESC, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ 4 ] += If( Empty( nMoeda ), C6_VALOR2, xMoeda( C6_VALOR2, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ 5 ] += C6_QTDVEN2
			xRetorno[ 6 ] += If( Empty( nMoeda ), C6_TOTDESC2, xMoeda( C6_TOTDESC2, C5_MOEDA, nMoeda, C5_EMISSAO ) )
		OtherWise
			nX := aScan(xRetorno,{|x| x[1] == C6_PRODUTO})
			If nX == 0
				aadd(xRetorno,{C6_PRODUTO,0,0,0,0,0,0})
				nX := Len(xRetorno)
			EndIf
			xRetorno[ nX , 2 ] += If( Empty( nMoeda ), C6_VALOR, xMoeda( C6_VALOR, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ nX , 3 ] += C6_QTDVEN
			xRetorno[ nX , 4 ] += If( Empty( nMoeda ), C6_TOTDESC, xMoeda( C6_TOTDESC, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ nX , 5 ] += If( Empty( nMoeda ), C6_VALOR2, xMoeda( C6_VALOR2, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ nX , 6 ] += C6_QTDVEN2
			xRetorno[ nX , 7 ] += If( Empty( nMoeda ), C6_TOTDESC2, xMoeda( C6_TOTDESC2, C5_MOEDA, nMoeda, C5_EMISSAO ) )
	EndCase
	dbSelectArea(cArqQry)
	dbSkip()
EndDo

dbSelectArea(cArqQry)
dbCloseArea()
dbSelectArea("SC6")

RestArea(aAreaSC6)
RestArea(aAreaSC5)
RestArea(aAreaSF4)
RestArea(aAreaSB1)
RestArea(aAreaSA3)
RestArea(aArea)
Return(xRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FtNfBonif ³ Autor ³Eduardo Riera          ³ Data ³15.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Calcula o Valor das Bonificacoes com base nas notas fiscais  ³±±
±±³          ³de saida para intergracao com MsOffice.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Tipo de Meta :(1-Numerico-Valor liquido - desconto )  ³±±
±±³          ³                     (2-Numerico-Quantidade )                ³±±
±±³          ³                     (3-Numerico-Valor bruto + desconto )    ³±±
±±³          ³                     (4-Array-contendo todos os valores acima³±±
±±³          ³                     (5-Array-contendo todos os valores acima³±±
±±³          ³                      por produto                            ³±±
±±³          ³ExpC2: cCodigo                                               ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de Termino                                       ³±±
±±³          ³ExpC5: Regiao de Vendas.                                     ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda para conversao                                  ³±±
±±³          ³ExpCA: Cliente                                               ³±±
±±³          ³ExpCB: Loja                                                  ³±±
±±³          ³ExpCC: Expressao a ser adicionada na Query ou Filtro para    ³±±
±±³          ³       SGBD ISAM                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpX1: Valor / Array conforme tipo da Meta                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Considera-se como bonificacao os itens remetidos que movimen-³±±
±±³          ³tam estoque mas nao geram duplicata                          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Materiais                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FtNfBonif(nTpMeta,cCodigo,dDataIni,dDataFim,cRegiao,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,cQueryAdd)

Local aArea   := GetArea()
Local aAreaSA3:= SA3->(GetArea())
Local aAreaSF4:= SF4->(GetArea())
Local aAreaSD2:= SD2->(GetArea())
Local aAreaSF2:= SF2->(GetArea())
Local aGrupos := {}
Local cQuery  := ""
Local cArqQry := "FtNfVendas"
Local cSeek   := ""
Local cComp   := ""
Local cVend   := ""
Local cIn     := ""
Local xRetorno := 0
Local nCntVend:= Fa440CntVen()
Local nCntFor := 0
Local nX      := 0
Local lVend   := .F.
Local nLoop
Local cRegiaoNF := ""

DEFAULT nTpMeta := 1
DEFAULT cCodigo := ""
DEFAULT dDataIni:= dDataBase
DEFAULT dDataFim:= dDataBase
DEFAULT cRegiao := ""
DEFAULT cTipo   := ""
DEFAULT cGrupo  := ""
DEFAULT cProduto:= ""
DEFAULT nMoeda  := 0
DEFAULT cCliente:= ""
DEFAULT cLoja   := ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Acerta o Tamanho da Variaveis                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodigo := PadR(cCodigo,Len(SA3->A3_COD))
cRegiao := PadR(cRegiao,Len(SF2->F2_REGIAO))
cTipo   := PadR(cTipo,Len(SD2->D2_TP))
cGrupo  := PadR(cGrupo,Len(SD2->D2_GRUPO))
cProduto:= PadR(cProduto,Len(SD2->D2_COD))

If nTpMeta == 4
	xRetorno := { 0, 0, 0 }
EndIf
If nTpMeta == 5
	xRetorno := {}
EndIf

If !Empty( cCodigo )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os grupos que estao abaixo deste representante                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( aGrupos := FtReprEst( cCodigo ) )
		
		cIn := "( "
		
		For nLoop := 1 to Len( aGrupos )
			cIn += "'" + aGrupos[ nLoop, 1 ] + "',"
		Next nLoop
		
		cIn := Left( cIn, Len( cIn ) - 1 ) + ") "
		
	EndIf
	
EndIf



Do Case
	Case ( nTpMeta == 1 )
		cQuery := "SELECT SUM(SD2.D2_TOTAL) D2_TOTAL "
	Case ( nTpMeta == 2 )
		cQuery := "SELECT SUM(SD2.D2_QUANT) D2_QUANT "
	Case ( nTpMeta == 3 )
		cQuery := "SELECT SUM(SD2.D2_TOTAL+SD2.D2_DESCON) D2_TOTAL "
	Case ( nTpMeta == 4 )
		cQuery := "SELECT SUM(SD2.D2_TOTAL) D2_TOTAL, SUM(SD2.D2_TOTAL+SD2.D2_DESCON) D2_TOTDESC,SUM(SD2.D2_QUANT) D2_QUANT "
	Otherwise
		cQuery := "SELECT D2_COD,SUM(SD2.D2_TOTAL) D2_TOTAL, SUM(SD2.D2_TOTAL+SD2.D2_DESCON) D2_TOTDESC,SUM(SD2.D2_QUANT) D2_QUANT "
EndCase

If !Empty( nMoeda )
	cQuery += ",F2_MOEDA,D2_EMISSAO "
EndIf

cQuery += "FROM "

cQuery += RetSqlName("SD2")+" SD2,"
cQuery += RetSqlName("SF4")+" SF4,"
cQuery += RetSqlName("SF2")+" SF2 "
cQuery += "WHERE "

cQuery += "SF2.F2_FILIAL='"+xFilial("SF2")+"' AND "
cQuery += "SF2.F2_TIPO='N' AND "

If ( !Empty(dDataIni) )
	cQuery += "SF2.F2_EMISSAO>='"+Dtos(dDataIni)+"' AND "
EndIf
If ( !Empty(dDataFim) )
	cQuery += "SF2.F2_EMISSAO<='"+Dtos(dDataFim)+"' AND "
EndIf

If ( !Empty(cRegiao) )
	If cPaisLoc == "BRA"
		cQuery += "SF2.F2_REGIAO='"+cRegiao+"' AND "
	Else
		cQuery += "EXISTS ( SELECT A1_REGIAO FROM " + RetSqlName( "SA1" ) + " SA1 WHERE "
		cQuery += "SA1.A1_COD=SD2.D2_CLIENTE AND SA1.A1_LOJA=SD2.D2_LOJA AND "
		cQuery += "SA1.A1_REGIAO='" + cRegiao + "' AND "
		cQuery += "SA1.D_E_L_E_T_=' ') AND "
	EndIf
Endif

If ( !Empty(cCliente) )
	cQuery += "SF2.F2_CLIENTE='"+cCliente+"' AND "
EndIf
If ( !Empty(cLoja) )
	cQuery += "SF2.F2_LOJA='"+cLoja+"' AND "
EndIf

cQuery += "SF2.D_E_L_E_T_=' ' AND "
cQuery += "SD2.D2_FILIAL='"+xFilial("SD2")+"' AND "
cQuery += "SD2.D2_SERIE=SF2.F2_SERIE AND "
cQuery += "SD2.D2_DOC=SF2.F2_DOC AND "
cQuery += "SD2.D2_CLIENTE=SF2.F2_CLIENTE AND "
cQuery += "SD2.D2_LOJA=SF2.F2_LOJA AND "
If ( !Empty(cTipo) )
	cQuery += "SD2.D2_TP='"+cTipo+"' AND "
EndIf
If ( !Empty(cGrupo) )
	cQuery += "SD2.D2_GRUPO='"+cGrupo+"' AND "
EndIf
If ( !Empty(cProduto) )
	cQuery += "SD2.D2_COD='"+cProduto+"' AND "
EndIf
cQuery += "SD2.D_E_L_E_T_=' ' AND "

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os Vendedores.                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( cCodigo )
	
	cQuery += "EXISTS ( SELECT A3_FILIAL FROM " + RetSqlName( "SA3" ) + " SA3 WHERE "
	
	If ( !Empty(cCodigo) )
		cVend := "1"
		cQuery += "("
		For nCntFor := 1 To nCntVend
			cQuery += "SF2.F2_VEND"+cVend+"=SA3.A3_COD OR "
			cVend := Soma1(cVend,Len(SF2->F2_VEND1))
		Next nCntFor
		cQuery := SubStr(cQuery,1,Len(cQuery)-3)+") AND "
	EndIf
	
	cQuery += "SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "
	
	If Empty( cIn )
		cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
	Else
		cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
	EndIf
	
	cQuery += "	SA3.D_E_L_E_T_=' ' ) AND "
	
EndIf

cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
cQuery += "SF4.F4_CODIGO=SD2.D2_TES AND "
cQuery += "SF4.F4_DUPLIC='N' AND "
cQuery += "SF4.F4_ESTOQUE='S' AND "
cQuery += "SF4.D_E_L_E_T_=' ' "
If !Empty(cQueryAdd)
	cQuery += " AND "+cQueryAdd
EndIf

If nTpMeta <> 5
	If !Empty( nMoeda )
		cQuery += "GROUP BY F2_MOEDA,D2_EMISSAO "
	EndIf
Else
	If !Empty( nMoeda )
		cQuery += "GROUP BY F2_MOEDA,D2_EMISSAO,D2_COD "
	Else
		cQuery += "GROUP BY D2_COD "
	EndIf
EndIf

cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
If ( nTpMeta == 1 .Or. nTpMeta == 3 )
	TcSetField(cArqQry,"D2_TOTAL","N",18,2)
ElseIf nTpMeta == 2
	TcSetField(cArqQry,"D2_QUANT","N",18,2)
Else
	TcSetField(cArqQry,"D2_QUANT"  ,"N",18,2)
	TcSetField(cArqQry,"D2_TOTAL"  ,"N",18,2)
	TcSetField(cArqQry,"D2_TOTDESC","N",18,2)
EndIf

If !Empty( nMoeda )
	TcSetField(cArqQry,"F2_MOEDA"  ,"N",2,0)
	TcSetField(cArqQry,"D2_EMISSAO","D",8,0)
EndIf

While ( !Eof() )
	Do Case
		Case ( nTpMeta == 1 .Or. nTpMeta == 3 )
			xRetorno += If( Empty( nMoeda ), D2_TOTAL, xMoeda( D2_TOTAL, F2_MOEDA, nMoeda, D2_EMISSAO ) )
		Case nTpMeta == 2
			xRetorno += D2_QUANT
		Case nTpMeta == 4
			xRetorno[ 1 ] += If( Empty( nMoeda ), D2_TOTAL, xMoeda( D2_TOTAL, F2_MOEDA, nMoeda, D2_EMISSAO ) )
			xRetorno[ 2 ] += D2_QUANT
			xRetorno[ 3 ] += If( Empty( nMoeda ), D2_TOTDESC, xMoeda( D2_TOTDESC, F2_MOEDA, nMoeda, D2_EMISSAO ) )
		OtherWise
			nX := aScan(xRetorno,{|x| x[1] == D2_COD})
			If nX == 0
				aadd(xRetorno,{D2_COD,0,0,0})
				nX := Len(xRetorno)
			EndIf
			xRetorno[ nX , 2 ] += If( Empty( nMoeda ), D2_TOTAL, xMoeda( D2_TOTAL, F2_MOEDA, nMoeda, D2_EMISSAO ) )
			xRetorno[ nX , 3 ] += D2_QUANT
			xRetorno[ nX , 4 ] += If( Empty( nMoeda ), D2_TOTDESC, xMoeda( D2_TOTDESC, F2_MOEDA, nMoeda, D2_EMISSAO ) )
	EndCase
	dbSelectArea(cArqQry)
	dbSkip()
EndDo

dbSelectArea(cArqQry)
dbCloseArea()
dbSelectArea("SD2")

RestArea(aAreaSD2)
RestArea(aAreaSF2)
RestArea(aAreaSF4)
RestArea(aAreaSA3)
RestArea(aArea)
Return(xRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FtPdBonif ³ Autor ³Eduardo Riera          ³ Data ³15.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Calcula o Valor das Vendas com base nos pedidos de venda     ³±±
±±³          ³para integracao com o MsOffice.                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Tipo de Meta :(1-Numerico-Valor liquido - desconto )  ³±±
±±³          ³                     (2-Numerico-Quantidade )                ³±±
±±³          ³                     (3-Numerico-Valor bruto + desconto )    ³±±
±±³          ³                     (4-Numerico-Saldo liquido - desconto )  ³±±
±±³          ³                     (5-Numerico-Saldo Quantidade )          ³±±
±±³          ³                     (6-Numerico-Saldo bruto + desconto )    ³±±
±±³          ³                     (7-Array-contendo todos os valores acima³±±
±±³          ³                     (8-Array-contendo todos os valores acima³±±
±±³          ³                      por produto                            ³±±
±±³          ³ExpC2: cCodigo                                               ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de Termino                                       ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda para conversao                                  ³±±
±±³          ³ExpCA: Cliente                                               ³±±
±±³          ³ExpCB: Loja                                                  ³±±
±±³          ³ExpCC: Expressao a ser adicionada na Query ou Filtro para    ³±±
±±³          ³       SGBD ISAM                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpX1: Valor / Array conforme tipo da Meta                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula o Valor das Vendas com base nas notas fiscais de     ³±±
±±³          ³saida                                                        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Materiais                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FtPdBonif(nTpMeta,cCodigo,dDataIni,dDataFim,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,cQueryAdd)

Local aArea   := GetArea()
Local aAreaSA3:= SA3->(GetArea())
Local aAreaSF4:= SF4->(GetArea())
Local aAreaSC6:= SC6->(GetArea())
Local aAreaSC5:= SC5->(GetArea())
Local aAreaSB1:= SB1->(GetArea())
Local aGrupos := {}
Local cQuery  := ""
Local cArqQry := "FtPDVendas"
Local cSeek   := ""
Local cComp   := ""
Local cVend   := ""
Local cIn     := ""
Local xRetorno := 0
Local nCntVend:= Fa440CntVen()
Local nCntFor := 0
Local lVend   := .F.
Local nLoop
DEFAULT nTpMeta := 1
DEFAULT cCodigo := ""
DEFAULT dDataIni:= dDataBase
DEFAULT dDataFim:= dDataBase
DEFAULT cTipo   := ""
DEFAULT cGrupo  := ""
DEFAULT cProduto:= ""
DEFAULT nMoeda  := 0
DEFAULT cCliente:= ""
DEFAULT cLoja   := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Acerta o Tamanho da Variaveis                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodigo := PadR(cCodigo,Len(SA3->A3_COD))
cTipo   := PadR(cTipo,Len(SB1->B1_TIPO))
cGrupo  := PadR(cGrupo,Len(SB1->B1_GRUPO))
cProduto:= PadR(cProduto,Len(SC6->C6_PRODUTO))

If nTpMeta == 7
	xRetorno := { 0, 0, 0 ,0,0,0}
EndIf
If nTpMeta == 8
	xRetorno := {}
EndIf

If !Empty( cCodigo )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os grupos que estao abaixo deste representante                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( aGrupos := FtReprEst( cCodigo ) )
		
		cIn := "( "
		
		For nLoop := 1 to Len( aGrupos )
			cIn += "'" + aGrupos[ nLoop, 1 ] + "',"
		Next nLoop
		
		cIn := Left( cIn, Len( cIn ) - 1 ) + ") "
		
	EndIf
	
EndIf



Do Case
	Case ( nTpMeta == 1 )
		cQuery := "SELECT SUM(SC6.C6_VALOR) C6_VALOR "
	Case ( nTpMeta == 2 )
		cQuery := "SELECT SUM(SC6.C6_QTDVEN) C6_QTDVEN "
	Case ( nTpMeta == 3 )
		cQuery := "SELECT SUM(SC6.C6_VALDESC+(SC6.C6_QTDVEN*(SC6.C6_PRUNIT-SC6.C6_PRCVEN))) C6_VALOR "
	Case ( nTpMeta == 4 )
		cQuery := "SELECT SUM((SC6.C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_VALOR "
	Case ( nTpMeta == 5 )
		cQuery := "SELECT SUM(SC6.C6_QTDVEN-SC6.C6_QTDENT) C6_QTDVEN "
	Case ( nTpMeta == 6 )
		cQuery := "SELECT SUM((SC6.C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT))+((SC6.C6_PRUNIT-SC6.C6_PRCVEN)*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_VALOR "
	Case ( nTpMeta == 7 )
		cQuery := "SELECT SUM(SC6.C6_VALOR) C6_VALOR,"
		cQuery += "SUM(SC6.C6_QTDVEN) C6_QTDVEN,"
		cQuery += "SUM(SC6.C6_VALDESC+(SC6.C6_QTDVEN*(SC6.C6_PRUNIT-SC6.C6_PRCVEN))) C6_TOTDESC,"
		cQuery += "SUM(SC6.C6_QTDVEN-SC6.C6_QTDENT) C6_QTDVEN2,"
		cQuery += "SUM((SC6.C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_VALOR2,"
		cQuery += "SUM(((SC6.C6_PRUNIT-SC6.C6_PRCVEN)*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_TOTDESC2 "
	OtherWise
		cQuery := "SELECT SC6.C6_PRODUTO,SUM(SC6.C6_VALOR) C6_VALOR,"
		cQuery += "SUM(SC6.C6_QTDVEN) C6_QTDVEN,"
		cQuery += "SUM(SC6.C6_VALDESC+(SC6.C6_QTDVEN*(SC6.C6_PRUNIT-SC6.C6_PRCVEN))) C6_TOTDESC,"
		cQuery += "SUM(SC6.C6_QTDVEN-SC6.C6_QTDENT) C6_QTDVEN2,"
		cQuery += "SUM((SC6.C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_VALOR2,"
		cQuery += "SUM(((SC6.C6_PRUNIT-SC6.C6_PRCVEN)*(SC6.C6_QTDVEN-SC6.C6_QTDENT))) C6_TOTDESC2 "
EndCase

If !Empty( nMoeda )
	cQuery += ",C5_MOEDA,C5_EMISSAO "
EndIf

cQuery += "FROM "

cQuery += RetSqlName("SC6")+" SC6,"
cQuery += RetSqlName("SF4")+" SF4,"
cQuery += RetSqlName("SC5")+" SC5,"
cQuery += RetSqlName("SB1")+" SB1 "
cQuery += "WHERE "

cQuery += "SC5.C5_FILIAL='"+xFilial("SC5")+"' AND "
cQuery += "SC5.C5_TIPO='N' AND "

If ( !Empty(dDataIni) )
	cQuery += "SC5.C5_EMISSAO>='"+Dtos(dDataIni)+"' AND "
EndIf
If ( !Empty(dDataFim) )
	cQuery += "SC5.C5_EMISSAO<='"+Dtos(dDataFim)+"' AND "
EndIf
If ( !Empty(cCliente) )
	cQuery += "SC5.C5_CLIENTE='"+cCliente+"' AND "
EndIf
If ( !Empty(cLoja) )
	cQuery += "SC5.C5_LOJACLI='"+cLoja+"' AND "
EndIf
cQuery += "SC5.D_E_L_E_T_=' ' AND "
cQuery += "SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
cQuery += "SC6.C6_NUM=SC5.C5_NUM AND "
cQuery += "SC6.C6_CLI=SC5.C5_CLIENTE AND "
cQuery += "SC6.C6_LOJA=SC5.C5_LOJACLI AND "
cQuery += "SC6.C6_BLQ NOT IN('R ','S ') AND "
If ( !Empty(cProduto) )
	cQuery += "SC6.C6_PRODUTO='"+cProduto+"' AND "
EndIf
cQuery += "SC6.D_E_L_E_T_=' ' AND "
cQuery += "SB1.B1_FILIAL='"+xFilial("SB1")+"' AND "
cQuery += "SB1.B1_COD=SC6.C6_PRODUTO AND "
If ( !Empty(cTipo) )
	cQuery += "SB1.B1_TIPO='"+cTipo+"' AND "
EndIf
If ( !Empty(cGrupo) )
	cQuery += "SB1.B1_GRUPO='"+cGrupo+"' AND "
EndIf
cQuery += "SB1.D_E_L_E_T_=' ' AND "
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os Vendedores.                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( cCodigo )
	
	cQuery += "EXISTS ( SELECT A3_FILIAL FROM " + RetSqlName( "SA3" ) + " SA3 WHERE "
	
	If ( !Empty(cCodigo) )
		cVend := "1"
		cQuery += "("
		For nCntFor := 1 To nCntVend
			cQuery += "SC5.C5_VEND"+cVend+"=SA3.A3_COD OR "
			cVend := Soma1(cVend,Len(SC5->C5_VEND1))
		Next nCntFor
		cQuery := SubStr(cQuery,1,Len(cQuery)-3)+") AND "
	EndIf
	
	cQuery += "SA3.A3_FILIAL='"+xFilial("SA3")+"' AND "
	
	If Empty( cIn )
		cQuery  += "SA3.A3_COD='"+cCodigo+"' AND "
	Else
		cQuery  += "(SA3.A3_COD='"+cCodigo+"' OR SA3.A3_GRPREP IN " + cIn + " ) AND "
	EndIf
	
	cQuery += "	SA3.D_E_L_E_T_=' ' ) AND "
	
EndIf
cQuery += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
cQuery += "SF4.F4_CODIGO=SC6.C6_TES AND "
cQuery += "SF4.F4_DUPLIC='N' AND "
cQuery += "SF4.F4_ESTOQUE='S' AND "
cQuery += "SF4.D_E_L_E_T_=' ' "
If !Empty(cQueryAdd)
	cQuery += " AND "+cQueryAdd
EndIf
If nTpMeta <> 8
	If !Empty( nMoeda )
		cQuery += "GROUP BY C5_MOEDA,C5_EMISSAO"
	EndIf
Else
	If !Empty( nMoeda )
		cQuery += "GROUP BY C5_MOEDA,C5_EMISSAO,C6_PRODUTO"
	Else
		cQuery += "GROUP BY C6_PRODUTO"
	EndIf
EndIf

cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
Do Case
	Case ( nTpMeta == 1 .Or. nTpMeta == 3 .Or. nTpMeta == 4 .Or. nTpMeta == 6 )
		TcSetField(cArqQry,"C6_VALOR","N",18,2)
	Case nTpMeta == 2 .Or. nTpMeta == 5
		TcSetField(cArqQry,"C6_QTDVEN","N",18,2)
	OtherWise
		TcSetField(cArqQry,"C6_QTDVEN","N",18,2)
		TcSetField(cArqQry,"C6_VALOR","N",18,2)
		TcSetField(cArqQry,"C6_TOTDESC","N",18,2)
		TcSetField(cArqQry,"C6_QTDVEN2","N",18,2)
		TcSetField(cArqQry,"C6_VALOR2","N",18,2)
		TcSetField(cArqQry,"C6_TOTDESC2","N",18,2)
EndCase

If !Empty( nMoeda )
	TcSetField(cArqQry,"C5_MOEDA"  ,"N",2,0)
	TcSetField(cArqQry,"C5_EMISSAO","D",8,0)
EndIf

While ( !Eof() )
	Do Case
		Case ( nTpMeta == 1 .Or. nTpMeta == 3 .Or. nTpMeta == 4 .Or. nTpMeta == 6 )
			xRetorno += If( Empty( nMoeda ), C6_VALOR, xMoeda( C6_VALOR, C5_MOEDA, nMoeda, C5_EMISSAO ) )
		Case nTpMeta == 2 .Or. nTpMeta == 5
			xRetorno += C6_QTDVEN
		Case nTpMeta == 7
			xRetorno[ 1 ] += If( Empty( nMoeda ), C6_VALOR, xMoeda( C6_VALOR, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ 2 ] += C6_QTDVEN
			xRetorno[ 3 ] += If( Empty( nMoeda ), C6_TOTDESC, xMoeda( C6_TOTDESC, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ 4 ] += If( Empty( nMoeda ), C6_VALOR2, xMoeda( C6_VALOR2, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ 5 ] += C6_QTDVEN2
			xRetorno[ 6 ] += If( Empty( nMoeda ), C6_TOTDESC2, xMoeda( C6_TOTDESC2, C5_MOEDA, nMoeda, C5_EMISSAO ) )
		Case nTpMeta == 8
			nX := aScan(xRetorno,{|x| x[1] == C6_PRODUTO})
			If nX == 0
				aadd(xRetorno,{C6_PRODUTO,0,0,0,0,0,0})
				nX := Len(xRetorno)
			EndIf
			xRetorno[ nX , 2 ] += If( Empty( nMoeda ), C6_VALOR, xMoeda( C6_VALOR, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ nX , 3 ] += C6_QTDVEN
			xRetorno[ nX , 4 ] += If( Empty( nMoeda ), C6_TOTDESC, xMoeda( C6_TOTDESC, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ nX , 5 ] += If( Empty( nMoeda ), C6_VALOR2, xMoeda( C6_VALOR2, C5_MOEDA, nMoeda, C5_EMISSAO ) )
			xRetorno[ nX , 6 ] += C6_QTDVEN2
			xRetorno[ nX , 7 ] += If( Empty( nMoeda ), C6_TOTDESC2, xMoeda( C6_TOTDESC2, C5_MOEDA, nMoeda, C5_EMISSAO ) )
	EndCase
	dbSelectArea(cArqQry)
	dbSkip()
EndDo

dbSelectArea(cArqQry)
dbCloseArea()
dbSelectArea("SC6")

RestArea(aAreaSC6)
RestArea(aAreaSC5)
RestArea(aAreaSF4)
RestArea(aAreaSB1)
RestArea(aAreaSA3)
RestArea(aArea)
Return(xRetorno)

 /*/{Protheus.doc} RetTpCat
	Retorna o tipo de categoria. 1 = Produto, 2 = Grupo de Produto
	@type  Function
	@author Totvs CRM
	@since 05/03/2020
	@version 12.1.25
	@param cCateg = Código da Categoria
	@return nRet. 1 = Produto, 2 = Grupo de Produto
/*/

Static Function RetTpCat(cCateg)
	Local aAreaACV := ACV->(GetArea())
	Local nRet := 1

	If ACV->(DbSeek(xFilial("ACV") + cCateg))

		If !Empty(ACV->ACV_GRUPO)
			nRet := 2
		EndIf
	EndIf

	RestArea(aAreaACV)

Return nRet
