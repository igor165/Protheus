#INCLUDE "MATA456.CH"
#INCLUDE "TOTVS.CH" 
#INCLUDE "FWLIBVERSION.CH"

Static __lMetric := Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATA456  ³ Autor ³ Rosane L. Chene       ³ Data ³ 15.01.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Liberacao de Credito/Estoque                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void MATA456(void)                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATA456()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aArea			:= GetArea()
Local cFilSC9		:= ""
Local cFiltroSC9	:= ""
Local cCondicao		:= ""
Local cPerg			:= "MTA456"
Local aIndSC9		:= {}
Local aCores    := {{"C9_BLEST=='  '.And.C9_BLCRED=='  '.And.(C9_BLWMS>='05'.OR.C9_BLWMS='  ').And.Iif(SC9->((ColumnPos('C9_BLTMS') > 0)), Empty(C9_BLTMS), .T.)",'ENABLE' },;	//Item Liberado
						{ "C9_BLCRED == '80' .Or. C9_BLCRED == '92'",'BR_BRANCO'},;	//Em análise Risk - Totvs Mais Negócios	
						{ "C9_BLCRED == '90' .Or. C9_BLCRED == '91'" ,'BR_CINZA'},; //Bloqueado por regras Risk - Totvs Mais Negócios
                        { "(C9_BLCRED =='10' .And. C9_BLEST  == '10').Or.C9_BLCRED =='ZZ' .And. C9_BLEST  == 'ZZ'",'DISABLE'},;		   	//Item Faturado
                        { "!C9_BLCRED=='  '.And. C9_BLCRED <> '09'.And. C9_BLCRED <> '10'.And. C9_BLCRED <> 'ZZ'",'BR_AZUL'},;	//Item Bloqueado - Credito
                        { "!C9_BLEST =='  '.And. C9_BLCRED <> '09'.And. C9_BLEST  <> '10'.And. C9_BLEST  <> 'ZZ'",'BR_PRETO'},;	//Item Bloqueado - Estoque
                        { "C9_BLWMS <='05'  .And. !C9_BLWMS == '  '",'BR_AMARELO'},;	//Item Bloqueado - WMS
                        { "C9_BLCRED == '09' .And. C9_BLCRED <> '10'.And. C9_BLCRED <> 'ZZ'",'BR_MARROM'},; //Item Rejeitado
                        { "Iif(SC9->((ColumnPos('C9_BLTMS') > 0)), !Empty(C9_BLTMS), .F.)"  ,'BR_LARANJA'}}	//Item Bloqueado - TMS

If ( cPaisLoc $ "ARG|POR|EUA" )
	Private aArrayAE	:= {}
EndIf
Private cCadastro	:= OemToAnsi(STR0005)		//"Liberação de Crédito / Estoque"
Private aRotina		:= MenuDef()
	
If VerSenha(136) .And. VerSenha(137)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ So Ped. Bloqueados   mv_par01          Sim Nao               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Pergunte(cPerg,.T.)
		IF (ExistBlock("M456FIL"))
			cFiltroSC9	 := ExecBlock("M456FIL",.f.,.f.)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³EXECUTAR CHAMADA DE FUNCAO p/ integracao com sistema de Distribuicao - NAO REMOVER ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC9")
		dbSetOrder(1)
		cFilSC9	:= xFilial("SC9")
		Do Case
			Case mv_par01 == 1 //Somente de Estoque
				cFiltroSC9  := If(Empty(cFiltroSC9),".T.",cFiltroSC9)
				cCondicao	:= "C9_FILIAL=='"+cFilSC9+"'.And."
				cCondicao	+= "((C9_BLEST<>'  '.And.C9_BLEST<>'10').Or."
				cCondicao	+= "(C9_BLCRED<>'  '.And.C9_BLCRED<>'10')).And."
				cCondicao	+= cFiltroSC9
			Case MV_PAR01 == 2 //Sem Restricao
				cCondicao	:= cFiltroSC9
			Case MV_PAR01 == 3 //Somente WMS
				cFiltroSC9	:= If(Empty(cFiltroSC9),".T.",cFiltroSC9)
				cCondicao	:= "C9_FILIAL=='"+cFilSC9+"'.And."
				cCondicao	+= "C9_BLEST=='  '.And."
				cCondicao	+= "C9_BLCRED=='  '.And."
				cCondicao	+= "C9_BLWMS=='03'.And."
				cCondicao	+= cFiltroSC9
			OtherWise //Todos os Bloqueios
				cFiltroSC9	:= If(Empty(cFiltroSC9),".T.",cFiltroSC9)
				cCondicao	:= "C9_FILIAL=='"+cFilSC9+"'.And."
				cCondicao	+= "((C9_BLEST<>'  '.And.C9_BLEST<>'10').Or."
				cCondicao	+= "(C9_BLCRED<>'  '.And.C9_BLCRED<>'10').Or."
				cCondicao	+= "C9_BLWMS=='03').And."
				cCondicao	+= cFiltroSC9
		EndCase
		If Empty(cCondicao)
			SC9->(MsSeek(cFilSC9))
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Endereca a funcao de BROWSE                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC9")
		SC9->(DbGoTop())
		If ( Eof() )
			HELP(" ",1,"RECNO")
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Realiza a filtragem somente na função de browse para permitir o usuário ³
			//³incluir filtros customizados na rotina                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			mBrowse( 7, 4,20,74,"SC9",,,,,,aCores,,,,,,,,,,,,cCondicao) //,,"SC9->C9_BLEST+SC9->C9_BLCRED"
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Restaura a integridade da rotina                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC9")
	RetIndex("SC9")
	dbClearFilter()
	aEval(aIndSC9,{|x| Ferase(x[1]+OrdBagExt())})
Else
	HELP(" ",1,"SEMPERM")
Endif
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A450LibAut³ Autor ³ Rosane Luciane Chene  ³ Data ³ 10.01.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina para gerar liberacoes automaticas de cred. e estoque³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA456                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A456LibAut(cAlias)

Local nOpca    := 0
Local aSays    := {}
Local aButtons := {}
Local cPerg    := "LIBAT2"

//Valida a data da LIB para utilização na Telemetria
If FatLibMetric()
	//Telemetria - Modo de Liberação de Pedido, sendo: 1-Manual e 2-Automático
	FwCustomMetrics():setUniqueMetric("MATA456","faturamento-protheus_modo-liberacao-pedido_total", "2", /*dDateSend*/, /*nLapTime*/,"MATA456")
EndIf

If !ctbValiDt( Nil, dDataBase, .T., Nil, Nil, { "FAT002" }, Nil )
	Return Nil
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Utiliza arquivo de liberados para geracao na nota            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAlias)
dbSetOrder(1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ mv_par01 Pedido de          ?                                 ³
//³ mv_par02 Pedido ate         ?                                 ³
//³ mv_par03 Cliente de         ?                                 ³
//³ mv_par04 Cliente ate        ?                                 ³	
//³ mv_par05 Dta Liberacao de   ?                                 ³
//³ mv_par06 Dta Liberacao ate  ?                                 ³	
//³ mv_par07 Quanto ao Estoque  ? Estoque/WMS  WMS                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Pergunte(cPerg,.T.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Nova forma de criar dialogos para processos Batch            ³
	//³ COMPATIVEL COM PROTHEUS (BOF)                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AADD(aSays, OemToAnsi(STR0006))
	AADD(aSays, OemToAnsi(STR0007))
	AADD(aButtons, {5,.T.,{|| Pergunte(cPerg)}})
	AADD(aButtons, {1,.T.,{|o| nOpca := 1, o:oWnd:End()}})
	AADD(aButtons, {2,.T.,{|o| o:oWnd:End()}})
	FormBatch( cCadastro, aSays, aButtons )
	IF nOpcA == 1
		Processa({|lEnd| Ma450Proces(cAlias,.T.,.T.,@lEnd,Nil,MV_PAR07==2)},,,.T.)
	EndIf
EndIf
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A450LibMan³ Autor ³ Rosane Luciane Chene  ³ Data ³ 10.01.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina para gerar liberacoes manuais de cred. e estoque    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA456                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A456LibMan(cAlias)

Local aArea			:= GetArea()
Local aAreaSC9		:= SC9->(GetArea())
Local cPedido		:= ""
Local cAliasSC9		:= "SC9"
Local cQuery		:= ""
Local nOpcA			:= 0
Local nRecSc9		:= 0
Local nTotRec		:= 0
Local lContinua		:= .T.
Local lQuery		:= .F.
Local lHelp			:= .T.
Local lRefresh		:= .T.
Local bValid		:= {|| (cAliasSC9)->(Recno()) <= nTotRec}
Local dLimLib		:= dDataBase
Local lUseOffBal	:= FindFunction("RskIsActive") .And. RskIsActive()
Local cFilSC9		:= ""
Local lMTA456I		:= .F.	//Ponto de Entrada MTA456I ativo?
Local lMTA456P		:= .F.	//Ponto de Entrada MTA456P ativo?
Local lMTA456R		:= .F.	//Ponto de Entrada MTA456R ativo?
Local lMTA456L		:= .F.	//Ponto de Entrada MTA456L ativo?

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tratamento para e-Commerce      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cOrcamto		:= ""								//Obtem o Orcamento original para posicionar na tabela MF5.
Local lECommerce	:= SuperGetMV("MV_LJECOMM",,.F.)
Local lECCia		:= SuperGetMV("MV_LJECOMO",,.F.)	//e-commerce CiaShop
Local lGeraSE1		:= SuperGetMV("MV_LJECOMS",,.F.)	//Gera Contas a Receber?

//Valida a data da LIB para utilização na Telemetria
If FatLibMetric()
	//Telemetria - Modo de Liberação de Pedido, sendo: 1-Manual e 2-Automático
	FwCustomMetrics():setUniqueMetric("MATA456","faturamento-protheus_modo-liberacao-pedido_total", "1", /*dDateSend*/, /*nLapTime*/,"MATA456")
EndIf

If !ctbValiDt( Nil, dDataBase, .T., Nil, Nil, { "FAT002" }, Nil )
	Return .F.
EndIf

dbSelectArea("SC5")
dbSetOrder(1)
MsSeek(xFilial("SC5")+SC9->C9_PEDIDO)
If ( SC5->C5_TIPO$"BD" )
	Help(" ",1,"A450NCRED")
	lContinua := .F.
EndIf

If lContinua .And. SC9->C9_BLCRED == "10" .OR. SC9->C9_BLEST == "10"
	HELP(" ",1,"A450NFISCA")
	lContinua := .F.
EndIf

If lContinua .And. SC9->C9_BLCRED == "  " .And. SC9->C9_BLEST == "  " .And. SC9->C9_BLWMS=="  "
	Help(" ",1,"A450JALIB")
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso os parametros MV_CUSFIFO e MV_FFONLIN estejam habilitados nao sera |
//|permitida a liberacao manual de estoque.                                |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContinua .And. SuperGetMv("MV_CUSFIFO",.F.,.F.) .And. SuperGetMv("MV_FFONLIN",.F.,.F.)
	PutHelp ("PA450FIFO",	{"Quando utilizado o Custo Fifo On-Line"	,"não e permitida a liberação manual do "	,"saldo bloqueado por estoque."	},;
							{"When used the Cost Fifo On-Line and"		,"not allowed the manual release of the"	,"balance blocked for supply."	},;
							{"Cuando utilizado el costo Fifo On-Line"	,"no permitido el lanzamiento manual del"	,"saldo bloqueado por estoque."	},;
							.F.)
	Help(" ",1,"A450FIFO")
	lContinua := .F.
EndIf

/* Integração RISK - TOTVS Mais Negócios
 Os pedidos feitos com pagamento TOTVS Mais Negócios só podem ser 
 liberados pela plataforma RISK */
If lContinua .And. lUseOffBal .And. RskEvlCredit( 1, SC9->C9_PEDIDO )
	If ( SC9->C9_BLCRED == "80" .Or. SC9->C9_BLCRED == "92" )
		Help("",1,"A456LibMan",, STR0039, 1, 0,,,,,,{STR0040})	//"Este item está sendo analisado pela plataforma Risk"###"Aguarde a análise deste item pela plataforma Risk."
		lContinua := .F.
	ElseIf SC9->C9_BLCRED == "90"
		Help("",1,"A456LibMan",, STR0041, 1, 0,,,,,,{STR0042})	//"Este item está bloqueado por regras da plataforma Risk"###"Consulte a plataforma Risk para mais detalhes."
		lContinua := .F.	
	EndIf 	
ElseIf lContinua .And. lUseOffBal .And. RskType() == 2
	If SC9->C9_BLCRED == "91"
		Help("",1,"A456LibMan",, STR0043, 1, 0,,,,,,{STR0042})	//"Este item está bloqueado por falta de limite de crédito da plataforma Risk"###"Consulte a plataforma Risk para mais detalhes."
		lContinua := .F.	
	EndIf
EndIf 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Para e-Commerce ira gravar com bloqueio de credito para Boleto(FI) e sem   ³
//³bloqueio para os demais. Sera liberado com a baixa do titulo.              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If  lContinua .And. lECommerce .And. !( Empty(SC5->C5_ORCRES) ) .And. ChkFile("MF5") .AND. ;
	SC9->(!C9_BLCRED=='  '.And. C9_BLCRED <> '09'.And. C9_BLCRED <> '10'.And. C9_BLCRED <> 'ZZ')
    MF5->( DbSetOrder(1) ) //MF5_FILIAL+MF5_ECALIA+MF5_ECVCHV

    cOrcamto := Posicione("SL1",1,xFilial("SL1")+SC5->C5_ORCRES,"L1_ORCRES")
    
    If  !( Empty(cOrcamto) ) .And.;
	    !( Empty(Posicione("MF5",1,xFilial("MF5")+"SL1"+xFilial("SL1")+cOrcamto,"MF5_ECPEDI")) ) .AND.;
		(Alltrim(SL1->L1_FORMPG) == "FI")
    	Alert(STR0038)   //"Pedido gerado pelo e-Commerce! Será liberado mediante pagamento do Boleto Bancário!"
    	lContinua := .F.
    EndIf
ElseIf lContinua .AND. lECommerce .AND. lECCia .AND. lGeraSE1 .AND. SC5->(ColumnPos("C5_PEDECOM")) > 0 .AND. Val(SC5->C5_PEDECOM) > 0 .AND.;
       SC9->(!C9_BLCRED=='  '.And. C9_BLCRED <> '09'.And. C9_BLCRED <> '10'.And. C9_BLCRED <> 'ZZ')
	Alert(STR0038)   //"Pedido gerado pelo e-Commerce! Será liberado mediante pagamento do Boleto Bancário!"
	lContinua := .F.
EndIf

If lContinua
	lMTA456I		:= ExistBlock("MTA456I")
	lMTA456P		:= ExistBlock("MTA456P")
	lMTA456R		:= ExistBlock("MTA456R")
	lMTA456L		:= ExistBlock("MTA456L")

	dbSelectArea(cAlias)
	nOpcA := a450Tela( @lContinua , .T. , .T., @dLimLib )
	#IFDEF TOP
		IF TcSrvType() == "AS/400"
			dbSelectArea("SC9")
			Set Filter to
			dbSetOrder(1)
			aAreaSC9 := GetArea()
		EndIf
	#ENDIF
	If lMTA456P .AND. ( !Execblock("MTA456P",.F.,.F.,{nOpca}) )
		nOpcA := 0
	EndIf

	/* Integração RISK - TOTVS Mais Negócios
	 Os pedidos feitos com pagamento TOTVS Mais Negócios só podem ser 
	 liberados pela plataforma RISK */
	If lUseOffBal .And. RskCdPgPay( SC9->C9_PEDIDO )	
		nOpcA := 0 
	EndIf
	Do Case
		Case ( nOpcA == 1 )
			a450Grava(1,.T.,.T.)
			If lMTA456I
				ExecBlock("MTA456I",.f.,.f.)
			EndIf
		Case ( nOpcA == 3 )
			a450Grava(2,.T.,.T.)
			If lMTA456R
				ExecBlock("MTA456R",.f.,.f.)
			EndIf
		Case ( nOpcA == 4 )
			cPedido := SC9->C9_PEDIDO
			dbSelectArea("SC9")
			dbSetOrder(1)
			cFilSC9	:= xFilial("SC9")
			#IFDEF TOP
				If .T.//TcSrvType()<>"AS/400"
					lQuery := .T.
					bValid := {|| .T.}

					cAliasSC9 := "A450LIBMAN"
					cQuery := "SELECT C9_FILIAL,C9_PEDIDO,C9_BLCRED,R_E_C_N_O_ SC9RECNO "
					cQuery += "FROM "+RetSqlName("SC9")+" SC9 "
					cQuery += "WHERE SC9.C9_FILIAL = '"+cFilSC9+"' AND "
 					cQuery += "SC9.C9_PEDIDO = '"+cPedido+"' AND "
					cQuery += "(SC9.C9_BLEST <> '  ' OR "
					cQuery += "SC9.C9_BLCRED <> '  ' ) AND "
					cQuery += "SC9.C9_BLCRED NOT IN('10','09') AND "
					cQuery += "SC9.C9_BLEST <> '10' AND "
					cQuery += "SC9.C9_DATALIB <= '"+DTOS(dLimLib)+"' AND "
					cQuery += "SC9.D_E_L_E_T_ = ' ' "

					cQuery := ChangeQuery(cQuery)

					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC9,.T.,.T.)
				Else
			#ENDIF
				MsSeek(cFilial+cPedido)
			#IFDEF TOP
				EndIf
			#ENDIF

			If (cAliasSC9)->(Eof())
				lRefresh := .F.
			EndIf

			nTotRec := SC9->(LastRec())
			While (cAliasSC9)->(! Eof()) .And. (cAliasSC9)->C9_FILIAL == cFilSC9 .And. (cAliasSC9)->C9_PEDIDO == cPedido .And. (cAliasSC9)->(Eval(bValid))
				If lQuery
					SC9->(MsGoto((cAliasSC9)->SC9RECNO))
				Else
					(cAliasSC9)->(dbSkip())
					nRecSc9 := (cAliasSC9)->(Recno())
					(cAliasSC9)->(dbSkip(-1))
				Endif

				If !( (Empty(SC9->C9_BLCRED)  .And. Empty(SC9->C9_BLEST))  .Or.;
				      (SC9->C9_BLCRED=="10" .And. SC9->C9_BLEST=="10") .Or.;
				      SC9->C9_BLCRED=="09" .Or. ;
					  ( lUseOffBal .And. ( SC9->C9_BLCRED $ "80|90|91|92" ) ) )
						a450Grava(1,.T.,.T.,@lHelp)
				EndIf

				IF lMTA456I
					ExecBlock("MTA456I",.f.,.f.)
				EndIf

				If lQuery
					dbSelectArea(cAliasSC9)
					dbSkip()
				Else
					(cAliasSC9)->(MsGoto(nRecSc9))
				Endif
			EndDo
			If lQuery
				dbSelectArea(cAliasSC9)
				dbCloseArea()
				dbSelectArea("SC9")
			EndIf
	EndCase
	If lMTA456L
		Execblock("MTA456L",.F.,.F.,{nOpca})
	EndIf

	// Integrado ao wms devera avaliar as regras para convocação do serviço
	// e disponibilizar os registros de atividades do WMS para convocação
	If IntWms()
		WmsAvalExe()
	EndIf

	If (nOpcA == 1 .Or. nOpcA == 4) .And. lRefresh	//Atualiza o browse no botão OK e Lib. Todos
		If FWSizeFilial() <= 2		//Se não utiliza Gestão de Empresas
			oBrw := GetObjBrow()
			If oBrw:nAt == oBrw:nLen
				oBrw:Goto(oBrw:nAt-1)	//Posiciona na linha anterior para atualizar o browse
			EndIf
		EndIf
	EndIf

EndIf
RestArea(aAreaSC9)
RestArea(aArea)
Return(lContinua)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Marco Bianchi         ³ Data ³01/09/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³	  1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
  
Private aRotina	:= {{STR0004, "A456LibMan", 0, 2, 0, .T.},;	// "Manual"	
               	    {STR0003, "A456LibAut", 0, 2, 0, .T.},;	// "Automática"
               	    {STR0037, "A450Legend", 0, 8, 0, .F.},;	// "Legenda"
               	    {STR0001, "PesqBrw",    0, 1, 0, .F.}}	// "Pesquisar"

If ExistBlock("MTA456MNU")
	ExecBlock("MTA456MNU",.F.,.F.)
EndIf
Return(aRotina)

/*/{Protheus.doc} FatLibMetric
Função utilizada para validar a data da LIB para ser utilizada na Telemetria
@type       Function
@author     CRM/Faturamento
@since      Maio/2021
@version    12.1.27
@return     __lMetric, lógico, se a LIB pode ser utilizada para Telemetria
/*/
Static Function FatLibMetric()

If __lMetric == Nil 
	__lMetric := FWLibVersion() >= "20210517"
EndIf

Return __lMetric
