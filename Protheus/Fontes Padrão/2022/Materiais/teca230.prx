#INCLUDE 'PROTHEUS.CH'
#INCLUDE 'FWMVCDEF.CH'
#Include "TECA230.ch"
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ TECA230  ³ Autor ³ Sergio Silveira       ³ Data ³ 19/11/1999 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Grupos de Cobertura                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ TECA230()                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATEC                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function TECA230()

Local oBrowse := FWmBrowse():New()

oBrowse:SetAlias( 'AAA' )
oBrowse:SetDescription( STR0001 ) // "Grupos de Cobertura"
oBrowse:Activate()

Return NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³MenuDef   ³ Autor ³ Conrado Q. Gomes      ³ Data ³ 08.12.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Definição do aRotina (Menu funcional)                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MenuDef()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ TECA230                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
Local aRotina := {}

ADD OPTION aRotina Title STR0002	Action 'PesqBrw'         OPERATION 1 ACCESS 0 //'Pesquisar'
ADD OPTION aRotina Title STR0003	Action 'VIEWDEF.TECA230' OPERATION 2 ACCESS 0 //'Visualizar'
ADD OPTION aRotina Title STR0004	Action 'VIEWDEF.TECA230' OPERATION 3 ACCESS 0 //'Incluir'
ADD OPTION aRotina Title STR0005	Action 'VIEWDEF.TECA230' OPERATION 4 ACCESS 0 //'Alterar'
ADD OPTION aRotina Title STR0012	Action 'VIEWDEF.TECA230' OPERATION 9 ACCESS 0 //'Copiar'
ADD OPTION aRotina Title STR0006	Action 'VIEWDEF.TECA230' OPERATION 5 ACCESS 0 //'Excluir'

Return aRotina

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³ModelDef  ³ Autor ³Vendas CRM             ³ Data ³18/05/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Definicao do modelo do cadastro de grupo de cobertura (MVC)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ TECA230                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ModelDef()

// Cria a estrutura a ser usada no Modelo de Dados
Local oStruAAA	:= FWFormStruct( 1, 'AAA')
Local oStruAAB	:= FWFormStruct( 1, 'AAB')
Local oStruAAH	:= FWFormStruct( 1, 'AAH')
Local oStruAAQ	:= FWFormStruct( 1, 'AAQ')
Local oStruAAR	:= FWFormStruct( 1, 'AAR')
Local aAAR := {'AAR_CONTRT','AAR_CODPRO','AAR_SALDO','AAR_PERIODO'}	//Array para carregar campos da AAR
Local nI := 0
Local bCommit := {|oMdl| At230Cmt(oMdl)} 	   						// Bloco de commit.
Local bInic :=  {|oModel| At230Inic(oModel)}						// Bloco para inicializador da oStruAAR
Local oModel

oStruAAQ:SetProperty("AAQ_DESCRI", MODEL_FIELD_INIT, {|oModel| If(oModel:GetOperation()!= MODEL_OPERATION_INSERT ,POSICIONE("SB1",1,XFILIAL("SB1")+PADR(AAQ->AAQ_CODPRO,TamSX3("AAQ_CODPRO")[1]," "), "B1_DESC"),"") })

dbSelectArea("SX3")
dbSetOrder(2)

//Adiciona campos da AAR
For nI := 1 to len(aAAR)
	If dbSeek(aAAR[nI])
		oStruAAR:AddField ( Alltrim(SX3->X3_CAMPO), Alltrim(SX3->X3_CAMPO), Alltrim(SX3->X3_CAMPO), SX3->X3_TIPO, SX3->X3_TAMANHO, SX3->X3_DECIMAL, /*bValid*/, /*bWhen*/, /*aValues*/, IIF(Empty(SX3->X3_OBRIGAT),.F.,.T.), /*bInit*/, /*lKey*/, /*lNoUpd*/, .T./*lVirtual*/, /*cValid*/)
	EndIf
End

//Adiciona campo na AAQ
If dbSeek("AAQ_QTDLIB")
	oStruAAQ:AddField ("AAQ_QTIDADE", "AAQ_QTIDADE", "AAQ_QTIDADE", SX3->X3_TIPO, SX3->X3_TAMANHO, SX3->X3_DECIMAL, /*bValid*/, /*bWhen*/, /*aValues*/, IIF(Empty(SX3->X3_OBRIGAT),.F.,.T.), /*bInit*/ , /*lKey*/, /*lNoUpd*/, /*lVirtual*/, /*cValid*/)
EndIf
If dbSeek("AAQ_CONTRT")
	oStruAAQ:AddField (Alltrim(SX3->X3_CAMPO),Alltrim(SX3->X3_CAMPO), Alltrim(SX3->X3_CAMPO), SX3->X3_TIPO, SX3->X3_TAMANHO, SX3->X3_DECIMAL, /*bValid*/, /*bWhen*/, /*aValues*/, IIF(Empty(SX3->X3_OBRIGAT),.F.,.T.), /*bInit*/, /*lKey*/, /*lNoUpd*/, /*lVirtual*/, /*cValid*/)
EndIf

oStruAAQ:SetProperty("AAQ_QTIDADE", MODEL_FIELD_INIT,{|oModel| If(oModel:GetOperation()!= MODEL_OPERATION_INSERT,AAQ->AAQ_QTDLIB,0)})

// Cria o objeto do Modelo de Dados
oModel := MPFormModel():New( 'TECA230M', /*bPreValidacao*/, {|oMdl| At230TOK(oMdl) }, bCommit, /*bCancel*/ )

// Adiciona ao modelo uma estrutura de formulário de edição por campo
oModel:AddFields( 'AAAMASTER', /*cOwner*/, oStruAAA )

// Adiciona ao modelo uma estrutura de formulário de edição por grid
oModel:AddGrid( 'AABDETAIL', 'AAAMASTER', oStruAAB, /*bLinePre*/, {|oMdl|At230VlLin(oMdl)}, /*bPreVal*/, /*bPosVal*/, /*BLoad*/ )
oModel:AddGrid( 'AAHDETAIL', 'AABDETAIL', oStruAAH, /*bLinePre*/, /*linok*/, /*bPreVal*/, /*bPosVal*/, /*BLoad*/ )
oModel:AddGrid( 'AAQDETAIL', 'AAHDETAIL', oStruAAQ, /*bLinePre*/, {|oMdl|At230VlLin(oMdl)}, /*bPreVal*/, /*bPosVal*/, /*BLoad*/ )
oModel:AddGrid( 'AARDETAIL', 'AAQDETAIL', oStruAAR, /*bLinePre*/, {|oMdl|At230VlLin(oMdl)}, /*bPreVal*/, /*bPosVal*/, /*BLoad*/ )


// Faz relaciomaneto entre os compomentes do model
oModel:SetRelation( 'AABDETAIL', { { 'AAB_FILIAL', 'xFilial( "AAB" )' }, { 'AAB_CODGRP', 'AAA_CODGRP' } }, AAB->( IndexKey( 1 ) ) )
oModel:SetRelation( 'AAHDETAIL', { { 'AAH_FILIAL', 'xFilial( "AAH" )' }, { 'AAH_CODGRP', 'AAA_CODGRP' } }, AAH->( IndexKey( 5 ) ) )
oModel:SetRelation( 'AAQDETAIL', { { 'AAQ_FILIAL', 'xFilial( "AAQ" )' }, { 'AAQ_CONTRT', 'AAH_CONTRT' } ,{ 'AAQ_CODPRO', 'AAB_CODPRO' } }, AAQ->( IndexKey( 1 ) ) )
oModel:SetRelation( 'AARDETAIL', { { 'AAR_FILIAL', 'xFilial( "AAR" )' }, { 'AAR_CONTRT', 'AAQ_CONTRT' } ,{ 'AAR_CODPRO', 'AAQ_CODPRO' } }, AAR->( IndexKey( 1 ) ) )

// Liga o controle de nao repeticao de linha
oModel:GetModel( 'AABDETAIL' ):SetUniqueLine( { 'AAB_TIPO','AAB_GRUPO','AAB_CODPRO' } )

oModel:GetModel( 'AAHDETAIL' ):SetUniqueLine( { 'AAH_CONTRT' } )
oModel:GetModel( 'AAQDETAIL' ):SetUniqueLine( { 'AAQ_CODPRO' } )
oModel:GetModel( 'AARDETAIL' ):SetUniqueLine( { 'AAR_CODPRO' , 'AAR_PERIOD' } )


// Não permite alteracao no getdados
oModel:GetModel( 'AAHDETAIL' ):SetOnlyView  ( .T. )
oModel:GetModel( 'AARDETAIL' ):SetOnlyView  ( .T. )

// permita inclusão e/ou alteração em seus dados, porém, que estes dados não sejam gravados
oModel:GetModel( 'AARDETAIL' ):SetOnlyQuery ( .T. )
oModel:GetModel( 'AAHDETAIL' ):SetOnlyQuery ( .T. )
oModel:GetModel( 'AAQDETAIL' ):SetOnlyQuery ( .T. )

// Inicializador da AAR
oModel:SetActivate(bInic)

// Permite que não tenha nenhuma linha no grid
oModel:GetModel( 'AAHDETAIL' ):SetOptional( .T. )
oModel:GetModel( 'AAQDETAIL' ):SetOptional( .T. )
oModel:GetModel( 'AARDETAIL' ):SetOptional( .T. )

oModel:GetModel( 'AABDETAIL' ):SetUseOldGrid()
oModel:GetModel( 'AAHDETAIL' ):SetUseOldGrid()
oModel:GetModel( 'AAQDETAIL' ):SetUseOldGrid()
oModel:GetModel( 'AARDETAIL' ):SetUseOldGrid()

// Adiciona a descricao do Modelo de Dados
oModel:SetDescription( STR0001 ) // "Grupos de Cobertura"

oModel:SetVldActivate({|oModel| At230VlAct(oModel) })

// Adiciona a descricao do Componente do Modelo de Dados
oModel:GetModel( 'AAAMASTER' ):SetDescription( STR0001 ) //'Grupo de cobertura'
oModel:GetModel( 'AABDETAIL' ):SetDescription( STR0022 ) //'Itens do grupo de cobertura'
oModel:GetModel( 'AAHDETAIL' ):SetDescription( STR0027 ) //Contratos Relacionados
oModel:GetModel( 'AAQDETAIL' ):SetDescription ( STR0023 )   //Quantidade Contratada
oModel:GetModel( 'AARDETAIL' ):SetDescription ( STR0024 ) //Saldos por Período

Return oModel

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³ViewDef   ³ Autor ³Vendas CRM             ³ Data ³18/05/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Definicao do view para cadastro de grupo de cobertura (MVC)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ TECA230                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ViewDef()

Local oStruAAA	:= FWFormStruct( 2, 'AAA' )
Local oStruAAB	:= FWFormStruct( 2, 'AAB' )
Local oStruAAQ	:= FWFormStruct( 2, 'AAQ' )
Local oStruAAR	:= FWFormStruct( 2, 'AAR' )
Local oStruAAH	:= FWFormStruct( 2, 'AAH' )
Local oModel	:= FWLoadModel( 'TECA230' )
Local oView		:= FWFormView():New()
Local nOperation:= oModel:getOperation()
Local aAAR := {'AAR_CONTRT','AAR_CODPRO','AAR_SALDO','AAR_PERIODO'}
Local nI := 0

// Define qual o Modelo de dados será utilizado
oView:SetModel( oModel )

//Adiciona campos na AAR
dbSelectArea("SX3")
dbSetOrder(2)
For nI := 1 to len(aAAR)
	If dbSeek(aAAR[nI])
		oStruAAR:AddField( allTrim(SX3->X3_CAMPO), SX3->X3_ORDEM, SX3->X3_TITULO, SX3->X3_DESCRIC, /*aHelp*/, SX3->X3_TIPO, SX3->X3_PICTURE, /*bPictVar*/, SX3->X3_F3, .F., /*cFolder*/, /*cGroup*/, /*aComboValues*/, /*nMaxLenCombo*/,/* cIniBrow*/, /*lVirtual*/,/* cPictVar*/, /*lInsertLine*/ )
	EndIf
End
//Adiciona campo na AAQ
If dbSeek("AAQ_QTDLIB")
	oStruAAQ:AddField( "AAQ_QTIDADE", '5', "Quantidade", SX3->X3_DESCRIC, /*aHelp*/, SX3->X3_TIPO, SX3->X3_PICTURE, /*bPictVar*/, SX3->X3_F3, .F., /*cFolder*/, /*cGroup*/, /*aComboValues*/, /*nMaxLenCombo*/,/* cIniBrow*/, /*lVirtual*/,/* cPictVar*/, /*lInsertLine*/ )
EndIf
If dbSeek("AAQ_CONTRT")
	oStruAAQ:AddField(allTrim(SX3->X3_CAMPO), SX3->X3_ORDEM, SX3->X3_TITULO, SX3->X3_DESCRIC, /*aHelp*/, SX3->X3_TIPO, SX3->X3_PICTURE, /*bPictVar*/, SX3->X3_F3, .F., /*cFolder*/, /*cGroup*/, /*aComboValues*/, /*nMaxLenCombo*/,/* cIniBrow*/, /*lVirtual*/,/* cPictVar*/, /*lInsertLine*/ )
EndIf


//Adiciona no nosso View um controle do tipo FormFields(antiga enchoice)
oView:AddField( 'VIEW_AAA', oStruAAA, 'AAAMASTER' )

//Adiciona no nosso View um controle do tipo FormGrid(antiga newgetdados)
oView:AddGrid(  'VIEW_AAB', oStruAAB, 'AABDETAIL' )
oView:AddGrid(  'VIEW_AAH', oStruAAH, 'AAHDETAIL' )
oView:AddGrid(  'VIEW_AAQ', oStruAAQ, 'AAQDETAIL' )
oView:AddGrid(  'VIEW_AAR', oStruAAR, 'AARDETAIL' )

// Criar um "box" horizontal para receber algum elemento da view
oView:CreateHorizontalBox( 'SUPERIOR', 20 )
oView:CreateHorizontalBox( 'INFERIOR', 30 )
oView:CreateHorizontalBox( 'INFERI_2', 0 )
oView:CreateHorizontalBox( 'INFERI_3', 25 )
oView:CreateHorizontalBox( 'INFERI_4', 25 )

// Relaciona o ID da View com o "box" para exibicao
oView:SetOwnerView( 'VIEW_AAA', 'SUPERIOR' )
oView:SetOwnerView( 'VIEW_AAB', 'INFERIOR' )

oView:SetOwnerView( 'VIEW_AAH', 'INFERI_2' )
oView:SetOwnerView( 'VIEW_AAQ', 'INFERI_3' )
oView:SetOwnerView( 'VIEW_AAR', 'INFERI_4' )


// Define campos que terao Auto Incremento
oView:AddIncrementField( 'VIEW_AAB', 'AAB_ITEM' )
oView:AddIncrementField( 'VIEW_AAQ', 'AAQ_ITEM' )
oView:AddIncrementField( 'VIEW_AAR', 'AAR_ITEM' )


// Botao da barra de botoes
oView:AddUserButton( STR0017, 'BMPORD1', { |oView| At230Ordem(oView) },,,{MODEL_OPERATION_INSERT,MODEL_OPERATION_UPDATE} )

// Identificacao do componente
oView:EnableTitleView('VIEW_AAB',STR0022)  					//'Itens do grupo de cobertura'
oView:EnableTitleView('VIEW_AAH',STR0027 ) 	//Contratos Relacionados
oView:EnableTitleView('VIEW_AAQ',STR0023 ) 	//Quantidade Contratada
oView:EnableTitleView('VIEW_AAR',STR0024 )		//Saldos por Período

// Campos que não pode ser editados.
oStruAAQ:SetProperty( 'AAQ_QTDLIB' , MVC_VIEW_CANCHANGE, .F.)
oStruAAQ:SetProperty( 'AAQ_QTIDADE' , MVC_VIEW_CANCHANGE, .T.)
Return oView

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³At230Valid³ Autor ³ Sergio Silveira       ³ Data ³ 27/09/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Validacao dos campos da GetDados                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1 := At230Valid( )                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 -> Novo Plano / ExpO1 -> Objeto botao confirma       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Validacao OK                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ TECA230                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function At230Valid( )

LOCAL cVar      := AllTrim( ReadVar() )
LOCAL cConteudo := &( cVar )
LOCAL cProdFill := Space( Len( CriaVar( "AAB_CODPRO" ) ) )
LOCAL cGrupFill := Space( Len( CriaVar( "AAB_GRUPO"  ) ) )
LOCAL lRet      := .F.

Do Case
Case "AAB_TIPO" $ cVar
	GDFieldPut( "AAB_GRUPO" , cGrupFill )
	GDFieldPut( "AAB_CODPRO", cProdFill )
	lRet := .T.

Case "AAB_GRUPO" $ cVar
	SBM->( dbSetOrder( 1 ) )
	If SBM->( DbSeek( xFilial( "SBM" ) + cConteudo ) )
		lRet := .T.
	Else
		lRet := .F.
		Help( " ", 1, "REGNOIS" )
	EndIf

Case "AAB_CODPRO" $ cVar

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava o produto, o grupo e o tipo ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	SB1->( dbSetOrder( 1 ) )
	If SB1->( dbSeek( xFilial( "SB1" ) + cConteudo ) )
		lRet := SB1->(RegistroOk("SB1"))
		If lRet
			If Empty( SB1->B1_TIPO ) .Or. Empty( SB1->B1_GRUPO )
				Help( " ", 1, "AT230PROD" ) // Para utilizacao do produto e necessario
				lRet := .F. 		        // o preenchimento do grupo e tipo
			Else
				GDFieldPut( "AAB_TIPO"  , SB1->B1_TIPO  )
				GDFieldPut( "AAB_GRUPO" , SB1->B1_GRUPO )
				lRet := .T.
			EndIf
		EndIf
	EndIf

Case "AAB_CODSER" $ cVar
	lRet := ExistCpo( "AA5", cConteudo )
EndCase
Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³At230VlAct³ Autor ³Vendas CRM             ³ Data ³18/05/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida a execucao de uma acao no cadastro                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1 - Objeto do Modelo MVC                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ TECA230                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function At230VlAct(oModel)

Local lRet 			:= .T.
Local nOperation	:= oModel:getOperation()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Nao permite a exlusão caso tenha algum contrato vinculado ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOperation == 5

	AAH->(dbSetOrder(5))

	If AAH->(dbSeek(xFilial("AAA")+AAA->AAA_CODGRP))
		Help( ,, 'HELP',, STR0018, 1, 0) //"O grupo de cobertura não poderá ser excluído, pois existe(m) contrato(s) vinculado."
		lRet := .F.
	EndIf

	AB9->(dbSetOrder(7))
	ABA->(dbSetOrder(5))
	ABC->(dbSetOrder(4))

	If lRet .AND. (AB9->(dbSeek(xFilial("AB9")+AAA->AAA_CODGRP)) .OR.;
		ABA->(dbSeek(xFilial("ABA")+AAA->AAA_CODGRP)) .OR.;
		ABC->(dbSeek(xFilial("ABC")+AAA->AAA_CODGRP)) )

		Help( ,, 'HELP',, STR0021, 1, 0) //"O grupo de cobertura não poderá ser excluído, pois existe(m) apontamento(s) vinculado."
		lRet := .F.

	EndIf

EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³At230VlLin³ Autor ³ Sergio Silveira       ³ Data ³ 24/11/1999 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Validacao de linha da grid do modelo                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 - Modelo da grid                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATEC                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function At230VlLin(oModelGrid)

Local lRet		:= .T.
Local oModel	:= oModelGrid:GetModel( 'AABDETAIL' )
Local nOperation:= oModel:GetOperation()
Local cGrupo	:= FwFldGet( 'AAB_GRUPO' )
Local cTipo		:= FwFldGet( 'AAB_TIPO' )
Local cCodPro	:= FwFldGet( 'AAB_CODPRO' )
Local cServico	:= FwFldGet( 'AAB_CODSER' )

If nOperation == 3 .OR. nOperation == 4
	If !oModelGrid:IsDeleted()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Permite passar a linha se for a primeira linha zerada ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !( Empty( cTipo ) .And. Empty( cGrupo ) .And. Empty( cCodPro ) .And. ;
				Empty( cServico ) .And. oModelGrid:GetQtdLine() == 1 )

			If ( Empty( cTipo ) .And. Empty( cGrupo ) ;
				.And. Empty( cCodPro ) ) .Or. Empty(cServico)
				lRet := .F.
				Help( " ", 1, "OBRIGAT" )
			EndIf
			If lRet
				If Empty( cTipo ) .And. Empty( cCodPro ) .And. !Empty( cGrupo )
					Help( " ", 1, "AT230TIPGR" ) // Nao e permitida a definicao de grupo sem a definicao de tipo
					lRet := .F.
				EndIf
			EndIf
		EndIf
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ At230TOk ³ Autor ³ Sergio Silveira       ³ Data ³ 24/11/1999 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Validacao do modelo                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 - Modelo a ser validado                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Linha OK                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATEC                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function At230TOK(oModel)

LOCAL aArea      := GetArea()
Local aLinhas	 := {}
LOCAL aErro      := { STR0009,STR0010 }  // "Item duplicado na estrutura."###"Item possui o codigo de servico do Pai"
LOCAL aStruct1   := {}
LOCAL aStruct2   := {}
LOCAL aStruct3   := {}

LOCAL oTempTbl1 := NIL
LOCAL oTempTbl2 := NIL
LOCAL oTempTbl3 := NIL

Local oModelAAB  := oModel:GetModel( 'AABDETAIL' )

LOCAL cIndexKey  := ""
LOCAL cArqTrab1  := ""
LOCAL cArqTrab2  := ""
LOCAL cArqTrab3  := ""
LOCAL cCodSrMast := ""
LOCAL cCodSrv1   := ""
LOCAL cCodSrv2   := ""

LOCAL lRet       := .T.
LOCAL lErro      := .F.
LOCAL lVazio     := .F.

LOCAL nPosTipo   := 1
LOCAL nPosGrupo  := 2
LOCAL nPosProd   := 3
LOCAL nPosCodSer := 4
LOCAL nLoop
LOCAL nErro

//Monta o array aLinhas, para evitar o uso do aCols
For nLoop := 1 to oModelAAB:GetQtdLine()
	AAdd(aLinhas,{	FwFldGet('AAB_TIPO',nLoop)	,;
					FwFldGet('AAB_GRUPO',nLoop)	,;
					FwFldGet('AAB_CODPRO',nLoop),;
					FwFldGet('AAB_CODSER',nLoop)})
Next

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o aCols nao foi preenchido ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If oModelAAB:GetQtdLine() == 1 .And. ( Empty( FwFldGet('AAB_TIPO',1) ) .And. Empty( FwFldGet('AAB_GRUPO',1) ) ;
		.And. Empty( FwFldGet('AAB_CODPRO',1)  ) .And. Empty( FwFldGet('AAB_CODSER',1) ) )
	lVazio := .T.
Endif


If !lVazio

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ordena o acols por tipo / grupo / produto³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	ASort( aLinhas,,, { |x,y| y[ nPosTipo ] + y[ nPosGrupo ] + y[ nPosProd ] > ;
			x[ nPosTipo ] + x[ nPosGrupo ] + x[ nPosProd ] } )

	nAnt := 1

	If lRet

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se existem registros duplicados ou em branco ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		For nLoop := 1 to Len( aLinhas )

			If !oModelAAB:IsDeleted( nLoop )

				If ( Empty( aLinhas[ nLoop, nPosTipo ] ) .And. Empty( aLinhas[ nLoop, nPosGrupo ] ) ;
					.And. Empty( aLinhas[ nLoop, nPosProd ] ) )  ;
					.Or.  Empty( aLinhas[ nLoop, nPosCodSer ] )

					Help( " ", 1, "OBRIGAT" )
					lRet := .F.
					Exit

				EndIf

			EndIf

			If nLoop > 1 .And. !oModelAAB:IsDeleted( nLoop )  .And. !oModelAAB:IsDeleted( nAnt )

				If aLinhas[ nLoop, nPosTipo ] + aLinhas[ nLoop, nPosGrupo ] + aLinhas[ nLoop, nPosProd ] == ;
					aLinhas[ nAnt, nPosTipo  ] + aLinhas[ nAnt, nPosGrupo  ] + aLinhas[ nAnt, nPosProd ]
					cChaveErro := aLinhas[ nAnt, nPosTipo ]  + aLinhas[ nAnt, nPosGrupo ]  + aLinhas[ nAnt, nPosProd ]
					lErro := .T.
					nErro := 1
					Exit
				EndIf

				nAnt := nLoop

			EndIf

		Next nLoop

		If !lErro

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Cria os arquivos de trabalho³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			aStruct1 := {}

			cIndice  := "TR1_TIPO"

			AAdd( aStruct1, { "TR1_TIPO"    , "C",  2, 0 } )
			AAdd( aStruct1, { "TR1_CODSER"  , "C",  6, 0 } )
			AAdd( aStruct1, { "TR1_AUX"     , "C",  1, 0 } )

			oTempTbl1 := FWTemporaryTable():New( "TRAB1" )
			oTempTbl1:SetFields( aStruct1 )
			oTempTbl1:AddIndex("indice1", {"TR1_TIPO"} )
			oTempTbl1:Create()

			aStruct2 := {}

			AAdd( aStruct2, { "TR2_TIPO"    , "C",  2, 0 } )
			AAdd( aStruct2, { "TR2_GRUPO"   , "C",  4, 0 } )
			AAdd( aStruct2, { "TR2_CODSER"  , "C",  6, 0 } )
			AAdd( aStruct2, { "TR2_AUX"     , "C",  1, 0 } )

			oTempTbl2 := FWTemporaryTable():New( "TRAB2" )
			oTempTbl2:SetFields( aStruct2 )
			oTempTbl2:AddIndex("indice2", {"TR2_TIPO","TR2_GRUPO"} )
			oTempTbl2:Create()

			aStruct3 := {}

			AAdd( aStruct3, { "TR3_TIPO"    , "C",  2, 0 } )
			AAdd( aStruct3, { "TR3_GRUPO"   , "C",  4, 0 } )
			AAdd( aStruct3, { "TR3_PROD"    , "C", 15, 0 } )
			AAdd( aStruct3, { "TR3_CODSER"  , "C",  6, 0 } )

			oTempTbl3 := FWTemporaryTable():New( "TRAB3" )
			oTempTbl3:SetFields( aStruct3 )
			oTempTbl3:AddIndex("indice3", {"TR3_TIPO","TR3_GRUPO","TR3_PROD"} )
			oTempTbl3:Create()


			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Alimenta os arquivos de trabalho³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			For nLoop := 1 To Len( aLinhas )

				If !oModelAAB:IsDeleted( nLoop )

					cProd   := aLinhas[ nLoop, nPosProd   ]
					cGrupo  := aLinhas[ nLoop, nPosGrupo  ]
					cTipo   := aLinhas[ nLoop, nPosTipo   ]
					cCodSer := aLinhas[ nLoop, nPosCodSer ]

					Do Case
					Case Empty( cProd ) .And. Empty( cGrupo )  .And. !Empty( cTipo )

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Alimenta o arquivo de tipos ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						RecLock( "TRAB1", .T. )

						TRAB1->TR1_TIPO    := cTipo
						TRAB1->TR1_CODSER  := cCodSer

						MsUnLock()

					Case Empty( cProd ) .And. !Empty( cGrupo )  .And. !Empty( cTipo )

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Alimenta o arquivo de Grupos ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						RecLock( "TRAB2", .T. )

						TRAB2->TR2_TIPO    := cTipo
						TRAB2->TR2_GRUPO   := cGrupo
						TRAB2->TR2_CODSER  := cCodSer

						MsUnLock()

					Case !Empty( cProd ) .And. !Empty( cGrupo ) .And. !Empty( cTipo )

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Alimenta o arquivo de Produtos ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						RecLock( "TRAB3", .T. )

						TRAB3->TR3_TIPO    := cTipo
						TRAB3->TR3_GRUPO   := cGrupo
						TRAB3->TR3_PROD    := cGrupo
						TRAB3->TR3_CODSER  := cCodSer

						MsUnLock()

					EndCase

				EndIf

			Next nLoop

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Cria os grupos auxiliares ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			TRAB3->( dbGoTop() )

			While !TRAB3->( Eof() )

				If !TRAB2->( dbSeek( TRAB3->TR3_TIPO + TRAB3->TR3_GRUPO ) )

					RecLock( "TRAB2", .T. )

					TRAB2->TR2_TIPO    := TRAB3->TR3_TIPO
					TRAB2->TR2_GRUPO   := TRAB3->TR3_GRUPO
					TRAB2->TR2_CODSER  := TRAB3->TR3_CODSER
					TRAB2->TR2_AUX     := "S"

					TRAB2->( MsUnlock() )

				EndIf

				TRAB3->( dbSkip() )

			EndDo

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Cria os Tipos auxiliares ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			TRAB2->( dbGoTop() )

			While !TRAB2->( Eof() )

				If !TRAB1->( dbSeek( TRAB2->TR2_TIPO ) )

					RecLock( "TRAB1", .T. )

					TRAB1->TR1_TIPO    := TRAB2->TR2_TIPO
					TRAB1->TR1_CODSER  := TRAB2->TR2_CODSER
					TRAB1->TR1_AUX     := "S"

					TRAB1->( MsUnlock() )

				EndIf

				TRAB2->( dbSkip() )

			EndDo

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Efetua a validacao ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			TRAB1->( dbGoTop() )

			lErro := .F.

			cCodSrMast := M->AAA_CODSER

			While !TRAB1->( Eof() ) .And. !lErro

				If cCodSrMast == TRAB1->TR1_CODSER
					lErro      := .T.
					nErro      := 2
					cChaveErro := TRAB1->TR1_TIPO

				EndIf

				cSeekTRAB2 := TRAB1->TR1_TIPO


				If TRAB1->TR1_AUX == "S"

					cCodSrv1 := cCodSrMast
				Else

					cCodSrv1 := TRAB1->TR1_CODSER
				EndIf

				If TRAB2->( dbSeek( cSeekTRAB2 ) )

					While !TRAB2->( Eof() ) .And. TRAB2->TR2_TIPO == cSeekTRAB2 .And. !lErro

						If  cCodSrv1 == TRAB2->TR2_CODSER
							lErro      := .T.
							nErro      := 2
							cChaveErro := TRAB2->TR2_TIPO + TRAB2->TR2_GRUPO
						Else

							cSeekTRAB3 := TRAB2->TR2_TIPO + TRAB2->TR2_GRUPO

							If TRAB2->TR2_AUX == "S"
								cCodSrv2 := cCodSrv1
							Else
								cCodSrv2 := TRAB2->TR2_CODSER
							EndIf

							If TRAB3->( dbSeek( cSeekTRAB3 ) )

								While !TRAB3->( Eof() ) .And. TRAB3->TR3_TIPO + TRAB3->TR3_GRUPO == ;
											cSeekTRAB3 .And. !lErro

									If cCodSrv2 == TRAB3->TR3_CODSER
										lErro      := .T.
										nErro      := 2
										cChaveErro := TRAB3->TR3_TIPO + TRAB3->TR3_GRUPO + TRAB3->TR3_PROD
									EndIf

									TRAB3->( dbSkip() )

								EndDo

							EndIf

						EndIf

						TRAB2->( dbSkip() )

					EndDo

				EndIf

				TRAB1->( dbSkip() )

			EndDo

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Fecha e apaga as areas de trabalho ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			oTempTbl1:Delete()
			oTempTbl2:Delete()
			oTempTbl3:Delete()
		EndIf

	EndIf

	If lErro
		If	! Empty(cChaveErro)
			MsgAlert( STR0011 + cChaveErro + ". " + aErro[ nErro ] ) // "Existe uma inconsistencia em "
		EndIf
		lRet := .F.
	EndIf

EndIf

// Fecha as tabelas temporárias e destrói os objetos GsTmpTable criados
If	Type('oGsTmpTb01') == "O"
	If	oGsTmpTb01:GetProp("ERROR")
		oGsTmpTb01:ShowErro()
		lRet := .F.
	EndIf
	oGsTmpTb01:Close()
	TecDestroy(oGsTmpTb01)
EndIf
If	Type('oGsTmpTb02') == "O"
	If oGsTmpTb02:GetProp("ERROR")
		oGsTmpTb02:ShowErro()
		lRet := .F.
	EndIf
	oGsTmpTb02:Close()
	TecDestroy(oGsTmpTb02)
EndIf
If	Type('oGsTmpTb03') == "O"
	If oGsTmpTb03:GetProp("ERROR")
		oGsTmpTb03:ShowErro()
		lRet := .F.
	EndIf
	oGsTmpTb03:Close()
	TecDestroy(oGsTmpTb03)
EndIf

RestArea( aArea )
Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³At230Ordem³ Autor ³ Sergio Silveira       ³ Data ³ 26/11/1999 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Ordena o aCols da estrutura                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ At230Ordem( ExpO1 )                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 -> Objeto GetDados                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Linha OK                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATEC                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function At230Ordem( oView )

Local lContinua	:= .T.
Local oModelAAB	:= oView:GetModel( 'AABDETAIL' )
Local nTotal	:= oModelAAB:GetQtdLine()
Local nLin		:= 0

If nTotal > 1
	While lContinua
		lContinua := .F.
		For nLin := 1 to nTotal-1
			If (FwFldGet("AAB_TIPO",nLin)+FwFldGet("AAB_GRUPO",nLin)+FwFldGet("AAB_CODPRO",nLin)) >;
				(FwFldGet("AAB_TIPO",nLin+1)+FwFldGet("AAB_GRUPO",nLin+1)+FwFldGet("AAB_CODPRO",nLin+1))
				oModelAAB:LineShift(nLin,nLin+1)
				lContinua := .T.
			EndIf
		Next nLin
	End
EndIf
Return .T.


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³At230GpAtv³ Autor ³ Vendas CRM            ³ Data ³24/01/2012³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Não permite ativacao do grupo de cobertura cancelado.      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ At230GpAtv()                             		          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL: Verdadeiro / Falso                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ TECA230                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function At230GpAtv()

Local oMdl 	 	 := FWModelActive()							// Carrega o model corrente.
Local nOperation := oMdl:GetOperation()						// Operacao corrente.
Local oMdlAAA 	 := oMdl:GetModel('AAAMASTER')				// Modelo de dados do cabecalho AAA.
Local cOpcGpo    := oMdlAAA:GetValue('AAA_STATUS')			// Opcao selecionada no campo AAA_STATUS.
Local lRet		 := .T.										// Retorno da validacao.

If nOperation == 4

	Do Case
		Case ( AAA->AAA_STATUS == '2' .AND. cOpcGpo == '1' )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³	 Problema: Não será possível ativar um grupo de cobertura cancelado. ³
			//³	 Solucao: Inclua um novo grupo de cobertura.               	         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Help("",1,"GPCOBCAN")
			lRet := .F.

   		Case ( AAA->AAA_STATUS == '2' .AND. cOpcGpo <> '2' )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³	 Problema: Não será possível alterar o status de um grupo de cobertura cancelado. ³
			//³	 Solucao: Inclua um novo grupo de cobertura.									  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Help("",1,"STSGPCOB")
			lRet := .F.
	EndCase

EndIf
Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³At230Cmt	ºAutor  ³Vendas & CRM        º Data ³  06/05/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Commit													  º±±
±±º          ³ 										                      º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ At230Cmt( ExpO1 )                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 -> Objeto GetDados                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ºUso       ³ AP                                                         º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function At230Cmt(oMdl)

Local oMdlAAB		:= oMdl:GetModel("AABDETAIL")			// Obtem o modelo de dados AABMASTER.
Local oMdlAAQ		:= oMdl:GetModel("AAQDETAIL")			// Obtem o modelo de dados AAQMASTER.
Local oMdlAAR 	:= oMdl:GetModel("AARDETAIL")			// Obtem o modelo de dados AARMASTER.
Local nContrat 	:= oMdlAAQ:GetValue("AAQ_CONTRT")		// No. Contratoa
Local nX			:= 0
Local cDoc			:= ""									   // Num. pedido de venda
local aCabec 		:= {}                                 // Cabecalho SC5
local aItens 		:= {}                                 // Itens SC6
Local aLinha 		:= {}                                 // Item SC6
Local cOperation 	:= cValToChar(oMdlAAQ:GetOperation())	// Numero da operacao.
Local lResp		:= .F.										// Retorno da pergunta de gerar pedido
Local aSaveLines 	:= FWSaveRows()
Local nDif			:= 0										//diferença
Local lRet			:= .T.

PRIVATE lMsErroAuto := .F.

If !Empty(oMdlAAQ:GetValue("AAQ_CODPRO"))

	For nX := 1 To oMdlAAB:length(.T.)
		oMdlAAB:GoLine( nX )
		If oMdlAAQ:GetValue("AAQ_QTIDADE")- oMdlAAQ:GetValue("AAQ_QTDLIB") > 0
			nDif += oMdlAAQ:GetValue("AAQ_QTIDADE")- oMdlAAQ:GetValue("AAQ_QTDLIB")
		EndIf
	Next

	If cOperation <> "3" .And. (nDif>0)
		lResp := MsgNoYes ( STR0025,STR0026 ) //"Deseja gerar um pedido da diferença?"#"Gerar pedido de venda"
	EndIf

	If lResp

		lRet := At230VldTS(oMdlAAB,oMdlAAQ)

		If lRet
			dbSelectArea("AAH")
			dbSetOrder(1)

			//Cabecalho do Pedido
			If AAH->(dbSeek(xFilial("AAH")+oMdlAAQ:GetValue("AAQ_CONTRT")))
				cDoc := GetSxeNum("SC5","C5_NUM")
				RollBAckSx8()
			   	aCabec := {}
			   	aItens := {}
				aadd(aCabec,{"C5_NUM",		cDoc,				Nil})
				aadd(aCabec,{"C5_TIPO" ,	"N",				Nil})
				aadd(aCabec,{"C5_CLIENTE",	AAH->AAH_CODCLI,	Nil})
				aadd(aCabec,{"C5_LOJACLI",	AAH->AAH_LOJA,		Nil})
				aadd(aCabec,{"C5_LOJAENT",	AAH->AAH_LOJA,		Nil})
				aadd(aCabec,{"C5_CONDPAG",	AAH->AAH_CONPAG,	Nil})

				// Itens do pedido
				For nX := 1 To oMdlAAB:length(.T.)
					oMdlAAB:GoLine( nX )
					nDif := oMdlAAQ:GetValue("AAQ_QTIDADE")- oMdlAAQ:GetValue("AAQ_QTDLIB")
					If nDif > 0
						If SB1->(dbSeek(xFilial("SB1")+PADR(oMdlAAB:GetValue("AAB_CODPRO"), TamSX3("AAB_CODPRO")[1]," ")))
					  	  	aLinha := {}
					  		aadd(aLinha,{"C6_ITEM",		StrZero(nX,2),								Nil})
				   	  		aadd(aLinha,{"C6_PRODUTO",	SB1->B1_COD,								Nil})
					  		aadd(aLinha,{"C6_QTDVEN",	nDif,										Nil})
				   	   		aadd(aLinha,{"C6_PRCVEN",	SB1->B1_PRV1,								Nil})
				   	  		aadd(aLinha,{"C6_PRUNIT",	SB1->B1_PRV1,								Nil})
				   	  		aadd(aLinha,{"C6_TES",		SB1->B1_TS,									Nil})
				   	  		aadd(aLinha,{"C6_CONTRT",	oMdlAAQ:GetValue("AAQ_CONTRT"),				Nil})
				   	   		aadd(aItens,aLinha)

			   	   		EndIf
					EndIf
				   	Next

			EndIf
		 	FwRestRows(aSaveLines,oMdlAAB)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Chamada Rotina automatica MSExecAuto³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		   	MSExecAuto( {|X,Y| MATA410(X,Y)}, aCabec,aItens,3)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se houve erro durante a execucao e mostra³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lMsErroAuto
				MostraErro()
				MsgAlert(STR0029) //"Erro ao gerar o pedido de venda"
			EndIf
		EndIf
	EndIf

EndIf

If !lMsErroAuto .AND. lRet
	FWFormCommit(oMdl,{|oMdl,cId,cAlias|At230Before(oMdl,cId,cAlias,cOperation,oMdlAAB,oMdlAAQ,oMdlAAR)},Nil,Nil)
EndIf
Return( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ	»±±
±±ºPrograma  ³At230BeforeºAutor  ³Vendas & CRM        º Data ³  06/05/13 	º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ	¹±±
±±ºDesc.     ³ Faz o commit no model e Atualiza a AAR 					   	º±±
±±º          ³                        									       º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ	´±±
±±³Sintaxe   ³ At230Before( ExpO1,ExpO2,ExpO3,ExpO4,ExpO5,ExpO6,ExpO7 )  	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ	´±±
±±³Parametros³ ExpO1 -> Objeto GetDados                                  	³±±
±±³			 ³ ExpO2 -> Id				                                   ³±±
±±³			 ³ ExpO3 -> Alias			                                      	³±±
±±³			 ³ ExpO4 -> No. da operacao	                                  	³±±
±±³			 ³ ExpO5 -> Modelo de dados da AAB                            	³±±
±±³			 ³ ExpO6 -> Modelo de dados da AAQ                            	³±±
±±³			 ³ ExpO7 -> Modelo de dados da AAR                            	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ	´±±
±±ºUso       ³ AP                                                        	º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ	´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function At230Before(oMdl,cId,cAlias,cOperation,oMdlAAB,oMdlAAQ,oMdlAAR)

Local nDifQnt 		:= 0									// Diferenca das quantidades
Local nSaldo		:= 0                                    // Saldo na AAR
Local aSaveLines 	:= FWSaveRows()
Local nX			:= 0
Local lGrav			:= .F.
Local nMsg			:= 0

For nX := 1 To oMdlAAB:Length()

	If !Empty(oMdlAAQ:GetValue("AAQ_CODPRO"))

		oMdlAAB:GoLine( nX )
		nDifQnt := oMdlAAQ:GetValue("AAQ_QTIDADE")-oMdlAAQ:GetValue("AAQ_QTDLIB")

		// Atualiza campos na AAR
		oMdlAAR:GoLine( oMdlAAR:Length() )
		nSaldo := oMdlAAR:GetValue("AAR_SALDO")
		dbSelectArea("AAR")
		AAR->(dbSetOrder(1)) //Filial + No. Contrato + Produto + Periodo
		If AAR->(dbSeek(xFilial("AAR")+oMdlAAR:GetValue("AAR_CONTRT")+PADR(oMdlAAR:GetValue("AAR_CODPRO"), TamSX3("AAR_CODPRO")[1]," ")+cValToChar(oMdlAAR:GetValue("AAR_PERIOD"))))
			RecLock("AAR",.F.)
			// Atualiza saldo na AAR
			If (oMdlAAQ:GetValue("AAQ_QTIDADE") != oMdlAAQ:GetValue("AAQ_QTDLIB")) .And. (oMdlAAR:GetValue("AAR_SALDO") + nDifQnt >=0)
				lGrav			:= .T.
				AAR->AAR_SALDO := oMdlAAR:GetValue("AAR_SALDO") + nDifQnt
			EndIf
			// Atualiza periodo na AAR
			If (oMdlAAQ:GetValue("AAQ_MODLIB") == "2")
				If Empty(AAR->AAR_PERIOD)
					lGrav			:= .T.
					AB9->(dbSeek(xFilial("AB9")+oMdlAAQ:GetValue("AAQ_CONTRT")))
					AAR->AAR_PERIOD := LEFT(DTOS(AB9->AB9_DTFIM),6)
				EndIf
			Else
				AAR->AAR_PERIOD := ""
			EndIf
			AAR->(MsUnLock())
		EndIf

		// Atualiza quantidade liberada na AAQ
		If	lGrav
			oMdlAAQ:SetValue("AAQ_QTDLIB",oMdlAAQ:GetValue("AAQ_QTIDADE"))
		Else
			nMsg -= 1
		EndIf

	EndIf

Next

FwRestRows(aSaveLines,oMdlAAB)

If	!lGrav .And. nMsg<0 .And. FunName() == "TECA230"
	MsgAlert(STR0030) //"O saldo não pode ser menor que zero"
EndIf
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ºPrograma  ³At230InicºAutor  ³Vendas & CRM        º Data ³  30/04/13    º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDesc.     ³ Verifica se já existe registro na AAR, se nao existir	  º±±
±±º          ³ Gera um novo registro	  								  º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ At230Inic( ExpO1 )                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 -> Objeto GetDados                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ºUso       ³ AP                                                         º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function At230Inic(oModel)

Local oMdlAAQ		:= oModel:GetModel("AAQDETAIL")			// Obtem o modelo de dados AAQDETAIL
Local oMdlAAB		:= oModel:GetModel("AABDETAIL")			// Obtem o modelo de dados AABDETAIL
Local oMdlAAR		:= oModel:GetModel("AARDETAIL")
Local cOperation 	:= cValToChar(oMdlAAQ:GetOperation())	// Numero da operacao.
Local nX			:= 0
Local cDataF		:= ""
Local aSaveLines 	:= FWSaveRows()

At230PmGrd(oModel)

If cOperation != "3"

	For nX := 1 To oMdlAAB:Length()
	   	oMdlAAB:GoLine( nX )

	   	If oMdlAAQ:GetValue("AAQ_MODLIB") == "1"
	   		cDataF:=space(6)
	   	ElseIf oMdlAAQ:GetValue("AAQ_MODLIB") == "2"
			cDataF:= LEFT(DTOS(dDataBase),6)
	   	EndIf

		dbSelectArea("AAR")
		AAR->(dbSetOrder(1)) //Filial + No. Contrato + Produto + Periodo

		If AAR->(!dbSeek(xFilial("AAR")+oMdlAAQ:GetValue("AAQ_CONTRT")+PADR(oMdlAAQ:GetValue("AAQ_CODPRO"), TamSX3("AAQ_CODPRO")[1]," ")+cDataF))
	   		If !AAR->( Eof() ) 
				RecLock("AAR", .T.)
				AAR->AAR_FILIAL := xFilial("AAR")
				AAR->AAR_CONTRT := oMdlAAQ:GetValue("AAQ_CONTRT")
				AAR->AAR_CODPRO := AllTrim(oMdlAAQ:GetValue("AAQ_CODPRO"))
				AAR->AAR_SALDO  := oMdlAAQ:GetValue("AAQ_QTDLIB")
				If oMdlAAQ:GetValue("AAQ_MODLIB") == "2"
					AAR->AAR_PERIOD := cDataF
				EndIf
				AAR->(MsUnLock())
				oMdlAAR:SetValue('AAR_CONTRT', oMdlAAQ:GetValue("AAQ_CONTRT") )
				oMdlAAR:SetValue('AAR_CODPRO', oMdlAAQ:GetValue("AAQ_CODPRO") )
				oMdlAAR:SetValue('AAR_SALDO', oMdlAAQ:GetValue("AAQ_QTDLIB") )
				oMdlAAR:SetValue('AAR_PERIOD', cDataF )
			EndIf	
		EndIf
	Next

EndIf

FwRestRows(aSaveLines,oMdlAAB)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³At230PmGrdºAutor  ³Vendas & CRM        º Data ³  30/01/14  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realiza a permissão dos grids 				º±±
±±º          ³                        					º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ At230PmGrd( ExpO1)	    				³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 -> Objeto GetDados                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ºUso       ³ AP                                                        º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function At230PmGrd(oModel)

Local lInclui		:= oModel:GetOperation() == 3			// Identifica se eh inclusao
Local lAltera		:= oModel:GetOperation() == 4			// Identifica se eh alteracao
Local lBloqGrd		:= .F.								// Informa se a grid esta bloqueada
Local oMldAAQ		:= oModel:GetModel('AAQDETAIL') 		// Obtem model do grid AAQ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso seja inclusao e nao for pela geracao do contrato ³
//³Ou alteracao sem o contrato							 ³
//³Bloqueia a edicao dos grids AAQ e AAR				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lBloqGrd := (lInclui) .OR. ( lAltera .AND. Empty(oMldAAQ:GetValue("AAQ_CONTRT")) )

oModel:GetModel( 'AAQDETAIL' ):SetNoInsertLine( lBloqGrd )
oModel:GetModel( 'AAQDETAIL' ):SetNoUpdateLine( lBloqGrd )
oModel:GetModel( 'AAQDETAIL' ):SetNoDeleteLine( lBloqGrd )

oModel:GetModel( 'AARDETAIL' ):SetNoInsertLine( lBloqGrd )
oModel:GetModel( 'AARDETAIL' ):SetNoUpdateLine( lBloqGrd )
oModel:GetModel( 'AARDETAIL' ):SetNoDeleteLine( lBloqGrd )

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³At230VldTSºAutor  ³Vendas & CRM        º Data ³  04/02/14  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida o Tipo de saída dos produtos			º±±
±±º          ³                        					º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ At230VldTS( ExpO1)	    				³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 -> Objeto GetDados                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ºUso       ³ AP                                                        º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function At230VldTS(oMdlAAB,oMdlAAQ)

Local nZ := 0
Local nProdTs := 0
Local cResumo := STR0031+CHR(13)+CHR(10)  //"Produto(s) com o tipo de saída ou preço de venda não definido(s)."
Local lRet := .T.

For nZ := 1 To oMdlAAB:length(.T.)
	oMdlAAB:GoLine( nZ )
	nDif := oMdlAAQ:GetValue("AAQ_QTIDADE")-oMdlAAQ:GetValue("AAQ_QTDLIB")
	If nDif > 0
		If SB1->(dbSeek(xFilial("SB1")+PADR(oMdlAAB:GetValue("AAB_CODPRO"), TamSX3("AAB_CODPRO")[1]," ")))
			If Empty(SB1->B1_TS) .OR. Empty(SB1->B1_PRV1)
				nProdTs ++
				cResumo += Alltrim(SB1->B1_COD)+"-"+SB1->B1_DESC+CHR(13)+CHR(10)
			EndIf
		EndIf
	EndIf
Next

If nProdTs > 0
	lRet := .F.
	cResumo += STR0032  //"Preencher no cadastro de produtos para gerar o pedido de venda"
	MsgAlert(cResumo)
EndIf
Return lRet
