#INCLUDE "PROTHEUS.CH"    
#INCLUDE "FATA321.CH"    
#include "rwmake.ch" 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define as posições da array dos dados do usuario Exchange.	 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#define _USUAR	 	1  
#define _SENHA	 	2  
#define _ISAGENDA 	3  
#define _DTAGEINI	4  
#define _DTAGEFIM	5  
#define _ISTAREFA	6  
#define _DTTARINI	7  
#define _DTTARFIM	8  
#define _EMAILEND	9  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define as posições da array de consulta do apontamento.		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#define _HREF	 	1  
#define _NOME	 	2 
#define _DTEND	 	3  
#define _DTSTART	4  
#define _BUSYSTATUS	5  
#define _LASTMOD 	6  
#define _LOCAL	 	7  
#define _UID	 	8  
#define _DESCRI	 	9  
#define _SUBJECT 	10  
#define _TO		 	11  
#define _CC		 	12  
#define _BCC			13    
#define _ALERT		14   

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define as posições da array de consulta da tarefa.			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#define _TARSUBJECT	 	1  
#define _TARDESCRI	 	2 
#define _TARCOMPLETE 	3  
#define _TARPERCCOMP	4  
#define _TARSTATUS		5  
#define _TARDTSTART 	6  
#define _TARDTEND	 	7  
#define _TARDTREM	 	8  
#define _TARHREF	 	9  
#define _TARDISPNAME 	10  
#define _TARLASTMOD	 	11  
#define _TARUID		 	12  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define as posicicoes do array de dados  enviado pelo FATA321C para a funcao 'Ft321SncCrm'. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#DEFINE _PREFIXO		2
#DEFINE _SINCTAF	    10
#DEFINE _SINCAGE		11
#DEFINE _SINCCON		12
#DEFINE _TIMEMIN		13
#DEFINE _BIAGEND		14
#DEFINE _BITAREF	    15
#DEFINE _BICONT			16
#DEFINE _PERAGE			17
#DEFINE _PERTAF			18
#DEFINE _HABSINC		19

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Ft320SincExgºAutor  ³Cleber Souza	     º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ft321SincExg(lAutomatico, aInfo)

Local aInfoSinc			:= {}
Local cURL      		:= F321GetUrlExg()
Local aAgendaEXG		:= {}
Local aAgendaPESQ		:= {}   
Local aTarefaEXG		:= {}
Local aTarefaPESQ		:= {}   
Local aRetCanc			:= {}
Local nPos	 			:= 0
Local cDescricao		:= ""    
Local cNomeEml			:= ""  
Local nLen				:= 0 
Local nY				:= 0
Local aConvDIni			:= {}
Local aConvDFim   		:= {}    
Local aConvDRem   		:= {} 
Local aTasksExchange    := {}   
Local cAliasAD7			:= "AD7"
Local cAliasAD8			:= "AD8"
Local cVersaoExchange   := GetMv("MV_VEREXCH",,"") 
Local cUrlEWS           := F321GetUrlExg()
Local i
Local aRetorno			:= Nil
Local aUTC				:= {}
Local aRet				:= {.T., ""}

Local cCodVnd 			:= ""
Local aNvlEstrut		:= {}

Default lAutomatico := .F.
Default aInfo := {}

If ( nModulo == 73 .AND. SA3->(FieldPos("A3_SNAEXG")) > 0 .AND. AD7->(FieldPos("AD7_IDESTN")) > 0 .AND. FindFunction("CRMXRetVend") )
	cCodVnd :=  CRMXRetVend() //vendedor logado  
Else
	cCodVnd := Ft320RpSel()
EndIf
If FindFunction("CRMXNvlEst") .AND. !Empty(cCodVnd)
	aNvlEstrut := CRMXNvlEst(cCodVnd)
EndIf


If Empty(cVersaoExchange)
	aRet := FT321IntegrationInformation(STR0048, nil, lAutomatico)	//"Atenção, preencha o parâmetro MV_VEREXCH com a versão do servidor exchange utilizado."
	Return(Nil)
EndIf

If Val(cVersaoExchange) >= 2007 .And. Empty(cUrlEWS)
	aRet := FT321IntegrationInformation(STR0027, nil, lAutomatico) //"Atenção, para a utilização da versão do Exchange Server informada (2007) , é necessário informar o parâmetro MV_URLEWS com a URL do WSDL de integração."
	Return(Nil)	
EndIf

If lAutomatico
	aInfoSinc	:= aClone(aInfo)
Else
	aInfoSinc	:= GetInfoUserSinc("S")	
EndIf

If aInfoSinc[1]
    
    //Sincroniza agenda
	If aInfoSinc[2,_ISAGENDA]
	                               
		//Seleciona registros AD7 (Agenda)
		DbSelectArea("AD7")
		dbSetOrder(1)
		#IFDEF TOP
			cQuery := "SELECT AD7_FILIAL,AD7_TOPICO,AD7_DATA,AD7_HORA1,AD7_HORA2,AD7_CODMEM, AD7_NROPOR, AD7_CODCLI, AD7_LOJA, "
			cQuery += "AD7_PROSPE, AD7_LOJPRO, AD7_CONTAT, AD7_VEND, AD7_LASTMO, AD7_LOCAL, AD7_AGEREU, AD7_EMLNAM, AD7_EMAILP, R_E_C_N_O_, AD7_IDEXC, AD7_CHGKEY  "
			
			If AD7->(FieldPos("AD7_ALERTA")) > 0  .AND. AD7->(FieldPos("AD7_TPALER")) > 0 
				cQuery += " , AD7_ALERTA, AD7_TPALER "
			EndIf 
			
			cQuery += "FROM "+RetSqlName("AD7")+" "
			cQuery += "WHERE AD7_FILIAL='"+xFilial("AD7")+"' AND "
			cQuery += "AD7_VEND='"+SA3->A3_COD+"' AND "
			cQuery += "AD7_DATA>='"+Dtos(aInfoSinc[2,_DTAGEINI])+"' AND "
			cQuery += "AD7_DATA<='"+Dtos(aInfoSinc[2,_DTAGEFIM])+"' AND "
			cQuery += "D_E_L_E_T_=' ' "
			cQuery += "ORDER BY "
			cQuery += SqlOrder(AD7->(IndexKey()))
			cQuery := ChangeQuery(cQuery)
			cAliasAD7 += "B"                            
			Iif(Select("AD7B") > 0, AD7B->(dbCloseArea()),Nil)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAD7,.T.,.T.)					
			TcSetField(cAliasAD7,"AD7_DATA","D", 8, 0 )
		#ENDIF					
	
		#IFNDEF TOP
			DbSeek(xFilial("AD7")+SA3->A3_COD+Dtos(aInfoSinc[2,4]))
		#ENDIF					

		//Versoes anteriores a Exchange 2007
		If Val(cVersaoExchange) < 2007
	    	//Pesquisa agenda Exchange
	    	aAgendaEXG := ExgConsAppointment(aInfoSinc[2,_USUAR], aInfoSinc[2,_SENHA], cURL, aInfoSinc[2,_DTAGEINI], aInfoSinc[2,_DTAGEFIM], "00:00:00", "23:59:59",,F321GetLanExg())
			
			If !(aAgendaEXG[1])
				aRet := FT321IntegrationInformation(aAgendaEXG[2], nil, lAutomatico)  
				#IFDEF TOP
					(cAliasAD7)->(dbCloseArea())
				#ENDIF					
				Return aRet
			EndIF	
		            
		    //Atualizando Agenda Exchange
		    (cAliasAD7)->(dbGoTop())
		    
		    While ( !Eof() .AND. xFilial("AD7")==(cAliasAD7)->(AD7_FILIAL) .AND.;
													SA3->A3_COD == (cAliasAD7)->(AD7_VEND) .AND.;
													Dtos((cAliasAD7)->(AD7_DATA)) >= Dtos(aInfoSinc[2,4]) .AND.;
													Dtos((cAliasAD7)->(AD7_DATA)) <= Dtos(aInfoSinc[2,5]))					
		        nPos 		:= 0
		        cDescricao	:= ""     
		    	If !Empty((cAliasAD7)->AD7_EMLNAM)
		    		nPos := aScan(aAgendaEXG[3], { |x| UPPER(Alltrim(x[2])) == UPPER(Alltrim((cAliasAD7)->AD7_EMLNAM))  }) 
	  				cNomeEml	:= Alltrim((cAliasAD7)->AD7_EMLNAM)
	   			Else
	   				cNomeEml	:= ft321GeraEML()
		    	EndIf
		    	        
		    	If nPos > 0 .and. Alltrim((cAliasAD7)->AD7_LASTMO) == Alltrim(aAgendaEXG[3,nPos,_LASTMOD])
		    		(cAliasAD7)->(dbSkip())
		    		Loop
	
		    	ElseIf nPos > 0 .and. ft321CompLastMod((cAliasAD7)->AD7_LASTMO, aAgendaEXG[3,nPos,_LASTMOD])
					//Atualiza Protheus
					dbSelectArea("AD7")
		    	    dbGoTo((cAliasAD7)->R_E_C_N_O_)
		    	    If AD7->(!EOF())
		    	    	aConvDIni	:= f321ConvUTCTime(STOD(StrTran(Substr(aAgendaEXG[3,nPos,_DTSTART],1,10),"-","")),Substr(aAgendaEXG[3,nPos,_DTSTART],12,8))
		    	    	aConvDFim   := f321ConvUTCTime(STOD(StrTran(Substr(aAgendaEXG[3,nPos,_DTEND],1,10),"-","")),Substr(aAgendaEXG[3,nPos,_DTEND],12,8))
		    	    	RecLock("AD7",.F.)
		    	        	AD7->AD7_EMLNAM		:= cNomeEml
							AD7->AD7_TOPICO		:= aAgendaEXG[3,nPos,_SUBJECT]		
							AD7->AD7_DATA		:= aConvDIni[1]
							AD7->AD7_HORA1		:= aConvDIni[2]
							AD7->AD7_HORA2		:= aConvDFim[2]
							AD7->AD7_LOCAL		:= aAgendaEXG[3,nPos,_LOCAL]
		    	        	AD7->AD7_LASTMO		:= aAgendaEXG[3,nPos,_LASTMOD]
							MSMM(AD7->AD7_CODMEM,,,aAgendaEXG[3,nPos,_DESCRI],1,,,"AD7","AD7_CODMEM")
		    	        MsUnlock()  
		    	    EndIf
		     	Else
					//Atualiza Exchange
	                                          
	    			// Se possui data de ultima modificacao eh porque foi dele deletado no Exchange e deve ser deletado no Protheus
					If !Empty((cAliasAD7)->AD7_LASTMO) .and. nPos == 0
					
						dbSelectArea("AD7")
			    	    dbGoTo((cAliasAD7)->R_E_C_N_O_)
			    	    If AD7->(!EOF())
			    	    	RecLock("AD7",.F.)
								dbDelete()
			    	    	MsUnlock()
			    	    EndIF                                                                                     
					
	                Else
						//Incluindo pesquisa do AD7 no Exchange.                
			    		If f321AtuAgeExg("A",aInfoSinc[2,_USUAR], aInfoSinc[2,_SENHA], cAliasAD7, lAutomatico)[1]
			    		
			    	        //Pesquisa data Lastmodified
			    	        aAgendaPESQ := ExgConsAppointment(aInfoSinc[2,_USUAR], aInfoSinc[2,_SENHA], cURL,,,,,cNomeEml,F321GetLanExg())
			                    
							If !(aAgendaPESQ[1])
								aRet := FT321IntegrationInformation(aAgendaPESQ[2], nil, lAutomatico)
								#IFDEF TOP
								    (cAliasAD7)->(dbCloseArea())	     
								#ENDIF
								Return aRet
							EndIF	
			                    
							//Atualiza  agenda Protheus com o apontamento gerado no Exchange
			    	        dbSelectArea("AD7")
			    	        dbGoTo((cAliasAD7)->R_E_C_N_O_)
			    	        If AD7->(!EOF()) .And. Len(aAgendaPESQ[3]) > 0
			    	        	RecLock("AD7",.F.)
			    	        		AD7->AD7_LASTMO		:= aAgendaPESQ[3,1,_LASTMOD]
			    	        		AD7->AD7_EMLNAM		:= cNomeEml
			    	        	MsUnlock()    
			    	        EndIf 
			    	        
		    	        EndIF
		    	        
		    		EndIf  
			    EndIf 
		    		
	    		//Apaga Apontamento gerado no Exchange q ja foi atualizado
	    		If nPos > 0
		       	    nLen := Len(aAgendaEXG[3])
			   	    aDel(aAgendaEXG[3],nPos)
					aSize(aAgendaEXG[3],nLen-1)
				EndIf	   
			    
		    	(cAliasAD7)->(dbSkip()) 
			EndDo
			#IFDEF TOP
			    (cAliasAD7)->(dbCloseArea())	     
			#ENDIF
		    
		    //Pesquisa apontamentos gerados no Exchange
		    For nY:=1 to Len(aAgendaEXG[3])
		    	
		    	dbSelectArea("AD7")
		    	dbSetOrder(8)
		    	If !dbSeek(xFilial("AD7")+aAgendaEXG[3,nY,_NOME])
		    		
		    		If Substr(aAgendaEXG[3,nY,_NOME],1,4) == "TEXG"
						//Cancela apontamento no Exchange pois no protheus ela foi deletada.
					   
						If !Empty(aAgendaEXG[3,nY,_TO])
				   			//Cancela reuniao
				   			aRetCanc :=  ExgCancMeetingFunction(	aInfoSinc[2,_USUAR]		,;
																	aInfoSinc[2,_SENHA]		,;
																	cURL					,;
																	aAgendaEXG[3,nY,_TO]	,;
																	aAgendaEXG[3,nY,_CC]	,;
																	aAgendaEXG[3,nY,_BCC]	,;
																	STR0001					,;  //"Cancelamento Automatico."
																	STR0002					,; //"Cancelamento automatico do compromisso."
																	aAgendaEXG[3,nY,_NOME]	,;
																	F321GetLanExg()			) 
						Else
							aRetCanc :=  ExgDelAppointment(aInfoSinc[2,_USUAR], aInfoSinc[2,_SENHA], cURL, aAgendaEXG[3,nY,_NOME],F321GetLanExg())
	                    EndIF
	
						If !aRetCanc[1]
							aRet := FT321IntegrationInformation(aRetCanc[2], nil,lAutomatico)
						EndIf
		    		Else
		    	    	aConvDIni	:= f321ConvUTCTime(STOD(StrTran(Substr(aAgendaEXG[3,nY,_DTSTART],1,10),"-","")),Substr(aAgendaEXG[3,nY,_DTSTART],12,8))
		    	    	aConvDFim   := f321ConvUTCTime(STOD(StrTran(Substr(aAgendaEXG[3,nY,_DTEND],1,10),"-","")),Substr(aAgendaEXG[3,nY,_DTEND],12,8))
			    		RecLock("AD7",.T.)
							AD7->AD7_FILIAL		:= xFilial("AD7")
			   	        	AD7->AD7_EMLNAM		:= aAgendaEXG[3,nY,_NOME]
							AD7->AD7_TOPICO		:= aAgendaEXG[3,nY,_SUBJECT]		
							AD7->AD7_DATA		:= aConvDIni[1]
							AD7->AD7_HORA1		:= aConvDIni[2]
							AD7->AD7_HORA2		:= aConvDFim[2]
							AD7->AD7_LOCAL		:= aAgendaEXG[3,nY,_LOCAL]
		    	        	AD7->AD7_LASTMO		:= aAgendaEXG[3,nY,_LASTMOD] 
							
							If	AD7->(FieldPos("AD7_IDESTN")) > 0 .AND.  AD7->(FieldPos("AD7_NVESTN")) > 0 .AND. !Empty(aNvlEstrut)
							   	AD7->AD7_IDESTN  := aNvlEstrut[1]
							   	AD7->AD7_NVESTN  := aNvlEstrut[2] 
							EndIf
		    	        	
		    	        	If Empty(aAgendaEXG[3,nY,_CC]) 
		    	        		AD7->AD7_AGEREU := "A"
		    	        	Else                       
		    	        		AD7->AD7_AGEREU := "R"
		    	        		AD7->AD7_EMAILP	:= aAgendaEXG[3,nY,_CC]
		    	        	EndIf
							AD7->AD7_VEND   	:= SA3->A3_COD
							MSMM(AD7->AD7_CODMEM,,,aAgendaEXG[3,nY,_DESCRI],1,,,"AD7","AD7_CODMEM")  
			    		MsUnlock()	       
		        	EndIf
		        EndIf
		    
		    Next nY 
		
		//Exchange 2007 ou superior
		Else
			//Consulta a Agenda no Outlook
			aAgendaEXG := EX07_Meet4(aInfoSinc[2,_USUAR],aInfoSinc[2,_SENHA],aInfoSinc[2,_DTAGEINI],aInfoSinc[2,_DTAGEFIM])
			
			If aAgendaEXG[1]
			    //Atualizando Agenda Exchange
			    //1o. Envia as novas agendas incluidas via Protheus no Exchange
			    (cAliasAD7)->(dbGoTop())
			    While ( !Eof() .AND. xFilial("AD7")==(cAliasAD7)->(AD7_FILIAL) .AND.;
														SA3->A3_COD == (cAliasAD7)->(AD7_VEND) .AND.;
														Dtos((cAliasAD7)->(AD7_DATA)) >= Dtos(aInfoSinc[2,4]) .AND.;
														Dtos((cAliasAD7)->(AD7_DATA)) <= Dtos(aInfoSinc[2,5]))			
										
					//1o. Envia as novas agendas ao Exchange
					If Empty((cAliasAD7)->AD7_IDEXC)
					
						aRetorno := EX07_Meet1(	aInfoSinc[2,_USUAR],;
												aInfoSinc[2,_SENHA],;
												AllTrim((cAliasAD7)->AD7_TOPICO),;
												AllTrim(MSMM(AD7_CODMEM)),;                              
												(cAliasAD7)->AD7_DATA,;
												(cAliasAD7)->AD7_HORA1,;
												(cAliasAD7)->AD7_DATA,;
												(cAliasAD7)->AD7_HORA2,;
												(cAliasAD7)->AD7_LOCAL,;
												StrToArray((cAliasAD7)->AD7_EMAILP,";"),;
												(cAliasAD7)->AD7_AGEREU,;
												(cAliasAD7)->R_E_C_N_O_,;
												IF ( (AD7->(FieldPos("AD7_ALERTA")) > 0 .AND. AD7->(FieldPos("AD7_TPALER")) > 0), ConvertMin((cAliasAD7)->AD7_ALERTA, (cAliasAD7)->AD7_TPALER), 0)	)
						//Atualiza a agenda do sistema com o ID da Agenda do Exchange
						If aRetorno[1] .And. !Empty(aRetorno[3])					
							dbSelectArea("AD7")
							AD7->(dbGoTo((cAliasAD7)->R_E_C_N_O_))
							AD7->(RecLock("AD7",.F.))
								AD7->AD7_IDEXC	:= aRetorno[3]
								AD7->AD7_CHGKEY	:= aRetorno[4]
							AD7->(MsUnlock())
						EndIf                           
	
					//2o. Envia ou recebe as alteracoes de Agenda
					ElseIf !Empty((cAliasAD7)->AD7_IDEXC)
						nPos := AScan(aAgendaEXG[3],{|x| AllTrim(x[1]) == AllTrim((cAliasAD7)->AD7_IDEXC) })
						// Se não for localizado uma agenda no Exchange com o ID do registro posicionado, apaga o registro local
						If nPos <= 0
							// Antes de apagar, é necessário consultar o exchange pela tarefa, para garantir que ela não mudou de data, se não encontrar o item, apaga, se encontrar atualiza os dados locais
							aRetorno := EX07_Meet5( aInfoSinc[2,_USUAR],aInfoSinc[2,_SENHA], {{AllTrim((cAliasAD7)->AD7_IDEXC)}} )
							If aRetorno[1]
								If Len(aRetorno[3]) == 0							
									dbSelectArea("AD7")
									AD7->(dbGoTo((cAliasAD7)->R_E_C_N_O_))
									AD7->(RecLock("AD7",.F.))
										AD7->(dbDelete())
									AD7->(MsUnlock())
								Else
									DbSelectArea("AD7")
									AD7->(DbGoTo((cAliasAD7)->R_E_C_N_O_))
									AD7->(RecLock("AD7",.F.))
									AD7->AD7_IDEXC	:= AllTrim(aRetorno[3][1][1])
									AD7->AD7_CHGKEY	:= AllTrim(aRetorno[3][1][2])
									AD7->AD7_TOPICO	:= aRetorno[3][1][3]								
									AD7->AD7_DATA	:= ExUTCToLocal(aRetorno[3][1][5])[1]
									AD7->AD7_HORA1	:= ExUTCToLocal(aRetorno[3][1][5])[2]
									AD7->AD7_HORA2	:= ExUTCToLocal(aRetorno[3][1][6])[2]
									AD7->AD7_AGEREU	:= "A" //IIf(Lower(AllTrim(aRetorno[3][1][7])) == "true","R","A")
									AD7->AD7_LOCAL	:= AllTrim(aRetorno[3][1][8])
									AD7->AD7_EMAILP	:= Upper(ArrayToStr( aRetorno[3][1][9],";" ))
									
									If (AD7->(FieldPos("AD7_ALERTA")) > 0 .AND. AD7->(FieldPos("AD7_TPALER")) > 0)
										AD7->AD7_ALERTA	:=  Val(aRetorno[3][1][10])
										AD7->AD7_TPALER	:=  '1'//joga sempre o tipo = minutos pq o outlook sempre retorna em minutos
									EndIf
									
									MSMM(AD7->AD7_CODMEM,,,aRetorno[3][1][4],1,,,"AD7","AD7_CODMEM")
									AD7->(MsUnlock())		
								EndIf
							EndIf						
						Else							
							// Verifica se houve alguma alteração no changekey que vem do Exchange, se houve alteração significa que no Exchange o item foi alterado, então atualiza localmente.							
							// Carrega o item do Exchange
							If ( AllTrim((cAliasAD7)->AD7_CHGKEY) <> AllTrim(aAgendaEXG[3][nPos][2]) )
								DbSelectArea("AD7")
								AD7->(DbGoTo((cAliasAD7)->R_E_C_N_O_))
								AD7->(RecLock("AD7",.F.))
								AD7->AD7_IDEXC	:= AllTrim(aAgendaEXG[3][nPos][1])
								AD7->AD7_CHGKEY	:= AllTrim(aAgendaEXG[3][nPos][2])
								AD7->AD7_TOPICO	:= aAgendaEXG[3][nPos][3]								
								AD7->AD7_DATA	:= ExUTCToLocal(aAgendaEXG[3][nPos][5])[1]
								AD7->AD7_HORA1	:= ExUTCToLocal(aAgendaEXG[3][nPos][5])[2]
								AD7->AD7_HORA2	:= ExUTCToLocal(aAgendaEXG[3][nPos][6])[2]
								AD7->AD7_AGEREU	:= "A" // IIf(Lower(AllTrim(aAgendaEXG[3][nPos][7])) == "true","R","A")
								AD7->AD7_LOCAL	:= AllTrim(aAgendaEXG[3][nPos][8])
								AD7->AD7_EMAILP	:= Upper(ArrayToStr( aAgendaEXG[3][nPos][9],";" ))
								
								If (AD7->(FieldPos("AD7_ALERTA")) > 0 .AND. AD7->(FieldPos("AD7_TPALER")) > 0)
									AD7->AD7_ALERTA	:= Val(aAgendaEXG[3][nPos][10])
									AD7->AD7_TPALER	:= '1' //joga sempre o tipo = minutos pq o outlook sempre retorna em minutos
								EndIf
								
								MSMM(AD7->AD7_CODMEM,,,aAgendaEXG[3][nPos][4],1,,,"AD7","AD7_CODMEM")
								AD7->(MsUnlock())			
							// Atualiza o item no Exchange
							Else
												
								aRetorno := EX07_Meet2(	aInfoSinc[2,_USUAR],;
														aInfoSinc[2,_SENHA],;
														AllTrim((cAliasAD7)->AD7_TOPICO),;
														AllTrim(MSMM(AD7_CODMEM)),;                              
														(cAliasAD7)->AD7_DATA,;
														(cAliasAD7)->AD7_HORA1,;
														(cAliasAD7)->AD7_DATA,;
														(cAliasAD7)->AD7_HORA2,;
														(cAliasAD7)->AD7_LOCAL,;
														StrToArray((cAliasAD7)->AD7_EMAILP,";"),;
														(cAliasAD7)->AD7_AGEREU,;
														(cAliasAD7)->AD7_IDEXC,;
														(cAliasAD7)->AD7_CHGKEY,;
														If ((AD7->(FieldPos("AD7_ALERTA")) > 0 .AND. AD7->(FieldPos("AD7_TPALER")) > 0), ConvertMin((cAliasAD7)->AD7_ALERTA, (cAliasAD7)->AD7_TPALER),0) )
							EndIf
						EndIf
					EndIf
					(cAliasAD7)->(dbSkip())
				EndDo
			EndIf
			
			If !aAgendaEXG[1]
				aRet := FT321IntegrationInformation(STR0028,aAgendaEXG[2], lAutomatico) // "Não foi possível efetuar a integração com exchange, tente novamente mais tarde ou se o problema persistir, contate o administrador do sistema!"
				Return aRet
			ElseIf aRetorno != Nil .And. !aRetorno[1]
				aRet := FT321IntegrationInformation(STR0028,aRetorno[2], lAutomatico) // "Não foi possível efetuar a integração com exchange, tente novamente mais tarde ou se o problema persistir, contate o administrador do sistema!"
				Return aRet
			EndIf				
		EndIf
	EndIf
	
	//Sincroniza Tarefa
	If aInfoSinc[2,_ISTAREFA]	
 		//Seleciona registros AD8 (Tarefa)
		DbSelectArea("AD8")
		dbSetOrder(1)
		#IFDEF TOP
			cQuery := "SELECT AD8_FILIAL,AD8_TOPICO,AD8_DTINI,AD8_DTFIM,AD8_HORA1,AD8_HORA2,AD8_CODMEM, AD8_CODCLI, AD8_LOJCLI, "
			cQuery += "AD8_PERC, AD8_CODUSR, AD8_LASTMO, AD8_EMLNAM, AD8_DTREMI, AD8_HRREMI, AD8_STATUS, R_E_C_N_O_, AD8_IDEXC, AD8_IDEXC, AD8_CHGKEY, AD8_PRIOR " 
			cQuery += "FROM "+RetSqlName("AD8")+" "
			cQuery += "WHERE AD8_FILIAL='"+xFilial("AD8")+"' AND "
			cQuery += "AD8_CODUSR='"+SA3->A3_CODUSR+"' AND "
			cQuery += "AD8_DTINI>='"+Dtos(aInfoSinc[2,_DTTARINI])+"' AND "
			cQuery += "AD8_DTFIM<='"+Dtos(aInfoSinc[2,_DTTARFIM])+"' AND "
			cQuery += "D_E_L_E_T_=' ' "
			cQuery += "ORDER BY "
			cQuery += SqlOrder(AD8->(IndexKey()))
			cQuery := ChangeQuery(cQuery)
			cAliasAD8 += "B"
			
			Iif(Select(cAliasAD8) > 0,(cAliasAD8)->(dbCloseArea()),Nil)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAD8,.T.,.T.)					
			TcSetField(cAliasAD8,"AD8_DTINI","D", 8, 0 )
			TcSetField(cAliasAD8,"AD8_DTFIM","D", 8, 0 )
			TcSetField(cAliasAD8,"AD8_DTREMI","D", 8, 0 )
		#ENDIF					
	
		#IFNDEF TOP  
			(cAliasAD8)->(dbSetOrder(2))
			DbSeek(xFilial("AD8")+SA3->A3_COD+Dtos(aInfoSinc[2,_DTTARINI]))
		#ENDIF					

		//Versoes anteriores a Exchange 2007
		If Val(cVersaoExchange) < 2007
	    	//Pesquisa agenda Exchange
	    	aTarefaEXG := ExgConsTasks(aInfoSinc[2,_USUAR], aInfoSinc[2,_SENHA], cUrl, aInfoSinc[2,_DTTARINI], aInfoSinc[2,_DTTARFIM], "00:00:00", "23:59:59",,F321GetLanExg())
			
		  	If !(aTarefaEXG[1])
				aRet := FT321IntegrationInformation(aTarefaEXG[2], nil, lAutomatico)  
				#IFDEF TOP
					(cAliasAD8)->(dbCloseArea())
				#ENDIF					
				Return aRet
			EndIF	
		            
		    //Atualizando Agenda Exchange
		    (cAliasAD8)->(dbGoTop())
		    
		    While ( !Eof() .AND. xFilial("AD8")==(cAliasAD8)->(AD8_FILIAL) .AND.;
													SA3->A3_CODUSR == (cAliasAD8)->(AD8_CODUSR) .AND.;
													Dtos((cAliasAD8)->(AD8_DTINI)) >= Dtos(aInfoSinc[2,_DTTARINI]) .AND.;
													Dtos((cAliasAD8)->(AD8_DTFIM)) <= Dtos(aInfoSinc[2,_DTTARFIM]))					
		        nPos 		:= 0
		        cDescricao	:= ""     
		    	If !Empty((cAliasAD8)->AD8_EMLNAM)
		    		nPos := aScan(aTarefaEXG[3], { |x| UPPER(Alltrim(x[_TARDISPNAME])) == UPPER(Alltrim((cAliasAD8)->AD8_EMLNAM))  }) 
	  				cNomeEml	:= Alltrim((cAliasAD8)->AD8_EMLNAM)
	   			Else
	   				cNomeEml	:= ft321GeraEML()
		    	EndIf
		    	        
		    	If nPos > 0 .and. Alltrim((cAliasAD8)->AD8_LASTMO) == Alltrim(aTarefaEXG[3,nPos,_LASTMOD])
		    		(cAliasAD8)->(dbSkip())
		    		Loop
	
		    	ElseIf nPos > 0 .and. ft321CompLastMod((cAliasAD8)->AD8_LASTMO, aTarefaEXG[3,nPos,_TARLASTMOD])
					//Atualiza Protheus
					dbSelectArea("AD8")
		    	    dbGoTo((cAliasAD8)->R_E_C_N_O_)
		    	    If AD8->(!EOF())
		    	    	aConvDIni	:= f321ConvUTCTime(STOD(StrTran(Substr(aTarefaEXG[3,nPos,_TARDTSTART],1,10),"-","")),Substr(aTarefaEXG[3,nPos,_TARDTSTART],12,8))
		    	    	aConvDFim   := f321ConvUTCTime(STOD(StrTran(Substr(aTarefaEXG[3,nPos,_TARDTEND],1,10),"-","")),Substr(aTarefaEXG[3,nPos,_TARDTEND],12,8))
			    	    aConvDRem   := f321ConvUTCTime(STOD(StrTran(Substr(aTarefaEXG[3,nPos,_TARDTREM],1,10),"-","")),Substr(aTarefaEXG[3,nPos,_TARDTREM],12,8))
		    	    	RecLock("AD8",.F.)
		    	        	AD8->AD8_EMLNAM		:= cNomeEml
							AD8->AD8_TOPICO		:= aTarefaEXG[3,nPos,_TARSUBJECT]		
							AD8->AD8_DTINI		:= aConvDIni[1]
							AD8->AD8_DTFIM		:= aConvDFim[1]
							AD8->AD8_DTREMI		:= aConvDRem[1]
							AD8->AD8_HORA1		:= aConvDIni[2]
							AD8->AD8_HORA2		:= aConvDFim[2]
							AD8->AD8_HRREMI		:= aConvDRem[2]
		    	        	AD8->AD8_LASTMO		:= aTarefaEXG[3,nPos,_TARLASTMOD]
							AD8->AD8_PERC		:= Val(aTarefaEXG[3,nPos,_TARPERCCOMP])
							MSMM(AD8->AD8_CODMEM,,,aTarefaEXG[3,nPos,_TARDESCRI],1,,,"AD8","AD8_CODMEM") 
		    	        MsUnlock()  
		    	    EndIf
		     	Else
					//Atualiza Exchange
	                                          
	    			// Se possui data de ultima modificacao eh porque foi dele deletado no Exchange e deve ser deletado no Protheus
					If !Empty((cAliasAD8)->AD8_LASTMO) .and. nPos == 0
					
						dbSelectArea("AD8")
			    	    dbGoTo((cAliasAD8)->R_E_C_N_O_)
			    	    If AD8->(!EOF())
			    	    	RecLock("AD8",.F.)
								dbDelete()
			    	    	MsUnlock()
			    	    EndIF                                                                                     
					
	                Else
						//Incluindo pesquisa do AD8 no Exchange.                
			    		If f321AtuTarExg("A",aInfoSinc[2,_USUAR], aInfoSinc[2,_SENHA],cAliasAD8, lAutomatico)[1]
			    		
			    	        //Pesquisa data Lastmodified
			    	        aTarefaPESQ := ExgConsTasks(aInfoSinc[2,_USUAR], aInfoSinc[2,_SENHA],cURL,"", "", "", "",cNomeEml,F321GetLanExg())    
					                
							If !(aTarefaPESQ[1])
								aRet := FT321IntegrationInformation(aTarefaPESQ[2],nil,lAutomatico)
								#IFDEF TOP
								    (cAliasAD8)->(dbCloseArea())	     
								#ENDIF
								Return aRet
							EndIF	
			                    
							//Atualiza  agenda Protheus com o apontamento gerado no Exchange
			    	        dbSelectArea("AD8")
			    	        dbGoTo((cAliasAD8)->R_E_C_N_O_)
			    	        If AD8->(!EOF())
			    	        	RecLock("AD8",.F.)
			    	        		AD8->AD8_LASTMO		:= StrTran(Alltrim(aTarefaPESQ[3,1,_TARLASTMOD])," ","%20")
			    	        		AD8->AD8_EMLNAM		:= cNomeEml
			    	        	MsUnlock()    
			    	        EndIf 
		    	        EndIF
		    		EndIf  
			    EndIf 
		    		
	    		//Apaga Apontamento gerado no Exchange q ja foi atualizado
	    		If nPos > 0
		       	    nLen := Len(aTarefaEXG[3])
			   	    aDel(aTarefaEXG[3],nPos)
					aSize(aTarefaEXG[3],nLen-1)
				EndIf	   
			    
		    	(cAliasAD8)->(dbSkip()) 
			EndDo
			#IFDEF TOP
			    (cAliasAD8)->(dbCloseArea())	     
			#ENDIF
		    
		    //Pesquisa apontamentos gerados no Exchange
		    For nY:=1 to Len(aTarefaEXG[3])
		    	
		    	dbSelectArea("AD8")
		    	dbSetOrder(3)
		    	If !dbSeek(xFilial("AD8")+aTarefaEXG[3,nY,_TARDISPNAME])
		    		
		    		If Substr(aTarefaEXG[3,nY,_TARDISPNAME],1,4) == "TEXG"
						//Cancela apontamento no Exchange pois no protheus ela foi deletada.
	                    aRetCanc :=  ExgDelTasks(aInfoSinc[2,_USUAR], aInfoSinc[2,_SENHA], cURL, aTarefaEXG[3,nY,_TARDISPNAME], F321GetLanExg()) 
						If !aRetCanc[1]
							aRet := FT321IntegrationInformation(aRetCanc[2], nil, lAutomatico)
						EndIf
		    		Else
			    		RecLock("AD8",.T.)
							AD8->AD8_FILIAL		:= xFilial("AD8")   
							AD8->AD8_TAREFA		:= CriaVar("AD8_TAREFA",.T.)
			   	        	AD8->AD8_EMLNAM		:= aTarefaEXG[3,nY,_TARDISPNAME]
							AD8->AD8_TOPICO		:= aTarefaEXG[3,nY,_TARSUBJECT]		
							AD8->AD8_DTINI		:= STOD(StrTran(Substr(aTarefaEXG[3,nY,_TARDTSTART],1,10),"-",""))
							AD8->AD8_DTFIM		:= STOD(StrTran(Substr(aTarefaEXG[3,nY,_TARDTEND],1,10),"-",""))
							AD8->AD8_DTREMI		:= STOD(StrTran(Substr(aTarefaEXG[3,nY,_TARDTREM],1,10),"-",""))
							AD8->AD8_HORA1		:= Substr(aTarefaEXG[3,nY,_TARDTSTART],12,8)
							AD8->AD8_HORA2		:= Substr(aTarefaEXG[3,nY,_TARDTEND],12,8)
							AD8->AD8_HRREMI		:= Substr(aTarefaEXG[3,nY,_TARDTREM],12,8)
		    	        	AD8->AD8_LASTMO		:= aTarefaEXG[3,nY,_TARLASTMOD] 
							AD8->AD8_CODUSR   	:= SA3->A3_CODUSR 
							AD8->AD8_STATUS   	:= Alltrim(Str(Val(aTarefaEXG[3,nY,_TARSTATUS])+1)) 
							AD8->AD8_PERC		:= Val(aTarefaEXG[3,nY,_TARPERCCOMP])
							
							// Gravando o nivel no vendedor logado.
						  	If	AD8->(FieldPos("AD8_IDESTN")) > 0 .AND.  AD8->(FieldPos("AD8_NVESTN")) > 0 .AND. !Empty(aNvlEstrut) 
					    		AD8->AD8_VEND	   := cCodVnd
					     		AD8->AD8_IDESTN  := aNvlEstrut[1]
					     		AD8->AD8_NVESTN  := aNvlEstrut[2] 
							EndIf
							
							MSMM(AD8->AD8_CODMEM,,,aTarefaEXG[3,nY,_TARDESCRI],1,,,"AD8","AD8_CODMEM")  
			    		MsUnlock()	       
		        	EndIf
		        EndIf
		    Next nY  
		    
	    	aRet := FT321IntegrationInformation(STR0026,nil, lAutomatico) //"Sincronismo Realizado com sucesso."
		 
		 //Exchange 2007 e superiores
		 Else
   		 	//Busca por tarefas incluidas ou removidas diretamente no Exchange
		 	aTasksExchange := EX07_Task4(Alltrim(aInfoSinc[2,_USUAR]),ALltrim(aInfoSinc[2,_SENHA]))
		 	
		 	If aTasksExchange[1]
	
			    //Atualizando Agenda Exchange
			    (cAliasAD8)->(dbGoTop())
			    
			    While (!Eof() .AND. xFilial("AD8")==(cAliasAD8)->(AD8_FILIAL) .AND.;
									SA3->A3_CODUSR == (cAliasAD8)->(AD8_CODUSR) .AND.;
									Dtos((cAliasAD8)->(AD8_DTINI)) >= Dtos(aInfoSinc[2,_DTTARINI]) .AND.;
									Dtos((cAliasAD8)->(AD8_DTFIM)) <= Dtos(aInfoSinc[2,_DTTARFIM]))  
						 
					//Inclusao de nova Tarefa								
					If Empty((cAliasAD8)->AD8_IDEXC)					
						aRetorno := EX07_Task1(	Alltrim(aInfoSinc[2,_USUAR]),;
												ALltrim(aInfoSinc[2,_SENHA]),;
												Alltrim((cAliasAD8)->AD8_TOPICO),;
												AllTrim(MSMM((cAliasAD8)->AD8_CODMEM)),;
												(cAliasAD8)->AD8_DTINI,;
												(cAliasAD8)->AD8_DTFIM,;
												ft321VldHora((cAliasAD8)->AD8_HORA1),;
												ft321VldHora((cAliasAD8)->AD8_HORA2),;
												(cAliasAD8)->(AllTrim(AD8_STATUS)),;
												(cAliasAD8)->(AllTrim(AD8_PRIOR)),;
												(cAliasAD8)->(Alltrim(Str(AD8_PERC))),;
												(cAliasAD8)->AD8_DTREMI,;
												(cAliasAD8)->AD8_HRREMI )
												
						If aRetorno[1]
							dbSelectArea("AD8")
				    	    dbGoTo((cAliasAD8)->R_E_C_N_O_)
							AD8->(RecLock("AD8",.F.))
								AD8->AD8_IDEXC 	:= aRetorno[3]
								AD8->AD8_CHGKEY	:= aRetorno[4]
							AD8->(MsUnlock())
						Else
							Exit
						EndIf
						
					//Alteracao/Exclusao de Tarefa
					Else
						nPos := AScan(aTasksExchange[3],{|x| AllTrim(x[1]) == AllTrim((cAliasAD8)->AD8_IDEXC) })
						//Exclui as Agendas que foram removidas diretamente no Exchange
						If  nPos <= 0
							dbSelectArea("AD8")
				    	    dbGoTo((cAliasAD8)->R_E_C_N_O_)
							AD8->(RecLock("AD8",.F.))
								AD8->(dbDelete())
							AD8->(MsUnlock())
						Else                                       
							If AllTrim((cAliasAD8)->AD8_CHGKEY) <> AllTrim(aTasksExchange[3][nPos][2])
						 		DbSelectArea("AD8")  
						 		AD8->(DbSetOrder(6))			
						 		If AD8->(DbSeek(xFilial("AD8")+AllTrim(aTasksExchange[3][nPos][1]) ))
							 		AD8->(RecLock("AD8",.F.))
									AD8->AD8_IDEXC		:= aTasksExchange[3][nPos][1]
									AD8->AD8_CHGKEY		:= aTasksExchange[3][nPos][2]
									AD8->AD8_TOPICO		:= Upper(aTasksExchange[3][nPos][3])
									Do Case 
										Case Lower(AllTrim(aTasksExchange[3][nPos][5])) == "low"
											AD8->AD8_PRIOR		:= "1"
										Case Lower(AllTrim(aTasksExchange[3][nPos][5])) == "normal"
											AD8->AD8_PRIOR		:= "2"
										Case Lower(AllTrim(aTasksExchange[3][nPos][5])) == "high"
											AD8->AD8_PRIOR		:= "3"
									EndCase											
									If aTasksExchange[3][nPos][6] != Nil
										AD8->AD8_DTREMI		:= ExUTCToLocal(aTasksExchange[3][nPos][6])[1]
									EndIf
									If aTasksExchange[3][nPos][6] != Nil
										AD8->AD8_HRREMI		:= ExUTCToLocal(aTasksExchange[3][nPos][6])[2]
									EndIf
									AD8->AD8_DTFIM		:= ExUTCToLocal(aTasksExchange[3][nPos][9])[1]
									AD8->AD8_PERC		:= Val(AllTrim(aTasksExchange[3][nPos][10]))
									AD8->AD8_DTINI		:= ExUTCToLocal(aTasksExchange[3][nPos][11])[1]
									Do Case
										Case Lower(AllTrim(aTasksExchange[3][nPos][12])) == "notstarted"
											AD8->AD8_STATUS := "1"
										Case Lower(AllTrim(aTasksExchange[3][nPos][12])) == "inprogress"
											AD8->AD8_STATUS := "2"
										Case Lower(AllTrim(aTasksExchange[3][nPos][12])) == "completed"
											AD8->AD8_STATUS := "3"
										Case Lower(AllTrim(aTasksExchange[3][nPos][12])) == "waitingonothers"
											AD8->AD8_STATUS := "4"
										Case Lower(AllTrim(aTasksExchange[3][nPos][12])) == "deferred"
											AD8->AD8_STATUS := "5"
									EndCase									
									MSMM(AD8->AD8_CODMEM,,,AllTrim(aTasksExchange[3][nPos][4]),1,,,"AD8","AD8_CODMEM") 
					                AD8->(MsUnlock())
							 	EndIf
							Else
								aRetorno	:= EX07_Task3(	Alltrim(aInfoSinc[2,_USUAR]),;
															ALltrim(aInfoSinc[2,_SENHA]),;
															Alltrim((cAliasAD8)->AD8_TOPICO),;
															AllTrim(MSMM((cAliasAD8)->AD8_CODMEM)),;
															(cAliasAD8)->AD8_DTINI,;
															(cAliasAD8)->AD8_DTFIM,;
															ft321VldHora((cAliasAD8)->AD8_HORA1),;
															ft321VldHora((cAliasAD8)->AD8_HORA2),;
															AllTrim((cAliasAD8)->AD8_IDEXC),;
											   				AllTrim((cAliasAD8)->AD8_CHGKEY),;
															(cAliasAD8)->(AllTrim(AD8_STATUS)),;
															(cAliasAD8)->(AllTrim(AD8_PRIOR)),;
															(cAliasAD8)->(Alltrim(Str(AD8_PERC))),;
															(cAliasAD8)->AD8_DTREMI,;
															(cAliasAD8)->AD8_HRREMI )
								If aRetorno[1]
									dbSelectArea("AD8")
						    	    dbGoTo((cAliasAD8)->R_E_C_N_O_)
									AD8->(RecLock("AD8",.F.))
										AD8->AD8_IDEXC 	:= aRetorno[3]
										AD8->AD8_CHGKEY	:= aRetorno[4]
									AD8->(MsUnlock())			
								Else
									Exit
								EndIf
							EndIf							
						EndIf				
					EndIf				
			 		
			 		(cAliasAD8)->(dbSkip())
			 	EndDo
			EndIf 
			
			If !aTasksExchange[1]
				aRet := FT321IntegrationInformation(STR0028,aTasksExchange[2],lAutomatico) // "Não foi possível efetuar a integração com exchange, tente novamente mais tarde ou se o problema persistir, contate o administrador do sistema!"
				Return aRet
			ElseIf aRetorno != Nil .And. !aRetorno[1]
				aRet := FT321IntegrationInformation(STR0028,aRetorno[2], lAutomatico) // "Não foi possível efetuar a integração com exchange, tente novamente mais tarde ou se o problema persistir, contate o administrador do sistema!"
				Return aRet
			EndIf
		 EndIf
	EndIf
EndIf

Return aRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GetInfoUserSincºAutor  ³Cleber Souza	     º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GetInfoUserSinc(cType)
      
Local oDlgSync		:= Nil
Local oPanelDt		:= Nil
Local oPanelUsr		:= Nil
Local oAgenda       := Nil
Local oContato      := Nil
Local oGrpAgenda	:= Nil
Local oGrpTarefa	:= Nil
Local oGrpContato	:= Nil
Local oGrpTempo		:= Nil
Local oGrpLogin 	:= Nil
Local oSaveLogin	:= Nil
Local oHabilita		:= Nil
Local oPeriodo		:= Nil
Local dDtTarIni		:= CTOD("  /  /  ")
Local dDtTarFim		:= CTOD("  /  /  ")
Local dDtAgeIni		:= CTOD("  /  /  ")
Local dDtAgeFim		:= CTOD("  /  /  ")
Local cTipoPerAge  := " "
Local cTipoPerTar  := " "
Local cTimeMin		:= Space(4)
Local cUser			:= Space(200)
Local cSenhaUsu		:= Space(200)
Local cEndEmail     := Space(200)
Local lAgenda		:= .F.
Local lTarefa		:= .F.
Local lContato		:= .F.
Local lHabilita		:= .F.
Local lRet			:= .T.

Local oComboAge
Local cComboAge := ""
Local aItemsAge	:= {STR0033,STR0034,STR0035,STR0036,STR0037,STR0038} //Dia atual, 1 semana, 1 mes, 3 meses, 1 ano

Local oComboTar
Local cComboTar := ""
Local aItemsTar	:= {STR0033,STR0034,STR0035,STR0036,STR0037,STR0038} //Dia atual, 1 semana, 1 mes, 3 meses, 1 ano

Static lSavedLogin	:= .T.
Static cSavedUser	:= Space(200)
Static cSavedPass	:= Space(200)
Static cSavedMail   := Space(200)

Local aArea := GetArea()
Local aAreaSA3 := SA3->(GetArea())

Local lBiAgenda := .F.
Local lBiTarefa := .F.
Local lBiContato := .F.


If SA3->(FieldPos("A3_TIMEMIN")) > 0 .AND.  SA3->(FieldPos("A3_USUCORP")) > 0 .AND.  SA3->(FieldPos("A3_EMACORP")) > 0
	cTimeMin		:= Iif(!Empty(SA3->A3_TIMEMIN),SA3->A3_TIMEMIN,Space(4))
	cUser			:= SA3->A3_USUCORP
	cSenhaUsu		:= Space(200)
	cEndEmail      := SA3->A3_EMACORP
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se o usuário e a senha foram armazenados na sessão,³
//³relembra-os.                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If lSavedLogin
	If Empty(cSenhaUsu) .AND. !Empty(cSavedPass)
		cSenhaUsu	:= cSavedPass
	EndIf
EndIf

DBSelectArea("SA3")
DbSetOrder(1)

If SA3->(FieldPos("A3_PERAGE")) > 0 .AND. SA3->(FieldPos("A3_BICONT")) > 0
	If DbSeek(xFilial("SA3")+SA3->A3_COD)
		cTipoPerAge 	:= SA3->A3_PERAGE
		cTipoPerTar 	:= SA3->A3_PERTAF
		lBiAgenda		:= (SA3->A3_BIAGEND == "1")
		lBiTarefa 		:= (SA3->A3_BITAREF == "1")
		lBiContato 	:= (SA3->A3_BICONT == "1")
	EndIf
		
	FiltraVend(@lAgenda,@cComboAge,@dDtAgeIni,@dDtAgeFim,@cTipoPerAge,;
			   @lTarefa,@cComboTar,@dDtTarIni,@dDtTarFim,@cTipoPerTar,;
			   @lContato,@lHabilita,@cTimeMin,@cUser,@cEndEmail)	   
EndIf


If cType=="S"

	DEFINE MSDIALOG oDlgSync TITLE STR0003 FROM 9,0 TO 32,33 OF oMainWnd    //"Sincronismo Exchange x Protheus"
	//	@ 000, 000 MSPANEL oPanelDt   PROMPT '' SIZE 85,95 OF oDlgSync //COLOR CLR_RED, CLR_RED
	@ 000, 000 MSPANEL oPanelDt   PROMPT '' SIZE 85,95 OF oDlgSync //COLOR CLR_RED, CLR_RED
	oPanelDt:Align := CONTROL_ALIGN_TOP 
	
	//Agenda
	@ 002, 002 GROUP oGrpAgenda TO 20, 130 PROMPT "" OF oPanelDt PIXEL
	@ 006,005 CHECKBOX oAgenda VAR lAgenda PROMPT STR0004 OF oPanelDt SIZE 050, 010 PIXEL ON CLICK (ft321Click(lAgenda,oComboAge,@dDtAgeIni,@dDtAgeFim)) 
	@ 006,088 MSCOMBOBOX oComboAge VAR cComboAge ITEMS aItemsAge SIZE 040, 010 OF oPanelDt PIXEL;
	ON CHANGE (ft321IUOnChange(lAgenda,cComboAge,@dDtAgeIni,@dDtAgeFim,cType,@cTipoPerAge)) //"Agenda"

    If lAgenda == .F.
		oComboAge:Disable()
	EndIf	

	//Tarefa
	@ 023, 002 GROUP oGrpTarefa TO 42, 130 PROMPT "" OF oPanelDt PIXEL
	@ 027,005 CHECKBOX oTarefa VAR lTarefa PROMPT STR0007 OF oPanelDt SIZE 050, 010 PIXEL ON CLICK (ft321Click(lTarefa,oComboTar,@dDtTarIni,@dDtTarFim))
	@ 027,088 MSCOMBOBOX oComboTar VAR cComboTar ITEMS aItemsTar SIZE 040, 010 OF oPanelDt PIXEL;	
	ON CHANGE (ft321IUOnChange(lTarefa,cComboTar,@dDtTarIni,@dDtTarFim,cType,@cTipoPerTar))
	
    If lTarefa == .F.
		oComboTar:Disable()
	EndIf
		
	//Contato
	@ 045,002 GROUP oGrpContato TO 64, 130 PROMPT "" OF oPanelDt PIXEL
	@ 049,005 CHECKBOX oContato VAR lContato PROMPT STR0041 OF oPanelDt SIZE 050, 010 PIXEL //"Contato"

	//Tempo Sincronização
	@ 067,002 GROUP oGrpContato TO 95, 130 PROMPT "" OF oPanelDt PIXEL
	@ 071,006 SAY oPeriodo PROMPT STR0039 SIZE 090, 010 OF oPanelDt PIXEL //"Tempo de sincronização em minutos" 
	@ 070,104 MSGET cTimeMin	SIZE 010,009 	OF oPanelDt PIXEL PICTURE "9999"
	@ 083,005 CHECKBOX oHabilita VAR lHabilita PROMPT STR0040  OF oPanelDt SIZE 100, 010 PIXEL //"Habilita Sincronização Automatica"		

	//Login Exchange	
	@ 000, 000 MSPANEL oPanelUsr   PROMPT '' SIZE 40, 40 OF oDlgSync //COLOR CLR_BLACK, CLR_BLACK
	oPanelUsr:Align := CONTROL_ALIGN_ALLCLIENT 
	
	@ 002,002 GROUP oGrpTarefa TO 63, 130 PROMPT STR0009 OF oPanelUsr PIXEL  //"Login Exchange"
	@ 013,020 SAY  STR0010 		SIZE 040,009 	OF oPanelUsr PIXEL //"Usuario :"
	@ 013,047 MSGET cUser	SIZE 060,009 	OF oPanelUsr PIXEL
	@ 026,020 SAY  STR0011 		SIZE 040,009 	OF oPanelUsr PIXEL //"Senha :"
	@ 026,047 MSGET cSenhaUsu	SIZE 060,009 	OF oPanelUsr PIXEL PASSWORD 
	@ 039,020 SAY STR0025		SIZE 040,009	OF oPanelUsr PIXEL //"E-mail"
	@ 039,047 MSGET cEndEmail	SIZE 060,009	OF oPanelUsr PIXEL  
//	@ 052,018 CHECKBOX oSaveLogin VAR lSavedLogin PROMPT STR0024 OF oPanelUsr SIZE 120, 010 PIXEL //"Lembrar login durante a sessão?"

	DEFINE SBUTTON oBut1 FROM 066, 76 TYPE 1 ENABLE OF oPanelUsr PIXEL ACTION ((cSavedPass:=cSenhaUsu,cSavedUser:=cUser,cSavedMail:=cEndEmail),;
	If(ft321IUValOK(cUser,cSenhaUsu,lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,dDtTarFim,cType,cEndEmail,lContato,lHabilita,cTipoPerAge,cTipoPerTar,cTimeMin,lBiAgenda, lBiTarefa, lBiContato, .T.)[1],oDlgSync:END(),Nil))
	DEFINE SBUTTON oBut2 FROM 066, 104 TYPE 2 ENABLE OF oPanelUsr PIXEL ACTION {lRet:=.F.,oDlgSync:End()}

	ACTIVATE MSDIALOG oDlgSync CENTERED
	
ElseIf cType=="U"

	DEFINE MSDIALOG oDlgSync TITLE STR0008 FROM 9,0 TO 20,33 OF oMainWnd  //"Usuário Exchange"

	@ 000, 000 MSPANEL oPanelUsr   PROMPT '' SIZE 40, 40 OF oDlgSync //COLOR CLR_BLACK, CLR_BLACK
	oPanelUsr:Align := CONTROL_ALIGN_ALLCLIENT 
	
	//Login Exchange
	@ 002, 002 GROUP oGrpTarefa TO 64, 130 PROMPT STR0009 OF oPanelUsr PIXEL  //"Login Exchange"
	@ 013,020 SAY  STR0010 		SIZE 040,009 	OF oPanelUsr PIXEL //"Usuario :"
	@ 013,047 MSGET cUser	SIZE 060,009 	OF oPanelUsr PIXEL  
	@ 026,020 SAY  STR0011 		SIZE 040,009 	OF oPanelUsr PIXEL //"Senha :"
	@ 026,047 MSGET cSenhaUsu	SIZE 060,009 	OF oPanelUsr PIXEL PASSWORD 
	@ 039,020 SAY STR0025		SIZE 040,009	OF oPanelUsr PIXEL //"E-mail"
	@ 039,047 MSGET cEndEmail	SIZE 060,009	OF oPanelUsr PIXEL  
//	@ 052,018 CHECKBOX oSaveLogin VAR lSavedLogin PROMPT STR0024 OF oPanelUsr SIZE 120, 010 PIXEL //"Lembrar login durante a sessão?"

	DEFINE SBUTTON oBut1 FROM 067, 76 TYPE 1 ENABLE OF oPanelUsr PIXEL ACTION ((cSavedPass:=cSenhaUsu,cSavedUser:=cUser,cSavedMail:=cEndEmail),;
	If(ft321IUValOK(cUser,cSenhaUsu,lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,dDtTarFim,cType,cEndEmail,lContato,lHabilita,cTipoPerAge,cTipoPerTar,cTimeMin,lBiAgenda, lBiTarefa, lBiContato, .F.)[1],oDlgSync:END(),Nil))
	DEFINE SBUTTON oBut2 FROM 067, 104 TYPE 2 ENABLE OF oPanelUsr PIXEL ACTION {lRet:=.F.,oDlgSync:End()}

	ACTIVATE MSDIALOG oDlgSync CENTERED
EndIf


If lRet
	Ft320AtuParamThread()
EndIf

RestArea(aAreaSA3)
RestArea(aArea)


Return({lRet,{cUser,cSenhaUsu,lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,dDtTarFim,cEndEmail}})

//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} FiltraVend()
Carrega configuracoes do vendedor (relacionadas à integração com exchange)
 
@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function FiltraVend(lAgenda,cComboAge,dDtAgeIni,dDtAgeFim,cTipoPerAge,;
lTarefa,cComboTar,dDtTarIni,dDtTarFim,cTipoPerTar,;
lContato,lHabilita,cTimeMin,cUser,cEndEmail)

Local aArea := GetArea()
Local aAreaSA3 := SA3->(GetArea())

If SA3->(FieldPos("A3_EMACORP")) > 0 .AND. SA3->(FieldPos("A3_PERAGE")) > 0 .AND. ;
	SA3->(FieldPos("A3_PERTAF")) > 0 .AND. SA3->(FieldPos("A3_EMACORP")) > 0 .AND. ;
	SA3->(FieldPos("A3_USUCORP")) > 0 .AND. SA3->(FieldPos("A3_TIMEMIN")) > 0
	
	If SA3->A3_SINCAGE == "S"
		lAgenda := .T.
		If SA3->A3_PERAGE == "A"
			cComboAge := "1 Dia Atual"
		ElseIf SA3->A3_PERAGE == "B"
			cComboAge := "1 Semana"
		ElseIf SA3->A3_PERAGE == "C"
			cComboAge := "1 Mês"
		ElseIf SA3->A3_PERAGE == "D"
			cComboAge := "3 Meses"
		ElseIf SA3->A3_PERAGE == "E"
			cComboAge := "6 Meses"
		ElseIf SA3->A3_PERAGE == "F"
			cComboAge := "1 Ano"
		EndIf
	Else
		lAgenda := .F.
	EndIf
	If SA3->A3_SINCTAF == "S"
		lTarefa := .T.
		If SA3->A3_PERTAF == "A"
			cComboTar := "1 Dia Atual"
		ElseIf SA3->A3_PERTAF == "B"
			cComboTar := "1 Semana"
		ElseIf SA3->A3_PERTAF == "C"
			cComboTar := "1 Mês"
		ElseIf SA3->A3_PERTAF == "D"
			cComboTar := "3 Meses"
		ElseIf SA3->A3_PERTAF == "E"
			cComboTar := "6 Meses"
		ElseIf SA3->A3_PERTAF == "F"
			cComboTar := "1 Ano"
		EndIf
	Else
		lTarefa := .F.
	EndIf
	If SA3->A3_SINCCON == "S"
		lContato := .T.
	Else
		lContato := .F.
	EndIf
	If cPaisLoc == "BRA" .And. SA3->A3_HABSINC == "S"
		lHabilita := .T.
	Else
		lHabilita := .F.
	EndIf
	
	cTipoPerAge := SA3->A3_PERAGE
	
	If cTipoPerAge == "A"
		dDtAgeIni := dDataBase
		dDtAgeFim := dDataBase
	ElseIf cTipoPerAge == "B"
		dDtAgeIni := dDataBase-7
		dDtAgeFim := dDataBase+7
	ElseIf cTipoPerAge == "C"
		dDtAgeIni := dDataBase-30
		dDtAgeFim := dDataBase+30
	ElseIf cTipoPerAge == "D"
		dDtAgeIni := dDataBase-90
		dDtAgeFim := dDataBase+90
	ElseIf cTipoPerAge == "E"
		dDtAgeIni := dDataBase-180
		dDtAgeFim := dDataBase+180
	ElseIf cTipoPerAge == "F"
		dDtAgeIni := dDataBase-365
		dDtAgeFim := dDataBase+365
	EndIf
	
	cTipoPerTar := SA3->A3_PERTAF
	
	If cTipoPerTar == "A"
		dDtTarIni := dDataBase
		dDtTarFim := dDataBase
	ElseIf cTipoPerTar == "B"
		dDtTarIni := dDataBase-7
		dDtTarFim := dDataBase+7
	ElseIf cTipoPerTar == "C"
		dDtTarIni := dDataBase-30
		dDtTarFim := dDataBase+30
	ElseIf cTipoPerTar == "D"
		dDtTarIni := dDataBase-90
		dDtTarFim := dDataBase+90
	ElseIf cTipoPerTar == "E"
		dDtTarIni := dDataBase-180
		dDtTarFim := dDataBase+180
	ElseIf cTipoPerTar == "F"
		dDtTarIni := dDataBase-365
		dDtTarFim := dDataBase+365
	EndIf
	
	cTimeMin    := SA3->A3_TIMEMIN
	cUser       := SA3->A3_USUCORP
	cEndEmail   := SA3->A3_EMACORP
	
	RestArea(aAreaSA3)
	RestArea(aArea)
EndIf

Return (lAgenda,cComboAge,lTarefa,cComboTar,lContato,lHabilita,cTimeMin,cUser,cEndEmail,lSavedLogin)
    
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ft321IUValOKºAutor  ³Cleber Souza	     º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ft321IUValOK(cUser,cSenhaUsu,lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,;
dDtTarFim,cType,cEndEmail,lContato,lHabilita,cTipoPerAge,cTipoPerTar,cTimeMin, lBiAgenda, lBiTarefa, lBiContato, lCompleta, lAutomatico)

Local aRet		:= {.T., ""}
Local cURL  	:= f321GetUrlExg()  
Local aInfoSinc := ({.T.,{cUser,cSenhaUsu,lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,dDtTarFim,cEndEmail}})

Default lBiAgenda   := .F.
Default lBiTarefa   := .F.
Default lBiContato  := .F.
Default lCompleta   := .T.
Default lAutomatico := .F.


If cType == "S" .and. !lAgenda .and. !lTarefa .and. !lContato
	MsgAlert(STR0012) //"Favor selecionar uma opção de sincronismo."
	aRet	:= {.F., ""} 
	Return aRet 
EndIF

If lHabilita .AND. cType <> "U"  
	If Empty(cTimeMin) .OR. cTimeMin == "0"
		MsgAlert(STR0042) //"Favor informar o tempo em minutos a serem sincronizados."
		aRet	:= {.F., ""}  
		Return aRet
	Else
		CreateSyncSession(cValToChar(ThreadId()))
	EndIf
EndIf

//Valida Usuário    
If aRet[1]
	If Empty(cUser) .Or.Empty(cSenhaUsu) .Or. Empty(cEndEmail)
		MsgAlert(STR0017) //"Favor informar usuario e senha."
		aRet	:= {.F., ""}  
		Return aRet
	EndIf
EndIf  

If lAgenda == .T. .AND. Empty(cTipoPerAge)
	cTipoPerAge := "A"
EndIf

If lTarefa == .T. .AND. Empty(cTipoPerTar)
	cTipoPerTar := "A"
EndIf

If lCompleta
	If lContato == .T.
		LjMsgRun(STR0043, STR0047, {|| aRet := Ft321SincCon(aInfoSinc, lAutomatico) })// "Sincronizando contatos" //"Aguarde"
	EndIf
	//integração bidirecional (inclue registros inseridos no outlook)
	If aRet[1]
		If lBiAgenda
			LjMsgRun(STR0044,STR0047, {|| aRet := FT321IncAge(cEndEmail,cSenhaUsu, dDtAgeIni, dDtAgeFim) }) //"Sincronização bidirecional de agendamentos."
		EndIf
		If lBiTarefa
			LjMsgRun(STR0045, STR0047, {||  aRet := FT321IncTar(cEndEmail,cSenhaUsu, dDtTarIni, dDtTarFim) }) //"Sincronização bidirecional de Tarefas."
		EndIf
		If lBiContato	
			LjMsgRun(STR0046, STR0047, {||  aRet := FT321IncCon(cEndEmail,cSenhaUsu) }) //"Sincronização bidirecional de contatos."
		EndIf
	EndIf
EndIf

If aRet[1] 
	ft321GrvSa3(lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,dDtTarFim,lContato,lHabilita,cTipoPerAge,cTipoPerTar,cTimeMin,cUser,cEndEmail,cSenhaUsu)
	If ( nModulo == 73 .AND. SA3->(FieldPos("A3_SNAEXG")) > 0 .AND. AD7->(FieldPos("AD7_IDESTN")) > 0 .AND. FindFunction("Ft321CAtInfVend") )	
		Ft321CAtInfVend({lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,dDtTarFim,lContato,lHabilita,cTipoPerAge,cTipoPerTar,cTimeMin,cUser,cEndEmail,cSenhaUsu})
	EndIf
EndIf
	
Return(aRet) 

//--------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ft321IUOnChange()
Verifica as datas que seram sincronizadas de acordo com as entidades.

@author Vendas CRM
@since 14/06/2013
/*/
//--------------------------------------------------------------------------------------------------------------
Static Function ft321IUOnChange(lFlag,cCombo,dDtIni,dDtFim,cTipo,cTpPeriodo)

Local cPeriodo     := cCombo

Default dDtIni  		:= dDataBase
Default dDtFim		:= dDataBase
Default cTpPeriodo	:= cTpPeriodo

If lFlag == .T.

	If AllTrim(cPeriodo) == AllTrim(STR0033) //"Dia Atual"
		cTpPeriodo := "A"	//A=Dia Atual
		dDtIni := dDataBase
		dDtFim := dDataBase
	ElseIf AllTrim(cPeriodo) == AllTrim(STR0034) //"1 Semana"
		cTpPeriodo := "B"	//B=1 semana
		dDtIni := dDataBase-7
		dDtFim := dDataBase+7		
	ElseIf AllTrim(cPeriodo) == AllTrim(STR0035) //"1 Mês"
		cTpPeriodo := "C"	//C=1 mes
		dDtIni := dDataBase-30
		dDtFim := dDataBase+30		
	ElseIf AllTrim(cPeriodo) == AllTrim(STR0036) //"3 Meses"
		cTpPeriodo := "D"	//D=3 meses
		dDtIni := dDataBase-90
		dDtFim := dDataBase+90		
	ElseIf AllTrim(cPeriodo) == AllTrim(STR0037) //"6 Meses"
		cTpPeriodo := "E"	//E=6 meses
		dDtIni := dDataBase-180
		dDtFim := dDataBase+180		
	ElseIf AllTrim(cPeriodo) == AllTrim(STR0038) //"1 Ano"
		cTpPeriodo := "F"	//F=1 ano
		dDtIni := dDataBase-365
		dDtFim := dDataBase+365
	EndIf

EndIf

Return

//--------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ft321Click()
Verifica quais entidades seram sincronizadas.

@author Vendas CRM
@since 14/06/2013
/*/
//--------------------------------------------------------------------------------------------------------------
Static Function ft321Click(lFlag,oObj,dDtIni,dDtFim,cTipoPeriodo)

If lFlag 
	oObj:Enable()                                                                            
	oObj:Refresh()                                                                                   
Else
	oObj:Disable()
	oObj:Refresh()                                         
EndIF

	// Feita essa validação para o caso do usuario não alterar a combo onde não caira na função
	// chamado no evento ON CHANGE e as variaveis ficaram vazias.

	If Empty(dDtIni)
		dDtIni := dDataBase
	EndIf
	
	If	Empty(dDtFim)
		dDtFim := dDataBase
	EndIf
	
	If Empty(cTipoPeriodo)
		cTipoPeriodo := "A"
	EndIf
	
Return

//--------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ft321GrvSa3()
Faz a gravação na SA3 de acordo com as parametrização das informações de sincronização no botão do outlook
na area de trabalho do representante.

@author Vendas CRM
@since 14/06/2013
/*/
//--------------------------------------------------------------------------------------------------------------
Function ft321GrvSa3(lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,dDtTarFim,lContato,lHabilita,cTipoPerAge,cTipoPerTar,cTimeMin,cUser,cEndEmail,cSenhaUsu)

Local aArea := GetArea()
Local aAreaSA3 := SA3->(GetArea())
Local cVend := ""

If ( nModulo == 73 .AND. SA3->(FieldPos("A3_SNAEXG")) > 0 .AND. AD7->(FieldPos("AD7_IDESTN")) > 0 .AND. FindFunction("CRMXRetVend") )
	cVend :=  CRMXRetVend() //vendedor logado   
Else
	cVend := Ft320RpSel()
EndIf
                

If SA3->(FieldPos("A3_EMACORP")) > 0
	
	DbSelectArea("SA3")
	DbSetOrder(1)	//A3_FILIAL, A3_COD
		If DbSeek(xFilial("SA3")+AllTrim(cVend))
			RecLock("SA3",.F.)
				If lAgenda == .T.
					SA3->A3_SINCAGE := "S"
				Else
					SA3->A3_SINCAGE := "N"
				EndIf
				If lTarefa == .T.
					SA3->A3_SINCTAF := "S"
				Else
					SA3->A3_SINCTAF := "N"
				EndIf
				If lContato == .T.
					SA3->A3_SINCCON := "S"
				Else
					SA3->A3_SINCCON := "N"
				EndIf
				If cPaisLoc == "BRA"
					If lHabilita == .T.
						SA3->A3_HABSINC := "S"
					Else
						SA3->A3_HABSINC := "N"
					EndIf
				EndIf
				SA3->A3_PERAGE  := cTipoPerAge
				SA3->A3_PERTAF  := cTipoPerTar
				SA3->A3_TIMEMIN := cTimeMin 
				SA3->A3_USUCORP := cUser
				SA3->A3_EMACORP := cEndEmail
				If SA3->(FieldPos("A3_SNAEXG")) > 0
					SA3->A3_SNAEXG := Encode64(FWAES_encrypt(AllTrim(cSenhaUsu)))
				EndIf	
			SA3->(MsUnlock())
		EndIf

EndIf
RestArea(aAreaSA3)
RestArea(aArea)

Return

//--------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ft321ExcSinc()
Busca informações na SA3 e chama a função que faz a sincronização.
na area de trabalho do representante.

@author Vendas CRM
@since 14/06/2013
/*/ 
//--------------------------------------------------------------------------------------------------------------
Function ft321ExcSinc(aOpcoes)

Local lAgenda 	:= .F.
Local lTarefa 	:= .F.
Local lContato  := .F.
Local lHabilita := .F.
Local aArea 	
Local aAreaSA3
Local cVend 	:= aOpcoes[3]
Local cUser		:= aOpcoes[4]
Local cSenhaUsu := aOpcoes[5]
Local cEndEmail	:= aOpcoes[6]
Local cType		:= "S"
Local lBiAgenda := .F.
Local lBiTarefa := .F.
Local lBiContato := .F.
Local cEmp :=  aOpcoes[1]
Local cFil :=  aOpcoes[2]
Local aInfoSinc := {}
Local aRet := {.T., "STOPED"}
Local dDtAgeIni 
Local dDtAgeFim 
Local dDtTarIni 
Local dDtTarFim
Local cTipoPerAge := ''

RPCSetType(3) 
// "FAT" > Liberacao de acesso o modulo FAT
RPCSetEnv( cEmp, cFil )

aArea		:= GetArea()
aAreaSA3  	:= SA3->(GetArea())

DbSelectArea("SA3")
DbSetOrder(1)

	If SA3->(FieldPos("A3_BIAGEND")) > 0
	
	
		If DbSeek(xFilial("SA3")+AllTrim(cVend))
		
				lBiAgenda 		:=  (SA3->A3_BIAGEND == "1")
				lBiTarefa 		:=  (SA3->A3_BITAREF == "1")
				lBiContato 	:=  (SA3->A3_BICONT == "1")
						
				If	SA3->A3_SINCAGE == "S"
					lAgenda := .T.
				Else
					lAgenda := .F.
				EndIf
				If SA3->A3_SINCTAF == "S"
					lTarefa := .T.		
				Else
					lTarefa := .F.
				EndIf
				If	SA3->A3_SINCCON == "S"
					lContato := .T.
				Else
					lContato := .F.
				EndIf
				If	cPaisLoc == "BRA" .And. SA3->A3_HABSINC == "S"
					lHabilita := .T.
				Else
					lHabilita := .F.
				EndIf
							
				cTipoPerAge := SA3->A3_PERAGE
	
				If cTipoPerAge == "A"
					dDtAgeIni := dDataBase
					dDtAgeFim := dDataBase
				ElseIf cTipoPerAge == "B"
					dDtAgeIni := dDataBase-7
					dDtAgeFim := dDataBase+7		
				ElseIf cTipoPerAge == "C"
					dDtAgeIni := dDataBase-30
					dDtAgeFim := dDataBase+30		
				ElseIf cTipoPerAge == "D"
					dDtAgeIni := dDataBase-90
					dDtAgeFim := dDataBase+90		
				ElseIf cTipoPerAge == "E"
					dDtAgeIni := dDataBase-180
					dDtAgeFim := dDataBase+180		
				ElseIf cTipoPerAge == "F"
					dDtAgeIni := dDataBase-365
					dDtAgeFim := dDataBase+365
				EndIf
		
				cTipoPerTar := SA3->A3_PERTAF
		
				If cTipoPerTar == "A"
					dDtTarIni := dDataBase
					dDtTarFim := dDataBase
				ElseIf cTipoPerTar == "B"
					dDtTarIni := dDataBase-7
					dDtTarFim := dDataBase+7		
				ElseIf cTipoPerTar == "C"
					dDtTarIni := dDataBase-30
					dDtTarFim := dDataBase+30		
				ElseIf cTipoPerTar == "D"
					dDtTarIni := dDataBase-90
					dDtTarFim := dDataBase+90
				ElseIf cTipoPerTar == "E"
					dDtTarIni := dDataBase-180
					dDtTarFim := dDataBase+180		
				ElseIf cTipoPerTar == "F"
					dDtTarIni := dDataBase-365
					dDtTarFim := dDataBase+365
				EndIf				
				
				cTimeMin	:= SA3->A3_TIMEMIN
				
		EndIf
	
	
	
	If lHabilita
	
		aInfoSinc := ({.T.,{cUser,cSenhaUsu,lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,dDtTarFim,cEndEmail}})
		
		aRet := Ft321SincExg(.T., aInfoSinc)
		
		If aRet[1] 
			aRet := ft321IUValOK(cUser,cSenhaUsu,lAgenda,dDtAgeIni,dDtAgeFim,lTarefa,dDtTarIni,dDtTarFim,cType,cEndEmail,lContato,lHabilita,cTipoPerAge,cTipoPerTar,cTimeMin,lBiAgenda, lBiTarefa, lBiContato, , .T.)
		EndIf
	EndIf
	
	RestArea(aAreaSA3)
	RestArea(aArea)

EndIf
	
Return aRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ft321VldHoraºAutor  ³Cleber Souza	     º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ft321VldHora(cHora)

Local nHora		:= Val(Substr(cHora,1,2))
Local nMinuto	:= Val(Substr(cHora,4,2))
                       
if nHora > 24
	nHora := 24
EndIF
	
if nMinuto >= 30
	nMinuto := 30
else
	nMinuto := 0
EndIf		    

Return(StrZero(nHora,2)+":"+StrZero(nMinuto,2)+":00")   

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ft321GeraEMLºAutor  ³Cleber Souza	     º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ft321GeraEML()
Return("TEXG"+Alltrim(SA3->A3_COD)+DTOS(dDataBase)+TIME()+".eml")

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ft321CompLastModºAutor  ³Cleber Souza	     º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ft321CompLastMod(cDateProt, cDateExg)
           
Local lRet		:= .F.
Local dDataP	:= ""
Local nMinP		:= 0
Local dDataE	:= ""
Local nMinE		:= 0
           

//dDataP 	:=  STOD(Substr(cDateProt,1,4)+Substr(cDateProt,6,2)+Substr(cDateProt,9,2))
dDataP 	:=  STOD(StrTran(Substr(cDateProt,1,10),"-",""))
nMinP	:=  (Val(Substr(cDateProt,12,2))*60) + (Val(Substr(cDateProt,15,2)))

dDataE 	:=  STOD(StrTran(Substr(cDateExg,1,10),"-",""))
nMinE	:=  (Val(Substr(cDateExg,12,2))*60) + (Val(Substr(cDateExg,15,2)))

If dDataE > dDataP
	lRet := .T.
ElseIf dDataE == dDataP
	If nMinE > nMinP
		lRet := .T.
	EndIF
EndIF			

Return(lRet) 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³f321AtuAgeExg  ºAutor  ³Cleber Souza	     º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function f321AtuAgeExg(cCommand,cUserEXG,cSenhaEXG,cAlias, lAutomatico)
Local cURL      	:= f321GetUrlExg()
Local aAreaSA3		:= SA3->(GetArea())
Local aRetEXG		:= {}
Local cEmailV		:= ""    
Local cDescricao	:= "" 
Local cNomeEml		:= ""          
Local aAgendaPESQ	:= {}               
Local aRetorno      := {}            
Local cVersaoExchange   := GetMv("MV_VEREXCH",,"") 
Local aRet				:= {.T., ""}

Default lAutomatico := .F.

dbSelectArea(cAlias)
                            
//Exchange versao anterior a 2007                                               
If Val(cVersaoExchange) < 2007
	cEmailV	 := Alltrim(Posicione("SA3",1,xFilial("SA3")+AD7_VEND,"A3_EMAIL"))
	If cCommand == "D"
		If AD7_AGEREU == "R"
			//Cancela reuniao  
			aRetEXG :=  ExgCancMeetingFunction(	cUserEXG						,;
												cSenhaEXG						,;
												cURL							,;
												cEmailV							,;
												AD7_EMAILP						,;
												""								,;
												STR0018	   						,;  //"Cancelamento Reuniao."
												STR0019 + Alltrim(AD7_TOPICO)	,; //"Cancelamento automatico da Reuniao: "
												AD7_EMLNAM						,;
												F321GetLanExg()					) 
		Else
			aRetEXG :=  ExgDelAppointment(cUserEXG, cSenhaEXG, cURL, AD7_EMLNAM,F321GetLanExg())
	    EndIF                                    
	ElseIf cCommand == "A"     
	
	   	If !Empty(AD7_EMLNAM)
			cNomeEml	:= Alltrim(AD7_EMLNAM)
		Else
			cNomeEml	:= ft321GeraEML()
	  	EndIf
	
		If !Empty(AD7_CODCLI)
	 		cDescricao := STR0019 + AD7_CODCLI + "/" + AD7_LOJA + " - " + Alltrim(Posicione("SA1",1,xFilial("SA1")+AD7_CODCLI+AD7_LOJA,"A1_NOME")) + CHR(13)+CHR(10) //"Cliente : "
		ElseIf !Empty(AD7_PROSPE) 
	    	cDescricao := STR0020 + AD7_PROSPE + "/" + AD7_LOJPRO + " - " + Alltrim(Posicione("SUS",1,xFilial("SUS")+AD7_PROSPE+AD7_LOJPRO,"US_NOME")) +CHR(13)+CHR(10) //"Prospect : "
		Else
			cDescricao := STR0021 + CHR(13)+CHR(10) //"Cliente nao informado."
		EndIF  
		
		//Oportunidade
		If !Empty(AD7_NROPOR)
			cDescricao += STR0022 + Alltrim(Posicione("AD1",1,xFilial("AD1")+AD7_NROPOR,"AD1_DESCRI")) +CHR(13)+CHR(10)  //"Oportunidade : "
		EndIF			    		
	
		//Contato
		If !Empty(AD7_CONTAT)
			cDescricao += STR0023 + AD7_CONTAT + " - " + Alltrim(Posicione("SU5",1,xFilial("SU5")+AD7_CONTAT,"U5_CONTAT")) +CHR(13)+CHR(10)+CHR(13)+CHR(10)  //"Contato : "
		EndIF			    		
	
	    //Comentario
	    If !Empty(AD7_CODMEM)
			cDescricao += AllTrim(MSMM(AD7_CODMEM))	
		EndIf
		        
		If AD7_AGEREU == "A"
	    	aRetEXG := ExgCrtAppointment(	cUserEXG				,; 	// Usuario
											cSenhaEXG				,;	// Senha
											cURL					,;	// URL
											AD7_DATA				,;	// Data Inicio
											AD7_DATA				,;	// Data Fim
											ft321VldHora(AD7_HORA1)	,;	// Hora Inicio
											ft321VldHora(AD7_HORA2)	,;	// Hora Fim
											AD7_TOPICO				,;	// Subject			
											cDescricao				,;	// Descricao
											AD7_LOCAL				,;	// Local
											cNomeEml				,;	// Nome do arquivo .EML
																	,;
																	,;
																	,;
																	,;
																	,;
											F321GetLanExg()			)	// Idioma do exchange
		Else
			aRetEXG := ExgCrtMeeting(	cUserEXG				,;	// Usuario
										cSenhaEXG				,;	// Senha
										cURL					,;	// URL
										Alltrim(SA3->A3_EMAIL)	,;	// TO
										AD7_EMAILP				,;	// CC
										""						,;	// BCC
										AD7_DATA				,;	// Data Inicio
										AD7_DATA				,;	// Data Fim
										ft321VldHora(AD7_HORA1)	,;	// Hora Inicio
										ft321VldHora(AD7_HORA2)	,;	// Hora Fim
										AD7_TOPICO				,;	// Subject			
										cDescricao				,;	// Descricao
										AD7_LOCAL				,;	// Local
										cNomeEml				,;	// Nome do arquivo .EML
																,;
																,;
																,;
																,;
																,;
										F321GetLanExg()			)	// Idioma do exchange
		EndIf
		
		If aRetEXG[1]
		    //Pesquisa data Lastmodified
			aAgendaPESQ := ExgConsAppointment(cUserEXG, cSenhaEXG, cURL,,,,,cNomeEml,F321GetLanExg())
		    If (aAgendaPESQ[1]) .And. Len(aAgendaPESQ[3]) > 0
				//Atualiza  agenda Protheus com o apontamento gerado no Exchange
	      		RecLock("AD7",.F.)
	       			AD7->AD7_LASTMO		:= aAgendaPESQ[3,1,_LASTMOD]
	       			AD7->AD7_EMLNAM		:= cNomeEml
	  	   		MsUnlock()    
	    	Else
				aRet :=  FT321IntegrationInformation(aAgendaPESQ[2], nil , lAutomatico) 
				   	
	    	EndIf
		EndIf	
	    
	EndIf 
	
	If !aRetEXG[1]
		aRet := FT321IntegrationInformation(aRetEXG[2],nil,lAutomatico) 
		
	EndIf
	
	SA3->(RestArea(aAreaSA3))

//Exchange 2007 e superiores
Else       
	//Incluir ou alterar agendas no Exchange                
	If cCommand == "A" 
	
		If !Empty(AD7_CODCLI)
	 		cDescricao := STR0019 + AD7_CODCLI + "/" + AD7_LOJA + " - " + Alltrim(Posicione("SA1",1,xFilial("SA1")+AD7_CODCLI+AD7_LOJA,"A1_NOME")) + CHR(13)+CHR(10) //"Cliente : "
		ElseIf !Empty(AD7_PROSPE) 
	    	cDescricao := STR0020 + AD7_PROSPE + "/" + AD7_LOJPRO + " - " + Alltrim(Posicione("SUS",1,xFilial("SUS")+AD7_PROSPE+AD7_LOJPRO,"US_NOME")) +CHR(13)+CHR(10) //"Prospect : "
		Else
			cDescricao := STR0021 + CHR(13)+CHR(10) //"Cliente nao informado."
		EndIF  
		
		//Oportunidade
		If !Empty(AD7_NROPOR)
			cDescricao += STR0022 + Alltrim(Posicione("AD1",1,xFilial("AD1")+AD7_NROPOR,"AD1_DESCRI")) +CHR(13)+CHR(10)  //"Oportunidade : "
		EndIF			    		
	
		//Contato
		If !Empty(AD7_CONTAT)
			cDescricao += STR0023 + AD7_CONTAT + " - " + Alltrim(Posicione("SU5",1,xFilial("SU5")+AD7_CONTAT,"U5_CONTAT")) +CHR(13)+CHR(10)+CHR(13)+CHR(10)  //"Contato : "
		EndIF			    				
		
		If !Empty(AD7->AD7_CODMEM)
			cDescricao += AllTrim(MSMM(AD7->AD7_CODMEM))
		EndIf
	         
		//Inclusao
		If Empty(AD7->AD7_IDEXC)
			aRetorno := EX07_Meet1(	AllTrim(cUserEXG),;
									AllTrim(cSenhaEXG),;
									AD7->AD7_TOPICO,;
									cDescricao,;                              
									AD7->AD7_DATA,;
									AD7->AD7_HORA1,;
									AD7->AD7_DATA,;
									AD7->AD7_HORA2,;
									AD7->AD7_LOCAL,;
									StrToArray(AD7->AD7_EMAILP,";"),;
									AD7->AD7_AGEREU,;
									AD7->(RecNo()),;
									If ( (AD7->(FieldPos("AD7_ALERTA")) > 0 .AND. AD7->(FieldPos("AD7_TPALER")) > 0), ConvertMin(AD7->AD7_ALERTA, AD7->AD7_TPALER), 0)  )
		
			//Atualiza a agenda do sistema com o ID da Agenda do Exchange
			If aRetorno[1] .And. !Empty(aRetorno[3])
				dbSelectArea("AD7")
				RecLock("AD7",.F.)
					AD7->AD7_IDEXC 	:= aRetorno[3]
					AD7->AD7_CHGKEY	:= aRetorno[4]
				MsUnlock()
			EndIf 

		//Alteracao	
		ElseIf !Empty(AD7->AD7_IDEXC)
			aRetorno := EX07_Meet2(	AllTrim(cUserEXG),;
									AllTrim(cSenhaEXG),;
									AD7->AD7_TOPICO,;
									AllTrim(MSMM(AD7->AD7_CODMEM)),;                              
									AD7->AD7_DATA,;
									AD7->AD7_HORA1,;
									AD7->AD7_DATA,;
									AD7->AD7_HORA2,;
									AD7->AD7_LOCAL,;
									StrToArray(AD7->AD7_EMAILP,";"),;
									AD7->AD7_AGEREU,;
									AD7->AD7_IDEXC,;
									AD7->AD7_CHGKEY,;
									If ( (AD7->(FieldPos("AD7_ALERTA")) > 0 .AND. AD7->(FieldPos("AD7_TPALER")) > 0), ConvertMin(AD7->AD7_ALERTA, AD7->AD7_TPALER),0) )
		EndIf
		
	//Apagar agendas do Exchange
	ElseIf cCommand == "D"
		aRetorno := EX07_Meet3(AllTrim(cUserEXG),AllTrim(cSenhaEXG),AD7->AD7_IDEXC,AD7->AD7_CHGKEY)
	EndIf
	
	If Len(aRetorno) > 0 .AND. !aRetorno[1]
		aRet := FT321IntegrationInformation(STR0028,aRetorno[2],lAutomatico) // "Não foi possível efetuar a integração com exchange, tente novamente mais tarde ou se o problema persistir, contate o administrador do sistema!"
		
	EndIf
EndIf

Return aRet 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³f321ConvUTCTimeºAutor  ³Cleber Souza	 º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function f321ConvUTCTime(dData,cHora)

Local aRet	:= {}
     
aRet := ExecInClient( 400, {"UTCtoLocalTime", DTOS(dData), cHora} ) 
If Len(aRet)>0
	aRet[1] := STOD(aRet[1])
EndIf

Return aRet 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³f321AtuAgeExg  ºAutor  ³Cleber Souza	     º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function f321AtuTarExg(cCommand,cUserEXG,cSenhaEXG,cAlias,lAutomatico)

Local cURL      	:= f321GetUrlExg()
Local aAreaSA3		:= SA3->(GetArea())
Local aRetEXG		:= {}
Local aRet				:= {.T., ""}
Local cDescricao	:= "" 
Local cNomeEml		:= ""          
Local aTarefaPESQ	:= {}                           
Local cStatus		:= ""     
Local cVersaoExchange   := GetMv("MV_VEREXCH",,"") 
Local aRetorno		:= {}

Default lAutomatico := .F.

dbSelectArea(cAlias)
                            
//Versoes anteriores do Exchange Server
If Val(cVersaoExchange) < 2007
	cEmailV	 := Alltrim(Posicione("SA3",7,xFilial("SA3")+AD8_CODUSR,"A3_EMAIL"))
	If cCommand == "D"
	    aRetEXG :=  ExgDelTasks(cUserEXG, cSenhaEXG, cURL, AD8_EMLNAM, F321GetLanExg()) 
	
	ElseIf cCommand == "A"     
	
	   	If !Empty(AD8_EMLNAM)
			cNomeEml	:= Alltrim(AD8_EMLNAM)
		Else
			cNomeEml	:= ft321GeraEML()
	  	EndIf
	
		If !Empty(AD8_CODCLI)
	 		cDescricao := STR0019 + AD8_CODCLI + "/" + AD8_LOJCLI + " - " + Alltrim(Posicione("SA1",1,xFilial("SA1")+AD8_CODCLI+AD8_LOJCLI,"A1_NOME")) + CHR(13)+CHR(10)
		ElseIf !Empty(AD8_PROSPE) 
	    	cDescricao := STR0020 + AD8_PROSPE + "/" + AD8_LOJPRO + " - " + Alltrim(Posicione("SUS",1,xFilial("SUS")+AD8_PROSPE+AD8_LOJPRO,"US_NOME")) +CHR(13)+CHR(10)
		Else
			cDescricao := STR0021 + CHR(13)+CHR(10)
		EndIF  
		
	    //Comentario
	    If !Empty(AD8_CODMEM)
			cDescricao += AllTrim(MSMM(AD8_CODMEM))	
		EndIf
		       
		cStatus := Alltrim(Str(Val(AD8_STATUS)-1))
		
		aRetEXG := ExgCrtTasks(cUserEXG,;
		 					   cSenhaEXG,;
		 					   cUrl,;
		 					   AD8_DTINI,;
		 					   AD8_DTFIM,;
		 					   ft321VldHora(AD8_HORA1),;
		 					   ft321VldHora(AD8_HORA2),;
		 					   AD8_TOPICO,;
		 					   cDescricao,;
		 					   AD8_PERC,;
		 					   cStatus,;
		 					   IIF(!Empty(AD8_DTREMI),"1","0"),;
		 					   IIF(AD8_PERC<100,"1","0"),;
		 					   cNomeEml,;
		 					   AD8_DTREMI,;
		 					   ft321VldHora(AD8_HRREMI),;
		 					   F321GetLanExg()) 
	
		If aRetEXG[1]
		    //Pesquisa data Lastmodified 
		    aTarefaPESQ := ExgConsTasks(cUserEXG, cSenhaEXG, cURL, "", "", "", "",cNomeEml,F321GetLanExg())    
		    If (aTarefaPESQ[1]) .And. Len(aTarefaPESQ[3]) > 0 
				//Atualiza  agenda Protheus com o apontamento gerado no Exchange
	      		RecLock("AD8",.F.)
	       			AD8->AD8_LASTMO		:= aTarefaPESQ[3,1,_TARLASTMOD]
	       			AD8->AD8_EMLNAM		:= cNomeEml
	  	   		MsUnlock()    
	    	Else
				aRet := FT321IntegrationInformation(aTarefaPESQ[2], nil, lAutomatico) 
				    	
	    	EndIf
		EndIf	
	    
	EndIf 
	
	If !aRetEXG[1]
		aRet := FT321IntegrationInformation(aRetEXG[2], nil, lAutomatico) 
	
	EndIf
	
	SA3->(RestArea(aAreaSA3))
Else     
	//Apaga a tarefa no Exchange
	If cCommand == "D" .And. !Empty(AD8_IDEXC)
		aRetorno := EX07_Task2(Alltrim(cUserEXG),ALltrim(cSenhaEXG),AllTrim(AD8_IDEXC),AllTrim(AD8_CHGKEY))
	       
	//Altera ou inclui tarefa no Exchange
	ElseIf cCommand == "A"		    
		
		If !Empty(AD8_CODCLI)
	 		cDescricao := STR0019 + AD8_CODCLI + "/" + AD8_LOJCLI + " - " + Alltrim(Posicione("SA1",1,xFilial("SA1")+AD8_CODCLI+AD8_LOJCLI,"A1_NOME")) + CHR(13)+CHR(10)
		ElseIf !Empty(AD8_PROSPE) 
	    	cDescricao := STR0020 + AD8_PROSPE + "/" + AD8_LOJPRO + " - " + Alltrim(Posicione("SUS",1,xFilial("SUS")+AD8_PROSPE+AD8_LOJPRO,"US_NOME")) +CHR(13)+CHR(10)
		Else
			cDescricao := STR0021 + CHR(13)+CHR(10)
		EndIF  
		
		If !Empty(AD8_CODMEM)
			cDescricao += AllTrim(MSMM(AD8_CODMEM))
		EndIf
			
		//Inclusao
		If Empty(AD8_IDEXC)
			aRetorno := EX07_Task1(	Alltrim(cUserEXG),;
									ALltrim(cSenhaEXG),;
									Alltrim(AD8_TOPICO),;
									cDescricao,;
									AD8_DTINI,;
									AD8_DTFIM,;
									ft321VldHora(AD8_HORA1),;
									ft321VldHora(AD8_HORA2),;
									AllTrim(AD8_STATUS),;
									AllTrim(AD8_PRIOR),;
									AllTrim(Str(AD8_PERC)),;
									AD8_DTREMI,;
									AD8_HRREMI )
									
			If aRetorno[1]
				AD8->(RecLock("AD8",.F.))
					AD8->AD8_IDEXC 	:= aRetorno[3]
					AD8->AD8_CHGKEY	:= aRetorno[4]
				AD8->(MsUnlock())			
			EndIf
		//Alteracao
		Else
			aRetorno := EX07_Task3(	Alltrim(cUserEXG),;
									ALltrim(cSenhaEXG),;
									Alltrim(AD8_TOPICO),;
									Alltrim(MSMM(AD8_CODMEM)),;
									AD8_DTINI,;
									AD8_DTFIM,;
									ft321VldHora(AD8_HORA1),;
									ft321VldHora(AD8_HORA2),;
									AllTrim(AD8_IDEXC),;
									AllTrim(AD8_CHGKEY),;
									AllTrim(AD8_STATUS),;
									AllTrim(AD8_PRIOR),;
									AllTrim(Str(AD8_PERC)),;
									AD8_DTREMI,;
									AD8_HRREMI ) 
			If aRetorno[1]
				AD8->(RecLock("AD8",.F.))
					AD8->AD8_IDEXC 	:= aRetorno[3]
					AD8->AD8_CHGKEY	:= aRetorno[4]
				AD8->(MsUnlock())			
			EndIf		
		EndIf
	EndIf
	
	If Len(aRetorno) > 0 .AND. !aRetorno[1]
		aRet := FT321IntegrationInformation(STR0028, aRetorno[2] ,lAutomatico) // "Não foi possível efetuar a integração com exchange, tente novamente mais tarde ou se o problema persistir, contate o administrador do sistema!"
	
	EndIf
EndIf	

Return(aRet)    

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³f321GetUrlExg  ºAutor  ³Cleber Souza	 º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F321GetUrlExg() 
           
Local cRet	:= ""
Local aInfo	:= {}

If SA3->(!EOF()) .and. !Empty(SA3->A3_URLEXG)
	cRet 	:= SA3->A3_URLEXG
Else                                        
	//Versoes anteriores ao Exchange 2007
	If Val(SuperGetMv("MV_VEREXCH",,"")) < 2007
		cRet	:= SuperGetMV("MV_URLEXG",,"")
		aInfo	:= GetApoInfo("EXGXFUNCS.PRW") 
	Else
		If SuperGetMv("MV_VEREXCH",,"") == "2007"
			cRet	:= SuperGetMV("MV_URLEWS",,"")
			If Empty(cRet)
				cRet := SuperGetMV("MV_EWS2007",,"")
			EndIf
		ElseIf SuperGetMv("MV_VEREXCH",,"") >= "2010"
			cRet := SuperGetMV("MV_EWS2010",,"")
		EndIf
		aInfo	:= GetApoInfo("exchange_manual.PRW") 
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se o fonte correspondente a versao utilizada nao estiver compilado,³
//³retorna branco                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(cRet) .AND. Len(aInfo) == 0
	cRet := ""
EndIf

Return AllTrim(cRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³f321GetUrlExg  ºAutor  ³Cleber Souza	 º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F321GetLanExg() 
           
Local cRet	:= ""

If SA3->(!EOF()) .AND. SA3->(FieldPos("A3_LANEXG")) > 0 .AND. !Empty(SA3->A3_LANEXG)
	cRet 	:= SA3->A3_LANEXG
Else
    cRet	:= SuperGetMV("MV_LANEXG",,"en_US")
EndIf	

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FT321IntegrationInformation  ºAutor  ³Cleber Souza	 º Data ³  11/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Sincroniza Tarefas e Agenda com o Exchange do usuário.	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³FATA320                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FT321IntegrationInformation(cMensagem, cDetalhe, lAutomatico)
	Local oDlgII				:= Nil
	Local oFntTit				:= Nil
	Local oFntMsg				:= Nil
	Local oBmp					:= Nil
	Local oMsgDet				:= Nil
	Local lTelaDetalhe			:= .F.
	Local lExibeBotaoDetalhe	:= .T.
	Local aRet					:= {}
	
	
	
	Default lAutomatico := .F. //se for chamado por thread (sincronizacao automatica) nao exibe mensagem de erro
	Default cMensagem := ''
	Default cDetalhe := ''
	
	aRet := { .F., cMensagem + CRLF + CRLF + cDetalhe }
	
	
	If Empty(cDetalhe)
		lExibeBotaoDetalhe := .F.
	EndIf
	
	If !lAutomatico
		DEFINE MSDIALOG oDlgII TITLE STR0029 FROM 0,0 TO 130,600 PIXEL // "Integração com Exchange"
		
		DEFINE FONT oFntTit NAME "Arial"  SIZE 6,16	BOLD
		DEFINE FONT oFntMsg NAME "Arial"  SIZE 5,15
		
		@ 0,0  BITMAP oBmp RESNAME "LOGIN" oF oDlgII SIZE 100,600 NOBORDER WHEN .F. PIXEL // "Integração com Exchange"
		@05,60 TO 45,300 PROMPT STR0030 PIXEL // "Informação"
		@13,62 GET cMensagem FONT oFntMsg MULTILINE NOBORDER READONLY HSCROLL SIZE 236,30 PIXEL
		
		@50,200 BUTTON STR0032 PIXEL ACTION oDlgII:End() // "OK"
		
		If lExibeBotaoDetalhe
			@50,230 BUTTON STR0031 PIXEL ACTION If(	!lTelaDetalhe,;  // "Detalhes"
			(oDlgII:ReadClientCoors(.T.),oDlgII:Move(oDlgII:nTop,oDlgII:nLeft,oDlgII:nWidth,oDlgII:nHeight+165,,.T.),lTelaDetalhe:=.T.),;
			(oDlgII:ReadClientCoors(.T.),oDlgII:Move(oDlgII:nTop,oDlgII:nLeft,oDlgII:nWidth,oDlgII:nHeight-165,,.T.),lTelaDetalhe:=.F.))		
			@ 67,60 TO 140,300 PROMPT STR0049 PIXEL //"Detalhes da informação:" 
			@ 75,62 GET oMsgDet VAR cDetalhe FONT oFntMsg MULTILINE NOBORDER READONLY HSCROLL SIZE 236,63 PIXEL
		EndIf
		
		ACTIVATE MSDIALOG oDlgII CENTERED
		
	EndIf


Return aRet

//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ConvertMin()
Converte o tempo definido pelo usuario para minutos
 
@param nTime tempo  
@param cType unidade de medida do tempo (1 = minutos / 2 = horas / 3 = dias)
@return nMinutes tempo em minutos
@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Static Function ConvertMin(nTime, cType)

Local nMinutes := 0

If cType == '1' //tempo em minutos
	nMinutes 	:= nTime
ElseIf cType == '2' //tempo em horas
	nMinutes := nTime * 60
ElseIf cType == '3' //tempo em dias
	nMinutes := nTime * 1440
EndIf

Return nMinutes

//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} FT321IncAge()
realiza inclusao no protheus dos agendamentos inseridos diretamente no outlook - sincronização bidirecional

@param cUserExchange usuario para conexao com exchange
@param cPassExchange senha para conexao com exchange
@param dDataIni data inicial para buscar agendamentos no outlook
@param dDataFim data final para buscar agendamentos no outlook
@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function FT321IncAge(cUserExchange,cPassExchange, dDataIni, dDataFim)
Local aRetSinc := {.F., ''}
Local aRetAgenda := {}
Local nX

//Busca os agendamentos no exchange
aRetSinc := EX07_Meet4(cUserExchange,cPassExchange, dDataIni, dDataFim)
aRetAgenda := aRetSinc[3]

If ValType(aRetAgenda) == 'A' //Testa se recebeu alguma coisa na lista de agendamentos
	//percorre o array retornado com os agendamentos
	For nX := 1 to Len(aRetAgenda)
		//verifica se ja existe o agendamento no protheus (busca pelo id)
		If !ExcExistEnt(aRetAgenda[nX][1], "AD7", 9 )
			//se nao existir no protheus, insere
			ExcInsMeet(aRetAgenda[nX])
		EndIf
	
	Next nX
EndIf	

Return aRetSinc

//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ExcExistEnt()
verifica se ja existe o agendamento ou tarefa no protheus (busca pelo id)
@param cIdExchange IdExchange do registro a ser procurado
@param cAlias tabela a ser considerada (agenda ou tarefas)
@param nOrder indice da tabela a ser usado

@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function ExcExistEnt(cIdExchange, cAlias, nOrder)

Local lExiste := .F. //flag para definir se existe ou nao o agendamento no protheus
Local aArea := GetArea()
Local aAreaAlias := (cAlias)->(GetArea())

DbSelectArea(cAlias)
DbSetOrder(nOrder)

lExiste := DbSeek(xFilial(cAlias)+cIdExchange, .T.)

RestArea(aAreaAlias)
RestArea(aArea)

Return lExiste

//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ExcInsMeet()

Inclui no protheus um agendamento baseado em um registro recebido do exchange

@param aAgenda -> array contendo os dados vindos do exchange para gravação no banco.


@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function ExcInsMeet(aAgenda)

Local aArea := GetArea()
Local aAreaAD7 := AD7->(GetArea())
Local cCodVend := ""
Local aNvlEstrut	:= {}

If ( nModulo == 73 .AND. SA3->(FieldPos("A3_SNAEXG")) > 0 .AND. AD7->(FieldPos("AD7_IDESTN")) > 0 .AND. FindFunction("CRMXRetVend") )
	cCodVend :=  CRMXRetVend() //vendedor logado  
Else
	cCodVend := Ft320RpSel()
EndIf
If FindFunction("CRMXNvlEst") .AND. !Empty(cCodVend)
	aNvlEstrut := CRMXNvlEst(cCodVend)
EndIf 

/*

1 - id exchange
2 - changekey
3 - assunto
4 - corpo
5 - data/hora inicio
6 - data/hora termino
7 - IsMeeting (flag)
8 - local
9 - emails (array)
10 - lembrete (em minutos)

*/


RecLock("AD7",.T.)

AD7->AD7_FILIAL	:= xFilial("AD7")
AD7->AD7_VEND   	:= cCodVend //vendedor logado
AD7->AD7_DATAAP	:= dDatabase
AD7->AD7_IDEXC	:= aAgenda[1]
AD7->AD7_CHGKEY	:= aAgenda[2]
AD7->AD7_TOPICO	:= aAgenda[3]								
AD7->AD7_DATA		:= ExUTCToLocal(aAgenda[5])[1]
AD7->AD7_HORA1	:= ExUTCToLocal(aAgenda[5])[2]
AD7->AD7_HORA2	:= ExUTCToLocal(aAgenda[6])[2]
AD7->AD7_AGEREU	:= "A"
AD7->AD7_LOCAL	:= AllTrim(aAgenda[8])
AD7->AD7_EMAILP	:= IIF(ValType(aAgenda[9]) == "A", Upper(ArrayToStr( aAgenda[9],";" )) , aAgenda[9])

If	AD7->(FieldPos("AD7_IDESTN")) > 0 .AND.  AD7->(FieldPos("AD7_NVESTN")) > 0 .AND. !Empty(aNvlEstrut)
   	AD7->AD7_IDESTN  := aNvlEstrut[1]
   	AD7->AD7_NVESTN  := aNvlEstrut[2] 
EndIf

If (AD7->(FieldPos("AD7_ALERTA")) > 0 .AND. AD7->(FieldPos("AD7_TPALER")) > 0)
	AD7->AD7_ALERTA	:= Val(aAgenda[10])
	AD7->AD7_TPALER	:= '1'//joga sempre o tipo = minutos pq o outlook sempre retorna em minutos
EndIf

MSMM(AD7->AD7_CODMEM,,,aAgenda[4],1,,,"AD7","AD7_CODMEM")

AD7->( MsUnlock() )	       

RestArea(aAreaAD7)
RestArea(aArea)

return

//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} FT321IncTar()
funcao de processamento principal da integração bidirecional com exchange (busca registros no exchange e inclui no protheus)

@param cUserExchange usuario para conexao com exchange
@param cPassExchange senha para conexao com exchange
@param dDataIni data inicial para buscar agendamentos no outlook
@param dDataFim data final para buscar agendamentos no outlook

@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function FT321IncTar(cUserExchange,cPassExchange, dDataIni, dDataFim)
Local aRetSinc := {.F. ,''}
Local aRetTarefas
Local nX
Local dDataExecAux 

//Busca os agendamentos no exchange
aRetSinc := EX07_Task4(cUserExchange,cPassExchange)
aRetTarefas := aRetSinc[3]

If ValType(aRetTarefas) == 'A' 
	//percorre o array retornado com os agendamentos
	For nX := 1 to Len(aRetTarefas)
		
		//filtra data
		If !Empty(aRetTarefas[nX][9])
			dDataExecAux := ExUTCToLocal(aRetTarefas[nX][9])[1]
			If dDataExecAux >= dDataIni .AND. dDataExecAux <= dDataFim
				//verifica se ja existe o agendamento no protheus (busca pelo id)
				If !ExcExistEnt(aRetTarefas[nX][1], "AD8", 6 )
					//se nao existir no protheus, insere
					ExcInsTask(aRetTarefas[nX])
				EndIf
			EndIf
		EndIf
		
	Next nX
EndIf

Return aRetSinc

//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ExcInsTask()
Inclui no protheus uma tarefa baseado em um registro recebido do exchange

@param aTarefas Dados da tarefa

@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function ExcInsTask(aTarefas)

Local aArea := GetArea()
Local aAreaAD8 := AD8->(GetArea())
Local cStatus := ''
Local cCodVend := ""
Local aNvlEstrut	:= {}

If ( nModulo == 73 .AND. SA3->(FieldPos("A3_SNAEXG")) > 0 .AND. AD7->(FieldPos("AD7_IDESTN")) > 0 .AND. FindFunction("CRMXRetVend") )
	cCodVend :=  CRMXRetVend() //vendedor logado
Else
	cCodVend := Ft320RpSel()
EndIf
If FindFunction("CRMXNvlEst") .AND. !Empty(cCodVend)
	aNvlEstrut := CRMXNvlEst(cCodVend)
EndIf

/*

1 - id exchange
2 - changekey
3 - assunto
4 - corpo
5 - importancia / prioridade
6- Data/Hora Lembrete -> array {data , hora}
7- Flag - determina se tem lembrete
8- lembrete (em minutos)
9- Data de conclusao
10- % de conclusao
11- data de inicio
12- status
*/

Do Case
	Case aTarefas[12] == "NotStarted"			// Não iniciado
		cStatus := '1'
	Case aTarefas[12] == "InProgress"		 	// Em andamento
		cStatus := '2'	
	Case aTarefas[12] == "Completed" 			// Completada
		cStatus := '3'
	Case aTarefas[12] == "WaitingOnOthers" 	// Suspensa
		cStatus := '4'
	Case aTarefas[12] == "Deferred" 			// Encerrada
		cStatus := '5'
EndCase	

RecLock("AD8",.T.)
	
AD8->AD8_FILIAL	:= xFilial("AD8")
AD8->AD8_TAREFA 	:= GETSX8NUM("AD8","AD8_TAREFA")                                                                                                   
AD8->AD8_CODUSR  	:= __cUserId //usuario logado
AD8->AD8_TOPICO	:= aTarefas[3]
AD8->AD8_IDEXC	:= aTarefas[1]
AD8->AD8_CHGKEY	:= aTarefas[2]
AD8->AD8_STATUS	:= cStatus
AD8->AD8_PRIOR	:= aTarefas[5]
AD8->AD8_PERC		:= Val(aTarefas[10])
AD8->AD8_PRIOR	:= aTarefas[5]

If	AD8->(FieldPos("AD8_IDESTN")) > 0 .AND.  AD8->(FieldPos("AD8_NVESTN")) > 0 .AND. !Empty(aNvlEstrut) 
   	AD8->AD8_VEND	   := cCodVend
   	AD8->AD8_IDESTN  := aNvlEstrut[1]
   	AD8->AD8_NVESTN  := aNvlEstrut[2] 
EndIf

If !Empty(aTarefas[6])
	AD8->AD8_DTREMI	:= ExUTCToLocal(aTarefas[6])[1]
	AD8->AD8_HRREMI	:= ExUTCToLocal(aTarefas[6])[2]
EndIf

If !Empty(aTarefas[9])
	AD8->AD8_DTFIM	:= ExUTCToLocal(aTarefas[9])[1]
	AD8->AD8_HORA2	:= ExUTCToLocal(aTarefas[9])[2]
EndIf

If !Empty(aTarefas[11])
	AD8->AD8_DTINI	:= ExUTCToLocal(aTarefas[11])[1]
	AD8->AD8_HORA1	:= ExUTCToLocal(aTarefas[11])[2]
EndIf
		
MSMM(AD8->AD8_CODMEM,,,aTarefas[4],1,,,"AD8","AD8_CODMEM")

AD8->( MsUnlock() )	       
AD8->( ConfirmSX8()) 

RestArea(aAreaAD8)
RestArea(aArea)

return

//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} FT321IncCon()
realiza inclusao no protheus dos contatos inseridos diretamente no outlook - sincronização bidirecional

@param cUserExchange usuario para conexao com exchange
@param cPassExchange senha para conexao com exchange

@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function FT321IncCon(cUserExchange,cPassExchange)
Local aRetSinc := {.F. , ''}
Local aRetCont := {}
Local nX

//Busca os agendamentos no exchange
aRetSinc := EX07_Cont4(cUserExchange,cPassExchange)
aRetCont := aRetSinc[3]

If ValType(aRetCont) == 'A' 
	//percorre o array retornado com os agendamentos
	For nX := 1 to Len(aRetCont)
		//verifica se ja existe o agendamento no protheus (busca pelo id)
		If !ExcExistEnt(aRetCont[nX][1], "SU5", 11 )
			//se nao existir no protheus, insere
			ExcInsCont(aRetCont[nX])
		EndIf
	
	Next nX
EndIf

Return aRetSinc

//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ExcInsCont()
Inclui no protheus um contato baseado em um registro recebido do exchange

@param aContatos Dados do contato

@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function ExcInsCont(aContatos)

Local aArea      := GetArea()
Local aAreaSU5   := SU5->(GetArea())
Local aAreaAGA   := AGA->(GetArea())
Local cStatus    := ''
Local cCodAGA    := ''
Local cCodSU5    := NewNumCont()
Local cCodVnd    := ""
Local cCodUsr    := ""
Local aAreaAO3   := {}
Local cChave     := ""
Local aAutoAO4   := {}
Local nPosBusPho := aScan(aContatos[9],{|x|AllTrim(X)== "BusinessPhone"}) 
Local nPosHomePh := aScan(aContatos[9],{|x|AllTrim(X)== "HomePhone"}) 
Local nPosBusFax := aScan(aContatos[9],{|x|AllTrim(X)== "BusinessFax"}) 
Local nPosHomFax := aScan(aContatos[9],{|x|AllTrim(X)== "HomeFax"}) 
Local nPosMobPho := aScan(aContatos[9],{|x|AllTrim(X)== "MobilePhone"})

If nModulo == 73 
	cCodUsr :=  RetCodUsr() //Usuario logado
	If Select("AO3") > 0
		aAreaAO3 := AO3->(GetArea())	
	Else
		DbSelectArea("AO3")// Usuario do CRM
	EndIf	
	AO3->(DbSetOrder(1))//AO3_FILIAL+AO3_CODUSR
Else
	cCodVnd := Ft320RpSel()
EndIf

nPosBusPho += IIF(nPosBusPho > 0 , 1, 0) 
nPosHomePh += IIF(nPosHomePh > 0 , 1, 0) 
nPosBusFax += IIF(nPosBusFax > 0 , 1, 0) 
nPosHomFax += IIF(nPosHomFax > 0 , 1, 0) 
nPosMobPho += IIF(nPosMobPho > 0 , 1, 0) 

RecLock("SU5",.T.)

SU5->U5_FILIAL	:= xFilial("SU5")
SU5->U5_CODCONT 	:= cCodSU5 
If nModulo == 73
	SU5->U5_CODUSR    := cCodUsr //Vendedor logado
	If AO3->(DbSeek(xFilial("AO3")+cCodUsr))
		SU5->U5_CODSA3 := AO3->AO3_VEND
	EndIf
Else
	SU5->U5_CODSA3	:= cCodVnd //vendedor logado
EndIf
SU5->U5_IDEXC		:= aContatos[1]
SU5->U5_CHGKEY	:= aContatos[2]
SU5->U5_CONTAT  	:= aContatos[3] + ' ' + aContatos[6] //Nome + sobrenome
SU5->U5_EMAIL   	:= aContatos[7]

/*obs: nao serao importados os campos de cargo e tratamento. No protheus sao tabelas associadas que não existem no exchange. 
Não dá pra garantir a existencia dos registros dos 2 lados*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Adiciona ou Remove o privilegios deste registro.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cChave 	:= PadR(xFilial("SU5")+cCodSU5,TAMSX3( "AO4_CHVREG")[1])		
aAutoAO4	:= CRMA200PAut(3,"SU5",cChave,/*cCodUsr*/,/*aPermissoes*/,/*aNvlEstrut*/,/*cCodUsrCom*/,/*dDataVld*/)    
CRMA200Auto(aAutoAO4[1],aAutoAO4[2],3)

SU5->(MsUnlock())      

/*cadastrar enderecos e telefones*/
cPadrao := '1' //coloca como padrao somente o primeiro endereco inserido - o protheus soh permite um endereco padrao (independente do tipo)
If Len(aContatos[8]) > 4 .AND. !Empty(aContatos[8][5]) 
	cCodAGA := Ft321AGA(cPadrao, cCodSU5, '1', aContatos[8][5], aContatos[8][2], aContatos[8][4])
	cPadrao := '2'
EndIf
If Len(aContatos[8]) > 9 .AND. !Empty(aContatos[8][10]) 
	cCodAGA := Ft321AGA(cPadrao, cCodSU5, '2', aContatos[8][10], aContatos[8][7], aContatos[8][9])
EndIf


Ft321AGB(cCodSU5, '1', aContatos[9], nPosBusPho)
Ft321AGB(cCodSU5, '2', aContatos[9], nPosHomePh)
Ft321AGB(cCodSU5, '3', aContatos[9], nPosBusFax)
Ft321AGB(cCodSU5, '4', aContatos[9], nPosHomFax)
Ft321AGB(cCodSU5, '5', aContatos[9], nPosMobPho)



//atualiza contato com codigo do endereco
RecLock("SU5", .F.)
SU5->U5_CODAGA := cCodAGA
SU5->(MsUnLock())

RestArea(aAreaSU5)
RestArea(aAreaAGA)
RestArea(aArea)

If !Empty(aAreaAO3)
	RestArea(aAreaAO3)
EndIf	

Return


//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} Ft321AGA()
Grava dados de endereco

@param cPadrao Define se o endereco é padrao (1 = sim, 2 = não)
@param cCodSU5 codigo do contato para associar com o endereco
@param cTipo  tipo de endereco (comercial/residencial)
@param cEnd  endereco
@param cCidade
@param cUF 

@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function Ft321AGA(cPadrao, cCodSU5, cTipo, cEnd, cCidade, cUF)
Local cCodAGA := ''

RecLock("AGA", .T.)

AGA->AGA_FILIAL	:= xFilial("AGA")
AGA->AGA_CODIGO	:= cCodAGA := GetSx8Num("AGA","AGA_CODIGO")
AGA->AGA_ENTIDA	:= "SU5"					
AGA->AGA_CODENT	:= cCodSU5				
AGA->AGA_TIPO 	:= cTipo
AGA->AGA_PADRAO	:= cPadrao
AGA->AGA_END		:= cEnd
AGA->AGA_MUNDES	:= cCidade
AGA->AGA_EST		:= cUF

AGA->(MsUnLock())


Return cCodAGA


//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} Ft321AGB()
Grava dados de telefone

@param cCodSU5 codigo do contato para associar com o endereco
@param cTipo  tipo de telefone
@param aContatos  Dados do contato
@param nIndiceTel  indice do campo telefone no aContatos

@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Function Ft321AGB(cCodSU5, cTipo, aContatos, nIndiceTel)
Local cCodAGB := ''
Local cTelefone := ''

If nIndiceTel > 0
	cTelefone := aContatos[nIndiceTel]
EndIf

If !Empty(cTelefone)
	
	RecLock("AGB", .T.)
	
	AGB->AGB_FILIAL	:= xFilial("AGB")
	AGB->AGB_CODIGO	:= cCodAGB := GetSx8Num("AGB","AGB_CODIGO")
	AGB->AGB_ENTIDA	:= "SU5"					
	AGB->AGB_CODENT	:= cCodSU5				
	AGB->AGB_TIPO 	:= cTipo
	AGB->AGB_PADRAO	:= "1"
	AGB->AGB_TELEFO	:= cTelefone
	
	AGB->(MsUnLock())
	
	
	//atualiza contato com codigo do telefone
	Do Case
		Case cTipo == '1'	 //comercial		
			SU5AtuTel('U5_AGBRES', cCodAGB,'U5_FCOM1', cTelefone)
		Case cTipo == '2' //residencial			 	
			SU5AtuTel('U5_AGBCOM', cCodAGB,'U5_FONE', cTelefone)
		Case cTipo == '3' //fax comercial				
			SU5AtuTel('U5_AGBFAX', cCodAGB, 'U5_FAX',  cTelefone)
		Case cTipo == '4' //fax residencial	 	
			//nao tem campo pra amarracao de fax residencial na su5
		Case cTipo == '5' //celular	 			
			SU5AtuTel('U5_AGBCEL', cCodAGB, 'U5_CELULAR',cTelefone)
	EndCase	

EndIf

Return 


//------------------------------------------------------------------------------------------------
/*/{Protheus.doc} SU5AtuTel()
Auxiliar para gravacao de telefone na AGB

@param cCampoCod nome do campo referente a associacao do codigo de telefone na SU5
@param cCodAGB codigo da AGB

@author Vendas CRM
@since 04/06/2013
/*/
//------------------------------------------------------------------------------------------------
Static Function SU5AtuTel(cCampoCod, cCodAGB, cCampoTel, cTelefone)


RecLock("SU5", .F.)
SU5->(&cCampoCod) := cCodAGB
SU5->(MsUnLock())

Return


//----------------------------------------------------------
/*/{Protheus.doc} Ft321Usuar()
Auxiliar para retornar o usuário guardado na sessao

@Return cSavedUser usuario salvo na sessao corrente
@author Vendas CRM
@since 04/06/2013
/*/
//----------------------------------------------------------
Function Ft321Usuar()
Return cSavedUser

//----------------------------------------------------------
/*/{Protheus.doc} Ft321Senha()
Auxiliar para retornar a senha guardado na sessao

@Return cSavedPass senha salva na sessao corrente
@author Vendas CRM
@since 04/06/2013
/*/
//----------------------------------------------------------
Function Ft321Senha()
Return cSavedPass

//----------------------------------------------------------
/*/{Protheus.doc} Ft321Email()
Auxiliar para retornar o email guardado na sessao

@Return cSavedMail email salvo na sessao corrente
@author Vendas CRM
@since 04/06/2013
/*/
//----------------------------------------------------------
Function Ft321Email()
Return cSavedMail


//--------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} Ft321SncCrm()

Funcao apenas para a chamada da funcao local "ft321IUValOK"
Observacao = Apenas o modulo CRM utilizara essa chamada, para aproveitar o codigo de sincronismo 
que esta neste fonte.

posicoes do array que recebe
cUser             [2][1]
cSenhaUsu         [2][2]
lAgenda           [2][3]
dDtAgeIni         [2][4]
dDtAgeFim         [2][5]
lTarefa           [2][6]
dDtTarIni         [2][7]
dDtTarFim         [2][8]
cEndEmail         [2][9]
SA3->A3_SINCTAF  [2][10]
SA3->A3_SINCAGE  [2][11]
SA3->A3_SINCCON  [2][12]
SA3->A3_TIMEMIN  [2][13]
SA3->A3_BIAGEND  [2][14]
SA3->A3_BITAREF  [2][15]
SA3->A3_BICONT   [2][16]
SA3->A3_PERAGE   [2][17]
SA3->A3_PERTAF   [2][18]
SA3->A3_HABSINC  [2][19]

@sample	Ft321SncCrm(aDadosUser)

@param		ExpA1 = Array com todos os dados do usuario e preferencias de sincronizacao 

@return	Nenhum  

@author	  Victor Bitencourt
@since	  06/11/2013
@version  11.80      

/*/
//--------------------------------------------------------------------------------------------------------------
Function Ft321SncCrm(aDadosUser) 
Local aRetSinc := {}

aRetSinc := ft321IUValOK( aDadosUser[_PREFIXO,_USUAR],aDadosUser[_PREFIXO,_SENHA],aDadosUser[_PREFIXO,_ISAGENDA],aDadosUser[_PREFIXO,_DTAGEINI];
               ,aDadosUser[_PREFIXO,_DTAGEFIM],aDadosUser[_PREFIXO,_ISTAREFA],aDadosUser[_PREFIXO,_DTTARINI],aDadosUser[_PREFIXO,_DTTARFIM];
               ,"S",aDadosUser[_PREFIXO,_EMAILEND],aDadosUser[_PREFIXO,_SINCCON],aDadosUser[_PREFIXO,_HABSINC];
               ,aDadosUser[_PREFIXO,_PERAGE],aDadosUser[_PREFIXO,_PERTAF],aDadosUser[_PREFIXO,_TIMEMIN],aDadosUser[_PREFIXO,_BIAGEND];
               , aDadosUser[_PREFIXO,_BITAREF], aDadosUser[_PREFIXO,_BICONT],.T. , .T. )
               
// Verifica caso retorne um erro de sincronismo 401(Usuario e senha Invalidos), Retorna a tela de Senha.
// Erro na conexao               
If !aRetSinc[1]               
	If  '401' $ aRetSinc[2]  
		aInfoSinc := GetInfoUserSinc("S")
	EndIf 
EndIf

return
