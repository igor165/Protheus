#include "WSMAT110.CH"
#INCLUDE "APWEBSRV.CH"
#INCLUDE "PROTHEUS.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSMAT110  ³ Autor ³Erike Yuri da Silva    ³ Data ³20.06.2006  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Web Service das funcionalidades de Solicitacao de Compras    ³±±
±±³          ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±     	
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao da estruturas utilizadas                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

WSSTRUCT PurchasesRequestHeaderView
	WSDATA PurchaseRequisNumber			As String  OPTIONAL //Numero da Solic.de Compra	02	C1_NUM (eh optional, pois caso nao informado no put, o sistema gerara um numero sequencial)
	WSDATA NameofPetitioner				As String  OPTIONAL //Nome do Solicitante	23	C1_SOLICIT  
	WSDATA IssueDate					As Date             //Data de Emissao da SC	16	C1_EMISSAO	
	WSDATA DeliveryBranch				As String			//Filial de Entrega	45	C1_FILENT		
	WSDATA RequesterUnit				As String  OPTIONAL //Unidade Requisitante	30	C1_UNIDREQ	
	WSDATA PurchaserCode				As String  OPTIONAL //Codigo do Comprador	31	C1_CODCOMP	
ENDWSSTRUCT

WSSTRUCT PurchasesRequestItensView
	WSDATA PurchaseRequisNumberItem		As String			//Item da Solicitacao				03	C1_ITEM
	WSDATA Product						As String			//Codigo do Produto					04	C1_PRODUTO
	WSDATA MeasureUnit					As String OPTIONAL	//Unidade de medida					05	C1_UM
	WSDATA Quantity						As Float			//Quantidade da SC					06	C1_QUANT
	WSDATA Unit2ofMeasure				As String OPTIONAL  //Segunda Unidade de Medida			07	C1_SEGUM
	WSDATA Quantityin2MeasUnit			As Float  OPTIONAL  //Qtde na Segunda Unidade			08	C1_QTSEGUM
	WSDATA Necessity					As Date             //Data prev. da Necessidade			09	C1_DATPRF
	WSDATA Warehouse					As String OPTIONAL          //e	Armazem							10	C1_LOCAL
	WSDATA Notes						As String OPTIONAL  //Observacao						11	C1_OBS
	WSDATA ProductionOrder				As String OPTIONAL  //Ordem de Producao					12	C1_OP
	WSDATA CostCenter					As String OPTIONAL  //Centro de Custo					13	C1_CC
	WSDATA AccountCode					As String OPTIONAL  //Conta Contabil do Produto			14	C1_CONTA
	WSDATA AccountItem					As String OPTIONAL  //Item Da Conta Contabil			15	C1_ITEMCTA
	WSDATA DescriptionofProduct			As String OPTIONAL  //Descricao do Produto	18	C1_DESCRI
	WSDATA QuantityinOrders				As Float  OPTIONAL  //Quantidade em Pedido	25	C1_QUJE
	WSDATA TypeofProductionOrder		As String OPTIONAL	//Tipo da Ordem de ProduşÒo	36	C1_TPOP
	WSDATA BuyersGroup					As String OPTIONAL	//Grupo de Compradores	37	C1_GRUPCOM
	WSDATA AccountValueClass			As String OPTIONAL	//Classe Valor Contabil	41	C1_CLVL
	WSDATA MrpSeqOriginatedPR			As String OPTIONAL	//Seq MRP que originou SC	46	C1_SEQMRP
	WSDATA UnitValue					As Float  OPTIONAL	//Valor Unitario	47	C1_VUNIT
	WSDATA AUTVLDCONT					As String OPTIONAL	//Validacao de contrato para rotina automatica
	WSDATA UserFields                   As Array Of UserField OPTIONAL	
ENDWSSTRUCT

WSSTRUCT PurchasesRequestView
	WSDATA PRHeader 					As PurchasesRequestHeaderView  
	WSDATA PRItem						As ARRAY OF PurchasesRequestItensView
ENDWSSTRUCT


WSSTRUCT PurchasesRequestBrwView
	WSDATA PurchaseRequisNumber			As String			//Numero da Solic.de Compra	02	C1_NUM
	WSDATA PurchaseRequisNumberItem		As String			//Item da Solicitacao				03	C1_ITEM
	WSDATA Product						As String			//Codigo do Produto					04	C1_PRODUTO
	WSDATA MeasureUnit					As String			//Unidade de medida					05	C1_UM
	WSDATA Quantity						As Float			//Quantidade da SC					06	C1_QUANT
	WSDATA NameofPetitioner				As String           //Nome do Solicitante	23	C1_SOLICIT  
	WSDATA IssueDate					As Date             //Data de Emissao da SC	16	C1_EMISSAO	
	WSDATA DeliveryBranch				As String			//Filial de Entrega	45	C1_FILENT		
	WSDATA RequesterUnit				As String           //Unidade Requisitante	30	C1_UNIDREQ	
	WSDATA PurchaserCode				As String           //Codigo do Comprador	31	C1_CODCOMP	
ENDWSSTRUCT


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do Web Service de Controle do Usuario                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE MtPurchasesRequest DESCRIPTION STR0001 NAMESPACE "http://webservices.microsiga.com.br/mtpurchasesrequest.apw" //"Serviço de consulta e atualização de solicitação de Compras"
	WSDATA Header                 		As Array OF BrwHeader
	WSDATA HeaderType             		As String
	WSDATA UserCode               		As String
	WSDATA PurchaseRequisNumber			As String
	WSDATA PurchasesRequestID	  		As String
	WSDATA PurchaseRequisNumberFrom 	As String 	OPTIONAL
	WSDATA PurchaseRequisNumberTo		As String 	OPTIONAL
	WSDATA Status						As String 	OPTIONAL
	WSDATA DateFrom						As Date 	OPTIONAL
	WSDATA DateTo						As Date		OPTIONAL
	WSDATA PurchasesRequest       		As PurchasesRequestView
	WSDATA PurchasesRequestBrwItView	As Array OF PurchasesRequestBrwView
	WSDATA QueryAddWhere          		As String 	OPTIONAL
	WSDATA IndexKey               		As String 	OPTIONAL
	WSDATA Option						As String 	OPTIONAL
	WSDATA WsNull                 		As String   
	WSDATA CreatedSC		        	As String

	WSMETHOD GetHeader        		   DESCRIPTION STR0002 //"Método que descreve as estruturas de retorno do serviço"
	WSMETHOD GetPurchasesRequest	   DESCRIPTION STR0003 //"Método de consulta das informacoes da solicitação de compras"
	WSMETHOD BrwPurchasesRequest       DESCRIPTION STR0004 //"Método de listagem das solicitações de compras"
	WSMETHOD PutPurchasesRequest	   DESCRIPTION STR0005 //"Método de atualização das informacoes da solicitação de compras"
	WSMETHOD DelPurchasesRequest	   DESCRIPTION STR0006 //"Método de exclusão da solicitação de compras"
ENDWSSERVICE




/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetHeader ³Autor  ³ Erike Yuri da Silva   ³ Data ³20.06.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao dos headers deste WS                   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome da Estrutura                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o header de uma estrutura                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetHeader WSRECEIVE HeaderType WSSEND Header WSSERVICE MtPurchasesRequest

Local nX := 0

::Header := MtHeader(::HeaderType)
If Empty(::Header)                   
	Do Case 
		Case ::HeaderType == "PurchasesRequestHeaderView"
			WsPutHead(::Header,"C1_NUM","CODE")
			WsPutHead(::Header,"C1_SOLICIT","PETITIONER")
			WsPutHead(::Header,"C1_EMISSAO","ISSUE")
			WsPutHead(::Header,"C1_FILENT","DELIVERYBRANCH")
			WsPutHead(::Header,"C1_UNIDREQ","REQUESTERUNIT")
			WsPutHead(::Header,"C1_CODCOMP","PURCHASERCODE")		
			
		Case ::HeaderType == "PURCHASESREQUESTBRWVIEW" 
			WsPutHead(::Header,"C1_NUM","CODE")
			WsPutHead(::Header,"C1_ITEM","ITEMCODE")
			WsPutHead(::Header,"C1_PRODUTO","PRODUCTCODE")
			WsPutHead(::Header,"C1_UM","MEASUREUNIT")
			WsPutHead(::Header,"C1_QUANT","QUANTITY")
			WsPutHead(::Header,"C1_QUJE2","QUANTITYSEDSECONDUNIT")
			WsPutHead(::Header,"C1_SOLICIT","PETITIONER")
			WsPutHead(::Header,"C1_EMISSAO","ISSUE")
			WsPutHead(::Header,"C1_FILENT","DELIVERYBRANCH")
			WsPutHead(::Header,"C1_UNIDREQ","REQUESTERUNIT")
			WsPutHead(::Header,"C1_CODCOMP","PURCHASERCODE")

		Case ::HeaderType == "PURCHASESREQUESTITENSVIEW"  
			WsPutHead(::Header,"C1_ITEM","PURCHASEREQUISNUMBERITEM")
			WsPutHead(::Header,"C1_PRODUTO","PRODUCT")
			WsPutHead(::Header,"C1_UM","MEASUREUNIT")
			WsPutHead(::Header,"C1_QUANT","QUANTITY")
			WsPutHead(::Header,"C1_SEGUM","UNIT2OFMEASURE")
			WsPutHead(::Header,"C1_QTSEGUM","QUANTITYUNIT2OFMEASURE")
			WsPutHead(::Header,"C1_DATPRF","NECESSITY")
			WsPutHead(::Header,"C1_LOCAL","WAREHOUSE")
			WsPutHead(::Header,"C1_OBS","NOTES")
			WsPutHead(::Header,"C1_OP","PRODUCTIONORDER")
			WsPutHead(::Header,"C1_CC","COSTCENTER")
			WsPutHead(::Header,"C1_CONTA","ACCOUNTCODE")
			WsPutHead(::Header,"C1_ITEMCTA","ACCOUNTITEM")
			WsPutHead(::Header,"C1_DESCRI","DESCRIPTIONPRODUCT")
			WsPutHead(::Header,"C1_QUJE","QUANTITYINORDERS")
			WsPutHead(::Header,"C1_TPOP","TYPEPRODUCTIONORDER")
			WsPutHead(::Header,"C1_GRUPCOM","BUYERSGROUP")
			WsPutHead(::Header,"C1_CLVL","ACCOUNTVALUECLASS")
			WsPutHead(::Header,"C1_SEQMRP","MRPSEQORIGINATED")
			WsPutHead(::Header,"C1_VUNIT","UNITVALUE")

			AAdd(::Header,WSClassNew("BrwHeader"))                                                             
			nX := Len(::Header)		                                                                                   
			::Header[nX]:HeaderTitle   := STR0007 //"Valida Contrato"
			::Header[nX]:HeaderField   := "AUTVLDCONT"
			::Header[nX]:HeaderPicture := "!"
			::Header[nX]:HeaderSize    := 1
			::Header[nX]:HeaderDec     := 0
			::Header[nX]:HeaderType    := "C"
			::Header[nX]:HeaderComboBox:= ""
			::Header[nX]:HeaderOblig   := .F.
	EndCase
Endif
Return(.T.)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwPurchasesRequest³Autor ³Erike Yuri     ³ Data ³22.06.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das solicitacoes de compras            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Da SC                                                 ³±±
±±³          ³ExpC3: Ate SC                                                ³±±
±±³          ³ExpC4: Status da SC (1 = Abertas, 2 = Fechadas)              ³±±
±±³          ³ExpD1: Emissao de                                            ³±±
±±³          ³ExpD2: Emissao Ate                                           ³±±
±±³          ³ExpC5: Query adicional utilizada no filtro                   ³±±
±±³          ³ExpC6: Chave de indice utilizada para ordenar os campos      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve as solicitacoes de compras conforme para-³±±
±±³          ³metrizacao.                                                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
Da SC	: <branco>
Ate SC  : <ZZZZZZ>
Status	: Todos, ou em aberto
Data De	:
Data Ate:
Considera SC : Ambas, Firmes , Previstas

/*/
WSMETHOD BrwPurchasesRequest WSRECEIVE UserCode,PurchaseRequisNumberFrom,PurchaseRequisNumberTo,Status,DateFrom,DateTo,QueryAddWhere,IndexKey WSSEND PurchasesRequestBrwItView WSSERVICE MtPurchasesRequest

Local aArea		:= GetArea()
Local cQuery	:= ""
Local cArqInd	:= ""
Local cAliasSC1	:= "SC1"    
Local cNumSCIni	:= ::PurchaseRequisNumberFrom
Local cNumSCFim	:= If(Empty(::PurchaseRequisNumberTo),"ZZZZZZ",::PurchaseRequisNumberTo)
Local lAbertos 	:= If(Empty(::Status) .Or. ::Status=="2" ,.F.,.T.)
Local lRetorno	:= .T.
Local lQuery	:= .F.
Local dDatIni  	:= If(Empty(::DateFrom),dDataBase-30,::DateFrom)
Local dDatFim  	:= If(Empty(::DateTo),dDataBase,::DateTo)
Local nY		:= 0

If PrtChkUser(::UserCode,"MtPurchasesRequest","BrwPurchasesRequest")  
	DbSelectArea("SC1")
	DbSetOrder(1)
	#IFDEF TOP
		If (TcSrvType()#'AS/400')
			lQuery		:= .T.
			cAliasSC1	:= GetNextAlias()

			cQuery := "SELECT * "
			cQuery += "FROM "	    + RetSqlName( 'SC1' ) +" SC1 "
			cQuery += " WHERE "
			cQuery += "C1_FILIAL='" + xFilial( 'SC1' )    	+ "' AND "
			cQuery += "C1_NUM>='"   + cNumSCIni           	+ "' AND "
			cQuery += "C1_NUM<='"   + cNumSCFim          	+ "' AND "
			cQuery += "C1_EMISSAO>='"  + DTOS(dDatIni)   	+ "' AND "
			cQuery += "C1_EMISSAO<='"  + DTOS(dDatFim)   	+ "' AND "
			If lAbertos
				cQuery += "C1_QUANT<>C1_QUJE  AND "
			EndIf
			cQuery += "SC1.D_E_L_E_T_<>'*' "
			cQuery := WsQueryAdd(cQuery,::QueryAddWhere)
			cQuery += "ORDER BY "+WsSqlOrder(IIf(Empty(::IndexKey),SC1->(IndexKey()),::IndexKey))

			cQuery := ChangeQuery(cQuery)
			
			dbUseArea( .T., 'TOPCONN', TCGENQRY(,,cQuery), cAliasSC1, .F., .T.)
			aEval(SC1->(dbStruct()),{|x| If(x[2]<>"C" .And. x[2]<>"M",TcSetField(cAliasSC1,AllTrim(x[1]),x[2],x[3],x[4]),Nil)})
		EndIf
	#ENDIF
	If !lQuery
		cArqInd   := CriaTrab( , .F. )
		cQuery := "C1_FILIAL=='" +xFilial("SC1")+"'.AND."
		cQuery += "C1_NUM>='"+cNumSCIni+"'.AND."
		cQuery += "C1_NUM<='"+cNumSCFim+"'.AND."
		cQuery += "DTOS(C1_EMISSAO)>='"+DTOS(dDatIni)+"'.AND."
		cQuery += "DTOS(C1_EMISSAO)<='"+DTOS(dDatFim)+"'"
		If lAbertos
			cQuery += " .AND. C1_QUANT<>C1_QUJE "
		EndIf
		
		IndRegua("SC1",cArqInd,IIf(Empty(::IndexKey),SC1->(IndexKey()),::IndexKey),,cQuery)
		dbGotop()		
	EndIf              
	
	While (cAliasSC1)->( !Eof() )
		aadd(::PurchasesRequestBrwItView, WsClassNew("PurchasesRequestBrwView"))
		nY++
		PutScHead(@::PurchasesRequestBrwItView[nY],cAliasSC1,,.T.)	
		(cAliasSC1)->( DbSkip() )
	EndDo	

	If lQuery
		dbSelectArea(cAliasSC1)		
		dbCloseArea()	
		dbSelectArea("SC1")
	Else
		dbSelectArea("SC1")
		RetIndex("SC1")
		FErase(cArqInd+OrdBagExt())
	EndIf
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetPurchasesR³Autor  ³Erike Yuri da Silva ³Data  ³20.06.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Metodo de recuperacao dos pedidos de venda de um cliente     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Numero da solicitacao de compras                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Metodo de recuperacao dos pedidos de venda de um cliente     ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetPurchasesRequest WSRECEIVE UserCode, PurchasesRequestID WSSEND PurchasesRequest WSSERVICE MtPurchasesRequest

Local aArea     := GetArea()
Local lRetorno  := .T.
Local lQuery    := .F.
Local nY        := 0
Local cAliasSC1 := "SC1"
Local cQuery    := ""

If PrtChkUser(::UserCode,"MtPurchasesRequest","GetPurchasesRequest")
	DbSelectArea("SC1")
	DbSetOrder(1)
	If Empty(::PurchasesRequestID)
		lRetorno := .F.
	Else
		#IFDEF TOP
			lQuery	:= .T.
			cAliasSC1:= GetNextAlias()

			cQuery	:= "SELECT * "
			cQuery	+= "FROM "+RetSqlName("SC1")+" SC1 "
			cQuery	+= "WHERE "
			cQuery	+= "SC1.C1_FILIAL = '"+xFilial("SC1")+"' AND "
			cQuery	+= "SC1.C1_NUM='"+::PurchasesRequestID+"' AND "
			cQuery	+= "SC1.D_E_L_E_T_=' ' "
			cQuery	+= "ORDER BY "+SqlOrder(SC1->(IndexKey()))

			cQuery	:= ChangeQuery(cQuery)

			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC1,.T.,.T.)
			aEval(SC1->(dbStruct()), {|x| If(x[2] <> "C" .And. x[2] <> "M" .And. FieldPos(x[1]) > 0, TcSetField(cAliasSC1,x[1],x[2],x[3],x[4]),Nil)})	
			lRetorno := (cAliasSC1)->(!Eof())
		#ELSE
			lRetorno := MsSeek(xFilial("SC1")+::PurchasesRequestID)
		#Endif
	EndIf                            
		
	If lRetorno
		DbSelectArea(cAliasSC1)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Cabecalho da Solicitacao de Compras³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		::PurchasesRequest:PRHeader	:= WsClassNew("PurchasesRequestHeaderView")
		PutScHead(@::PurchasesRequest:PRHeader,cAliasSC1)	
					
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Itens da solicitacao de compras³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		While !Eof() .AND. xFilial("SC1") == (cAliasSC1)->C1_FILIAL .AND.;
				::PurchasesRequestID == (cAliasSC1)->C1_NUM

			AAdd(::PurchasesRequest:PRItem,WSClassNew("PurchasesRequestItensView"))
			nY++
			PutScItem(@::PurchasesRequest:PRItem[nY],cAliasSC1)
			(cAliasSC1)->( dbSkip() )
		EndDo
		If lQuery
			(cAliasSC1)->( dbCloseArea() )
			DbSelectArea("SC1")
		Endif
	Else
		lRetorno := .F.
		SetSoapFault("GetPurchasesRequest",STR0008) //"Solicitação de Compras nao encontrada"
	Endif
Else
	lRetorno := .F.
Endif

RestArea(aArea)
Return(lRetorno)




/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PutPurchasesR³Autor  ³Erike Yuri da Silva ³Data  ³21.06.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Metodo de inclusao/alteracao de solicitacao de compras       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Dados do Solicitacao de compras                       ³±±
±±³          ³ExpC3: Opcao 3-Inclusao; 4-Alteracao                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Metodo de inclusao de solicitacao de compras.                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD PutPurchasesRequest WSRECEIVE UserCode,PurchasesRequest,Option WSSEND CreatedSC WSSERVICE MtPurchasesRequest

Local aArea		 := GetArea()
Local aCab		 := {}
Local aItens	 := {}
Local aErro      := {}
Local cErro      := ""
Local lRetorno	 := .T.
Local nX         := 0      
Local nOpc		 := If(Empty(::Option) .Or. ::Option=="3",3,4)
Local lApsInUse  := SuperGetMv("MV_APS",.F.,"") $ "DRUMMER*TOTVS"
Local lGeraSC    := .T.    
Local cNumDoc	 := ""

PRIVATE lMsErroAuto := .F.
PRIVATE lAutoErrNoFile := .T.

If PrtChkUser(::UserCode,"MtPurchasesRequest","PutPurchasesRequest")
	WsChangeModule( "SIGACOM" )   
	dbSelectArea("SC1")
	dbSetOrder(1)
    
    If nOpc==4
		If Empty(::PurchasesRequest:PRHeader:PurchaseRequisNumber) .Or. ;
		   !MsSeek(xFilial("SC1")+::PurchasesRequest:PRHeader:PurchaseRequisNumber)	
			lRetorno := .F.        
			SetSoapFault("PutPurchasesRequest",STR0009)  //"Solicitação de compras inválida"
		EndIf
	EndIf
		
	If lRetorno
		If lApsInUse .And. nOpc==3
        	lGeraSC := CheckPutSC(::PurchasesRequest:PRItem,"PutPurchasesRequest",@lRetorno,@cNumDoc)
        	If AllTrim(::PurchasesRequest:PRHeader:NameofPetitioner) == "DRUMMER"
        		If !Empty( cSoliDru:=AllTrim(SuperGetMv("MV_SOLIDRU",.F.,"")) )
        			::PurchasesRequest:PRHeader:NameofPetitioner := cSoliDru        			
        	    EndIf
        	EndIf 
		EndIf
		
		If lRetorno .And. lGeraSC
			aEval(::PurchasesRequest:PRItem,{|x| If(Empty(x:PurchaseRequisNumberItem),Nil,Aadd(aItens,x))})
			::PurchasesRequest:PRItem := aClone(aItens)
			aItens := {}
			PutScHead(::PurchasesRequest:PRHeader,,@aCab,,@cNumDoc)
			PutScItem(::PurchasesRequest,,@aItens,::PurchasesRequest:PRHeader:PurchaseRequisNumber,nOpc)
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Valida as informacoes de cabecalho e Itens antes de executar ³
			//³a rotina automatica                                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("WSMT110A")
				aRetPe := ExecBlock("WSMT110A",.F.,.F.,{aCab,aItens})
				If ValType(aRetPe) == "A" .And. Len(aRetPe) == 2 .And. ValType(aRetPe[1]) == "A" .And. ValType(aRetPe[2]) == "A"
					aCab := aClone(aRetPe[1])
					aItens := aClone(aRetPe[2])
				EndIf
			EndIf
			If !Empty(aCab) .And. !Empty(aItens)
				MSExecAuto({|v,x,y| MATA110(v,x,y)},aCab,aItens,nOpc)     
			Else
				lRetorno := .F.
			EndIf				
			If lMsErroAuto
				aErro := GetAutoGRLog()
				For nX := 1 To Len(aErro)
					cErro += aErro[nX] + Chr(13)+Chr(10)
				Next nX
				SetSoapFault("PutPurchasesRequest",cErro)
				lRetorno := .F.
			EndIf
		EndIf
		If lRetorno
			If SuperGetMv("MV_APS",.F.,"") == "TOTVS"
				::CreatedSC := '01' + cNumDoc + If(lGeraSC,'1','2')
			Else
				::CreatedSC := cNumDoc
			EndIf
		EndIf		
	EndIf
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³DelPurchasesR³Autor  ³Erike Yuri da Silva ³Data  ³21.06.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Metodo de inclusao/alteracao de solicitacao de compras       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Dados do Solicitacao de compras                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Metodo de inclusao de solicitacao de compras.                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD DelPurchasesRequest WSRECEIVE UserCode,PurchaseRequisNumber WSSEND WSNULL WSSERVICE MtPurchasesRequest

Local aArea		 := GetArea()
Local aCab		 := {}
Local aItem		 := {}
Local aErro      := {}
Local cErro      := ""
Local lRetorno	 := .T.
Local nX         := 0

PRIVATE lMsErroAuto := .F.
PRIVATE lAutoErrNoFile := .T.

If PrtChkUser(::UserCode,"MtPurchasesRequest","DelPurchasesRequest")
	WsChangeModule( "SIGACOM" )   
	dbSelectArea("SC1")
	dbSetOrder(1)
    
	If Empty(::PurchaseRequisNumber) .Or. !MsSeek(xFilial("SC1")+::PurchaseRequisNumber)	
		lRetorno := .F.        
		SetSoapFault("DelPurchasesRequest",STR0009)   //"Solicitação de compras inválida"
	EndIf
	
	If lRetorno
		aadd(aCab	,{"C1_NUM"	,::PurchaseRequisNumber,NIL})	
		aadd(aItem	,{"C1_NUM"	,::PurchaseRequisNumber,NIL})
	
		MSExecAuto({|v,x,y| MATA110(v,x,y)},aCab,aItem,5)
		
		If lMsErroAuto
			aErro := GetAutoGRLog()
			For nX := 1 To Len(aErro)
				cErro += aErro[nX] + Chr(13)+Chr(10)
			Next nX
			SetSoapFault("DelPurchasesRequest",cErro)
			lRetorno := .F.
		EndIf
	EndIf
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PutScHead ³Autor  ³ Erike Yuri da Silva   ³ Data ³21.06.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento do header da solicitacao de compras  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto do Header da SC                                ³±±
±±³          ³ExpC1: Alias da tabela de SC                                 ³±±
±±³          ³ExpA2: Array da rotina automatica                            ³±±
±±³          ³ExpL1: Indica se sera para visualizacao do Browse            ³±±
±±³          ³ExpC2: Variavel para retorno com numero do documento gerado  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo preenche o array da rotina automatica com os     ³±±
±±³          ³dados do objeto                                              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PutScHead(oObjeto,cAliasSC1,aCab,lBrw,cNumSC)
DEFAULT cAliasSC1 	:= "SC1"
DEFAULT lBrw		:= .F.

If aCab == NIL
	oObjeto:PurchaseRequisNumber 	:= (cAliasSC1)->C1_NUM 
	oObjeto:NameofPetitioner		:= (cAliasSC1)->C1_SOLICIT
	oObjeto:IssueDate				:= (cAliasSC1)->C1_EMISSAO
	oObjeto:DeliveryBranch			:= (cAliasSC1)->C1_FILENT
	oObjeto:RequesterUnit			:= (cAliasSC1)->C1_UNIDREQ
	oObjeto:PurchaserCode			:= (cAliasSC1)->C1_CODCOMP
	If lBrw
		oObjeto:PurchaseRequisNumberItem	:= (cAliasSC1)->C1_ITEM
		oObjeto:Product						:= (cAliasSC1)->C1_PRODUTO
		oObjeto:MeasureUnit					:= (cAliasSC1)->C1_UM
		oObjeto:Quantity					:= (cAliasSC1)->C1_QUANT
		oObjeto:NameofPetitioner			:= (cAliasSC1)->C1_SOLICIT  	
	EndIf
Else
	If Empty(oObjeto:PurchaseRequisNumber)
		If SuperGetMV("MV_APS",.F.,"") == "TOTVS" .And. FindFunction("TAPSGetNum")
			cNumSC := TAPSGetNum("SC1")
		Else
			cNumSC := CriaVar("C1_NUM")
		EndIf
	Else
		cNumSC := oObjeto:PurchaseRequisNumber
	EndIf
	aadd(aCab,{"C1_NUM"		,cNumSC,})
	aadd(aCab,{"C1_SOLICIT"	,If(oObjeto:NameofPetitioner==NIL,CriaVar("C1_SOLICIT"),oObjeto:NameofPetitioner),})
	aadd(aCab,{"C1_EMISSAO"	,oObjeto:IssueDate,})
	aadd(aCab,{"C1_FILENT"	,oObjeto:DeliveryBranch,})
	aadd(aCab,{"C1_UNIDREQ"	,oObjeto:RequesterUnit,})
	aadd(aCab,{"C1_CODCOMP"	,oObjeto:PurchaserCode,})
	aCab := WsAutoOpc(aCab)
EndIf	
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PutScItem ³Autor  ³ Erike Yuri da Silva   ³ Data ³21.06.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento dos itens da solicitacao de compras  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto do item da solicitacao de compras              ³±±
±±³          ³ExpC1: Alias da tabela de SC                                 ³±±
±±³          ³ExpA2: Array da rotina automatica                            ³±±
±±³          ³ExpC2: Codigo da Solicitacao de Compras                      ³±±
±±³          ³ExpN1: Indica a opcao a ser executada 3-Inclusao, 4-Alteracao³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo preenche o array da rotina automatica com os     ³±±
±±³          ³dados do objeto                                              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PutScItem(oObjeto,cAliasSC1,aItens,cNumSC,nOpc)
Local aArea      := GetArea()
Local aItem      := {}
Local nY         := 0           
Local lApsInUse  := SuperGetMv("MV_APS",.F.,"") $ "DRUMMER*TOTVS"
DEFAULT cAliasSC1 := "SC1"

If aItens == NIL
	oObjeto:PurchaseRequisNumberItem 	:= (cAliasSC1)->C1_ITEM
	oObjeto:Product						:= (cAliasSC1)->C1_PRODUTO
	oObjeto:MeasureUnit					:= (cAliasSC1)->C1_UM
	oObjeto:Quantity					:= (cAliasSC1)->C1_QUANT
	oObjeto:Unit2ofMeasure				:= (cAliasSC1)->C1_SEGUM
	oObjeto:Quantityin2MeasUnit			:= (cAliasSC1)->C1_QTSEGUM
	oObjeto:Necessity					:= (cAliasSC1)->C1_DATPRF
	oObjeto:Warehouse					:= (cAliasSC1)->C1_LOCAL
	oObjeto:Notes						:= (cAliasSC1)->C1_OBS
	oObjeto:ProductionOrder				:= (cAliasSC1)->C1_OP
	oObjeto:CostCenter					:= (cAliasSC1)->C1_CC
	oObjeto:AccountCode					:= (cAliasSC1)->C1_CONTA
	oObjeto:AccountItem					:= (cAliasSC1)->C1_ITEMCTA
	oObjeto:DescriptionofProduct		:= (cAliasSC1)->C1_DESCRI
	oObjeto:QuantityinOrders			:= (cAliasSC1)->C1_QUJE
	oObjeto:TypeofProductionOrder		:= (cAliasSC1)->C1_TPOP
	oObjeto:BuyersGroup					:= (cAliasSC1)->C1_GRUPCOM
	oObjeto:AccountValueClass			:= (cAliasSC1)->C1_CLVL
	oObjeto:MrpSeqOriginatedPR			:= (cAliasSC1)->C1_SEQMRP
	oObjeto:UnitValue					:= (cAliasSC1)->C1_VUNIT

	UserFields("SC1",@oObjeto:UserFields,cAliasSC1)
Else
	For nY := 1 To Len(oObjeto:PRItem)
		If nOpc == 4 .And. (cAliasSC1)->( MsSeek(xFilial("SC1")+cNumSC+oObjeto:PRItem[nY]:PurchaseRequisNumberItem) )
			AAdd( aItem, { "LINPOS", "C1_ITEM",oObjeto:PRItem[nY]:PurchaseRequisNumberItem} )		
		EndIf
   		aadd(aItem,{"C1_ITEM"		,oObjeto:PRItem[nY]:PurchaseRequisNumberItem,NIL})
		aadd(aItem,{"C1_PRODUTO"	,oObjeto:PRItem[nY]:Product					,NIL})
		aadd(aItem,{"C1_QUANT"		,oObjeto:PRItem[nY]:Quantity				,NIL})
		aadd(aItem,{"C1_SEGUM"		,oObjeto:PRItem[nY]:Unit2ofMeasure			,NIL})
		aadd(aItem,{"C1_QTSEGUM"	,oObjeto:PRItem[nY]:Quantityin2MeasUnit		,NIL})
		aadd(aItem,{"C1_DATPRF"		,oObjeto:PRItem[nY]:Necessity				,NIL})
		If !Empty(oObjeto:PRItem[nY]:Warehouse)
			aadd(aItem,{"C1_LOCAL"	,oObjeto:PRItem[nY]:Warehouse				,NIL})
		Else
			aadd(aItem,{"C1_LOCAL"	, Posicione("SB1",1,xFilial("SB1")+oObjeto:PRItem[nY]:Product,"B1_LOCPAD"),NIL})
		EndIf
		aadd(aItem,{"C1_OBS"		,oObjeto:PRItem[nY]:Notes					,NIL})
		aadd(aItem,{"C1_OP"			,oObjeto:PRItem[nY]:ProductionOrder			,NIL})
		aadd(aItem,{"C1_CC"			,oObjeto:PRItem[nY]:CostCenter				,NIL})
		aadd(aItem,{"C1_CONTA"		,oObjeto:PRItem[nY]:AccountCode				,NIL})
		aadd(aItem,{"C1_ITEMCTA"	,oObjeto:PRItem[nY]:AccountItem				,NIL})
		aadd(aItem,{"C1_DESCRI"		,oObjeto:PRItem[nY]:DescriptionofProduct	,NIL})
		aadd(aItem,{"C1_QUJE"		,oObjeto:PRItem[nY]:QuantityinOrders		,NIL})
		aadd(aItem,{"C1_TPOP"		,oObjeto:PRItem[nY]:TypeofProductionOrder	,NIL})
		aadd(aItem,{"C1_GRUPCOM"	,oObjeto:PRItem[nY]:BuyersGroup				,NIL})
		aadd(aItem,{"C1_CLVL"		,oObjeto:PRItem[nY]:AccountValueClass		,NIL})
		aadd(aItem,{"C1_SEQMRP"		,oObjeto:PRItem[nY]:MrpSeqOriginatedPR		,NIL})
		aadd(aItem,{"C1_VUNIT"		,oObjeto:PRItem[nY]:UnitValue				,NIL})
	    aadd(aItem,{"AUTVLDCONT"	,oObjeto:PRItem[nY]:AUTVLDCONT				,NIL})
		PutUserFields("SC1",@oObjeto:PRItem[nY]:UserFields,@aItem)
		aItem:= WsAutoOpc(aItem,lApsInUse)
		aadd(aItens,aItem)
		aItem:= {}
	Next nY
EndIf	
RestArea(aArea)
Return(.T.)

Function wsmat110()
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³CheckPutSC³ Autor ³Felipe Nunes de Toledo ³ Data ³ 22/05/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se gera SC ou AE.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³OItem       Objeto do Item                                  ³±±
±±³          ³cNameMethod Nome do Methodo                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Logico                                                      ³±±
±±³          ³(.T.) Gera SC / (.F.) Nao Gera SC                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CheckPutSC(oItem, cNameMethod, lRetorno, cNumAE)
Local lGeraSC    := .T.
Local lQuant     := .F.
Local lData      := .F.
Local nQuantBaixa:= 0
Local cChaveSC3  := "" 

SB1->( dbSetOrder(1) )
If Len(oItem) == 1
	SB1->( MsSeek(xFilial("SB1")+oItem[1]:Product) )
	If SB1->B1_CONTRAT $"N "
		lGeraSC := .T.
	Else	
		dbSelectArea("SC3")
		dbSetOrder(5)
		If MatPesqCtr(.T.,SB1->B1_COD,SB1->B1_PROC,SB1->B1_LOJPROC,@cChaveSC3)
			While !Eof() .And. &(cChaveSC3)
				lData:=.F.
				lQuant:=.F.
				lData:= !(oItem[1]:Necessity >= SC3->C3_DATPRI  .And. ;
				oItem[1]:Necessity <= SC3->C3_DATPRF)
				lQuant:=(SC3->C3_QUANT <= SC3->C3_QUJE .Or. SC3->C3_ENCER =="E" .Or. C3_RESIDUO =="S")
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Nao Considera Contratos de Parceria Encerrados ou fora da data³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If	lData .Or. lQuant
					dbSkip()
					Loop
				EndIf
				Exit
			EndDo
		EndIf
		If Eof() .Or. lData .Or. lQuant
			lGeraSC := .T.
			oItem[1]:AUTVLDCONT := "N"
		Else
			lGeraSC := .F.
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera A.E. somente do saldo disponivel no Contrato          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
			nQuantBaixa:=If((SC3->C3_QUANT-SC3->C3_QUJE) <= oItem[1]:Quantity,(SC3->C3_QUANT-SC3->C3_QUJE),oItem[1]:Quantity)
			lRetorno := PutAutDelivery(oItem[1]:Necessity,nQuantBaixa,oItem[1]:Product,oItem[1]:TypeofProductionOrder,cNameMethod,@cNumAE)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Devera gerar S.C. da quantidade que nao foi atendida       ³
			//³ pelo Contrato de Parceria                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nQuantBaixa < oItem[1]:Quantity
				lGeraSC := .T.
				oItem[1]:Quantity -= nQuantBaixa
				oItem[1]:AUTVLDCONT := "N"
			EndIf
		EndIf
	EndIf
EndIf

Return( lGeraSC )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³PutAutDeli³ Autor ³Felipe Nunes de Toledo ³ Data ³ 22/05/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina de gravacao de AE's                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³dNecessity  Dt. necessidade para geracao da AE              ³±±
±±³          ³nQuantity   Quantidade a ser gerada na AE                   ³±±
±±³          ³cProduct    Produto a ser gerado na AE                      ³±±
±±³          ³cNameMethod Nome do Methodo                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PutAutDelivery(dNecessity,nQuantity,cProduct,cTypePO,cNameMethod,cNumAE)
Local aCab 	      := {}
Local aItem	      := {}
Local aArea	      := GetArea()
Local aErro       := {}
Local cErro       := ""
Local nX          := 0
Local lRet        := .T.
Private lMsErroAuto	:= .F.

dbSelectArea("SB1")
If MSSeek(xFilial("SB1")+cProduct) .AND. !IsProdMod(SB1->B1_COD) .And. (SB1->B1_TIPO != "BN" .Or. (SB1->B1_TIPO == "BN" .And. MatBuyBN())) // nao gera para mao de obra e tipo = "BN" (Beneficiamento)
	cNumAE := Criavar("C7_NUM",.T.)
	aCab:={{"C7_NUM",cNumAE,NIL},;	// Numero do Pedido
		{"C7_EMISSAO",dDataBase,NIL},;				// Data de Emissao
		{"C7_FORNECE",SC3->C3_FORNECE,NIL},;		// Fornecedor
		{"C7_LOJA",SC3->C3_LOJA,NIL},;             // Loja do Fornecedor
		{"C7_CONTATO",SC3->C3_CONTATO,NIL},;		// Contato
		{"C7_COND",SC3->C3_COND,NIL},;             // Condicao de Pagamento
		{"C7_FILENT",SC3->C3_FILENT,NIL},;			// Filial de Entrega
		{"C7_FRETE",CriaVar("C7_FRETE",.F.),NIL},;
		{"C7_DESPESA",CriaVar("C7_DESPESA",.F.),NIL},;
		{"C7_SEGURO",CriaVar("C7_SEGURO",.F.),NIL},;
		{"C7_DESC1",CriaVar("C7_DESC1",.F.),NIL},;
		{"C7_DESC2",CriaVar("C7_DESC2",.F.),NIL},;
		{"C7_DESC3",CriaVar("C7_DESC3",.F.),NIL},;
		{"C7_MSG",CriaVar("C7_MSG",.F.),NIL},;
		{"C7_REAJUST",CriaVar("C7_REAJUST",.F.),NIL}}
	aItem:={{"C7_ITEM",StrZero(1,Len(SC7->C7_ITEM)),NIL},;
		{"C7_PRODUTO",SC3->C3_PRODUTO,NIL},;
		{"C7_QUANT",nQuantity,NIL},;
		{"C7_QTDSOL",nQuantity,NIL},;
		{"C7_UM",SB1->B1_UM,NIL},;
		{"C7_QTSEGUM",ConvUm(SB1->B1_COD,nQuantity,0,2),NIL},;
		{"C7_PRECO",SC3->C3_PRECO,NIL},;
		{"C7_TOTAL",nQuantity*SC3->C3_PRECO,NIL},;
		{"C7_NUMSC",SC3->C3_NUM,NIL},;
		{"C7_ITEMSC",SC3->C3_ITEM,NIL},;
		{"C7_IPI",SC3->C3_IPI,NIL},;
		{"C7_REAJUST",SC3->C3_REAJUST,NIL},;
		{"C7_FRETE",SC3->C3_FRETE,NIL},;
		{"C7_DATPRF",dNecessity,NIL},;
		{"C7_LOCAL",SC3->C3_LOCAL,NIL},;
		{"C7_MSG",SC3->C3_MSG,NIL},;
		{"C7_TPFRETE",SC3->C3_TPFRETE,NIL},;
		{"C7_OBS",SC3->C3_OBS,NIL},;
		{"C7_CONTA",SB1->B1_CONTA,NIL},;
		{"C7_CC",SB1->B1_CC,NIL},;
		{"C7_DESCRI",SB1->B1_DESC,NIL},;
		{"C7_TPOP",cTypePO,NIL}}
	
	MSExecAuto({|v,x,y,z,w| MATA120(v,x,y,z,w)},2,aCab,{aItem},3,.F.)

	If lMsErroAuto
		aErro := GetAutoGRLog()
		For nX := 1 To Len(aErro)
			cErro += aErro[nX] + Chr(13)+Chr(10)
		Next nX
		SetSoapFault(cNameMethod,cErro)
		lRet := .F.
	EndIf

EndIf
// Restaura area original
RestArea(aArea)
Return( lRet )