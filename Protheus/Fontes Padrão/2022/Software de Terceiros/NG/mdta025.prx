#INCLUDE "MDTA025.ch"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWMVCDEF.CH"

#DEFINE _nVERSAO 2 //Versao do fonte

//---------------------------------------------------------------------
/*/{Protheus.doc} MDTA025
Programa de Cadastro de Equipamentos de Avaliacao

@return

@sample MDTA025()

@author Paulo Pego - Refeito por: Jackson Machado
@since 11/12/99 - Revisão: 05/09/13
/*/
//---------------------------------------------------------------------
Function MDTA025()

	// Armazena as variáveis
	Local aNGBEGINPRM := NGBEGINPRM( _nVERSAO )

	Local oBrowse

	Private aRotina := {}

	oBrowse := FWMBrowse():New()
		oBrowse:SetAlias( "TM7" )			// Alias da tabela utilizada
		oBrowse:SetMenuDef( "MDTA025" )	// Nome do fonte onde esta a função MenuDef
		oBrowse:SetDescription( STR0007 )	// Descrição do browse ###"Equipamentos de Avalia‡Æo"
	oBrowse:Activate()

	// Devolve as variáveis armazenadas
	NGRETURNPRM(aNGBEGINPRM)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Definição do Menu (padrão MVC).

@author Jackson Machado
@since 05/09/13

@return aRotina array com o Menu MVC
/*/
//---------------------------------------------------------------------
Static Function MenuDef()

	//Inicializa MenuDef com todas as opções
	aRotina := FWMVCMenu( "MDTA025" )

	If Type("__lPyme") == "U" .Or. !__lPyme
		Add Option aRotina Title STR0012 Action 'MsDocument' Operation 4 Access 0 //"Conhecimento"
	EndIf

Return aRotina
//---------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Definição do Modelo (padrão MVC).

@author Jackson Machado
@since 05/09/13

@return oModel objeto do Modelo MVC
/*/
//---------------------------------------------------------------------
Static Function ModelDef()

    // Cria a estrutura a ser usada no Modelo de Dados
	Local oStructTM7 := FWFormStruct( 1 ,"TM7" , /*bAvalCampo*/ , /*lViewUsado*/ )

	// Modelo de dados que será construído
	Local oModel

	// Cria o objeto do Modelo de Dados
	// cID     Identificador do modelo
	// bPre    Code-Block de pre-edição do formulário de edição. Indica se a edição esta liberada
	// bPost   Code-Block de validação do formulário de edição
	// bCommit Code-Block de persistência do formulário de edição
	// bCancel Code-Block de cancelamento do formulário de edição
	oModel := MPFormModel():New( "MDTA025" , /*bPre*/ , { | oModel | fMPosValid( oModel ) } /*bPos*/ , /*bCommit*/ , /*bCancel*/ )
		//--------------------------------------------------
		// Componentes do Modelo
		//--------------------------------------------------

		// Adiciona ao modelo um componente de Formulário Principal
		// cId          Identificador do modelo
		// cOwner       Identificador superior do modelo
		// oModelStruct Objeto com  a estrutura de dados
		// bPre         Code-Block de pré-edição do formulário de edição. Indica se a edição esta liberada
		// bPost        Code-Block de validação do formulário de edição
		// bLoad        Code-Block de carga dos dados do formulário de edição
		oModel:AddFields( "TM7MASTER" , Nil , oStructTM7 , /*bPre*/ , /*bPost*/ , /*bLoad*/ )
			// Adiciona a descrição do Modelo de Dados (Geral)
			oModel:SetDescription( STR0007 /*cDescricao*/ ) // "Equipamentos de Avalia‡Æo"
			// Adiciona a descricao do Componente do Modelo de Dados
			oModel:GetModel( "TM7MASTER" ):SetDescription( STR0007 ) // "Equipamentos de Avalia‡Æo"

Return oModel

//---------------------------------------------------------------------
/*/{Protheus.doc} ViewDef
Definição da View (padrão MVC).

@author Jackson Machado
@since 05/09/13

@return oView objeto da View MVC
/*/
//---------------------------------------------------------------------
Static Function ViewDef()

	// Cria um objeto de Modelo de dados baseado no ModelDef() do fonte informado
	Local oModel := FWLoadModel( "MDTA025" )

	// Cria a estrutura a ser usada na View
	Local oStructTM7 := FWFormStruct( 2 , "TM7" , /*bAvalCampo*/ , /*lViewUsado*/ )

	// Interface de visualização construída
	Local oView

	// Cria o objeto de View
	oView := FWFormView():New()
		// Objeto do model a se associar a view.
		oView:SetModel( oModel )
		// Adiciona no View um controle do tipo formulário (antiga Enchoice)
		// cFormModelID - Representa o ID criado no Model que essa FormField irá representar
		// oStruct - Objeto do model a se associar a view.
		// cLinkID - Representa o ID criado no Model ,Só é necessári o caso estamos mundando o ID no View.
		oView:AddField( "VIEW_TM7" , oStructTM7 , "TM7MASTER" )
			//Adiciona um titulo para o formulário
			oView:EnableTitleView( "VIEW_TM7" , STR0007 )	// Descrição do browse ###"Equipamentos de Avalia‡Æo"
			// Cria os componentes "box" horizontais para receberem elementos da View
			// cID		  	Id do Box a ser utilizado
			// nPercHeight  Valor da Altura do box( caso o lFixPixel seja .T. é a qtd de pixel exato)
			// cIdOwner 	Id do Box Vertical pai. Podemos fazer diversas criações uma dentro da outra.
			// lFixPixel	Determina que o valor passado no nPercHeight é na verdade a qtd de pixel a ser usada.
			// cIDFolder	Id da folder onde queremos criar o o box se passado esse valor, é necessário informar o cIDSheet
			// cIDSheet     Id da Sheet(Folha de dados) onde queremos criar o o box.
			oView:CreateHorizontalBox( "TELATM7" , 100,/*cIDOwner*/,/*lFixPixel*/,/*cIDFolder*/,/*cIDSheet*/ )
		// Associa um View a um box
		oView:SetOwnerView( "VIEW_TM7" , "TELATM7" )

Return oView

//---------------------------------------------------------------------
/*/{Protheus.doc} fMPosValid
Pós-validação do modelo de dados.

@author Jackson Machado
@since 05/09/13

@param oModel - Objeto do modelo de dados (Obrigatório)

@return Lígico - Retorna verdadeiro caso validacoes estejam corretas
/*/
//---------------------------------------------------------------------
Static Function fMPosValid( oModel )

	Local lRet			:= .T.

	Local aAreaTM7		:= TM7->( GetArea() )

	Local nOperation	:= oModel:GetOperation() // Operação de ação sobre o Modelo
	Local oModelTM7	:= oModel:GetModel( "TM7MASTER" )

	Private aCHKSQL 	:= {} // Variável para consistência na exclusão (via SX9)
	Private aCHKDEL 	:= {} // Variável para consistência na exclusão (via Cadastro)

	// Recebe SX9 - Formato:
	// 1 - Domínio (tabela)
	// 2 - Campo do Domínio
	// 3 - Contra-Domínio (tabela)
	// 4 - Campo do Contra-Domínio
	// 5 - Condição SQL
	// 6 - Comparação da Filial do Domínio
	// 7 - Comparação da Filial do Contra-Domínio
	aCHKSQL := NGRETSX9( "TM7" )

	// Recebe relação do Cadastro - Formato:
	// 1 - Chave
	// 2 - Alias
	// 3 - Ordem (Índice)
	aAdd(aCHKDEL, { "TM7->TM7_EQPTO" , "TM9" , 2 } )
	aAdd(aCHKDEL, { "TM7->TM7_EQPTO" , "TO2" , 2 } )

	If nOperation == MODEL_OPERATION_DELETE //Exclusão

		If !NGCHKDEL( "TM7" )
			lRet := .F.
		EndIf

		If lRet .And. !NGVALSX9( "TM7" , {} , .T. , .T. )
			lRet := .F.
		EndIf

	EndIf

	RestArea( aAreaTM7 )

Return lRet
//---------------------------------------------------------------------
/*/{Protheus.doc} MDT025VLD
Função de Validação de Campos

@return Lógico - Retorna verdadeiro caso condicao valida

@param nValid - Indica o campo a ser validado
				1 - Indica data de Afericao
				2 - Indica data de Calibracao

@sample
MDT025VLD( 1 )

@author Jackson Machado
@since 05/09/2013
/*/
//---------------------------------------------------------------------
Function MDT025VLD( nValid )

	Local lRet 		:= .T. //Controle de Retorno
	Local dDtVld		:= StoD( "" )
	Local oModelTM7	:= FWModelActive()

	Default nValid		:= 0 //Define valor padrao para parametro

	If nValid == 1//Valida data de Afericao
		If ValType( oModelTM7 ) == "O"
			dDtVld := oModelTM7:GetValue( "TM7MASTER" , "TM7_DTAFER" )
		Else
			dDtVld := M->TM7_DTAFER
		EndIf
		If dDtVld > dDataBase //Afericao nao pode ser superior a data base
			Help( , , STR0008 , , STR0009 , 4 , 0 )//"ATENÇÃO"###"Data de Aferição não pode ser superior a data atual."
			lRet := .F.
		EndIf
	ElseIf nValid == 2 //Valida data de Calibracao
		If ValType( oModelTM7 ) == "O"
			dDtVld := oModelTM7:GetValue( "TM7MASTER" , "TM7_DTCALI" )
		Else
			dDtVld := M->TM7_DTCALI
		EndIf
		If dDtVld > dDataBase //Calibracao nao pode ser superior a data base
			Help( , , STR0008 , , STR0010 , 4 , 0 )//"ATENÇÃO"###"Data de Calibração não pode ser superior a data atual."
			lRet := .F.
		EndIf
	EndIf

Return lRet