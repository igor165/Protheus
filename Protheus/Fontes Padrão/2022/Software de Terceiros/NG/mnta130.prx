#INCLUDE "MNTA130.ch"
#INCLUDE "Protheus.CH"

#DEFINE _nVERSAO 2 //Versao do fonte
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNTA130  ³ Autor ³ Thiago Olis Machado   ³ Data ³04/12/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Importacao dos registros de abastecimento                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA130()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Guarda conteudo e declara variaveis padroes ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aNGBEGINPRM := NGBEGINPRM(_nVERSAO)

Local cTela

Private lTanqBomba := .f., lContador2 := .f.
Private lValImport := .F., aValImport := {}
Private lColNovas := .f.
Private cArquivo   := ""
Private aPosicao := {}

If NGCADICBASE('TR6_TANQUE','D','TR6',.F.) .AND. NGCADICBASE('TR6_BOMBA','D','TR6',.F.)
	lTanqBomba := .t.
Endif
If NGCADICBASE('TR6_POSCO2','D','TR6',.F.)
	lContador2 := .t.
Endif
If ExistBlock("MNTA1301")
	lValImport := .T.
EndIf

cTela := STR0006+chr(13);             //"    Este programa tem por objetivo importar arquivo no formato TXT"
         +STR0007+chr(13)+chr(13);    //"disponibilizado pelo convenio CTF para o modulo SIGAMNT."
         +STR0008+chr(13);            //"   Antes de confirmar a execucao do processo, fazer uma copia de seguranca"
         +STR0009+chr(13);            //"dos arquivos/tabelas TR6 em uso. Caso ocorrer algum problema durante a"
         +STR0010+chr(13)+chr(13);   //"execucao do processo as copias de seguranca deverao ser restauradas."
         +STR0011+chr(13)+chr(13);   //"   Este processo podera levar algum tempo para ser executado."
         +STR0012                     //"   Deseja efetuar o processamento (S/N)?"

If ExistBlock("MNTA130S")
	ExecBlock("MNTA130S",.F.,.F.)
	Return .T.
EndIf 
If ExistBlock("MNTA1302")
	lColNovas := .t.
EndIf

If !MsgYesNo(cTela,STR0013) //"Atenção"
   NGRETURNPRM(aNGBEGINPRM)
	Return .T.
EndIf

//Seleciona o Arquivo TXT
cType := "Texto     | *.TXT"
cArquivo := cGetFile( cType, OemToAnsi(STR0014) ,,,, GETF_LOCALHARD + GETF_NETWORKDRIVE) //"Selecione o Arquivo (Abastecimentos)"

nPos := Rat("\",cArquivo)
If nPos > 0
	cArqLoc := AllTrim(Subst(cArquivo, nPos+1,25 ))
Else 
	cArqLoc := cArquivo
EndIF
cPath := GETTEMPPATH()
If Right( AllTrim(cPath), 1 ) != "\"
   cPath += "\"
Endif

If File(cPath+cArqLoc)
	FErase(cPath+cArqLoc)
endif

lRetCopy := .f.
If At(":",cArquivo) == 0
	lRetCopy := CpyS2T(cArquivo,cPath,.T.)
Else
	lRetCopy := __CopyFile(cArquivo,cPath+cArqLoc)
Endif
If !lRetCopy
	NGRETURNPRM(aNGBEGINPRM)
	Return
Endif

cArquivo := cPath+cArqLoc

If !file(cPath+cArqLoc)
   MsgStop(STR0001+cArquivo+STR0002+chr(13)+chr(13); //"Arquivo "###" nao encontrado."
          +STR0003) //"O processo sera cancelado."
   NGRETURNPRM(aNGBEGINPRM)
   Return .f.
EndIf

Processa({ |lEnd| MNT130Pr()},STR0004) //"Aguarde...Importanto Registros de Combustivel"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Retorna conteudo de variaveis padroes       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
NGRETURNPRM(aNGBEGINPRM)
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNT130Pr ³ Autor ³ Thiago Olis Machado   ³ Data ³04/12/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Importacao dos registros de abastecimento                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNT130Pr()
Local nHdlArq := FOPEN(cArquivo,0)
Local nTamArq := fseek(nHdlArq,0,2)
Local nRecno  := 0,nRegLi := 0
Local i
Local aTanque := {}
Local nPosco2 := 0
Local lTrue

	//Verifica se o padrão do documento está correto
	If !MNT130VR()
		Return .F.
	EndIf

FT_FUSE(cArquivo)
FT_FGOTOP() 

aValImport := {}

ProcRegua(Int(nTamArq/299))

While (!FT_FEof())

   cLinha := FT_FREADLN()
   nLength := Len(cLinha) 

   If Empty(cLinha)
      Exit
   Endif
   
   nRecno++
   IncProc(STR0005+ Str(nRecno)) //"Importando Abastecimento n. "

   nRegLi += 1

	If nRecno == 1
		FT_FSKIP()
		cLinha := FT_FREADLN()
	EndIf

   TEXLINHA := SubStr(cLinha,1,328)

   lGrava := .t.
   lTrue := .t.
   aPosicao := {}     

   nPosIni := 1
   nPosAtu := 1   
           	
	While lTrue
		nPos:= At(Chr(9),cLinha)
		nPosAtu := nPos
		nPosAtu := If(nPosAtu = 0,2,nPos)
		
		If nPos == 0
			If !Empty(cLinha)
			   aAdd(aPosicao,AllTrim(cLinha))
			Endif
			lTrue := .F.
			Loop
		EndIf
		
		If Len(aPosicao) == 27 .And. lContador2 // posicao 28 e tem a coluna 29
			//pega a coluna 28                             
			aAdd(aPosicao,AllTrim(SubStr(cLinha,nPosIni,15)))
			cLinha := SubStr(cLinha,At(Chr(9),cLinha)+Len(Chr(9)),nLength)
			
			//pega a coluna 29
			If lContador2
				nPos:= At(Chr(9),cLinha)
				nPosAtu := nPos
				nPosAtu := If(nPosAtu = 0,2,nPos)
				If nPos == 0 .and. !Empty(cLinha)
				   aAdd(aPosicao,AllTrim(cLinha))
				   cLinha := " "
				Else
					aAdd(aPosicao,AllTrim(SubStr(cLinha,nPosIni,nPosAtu-1)))
					cLinha := SubStr(cLinha,nPosAtu+Len(Chr(9)),nLength)
				EndIf
			Endif
			
		ElseIf Len(aPosicao) == 27 .And. !lContador2 //posicao 28 e nao tem a coluna 29 (pelo update)
			//pega a coluna 28
			aAdd(aPosicao,AllTrim(SubStr(cLinha,nPosIni,15)))
		 	cLinha := SubStr(cLinha,At(Chr(9),cLinha)+Len(Chr(9)),nLength)
		
		Else //pega da 1 a 27 (e as novas se existirem - P.E.)
			aAdd(aPosicao,AllTrim(SubStr(cLinha,nPosIni,nPosAtu-1)))
			cLinha := SubStr(cLinha,nPosAtu+Len(Chr(9)),nLength)
		EndIf
			
	End

   cIndice    := aPosicao[1]
   cNumAbast  := aPosicao[2]
   cVeiCodigo := aPosicao[3]
   cTpReg     := aPosicao[4]
   cBomba	  := aPosicao[5]
   cRede      := aPosicao[6]
   cPosto	  := aPosicao[7]
   cFrota     := aPosicao[8]
   cC         := aPosicao[9]
   cUve       := aPosicao[10]
   cPlaca     := aPosicao[11]
   cMotorista := aPosicao[12]
   nKM        := aPosicao[13]
   nQtd       := aPosicao[14]
   nPu        := aPosicao[15]
   nPuBrad    := aPosicao[16]
   nTotal     := aPosicao[17]
   dDtAbast   := SubStr(aPosicao[18],1,10) //aPosicao[19]
   cHrAbast   := SubStr(aPosicao[18],12,5)
   nQtdLit    := aPosicao[23]
   cAbastAnt  := aPosicao[25]
   cCGC       := aPosicao[28]
   If len(aPosicao) > 28
	   nPosco2 := Val(aPosicao[29])
	Else
	   nPosco2 := 0
	Endif
	
   cTan130    := " "

   If lTanqBomba
	   nPosTanq := aScan(aTanque,{|x| x[1]+x[2] == cCGC+cBomba })
	   If nPosTanq > 0
		   cTan130 := aTanque[nPosTanq,3]
	   Else
		   dbSelectArea("TQF")
		   dbSetOrder(2)
		   If dbSeek(xFilial("TQF")+cCGC)
				If TQF->TQF_TIPPOS == "2"   	
					dbSelectArea("TQJ")
					dbSetOrder(1)
					dbSeek(If(NGSX2MODO("TQJ")=='C' .Or. Empty(TQF->TQF_CODFIL),xFilial("TQJ"),TQF->TQF_CODFIL) + TQF->TQF_CODIGO + TQF->TQF_LOJA )
					While !Eof() .and. If(NGSX2MODO("TQJ")=='C' .Or. Empty(TQF->TQF_CODFIL),xFilial("TQJ"),TQF->TQF_CODFIL) + TQF->TQF_CODIGO + TQF->TQF_LOJA == TQJ->(TQJ_FILIAL + TQJ_CODPOS + TQJ_LOJA)
						If Alltrim(TQJ->TQJ_BOMBA) == AllTrim(cBomba)
							cTan130 := TQJ->TQJ_TANQUE
							aAdd( aTanque , { cCGC , cBomba , TQJ->TQJ_TANQUE } )
							Exit
						Endif
						TQJ->(dbSkip())
					End    
				Else 
					cBomba := " "	
				EndIf	
		   Endif
	   Endif
   Endif     
   
   //aglutinacao de abastecimentos com mesma data+posto+comb+placa+contador e hora diferente
   lAbasNew := .t.
   DbSelectArea("TR6")
   DbSetOrder(2)
   If DbSeek(xFILIAL("TR6")+cPLACA+Space(Len(TR6->TR6_PLACA)-Len(cPLACA))+DTOS(CtoD(dDtAbast)))
  		If TR6->TR6_HRABAS <> cHrAbast .And.;
  			TR6->TR6_CNPJ == cCGC .And.;
	  		TR6->TR6_KMABAS == Round(Val(StrTransf(nKm,",",".")),2) .And.;
   	   AllTrim(TR6->TR6_TIPCOM) == cC .And.;
   	   If(lTanqBomba,AllTrim(TR6->TR6_BOMBA) == AllTrim(cBomba),.T.) .And.;
   	   Empty(TR6->TR6_DTPROC)
 			
 			lAbasNew := .f.  		
   		RecLock("TR6",.f.)
	   	TR6->TR6_QTDCOM += Round(Val(StrTransf(nQtd,",",".")),TAMSX3("TR6_QTDCOM")[2])
			TR6->TR6_VLTOT  += Round(Val(StrTransf(nTotal,",",".")),TAMSX3("TR6_VLTOT")[2])
   		TR6->(MsUnLock())
   	EndIf
   EndIf   
   
   If lAbasNew 
   
		DbSelectArea("TR6")
	   DbSetOrder(1)
	   If !DbSeek(cNumAbast)
   		RecLock("TR6",.t.)
   		TR6->TR6_FILIAL := xFilial("TR6")
   		TR6->TR6_NUMABA := cNumAbast
   		TR6->TR6_PLACA  := cPlaca
   		TR6->TR6_CNPJ   := cCGC
   		TR6->TR6_TIPCOM := cC
   		TR6->TR6_KMABAS := Round(Val(StrTransf(nKm,",",".")),2)
   		TR6->TR6_QTDCOM := Round(Val(StrTransf(nQtd,",",".")),TAMSX3("TR6_QTDCOM")[2])
   		TR6->TR6_VLCOMB := Round(Val(StrTransf(nPuBrad,",",".")),TAMSX3("TR6_VLCOMB")[2])
   		TR6->TR6_VLTOT  := Round(Val(StrTransf(nTotal,",",".")),TAMSX3("TR6_VLTOT")[2])
   		TR6->TR6_DTABAS := CtoD(dDtAbast)
   		TR6->TR6_HRABAS := cHrAbast
   		TR6->TR6_NABANT := cAbastAnt
   		TR6->TR6_CPFMOT := cMotorista
   		If lTanqBomba
   			TR6->TR6_TANQUE := cTan130
				TR6->TR6_BOMBA  := cBomba
			Endif
			If lContador2 .AND. nPosco2 != 0
				TR6->TR6_POSCO2 := nPosco2
			Endif
			If lColNovas
				ExecBlock("MNTA1302",.F.,.F.)
			Endif
   		TR6->(MsUnLock())
   		
   		If lValImport
				dbSelectArea("TR6")
				dbSetOrder(1)
				If dbSeek(cNumAbast)
					aAdd(aValImport, {TR6->TR6_FILIAL, TR6->TR6_NUMABA, TR6->TR6_PLACA , TR6->TR6_TIPCOM, TR6->TR6_CPFMOT,;
											TR6->TR6_KMABAS, TR6->TR6_QTDCOM, TR6->TR6_VLCOMB, TR6->TR6_DTABAS, TR6->TR6_HRABAS,;
											If(lContador2 .And. nPosco2 <> 0,TR6->TR6_POSCO2,0)})
	   		EndIf
	   	EndIf
	   EndIf	
   EndIf
   FT_FSKIP()
End

FT_FUSE()

fClose(nhdlArq)

If lValImport
	ExecBlock("MNTA1301",.F.,.F.,{aValImport})
EndIf

Return .t.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNT130VR
 Verifica se o arquivo está no padrão para importação do abastecimento
 por arquivo txt.

@author Diego de Oliveira
@since 23/07/2015
@version P11
@return Nil
/*/
//---------------------------------------------------------------------
Static Function MNT130VR()

	Local nHdlArq := FOPEN(cArquivo,0)
	Local nTamArq := fseek(nHdlArq,0,2)
	Local nRecno  := 0,nRegLi := 0, nX := 0

	FT_FUSE(cArquivo)
	FT_FGOTOP() 

	aValImport := {}

	While (!FT_FEof())
	
	   cLinha := FT_FREADLN()
	   nLength := Len(cLinha)
	
	   If Empty(cLinha)
	      Exit
	   Endif
	   If Len(cLinha) > 334
	   		MsgStop(STR0016) //"Documento fora de padronização. Verifique o padrão do arquivo txt e tente novamente."
	   		Return .F.
	   	ElseIf cLinha $ "INDICE"
	   		MsgStop(STR0017) //"Documento não possui cabeçalho. Deve-se incluir para que o arquivo seja importado."
	   		Return .F.
	   EndIf
	   
	   nRecno++
	
	   nRegLi += 1
	
		If nRecno == 1
			FT_FSKIP()
			cLinha := FT_FREADLN()
		EndIf
	
	   TEXLINHA := SubStr(cLinha,1,328)
	
	   lGrava := .t.
	   lTrue := .t.
	   aPosicao := {}     
	
	   nPosIni := 1
	   nPosAtu := 1   
	           	
		While lTrue
			nPos:= At(Chr(9),cLinha)
			nPosAtu := nPos
			nPosAtu := If(nPosAtu = 0,2,nPos)
			
			If nPos == 0
				If !Empty(cLinha)
				   aAdd(aPosicao,AllTrim(cLinha))
				Endif
				lTrue := .F.
				Loop
			EndIf
			
			If Len(aPosicao) == 27 .And. lContador2 // posicao 28 e tem a coluna 29
				//pega a coluna 28                             
				aAdd(aPosicao,AllTrim(SubStr(cLinha,nPosIni,15)))
				cLinha := SubStr(cLinha,At(Chr(9),cLinha)+Len(Chr(9)),nLength)
				
				//pega a coluna 29
				If lContador2
					nPos:= At(Chr(9),cLinha)
					nPosAtu := nPos
					nPosAtu := If(nPosAtu = 0,2,nPos)
					If nPos == 0 .and. !Empty(cLinha)
					   aAdd(aPosicao,AllTrim(cLinha))
					   cLinha := " "
					Else
						aAdd(aPosicao,AllTrim(SubStr(cLinha,nPosIni,nPosAtu-1)))
						cLinha := SubStr(cLinha,nPosAtu+Len(Chr(9)),nLength)
					EndIf
				Endif
				
			ElseIf Len(aPosicao) == 27 .And. !lContador2 //posicao 28 e nao tem a coluna 29 (pelo update)
				//pega a coluna 28
				aAdd(aPosicao,AllTrim(SubStr(cLinha,nPosIni,15)))
			 	cLinha := SubStr(cLinha,At(Chr(9),cLinha)+Len(Chr(9)),nLength)
			
			Else //pega da 1 a 27 (e as novas se existirem - P.E.)
				aAdd(aPosicao,AllTrim(SubStr(cLinha,nPosIni,nPosAtu-1)))
				cLinha := SubStr(cLinha,nPosAtu+Len(Chr(9)),nLength)
			EndIf
				
		End
		
		//Verifica se o documento está dentro do padrão de txt para importação
		If Len(aPosicao) == 28 .OR. ( lContador2 .And. Len(aPosicao) == 29)
			FT_FSKIP()
			Loop
		Else
			MsgStop(STR0015) //"Documento de importação com inconsistência, verifique a padronização do arquivo txt."
			Return .F.  
		EndIf
	   FT_FSKIP()
	End
	
	fClose(nhdlArq)
	
Return .T.