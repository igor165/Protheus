#INCLUDE "SGAA220.ch"
#INCLUDE "PROTHEUS.CH"

//-------------------------------------------------------------------
/*/{Protheus.doc} SGAA220
Programa para o cadastro da Simulacao do Plano Emergencial

@return	 .T., Boolean, Sempre verdadeiro

@sample	 SGAA220()

@author  Rafael Diogo Richter
@since   30/05/2005
/*/
//-------------------------------------------------------------------
Function SGAA220()

	//Armazena variaveis p/ devolucao (NGRIGHTCLICK)
	Local aNGBEGINPRM := NGBEGINPRM()

	PRIVATE aTrocaF3	:= {}
	Private lTipQue		:= NGCADICBASE( "TBG_TIPQUE", "A", "TBG", .F. )

	Private aRotina		:= MenuDef()
	Private cCadastro	:= OemtoAnsi( STR0006 ) //"Simulação do Plano Emergencial"
	Private aChkDel		:= {}
	Private cTipPE		:= "1" //Define a variável private para uso na consulta SXB TBB
	Private bNgGrava

	If Amiin( 56, 35 ) //Verifica se o usuário possui licença para acessar a rotina

		DbSelectArea( "TBF" )
		DbSetOrder( 1 )
		mBrowse( 6, 1, 22, 75, "TBF" )

	EndIf

	//Devolve variaveis armazenadas (NGRIGHTCLICK)
	NGRETURNPRM( aNGBEGINPRM )

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} SG220PRO
Programa para o cadastro da Simulacao do Plano Emergencial

@return	 .T., Boolean, Sempre verdadeiro

@sample	 SG220PRO()

@author  Rafael Diogo Richter
@since   30/05/2005
/*/
//-------------------------------------------------------------------
Function Sg220Pro( cAlias, nRecno, nOpcx )

	Local cTitulo	:= cCadastro  // Titulo da janela
	Local oMainWnd //Objeto para montar a janela de cadastro
	Local oDlg
	Local nOK		:= 0
	Local aPages	:= {}
	Local aTitles	:= {}
	Local aNoFields	:= {}
	Local aColsCS	:= {}
	Local aHeaderCS	:= {}

	//Variaveis de tamanho de tela e objetos
	Local aSize		:= {}
	Local aObjects	:= {}
	Local aInfo		:= {}
	Local aPosObj	:= {}

	Private oEnc01
	Private oGet01
	Private oGet
	Private nItens
	Private oMark
	Private nTotal	  := 0
	Private aSvATela  := {}
	Private aSvAGets  := {}
	Private aTela	  := {}
	Private n         := 1
	Private aLocal    := {}
	Private aSvHeader := { {}, {}, {}, {} }
	Private aSvCols	  := { {}, {}, {}, {} }
	Private cSeq	  := "   "
	Private nOpca	  := nOpcx
	Private oMenu

	Aadd( aTitles, OemToAnsi( "&" + STR0007 ) ) //"Simulação"
	Aadd( aPages, "Header 1" )

	Aadd( aTitles, OemToAnsi( "&" + STR0008 ) ) //"CheckList da Simulação"
	Aadd( aPages, "Header 2" )

	//Definicao de tamanho de tela e objetos
	aSize := MsAdvSize( , .F., 430 )
	Aadd( aObjects, { 030, 030, .T., .T. } )
	Aadd( aObjects, { 100, 100, .T., .T. } )
	aInfo := { aSize[1], aSize[2], aSize[3], aSize[4], 0, 0 }
	aPosObj := MsObjSize( aInfo, aObjects, .T. )

	Define MsDialog oDlg Title cTitulo From aSize[7], 0 To aSize[6], aSize[5] Of oMainWnd Pixel

	oFolder := TFolder():New( 1, 0, aTitles, aPages, oDlg, , , , .F., .F., aSize[3], aSize[4], )
	oFolder:aDialogs[1]:oFont := oDlg:oFont
	oFolder:aDialogs[2]:oFont := oDlg:oFont
	oFolder:Align := CONTROL_ALIGN_ALLCLIENT

	NgPopUp( asMenu, @oMenu )
	oDlg:bRClicked := { |o,x,y| oMenu:Activate( x, y, oDlg ) }

	//Folder 01
	aTela := {}
	aGets := {}
	Dbselectarea( "TBF" )
	RegToMemory( "TBF", ( nOpcx == 3 ) )
	oEnc01:= MsMGet():New( "TBF", nRecno, nOpcx, , , , , { 0, 0, aSize[4], aSize[3] }, , , , , , oFolder:aDialogs[1], , , .F., "aSvATela" )
	oEnc01:oBox:Align := CONTROL_ALIGN_ALLCLIENT
	oEnc01:oBox:bGotFocus := { || NgEntraEnc( "TBF" ) }

	oEnc01:oBox:bRClicked := { | o, x, y | oMenu:Activate( x, y, oEnc01 ) }

	aSvATela := aClone( aTela )
	aSvAGets := aClone( aGets )

	//Folder 02
	aAdd( aNoFields, 'TBG_CODPLA' )
	aAdd( aNoFields, 'TBG_SEQUEN' )
	cQuery := "SELECT * FROM " + RetSqlName( "TBG" ) + " TBG WHERE TBG.TBG_FILIAL = '" + xFilial( "TBG" ) + "' AND TBG.TBG_CODPLA = '" + TBF->TBF_CODPLA + "'" + ;
				" AND TBG.TBG_SEQUEN = '" + TBF->TBF_SEQUEN + "' AND D_E_L_E_T_ <> '*'"
	FillGetDados( nOpcx, "TBG", 1, xFilial( "TBG" ) + TBF->TBF_CODPLA + TBF->TBF_SEQUEN, { || "TBG->TBG_FILIAL + TBG->TBG_CODPLA + TBG->TBG_SEQUEN"}, { || .T. }, aNoFields, , , cQuery, , , aHeaderCS, aColsCS )

	If Empty( aColsCS ) .Or. nOpcx == 3
		aColsCS := BlankGetd( aHeaderCS )
	EndIf

	Sg220Desc( aHeaderCS, aColsCs )

	n      := Len( aColsCS )
	oGet01 := MsNewGetDados():New( 0, 0, 125, 315, IIf( !INCLUI .And. !ALTERA, 0, GD_INSERT + GD_UPDATE + GD_DELETE ), "Sg220Lin1()", "AllwaysTrue()", , , , 9999, , , , oFolder:aDialogs[2], aHeaderCS, aColsCS )
	oGet01:oBrowse:bChange := {|| fChange() }
	oGet01:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT
	oGet01:oBrowse:Default()
	oGet01:oBrowse:Refresh()

	Activate Dialog oDlg On Init ( EnchoiceBar( oDlg, { || lOk := .T., IIf( Sg220Obrig( nOpcx ), oDlg:End(), lOk := .F. ) }, { || nOk:= 0, oDlg:End() } ) )

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³SG220LIN1 ³ Autor ³ Thiago Olis Machado   ³ Data ³15/03/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida a linha digitada no GetDados.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SGAA030                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         Atualizacoes Sofridas Desde a Construcao Inicial.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function Sg220Lin1( lFim )
Local f
Local aColsOk := {}, aHeadOk := {}
Local nPosCod := 1, nPosTip := 0, nPosFai := 0, nAt := 1
Local nCols, nHead

Default lFim := .F.


aColsOk := aClone( oGet01:aCols )
aHeadOk := aClone( oGet01:aHeader )
nAt 	 := oGet01:nAt
nPosCod := aScan( aHeadOk , { | x | Trim( Upper( x[ 2 ] ) ) == "TBG_CODCHK" } )
If lTipQue
	nPosTip := aScan( aHeadOk , { | x | Trim( Upper( x[ 2 ] ) ) == "TBG_TIPQUE" } )
EndIf

If lFim .And. Len( aColsOk ) == 1 .And. ( Empty( aColsOk[ 1 , nPosCod ] ) .Or. aColsOk[ 1 , Len( aColsOk[ 1 ] ) ] )
	Return .T.
Endif

//Percorre aCols
For f := 1 to Len( aColsOk )
	If !aColsOk[ f , Len( aColsOk[ f ] ) ]//Valida apenas linhas nao deletadas
		If lFim .Or. f == nAt
			//VerIfica se os campos obrigatórios estão preenchidos
			If Empty( aColsOk[ f , nPosCod ] )
				//Mostra mensagem de Help
				Help( " " , 1 , "OBRIGAT2" , , aHeadOk[ nPosCod , 1 ] , 3 , 0 )
				Return .F.
			EndIf
			If nPosTip > 0 .And. Empty( aColsOk[ f , nPosTip ] )
				//Mostra mensagem de Help
				Help( " " , 1 , "OBRIGAT2" , , aHeadOk[ nPosTip , 1 ] , 3 , 0 )
				Return .F.
			EndIf
		Endif
		//Verifica se é somente LinhaOk
		If f <> nAt .and. !aColsOk[ nAt , Len( aColsOk[ nAt ] ) ]
			If aColsOk[ f , nPosCod ] == aColsOk[ nAt , nPosCod ] .And. If( nPosTip > 0 , aColsOk[ f , nPosTip ] == aColsOk[ nAt , nPosTip ] , .T. )
				Help( " " , 1 , "JAEXISTINF" , , aHeadOk[ nPosCod , 1 ] , 3 , 0 )
				Return .F.
			Endif
		Endif
	Endif
Next f

PutFileInEof( "TBG" )

Return .T.
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³SG220OBRIG  ³ Autor ³ Rafael Diogo Richter  ³ Data ³06/06/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Faz validacao antes de gravar.                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaSGA                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         Atualizacoes Sofridas Desde a Construcao Inicial.               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function Sg220Obrig(nOpcx)
Local aOldArea := GetArea() // Guarda variaveis de alias e indice

If !Obrigatorio(aGets,aTela)
   Return .f.
Endif
If !Sg220Lin1( .T. )
	Return .f.
EndIf

Sg220Grava(nOpcx)

RestArea(aOldArea)
Return .t.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg220Grava
Grava as informacoes.
@type function
@author Rafael Diogo Richter
@since 06/06/2005
@param nOpcx, numeric, operação realizada
@return boolean, sempre verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg220Grava(nOpcx)

	Local j,i, nPos
	Local lDelete := .f.
	Local nQtd := 0
	Local nPosTip := 0, nPosCod := 0

	//Valida arquivos relacionados na exclusao
	If nOpcx == 5
		aArea := GetArea()
		lDEL := .t.
		For i := 1 to Len(aCHKDEL)
			DbSelectArea(aCHKDEL[i][2])
			OldInd := INDEXORD()
			DbSetOrder(aCHKDEL[i][3])
			cKEY := aCHKDEL[i][1]
			lDEL := !( DbSeek(xFilial() + &cKEY.) )
			DbSetOrder(OldInd)
			If !lDEL
				cError := AllTrim( FwX2Nome(aCHKDEL[i][2]) ) + " ("+aCHKDEL[i][2]+")"
				HELP(" ",1,"MA10SC",,cError,5,1)
				RestArea(aArea)
				Return
			Endif
		Next
		RestArea(aArea)
	Endif

	//Manipula a tabela TBF
	DbSelectArea('TBF')
	DbSetOrder(1)
	If DbSeek(xFilial('TBF')+M->TBF_CODPLA+M->TBF_SEQUEN)
		RecLock('TBF',.f.)
	Else
		RecLock('TBF',.t.)
	EndIf

	If nOpcx <> 5
		TBF->TBF_FILIAL := xFilial('TBF')
		TBF->TBF_CODPLA := M->TBF_CODPLA
		TBF->TBF_SEQUEN := M->TBF_SEQUEN
		TBF->TBF_FREQUE := M->TBF_FREQUE
		TBF->TBF_QUANTI := M->TBF_QUANTI
		TBF->TBF_DATPLA := M->TBF_DATPLA
		TBF->TBF_CODCAL := M->TBF_CODCAL
	Else
		DbDelete()
	EndIf

	MsUnLock('TBF')


	//Manipula a tabela TBG
	nPosCod := aScan( oGet01:aHeader, { | x | Trim( Upper( x[ 2 ] ) ) == "TBG_CODCHK" } )
	If lTipQue
		nPosTip := aScan( oGet01:aHeader, { | x | Trim( Upper( x[ 2 ] ) ) == "TBG_TIPQUE" } )
	EndIf
	nOrd 	:= 1
	cKey 	:= xFilial( "TBG" ) + M->TBF_CODPLA + M->TBF_SEQUEN
	cWhile	:= "xFilial('TBG') + M->TBF_CODPLA + M->TBF_SEQUEN == TBG->TBG_FILIAL + TBG->TBG_CODPLA + TBG->TBG_SEQUEN"
	If nOpcx == 5
		dbSelectArea( "TBG" )
		dbSetOrder( nOrd )
		dbSeek( cKey )
		While !Eof() .and. &( cWhile )
			RecLock( "TBG" , .F. )
			DbDelete()
			MsUnLock( "TBG" )
			dbSelectArea( "TBG" )
			dbSkip()
		End
	Else
		If Len( oGet01:aCols ) > 0
			//Coloca os deletados por primeiro
			aSORT( oGet01:aCols , , , { | x , y | x[ Len( oGet01:aCols[ 1 ] ) ] .And. !y[ Len( oGet01:aCols[ 1 ] ) ] } )
			For i := 1 to Len( oGet01:aCols )
				If !oGet01:aCols[ i , Len( oGet01:aCols[ i ] ) ] .and. !Empty( oGet01:aCols[ i , nPosCod ] ) .And. If( lTipQue , !Empty( oGet01:aCols[ i , nPosTip ] ) , .T. )
					dbSelectArea( "TBG" )
					dbSetOrder( nOrd )
					If dbSeek( xFilial( "TBG" ) + M->TBF_CODPLA + M->TBF_SEQUEN + If( lTipQue , oGet01:aCols[ i , nPosTip ] , "" ) + oGet01:aCols[ i , nPosCod ] )
						RecLock( "TBG" , .F. )
					Else
						RecLock( "TBG" , .T. )
					Endif
					For j := 1 to FCount()
						If "_FILIAL" $ Upper( FieldName( j ) )
							FieldPut( j , xFilial( "TBG" ) )
						ElseIf "_CODPLA" $ Upper( FieldName( j ) )
							FieldPut( j , M->TBF_CODPLA )
						ElseIf "_SEQUEN" $ Upper( FieldName( j ) )
							FieldPut( j , M->TBF_SEQUEN )
						ElseIf ( nPos := aScan( oGet01:aHeader , { | x | Trim( Upper( x[ 2 ] ) ) == Trim( Upper( FieldName( j ) ) ) } ) ) > 0
							FieldPut( j , oGet01:aCols[ i , nPos ] )
						Endif
					Next j
					MsUnlock( "TBG" )
				Elseif !Empty( oGet01:aCols[ i , nPosCod ] ) .And. If( lTipQue , !Empty( oGet01:aCols[ i , nPosTip ] ) , .T. )
					dbSelectArea( "TBG" )
					dbSetOrder( nOrd )
					If dbSeek( xFilial( "TBG" ) + M->TBF_CODPLA + M->TBF_SEQUEN + If( lTipQue , oGet01:aCols[ i , nPosTip ] , "" ) + oGet01:aCols[ i , nPosCod ] )
						RecLock( "TBG" , .F. )
						dbDelete()
						MsUnlock( "TBG" )
					Endif
				Endif
			Next i
		Endif
		dbSelectArea( "TBG" )
		dbSetOrder( nOrd )
		dbSeek( cKey )
		While !Eof() .and. &( cWhile )
			If aScan( oGet01:aCols , { | x | x[ nPosCod ] == TBG->TBG_CODCHK .AND. If( lTipQue , x[ nPosTip ] == TBG->TBG_TIPQUE , .T. ) .AND. !x[ Len( x ) ] } ) == 0
				RecLock( "TBG" , .F. )
				DbDelete()
				MsUnLock( "TBG" )
			Endif
			dbSelectArea( "TBG" )
			dbSkip()
		End
	Endif

Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SG220SEQ ³ Autor ³ Rafael Diogo Richter  ³ Data ³07/06/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Programa para Incrementar a Sequencia                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaSGA                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function Sg220Seq()

Local cSeq := '000'

DbSelectArea("TBF")
DbSetOrder(1)
If DbSeek(xFilial('TBF')+M->TBF_CODPLA) .and. nOpca = 3
	While TBF->(!Eof()) .and. xFilial('TBF') == TBF->TBF_FILIAL .and.;
		   TBF->TBF_CODPLA == M->TBF_CODPLA
   	cSeq := TBF->TBF_SEQUEN
		TBF->(DbSkip())
	End
Else
	cSeq := TBF->TBF_SEQUEN
EndIf

M->TBF_SEQUEN := StrZero(Val(cSeq)+1,3)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SG220SEQ ³ Autor ³ Rafael Diogo Richter  ³ Data ³07/06/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Programa para Incrementar a Sequencia                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaSGA                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Sg220Desc(aHeaderCS,aColsCs)

Local i
Local nCodigo
Local nTipo
Local nDesc

If lTipQue
	nCodigo := Ascan(aHeaderCS, {|x| Alltrim(x[2]) == "TBG_CODCHK"})
	nTipo	 := Ascan(aHeaderCS, {|x| Alltrim(x[2]) == "TBG_TIPQUE"})
	nDesc	 := Ascan(aHeaderCS, {|x| Alltrim(x[2]) == "TBG_DESCHK"})
	For i:= 1 To Len( aColsCS )
		If aColsCS[ i , nTipo ] == "2"
			If TJ2->( DbSeek( xFilial('TJ2')+ aColsCS[i][nCodigo] ) )
				aColsCS[i][nDesc] := TJ2->TJ2_NOMQUE
			EndIf
		Else
			If TBD->( DbSeek( xFilial('TBD')+ aColsCS[i][nCodigo] ) )
				aColsCS[i][nDesc] := TBD->TBD_DESCHK
			EndIf
		EndIf
	Next i
Else
	For i:= 1 To Len( aColsCS )
		If TBD->( DbSeek( xFilial('TBD')+ aColsCS[i][1] ) )
			aColsCS[i][2] := TBD->TBD_DESCHK
		EndIf
	Next i
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MenuDef  ³ Autor ³ Rafael Diogo Richter  ³ Data ³29/11/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Utilizacao de Menu Funcional.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaSGA                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±           ³    1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
Local aRotina :=	{ { STR0001  , "AxPesqui"  , 0 , 1},; //"Pesquisar"
                    { STR0002  , "Sg220Pro"  , 0 , 2},; //"Visualizar"
                    { STR0003  , "Sg220Pro"  , 0 , 3},; //"Incluir"
                    { STR0004  , "Sg220Pro"  , 0 , 4},; //"Alterar"
                    { STR0005  , "Sg220Pro"  , 0 , 5, 3}} //"Excluir"

Return aRotina
//---------------------------------------------------------------------
/*/{Protheus.doc} SG220VLFUN
Troca o F3 do Campo

@return .T.

@sample
SG220VLFUN()

@author Jackson Machado
@since 02/04/2013
/*/
//---------------------------------------------------------------------
Function SG220VLFUN()
	Local lRet := .T.
	Local nAt, nTipo, nCod, nDesc
	Local aColsOk, aHeaderOk

	//Definicoes de variaveis de GetDados
	aColsOk	:= aClone( oGet01:aCols )
	aHeaderOk	:= aClone( oGet01:aHeader )
	nAt			:= oGet01:nAt

	nTipo		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TBG_TIPQUE" } )
	nCod		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TBG_CODCHK" } )
	nDesc		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TBG_DESCHK" } )

	If !lTipQue .Or. aColsOk[ nAt , nTipo ] == "1"//Caso seja usuario
		If !ExistCPO( "TBD" , SubStr( M->TBG_CODCHK , 1 , Len( TBD->TBD_CODCHK ) ) )
			lRet := .F.
			oGet01:aCols[ nAt , nDesc ] := Space( TamSx3( "TBG_DESCHK" )[ 1 ] )
		Else
			oGet01:aCols[ nAt , nDesc ] := NGSeek( "TBD" , M->TBG_CODCHK , 1 , "TBD_DESCHK" )
		EndIf
	Else
		//Caso seja funcionario
		If !ExistCPO( "TJ2" , SubStr( M->TBG_CODCHK , 1 , Len( TJ2->TJ2_QUESTI ) ) )
			lRet := .F.
			oGet01:aCols[ nAt , nDesc ] := Space( TamSx3( "TBG_DESCHK" )[ 1 ] )
		Else
			oGet01:aCols[ nAt , nDesc ] := NGSeek( "TJ2" , M->TBG_CODCHK , 1 , "TJ2_NOMQUE" )
		EndIf
	EndIf

Return lRet
//---------------------------------------------------------------------
/*/{Protheus.doc} SG220DEFUN
Descricao do Funcionario

@return .T.

@sample
SG220DEFUN()

@author Jackson Machado
@since 02/04/2013
/*/
//---------------------------------------------------------------------
Function SG220DEFUN()

	Local cRet := ""

	If !lTipQue .Or. TBG->TBG_TIPQUE == "1"//Caso seja usuario
		cRet := NGSeek( "TBD" , TBG->TBG_CODCHK , 1 , "TBD_DESCHK" )
	Else
		//Caso seja funcionario
		cRet := NGSeek( "TJ2" , TBG->TBG_CODCHK , 1 , "TJ2_NOMQUE" )
	EndIf

Return cRet
//---------------------------------------------------------------------
/*/{Protheus.doc} SG220VLTIP
Troca o F3 do Campo

@return .T.

@sample
SG220VLTIP()

@author Jackson Machado
@since 02/04/2013
/*/
//---------------------------------------------------------------------
Function SG220VLTIP()

    Local nAt, nTipo, nCod, nDesc
	Local aColsOk, aHeaderOk

	//Definicoes de variaveis de GetDados
	aColsOk	:= aClone( oGet01:aCols )
	aHeaderOk	:= aClone( oGet01:aHeader )
	nAt			:= oGet01:nAt

	//Definicoes de posicoes
	nTipo		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TBG_TIPQUE" } )
	nCod		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TBG_CODCHK" } )
	nDesc		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TBG_DESCHK" } )

	If M->TBG_TIPQUE == "1"
		NGTrocaF3( "TBG_CODCHK" , "TBD" )
	Else
		NGTrocaF3( "TBG_CODCHK" , "TJ2" )
	EndIf

	If M->TBG_TIPQUE <> oGet01:aCols[ nAt , nTipo ]
		oGet01:aCols[ nAt , nCod ]		:= Space( TamSx3( "TBG_CODCHK" )[ 1 ] )
		oGet01:aCols[ nAt , nDesc ]	:= Space( TamSx3( "TBG_DESCHK" )[ 1 ] )
	Endif

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} fChange
Função chamada para trocar o F3

@return .T.

@sample
fChange()

@author Jackson Machado
@since 02/04/2013
/*/
//---------------------------------------------------------------------
Static Function fChange()
	Local nAt, nTipo, nCod, nDesc
	Local aColsOk, aHeaderOk

	//Definicoes de variaveis de GetDados
	aColsOk	:= aClone( oGet01:aCols )
	aHeaderOk	:= aClone( oGet01:aHeader )
	nAt			:= oGet01:nAt

	//Definicoes de posicoes
	nTipo		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TBG_TIPQUE" } )
	nCod		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TBG_CODCHK" } )
	nDesc		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TBG_DESCHK" } )

	//Verifica o aF3
	aTrocaF3 := {}

	If lTipQue
		If oGet01:aCols[ nAt , nTipo ] == "2"
			aAdd( aTROCAF3 , { "TBG_CODCHK" , "TJ2" } )
		Else
			aAdd( aTROCAF3 , { "TBG_CODCHK" , "TBD" } )
		EndIf
	Else
		aAdd( aTROCAF3 , { "TBG_CODCHK" , "TBD" } )
	EndIf

Return .T.
