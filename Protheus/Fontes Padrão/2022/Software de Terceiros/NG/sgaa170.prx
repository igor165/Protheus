#INCLUDE "SGAA170.ch"
#include "Protheus.ch"
//---------------------------------------------------------------------
/*/{Protheus.doc} SGAA170()
Programa para cadastrar destinos de Residuos

TB2 - Destino Padrao de Residuos

@author  Thiago Olis Machado
@since   20/12/2004
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function SGAA170()

	//-------------------------------------------
	//Guarda conteudo e declara variaveis padroes
	//-------------------------------------------
	Local aNGBEGINPRM := NGBEGINPRM(4)

	If Amiin(56)	//Verifica se o usuário possui licença para acessar a rotina.

	Private cDes   		:= Space( Len( TB2->TB2_CODDES ) )//Codigo do Destino
	Private aRotina 	:= MenuDef()
	Private cCadastro 	:= OemtoAnsi(STR0006)//"Destino Padrao de Residuos"
	Private aChkDel 	:= {}, bNgGrava
	Private aLimpa 		:= {{"TB2_DESFOR"}}
	Private aTrocaF3 	:= {}
	Private lInterno 	:= .f.,lExterno := .f.

	SetKey( VK_F9, { | | NGVersao( "SGAA170" , 2 ) } )

	If !NGCADICBASE("TEK_DESFOR","D","TEK",.F.)
		If !NGINCOMPDIC("UPDSGA31","THYWO2",.F.)
			Return .F.
		EndIf
	EndIf

	DbSelectArea("TB2")
	DbSetOrder(1)
	mBrowse( 6, 1,22,75,"TB2")

	EndIf
/*	DbSelectArea("TB2")
	DbSetOrder(1)
	*/
	//--------------------------------------
	// Retorna conteudo de variaveis padroes
	//--------------------------------------
	NGRETURNPRM(aNGBEGINPRM)

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} Sg170Tipo()
Funcao para limpar o campo TB2_CODALM quando o tipo for '2'

TB2 - Destino Padrao de Residuos

@author  Thiago Olis Machado
@since   20/12/2004
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function Sg170Tipo()

	lInterno := .F.
	lExterno := .F.

	IIf(M->TB2_TIPO=='1',lInterno:=.t.,lExterno:=.t.)
	If lExterno
		M->TB2_TPRECE := "1"
		M->TB2_CODLOC := Space(TAMSX3("TB2_CODLOC")[1])
		M->TB2_DESLOC := Space(TAMSX3("TB2_DESLOC")[1])
	Else
		M->TB2_TPRECE := Space(1)
		M->TB2_FORNEC := Space(TAMSX3("TB2_FORNEC")[1])
		M->TB2_DESFOR := Space(TAMSX3("TB2_DESFOR")[1])
		M->TB2_CODTRA := Space(TAMSX3("TB2_CODTRA")[1])
		M->TB2_DESTRA := Space(TAMSX3("TB2_DESTRA")[1])
	Endif

	If M->TB2_TIPO == '2'
		M->TB2_CODALM := Space(Len(TB2->TB2_CODALM))
	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} Sg170Num()
Funcao para trazer codigo auto-numerado.

TB2 - Destino Padrao de Residuos

@author  Thiago Olis Machado
@since   22/04/2005
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function Sg170Num()

	cDes := 0
	DbSelectArea('TB2')
	DbSetOrder(1)
	DbGotop()
	While TB2->(!Eof())
		cDes := Max( cDes, Val( TB2->TB2_CODDES ) )
	   DbSkip()
	End
	cDes ++
	cDes := StrZero( cDes, 6 )

Return cDes
//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef()
Utilizacao de Menu Funcional.

Parametros do array a Rotina:
						1. Nome a aparecer no cabecalho
						2. Nome da Rotina associada
						3. Reservado
						4. Tipo de Transa‡„o a ser efetuada:
							1 - Pesquisa e Posiciona em um Banco de Dados
						   	2 - Simplesmente Mostra os Campos
						   	3 - Inclui registros no Bancos de Dados
						  	4 - Altera o registro corrente
						   	5 - Remove o registro corrente do Banco de Dados
						5. Nivel de acesso
						6. Habilita Menu Funcional

@author  Thiago Olis Machado
@since   22/04/2005
@version P11
@return  aRotina
/*/
//---------------------------------------------------------------------
Static Function MenuDef()

Local aRotina 	:=	{  { STR0001 , "AxPesqui"  , 0 , 1	},; //"Pesquisar"
					   { STR0002 , "NgCad01"   , 0 , 2	},; //"Visualizar"
	                   { STR0003 , "SGA170INC" , 0 , 3	},; //"Incluir"
	                   { STR0004 , "SGA170INC" , 0 , 4	},; //"Alterar"
	                   { STR0005 , "SGA170INC" , 0 , 5, 3},;//"Excluir"
	                   { STR0010 , "SG170CONT" , 0 , 2	}}  //"Contratos"

Return aRotina
//---------------------------------------------------------------------
/*/{Protheus.doc} SG170CONT()
Utilizacao de Menu Funcional.

Contrato de Tratamento de resíduos

@author  Roger Rodrigues
@since   19/03/10
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function SG170CONT()

	//-------------------------
	// Salva area de trabalho.
	//-------------------------
	Local aNGBEGINPRM := NGBEGINPRM()

	aOLdRotina 	:= aClone(aRotina)
	bNGGRAVA 	:= {|| ExistChav("TEK",M->TEK_CODRES+M->TEK_ANO) }
	aRotina 	:=	{ 	{ STR0001 , "AxPesqui" , 0 , 1},;    //"Pesquisar"
						{ STR0002 , "NgCad01"  , 0 , 2},;   //"Visualizar"
						{ STR0003 , "NgCad01"  , 0 , 3},;   //"Incluir"
						{ STR0004 , "NgCad01"  , 0 , 4},;   //"Alterar"
						{ STR0005 , "NgCad01"  , 0 , 5, 3}}  //"Excluir"
	aRelac := {{"TEK_DESFOR", "NGSEEK('SA2',TB2->TB2_FORNEC,1,'A2_NOME')"}}

	DbSelectArea("TEK")
	dbGoTop()
	Set Filter to TEK->TEK_FORNEC == TB2->TB2_FORNEC
	mBrowse( 6, 1,22,75,"TEK")

	//---------------------------
	// Restaura Area de trabalho.
	//---------------------------
	bNGGRAVA := Nil
	aRelac := {}
	aRotina := aClone(aOldRotina)

	NGBEGINPRM(aNGBEGINPRM)

Return
//---------------------------------------------------------------------
/*/{Protheus.doc} SG170REL()
Relacao dos campos

@author  Roger Rodrigues
@since   14/01/11
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function SG170REL(cCampo,cTipo)
	cAlias := If(IsInCallStack("NGCAD01"),"M","TB2")
Return NGSEEK("S"+If(cTipo == "2","A1","A2"),&(cAlias+"->TB2_FORNEC"),1,If(cTipo == "2","A1","A2")+"_"+cCampo)
//---------------------------------------------------------------------
/*/{Protheus.doc} SG170WHEN()
When  dos campos

@author  Roger Rodrigues
@since   14/01/11
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function SG170WHEN(cCampo)

	If cCampo == "TB2_FORNEC"
		Return lExterno .and. SGA280LIMPA('TB2_TPRECE',"SA1",aLimpa,,.F.,'TB2_FORNEC')
	Endif

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} SGA170INC()
Valida para nao deixar o almoxarifado em branco

TB2 - Destino Padrao de Residuos

@author  Marcos Wagner Junior
@since   07/05/2010
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function SGA170INC(cAlias,nReg,nOpcx)

	Local nRet := 0
	Private aChkDel := {}, bNgGrava
	Private aRotina :={ { STR0001 , "AxPesqui"  , 0 , 1},;   //"Pesquisar"
	                    { STR0002 , "NgCad01"  	, 0 , 2},;   //"Visualizar"
	                    { STR0003 , "SGA170INC" , 0 , 3},;   //"Incluir"
	                    { STR0004 , "SGA170INC" , 0 , 4},;   //"Alterar"
	                    { STR0005 , "SGA170INC" , 0 , 5, 3}} //"Excluir"

	bNGGRAVA := {|| SG170GRAVA() }

	nRet := NGCAD01(cAlias,nReg,nOpcx)

	If nRet == 1
		dbSelectArea("TAQ")
		dbSetOrder(3)
		If dbSeek(xFilial("TAQ")+"6"+TB2->TB2_CODDES)
			RecLock("TAQ",.f.)
			dbDelete()
			TAQ->(MsUnlock())
		Endif
		dbSelectArea("TB2")
	Endif

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} SGA170VAL()
Validacao dos campos

@author  Roger Rodrigues
@since   14/01/11
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function SGA170VAL()

   	If M->TB2_TPRECE == "2"
		If ExistCpo("SA1",M->TB2_FORNEC)
			M->TB2_DESFOR := SUBSTR(SA1->A1_NOME,1,40)
		Else
			Return .F.
		Endif
   	Else
		If ExistCpo("SA2",M->TB2_FORNEC)
			M->TB2_DESFOR := SUBSTR(SA2->A2_NOME,1,40)
		Else
			Return .F.
		Endif
	Endif

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} SG170GRAVA()
Valida para nao deixar o almoxarifado em branco

TB2 - Destino Padrao de Residuos

@author  Roger Rodrigues
@since   14/01/11
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function SG170GRAVA(cAlias,nReg,nOpcx)

	If (Inclui .OR. Altera) .AND. M->TB2_TIPO == '1' .AND. Empty(M->TB2_CODALM)
		MsgStop(STR0007+Alltrim(NGRETTITULO("TB2_CODALM"))+STR0008+; //"O campo "###" deverá ser informado quando o "
					Alltrim(NGRETTITULO("TB2_TIPO"))+STR0009+AllTrim(NGRETSX3BOX("TB2_TIPO","1")) ) //" for igual a "
		Return .F.
	Endif

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} SGA280LIMPA()
Verifica tipo de receptor e muda SAY e F3 do campo na tela

@author  Roger Rodrigues
@since   27/01/2010
@version P11
@return  lRet
/*/
//---------------------------------------------------------------------
Function SGA280LIMPA(cVar,cF3,aFields,cCond,lLimpa,cCampo)

	Local oDlg, nX
	Local aArea		:= GetArea()//Guarda indices
	Local nPos		:= 0
	Local cVal		:= ""
	Default cCampo  := ""
	Default cVar	:= ""//Variavel a ser modificada
	Default aFields := {}//Campos a serem limpos junto a variavel
	Default cCond	:= "2"//Condicao para modificacao de F3
	Default lLimpa	:= .T.//Variavel que verifica se conteudo dos campos deve ser limpado
	Default cF3 	:= "SA1"//F3 a ser modificado

	//Verifica se a variavel a ser modificada está preenchida
	If Empty(cVar) .or.  &(ReadVar()) = Nil .or. &("M->"+cVar) = Nil .or. Empty(cCampo)
		Return .T.
	Endif
	If !lLimpa
		cVal := &("M->"+cVar)
	Else
		cVal := &(ReadVar())
	Endif

	//Verifica o valor está nas condicoes
	IF (cVal$cCond)
		aTrocaF3 := {{cCampo,cF3}}
	Else
		aTrocaF3 = {}
	EndIf
	//Limpa variaveis de tela
	If lLimpa
		aAdd(aFields, {cCampo})//Adiciona variavel no array de limpa
		//Percorre campos para limpar
		For nX:=1 to Len(aFields)
			//Limpa Variaveis
			If ValType(&("M->"+aFields[nX][1])) == "C"
				&("M->"+aFields[nX][1]) := Space(Len(&("M->"+aFields[nX][1])))
			ElseIf ValType(&("M->"+aFields[nX][1])) == "N"
				&("M->"+aFields[nX][1]) := 0
	         ELSEIF ValType(M->&(EVAL(bCampo,i))) == "D"
				&("M->"+aFields[nX][1]) := CTOD("  /  /  ")
			Endif
		Next nX
	Endif

	//Atualiza a tela
	lRefresh := .T.
	//Restaura indices
	RestArea(aArea)

Return .T.