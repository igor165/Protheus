#INCLUDE "mntr840.ch"
#INCLUDE "PROTHEUS.CH"

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR840
Custo do BEM
@author Inacio Luiz Kolling
@since 18/06/99
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Function MNTR840()

	Local aNGBEGINPRM := NGBEGINPRM()

	Private aReturn  := { STR0004, 1,STR0005, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
	Private nLastKey := 0
	Private Titulo   := STR0006 //"Relatorio de Custo do Bem"
	Private Tamanho  := "G"
	Private nomeprog := "MNTR840"
	Private lmaqui   := .f.

	Private cArqAbast
	Private cInd1Abast
	Private oReport
	Private oSection1, oSection2, oSection3, oSection4
	Private oSection5, oSection6, oSection7, oSection8
	Private oSection9, oSectionAb, oSectionBB
	Private nX
	Private nBEMPRE := 0.00
	Private nBEMREA	:= 0.00
	Private nBEMFPRE := 0.00
	Private nBEMFREA := 0.00
	Private nORDPRE := 0.00
	Private nORDREA := 0.00
	Private nCBEMPAIP := 0.00
	Private nCBEMPAIR := 0.00
	Private nDIF
	Private nPER
	Private nTOTP
	Private nTOTR
	Private nTotAbast
	Private oTmpTbl1	//Tabela Temporaria
	Private oTmpTbl2	//Tabela Temporaria
	Private oTmpTbl3	//Tabela Temporaria
	Private oTmpTbl4	//Tabela Temporaria
	Private oTmpTbl5	//Tabela Temporaria
	Private cTRB	  := GetNextAlias() // Alias oTmpTbl1
	Private cTRB2	  := GetNextAlias() // Alias oTmpTbl2
	Private cTRB3	  := GetNextAlias() // Alias oTmpTbl3
	Private cTRB4	  := GetNextAlias() // Alias oTmpTbl4
	Private cTRBAbast := GetNextAlias() //Alias oTmpTbl5

	Private lGFrota := MNTA180FR()

	//----------------------------------------------------------------
	//| Variaveis utilizadas para qarametros!                        |
	//| mv_par01     // De Bem                                       |
	//| mv_par02     // Ate Bem                                      |
	//| mv_par03     // De Data Manutencao                           |
	//| mv_par04     // Ate Data Manutencao                          |
	//| mv_par05     // De Servico                                   |
	//| mv_par06     // Ate Servico                                  |
	//| mv_par07     // Considerar Produtos ( Sim/Nao )              |
	//| mv_par08     // Considerar Ferramenta ( Sim/Nao )            |
	//| mv_par09     // Considerar Mao de Obra ( Sim/Nao )           |
	//| mv_par10     // Considerar Terceiros   ( Sim/Nao )           |
	//| mv_par11     // Tipo de Custo          ( Medio/Standard)     |
	//| mv_par12     // Custo Maquina Parada   ( Nao/Sim)            |
	//| mv_par13     // Aglutina M.D.O.        ( Sim/Nao )           |
	//| mv_par14     // Considera OS(Liberada,Pendente,aberta,final.)|
	//| mv_par15     // "Apresentação ?"                        	 |
	//| mv_par16     // Considerar Estrutura   ( Sim/Nao )           |
	//| mv_par17     // Considera Data (Da O.S\Do Insumo)            |
	//| mv_par18     // Considera Abast. (Abastecimentos)            |
	//----------------------------------------------------------------
	PRIVATE cPerg := "MNT840"

	/*---------------------------------------------------------------
	Vetor utilizado para armazenar retorno da função MNTTRBSTB,
	criada de acordo com o item 18 (RoadMap 2013/14)
	---------------------------------------------------------------*/
	Private vFilTRB := MNT045TRB()

	SetKey(VK_F4, {|| MNT045FIL( vFilTRB[2] )})

	If FindFunction("TRepInUse") .And. TRepInUse()
		//-- Interface de impressao
		If !Pergunte(cPerg,.t.)
			Return
		EndIf
		oReport := ReportDef()
		oReport:SetLandscape()  //Default Paisagem
		oReport:PrintDialog()
	Else
		MNTR840R3()
	EndIf

	NGRETURNPRM(aNGBEGINPRM)

Return NIL
//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR840R3
Impressão do Relatório
@author Ricardo Dal Ponte
@since 13/01/2007
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Function MNTR840R3()

	Local cString    := "STJ"
	Local cdesc1     := STR0001 //"Relatorio de Custos do Bem "
	Local cdesc2     := STR0002 //"Este programa seleciona por default OS finalizadas e as"
	Local cdesc3     := STR0003 //"em aberto conforme parametro selecionado."
	Local wnrel      := "MNTR840"

	If !Pergunte(cPerg,.t.)
		Return
	EndIf

	dbSelectArea("STL")
	dbSetOrder(1)

	//----------------------------------------------------------------
	//| Envia controle para a funcao SETPRINT                        |
	//----------------------------------------------------------------
	wnrel := SetPrint(cString,wnrel,,titulo,cDesc1,cDesc2,cDesc3,.F.,"")

	SetKey(VK_F4, {|| })

	If cValtoChar(aReturn[6]) <> wnrel //Caso seja cancelado a impressão, para o processo.
		Return
	EndIf

	SetDefault(aReturn,cString)

	If nLastKey = 27
		Set Filter To

		MNT045TRB( .T., vFilTRB[1], vFilTRB[2])

		Return
	Endif

	RptStatus({|lEnd| R840Imp(@lEnd,wnRel,titulo,tamanho)},titulo)

	MNT045TRB( .T., vFilTRB[1], vFilTRB[2])

Return Nil
//------------------------------------------------------------------------------
/*/{Protheus.doc} ReportDef
Define as secoes impressas no relatorio
@author Wagner S. de Lacerda
@since 07/07/2010
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Static Function ReportDef()

	//----------------------------------------------------------------
	//| Variaveis utilizadas para qarametros!                        |
	//| mv_par01     // De Bem                                       |
	//| mv_par02     // Ate Bem                                      |
	//| mv_par03     // De Data Manutencao                           |
	//| mv_par04     // Ate Data Manutencao                          |
	//| mv_par05     // De Servico                                   |
	//| mv_par06     // Ate Servico                                  |
	//| mv_par07     // Considerar Produtos ( Sim/Nao )              |
	//| mv_par08     // Considerar Ferramenta ( Sim/Nao )            |
	//| mv_par09     // Considerar Mao de Obra ( Sim/Nao )           |
	//| mv_par10     // Considerar Terceiros   ( Sim/Nao )           |
	//| mv_par11     // Tipo de Custo          ( Medio/Standard)     |
	//| mv_par12     // Custo Maquina Parada   ( Nao/Sim)            |
	//| mv_par13     // Aglutina M.D.O.        ( Sim/Nao )           |
	//| mv_par14     // Considera OS(Liberada,Pendente,aberta,final.)|
	//| mv_par15     // Apresentação ?                        	     |
	//| mv_par16     // Considerar Estrutura   ( Sim/Nao )           |
	//| mv_par17     // Considera Data (Da O.S\Do Insumo)            |
	//----------------------------------------------------------------

	//--------------------------------------------------------------------------
	//|   Criacao do componente de impressao                                   |
	//|                                                                        |
	//|TReport():New                                                           |
	//|ExpC1 : Nome do relatorio                                               |
	//|ExpC2 : Titulo                                                          |
	//|ExpC3 : Pergunte                                                        |
	//|ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  |
	//|ExpC5 : Descricao                                                       |
	//|                                                                        |
	//--------------------------------------------------------------------------

	oReport := TReport():New(nomeprog,OemToAnsi(STR0001),/*cPerg*/,{|oReport| ReportPrint(oReport)},STR0002+" "+STR0003) //"Este programa seleciona por default OS finalizadas e as"###"em aberto conforme parametro selecionado."

	//--------------------------------------------------------------------------
	//|Criacao da secao utilizada pelo relatorio                               |
	//|                                                                        |
	//|TRSection():New                                                         |
	//|ExpO1 : Objeto TReport que a secao pertence                             |
	//|ExpC2 : Descricao da seçao                                              |
	//|ExpA3 : Array com as tabelas utilizadas pela secao. A primeira tabela   |
	//|        sera considerada como principal para a seção.                   |
	//|ExpA4 : Array com as Ordens do relatório                                |
	//|ExpL5 : Carrega campos do SX3 como celulas                              |
	//|        Default : False                                                 |
	//|ExpL6 : Carrega ordens do Sindex                                        |
	//|        Default : False                                                 |
	//|                                                                        |
	//--------------------------------------------------------------------------
	//--------------------------------------------------------------------------
	//|Criacao da celulas da secao do relatorio                                |
	//|                                                                        |
	//|TRCell():New                                                            |
	//|ExpO1 : Objeto TSection que a secao pertence                            |
	//|ExpC2 : Nome da celula do relatório. O SX3 será consultado              |
	//|ExpC3 : Nome da tabela de referencia da celula                          |
	//|ExpC4 : Titulo da celula                                                |
	//|        Default : X3Titulo()                                            |
	//|ExpC5 : Picture                                                         |
	//|        Default : X3_PICTURE                                            |
	//|ExpC6 : Tamanho                                                         |
	//|        Default : X3_TAMANHO                                            |
	//|ExpL7 : Informe se o tamanho esta em pixel                              |
	//|        Default : False                                                 |
	//|ExpB8 : Bloco de código para impressao.                                 |
	//|        Default : ExpC2                                                 |
	//|                                                                        |
	//--------------------------------------------------------------------------

	// Zera todas as secoes anteriores
	oReport:aSection := {}

	// Define as secoes do objeto oReport
	MNTR840SEC()

Return oReport
//------------------------------------------------------------------------------
/*/{Protheus.doc} ReportPrint
Chamada do Relatório
@author Wagner S. de Lacerda
@since 07/07/2010
@version undefined
@param oReport, object
@type function
/*/
//------------------------------------------------------------------------------
Static Function ReportPrint(oReport)

	Local cCodBem   := ""
	Local cCodAux   := ""
	Local cOrdem    := ""
	Local cPlano    := ""
	Local cMemo     := ""
	Local cCodFrota := ""
	Local nLinMem   := 0
	Local nCont     := 0
	Local lPrima
	Local aArea := {},	 aAreaF := {}

	// Cria Arquivos Temporarios
	Processa({|| MNTR840TRB(.T.) })
	If lGFrota .And. MV_PAR18 == 1 //Considera Custos de Abastecimentos
		Processa({|| fProcAbast()}, STR0089) //"Processando Abastecimentos..."
	EndIf

	//----------------------------------------------------------------------------
	//| Inicio da Impressao                                                      |
	//----------------------------------------------------------------------------

	nTOTR := 0.00
	nTOTP := 0.00
	nX    := 1
	dbSelectArea(cTRB)
	dbSetOrder(1)
	dbGotop()
	If (cTRB)->(RecCount()) = 0
		If !( lGFrota .And. MV_PAR18 == 1 ) .Or. (cTRBAbast)->(RecCount()) = 0 //Tabela temporária de abastecimentos.
			// Apaga arquivos temporarios
			MNTR840APG()
			Return
		Else
			dbSelectArea(cTRBAbast)
			dbSetOrder(1)
			dbGotop()
			While (cTRBAbast)->(!Eof())
				If cCodFrota <> (cTRBAbast)->FROTA
					fCustAbast( (cTRBAbast)->FROTA , .T. )
					cCodFrota := (cTRBAbast)->FROTA
				EndIf
				(cTRBAbast)->(dbSkip())
			End
		EndIf
	EndIf
	oReport:SetMeter(RecCount())

	lPrima := .F.
	//***********SE PARAMETRO Apresentação ? = Nivel Insumo
	If MV_PAR15 = 1

		//***********SE PARAMETRO CONSIDERA ESTRUTURA = SIM
		If MV_PAR16 = 2

			While !EoF()
				oReport:IncMeter()

				nBEMPRE := 0.00
				nBEMREA := 0.00

				nCBEMPAIP := 0.00 //VARIAVEIS DO BEM PAI TOTAL GERAL
				nCBEMPAIR := 0.00

				If cCodAux <> (cTRB)->CODBEM
					If lPrima
						oSection1:SetPageBreak(.T.)
						oSection1:PageBreak()
					Else
						lPrima := .T.
					EndIf
					// Totalizador do Bem Pai
					oSection8:Init()
					// Totalizador Geral
					oSection9:Init()
					// Bem
					oSection1:Init()
					oSection1:PrintLine()
				EndIf

				cCodBemPai := (cTRB)->CODBEM
				cCodAux := cCodBemPai
				aArea := GetArea()

				While !EoF() .And. (cTRB)->CODBEM == cCodBemPai
					oReport:IncMeter()

					// O.S.
					oSection2:Init()
					cOrdem := (cTRB)->ORDEM
					cPlano := (cTRB)->PLANO
					If !Empty((cTRB)->OBS)
						cMemo   := (cTRB)->OBS
						nLinMem := MLCount(cMemo,60)
						For nCont:= 1 To nLinMem
							nX := nCont
							If nCont <> 1
								oSection2:Cell("(cTRB)->ORDEM"):Hide()
								oSection2:Cell("ST4->T4_NOME"):Hide()
								oSection2:Cell("DTOC((cTRB)->ORIGI)" ):Hide()
							EndIf
							oSection2:PrintLine()
						Next nCont
						oSection2:Cell("(cTRB)->ORDEM"):Show()
						oSection2:Cell("ST4->T4_NOME"):Show()
						oSection2:Cell("DTOC((cTRB)->ORIGI)" ):Show()
					Else
						oSection2:PrintLine()
					Endif

					nORDPRE := 0.00
					nORDREA := 0.00

					// Insumo
					oSection3:Init()
					If dbSeek(cCodBemPai+cOrdem)
						While !EoF() .And. (cTRB)->CODBEM == cCodBemPai  .And. (cTRB)->ORDEM  == cOrdem

							nDIF := (cTRB)->VALORREA - (cTRB)->VALORPRE

							If (cTRB)->VALORPRE > (cTRB)->VALORREA
								nPER := -( Round( 100 - ( ( (cTRB)->VALORREA * 100 ) / (cTRB)->VALORPRE ), 2 ) )
							ElseIf (cTRB)->VALORPRE < (cTRB)->VALORREA
								nPER := Round( 100 - ( (cTRB)->VALORPRE * 100 ) / (cTRB)->VALORREA, 2 )
							Else
								nPER := 0
							EndIf

							oSection3:PrintLine()

							nORDPRE += (cTRB)->VALORPRE
							nORDREA += (cTRB)->VALORREA

							dbSelectArea(cTRB)
							aArea := GetArea()
							dbSkip()
						End
					EndIf
					oSection3:Finish()

					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						If (cTRB2)->( dbSeek(cOrdem + cPlano) )
							// Custo Hora Parada Bem
							oSection4:Init()
							oSection4:PrintLine()
							oSection4:Finish()

							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA
						Endif
					Endif

					nDIF := nORDREA - nORDPRE

					If nORDPRE > nORDREA
						nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
					ElseIf nORDPRE < nORDREA
						nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
					Else
						nPER := 0
					EndIf

					RestArea(aArea)

					nBEMPRE += nORDPRE
					nBEMREA += nORDREA

					// Total da O.S.
					oSection2:Finish()

					dbSelectArea(cTRB)
					dbSkip()
				End

				If (cTRB)->CODBEM <> cCodBemPai

					fCustAbast(cCodBemPai) //Custos de Abastecimento

					RestArea(aArea)

					nDIF := nBEMREA - nBEMPRE

					If nBEMPRE > nBEMREA
						nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
					ElseIf nBEMPRE < nBEMREA
						nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
					Else
						nPER := 0
					EndIf

					nDif1 := nDif
					nPer1 := nPer
					// Total do Bem Pai
					oSection1:Finish()

					nCBEMPAIP := nCBEMPAIP + nBEMPRE
					nCBEMPAIR := nCBEMPAIR + nBEMREA
				EndIf

				dbSelectArea(cTRB3)
				If dbSeek(cCodBemPai)
					While !EoF() .And. (cTRB3)->BEMPAI == cCodBemPai
						oReport:IncMeter()

						cBEMFILHO := (cTRB3)->CODBEM
						nBEMFPRE  := 0.00
						nBEMFREA  := 0.00

						// Bem Filho
						oSection5:Init()
						oSection5:PrintLine()

						aAreaF := GetArea()

						While !EoF() .And. (cTRB3)->BEMPAI == cCodBemPai .And. (cTRB3)->CODBEM == cBEMFILHO
							oReport:IncMeter()

							// O.S.
							oSection6:Init()
							cOrdem  := (cTRB3)->ORDEM
							cPlano  := (cTRB3)->PLANO
							If !Empty((cTRB3)->OBS)
								cMemo   := (cTRB3)->OBS
								nLinMem := MLCount(cMemo,60)
								For nCont:= 1 To nLinMem
									nX := nCont
									If nCont <> 1
										oSection6:Cell("(cTRB3)->ORDEM"):Hide()
										oSection6:Cell("ST4->T4_NOME"):Hide()
										oSection6:Cell("DTOC((cTRB3)->ORIGI)" ):Hide()
									EndIf
									oSection6:PrintLine()
								Next nCont
								oSection6:Cell("(cTRB3)->ORDEM"):Show()
								oSection6:Cell("ST4->T4_NOME"):Show()
								oSection6:Cell("DTOC((cTRB3)->ORIGI)" ):Show()
							Else
								oSection6:PrintLine()
							Endif

							nORDPRE := 0.00
							nORDREA := 0.00

							oSection7:Init()
							While !EoF() .And. (cTRB3)->BEMPAI == cCodBemPai .And. (cTRB3)->CODBEM == cBEMFILHO .And. (cTRB3)->ORDEM  == cOrdem

								nDIF := (cTRB3)->VALORREA - (cTRB3)->VALORPRE

								If (cTRB3)->VALORPRE > (cTRB3)->VALORREA
									nPER := -( Round( 100 - ( ( (cTRB3)->VALORREA * 100 ) / (cTRB3)->VALORPRE ), 2 ) )
								ElseIf (cTRB3)->VALORPRE < (cTRB3)->VALORREA
									nPER := Round( 100 - ( (cTRB3)->VALORPRE * 100 ) / (cTRB3)->VALORREA, 2 )
								Else
									nPER := 0
								EndIf

								oSection7:PrintLine()

								nORDPRE += (cTRB3)->VALORPRE
								nORDREA += (cTRB3)->VALORREA

								dbSelectArea(cTRB3)
								aAreaF := GetArea()
								dbSkip()
							End
							oSection7:Finish()

							If MV_PAR12 == 2
								dbSelectArea(cTRB2)
								If (cTRB2)->( dbSeek(cOrdem + cPlano) )
									// Custo Hora Parada Bem
									oSection4:Init()
									oSection4:PrintLine()
									oSection4:Finish()

									nORDPRE += (cTRB2)->VALORPRE
									nORDREA += (cTRB2)->VALORREA
								Endif
							Endif

							nDIF := nORDREA - nORDPRE

							If nORDPRE > nORDREA
								nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
							ElseIf nORDPRE < nORDREA
								nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
							Else
								nPER := 0
							EndIf

							RestArea(aAreaF)

							nBEMFPRE += nORDPRE
							nBEMFREA += nORDREA

							// Total da O.S.
							oSection6:Finish()

							dbSelectArea(cTRB3)
							dbSkip()
						End

						RestArea(aAreaF)

						nDIF := nBEMFREA - nBEMFPRE

						If nBEMFPRE > nBEMFREA
							nPER := -( Round( 100 - ( ( nBEMFREA * 100 ) / nBEMFPRE ), 2 ) )
						ElseIf nBEMFPRE < nBEMFREA
							nPER := Round( 100 - ( nBEMFPRE * 100 ) / nBEMFREA, 2 )
						Else
							nPER := 0
						EndIf

						nDif2 := nDif
						nPer2 := nPer
						// Total do Bem Filho
						oSection5:Finish()

						nCBEMPAIP += nBEMFPRE //SOMA O CUSTO DO BEM PAI
						nCBEMPAIR += nBEMFREA

						dbSelectArea(cTRB3)
						dbSkip()
					End

				EndIf

				nDIF := nCBEMPAIR - nCBEMPAIP

				If nCBEMPAIP > nCBEMPAIR
					nPER := -( Round( 100 - ( ( nCBEMPAIR * 100 ) / nCBEMPAIP ), 2 ) )
				ElseIf nCBEMPAIP < nCBEMPAIR
					nPER := Round( 100 - ( nCBEMPAIP * 100 ) / nCBEMPAIR, 2 )
				Else
					nPER := 0
				EndIf

				nDIF3 := nDif
				nPer3 := nPer
				// Total Geral do Bem Pai
				oSection8:Finish()

				nTOTR := nTOTR + nCBEMPAIR
				nTOTP := nTOTP + nCBEMPAIP

				dbSelectArea(cTRB)
				dbSkip()
			End

			If nTOTP > 0 .or. nTOTR > 0

				nDIF4 := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER4 := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER4 := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER4 := 0
				EndIf

				// Total Geral
				//Necessario testar o limite de impressão para nao dar estouro de 128k chamado TPRJJP
				If oreport:NXLSROW > 95
					oReport:EndPage()
					oReport:StartPage()
				EndIf
				oSection9:Finish()
			Endif

			//***********SE PARAMETRO CONSIDERA ESTRUTURA = NAO
		Else

			While !EoF()
				oReport:IncMeter()

				nBEMPRE := 0.00
				nBEMREA := 0.00

				If cCodAux <> (cTRB)->CODBEM
					If lPrima
						oSection1:SetPageBreak(.T.)
						oSection1:PageBreak()
					Else
						lPrima := .T.
					EndIf
					// Totalizador Geral
					oSection5:Init()
					// Bem
					oSection1:Init()
					oSection1:PrintLine()
				EndIf

				cCodBem := (cTRB)->CODBEM
				cCodAux := cCodBem
				aArea := GetArea()

				While cCodBem == (cTRB)->CODBEM
					oReport:IncMeter()

					// O.S.
					oSection2:Init()
					cOrdem := (cTRB)->ORDEM
					cPlano := (cTRB)->PLANO
					If !Empty((cTRB)->OBS)
						cMemo   := (cTRB)->OBS
						nLinMem := MLCount(cMemo,60)
						For nCont:= 1 To nLinMem
							nX := nCont
							If nCont <> 1
								oSection2:Cell("(cTRB)->ORDEM"):Hide()
								oSection2:Cell("ST4->T4_NOME"):Hide()
								oSection2:Cell("DTOC((cTRB)->ORIGI)" ):Hide()
							EndIf
							oSection2:PrintLine()
						Next nCont
						oSection2:Cell("(cTRB)->ORDEM"):Show()
						oSection2:Cell("ST4->T4_NOME"):Show()
						oSection2:Cell("DTOC((cTRB)->ORIGI)" ):Show()
					Else
						oSection2:PrintLine()
					Endif

					nORDPRE := 0.00
					nORDREA := 0.00

					// Insumo
					oSection3:Init()
					If dbSeek(cCodBem+cOrdem)
						While !EoF() .And. (cTRB)->CODBEM == cCodBem  .And. (cTRB)->ORDEM  == cOrdem

							nDIF := (cTRB)->VALORREA - (cTRB)->VALORPRE

							If (cTRB)->VALORPRE > (cTRB)->VALORREA
								nPER := -( Round( 100 - ( ( (cTRB)->VALORREA * 100 ) / (cTRB)->VALORPRE ), 2 ) )
							ElseIf (cTRB)->VALORPRE < (cTRB)->VALORREA
								nPER := Round( 100 - ( (cTRB)->VALORPRE * 100 ) / (cTRB)->VALORREA, 2 )
							Else
								nPER := 0
							EndIf

							oSection3:PrintLine()

							nORDPRE += (cTRB)->VALORPRE
							nORDREA += (cTRB)->VALORREA

							dbSelectArea(cTRB)
							aArea := GetArea()
							dbSkip()
						End
					EndIf

					oSection3:Finish()

					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						If (cTRB2)->( dbSeek(cOrdem + cPlano) )
							// Custo Hora Parada Bem
							oSection4:Init()
							oSection4:PrintLine()
							oSection4:Finish()

							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA
						Endif
					Endif

					nDIF := nORDREA - nORDPRE

					If nORDPRE > nORDREA
						nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
					ElseIf nORDPRE < nORDREA
						nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
					Else
						nPER := 0
					EndIf

					RestArea(aArea)

					nBEMPRE += nORDPRE
					nBEMREA += nORDREA

					// Total da O.S.
					oSection2:Finish()

					dbSelectArea(cTRB)
					dbSkip()
				End

				If (cTRB)->CODBEM <> cCodBem

					fCustAbast(cCodBem) //Custos de Abastecimento

					RestArea(aArea)

					nDIF1 := nBEMREA - nBEMPRE

					If nBEMPRE > nBEMREA
						nPER1 := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
					ElseIf nBEMPRE < nBEMREA
						nPER1 := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
					Else
						nPER1 := 0
					EndIf


					// Total do Bem
					oSection1:Finish()

					nTOTR := nTOTR + nBEMREA
					nTOTP := nTOTP + nBEMPRE

				EndIf

				dbSelectArea(cTRB)
				dbSkip()
			End

			If nTOTP > 0 .or. nTOTR > 0
				nDIF2 := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER2 := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER2 := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER2 := 0
				EndIf

				oSection5:Finish()
			Endif

		EndIf

		//***********SE PARAMETRO Apresentação ? = Nível Bem
	ElseIf MV_PAR15 = 2
		If MV_PAR16 = 2

			While !EoF()
				oReport:IncMeter()

				nBEMPRE := 0.00
				nBEMREA := 0.00

				nCBEMPAIP := 0.00 //VARIAVEIS DO BEM PAI TOTAL GERAL
				nCBEMPAIR := 0.00

				If cCodAux <> (cTRB)->CODBEM
					If lPrima
						oSection1:SetPageBreak(.T.)
						oSection1:PageBreak()
					Else
						lPrima := .T.
					EndIf
					// Totalizador do Bem Pai
					oSection4:Init()
					// Totalizador Geral
					oSection3:Init()
					// Bem
					oSection1:Init()
				EndIf

				cCodBemPai := (cTRB)->CODBEM
				cCodAux := cCodBemPai
				aArea := GetArea()

				While !EoF() .And. (cTRB)->CODBEM == cCodBemPai
					oReport:IncMeter()

					cOrdem := (cTRB)->ORDEM
					cPlano := (cTRB)->PLANO
					nORDPRE := 0.00
					nORDREA := 0.00

					If dbSeek(cCodBemPai+cOrdem)
						While !EoF() .And. (cTRB)->CODBEM == cCodBemPai  .And. (cTRB)->ORDEM  == cOrdem

							nDIF := (cTRB)->VALORREA - (cTRB)->VALORPRE

							If (cTRB)->VALORPRE > (cTRB)->VALORREA
								nPER := -( Round( 100 - ( ( (cTRB)->VALORREA * 100 ) / (cTRB)->VALORPRE ), 2 ) )
							ElseIf (cTRB)->VALORPRE < (cTRB)->VALORREA
								nPER := Round( 100 - ( (cTRB)->VALORPRE * 100 ) / (cTRB)->VALORREA, 2 )
							Else
								nPER := 0
							EndIf

							nORDPRE += (cTRB)->VALORPRE
							nORDREA += (cTRB)->VALORREA

							dbSelectArea(cTRB)
							aArea := GetArea()
							dbSkip()
						End
					EndIf

					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						If (cTRB2)->( dbSeek(cOrdem + cPlano) )
							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA
						Endif
					Endif

					nDIF := nORDREA - nORDPRE

					If nORDPRE > nORDREA
						nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
					ElseIf nORDPRE < nORDREA
						nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
					Else
						nPER := 0
					EndIf

					RestArea(aArea)

					nBEMPRE += nORDPRE
					nBEMREA += nORDREA

					dbSelectArea(cTRB)
					dbSkip()
				End

				If (cTRB)->CODBEM <> cCodBemPai
					RestArea(aArea)

					nDIF := nBEMREA - nBEMPRE

					If nBEMPRE > nBEMREA
						nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
					ElseIf nBEMPRE < nBEMREA
						nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
					Else
						nPER := 0
					EndIf

					oSection1:PrintLine()

					fCustAbast(cCodBemPai) //Custos de Abastecimento

					oSection1:Finish()

					nCBEMPAIP := nCBEMPAIP + nBEMPRE
					nCBEMPAIR := nCBEMPAIR + nBEMREA
				EndIf

				dbSelectArea(cTRB3)
				If dbSeek(cCodBemPai)
					While !EoF() .And. (cTRB3)->BEMPAI == cCodBemPai
						oReport:IncMeter()

						cBEMFILHO := (cTRB3)->CODBEM
						nBEMFPRE  := 0.00
						nBEMFREA  := 0.00

						// Bem Filho
						oSection2:Init()

						aAreaF := GetArea()

						While !EoF() .And. (cTRB3)->BEMPAI == cCodBemPai .And. (cTRB3)->CODBEM == cBEMFILHO
							oReport:IncMeter()

							cOrdem  := (cTRB3)->ORDEM
							cPlano  := (cTRB3)->PLANO
							nORDPRE := 0.00
							nORDREA := 0.00

							While !EoF() .And. (cTRB3)->BEMPAI == cCodBemPai .And. (cTRB3)->CODBEM == cBEMFILHO .And. (cTRB3)->ORDEM  == cOrdem

								nDIF := (cTRB3)->VALORREA - (cTRB3)->VALORPRE

								If (cTRB3)->VALORPRE > (cTRB3)->VALORREA
									nPER := -( Round( 100 - ( ( (cTRB3)->VALORREA * 100 ) / (cTRB3)->VALORPRE ), 2 ) )
								ElseIf (cTRB3)->VALORPRE < (cTRB3)->VALORREA
									nPER := Round( 100 - ( (cTRB3)->VALORPRE * 100 ) / (cTRB3)->VALORREA, 2 )
								Else
									nPER := 0
								EndIf

								nORDPRE += (cTRB3)->VALORPRE
								nORDREA += (cTRB3)->VALORREA

								dbSelectArea(cTRB3)
								aAreaF := GetArea()
								dbSkip()
							End

							If MV_PAR12 == 2
								dbSelectArea(cTRB2)
								If (cTRB2)->( dbSeek(cOrdem + cPlano) )
									nORDPRE += (cTRB2)->VALORPRE
									nORDREA += (cTRB2)->VALORREA
								Endif
							Endif

							nDIF := nORDREA - nORDPRE

							If nORDPRE > nORDREA
								nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
							ElseIf nORDPRE < nORDREA
								nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
							Else
								nPER := 0
							EndIf

							RestArea(aAreaF)

							nBEMFPRE += nORDPRE
							nBEMFREA += nORDREA

							dbSelectArea(cTRB3)
							dbSkip()
						End

						RestArea(aAreaF)

						nDIF := nBEMFREA - nBEMFPRE

						If nBEMFPRE > nBEMFREA
							nPER := -( Round( 100 - ( ( nBEMFREA * 100 ) / nBEMFPRE ), 2 ) )
						ElseIf nBEMFPRE < nBEMFREA
							nPER := Round( 100 - ( nBEMFPRE * 100 ) / nBEMFREA, 2 )
						Else
							nPER := 0
						EndIf

						oSection2:PrintLine()
						oSection2:Finish()

						nCBEMPAIP += nBEMFPRE //SOMA O CUSTO DO BEM PAI
						nCBEMPAIR += nBEMFREA

						dbSelectArea(cTRB3)
						dbSkip()
					End

				EndIf

				nDIF := nCBEMPAIR - nCBEMPAIP

				If nCBEMPAIP > nCBEMPAIR
					nPER := -( Round( 100 - ( ( nCBEMPAIR * 100 ) / nCBEMPAIP ), 2 ) )
				ElseIf nCBEMPAIP < nCBEMPAIR
					nPER := Round( 100 - ( nCBEMPAIP * 100 ) / nCBEMPAIR, 2 )
				Else
					nPER := 0
				EndIf

				// Total do Bem
				oSection3:Finish()

				nTOTR := nTOTR + nCBEMPAIR
				nTOTP := nTOTP + nCBEMPAIP

				dbSelectArea(cTRB)
				dbSkip()
			End

			If nTOTP > 0 .or. nTOTR > 0
				nDIF1 := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER1 := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER1 := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER1 := 0
				EndIf

				// Total Geral
				oSection4:Finish()
			Endif

			//***********SE PARAMETRO CONSIDERA ESTRUTURA = NAO
		Else

			While !EoF()
				oReport:IncMeter()

				nBEMPRE := 0.00
				nBEMREA := 0.00

				If !lPrima
					// Totalizador Geral
					oSection2:Init()
					lPrima := .T.
				EndIf

				cCodBem := (cTRB)->CODBEM
				cCodAux := cCodBem
				aArea := GetArea()

				While cCodBem == (cTRB)->CODBEM
					oReport:IncMeter()

					cOrdem := (cTRB)->ORDEM
					cPlano := (cTRB)->PLANO
					nORDPRE := 0.00
					nORDREA := 0.00

					If dbSeek(cCodBem+cOrdem)
						While !EoF() .And. (cTRB)->CODBEM == cCodBem  .And. (cTRB)->ORDEM  == cOrdem

							nDIF := (cTRB)->VALORREA - (cTRB)->VALORPRE

							If (cTRB)->VALORPRE > (cTRB)->VALORREA
								nPER := -( Round( 100 - ( ( (cTRB)->VALORREA * 100 ) / (cTRB)->VALORPRE ), 2 ) )
							ElseIf (cTRB)->VALORPRE < (cTRB)->VALORREA
								nPER := Round( 100 - ( (cTRB)->VALORPRE * 100 ) / (cTRB)->VALORREA, 2 )
							Else
								nPER := 0
							EndIf

							nORDPRE += (cTRB)->VALORPRE
							nORDREA += (cTRB)->VALORREA

							dbSelectArea(cTRB)
							aArea := GetArea()
							dbSkip()
						End
					EndIf

					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						If (cTRB2)->( dbSeek(cOrdem + cPlano) )
							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA
						Endif
					Endif

					nDIF := nORDREA - nORDPRE

					If nORDPRE > nORDREA
						nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
					ElseIf nORDPRE < nORDREA
						nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
					Else
						nPER := 0
					EndIf

					RestArea(aArea)

					nBEMPRE += nORDPRE
					nBEMREA += nORDREA

					dbSelectArea(cTRB)
					dbSkip()
				End

				If (cTRB)->CODBEM <> cCodBem
					RestArea(aArea)

					nDIF := nBEMREA - nBEMPRE

					If nBEMPRE > nBEMREA
						nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
					ElseIf nBEMPRE < nBEMREA
						nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
					Else
						nPER := 0
					EndIf

					// Bem
					oSection1:Init()

					oSection1:PrintLine()

					fCustAbast(cCodBem) //Custos de Abastecimento

					oSection1:Finish()

					nTOTR := nTOTR + nBEMREA
					nTOTP := nTOTP + nBEMPRE
				EndIf

				dbSelectArea(cTRB)
				dbSkip()
			End

			oSection1:Finish()

			If nTOTP > 0 .or. nTOTR > 0
				nDIF := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER := 0
				EndIf

				// Total Geral
				oSection2:Finish()
			Endif

		EndIf
		//***********SE PARAMETRO Apresentação ? = Nivel O.S
	Else
		//***********SE PARAMETRO CONSIDERA ESTRUTURA = SIM
		If MV_PAR16 = 2

			While !EoF()
				oReport:IncMeter()

				nBEMPRE := 0.00
				nBEMREA := 0.00

				nCBEMPAIP := 0.00 //VARIAVEIS DO BEM PAI TOTAL GERAL
				nCBEMPAIR := 0.00

				If cCodAux <> (cTRB)->CODBEM
					If lPrima
						oSection1:SetPageBreak(.T.)
						oSection1:PageBreak()
					Else
						lPrima := .T.
					EndIf
					// Totalizador do Bem Pai
					oSection8:Init()
					// Totalizador Geral
					oSection9:Init()
					// Bem
					oSection1:Init()
					oSection1:PrintLine()
				EndIf

				cCodBemPai := (cTRB)->CODBEM
				cCodAux := cCodBemPai
				aArea := GetArea()

				While !EoF() .And. (cTRB)->CODBEM == cCodBemPai
					oReport:IncMeter()
					// Insumo

					aAreaTrb := (cTRB)->(GetArea())

					nORDPRE := 0.00
					nORDREA := 0.00

					cOrdem := (cTRB)->ORDEM
					cPlano := (cTRB)->PLANO

					While !EoF() .And. (cTRB)->CODBEM == cCodBemPai  .And. (cTRB)->ORDEM  == cOrdem
						nORDPRE += (cTRB)->VALORPRE
						nORDREA += (cTRB)->VALORREA

						nDif :=   nORDREA - nORDPRE

						If nORDPRE > nORDREA
							nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
						ElseIf nORDPRE < nORDREA
							nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
						Else
							nPER := 0
						EndIf

						dbSelectArea(cTRB)
						aArea := GetArea()
						dbSkip()
					End

					RestArea(aAreaTrb)

					// O.S.
					oSection2:Init()

					If !Empty((cTRB)->OBS)
						cMemo   := (cTRB)->OBS
						nLinMem := MLCount(cMemo,60)
						For nCont:= 1 To nLinMem
							nX := nCont
							If nCont <> 1
								oSection2:Cell("(cTRB)->ORDEM"):Hide()
								oSection2:Cell("ST4->T4_NOME"):Hide()
								oSection2:Cell("DTOC((cTRB)->ORIGI)" ):Hide()
							EndIf
							oSection2:PrintLine()
						Next nCont
						oSection2:Cell("(cTRB)->ORDEM"):Show()
						oSection2:Cell("ST4->T4_NOME"):Show()
						oSection2:Cell("DTOC((cTRB)->ORIGI)" ):Show()
					Else
						oSection2:PrintLine()
					Endif

					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						If (cTRB2)->( dbSeek(cOrdem + cPlano) )
							// Custo Hora Parada Bem
							oSection4:Init()
							oSection4:PrintLine()
							oSection4:Finish()

							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA

							nDIF := nORDREA - nORDPRE

							If nORDPRE > nORDREA
								nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
							ElseIf nORDPRE < nORDREA
								nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
							Else
								nPER := 0
							EndIf

						Endif
					Endif

					RestArea(aArea)

					nBEMPRE += nORDPRE
					nBEMREA += nORDREA

					nDIF := nBEMREA - nBEMPRE

					If nBEMPRE > nBEMREA
						nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
					ElseIf nBEMPRE < nBEMREA
						nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
					Else
						nPER := 0
					EndIf

					// Total da O.S.
					oSection2:Finish()

					dbSelectArea(cTRB)
					dbSkip()
				End

				If (cTRB)->CODBEM <> cCodBemPai

					fCustAbast(cCodBemPai) //Custos de Abastecimento

					RestArea(aArea)

					nDIF := nBEMREA - nBEMPRE

					If nBEMPRE > nBEMREA
						nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
					ElseIf nBEMPRE < nBEMREA
						nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
					Else
						nPER := 0
					EndIf

					// Total do Bem Pai
					oSection1:Finish()

					nCBEMPAIP := nCBEMPAIP + nBEMPRE
					nCBEMPAIR := nCBEMPAIR + nBEMREA
				EndIf

				dbSelectArea(cTRB3)
				If dbSeek(cCodBemPai)
					While !EoF() .And. (cTRB3)->BEMPAI == cCodBemPai
						oReport:IncMeter()

						cBEMFILHO := (cTRB3)->CODBEM
						nBEMFPRE  := 0.00
						nBEMFREA  := 0.00

						// Bem Filho
						oSection5:Init()
						oSection5:PrintLine()

						aAreaF := GetArea()

						While !EoF() .And. (cTRB3)->BEMPAI == cCodBemPai .And. (cTRB3)->CODBEM == cBEMFILHO
							oReport:IncMeter()

							//Insumo
							aAreaTrb2 := (cTRB)->(GetArea())
							nORDPRE := 0.00
							nORDREA := 0.00

							cOrdem  := (cTRB3)->ORDEM
							cPlano  := (cTRB3)->PLANO
							While !EoF() .And. (cTRB3)->BEMPAI == cCodBemPai .And. (cTRB3)->CODBEM == cBEMFILHO .And. (cTRB3)->ORDEM  == cOrdem

								nORDPRE += (cTRB3)->VALORPRE
								nORDREA += (cTRB3)->VALORREA

								nDIF := nORDREA - nORDPRE

								If nORDPRE > nORDREA
									nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
								ElseIf nORDPRE < nORDREA
									nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
								Else
									nPER := 0
								EndIf

								dbSelectArea(cTRB3)
								aAreaF := GetArea()
								dbSkip()
							End

							RestArea(aAreaTrb2)

							// O.S.
							oSection6:Init()

							If !Empty((cTRB3)->OBS)
								cMemo   := (cTRB3)->OBS
								nLinMem := MLCount(cMemo,60)
								For nCont:= 1 To nLinMem
									nX := nCont
									If nCont <> 1
										oSection6:Cell("(cTRB3)->ORDEM"):Hide()
										oSection6:Cell("ST4->T4_NOME"):Hide()
										oSection6:Cell("DTOC((cTRB3)->ORIGI)" ):Hide()
									EndIf
									oSection6:PrintLine()
								Next nCont
								oSection6:Cell("(cTRB3)->ORDEM"):Show()
								oSection6:Cell("ST4->T4_NOME"):Show()
								oSection6:Cell("DTOC((cTRB3)->ORIGI)" ):Show()
							Else
								oSection6:PrintLine()
							Endif

							If MV_PAR12 == 2
								dbSelectArea(cTRB2)
								If (cTRB2)->( dbSeek(cOrdem + cPlano) )
									// Custo Hora Parada Bem
									oSection4:Init()
									oSection4:PrintLine()
									oSection4:Finish()

									nORDPRE += (cTRB2)->VALORPRE
									nORDREA += (cTRB2)->VALORREA

									nDIF := nORDREA - nORDPRE

									If nORDPRE > nORDREA
										nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
									ElseIf nORDPRE < nORDREA
										nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
									Else
										nPER := 0
									EndIf

								Endif
							Endif

							RestArea(aAreaF)

							nBEMFPRE += nORDPRE
							nBEMFREA += nORDREA

							nDIF := nBEMFREA - nBEMFPRE

							If nBEMFPRE > nBEMFREA
								nPER := -( Round( 100 - ( ( nBEMFREA * 100 ) / nBEMFPRE ), 2 ) )
							ElseIf nBEMFPRE < nBEMFREA
								nPER := Round( 100 - ( nBEMFPRE * 100 ) / nBEMFREA, 2 )
							Else
								nPER := 0
							EndIf

							// Total da O.S.
							oSection6:Finish()

							dbSelectArea(cTRB3)
							dbSkip()
						End

						RestArea(aAreaF)

						// Total do Bem Filho
						oSection5:Finish()

						nCBEMPAIP += nBEMFPRE //SOMA O CUSTO DO BEM PAI
						nCBEMPAIR += nBEMFREA

						nDIF := nCBEMPAIR - nCBEMPAIP

						If nCBEMPAIP > nCBEMPAIR
							nPER := -( Round( 100 - ( ( nCBEMPAIR * 100 ) / nCBEMPAIP ), 2 ) )
						ElseIf nCBEMPAIP < nCBEMPAIR
							nPER := Round( 100 - ( nCBEMPAIP * 100 ) / nCBEMPAIR, 2 )
						Else
							nPER := 0
						EndIf

						dbSelectArea(cTRB3)
						dbSkip()
					End

				EndIf
				nDif1:= nDif
				nPer1 := nPer
				// Total Geral do Bem Pai
				oSection8:Finish()

				nTOTR := nTOTR + nCBEMPAIR
				nTOTP := nTOTP + nCBEMPAIP


				dbSelectArea(cTRB)
				dbSkip()
			End

			If nTOTP > 0 .or. nTOTR > 0

				nDIF2 := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER2 := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER2 := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER2 := 0
				EndIf

				// Total Geral
				oSection9:Finish()
			Endif


			//***********SE PARAMETRO CONSIDERA ESTRUTURA = NAO
		Else

			While !EoF()
				oReport:IncMeter()

				nBEMPRE := 0.00
				nBEMREA := 0.00

				If cCodAux <> (cTRB)->CODBEM
					If lPrima
						oSection1:SetPageBreak(.T.)
						oSection1:PageBreak()
					Else
						lPrima := .T.
					EndIf
					// Totalizador Geral
					oSection5:Init()
					// Bem
					oSection1:Init()
					oSection1:PrintLine()
				EndIf

				cCodBem := (cTRB)->CODBEM
				cCodAux := cCodBem
				aArea := GetArea()

				While cCodBem == (cTRB)->CODBEM
					oReport:IncMeter()

					aAreaTrb := (cTRB)->(GetArea())
					nORDPRE := 0.00
					nORDREA := 0.00
					cOrdem := (cTRB)->ORDEM
					cPlano := (cTRB)->PLANO

					While !EoF() .And. (cTRB)->CODBEM == cCodBem  .And. (cTRB)->ORDEM  == cOrdem

						nORDPRE += (cTRB)->VALORPRE
						nORDREA += (cTRB)->VALORREA

						nDIF := nORDREA - nORDPRE

						If nORDPRE > nORDREA
							nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
						ElseIf nORDPRE < nORDREA
							nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
						Else
							nPER := 0
						EndIf

						dbSelectArea(cTRB)
						aArea := GetArea()
						dbSkip()
					End

					RestArea(aAreaTrb)

					// O.S.
					oSection2:Init()

					If !Empty((cTRB)->OBS)
						cMemo   := (cTRB)->OBS
						nLinMem := MLCount(cMemo,60)
						For nCont:= 1 To nLinMem
							nX := nCont
							If nCont <> 1
								oSection2:Cell("(cTRB)->ORDEM"):Hide()
								oSection2:Cell("ST4->T4_NOME"):Hide()
								oSection2:Cell("DTOC((cTRB)->ORIGI)" ):Hide()
							EndIf
							oSection2:PrintLine()
						Next nCont
						oSection2:Cell("(cTRB)->ORDEM"):Show()
						oSection2:Cell("ST4->T4_NOME"):Show()
						oSection2:Cell("DTOC((cTRB)->ORIGI)" ):Show()
					Else
						oSection2:PrintLine()
					Endif

					RestArea(aArea)


					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						If (cTRB2)->( dbSeek(cOrdem + cPlano) )
							// Custo Hora Parada Bem
							oSection4:Init()
							oSection4:PrintLine()
							oSection4:Finish()

							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA
						Endif
					Endif

					nDIF := nORDREA - nORDPRE

					If nORDPRE > nORDREA
						nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
					ElseIf nORDPRE < nORDREA
						nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
					Else
						nPER := 0
					EndIf

					RestArea(aArea)

					nBEMPRE += nORDPRE
					nBEMREA += nORDREA

					// Total da O.S.
					oSection2:Finish()

					dbSelectArea(cTRB)
					dbSkip()
				End

				If (cTRB)->CODBEM <> cCodBem

					fCustAbast(cCodBem) //Custos de Abastecimento

					RestArea(aArea)

					nDIF := nBEMREA - nBEMPRE

					If nBEMPRE > nBEMREA
						nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
					ElseIf nBEMPRE < nBEMREA
						nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
					Else
						nPER := 0
					EndIf

					// Total do Bem
					oSection1:Finish()

					nTOTR := nTOTR + nBEMREA
					nTOTP := nTOTP + nBEMPRE
				EndIf

				dbSelectArea(cTRB)
				dbSkip()
			End

			If nTOTP > 0 .or. nTOTR > 0
				nDIF2 := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER2 := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER2 := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER2 := 0
				EndIf

				oSection5:Finish()
			Endif
		EndIf
	EndIf

	// Apaga arquivos temporarios
	MNTR840APG()

Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} R840Imp
 Chamada do Relatório
@author Inacio Luiz Kolling
@since 18/06/99
@version undefined
@param lEnd, logical
@param wnRel
@param titulo
@param tamanho
@type function
/*/
//------------------------------------------------------------------------------
Static Function R840Imp(lEnd,wnRel,titulo,tamanho)

	Local cRodaTxt  := ""
	Local cCodFrota := ""
	Local nCntImpr  := 0
	Local nTamPro   := TamSX3("TL_CODIGO")[1] - 15
	Local nDifQnt   := 0
	Local nDifCus   := 0

	// Devido a possibilidade de alteração no tamanho do campo TL_QUANTID, TL_CUSTO
	// é necessário que seja verificada a picture no dicionário
	Local cPictuQnt  := X3Picture( 'TL_QUANTID' )
	Local cPictuCus  := X3Picture( 'TL_CUSTO' )
	Local lApField   := FwProtectedDataUtil():IsFieldInList('TL_CUSTO')

	Private li := 80 ,m_pag := 1

	nTipo := IIF(aReturn[4] == 1, 15, 18)

	// Caso o tamanho do campo seja menor que 16 (máx), é calculado a diferença de tamanho
	// para ajuste das colunas
	If TamSX3('TL_QUANTID')[1] < 16
		nDifQnt := 18 - TamSX3('TL_QUANTID')[1]
	EndIf
	If TamSX3('TL_CUSTO')[1] < 16
		nDifCus := 19 - TamSX3('TL_CUSTO')[1]
	EndIf

	If (MV_PAR15 == 1) // "Nível Insumo"

		CABEC1 := STR0099+Space(nTamPro)+STR0100//"Tipo Codigo Insumo    "###"Nome Insumo                                        ..............Previsto.............            .............Realizado............."
		CABEC2 := Space(nTamPro)+STR0036 //"                                                                        Quantidade Un.                Custo            Quantidade Un.                Custo            Diferença                   Var. %"

	ElseIf (MV_PAR15 == 3) 	// "Nível OS"

		CABEC1 := Space(nTamPro)+STR0120 //"                                                                                    Custo Prev.          Custo Real.            Diferença                  Var. %"
		CABEC2 := "       "

	Else	//"Nível Bem"

		CABEC1 := STR0037//"Bem              Descrição                                       Custo Previsto      Custo Realizado            Diferença                  Var. %"
		CABEC2 := "       "
	EndIf

	//**************SE MV_PAR16 = NAO E MV_PAR15 = 1
	/*/                                                                                                    1         1         1         1
	1         2         3         4         5         6         7         8         9         0         1         2         3
	012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	_____________________________________________________________________________________________________________________________________
	Tipo Codigo Insumo   Nome Insumo                       ........Previsto.........    ........Realizado........
	Quantidade Un.      Custo    Quantidade Un.      Custo    Diferenca Var.     %
	_____________________________________________________________________________________________________________________________________

	BEM.:xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	*************************************************************************************************************************************

	O.S.:xxxxxx   PLANO.:xxxxxx   SERVICO.:xxxxx   xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   DATA....:28/01/01
	xxxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxx.xxx,x xxx  xxx.xxx,xx   xxxx.xxx,x xxx  xxx.xxx,xx xxxx.xxx,xx xxx.xxx,xx
	xxxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxx.xxx,x xxx  xxx.xxx,xx   xxxx.xxx,x xxx  xxx.xxx,xx xxxx.xxx,xx xxx.xxx,xx
	xxxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxx.xxx,x xxx  xxx.xxx,xx   xxxx.xxx,x xxx  xxx.xxx,xx xxxx.xxx,xx xxx.xxx,xx
	xxxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxx.xxx,x xxx  xxx.xxx,xx   xxxx.xxx,x xxx  xxx.xxx,xx xxxx.xxx,xx xxx.xxx,xx
	***  TOTAL DA O.S                                                  X99.999.999,99               X99.999.999,99 X999.999,99 999.999,99

	***  TOTAL DO BEM                                                  X99.999.999,99               X99.999.999,99 X999.999,99 X99.999,99

	***  TOTAL GERAL                                                   X99.999.999,99               X99.999.999,99 X999.999,99 X99.999,99
	/*/

	//****************SE MV_PAR16 = NAO E MV_PAR15 = 1
	/*/
	1         1         1         1
	1         2         3         4         5         6         7         8         9         0         1         2         3
	012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	_____________________________________________________________________________________________________________________________________
	Tipo Codigo Insumo   Nome Insumo                       ........Previsto.........    ........Realizado........
	Quantidade Un.      Custo    Quantidade Un.      Custo    Diferenca Var.     %
	_____________________________________________________________________________________________________________________________________

	BEM PAI.:xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	*************************************************************************************************************************************

	O.S.:xxxxxx   PLANO.:xxxxxx   SERVICO.:xxxxx   xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   DATA....:28/01/01
	xxxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxx.xxx,x xxx  xxx.xxx,xx   xxxx.xxx,x xxx  xxx.xxx,xx xxxx.xxx,xx xxx.xxx,xx
	xxxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxx.xxx,x xxx  xxx.xxx,xx   xxxx.xxx,x xxx  xxx.xxx,xx xxxx.xxx,xx xxx.xxx,xx

	***  TOTAL DA O.S                                   X99.999.999,9  X99.999.999,99 X99,999.999,9 X99.999.999,99 X999.999,99 999.999,99

	***  TOTAL DO BEM PAI                               X99.999.999,9  X99.999.999,99 X99,999.999,9 X99.999.999,99 X999.999,99 999.999,99

	BEM FILHO.:xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	O.S.:xxxxxx   PLANO.:xxxxxx   SERVICO.:xxxxx   xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   DATA....:28/01/01
	xxxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    xxxx.xxx,x xxx  xxx.xxx,xx   xxxx.xxx,x xxx  xxx.xxx,xx xxxx.xxx,xx xxx.xxx,xx
	***  TOTAL DA O.S                                   X99.999.999,9  X99.999.999,99 X99,999.999,9 X99.999.999,99 X999.999,99 999.999,99

	***  TOTAL DO BEM                                   X99.999.999,9  X99.999.999,99 X99,999.999,9 X99.999.999,99 X999.999,99 999.999,99

	***  TOTAL DO GERAL DO PAI                          X99.999.999,9  X99.999.999,99 X99,999.999,9 X99.999.999,99 X999.999,99 999.999,99

	***  TOTAL DO GERAL                                 X99.999.999,9  X99.999.999,99 X99,999.999,9 X99.999.999,99 X999.999,99 X99.999,99
	*/

	//*********************SE MV_PAR16 = SIM E MV_PAR15 = 2
	/*/
	1         2         3         4         5         6         7         8         9         0         1         2         3
	0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
	*************************************************************************************************************************************
	Bem              Descricao                                 Custo Previsto   Custo Realizado      Diferenca        Var. %
	*************************************************************************************************************************************

	BEM PAI.....:
	xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx      xxx.xxx,xx        xxx.xxx,xx    xxxx.xxx,xx    xxx.xxx,xx

	BENS FILHOS.:
	xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx      xxx.xxx,xx        xxx.xxx,xx    xxxx.xxx,xx    xxx.xxx,xx
	xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx      xxx.xxx,xx        xxx.xxx,xx    xxxx.xxx,xx    xxx.xxx,xx

	*** TOTAL DO BEM PAI                                           X99.999.999,99    X99.999.999,99    X999.999,99    999.999,99

	*** TOTAL DO CENTRO CUSTO                                      X99.999.999,99    X99.999.999,99    X999.999,99    X99.999,99

	*** TOTAL DO RELATORIO                                         X99.999.999,99    X99.999.999,99    X999.999,99    X99.999,99
	/*/
	//*********************SE MV_PAR16 = NAO E MV_PAR15 = 2
	/*/
	1         2         3         4         5         6         7         8         9         0         1         2         3
	0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
	*************************************************************************************************************************************
	Bem              Descricao                                 Custo Previsto   Custo Realizado      Diferenca        Var. %
	*************************************************************************************************************************************

	xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx      xxx.xxx,xx        xxx.xxx,xx    xxxx.xxx,xx    xxx.xxx,xx
	xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx      xxx.xxx,xx        xxx.xxx,xx    xxxx.xxx,xx    xxx.xxx,xx
	xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx      xxx.xxx,xx        xxx.xxx,xx    xxxx.xxx,xx    xxx.xxx,xx

	*** TOTAL DO CENTRO CUSTO                                      X99.999.999,99    X99.999.999,99    X999.999,99    X99.999,99

	*** TOTAL DO RELATORIO                                         X99.999.999,99    X99.999.999,99    X999.999,99    X99.999,99
	/*/

	// Cria Arquivos Temporarios
	MNTR840TRB()
	If lGFrota .And. MV_PAR18 == 1 //Considera Custos de Abastecimentos
		Processa({|| fProcAbast()}, STR0089) //"Processando Abastecimentos..."
	EndIf

	//----------------------------------------------------------------------------
	//| Inicio da Impressao                                                      |
	//----------------------------------------------------------------------------

	nTOTR := 0.00
	nTOTP := 0.00
	dbSelectArea(cTRB)
	dbSetOrder(1)
	DbGotop()
	SetRegua(LastRec())
	If RecCount() = 0
		If !( lGFrota .And. MV_PAR18 == 1 ) .Or. (cTRBAbast)->(RecCount()) = 0 //Tabela temporária de abastecimentos.
			MsgInfo(STR0108,STR0109)
			// Apaga arquivos temporarios
			MNTR840APG()
			Return
		Else
			//Quando for imprimir apenas o abastecimento, o cabeçalho é fixo.
			CABEC1 := STR0137 //"Bem              Descrição"
			dbSelectArea(cTRBAbast)
			dbSetOrder(1)
			dbGotop()
			While (cTRBAbast)->(!Eof())
				If cCodFrota <> (cTRBAbast)->FROTA
					If MV_PAR16 == 1
						cCodBem := (cTRBAbast)->FROTA
					Else
						cBEMPAI := (cTRBAbast)->FROTA
					EndIf
					fCustAbast( (cTRBAbast)->FROTA )
					cCodFrota := (cTRBAbast)->FROTA
				Endif
				(cTRBAbast)->(dbSkip())
			End
		EndIf
	EndIf
	//***********SE PARAMETRO Apresentação ? = Nível Insumo
	If MV_PAR15 = 1

		//***********SE PARAMETRO CONSIDERA ESTRUTURA = SIM
		If MV_PAR16 = 2

			Do While !EoF()

				LI := 80
				cBEMPAI := (cTRB)->CODBEM
				nBEMPRE := 0.00
				nBEMREA := 0.00

				nCBEMPAIP := 0.00 //VARIAVEIS DO BEM PAI TOTAL GERAL
				nCBEMPAIR := 0.00

				Do While !EoF() .And. (cTRB)->CODBEM == cBEMPAI

					cORD    := (cTRB)->ORDEM
					cPLA    := (cTRB)->PLANO
					nORDPRE := 0.00
					nORDREA := 0.00

					IncRegua()
					SomaLinha()
					ST4->(dbSeek(xFilial("ST4") + (cTRB)->SERVICO))
					@ Li,000 Psay STR0026 + (cTRB)->ORDEM //"Ordem.: "
					@ Li,021 Psay STR0027 + (cTRB)->SERVICO + " " + SubStr(ST4->T4_NOME,1,30)//"Servico.: "
					@ LI,081 Psay STR0028 + DTOC((cTRB)->ORIGI) //"Data.: "
					SomaLinha()

					dbSelectArea(cTRB)
					cOBS := (cTRB)->OBS
					If !EMPTY(cOBS)
						@ li,000 Psay STR0029 //"Descricao da OS.: "
						//Função para impressão do memo
						NG2IMPMEMO(cOBS,100,021)
					Endif

					Do While !EoF() .And. (cTRB)->CODBEM == cBEMPAI  .And. (cTRB)->ORDEM  == cORD

						nDIF := (cTRB)->VALORREA - (cTRB)->VALORPRE

						If (cTRB)->VALORPRE > (cTRB)->VALORREA
							nPER := -( Round( 100 - ( ( (cTRB)->VALORREA * 100 ) / (cTRB)->VALORPRE ), 2 ) )
						ElseIf (cTRB)->VALORPRE < (cTRB)->VALORREA
							nPER := Round( 100 - ( (cTRB)->VALORPRE * 100 ) / (cTRB)->VALORREA, 2 )
						Else
							nPER := 0
						EndIf

						@ Li,000 Psay (cTRB)->NOMTIPO
						@ Li,005 Psay (cTRB)->PRODUTO
						@ Li,021+nTamPro Psay Left((cTRB)->NOMPROD ,40)
						If (cTRB)->TIPOREG <> "P"
							@ Li,062+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB)->QUANTPRE,"D") Picture cPictuQnt
						Else
							@ Li,062+nTamPro+nDifQnt Psay (cTRB)->QUANTPRE Picture cPictuQnt
						EndIf
						@ Li,083+nTamPro Psay (cTRB)->UNIDPRE

						If lApField

							@ Li,102+nTamPro+nDifCus Psay '*' Picture '@!'
							@ Li,149+nTamPro+nDifCus Psay '*' Picture '@!'
							@ Li,119+nTamPro+nDifCus Psay '*' Picture '@!'
						
						Else
							
							@ Li,087+nTamPro+nDifCus Psay (cTRB)->VALORPRE  Picture cPictuCus
							@ Li,134+nTamPro+nDifCus Psay (cTRB)->VALORREA  Picture cPictuCus
							@ Li,155+nTamPro+nDifCus Psay nDIF            Picture cPictuCus
						
						EndIf

						@ Li,180+nTamPro+nDifCus Psay nPER            Picture cPictuCus

						If (cTRB)->TIPOREG <> "P"
							@ Li,109+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB)->QUANTREA,"D") Picture cPictuQnt
						Else
							@ Li,109+nTamPro+nDifQnt Psay (cTRB)->QUANTREA Picture cPictuQnt
						EndIf
						@ Li,130+nTamPro Psay (cTRB)->UNIDREA
			
						SomaLinha()
						nORDPRE += (cTRB)->VALORPRE
						nORDREA += (cTRB)->VALORREA

						dbSelectArea(cTRB)
						dbSkip()
					EndDo
					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						If (cTRB2)->( dbSeek(cORD + cPLA) )
							@ Li,004 Psay STR0030 //"Custo Hora Parada do Bem "
							@ Li,062+nDifQnt Psay NGRHODSEXN((cTRB2)->QUANTPRE,"D") Picture cPictuQnt

							If lApField

								@ Li,102+nDifCus Psay '*' Picture '@!'
								@ Li,149+nDifCus Psay '*' Picture '@!'

							Else

								@ Li,087+nDifCus Psay (cTRB2)->VALORPRE Picture cPictuCus
								@ Li,134+nDifCus Psay (cTRB2)->VALORREA Picture cPictuCus

							EndIf

							@ Li,109+nDifQnt Psay NGRHODSEXN((cTRB2)->QUANTREA,"D") Picture cPictuQnt
							
							SomaLinha()
							SomaLinha()
							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA
						Endif
					Endif
					dbSelectArea(cTRB)

					nDIF := nORDREA - nORDPRE

					If nORDPRE > nORDREA
						nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
					ElseIf nORDPRE < nORDREA
						nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
					Else
						nPER := 0
					EndIf

					@ Li,000 Psay STR0031 //"*** Total da O.S. "

					If lApField
						
						@ Li,141+nTamPro+nDifCus Psay '*'  Picture '@!'
						@ Li,148+nTamPro+nDifCus Psay '*'  Picture '@!'
						@ Li,155+nTamPro+nDifCus Psay '*'  Picture '@!'
					
					Else
					
						@ Li,087+nTamPro+nDifCus Psay nORDPRE  Picture cPictuCus
						@ Li,134+nTamPro+nDifCus Psay nORDREA  Picture cPictuCus
						@ Li,155+nTamPro+nDifCus Psay nDIF     Picture cPictuCus
					
					EndIf
					
					@ Li,180+nTamPro+nDifCus Psay nPER     Picture cPictuCus

					SomaLinha()
					SomaLinha()
					nBEMPRE += nORDPRE
					nBEMREA += nORDREA

				EndDo

				fCustAbast(cBEMPAI) //Custos de Abastecimento

				nDIF := nBEMREA - nBEMPRE

				If nBEMPRE > nBEMREA
					nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
				ElseIf nBEMPRE < nBEMREA
					nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
				Else
					nPER := 0
				EndIf

				@ Li,000 Psay STR0038 //"*** Total do Pai"
				
				If lApField

					@ Li,087+nTamPro+nDifCus Psay '*'  Picture '@!'
					@ Li,134+nTamPro+nDifCus Psay '*'  Picture '@!'
					@ Li,155+nTamPro+nDifCus Psay '*'  Picture '@!'

				Else

					@ Li,087+nTamPro+nDifCus Psay nBEMPRE   Picture cPictuCus
					@ Li,134+nTamPro+nDifCus Psay nBEMREA   Picture cPictuCus
					@ Li,155+nTamPro+nDifCus Psay nDIF      Picture cPictuCus

				EndIf
				
				@ Li,180+nTamPro+nDifCus Psay nPER      Picture cPictuCus
				SomaLinha()
				SomaLinha()
				nCBEMPAIP := nCBEMPAIP + nBEMPRE
				nCBEMPAIR := nCBEMPAIR + nBEMREA

				dbSelectArea(cTRB3)
				IF dbSeek(cBEMPAI)
					Do While !EoF() .AND. (cTRB3)->BEMPAI == cBEMPAI

						cBEMFILHO := (cTRB3)->CODBEM
						nBEMFPRE  := 0.00
						nBEMFREA  := 0.00

						dbSelectArea("ST9")
						dbSetOrder(1)
						dbSeek(xFilial("ST9")+cBEMFILHO)
						@Li,000 Psay  STR0039 + cBEMFILHO + " " + ST9->T9_NOME //"BEM FILHO.........: "

						Do While !EoF() .And. (cTRB3)->BEMPAI == cBEMPAI  .And. (cTRB3)->CODBEM == cBEMFILHO

							cORD    := (cTRB3)->ORDEM
							cPLA    := (cTRB3)->PLANO
							nORDPRE := 0.00
							nORDREA := 0.00

							SomaLinha()
							ST4->(dbSeek(xFilial("ST4") + (cTRB3)->SERVICO))
							@ Li,000 Psay STR0026 + (cTRB3)->ORDEM //"Ordem.: "
							@ Li,021 Psay STR0027 + (cTRB3)->SERVICO + " " + SubStr(ST4->T4_NOME,1,30) //"Servico.: "
							@ LI,081 Psay STR0028 + DTOC((cTRB3)->ORIGI)//"Data.: "
							SomaLinha()

							dbSelectArea(cTRB3)
							cOBS := (cTRB3)->OBS
							If !EMPTY(cOBS)
								//Função para impressão do memo
								NG2IMPMEMO(cOBS,100,021)
							Endif
							Do While !EoF() .And. (cTRB3)->BEMPAI == cBEMPAI .And. (cTRB3)->CODBEM == CBEMFILHO .And.;
							(cTRB3)->ORDEM  == cORD

								nDIF := (cTRB3)->VALORREA - (cTRB3)->VALORPRE

								If (cTRB3)->VALORPRE > (cTRB3)->VALORREA
									nPER := -( Round( 100 - ( ( (cTRB3)->VALORREA * 100 ) / (cTRB3)->VALORPRE ), 2 ) )
								ElseIf (cTRB3)->VALORPRE < (cTRB3)->VALORREA
									nPER := Round( 100 - ( (cTRB3)->VALORPRE * 100 ) / (cTRB3)->VALORREA, 2 )
								Else
									nPER := 0
								EndIf

								@ Li,000 Psay (cTRB3)->NOMTIPO
								@ Li,005 Psay (cTRB3)->PRODUTO
								@ Li,021+nTamPro Psay Left((cTRB3)->NOMPROD ,40)
								If (cTRB3)->TIPOREG <> "P"
									@ Li,062+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB3)->QUANTPRE,"D") Picture cPictuQnt
								Else
									@ Li,062+nTamPro+nDifQnt Psay (cTRB3)->QUANTPRE Picture cPictuQnt
								EndIf
								@ Li,083+nTamPro Psay (cTRB3)->UNIDPRE
								
								If lApField
								
									@ Li,102+nTamPro+nDifCus Psay '*'  Picture '@!'
									@ Li,149+nTamPro+nDifCus Psay '*'  Picture '@!'
								
								Else
								
									@ Li,087+nTamPro+nDifCus Psay (cTRB3)->VALORPRE  Picture cPictuCus
									@ Li,134+nTamPro+nDifCus Psay (cTRB3)->VALORREA  Picture cPictuCus
								
								EndIf
								
								If (cTRB3)->TIPOREG <> "P"
									@ Li,109+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB3)->QUANTREA,"D") Picture cPictuQnt
								Else
									@ Li,109+nTamPro+nDifQnt Psay (cTRB3)->QUANTREA Picture cPictuQnt
								EndIf
								@ Li,130+nTamPro Psay (cTRB3)->UNIDREA
								
								If lApField

									@ Li,155+nTamPro+nDifCus Psay '*'            Picture '@!'

								Else

									@ Li,155+nTamPro+nDifCus Psay nDIF            Picture cPictuCus

								EndIf

								@ Li,180+nTamPro+nDifCus Psay nPER            Picture cPictuCus
								
								SomaLinha()

								nORDPRE += (cTRB3)->VALORPRE
								nORDREA += (cTRB3)->VALORREA
								dbSelectArea(cTRB3)
								dbSkip()
							EndDo
							If MV_PAR12 == 2
								dbSelectArea(cTRB2)
								IF (cTRB2)->( dbSeek(cORD + cPLA) )
									@ Li,004 Psay STR0030 //"Custo Hora Parada do Bem "
									@ Li,062+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB2)->QUANTPRE,"D") Picture cPictuQnt

									If lApField

										@ Li,102+nTamPro+nDifCus Psay '*' Picture '@!'
										@ Li,149+nTamPro+nDifCus Psay '*' Picture '@!'

									Else

										@ Li,087+nTamPro+nDifCus Psay (cTRB2)->VALORPRE Picture cPictuCus
										@ Li,134+nTamPro+nDifCus Psay (cTRB2)->VALORREA Picture cPictuCus

									EndIf

									@ Li,109+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB2)->QUANTREA,"D") Picture cPictuQnt
									
									SomaLinha()
									SomaLinha()

									nORDPRE += (cTRB2)->VALORPRE
									nORDREA += (cTRB2)->VALORREA
								Endif
							Endif
							dbSelectArea(cTRB3)
							nDIF := nORDREA - nORDPRE

							If nORDPRE > nORDREA
								nPER := -( Round( 100 - ( (nORDREA * 100 ) / nORDPRE ), 2 ) )
							ElseIf nORDPRE < nORDREA
								nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
							Else
								nPER := 0
							EndIf

							@ Li,000 Psay STR0031 //"*** Total da O.S."
							
							If lApField
								
								@ Li,087+nTamPro+nDifCus Psay '*'  Picture '@!'
								@ Li,134+nTamPro+nDifCus Psay '*'  Picture '@!'
								@ Li,155+nTamPro+nDifCus Psay '*'  Picture '@!'

							Else
								
								@ Li,087+nTamPro+nDifCus Psay nORDPRE  Picture cPictuCus
								@ Li,134+nTamPro+nDifCus Psay nORDREA  Picture cPictuCus
								@ Li,155+nTamPro+nDifCus Psay nDIF     Picture cPictuCus

							EndIf
							
							@ Li,180+nTamPro+nDifCus Psay nPER     Picture cPictuCus
							
							SomaLinha()
							SomaLinha()
							nBEMFPRE += nORDPRE
							nBEMFREA += nORDREA
						EndDo

						nDIF := nBEMFREA - nBEMFPRE
						If nBEMFPRE > nBEMFREA
							nPER := -( Round( 100 - ( (nBEMFREA * 100 ) / nBEMFPRE ), 2 ) )
						ElseIf nBEMFPRE < nBEMFREA
							nPER := Round( 100 - ( nBEMFPRE * 100 ) / nBEMFREA, 2 )
						Else
							nPER := 0
						EndIf

						@ Li,000 Psay STR0040 //"*** Total do Filho "
						
						If lApField

							@ Li,087+nTamPro+nDifCus Psay '*'   Picture '@!'
							@ Li,134+nTamPro+nDifCus Psay '*'   Picture '@!'
							@ Li,155+nTamPro+nDifCus Psay '*'   Picture '@!'

						Else
							
							@ Li,087+nTamPro+nDifCus Psay nBEMFPRE   Picture cPictuCus
							@ Li,134+nTamPro+nDifCus Psay nBEMFREA   Picture cPictuCus
							@ Li,155+nTamPro+nDifCus Psay nDIF       Picture cPictuCus
						
						EndIf

						@ Li,180+nTamPro+nDifCus Psay nPER       Picture cPictuCus
						
						SomaLinha()
						SomaLinha()

						nCBEMPAIP += nBEMFPRE //SOMA O CUSTO DO BEM PAI
						nCBEMPAIR += nBEMFREA
					End

					nDIF := nCBEMPAIR - nCBEMPAIP

					If nCBEMPAIP > nCBEMPAIR
						nPER := -( Round( 100 - ( ( nCBEMPAIR * 100 ) / nCBEMPAIP ), 2 ) )
					ElseIf nCBEMPAIP < nCBEMPAIR
						nPER := Round( 100 - ( nCBEMPAIP * 100 ) / nCBEMPAIR, 2 )
					Else
						nPER := 0
					EndIf

					@ Li,000 Psay STR0043 //"*** Total Geral do Bem Pai "
					
					If lApField
					
						@ Li,087+nTamPro+nDifCus Psay '*'      Picture '@!'
						@ Li,134+nTamPro+nDifCus Psay '*'      Picture '@!'
						@ Li,155+nTamPro+nDifCus Psay '*'      Picture '@!'

					Else
					
						@ Li,087+nTamPro+nDifCus Psay nCBEMPAIP      Picture cPictuCus
						@ Li,134+nTamPro+nDifCus Psay nCBEMPAIR      Picture cPictuCus
						@ Li,155+nTamPro+nDifCus Psay nDIF           Picture cPictuCus
					
					EndIf

					@ Li,180+nTamPro+nDifCus Psay nPER           Picture cPictuCus
					
					SomaLinha()
					SomaLinha()
					nTOTR := nTOTR + nCBEMPAIR
					nTOTP := nTOTP + nCBEMPAIP
				Else
					nTOTR := nTOTR + nCBEMPAIR
					nTOTP := nTOTP + nCBEMPAIP
				EndIf
				dbSelectArea(cTRB)
			EndDo
			If nTOTP > 0 .or. nTOTR > 0
				nDIF := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER := 0
				EndIf

				@ Li,000 Psay STR0033 //"*** Total Geral"
				
				If lApField

					@ Li,087+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,134+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,155+nTamPro+nDifCus Psay '*'        Picture '@!'

				Else

					@ Li,087+nTamPro+nDifCus Psay nTOTP        Picture cPictuCus
					@ Li,134+nTamPro+nDifCus Psay nTOTR        Picture cPictuCus
					@ Li,155+nTamPro+nDifCus Psay nDIF         Picture cPictuCus
			
				EndIf

				@ Li,180+nTamPro+nDifCus Psay nPER         Picture cPictuCus
			
			Endif

			//***********SE PARAMETRO CONSIDERA ESTRUTURA = NAO
		Else
			Do WHile !EoF()

				IncRegua()

				LI := 80
				cCODBEM  := (cTRB)->CODBEM
				nBEMPRE  := 0.00
				nBEMREA  := 0.00

				Do While !EoF() .And. (cTRB)->CODBEM == cCODBEM

					cORD    := (cTRB)->ORDEM
					cPLA    := (cTRB)->PLANO
					nORDPRE := 0.00
					nORDREA := 0.00

					SomaLinha()
					ST4->(dbSeek(xFilial("ST4") + (cTRB)->SERVICO))
					@ Li,000 Psay STR0026 + (cTRB)->ORDEM //"Ordem.: "
					@ Li,021 Psay STR0027 + (cTRB)->SERVICO + " " + SubStr(ST4->T4_NOME,1,30) //"Servico.: "
					@ LI,081 Psay STR0028 + DTOC((cTRB)->ORIGI)//"Data.: "
					SomaLinha()

					dbSelectArea(cTRB)
					cOBS := (cTRB)->OBS
					If !EMPTY(cOBS)
						//Função para impressão do memo
						NG2IMPMEMO(cOBS,100,021)
					Endif

					Do While !EoF() .And. (cTRB)->CODBEM == cCODBEM  .And. (cTRB)->ORDEM  == cORD

						nDIF := (cTRB)->VALORREA - (cTRB)->VALORPRE

						If (cTRB)->VALORPRE > (cTRB)->VALORREA
							nPER := -( Round( 100 - ( ((cTRB)->VALORREA * 100 ) / (cTRB)->VALORPRE ), 2 ) )
						ElseIf (cTRB)->VALORPRE < (cTRB)->VALORREA
							nPER := Round( 100 - ( (cTRB)->VALORPRE * 100 ) / (cTRB)->VALORREA, 2 )
						Else
							nPER := 0
						EndIf

						@ Li,000 Psay (cTRB)->NOMTIPO
						@ Li,005 Psay (cTRB)->PRODUTO
						@ Li,021+nTamPro Psay Left((cTRB)->NOMPROD ,40)
						If (cTRB)->TIPOREG <> "P"
							@ Li,062+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB)->QUANTPRE,"D")  Picture cPictuQnt
						Else
							@ Li,062+nTamPro+nDifQnt Psay (cTRB)->QUANTPRE Picture cPictuQnt
						EndIf
						@ Li,083+nTamPro Psay (cTRB)->UNIDPRE

						If lApField

							@ Li,102+nTamPro+nDifCus Psay '*'  Picture '@!'
							@ Li,149+nTamPro+nDifCus Psay '*'  Picture '@!'
							@ Li,169+nTamPro+nDifCus Psay '*'  Picture '@!'

						Else

							@ Li,087+nTamPro+nDifCus Psay (cTRB)->VALORPRE  Picture cPictuCus
							@ Li,134+nTamPro+nDifCus Psay (cTRB)->VALORREA  Picture cPictuCus
							@ Li,155+nTamPro+nDifCus Psay nDIF              Picture cPictuCus
							
						EndIf

						If (cTRB)->TIPOREG <> "P"
							@ Li,109+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB)->QUANTREA,"D")  Picture cPictuQnt
						Else
							@ Li,109+nTamPro+nDifQnt Psay (cTRB)->QUANTREA Picture cPictuQnt
						EndIf
						@ Li,130+nTamPro Psay (cTRB)->UNIDREA

						@ Li,180+nTamPro+nDifCus Psay nPER           Picture cPictuCus
						
						SomaLinha()

						nORDPRE += (cTRB)->VALORPRE
						nORDREA += (cTRB)->VALORREA

						dbSelectArea(cTRB)
						dbSkip()
					EndDo
					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						IF (cTRB2)->( dbSeek(cORD + cPLA) )
							@ Li,004 Psay STR0030//"Custo Hora Parada do Bem "
							@ Li,062+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB2)->QUANTPRE,"D") Picture cPictuQnt

							If lApField
								
								@ Li,102+nTamPro+nDifCus Psay '*' Picture '@!'
								@ Li,149+nTamPro+nDifCus Psay '*' Picture '@!'
							
							Else
								
								@ Li,087+nTamPro+nDifCus Psay (cTRB2)->VALORPRE Picture cPictuCus
								@ Li,134+nTamPro+nDifCus Psay (cTRB2)->VALORREA Picture cPictuCus
							
							EndIf

							@ Li,109+nTamPro+nDifQnt Psay NGRHODSEXN((cTRB2)->QUANTREA,"D") Picture cPictuQnt

							SomaLinha()
							SomaLinha()

							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA
						EndIf
					EndIf
					dbSelectArea(cTRB)

					nDIF := nORDREA - nORDPRE

					If nORDPRE > nORDREA
						nPER := -( Round( 100 - ( (nORDREA * 100 ) / nORDPRE ), 2 ) )
					ElseIf nORDPRE < nORDREA
						nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
					Else
						nPER := 0
					EndIf

					@ Li,000 Psay STR0031 //"*** Total da O.S. "

					If lApField

						@ Li,101+nTamPro+nDifCus Psay '*'        Picture '@!'
						@ Li,148+nTamPro+nDifCus Psay '*'        Picture '@!'
						@ Li,168+nTamPro+nDifCus Psay '*'        Picture '@!'

					Else
						
						@ Li,087+nTamPro+nDifCus Psay nORDPRE        Picture cPictuCus
						@ Li,134+nTamPro+nDifCus Psay nORDREA        Picture cPictuCus
						@ Li,155+nTamPro+nDifCus Psay nDIF           Picture cPictuCus

					EndIf

					@ Li,180+nTamPro+nDifCus Psay nPER           Picture cPictuCus
					
					SomaLinha()
					SomaLinha()

					nBEMPRE += nORDPRE
					nBEMREA += nORDREA
				EndDo

				fCustAbast(cCODBEM) //Custos de Abastecimento

				nDIF := nBEMREA - nBEMPRE

				If nBEMPRE > nBEMREA
					nPER := -( Round( 100 - ( (nBEMREA * 100 ) / nBEMPRE ), 2 ) )
				ElseIf nBEMPRE < nBEMREA
					nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
				Else
					nPER := 0
				EndIf

				@ Li,000 Psay STR0032 //"*** Total do Bem  "
				
				If lApField
					
					@ Li,101+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,148+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,168+nTamPro+nDifCus Psay '*'        Picture '@!'

				Else

					@ Li,087+nTamPro+nDifCus Psay nBEMPRE        Picture cPictuCus
					@ Li,134+nTamPro+nDifCus Psay nBEMREA        Picture cPictuCus
					@ Li,155+nTamPro+nDifCus Psay nDIF           Picture cPictuCus

				EndIf

				@ Li,180+nTamPro+nDifCus Psay nPER           Picture cPictuCus

				SomaLinha()

				nTOTR := nTOTR + nBEMREA
				nTOTP := nTOTP + nBEMPRE

			EndDo
			If nTOTP > 0 .or. nTOTR > 0
				nDIF := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER := 0
				EndIf

				SomaLinha()
				@ Li,000 Psay STR0033 //"*** Total Geral"

				If lApField

					@ Li,101+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,148+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,168+nTamPro+nDifCus Psay '*'        Picture '@!'

				Else

					@ Li,087+nTamPro+nDifCus Psay nTOTP        Picture cPictuCus
					@ Li,134+nTamPro+nDifCus Psay nTOTR        Picture cPictuCus
					@ Li,155+nTamPro+nDifCus Psay nDIF         Picture cPictuCus

				EndIf

				@ Li,180+nTamPro+nDifCus Psay nPER         Picture cPictuCus

			Endif

		EndIf

		//***********SE PARAMETRO Apresentação ? = Nível Bem
	ElseIf mv_par15 = 2
		//***********SE PARAMETRO CONSIDERA ESTRUTURA = Sim
		If MV_PAR16 = 2

			Do While !EoF()

				LI := 80
				cBEMPAI := (cTRB)->CODBEM
				nBEMPRE := 0.00
				nBEMREA := 0.00

				nCBEMPAIP := 0.00 //VARIAVEIS DO BEM PAI TOTAL GERAL
				nCBEMPAIR := 0.00

				SomaLinha()
				@ Li,000 Psay STR0041 //"BEM PAI......:"
				Do While !EoF() .And. (cTRB)->CODBEM == cBEMPAI

					cORD    := (cTRB)->ORDEM
					cPLA    := (cTRB)->PLANO
					nORDPRE := 0.00
					nORDREA := 0.00

					Do While !EoF() .And. (cTRB)->CODBEM == cBEMPAI  .And. (cTRB)->ORDEM  == cORD

						IncRegua()
						nORDPRE += (cTRB)->VALORPRE
						nORDREA += (cTRB)->VALORREA

						dbSelectArea(cTRB)
						dbSkip()
					EndDo
					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						If (cTRB2)->( dbSeek(cORD + cPLA) )
							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA
						Endif
					Endif
					dbSelectArea(cTRB)
					nBEMPRE += nORDPRE
					nBEMREA += nORDREA

				EndDo
				nDIF := nBEMREA - nBEMPRE

				If nBEMPRE > nBEMREA
					nPER := -( Round( 100 - ( (nBEMREA * 100 ) / nBEMPRE ), 2 ) )
				ElseIf nBEMPRE < nBEMREA
					nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
				Else
					nPER := 0
				EndIf

				nCBEMPAIP += nBEMPRE //SOMA O CUSTO DO BEM PAI
				nCBEMPAIR += nBEMREA

				SomaLinha()
				dbSelectArea("ST9")
				dbSeek(xFILIAL("ST9")+cBEMPAI)
				@ Li,000 Psay cBEMPAI
				@ Li,017 Psay SubStr(ST9->T9_NOME,1,40)
				
				If lApField
				
					@ Li,059+nDifCus Psay '*'  PICTURE '@!'
					@ Li,080+nDifCus Psay '*'  PICTURE '@!'
					@ Li,101+nDifCus Psay '*'  PICTURE '@!'
				
				Else
				
					@ Li,059+nDifCus Psay nBEMPRE  PICTURE cPictuCus
					@ Li,080+nDifCus Psay nBEMREA  PICTURE cPictuCus
					@ Li,101+nDifCus Psay nDIF     PICTURE cPictuCus
				
				EndIf
				
				@ Li,125+nDifCus Psay nPER     PICTURE cPictuCus

				//IPRESSAO DAS O.S DOS FILHOS DA ESTRUTURA
				dbSelectArea(cTRB3)
				IF dbSeek(cBEMPAI)
					LPRIFI := .T.
					Do While !EoF() .AND. (cTRB3)->BEMPAI == cBEMPAI

						cBEMFILHO := (cTRB3)->CODBEM
						nBEMFPRE  := 0.00
						nBEMFREA  := 0.00

						If LPRIFI
							SomaLinha()
							SomaLinha()
							@ Li,000 Psay  STR0042 //"BENS FILHOS..:"
							LPRIFI := .F.
						EndIf
						Do While !EoF() .And. (cTRB3)->BEMPAI == cBEMPAI  .And. (cTRB3)->CODBEM == cBEMFILHO

							cORD    := (cTRB3)->ORDEM
							cPLA    := (cTRB3)->PLANO
							nORDPRE := 0.00
							nORDREA := 0.00

							Do While !EoF() .And. (cTRB3)->BEMPAI == cBEMPAI .And. (cTRB3)->CODBEM == CBEMFILHO .And.;
							(cTRB3)->ORDEM  == cORD

								nORDPRE += (cTRB3)->VALORPRE
								nORDREA += (cTRB3)->VALORREA
								dbSelectArea(cTRB3)
								dbSkip()
							EndDo
							If MV_PAR12 == 2
								dbSelectArea(cTRB2)
								IF (cTRB2)->( dbSeek(cORD + cPLA) )
									nORDPRE += (cTRB2)->VALORPRE
									nORDREA += (cTRB2)->VALORREA
								Endif
							Endif
							dbSelectArea(cTRB3)
							nBEMFPRE += nORDPRE
							nBEMFREA += nORDREA
						EndDo
						nDIF := nBEMFREA - nBEMFPRE

						If nBEMFPRE > nBEMFREA
							nPER := -( Round( 100 - ( ( nBEMFREA * 100 ) / nBEMFPRE ), 2 ) )
						ElseIf nBEMFPRE < nBEMFREA
							nPER := Round( 100 - ( nBEMFPRE * 100 ) / nBEMFREA, 2 )
						Else
							nPER := 0
						EndIf

						SomaLinha()
						dbSelectArea("ST9")
						dbSeek(xFILIAL("ST9")+cBEMFILHO)
						@ Li,000 Psay cBEMFILHO
						@ Li,017 Psay SubStr(ST9->T9_NOME,1,40)
						
						If lApField
						
							@ Li,059+nDifCus Psay '*' Picture '@!'
							@ Li,080+nDifCus Psay '*' Picture '@!'
							@ Li,101+nDifCus Psay '*' Picture '@!'
						
						Else
						
							@ Li,059+nDifCus Psay nBEMFPRE Picture cPictuCus
							@ Li,080+nDifCus Psay nBEMFREA Picture cPictuCus
							@ Li,101+nDifCus Psay nDIF     Picture cPictuCus
						
						EndIf

						@ Li,125+nDifCus Psay nPER     Picture cPictuCus

						nCBEMPAIP += nBEMFPRE //SOMA O CUSTO DO BEM PAI
						nCBEMPAIR += nBEMFREA
					End

					SomaLinha()

					fCustAbast(cBEMPAI) //Custos de Abastecimento

					nDIF := nCBEMPAIR - nCBEMPAIP

					If nCBEMPAIP > nCBEMPAIR
						nPER := -( Round( 100 - ( ( nCBEMPAIR * 100 ) / nCBEMPAIP ), 2 ) )
					ElseIf nCBEMPAIP < nCBEMPAIR
						nPER := Round( 100 - ( nCBEMPAIP * 100 ) / nCBEMPAIR, 2 )
					Else
						nPER := 0
					EndIf

					@ Li,000 Psay STR0038 //"*** Total do Pai"
					
					If lApField
					
						@ Li,059+nDifCus Psay '*' PICTURE '@!'
						@ Li,080+nDifCus Psay '*' PICTURE '@!'
						@ Li,101+nDifCus Psay '*' PICTURE '@!'

					Else
					
						@ Li,059+nDifCus Psay nCBEMPAIP PICTURE cPictuCus
						@ Li,080+nDifCus Psay nCBEMPAIR PICTURE cPictuCus
						@ Li,101+nDifCus Psay nDIF      PICTURE cPictuCus
					
					EndIf

					@ Li,125+nDifCus Psay nPER      PICTURE cPictuCus
					
					SomaLinha()
					SomaLinha()

					nTOTR := nTOTR + nCBEMPAIR
					nTOTP := nTOTP + nCBEMPAIP
				Else
					SomaLinha()

					fCustAbast(cBEMPAI) //Custos de Abastecimento

					nDIF := nCBEMPAIR - nCBEMPAIP

					If nCBEMPAIP > nCBEMPAIR
						nPER := -( Round( 100 - ( ( nCBEMPAIR * 100 ) / nCBEMPAIP ), 2 ) )
					ElseIf nCBEMPAIP < nCBEMPAIR
						nPER := Round( 100 - ( nCBEMPAIP * 100 ) / nCBEMPAIR, 2 )
					Else
						nPER := 0
					EndIf

					@ Li,000 Psay STR0038 //"*** Total do Pai"
					
					If lApField
					
						@ Li,059+nDifCus Psay '*' PICTURE '@!'
						@ Li,080+nDifCus Psay '*' PICTURE '@!'
						@ Li,101+nDifCus Psay '*' PICTURE '@!'

					Else
					
						@ Li,059+nDifCus Psay nCBEMPAIP PICTURE cPictuCus
						@ Li,080+nDifCus Psay nCBEMPAIR PICTURE cPictuCus
						@ Li,101+nDifCus Psay nDIF      PICTURE cPictuCus
					
					EndIf

					@ Li,125+nDifCus Psay nPER      PICTURE cPictuCus
					
					SomaLinha()
					SomaLinha()

					nTOTR := nTOTR + nCBEMPAIR
					nTOTP := nTOTP + nCBEMPAIP
				EndIf
				dbSelectArea(cTRB)
			EndDo
			If nTOTP > 0 .or. nTOTR > 0
				nDIF := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER := 0
				EndIf

				@ Li,000 Psay STR0033 //"*** Total Geral"
				
				If lApField
				
					@ Li,044+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,065+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,086+nTamPro+nDifCus Psay '*'        Picture '@!'

				Else
				
					@ Li,044+nTamPro+nDifCus Psay nTOTP        Picture cPictuCus
					@ Li,065+nTamPro+nDifCus Psay nTOTR        Picture cPictuCus
					@ Li,086+nTamPro+nDifCus Psay nDIF         Picture cPictuCus
				
				EndIf

				@ Li,110+nTamPro+nDifCus Psay nPER         Picture cPictuCus
				
			EndIf

			//***********SE PARAMETRO CONSIDERA ESTRUTURA = NAO
		Else
			Do WHile !EoF()

				IncRegua()

				cCODBEM  := (cTRB)->CODBEM
				nBEMPRE  := 0.00
				nBEMREA  := 0.00

				Do While !EoF() .And. (cTRB)->CODBEM == cCODBEM

					cORD    := (cTRB)->ORDEM
					cPLA    := (cTRB)->PLANO
					nORDPRE := 0.00
					nORDREA := 0.00
					Do While !EoF() .And. (cTRB)->CODBEM == cCODBEM  .And. (cTRB)->ORDEM  == cORD

						IncRegua()
						nORDPRE += (cTRB)->VALORPRE
						nORDREA += (cTRB)->VALORREA

						dbSelectArea(cTRB)
						dbSkip()
					EndDo
					If MV_PAR12 == 2
						dbSelectArea(cTRB2)
						IF (cTRB2)->( dbSeek(cORD + cPLA) )
							nORDPRE += (cTRB2)->VALORPRE
							nORDREA += (cTRB2)->VALORREA
						EndIf
					EndIf
					dbSelectArea(cTRB)
					nBEMPRE += nORDPRE
					nBEMREA += nORDREA
				EndDo

				nDIF := nBEMREA - nBEMPRE

				If nBEMPRE > nBEMREA
					nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
				ElseIf nBEMPRE < nBEMREA
					nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
				Else
					nPER := 0
				EndIf

				SomaLinha()
				SomaLinha()
				dbSelectArea("ST9")
				dbSeek(xFILIAL("ST9")+cCODBEM)
				@ Li,000 Psay cCODBEM
				@ Li,017 Psay SubStr(ST9->T9_NOME,1,40)
				//Custos de Abastecimento
				
				If lApField
					
					@ Li,059+nDifCus Psay '*' Picture '@!'
					@ Li,080+nDifCus Psay '*' Picture '@!'
					@ Li,101+nDifCus Psay '*' Picture '@!'

				Else

					@ Li,059+nDifCus Psay nBEMPRE Picture cPictuCus
					@ Li,080+nDifCus Psay nBEMREA Picture cPictuCus
					@ Li,101+nDifCus Psay nDIF    Picture cPictuCus

				EndIf

				@ Li,125+nDifCus Psay nPER    Picture cPictuCus

				fCustAbast(cCODBEM)

				dbSelectArea(cTRB)

				nTOTR +=  nBEMREA
				nTOTP +=  nBEMPRE

			EndDo
			If nTOTP > 0 .or. nTOTR > 0
				nDIF := nTOTR - nTOTP

				If nTOTP > nTOTR
					nPER := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
				ElseIf nTOTP < nTOTR
					nPER := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
				Else
					nPER := 0
				EndIf

				SomaLinha()
				SomaLinha()
				@ Li,000 Psay STR0033//"***Total Geral"
				
				If lApField
				
					@ Li,044+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,065+nTamPro+nDifCus Psay '*'        Picture '@!'
					@ Li,086+nTamPro+nDifCus Psay '*'        Picture '@!'

				Else
				
					@ Li,044+nTamPro+nDifCus Psay nTOTP        Picture cPictuCus
					@ Li,065+nTamPro+nDifCus Psay nTOTR        Picture cPictuCus
					@ Li,086+nTamPro+nDifCus Psay nDIF         Picture cPictuCus
				
				EndIf

				@ Li,110+nTamPro+nDifCus Psay nPER         Picture cPictuCus
				
			Endif
		EndIf
		//***********SE PARAMETRO Apresentação ? = Nível OS
	Else
		If MV_PAR15 = 3

			//***********SE PARAMETRO CONSIDERA ESTRUTURA = SIM
			If MV_PAR16 = 2

				Do While !EoF()

					LI := 80
					cBEMPAI := (cTRB)->CODBEM
					nBEMPRE := 0.00
					nBEMREA := 0.00

					nCBEMPAIP := 0.00 //VARIAVEIS DO BEM PAI TOTAL GERAL
					nCBEMPAIR := 0.00

					Do While !EoF() .And. (cTRB)->CODBEM == cBEMPAI

						cORD    := (cTRB)->ORDEM
						cPLA    := (cTRB)->PLANO
						nORDPRE := 0.00
						nORDREA := 0.00

						IncRegua()
						SomaLinha()
						ST4->(dbSeek(xFilial("ST4") + (cTRB)->SERVICO))
						@ Li,000 Psay STR0026 + (cTRB)->ORDEM //"Ordem.: "
						@ Li,021 Psay STR0027 + (cTRB)->SERVICO + " " + SubStr(ST4->T4_NOME,1,30)//"Servico.: "
						@ LI,072 Psay STR0028 + DTOC((cTRB)->ORIGI) //"Data.: "
						SomaLinha()

						dbSelectArea(cTRB)
						cOBS := (cTRB)->OBS
						If !EMPTY(cOBS)
							@ li,000 Psay STR0029 //"Descricao da OS.: "
							//Função para impressão do memo
							NG2IMPMEMO(cOBS,100,021)
						Endif

						Do While !EoF() .And. (cTRB)->CODBEM == cBEMPAI  .And. (cTRB)->ORDEM  == cORD

							nDIF := (cTRB)->VALORREA - (cTRB)->VALORPRE

							If (cTRB)->VALORPRE > (cTRB)->VALORREA
								nPER := -( Round( 100 - ( ( (cTRB)->VALORREA * 100 ) / (cTRB)->VALORPRE ), 2 ) )
							ElseIf (cTRB)->VALORPRE < (cTRB)->VALORREA
								nPER := Round( 100 - ( (cTRB)->VALORPRE * 100 ) / (cTRB)->VALORREA, 2 )
							Else
								nPER := 0
							EndIf

							nORDPRE += (cTRB)->VALORPRE
							nORDREA += (cTRB)->VALORREA

							dbSelectArea(cTRB)
							dbSkip()
						EndDo
						If MV_PAR12 == 2
							dbSelectArea(cTRB2)
							If (cTRB2)->( dbSeek(cORD + cPLA) )
								@ Li,004 Psay STR0030 //"Custo Hora Parada do Bem "
								
								If lApField

									@ Li,087+nDifCus Psay '*' Picture '@!'
									@ Li,134+nDifCus Psay '*' Picture '@!'
								
								Else
									
									@ Li,087+nDifCus Psay (cTRB2)->VALORPRE Picture cPictuCus
									@ Li,134+nDifCus Psay (cTRB2)->VALORREA Picture cPictuCus
								
								EndIf

								SomaLinha()
								SomaLinha()
								nORDPRE += (cTRB2)->VALORPRE
								nORDREA += (cTRB2)->VALORREA
							Endif
						Endif
						dbSelectArea(cTRB)

						nDIF := nORDREA - nORDPRE

						If nORDPRE > nORDREA
							nPER := -( Round( 100 - ( (nORDREA * 100 ) / nORDPRE ), 2 ) )
						ElseIf nORDPRE < nORDREA
							nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
						Else
							nPER := 0
						EndIf

						@ Li,000 Psay STR0031 //"*** Total da O.S. "
						
						If lApField
							
							@ Li,075+nTamPro+nDifCus Psay '*'  Picture '@!'
							@ Li,096+nTamPro+nDifCus Psay '*'  Picture '@!'
							@ Li,117+nTamPro+nDifCus Psay '*'  Picture '@!'

						Else

							@ Li,075+nTamPro+nDifCus Psay nORDPRE  Picture cPictuCus
							@ Li,096+nTamPro+nDifCus Psay nORDREA  Picture cPictuCus
							@ Li,117+nTamPro+nDifCus Psay nDIF     Picture cPictuCus
						
						EndIf

						@ Li,141+nTamPro+nDifCus Psay nPER     Picture cPictuCus

						SomaLinha()
						SomaLinha()
						nBEMPRE += nORDPRE
						nBEMREA += nORDREA

					EndDo

					fCustAbast(cBEMPAI) //Custos de Abastecimento

					nDIF := nBEMREA - nBEMPRE

					If nBEMPRE > nBEMREA
						nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
					ElseIf nBEMPRE < nBEMREA
						nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
					Else
						nPER := 0
					EndIf

					@ Li,000 Psay STR0038 //"*** Total do Pai"
					
					If lApField

						@ Li,075+nTamPro+nDifCus Psay '*'   Picture '@!'
						@ Li,096+nTamPro+nDifCus Psay '*'   Picture '@!'
						@ Li,117+nTamPro+nDifCus Psay '*'   Picture '@!'

					Else

						@ Li,075+nTamPro+nDifCus Psay nBEMPRE   Picture cPictuCus
						@ Li,096+nTamPro+nDifCus Psay nBEMREA   Picture cPictuCus
						@ Li,117+nTamPro+nDifCus Psay nDIF      Picture cPictuCus
					
					EndIf

					@ Li,141+nTamPro+nDifCus Psay nPER      Picture cPictuCus
					
					SomaLinha()
					SomaLinha()
					nCBEMPAIP := nCBEMPAIP + nBEMPRE
					nCBEMPAIR := nCBEMPAIR + nBEMREA

					dbSelectArea(cTRB3)
					IF dbSeek(cBEMPAI)
						Do While !EoF() .AND. (cTRB3)->BEMPAI == cBEMPAI

							cBEMFILHO := (cTRB3)->CODBEM
							nBEMFPRE  := 0.00
							nBEMFREA  := 0.00

							dbSelectArea("ST9")
							dbSetOrder(1)
							dbSeek(xFilial("ST9")+cBEMFILHO)
							@Li,000 Psay  STR0039 + cBEMFILHO + " " + ST9->T9_NOME //"BEM FILHO.........: "

							Do While !EoF() .And. (cTRB3)->BEMPAI == cBEMPAI  .And. (cTRB3)->CODBEM == cBEMFILHO

								cORD    := (cTRB3)->ORDEM
								cPLA    := (cTRB3)->PLANO
								nORDPRE := 0.00
								nORDREA := 0.00

								SomaLinha()
								ST4->(dbSeek(xFilial("ST4") + (cTRB3)->SERVICO))
								@ Li,000 Psay STR0026 + (cTRB3)->ORDEM //"Ordem.: "
								@ Li,021 Psay STR0027 + (cTRB3)->SERVICO + " " + SubStr(ST4->T4_NOME,1,30) //"Servico.: "
								@ LI,072 Psay STR0028 + DTOC((cTRB3)->ORIGI)//"Data.: "
								SomaLinha()

								dbSelectArea(cTRB3)
								cOBS := (cTRB3)->OBS
								If !EMPTY(cOBS)
									//Função para impressão do memo
									NG2IMPMEMO(cOBS,100,021)
								Endif
								Do While !EoF() .And. (cTRB3)->BEMPAI == cBEMPAI .And. (cTRB3)->CODBEM == CBEMFILHO .And.;
								(cTRB3)->ORDEM  == cORD

									nDIF := (cTRB3)->VALORREA - (cTRB3)->VALORPRE

									If (cTRB3)->VALORPRE > (cTRB3)->VALORREA
										nPER := -( Round( 100 - ( ( (cTRB3)->VALORREA * 100 ) / (cTRB3)->VALORPRE ), 2 ) )
									ElseIf (cTRB3)->VALORPRE < (cTRB3)->VALORREA
										nPER := Round( 100 - ( (cTRB3)->VALORPRE * 100 ) / (cTRB3)->VALORREA, 2 )
									Else
										nPER := 0
									EndIf

									nORDPRE += (cTRB3)->VALORPRE
									nORDREA += (cTRB3)->VALORREA
									dbSelectArea(cTRB3)
									dbSkip()
								EndDo
								If MV_PAR12 == 2
									dbSelectArea(cTRB2)
									If (cTRB2)->( dbSeek(cORD + cPLA) )
										@ Li,004 Psay STR0030 //"Custo Hora Parada do Bem "
										
										If lApField
											
											@ Li,075+nTamPro+nDifCus Psay '*' Picture '@!'
											@ Li,096+nTamPro+nDifCus Psay '*' Picture '@!'

										Else
											
											@ Li,075+nTamPro+nDifCus Psay (cTRB2)->VALORPRE Picture cPictuCus
											@ Li,096+nTamPro+nDifCus Psay (cTRB2)->VALORREA Picture cPictuCus
										
										EndIf
										
										SomaLinha()
										SomaLinha()

										nORDPRE += (cTRB2)->VALORPRE
										nORDREA += (cTRB2)->VALORREA
									Endif
								Endif
								dbSelectArea(cTRB3)
								nDIF := nORDREA - nORDPRE

								If nORDPRE > nORDREA
									nPER := -( Round( 100 - ( (nORDREA * 100 ) / nORDPRE ), 2 ) )
								ElseIf nORDPRE < nORDREA
									nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
								Else
									nPER := 0
								EndIf

								@ Li,000 Psay STR0031 //"*** Total da O.S."
								
								If lApField
								
									@ Li,075+nTamPro+nDifCus Psay '*'  Picture '@!'
									@ Li,096+nTamPro+nDifCus Psay '*'  Picture '@!'
									@ Li,117+nTamPro+nDifCus Psay '*'  Picture '@!'

								Else
								
									@ Li,075+nTamPro+nDifCus Psay nORDPRE  Picture cPictuCus
									@ Li,096+nTamPro+nDifCus Psay nORDREA  Picture cPictuCus
									@ Li,117+nTamPro+nDifCus Psay nDIF     Picture cPictuCus

								EndIf

								@ Li,141+nTamPro+nDifCus Psay nPER     Picture cPictuCus
								
								SomaLinha()
								SomaLinha()
								nBEMFPRE += nORDPRE
								nBEMFREA += nORDREA
							EndDo

							nDIF := nBEMFREA - nBEMFPRE

							If nBEMFPRE > nBEMFREA
								nPER := -( Round( 100 - ( (nBEMFREA * 100 ) / nBEMFPRE ), 2 ) )
							ElseIf nBEMFPRE < nBEMFREA
								nPER := Round( 100 - ( nBEMFPRE * 100 ) / nBEMFREA, 2 )
							Else
								nPER := 0
							EndIf

							@ Li,000 Psay STR0040 //"*** Total do Filho "
							
							If lApField

								@ Li,075+nTamPro+nDifCus Psay '*'   Picture '@!'
								@ Li,096+nTamPro+nDifCus Psay '*'   Picture '@!'
								@ Li,117+nTamPro+nDifCus Psay '*'   Picture '@!'

							Else
							
								@ Li,075+nTamPro+nDifCus Psay nBEMFPRE   Picture cPictuCus
								@ Li,096+nTamPro+nDifCus Psay nBEMFREA   Picture cPictuCus
								@ Li,117+nTamPro+nDifCus Psay nDIF       Picture cPictuCus
							
							EndIf

							@ Li,141+nTamPro+nDifCus Psay nPER       Picture cPictuCus
							
							SomaLinha()
							SomaLinha()

							nCBEMPAIP += nBEMFPRE //SOMA O CUSTO DO BEM PAI
							nCBEMPAIR += nBEMFREA
						End

						nDIF := nCBEMPAIR - nCBEMPAIP

						If nCBEMPAIP > nCBEMPAIR
							nPER := -( Round( 100 - ( ( nCBEMPAIR * 100 ) / nCBEMPAIP ), 2 ) )
						ElseIf nCBEMPAIP < nCBEMPAIR
							nPER := Round( 100 - ( nCBEMPAIP * 100 ) / nCBEMPAIR, 2 )
						Else
							nPER := 0
						EndIf

						@ Li,000 Psay STR0043 //"*** Total Geral do Bem Pai "
						
						If lApField

							@ Li,075+nTamPro+nDifCus Psay '*'      Picture '@!'
							@ Li,096+nTamPro+nDifCus Psay '*'      Picture '@!'
							@ Li,117+nTamPro+nDifCus Psay '*'      Picture '@!'

						Else

							@ Li,075+nTamPro+nDifCus Psay nCBEMPAIP      Picture cPictuCus
							@ Li,096+nTamPro+nDifCus Psay nCBEMPAIR      Picture cPictuCus
							@ Li,117+nTamPro+nDifCus Psay nDIF           Picture cPictuCus

						EndIf

						@ Li,141+nTamPro+nDifCus Psay nPER           Picture cPictuCus

						SomaLinha()
						SomaLinha()
						nTOTR := nTOTR + nCBEMPAIR
						nTOTP := nTOTP + nCBEMPAIP
					Else
						nTOTR := nTOTR + nCBEMPAIR
						nTOTP := nTOTP + nCBEMPAIP
					EndIf
					dbSelectArea(cTRB)
				EndDo
				If nTOTP > 0 .or. nTOTR > 0
					nDIF := nTOTR - nTOTP

					If nTOTP > nTOTR
						nPER := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
					ElseIf nTOTP < nTOTR
						nPER := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
					Else
						nPER := 0
					EndIf

					@ Li,000 Psay STR0033 //"*** Total Geral"
					
					If lApField

						@ Li,075+nTamPro+nDifCus Psay '*'        Picture '@!'
						@ Li,096+nTamPro+nDifCus Psay '*'        Picture '@!'
						@ Li,117+nTamPro+nDifCus Psay '*'        Picture '@!'

					Else
						
						@ Li,075+nTamPro+nDifCus Psay nTOTP        Picture cPictuCus
						@ Li,096+nTamPro+nDifCus Psay nTOTR        Picture cPictuCus
						@ Li,117+nTamPro+nDifCus Psay nDIF         Picture cPictuCus
					
					EndIf

					@ Li,141+nTamPro+nDifCus Psay nPER         Picture cPictuCus

				Endif

				//*********SE PARAMETRO CONSIDERA ESTRUTURA = NAO
			Else
				Do WHile !EoF()

					IncRegua()

					LI := 80
					cCODBEM  := (cTRB)->CODBEM
					nBEMPRE  := 0.00
					nBEMREA  := 0.00

					Do While !EoF() .And. (cTRB)->CODBEM == cCODBEM

						cORD    := (cTRB)->ORDEM
						cPLA    := (cTRB)->PLANO
						nORDPRE := 0.00
						nORDREA := 0.00

						SomaLinha()
						ST4->(dbSeek(xFilial("ST4") + (cTRB)->SERVICO))
						@ Li,000 Psay STR0026 + (cTRB)->ORDEM //"Ordem.: "
						@ Li,021 Psay STR0027 + (cTRB)->SERVICO + " " + SubStr(ST4->T4_NOME,1,30) //"Servico.: "
						@ LI,072 Psay STR0028 + DTOC((cTRB)->ORIGI)//"Data.: "
						SomaLinha()

						dbSelectArea(cTRB)
						cOBS := (cTRB)->OBS
						If !EMPTY(cOBS)
							//Função para impressão do memo
							NG2IMPMEMO(cOBS,100,021)
						Endif

						Do While !EoF() .And. (cTRB)->CODBEM == cCODBEM  .And. (cTRB)->ORDEM  == cORD

							nDIF := (cTRB)->VALORREA - (cTRB)->VALORPRE

							If (cTRB)->VALORPRE > (cTRB)->VALORREA
								nPER := -( Round( 100 - ( ( (cTRB)->VALORREA * 100 ) / (cTRB)->VALORPRE ), 2 ) )
							ElseIf (cTRB)->VALORPRE < (cTRB)->VALORREA
								nPER := Round( 100 - ( (cTRB)->VALORPRE * 100 ) / (cTRB)->VALORREA, 2 )
							Else
								nPER := 0
							EndIf

							nORDPRE += (cTRB)->VALORPRE
							nORDREA += (cTRB)->VALORREA

							dbSelectArea(cTRB)
							dbSkip()
						EndDo
						If MV_PAR12 == 2
							dbSelectArea(cTRB2)
							IF (cTRB2)->( dbSeek(cORD + cPLA) )
								@ Li,004 Psay STR0030//"Custo Hora Parada do Bem "
								
								If lApField

									@ Li,087+nTamPro+nDifCus Psay '*' Picture '@!'
									@ Li,134+nTamPro+nDifCus Psay '*' Picture '@!'

								Else

									@ Li,087+nTamPro+nDifCus Psay (cTRB2)->VALORPRE Picture cPictuCus
									@ Li,134+nTamPro+nDifCus Psay (cTRB2)->VALORREA Picture cPictuCus

								EndIf

								SomaLinha()
								SomaLinha()

								nORDPRE += (cTRB2)->VALORPRE
								nORDREA += (cTRB2)->VALORREA
							EndIf
						EndIf
						dbSelectArea(cTRB)

						nDIF := nORDREA - nORDPRE

						If nORDPRE > nORDREA
							nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
						ElseIf nORDPRE < nORDREA
							nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
						Else
							nPER := 0
						EndIf

						@ Li,000 Psay STR0031 //"*** Total da O.S. "
						
						If lApField

							@ Li,075+nTamPro+nDifCus Psay '*'        Picture '@!'
							@ Li,096+nTamPro+nDifCus Psay '*'        Picture '@!'
							@ Li,117+nTamPro+nDifCus Psay '*'		 Picture '@!'

						Else
						
							@ Li,075+nTamPro+nDifCus Psay nORDPRE        Picture cPictuCus
							@ Li,096+nTamPro+nDifCus Psay nORDREA        Picture cPictuCus
							@ Li,117+nTamPro+nDifCus Psay nDIF           Picture cPictuCus

						EndIf

						@ Li,141+nTamPro+nDifCus Psay nPER           Picture cPictuCus
						
						SomaLinha()
						SomaLinha()

						nBEMPRE += nORDPRE
						nBEMREA += nORDREA
					EndDo

					fCustAbast(cCODBEM) //Custos de Abastecimento

					nDIF := nBEMREA - nBEMPRE

					If nBEMPRE > nBEMREA
						nPER := -( Round( 100 - ( ( nBEMREA * 100 ) / nBEMPRE ), 2 ) )
					ElseIf nBEMPRE < nBEMREA
						nPER := Round( 100 - ( nBEMPRE * 100 ) / nBEMREA, 2 )
					Else
						nPER := 0
					EndIf

					@ Li,000 Psay STR0032 //"*** Total do Bem  "
					
					If lApField

						@ Li,075+nTamPro+nDifCus Psay '*'        Picture '@!'
						@ Li,096+nTamPro+nDifCus Psay '*'        Picture '@!'
						@ Li,117+nTamPro+nDifCus Psay '*'        Picture '@!'

					Else
						
						@ Li,075+nTamPro+nDifCus Psay nBEMPRE        Picture cPictuCus
						@ Li,096+nTamPro+nDifCus Psay nBEMREA        Picture cPictuCus
						@ Li,117+nTamPro+nDifCus Psay nDIF           Picture cPictuCus
					
					EndIf

					@ Li,141+nTamPro+nDifCus Psay nPER           Picture cPictuCus
					
					SomaLinha()

					nTOTR := nTOTR + nBEMREA
					nTOTP := nTOTP + nBEMPRE

				EndDo
				If nTOTP > 0 .or. nTOTR > 0
					nDIF := nTOTR - nTOTP

					If nTOTP > nTOTR
						nPER := -( Round( 100 - ( ( nTOTR * 100 ) / nTOTP ), 2 ) )
					ElseIf nTOTP < nTOTR
						nPER := Round( 100 - ( nTOTP * 100 ) / nTOTR, 2 )
					Else
						nPER := 0
					EndIf

					SomaLinha()
					@ Li,000 Psay STR0033 //"*** Total Geral"
					
					If lApField

						@ Li,075+nTamPro+nDifCus Psay '*'        Picture '@!'
						@ Li,096+nTamPro+nDifCus Psay '*'        Picture '@!'
						@ Li,117+nTamPro+nDifCus Psay '*'        Picture '@!'

					Else

						@ Li,075+nTamPro+nDifCus Psay nTOTP        Picture cPictuCus
						@ Li,096+nTamPro+nDifCus Psay nTOTR        Picture cPictuCus
						@ Li,117+nTamPro+nDifCus Psay nDIF         Picture cPictuCus

					EndIf

					@ Li,141+nTamPro+nDifCus Psay nPER         Picture cPictuCus

				Endif
			EndIf
		EndIf
	EndIf
	Roda(nCntImpr,cRodaTxt,Tamanho)

	// Apaga arquivos temporarios
	MNTR840APG()

	//----------------------------------------------------------------
	//| Devolve a condicao original do arquivo principam             |
	//----------------------------------------------------------------
	RetIndex("SI3")
	Set Filter To

	Set device to Screen

	If aReturn[5] = 1
		Set Printer To
		dbCommitAll()
		OurSpool(wnrel)
	Endif
	MS_FLUSH()
Return NIL
//------------------------------------------------------------------------------
/*/{Protheus.doc} SomaLinha

Incrementa Linha e Controla Salto de Pagina
@author Inacio Luiz Kolling
@since 18/06/99

@version undefined

@param lImpBem, Lógica, Caso ocorreu a troca de bem, será impresso o nome.

@type function
/*/
//------------------------------------------------------------------------------
Function SomaLinha(lImpBem)

Default lImpBem := .F.

	Li++
	If Li > 58 .Or. lImpBem
		If Li > 58
			Cabec(titulo,cabec1,cabec2,nomeprog,tamanho,nTipo)
		EndIf
		If MV_PAR16 == 1  .and. (MV_PAR15 == 1 .or. MV_PAR15 == 3)
			dbSelectArea("ST9")
			dbSetOrder(1)
			dbSeek(xFilial("ST9")+cCODBEM)
			@Li,000 Psay  STR0034 + cCODBEM + " " + ST9->T9_NOME //"BEM.........:"
			SomaLinha()
			@Li,000 Psay replicate("*",215)
			SomaLinha()
		EndIf
		If MV_PAR16 == 2  .and. (MV_PAR15 == 1 .or. MV_PAR15 == 3)
			dbSelectArea("ST9")
			dbSetOrder(1)
			dbSeek(xFilial("ST9")+cBEMPAI)
			@Li,000 Psay  STR0041 + cBEMPAI + " " + ST9->T9_NOME //"BEM PAI.....: "
			SomaLinha()
			@Li,000 Psay replicate("*",215)
			SomaLinha()
		EndIf
	EndIf
Return
//------------------------------------------------------------------------------
/*/{Protheus.doc} NGCUSTSTJ1
Calcula o Custo da O.S do arquivo STJ
@author Elisangela Costa
@since 26/09/02
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Function NGCUSTSTJ1()


	dbSelectArea("STL")
	dbSeek( xFilial("STL") + STJ->TJ_ORDEM + STJ->TJ_PLANO)
	DO While !EoF() .And. STL->TL_FILIAL == xFILIAL("STL")  .And. ;
	STL->TL_ORDEM  == STJ->TJ_ORDEM                 .And. ;
	STL->TL_PLANO  == STJ->TJ_PLANO

		// Considera Data ( Do Insumo )
		If MV_PAR17 == 2

			If STL->TL_DTINICI < MV_PAR03 .Or. STL->TL_DTINICI > MV_PAR04
				dbSkip()
				Loop
			EndIf
		
		EndIf

		//Calcula o custo do Insumo
		MNTA901STL()

		If (STL->TL_TIPOREG == "P" .and. MV_PAR07 != 1) .Or.;
		(STL->TL_TIPOREG == "F" .and. MV_PAR08 != 1) .Or.;
		(STL->TL_TIPOREG == "M" .and. MV_PAR09 != 1) .Or.;
		(STL->TL_TIPOREG == "T" .and. MV_PAR10 != 1)
			dbSkip()
			Loop
		Endif

		nEXTRA   := If(MV_PAR11 == 2, 1+( If(NGCADICBASE('TL_PCTHREX','A','STL',.F.),STL->TL_PCTHREX,VAL(STL->TL_HREXTRA)) /100), 1)
		aVETCUST := NGCUSTSTAN(STL->TL_CODIGO,STL->TL_TIPOREG,nExtra,MV_PAR13)

		nCUSTO   := aVETCUST[1] //Custo standard
		cNOMTIPO := aVETCUST[2] //Nome do tipo de insumo
		cTIPOREG := aVETCUST[3] //Tipo do Insumo
		cNOME    := aVETCUST[4] //Nome do Insumo
		cCODPROD := aVETCUST[5] //Codigo do insumo

		ckey := STJ->TJ_CODBEM + STJ->TJ_ORDEM + cTIPOREG + cCODPROD

		If NGCADICBASE("TJ_MMSYP","A","STJ",.F.)
			cObs := NGMEMOSYP(STJ->TJ_MMSYP)
		Else
			cObs := STJ->TJ_OBSERVA
		EndIf

		dbSelectArea(cTRB)
		dbSetOrder(1)
		If !(cTRB)->(dbSeek(cKey))
			(cTRB)->(DbAppend())
			(cTRB)->PLANO    := STJ->TJ_PLANO
			(cTRB)->CODBEM   := STJ->TJ_CODBEM
			(cTRB)->SERVICO  := STJ->TJ_SERVICO
			(cTRB)->SEQRELA  := STJ->TJ_SEQRELA
			(cTRB)->ORDEM    := STJ->TJ_ORDEM
			(cTRB)->TIPOREG  := cTIPOREG
			(cTRB)->NOMTIPO  := cNOMTIPO
			(cTRB)->PRODUTO  := STL->TL_CODIGO
			(cTRB)->NOMPROD  := cNOME
			(cTRB)->OBS      := cObs
			If !Empty(STL->TL_DTINICI)
				(cTRB)->ORIGI    := STL->TL_DTINICI
			Else
				(cTRB)->ORIGI    := STJ->TJ_DTMPINI
			EndIf
		Endif

		vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
		STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
		STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
		nQTDHORAS := vVETHORAS[1]

		If MV_PAR11 == 1
			nCUSTO := STL->TL_CUSTO * nEXTRA
		Else
			nCUSTO := nCUSTO * nQTDHORAS
		Endif

		If Alltrim(STL->TL_SEQRELA) = "0"
			(cTRB)->QUANTPRE += nQTDHORAS
			(cTRB)->UNIDPRE  := STL->TL_UNIDADE
			(cTRB)->VALORPRE += nCUSTO
		Else
			(cTRB)->QUANTREA += nQTDHORAS
			(cTRB)->UNIDREA  := STL->TL_UNIDADE
			(cTRB)->VALORREA += nCUSTO
		EndIf
		dbSelectArea("STL")
		dbSkip()
	EndDo
	dbSelectArea("ST9")
	dbSetOrder(01)
	dbSeek(xFILIAL("ST9")+STJ->TJ_CODBEM)
	If !Empty(ST9->T9_CUSTOHO)
		If MV_PAR12 == 2
			dbSelectArea("STF")
			dbSeek(xFilial("STF") + STJ->TJ_CODBEM + STJ->TJ_SERVICO + STJ->TJ_SEQRELA )
			If STF->TF_PARADA == "S" .or. STJ->TJ_PLANO == "000000"
				If !Empty(STJ->TJ_DTPPINI)
					dINI := STJ->TJ_DTPPINI
					hINI := STJ->TJ_HOPPINI
				Else
					dINI := STJ->TJ_DTMPINI
					hINI := STJ->TJ_HOMPINI
				Endif
				If !Empty(STJ->TJ_DTPPFIM)
					dFIM := STJ->TJ_DTPPFIM
					hFIM := STJ->TJ_HOPPFIM
				Else
					dFIM := STJ->TJ_DTMPFIM
					hFIM := STJ->TJ_HOMPFIM
				Endif

				nPRE := NGCALEBEM(dINI, hINI, dFIM, hFIM, STJ->TJ_CODBEM)
				nPRE := HtoM(nPRE)/60
				nPRE := If(nPRE < 0.00, 0.00, nPRE)

				If !Empty(STJ->TJ_DTPRINI)
					dINI := STJ->TJ_DTPRINI
					hINI := STJ->TJ_HOPRINI
				Else
					dINI := STJ->TJ_DTMRINI
					hINI := STJ->TJ_HOMRINI
				Endif

				If !Empty(STJ->TJ_DTPRFIM)
					dFIM := STJ->TJ_DTPRFIM
					hFIM := STJ->TJ_HOPRFIM
				Else
					dFIM := STJ->TJ_DTMRFIM
					hFIM := STJ->TJ_HOMRFIM
				Endif

				nREA := NGCALEBEM(dINI, hINI, dFIM, hFIM, STJ->TJ_CODBEM)
				nREA := HtoM(nREA)/60
				nREA := If(nREA < 0.00, 0.00, nREA)
				lPARADA := .T.
				If STJ->(FIELDPOS("TJ_PARADA")) > 0
					If STJ->TJ_PARADA == "N"
						lPARADA := .F.
					Endif
				Endif

				If lPARADA
					dbSelectArea(cTRB2)
					If !dbSeek(STJ->TJ_ORDEM + STJ->TJ_PLANO)
						DbAppend()
						(cTRB2)->ORDEM  := STJ->TJ_ORDEM
						(cTRB2)->PLANO  := STJ->TJ_PLANO
					Endif
					(cTRB2)->QUANTPRE := (cTRB2)->QUANTPRE + nPRE
					(cTRB2)->QUANTREA := (cTRB2)->QUANTREA + nREA
					(cTRB2)->VALORPRE := (cTRB2)->VALORPRE + (nPRE * ST9->T9_CUSTOHO)
					(cTRB2)->VALORREA := (cTRB2)->VALORREA + (nREA * ST9->T9_CUSTOHO)
				Endif
			Endif
		EndIf
	Endif
Return
//------------------------------------------------------------------------------
/*/{Protheus.doc} NGCUSTSTJ2
Calcula o Custo das O.S dos Filhos da Estrutura
@author Elisangela Costa
@since 26/09/02
@version undefined
@param aEstrutura, array
@param nBEMPAI, numeric
@param lRela, logical
@type function
/*/
//------------------------------------------------------------------------------
Function NGCUSTSTJ2(aEstrutura,nBEMPAI,lRela)
	Local i := 0
	For i := 1 to len(aEstrutura)

		dbSelectArea("STJ")
		dbSetOrder(2)
		dbSeek( xFilial("STJ") + "B" + aEstrutura[i][1])
		DO WHILE !EoF() .And. STJ->TJ_FILIAL == xFILIAL("STJ") .And.;
		STJ->TJ_TIPOOS == "B" .And. STJ->TJ_CODBEM == aEstrutura[i][1]

			If !lRela
				IncRegua()
			Else
				IncProc()
			EndIf

			If MV_PAR14 <> 5
				If MV_PAR14 = 1  //Finalizadas(L/S) e Liberadas(L/N)
					If STJ->TJ_SITUACA != "L"
						dbSkip()
						Loop
					EndIf
				ElseIf MV_PAR14 = 2 //Finalizadas(L/S) e Pendentes(P/N)
					If (STJ->TJ_SITUACA == "L") .Or.;
					STJ->TJ_SITUACA == "C"
						dbSkip()
						Loop
					EndIf
				ElseIf MV_PAR14 = 3 //Finalizadas(L/S) e Ambas (Pendentes e Liberadas - L/N e P/N))
					If STJ->TJ_SITUACA == "C" .or. STJ->TJ_TERMINO == "S"
						dbSkip()
						Loop
					EndIf
				ElseIf MV_PAR14 = 4 //Finalizadas(L/S)
					If STJ->TJ_SITUACA <> "L" .Or. STJ->TJ_TERMINO <> "S"
						dbSkip()
						Loop
					EndIf
				EndIf
			Endif

			// Considera Data ( Da O.S. )
			If MV_PAR17 == 1

				If STJ->TJ_SITUACA == 'L' .And. STJ->TJ_TERMINO == 'S'

					// Considera se a data real fim da O.S. está contida no range definido por parâmetro.
					If STJ->TJ_DTMRFIM < aEstrutura[i,3] .Or. STJ->TJ_DTMRFIM > aEstrutura[i,4]
						dbSkip()
						Loop
					EndIf

				Else

					If STJ->TJ_DTMPINI < aEstrutura[i][3] .Or. STJ->TJ_DTMPINI > aEstrutura[i][4]
						dbSkip()
						Loop
					EndIf

				EndIf

			EndIf

			If STJ->TJ_SERVICO < MV_PAR05 .OR. STJ->TJ_SERVICO > MV_PAR06
				dbSkip()
				Loop
			EndIf

			dbSelectArea(cTRB4)
			If dbSeek(STJ->TJ_CODBEM+STJ->TJ_ORDEM+STJ->TJ_PLANO)

				If !Empty(nBEMPAI)

					dbSelectArea(cTRB)
					dbSetOrder(1)
					If !(cTRB)->(dbSeek(nBEMPAI))
						(cTRB)->(DbAppend())
						(cTRB)->CODBEM := nBEMPAI
						(cTRB)->ORDEM  := ''//STJ->TJ_ORDEM
						(cTRB)->PLANO  := ''//STJ->TJ_PLANO
					EndIf

					GRAVSTJ840(STJ->TJ_ORDEM,STJ->TJ_PLANO,nBEMPAI,aEstrutura[i][3],aEstrutura[i][4])

				EndIf

				dbSelectArea("STJ")
				dbSkip()
				Loop
			Else
				(cTRB4)->(DbAppend())
				(cTRB4)->CODBEM := STJ->TJ_CODBEM
				(cTRB4)->ORDEM  := STJ->TJ_ORDEM
				(cTRB4)->PLANO  := STJ->TJ_PLANO

				//Grava os dados das O.S dos filhos da Estrutura(STJ)
				GRAVSTJ840(STJ->TJ_ORDEM,STJ->TJ_PLANO,nBEMPAI,aEstrutura[i][3],aEstrutura[i][4])
			EndIf
			dbSelectArea("STJ")
			dbSkip()
		EndDo
	Next i
Return
//------------------------------------------------------------------------------
/*/{Protheus.doc} GRAVSTJ840
Grava o Custo das O.S dos Filhos da Estrutura  do STJ
@author Elisangela Costa
@since 12/09/02
@version undefined
@param nOS, numeric
@param nPLANO, numeric
@param nPAI, numeric
@param dDTAINI, date
@param dDTAFIM, date
@type function
/*/
//------------------------------------------------------------------------------
Function GRAVSTJ840(nOS,nPLANO,nPAI,dDTAINI,dDTAFIM)


	dbSelectArea("STL")
	dbSeek( xFilial("STL") + nOS + nPLANO)
	DO While !EoF() .And. STL->TL_FILIAL == xFILIAL("STL")  .And. ;
	STL->TL_ORDEM  == nOS                          .And. ;
	STL->TL_PLANO  == nPLANO

		// Considera Data ( Do Insumo )
		If MV_PAR17 == 2

			If STL->TL_DTINICI < dDTAINI .Or. STL->TL_DTINICI > dDTAFIM
				dbSkip()
				Loop
			EndIf

		// Considera se a data real fim da O.S. está contida no range definido por parâmetro.
		ElseIf STJ->TJ_DTMRFIM < dDTAINI .Or. STJ->TJ_DTMRFIM > dDTAFIM

			dbSkip()
			Loop

		EndIf

		//Calcula o custo do Insumo
		MNTA901STL()

		If (STL->TL_TIPOREG == "P" .and. MV_PAR07 != 1) .Or.;
		(STL->TL_TIPOREG == "F" .and. MV_PAR08 != 1) .Or.;
		(STL->TL_TIPOREG == "M" .and. MV_PAR09 != 1) .Or.;
		(STL->TL_TIPOREG == "T" .and. MV_PAR10 != 1)
			dbSkip()
			Loop
		Endif

		nEXTRA   := If(MV_PAR11 == 2, 1+( If(NGCADICBASE('TL_PCTHREX','A','STL',.F.),STL->TL_PCTHREX,VAL(STL->TL_HREXTRA)) /100), 1)
		aVETCUST := NGCUSTSTAN(STL->TL_CODIGO,STL->TL_TIPOREG,nExtra,MV_PAR13)

		nCUSTO   := aVETCUST[1] //Custo standard
		cNOMTIPO := aVETCUST[2] //Nome do tipo de insumo
		cTIPOREG := aVETCUST[3] //Tipo do Insumo
		cNOME    := aVETCUST[4] //Nome do Insumo
		cCODPROD := aVETCUST[5] //Codigo do insumo

		ckey := nPAI + STJ->TJ_CODBEM + STJ->TJ_ORDEM + STJ->TJ_PLANO + cTIPOREG + cCODPROD

		If NGCADICBASE("TJ_MMSYP","A","STJ",.F.)
			cObs := NGMEMOSYP(STJ->TJ_MMSYP)
		Else
			cObs := STJ->TJ_OBSERVA
		EndIf

		If !(cTRB3)->(dbSeek(cKey))
			(cTRB3)->(DbAppend())
			(cTRB3)->BEMPAI   := nPAI
			(cTRB3)->CODBEM   := STJ->TJ_CODBEM
			(cTRB3)->ORDEM    := STJ->TJ_ORDEM
			(cTRB3)->PLANO    := STJ->TJ_PLANO
			(cTRB3)->SERVICO  := STJ->TJ_SERVICO
			(cTRB3)->SEQRELA  := STJ->TJ_SEQRELA
			(cTRB3)->TIPOREG  := cTIPOREG
			(cTRB3)->NOMTIPO  := cNOMTIPO
			(cTRB3)->PRODUTO  := STL->TL_CODIGO
			(cTRB3)->NOMPROD  := cNOME
			(cTRB3)->OBS      := cObs
			If !Empty(STL->TL_DTINICI)
				(cTRB3)->ORIGI    := STL->TL_DTINICI
			Else
				(cTRB3)->ORIGI    := STJ->TJ_DTMPINI
			EndIf
		Endif

		vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
		STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
		STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
		nQTDHORAS := vVETHORAS[1]

		If MV_PAR11 == 1
			nCUSTO := STL->TL_CUSTO * nEXTRA
		Else
			nCUSTO := nCUSTO * nQTDHORAS
		Endif

		If Alltrim(STL->TL_SEQRELA) = "0"
			(cTRB3)->QUANTPRE += nQTDHORAS
			(cTRB3)->UNIDPRE  := STL->TL_UNIDADE
			(cTRB3)->VALORPRE += nCUSTO
		Else
			(cTRB3)->QUANTREA += nQTDHORAS
			(cTRB3)->UNIDREA  := STL->TL_UNIDADE
			(cTRB3)->VALORREA += nCUSTO
		EndIf

		If !Empty(nPAI)

			dbSelectArea(cTRB)
			dbSetOrder(1)
			If !(cTRB)->(dbSeek(nPAI))
				(cTRB)->(DbAppend())
				(cTRB)->CODBEM := nPAI
				(cTRB)->ORDEM  := ''//STJ->TJ_ORDEM
				(cTRB)->PLANO  := ''//STJ->TJ_PLANO
			EndIf
		EndIf

		dbSelectArea("STL")
		dbSkip()
	EndDo
	dbSelectArea("ST9")
	dbSetOrder(01)
	dbSeek(xFILIAL("ST9")+STJ->TJ_CODBEM)
	If !Empty(ST9->T9_CUSTOHO)
		If MV_PAR12 == 2
			dbSelectArea("STF")
			dbSeek(xFilial("STF") + STJ->TJ_CODBEM + STJ->TJ_SERVICO + STJ->TJ_SEQRELA)
			If STF->TF_PARADA == "S" .or. STJ->TJ_PLANO == "000000"
				If !Empty(STJ->TJ_DTPPINI)
					dINI := STJ->TJ_DTPPINI
					hINI := STJ->TJ_HOPPINI
				Else
					dINI := STJ->TJ_DTMPINI
					hINI := STJ->TJ_HOMPINI
				Endif

				If !Empty(STJ->TJ_DTPPFIM)
					dFIM := STJ->TJ_DTPPFIM
					hFIM := STJ->TJ_HOPPFIM
				Else
					dFIM := STJ->TJ_DTMPFIM
					hFIM := STJ->TJ_HOMPFIM
				Endif
				nPRE := NGCALEBEM(dINI, hINI, dFIM, hFIM, STJ->TJ_CODBEM)
				nPRE := HtoM(nPRE)/60
				nPRE := If(nPRE < 0.00, 0.00, nPRE)

				If !Empty(STJ->TJ_DTPRINI)
					dINI := STJ->TJ_DTPRINI
					hINI := STJ->TJ_HOPRINI
				Else
					dINI := STJ->TJ_DTMRINI
					hINI := STJ->TJ_HOMRINI
				Endif

				If !Empty(STJ->TJ_DTPRFIM)
					dFIM := STJ->TJ_DTPRFIM
					hFIM := STJ->TJ_HOPRFIM
				Else
					dFIM := STJ->TJ_DTMRFIM
					hFIM := STJ->TJ_HOMRFIM
				Endif
				nREA := NGCALEBEM(dINI, hINI, dFIM, hFIM, STJ->TJ_CODBEM)
				nREA := HtoM(nREA)/60
				nREA := If(nREA < 0.00, 0.00, nREA)
				lPARADA := .T.

				If STJ->(FIELDPOS("TJ_PARADA")) > 0
					If STJ->TJ_PARADA == "N"
						lPARADA := .F.
					Endif
				Endif
				If lPARADA
					dbSelectArea(cTRB2)
					If !dbSeek(STJ->TJ_ORDEM + STJ->TJ_PLANO)
						DbAppend()
						(cTRB2)->ORDEM  := STJ->TJ_ORDEM
						(cTRB2)->PLANO  := STJ->TJ_PLANO
					Endif
					(cTRB2)->QUANTPRE := (cTRB2)->QUANTPRE + nPRE
					(cTRB2)->QUANTREA := (cTRB2)->QUANTREA + nREA
					(cTRB2)->VALORPRE := (cTRB2)->VALORPRE + (nPRE * ST9->T9_CUSTOHO)
					(cTRB2)->VALORREA := (cTRB2)->VALORREA + (nREA * ST9->T9_CUSTOHO)
				Endif
			Endif
		EndIf
	Endif
Return
//------------------------------------------------------------------------------
/*/{Protheus.doc} NGCUSTSTS1
Calcula o Custo da O.S do arquivo STS
@author Elisangela Costa
@since 26/09/02
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Function NGCUSTSTS1()


	dbSelectArea("STT")
	dbSeek( xFilial("STT") + STS->TS_ORDEM + STS->TS_PLANO)
	DO While !EoF() .And. STT->TT_FILIAL == xFILIAL("STT")  .And.;
	STT->TT_ORDEM  == STS->TS_ORDEM                 .And. ;
	STT->TT_PLANO  == STS->TS_PLANO

		If MV_PAR17 = 2
			If STT->TT_DTINICI < MV_PAR03 .Or. STT->TT_DTINICI > MV_PAR04
				dbSkip()
				Loop
			EndIf
		EndIf

		//Calcula o custo do Insumo
		MNTA901STT()

		If (STT->TT_TIPOREG == "P" .and. MV_PAR07 != 1) .or.;
		(STT->TT_TIPOREG == "F" .and. MV_PAR08 != 1) .or.;
		(STT->TT_TIPOREG == "M" .and. MV_PAR09 != 1) .or.;
		(STT->TT_TIPOREG == "T" .and. MV_PAR10 != 1)
			dbSkip()
			Loop
		Endif

		nEXTRA   := If(MV_PAR11 == 2, 1+( If(NGCADICBASE('TT_PCTHREX','A','STT',.F.),STT->TT_PCTHREX,VAL(STT->TT_HREXTRA)) /100), 1)
		aVETCUST := NGCUSTSTAN(STT->TT_CODIGO,STT->TT_TIPOREG,nExtra,MV_PAR13)

		nCUSTO   := aVETCUST[1] //Custo standard
		cNOMTIPO := aVETCUST[2] //Nome do tipo de insumo
		cTIPOREG := aVETCUST[3] //Tipo do Insumo
		cNOME    := aVETCUST[4] //Nome do Insumo
		cCODPROD := aVETCUST[5] //Codigo do insumo

		If NGCADICBASE("TS_MMSYP","A","STS",.F.)
			cObs := NGMEMOSYP(STS->TS_MMSYP)
		Else
			cObs := STS->TS_OBSERVA
		EndIf

		ckey := STS->TS_CODBEM + STS->TS_ORDEM + cTIPOREG + cCODPROD

		dbSelectArea(cTRB)
		dbSetOrder(1)
		If !(cTRB)->(dbSeek(cKey))
			(cTRB)->(DbAppend())
			(cTRB)->PLANO    := STS->TS_PLANO
			(cTRB)->CODBEM   := STS->TS_CODBEM
			(cTRB)->SERVICO  := STS->TS_SERVICO
			(cTRB)->SEQRELA  := STS->TS_SEQRELA
			(cTRB)->ORDEM    := STS->TS_ORDEM
			(cTRB)->TIPOREG  := cTIPOREG
			(cTRB)->NOMTIPO  := cNOMTIPO
			(cTRB)->PRODUTO  := STT->TT_CODIGO
			(cTRB)->NOMPROD  := cNOME
			(cTRB)->OBS      := cObs
			If !Empty(STL->TL_DTINICI)
				(cTRB)->ORIGI    := STL->TL_DTINICI
			Else
				(cTRB)->ORIGI    := STJ->TJ_DTMPINI
			EndIf
		EndIf

		vVETHORAS := NGTQUATINS(STT->TT_CODIGO,STT->TT_TIPOREG,STT->TT_USACALE,;
		STT->TT_QUANTID,STT->TT_TIPOHOR,STT->TT_DTINICI,;
		STT->TT_HOINICI,STT->TT_DTFIM,STT->TT_HOFIM,STT->TT_UNIDADE)
		nQTDHORAS := vVETHORAS[1]

		If MV_PAR11 == 1
			nCUSTO := STT->TT_CUSTO * nEXTRA
		Else
			nCUSTO := nCUSTO * nQTDHORAS
		Endif

		If Alltrim(STT->TT_SEQRELA) = "0"
			(cTRB)->QUANTPRE += nQTDHORAS
			(cTRB)->UNIDPRE  := STT->TT_UNIDADE
			(cTRB)->VALORPRE += nCUSTO
		Else
			(cTRB)->QUANTREA += nQTDHORAS
			(cTRB)->UNIDREA  := STT->TT_UNIDADE
			(cTRB)->VALORREA += nCUSTO
		EndIf
		dbSelectArea("STT")
		dbSkip()
	EndDo
	dbSelectArea("ST9")
	dbSetOrder(01)
	dbSeek(xFILIAL("ST9")+STS->TS_CODBEM)
	If !Empty(ST9->T9_CUSTOHO)
		If MV_PAR12 == 2
			dbSelectArea("STF")
			dbSeek(xFilial("STF") + STS->TS_CODBEM + STS->TS_SERVICO + STS->TS_SEQRELA)
			If STF->TF_PARADA == "S" .or. STS->TS_PLANO == "000000"
				If !Empty(STS->TS_DTPPINI)
					dINI := STS->TS_DTPPINI
					hINI := STS->TS_HOPPINI
				Else
					dINI := STS->TS_DTMPINI
					hINI := STS->TS_HOMPINI
				Endif
				If !Empty(STS->TS_DTPPFIM)
					dFIM := STS->TS_DTPPFIM
					hFIM := STS->TS_HOPPFIM
				Else
					dFIM := STS->TS_DTMPFIM
					hFIM := STS->TS_HOMPFIM
				Endif

				nPRE := NGCALEBEM(dINI, hINI, dFIM, hFIM, STS->TS_CODBEM)
				nPRE := HtoM(nPRE)/60
				nPRE := If(nPRE < 0.00, 0.00, nPRE)
				If !Empty(STS->TS_DTPRINI)
					dINI := STS->TS_DTPRINI
					hINI := STS->TS_HOPRINI
				Else
					dINI := STS->TS_DTMRINI
					hINI := STS->TS_HOMRINI
				Endif

				If !Empty(STS->TS_DTPRFIM)
					dFIM := STS->TS_DTPRFIM
					hFIM := STS->TS_HOPRFIM
				Else
					dFIM := STS->TS_DTMRFIM
					hFIM := STS->TS_HOMRFIM
				Endif

				nREA := NGCALEBEM(dINI, hINI, dFIM, hFIM, STS->TS_CODBEM)
				nREA := HtoM(nREA)/60
				nREA := If(nREA < 0.00, 0.00, nREA)

				lPARADA := .T.
				If STS->(FIELDPOS("TS_PARADA")) > 0
					If STS->TS_PARADA == "N"
						lPARADA := .F.
					Endif
				Endif

				If lPARADA
					dbSelectArea(cTRB2)
					If !dbSeek(STS->TS_ORDEM + STS->TS_PLANO)
						DbAppend()
						(cTRB2)->ORDEM  := STS->TS_ORDEM
						(cTRB2)->PLANO  := STS->TS_PLANO
					Endif
					(cTRB2)->QUANTPRE := (cTRB2)->QUANTPRE + nPRE
					(cTRB2)->QUANTREA := (cTRB2)->QUANTREA + nREA
					(cTRB2)->VALORPRE := (cTRB2)->VALORPRE + (nPRE * ST9->T9_CUSTOHO)
					(cTRB2)->VALORREA := (cTRB2)->VALORREA + (nREA * ST9->T9_CUSTOHO)
				Endif
			Endif
		EndIf
	Endif
Return
//------------------------------------------------------------------------------
/*/{Protheus.doc} NGCUSTSTS2
Calcula o Custo das O.S dos Filhos da Estrutura(STS)
@author Elisangela Costa
@since 26/09/02
@version undefined
@param aEstrutura, array
@param nBEMPAI, numeric
@type function
/*/
//------------------------------------------------------------------------------
Function NGCUSTSTS2(aEstrutura,nBEMPAI)
	Local i := 0
	For i := 1 to len(aEstrutura)
		dbSelectArea("STS")
		dbSetOrder(02)
		dbSeek(xFILIAL("STS")+"B"+aEstrutura[i][1])
		Do While !EoF() .And. STS->TS_FILIAL == xFILIAL("STS")     .And.;
		STS->TS_TIPOOS == "B" .And. STS->TS_CODBEM == aEstrutura[i][1]

			If STS->TS_SITUACA != "L"
				dbSkip()
				Loop
			EndIf

			// Considera Data ( Da O.S. )
			If MV_PAR17 == 1

				// Considera se a data real fim da O.S. está contida no range definido por parâmetro.
				If STS->TS_DTMRFIM  < aEstrutura[i,3] .Or. STS->TS_DTMRFIM > aEstrutura[i,4]

					dbSelectArea("STS")
					dbSkip()
					Loop

				EndIf

			EndIf

			If STS->TS_SERVICO < MV_PAR05 .OR. STS->TS_SERVICO > MV_PAR06
				dbSkip()
				Loop
			EndIf

			If !Empty(nBEMPAI)
				dbSelectArea(cTRB)
				dbSetOrder(1)
				If !(cTRB)->(dbSeek(nBEMPAI))
					(cTRB)->(DbAppend())
					(cTRB)->CODBEM := nBEMPAI
					(cTRB)->ORDEM  := ''//STJ->TJ_ORDEM
					(cTRB)->PLANO  := ''//STJ->TJ_PLANO
				EndIf
			EndIf

			dbSelectArea(cTRB4)
			If dbSeek(STS->TS_CODBEM+STS->TS_ORDEM+STS->TS_PLANO)
				dbSelectArea("STS")
				dbSkip()
				Loop
			Else
				dbSelectArea(cTRB4)
				(cTRB4)->(DbAppend())
				(cTRB4)->CODBEM := STS->TS_CODBEM
				(cTRB4)->ORDEM  := STS->TS_ORDEM
				(cTRB4)->PLANO  := STS->TS_PLANO

				//Grava os dados das O.S dos filhos da Estrutura(STS)
				GRAVSTS840(STS->TS_ORDEM,STS->TS_PLANO,nBEMPAI,aEstrutura[i][3],aEstrutura[i][4])

				dbSelectArea("STS")
				dbSkip()
			EndIf
		EndDo
	Next i
Return
//------------------------------------------------------------------------------
/*/{Protheus.doc} GRAVSTS840
Grava o Custo das O.S dos Filhos da Estrutura  do STS
@author Elisangela Costa
@since 12/09/02
@version undefined
@param nOS, numeric
@param nPLANO, numeric
@param nBEMP, numeric
@param dDTAINI, date
@param dDTAFIM, date
@type function
/*/
//------------------------------------------------------------------------------
Function GRAVSTS840(nOS,nPLANO,nBEMP,dDTAINI,dDTAFIM)


	dbSelectArea("STT")
	dbSeek( xFilial("STT") + STS->TS_ORDEM + STS->TS_PLANO)
	DO While !EoF() .And. STT->TT_FILIAL == xFILIAL("STT")  .And.;
	STT->TT_ORDEM  == nOS                          .And. ;
	STT->TT_PLANO  == nPLANO

		If MV_PAR17 = 2
			If STT->TT_DTINICI < dDTAINI .Or. STT->TT_DTINICI > dDTAFIM
				dbSkip()
				Loop
			EndIf
		EndIf

		//Calcula o custo do Insumo
		MNTA901STT()

		If (STT->TT_TIPOREG == "P" .and. MV_PAR07 != 1) .or.;
		(STT->TT_TIPOREG == "F" .and. MV_PAR08 != 1) .or.;
		(STT->TT_TIPOREG == "M" .and. MV_PAR09 != 1) .or.;
		(STT->TT_TIPOREG == "T" .and. MV_PAR10 != 1)
			dbSkip()
			Loop
		Endif

		nEXTRA   := If(MV_PAR11 == 2, 1+( If(NGCADICBASE('TT_PCTHREX','A','STT',.F.),STT->TT_PCTHREX,VAL(STT->TT_HREXTRA)) /100), 1)
		aVETCUST := NGCUSTSTAN(STT->TT_CODIGO,STT->TT_TIPOREG,nExtra,MV_PAR13)

		nCUSTO   := aVETCUST[1] //Custo standard
		cNOMTIPO := aVETCUST[2] //Nome do tipo de insumo
		cTIPOREG := aVETCUST[3] //Tipo do Insumo
		cNOME    := aVETCUST[4] //Nome do Insumo
		cCODPROD := aVETCUST[5] //Codigo do insumo

		If NGCADICBASE("TS_MMSYP","A","STS",.F.)
			cObs := NGMEMOSYP(STS->TS_MMSYP)
		Else
			cObs := STS->TS_OBSERVA
		EndIf

		ckey := nBEMP + STS->TS_CODBEM + STS->TS_ORDEM + STS->TS_PLANO + cTIPOREG + cCODPROD

		If !(cTRB3)->(dbSeek(cKey))
			(cTRB3)->(DbAppend())
			(cTRB3)->BEMPAI   := nBEMP
			(cTRB3)->CODBEM   := STS->TS_CODBEM
			(cTRB3)->ORDEM    := STS->TS_ORDEM
			(cTRB3)->PLANO    := STS->TS_PLANO
			(cTRB3)->SERVICO  := STS->TS_SERVICO
			(cTRB3)->SEQRELA  := STS->TS_SEQRELA
			(cTRB3)->TIPOREG  := cTIPOREG
			(cTRB3)->NOMTIPO  := cNOMTIPO
			(cTRB3)->PRODUTO  := STT->TT_CODIGO
			(cTRB3)->NOMPROD  := cNOME
			(cTRB3)->OBS      := cObs
			If !Empty(STL->TL_DTINICI)
				(cTRB3)->ORIGI    := STL->TL_DTINICI
			Else
				(cTRB3)->ORIGI    := STJ->TJ_DTMPINI
			EndIf

		Endif

		vVETHORAS := NGTQUATINS(STT->TT_CODIGO,STT->TT_TIPOREG,STT->TT_USACALE,;
		STT->TT_QUANTID,STT->TT_TIPOHOR,STT->TT_DTINICI,;
		STT->TT_HOINICI,STT->TT_DTFIM,STT->TT_HOFIM,STT->TT_UNIDADE)
		nQTDHORAS := vVETHORAS[1]

		If MV_PAR11 == 1
			nCUSTO := STT->TT_CUSTO * nEXTRA
		Else
			nCUSTO := nCUSTO * nQTDHORAS
		Endif

		If Alltrim(STT->TT_SEQRELA) = "0"
			(cTRB3)->QUANTPRE += nQTDHORAS
			(cTRB3)->UNIDPRE  := STT->TT_UNIDADE
			(cTRB3)->VALORPRE += nCUSTO
		Else
			(cTRB3)->QUANTREA += nQTDHORAS
			(cTRB3)->UNIDREA  := STT->TT_UNIDADE
			(cTRB3)->VALORREA += nCUSTO
		EndIf
		dbSelectArea("STT")
		dbSkip()
	EndDo
	dbSelectArea("ST9")
	dbSetOrder(01)
	dbSeek(xFILIAL("ST9")+STS->TS_CODBEM)
	If !Empty(ST9->T9_CUSTOHO)
		If MV_PAR12 == 2
			dbSelectArea("STF")
			dbSeek(xFilial("STF") + STS->TS_CODBEM + STS->TS_SERVICO + STS->TS_SEQRELA)
			If STF->TF_PARADA == "S" .or. STS->TS_PLANO == "000000"
				If !Empty(STS->TS_DTPPINI)
					dINI := STS->TS_DTPPINI
					hINI := STS->TS_HOPPINI
				Else
					dINI := STS->TS_DTMPINI
					hINI := STS->TS_HOMPINI
				Endif
				If !Empty(STS->TS_DTPPFIM)
					dFIM := STS->TS_DTPPFIM
					hFIM := STS->TS_HOPPFIM
				Else
					dFIM := STS->TS_DTMPFIM
					hFIM := STS->TS_HOMPFIM
				Endif
				nPRE := NGCALEBEM(dINI, hINI, dFIM, hFIM, STS->TS_CODBEM)
				nPRE := HtoM(nPRE)/60
				nPRE := If(nPRE < 0.00, 0.00, nPRE)
				If !Empty(STS->TS_DTPRINI)
					dINI := STS->TS_DTPRINI
					hINI := STS->TS_HOPRINI
				Else
					dINI := STS->TS_DTMRINI
					hINI := STS->TS_HOMRINI
				Endif
				If !Empty(STS->TS_DTPRFIM)
					dFIM := STS->TS_DTPRFIM
					hFIM := STS->TS_HOPRFIM
				Else
					dFIM := STS->TS_DTMRFIM
					hFIM := STS->TS_HOMRFIM
				Endif

				nREA := NGCALEBEM(dINI, hINI, dFIM, hFIM, STS->TS_CODBEM)
				nREA := HtoM(nREA)/60
				nREA := If(nREA < 0.00, 0.00, nREA)

				lPARADA := .T.
				If STS->(FIELDPOS("TS_PARADA")) > 0
					If STS->TS_PARADA == "N"
						lPARADA := .F.
					Endif
				Endif

				If lPARADA
					dbSelectArea(cTRB2)
					If !dbSeek(STS->TS_ORDEM + STS->TS_PLANO)
						DbAppend()
						(cTRB2)->ORDEM  := STS->TS_ORDEM
						(cTRB2)->PLANO  := STS->TS_PLANO
					Endif
					(cTRB2)->QUANTPRE := (cTRB2)->QUANTPRE + nPRE
					(cTRB2)->QUANTREA := (cTRB2)->QUANTREA + nREA
					(cTRB2)->VALORPRE := (cTRB2)->VALORPRE + (nPRE * ST9->T9_CUSTOHO)
					(cTRB2)->VALORREA := (cTRB2)->VALORREA + (nREA * ST9->T9_CUSTOHO)
				Endif
			Endif
		EndIf
	Endif

	If !Empty(nBEMP)
		dbSelectArea(cTRB)
		dbSetOrder(1)
		If !(cTRB)->(dbSeek(nBEMP))
			(cTRB)->(DbAppend())
			(cTRB)->CODBEM := nBEMP
			(cTRB)->ORDEM  := ''//STJ->TJ_ORDEM
			(cTRB)->PLANO  := ''//STJ->TJ_PLANO
		EndIf
	EndIf

Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR840TRB
Carrega arquivos temporarios.
@author Wagner S. de Lacerda
@since 07/07/2010
@version undefined
@param lRela, logical
@type function
/*/
//------------------------------------------------------------------------------
Static Function MNTR840TRB(lRela)

	Local cQuery    := ""
	Local cAliasQry := ""

	Default lRela := .F.

	aCampos  := {}
		AAdd(aCAMPOS,{"PLANO"    ,"C",06,0})
		AAdd(aCAMPOS,{"CODBEM"   ,"C",16,0})
		AAdd(aCAMPOS,{"SERVICO"  ,"C",06,0})
		AAdd(aCAMPOS,{"SEQRELA"  ,"C",03,0})
		AAdd(aCAMPOS,{"ORDEM"    ,"C",06,0})
		AAdd(aCAMPOS,{"TIPOREG"  ,"C",01,0})
		AAdd(aCAMPOS,{"NOMTIPO"  ,"C",04,0})
		AAdd(aCAMPOS,{"PRODUTO"  ,"C",TamSX3("TL_CODIGO")[1],0})
		AAdd(aCAMPOS,{"NOMPROD"  ,"C",40,0})
		AAdd(aCAMPOS,{"QUANTPRE" ,"N",TamSX3("TL_QUANTID")[1],2})
		AAdd(aCAMPOS,{"UNIDPRE"  ,"C",03,0})
		AAdd(aCAMPOS,{"VALORPRE" ,"N",TamSX3("TL_CUSTO")[1],2})
		AAdd(aCAMPOS,{"QUANTREA" ,"N",TamSX3("TL_QUANTID")[1],2})
		AAdd(aCAMPOS,{"UNIDREA"  ,"C",03,0})
		AAdd(aCAMPOS,{"VALORREA" ,"N",TamSX3("TL_CUSTO")[1],2})
		AAdd(aCAMPOS,{"OBS"      ,"M",10,0})
		AAdd(aCAMPOS,{"ORIGI"    ,"D",08,0})


	//Instancia classe FWTemporaryTable
	oTmpTbl1:= FWTemporaryTable():New( cTRB, aCAMPOS )
	//Cria indices
	oTmpTbl1:AddIndex( "Ind01" , {"CODBEM","ORDEM","TIPOREG","PRODUTO"} )
//	oTmpTbl1:AddIndex( "Ind02" , {"CODBEM"} )// error in parameter aFields: IndexKey already exist on
	//Cria a tabela temporaria
	oTmpTbl1:Create()



	aCampos  := {}
		AAdd(aCAMPOS,{"PLANO"    ,"C",06,0})
		AAdd(aCAMPOS,{"ORDEM"    ,"C",06,0})
		AAdd(aCAMPOS,{"QUANTPRE" ,"N",TamSX3("TL_QUANTID")[1],2})
		AAdd(aCAMPOS,{"VALORPRE" ,"N",TamSX3("TL_CUSTO")[1],2})
		AAdd(aCAMPOS,{"QUANTREA" ,"N",TamSX3("TL_QUANTID")[1],2})
		AAdd(aCAMPOS,{"VALORREA" ,"N",TamSX3("TL_CUSTO")[1],2})


	//Instancia classe FWTemporaryTable
	oTmpTbl2  := FWTemporaryTable():New( cTRB2, aCAMPOS )
	//Cria indices
	oTmpTbl2:AddIndex( "Ind01" , {"ORDEM","PLANO"}  )
	//Cria a tabela temporaria
	oTmpTbl2:Create()

	//ARQUIVO DE TRABALHO DE GRAVACAO DOS FILHOS DO PAI DA ESTRUTURA
	aCAMPOS := {}
		AADD(aCAMPOS,{"BEMPAI"   ,"C",16,0})
		AAdd(aCAMPOS,{"CODBEM"   ,"C",16,0})
		AAdd(aCAMPOS,{"ORDEM"    ,"C",06,0})
		AAdd(aCAMPOS,{"PLANO"    ,"C",06,0})
		AAdd(aCAMPOS,{"SERVICO"  ,"C",06,0})
		AAdd(aCAMPOS,{"SEQRELA"  ,"C",03,0})
		AAdd(aCAMPOS,{"TIPOREG"  ,"C",01,0})
		AAdd(aCAMPOS,{"NOMTIPO"  ,"C",04,0})
		AAdd(aCAMPOS,{"PRODUTO"  ,"C",TamSX3("TL_CODIGO")[1],0})
		AAdd(aCAMPOS,{"NOMPROD"  ,"C",40,0})
		AAdd(aCAMPOS,{"QUANTPRE" ,"N",TamSX3("TL_QUANTID")[1],2})
		AAdd(aCAMPOS,{"UNIDPRE"  ,"C",03,0})
		AAdd(aCAMPOS,{"VALORPRE" ,"N",TamSX3("TL_CUSTO")[1],2})
		AAdd(aCAMPOS,{"QUANTREA" ,"N",TamSX3("TL_QUANTID")[1],2})
		AAdd(aCAMPOS,{"UNIDREA"  ,"C",03,0})
		AAdd(aCAMPOS,{"VALORREA" ,"N",TamSX3("TL_CUSTO")[1],2})
		AAdd(aCAMPOS,{"OBS"      ,"M",10,0})
		AAdd(aCAMPOS,{"ORIGI"    ,"D",08,0})

	//Intancia classe FWTemporaryTable
	oTmpTbl3 := FWTemporaryTable():New( cTRB3, aCAMPOS )
	//Cria indices
	oTmpTbl3:AddIndex( "Ind01" , {"BEMPAI","CODBEM","ORDEM","PLANO","TIPOREG","PRODUTO"}  )
	//Cria a tabela temporaria
	oTmpTbl3:Create()


	//ARQUIVO DE TRABALHO PARA VERIFICAR SE A O.S JA FOI LIDA
	aCAMPOS := {}
		AADD(aCAMPOS,{"CODBEM" ,"C",16,0})
		AADD(aCAMPOS,{"ORDEM"  ,"C",06,0})
		AADD(aCAMPOS,{"PLANO"  ,"C",06,0})


	//Instancia classe FWTemporaryTable
	oTmpTbl4 := FWTemporaryTable():New( cTRB4, aCAMPOS )
	//Cria indices
	oTmpTbl4:AddIndex( "Ind01" , {"CODBEM","ORDEM","PLANO"}  )
	//Cria a tabela temporaria
	oTmpTbl4:Create()


	//³ Posiciona os arquivos para processamento                                ³
	dbSelectArea("STL")
	dbSetOrder(1)

	dbSelectArea("STT")
	dbSetOrder(1)

	cAliasQry := GetNextAlias()
	cQuery    := MNT840MTSQ()
	cQuery    := ChangeQuery(cQuery)
	dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)

	While !((cAliasQry)->(Eof()))

		If !lRela
			SetRegua(LastRec())
		Else
			ProcRegua(LastRec())
		EndIf

		dbSelectArea("STJ")
		dbSetOrder(02)
		If dbSeek( xFilial("STJ") + "B" + (cAliasQry)->T9_CODBEM,.T.)
			If !lRela
				SetRegua(LastRec())
			Else
				ProcRegua(LastRec())
			EndIf

			Do While !EoF() .And. STJ->TJ_FILIAL == xFilial("STJ") .And. STJ->TJ_TIPOOS = "B"  .And. STJ->TJ_CODBEM = (cAliasQry)->T9_CODBEM

				If !lRela
					IncRegua()
				Else
					IncProc()
				EndIf

				If MV_PAR14 <> 5
					If MV_PAR14 = 1  //Finalizadas(L/S) e Liberadas(L/N)
						If STJ->TJ_SITUACA != "L"
							dbSkip()
							Loop
						EndIf
					ElseIf MV_PAR14 = 2 //Finalizadas(L/S) e Pendentes(P/N)
						If STJ->TJ_SITUACA == "L" .Or.;
						STJ->TJ_SITUACA == "C"
							dbSkip()
							Loop
						EndIf
					ElseIf MV_PAR14 = 3 //Finalizadas(L/S) e Ambas (Pendentes e Liberadas - L/N e P/N))
						If STJ->TJ_SITUACA == "C" .or. STJ->TJ_TERMINO == "S"
							dbSkip()
							Loop
						EndIf
					ElseIf MV_PAR14 = 4 //Finalizadas(L/S)
						If STJ->TJ_SITUACA <> "L" .Or. STJ->TJ_TERMINO <> "S"
							dbSkip()
							Loop
						EndIf
					EndIf
				Endif

				// Considera Data ( Da O.S. )
				If MV_PAR17 == 1

					If STJ->TJ_SITUACA == 'L' .And. STJ->TJ_TERMINO == 'S'

						// Considera se a data real fim da O.S. está contida no range definido por parâmetro.
						If STJ->TJ_DTMRFIM < MV_PAR03 .Or. STJ->TJ_DTMRFIM > MV_PAR04
							dbSkip()
							Loop
						EndIf

					Else

						If STJ->TJ_DTMPINI < MV_PAR03 .Or. STJ->TJ_DTMPINI > MV_PAR04
							dbSkip()
							Loop
						EndIf

					EndIf

				EndIf

				If STJ->TJ_SERVICO < MV_PAR05 .OR. STJ->TJ_SERVICO > MV_PAR06
					dbSkip()
					Loop
				EndIf
				//VERIFICA SE O PARAMETRO CONSIDERA CUSTO DA ESTRUTURA ESTA COMO SIM
				If MV_PAR16 == 2
					dbSelectArea(cTRB4)
					If dbSeek(STJ->TJ_CODBEM+STJ->TJ_ORDEM+STJ->TJ_PLANO)
						dbSelectArea("STJ")
						dbSkip()
						Loop
					Else
						(cTRB4)->(DbAppend())
						(cTRB4)->CODBEM := STJ->TJ_CODBEM
						(cTRB4)->ORDEM  := STJ->TJ_ORDEM
						(cTRB4)->PLANO  := STJ->TJ_PLANO

						dbSelectArea(cTRB)
						dbSetOrder(1)
						If !dbSeek(STJ->TJ_CODBEM)

							cBEMSTJ := STJ->TJ_CODBEM

							aRet  := { }
							lPai := .F.
							aRet := NGBEMPER(STJ->TJ_CODBEM,MV_PAR03,MV_PAR04)

							dbSelectArea("STJ")
							nRegis := Recno()

							//Calcula o Custo das O.S do Pai da Estrutura
							NGCUSTSTJ1()

							If !Empty(aRet)
								//Calcula o Custo dos Filhos da Estrutura do STJ
								NGCUSTSTJ2(aRet,STJ->TJ_CODBEM,lRela)

								// Verifica no Historico e calcula as O.S dos Filhos da Estrutura
								NGCUSTSTS2( aRet, cBEMSTJ )
								dbSelectArea("STJ")
								dbGoto(nRegis)
								dbSetOrder(02)
							EndIf
						Else
							//Calcula o Custo das O.S do Pai da Estrutura
							NGCUSTSTJ1()
						EndIf
					EndIf
				Else
					dbSelectArea("STJ")
					NGCUSTSTJ1()
				EndIf
				dbSelectArea("STJ")
				dbSkip()
			EndDo

		ElseIf MV_PAR16 == 2

			aRet  := { }
			lPai := .F.
			aRet := NGBEMPER((cAliasQry)->T9_CODBEM,MV_PAR03,MV_PAR04)

			If !lRela
				IncRegua()
			Else
				IncProc()
			EndIf

			If !Empty(aRet)

				//Calcula o Custo dos Filhos da Estrutura do STJ
				NGCUSTSTJ2(aRet,(cAliasQry)->T9_CODBEM,lRela)

				// Verifica no Historico e calcula as O.S dos Filhos da Estrutura
				NGCUSTSTS2( aRet, (cAliasQry)->T9_CODBEM )

			EndIf

		EndIf

		(cAliasQry)->(dbSkip())

	EndDo

	dbSelectArea("STS")
	dbSetOrder(02)
	dbSeek(xFilial("STS")+"B" + MV_PAR01,.T.)
	If !lRela
		SetRegua(LastRec())
	Else
		ProcRegua(LastRec())
	EndIf

	Do While !EoF() .And. STS->TS_FILIAL == xFilial("STS") .And. ;
	STS->TS_TIPOOS = "B" .And. STS->TS_CODBEM <= MV_PAR02

		If !lRela
			IncRegua()
		Else
			IncProc()
		EndIf

		If MNT045STB( STJ->TJ_CODBEM, vFilTRB[2] )
			dbSelectArea("STS")
			dbSkip()
			Loop
		EndIf

		If STS->TS_SITUACA != "L"
			dbSkip()
			Loop
		EndIf

		// Considera Data ( Da O.S. )
		If MV_PAR17 == 1

			// Considera se a data real fim da O.S. está contida no range definido por parâmetro.
			If STS->TS_DTMRFIM < MV_PAR03 .OR. STS->TS_DTMRFIM > MV_PAR04
				dbSkip()
				Loop
			EndIf

		EndIf

		If STS->TS_SERVICO < MV_PAR05 .OR. STS->TS_SERVICO > MV_PAR06
			dbSkip()
			Loop
		EndIf
		//VERIFICA SE O PARAMETRO CONSIDERA CUSTO DA ESTRUTURA ESTA COMO SIM
		If MV_PAR16 == 2
			dbSelectArea(cTRB4)
			If dbSeek(STS->TS_CODBEM+STS->TS_ORDEM+STS->TS_PLANO)
				dbSelectArea("STS")
				dbSkip()
				Loop
			Else
				(cTRB4)->(DbAppend())
				(cTRB4)->CODBEM := STS->TS_CODBEM
				(cTRB4)->ORDEM  := STS->TS_ORDEM
				(cTRB4)->PLANO  := STS->TS_PLANO

				cBEMSTS := STS->TS_CODBEM

				aRet  := { }
				lPai := .F.
				aRet := NGBEMPER(STS->TS_CODBEM,MV_PAR03,MV_PAR04)

				dbSelectArea("STS")
				nRegis := Recno()

				//Calcula o Custo das O.S do Pai da Estrutura
				NGCUSTSTS1()

				If !Empty(aRet)

					//Calcula o Custo dos Filhos da Estrutura no STS
					NGCUSTSTS2( aRet, STS->TS_CODBEM )

					//Verifica e Calcula o Custo dos Filhos da Estrutura no STJ
					NGCUSTSTJ2(aRet,cBEMSTS,lRela)

					dbSelectArea("STS")
					DbGoto(nRegis)
					dbSetOrder(02)
				EndIf
			EndIf
		Else
			dbSelectArea("STS")
			NGCUSTSTS1()
		EndIf
		dbSelectArea("STS")
		dbSkip()
	EndDo

Return
//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR840SEC
 Monta as secoes.
@author Wagner S. de Lacerda
@since 12/07/2010
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Static Function MNTR840SEC()

	// Devido a possibilidade de alteração no tamanho do campo TL_QUANTID,TL_CUSTO
	// é necessário que seja verificada a picture no dicionário
	Local cPictuQnt  := X3Picture( 'TL_QUANTID' )
	Local cPictuCus  := X3Picture( 'TL_CUSTO' )
	Local cPic20     := '@E 99,999,999,999,999,999.99'
	Local aCells     := {}
	Local lApField   := FwProtectedDataUtil():IsFieldInList('TL_CUSTO')
	Local cPicture   := Iif( lApField, '@!', Nil )

	//***********SE PARAMETRO Apresentação ? = Nível Insumo
	If MV_PAR15 = 1

		//***********SE PARAMETRO CONSIDERA ESTRUTURA = SIM
		If MV_PAR16 = 2

			//--------------------------------------------------------------------------------------------------------------------------
			//| BEM PAI                                                                                                                |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection1 := TRSection():New(oReport, STR0053,{(cTRB),"ST9"}) // "Bem Pai"
			TRCell():New(oSection1,"(cTRB)->CODBEM" ,(cTRB)  ,STR0053 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Bem Pai"
			TRCell():New(oSection1,"ST9->T9_NOME"	,"ST9"   ,STR0066 ,"@!"   ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
			TRPosition():New(oSection1,"ST9",1,{|| xFilial("ST9")+(cTRB)->CODBEM})

			//--------------------------------------------------------------------------------------------------------------------------
			//| ORDEM DE SERVICO DO BEM PAI                                                                                            |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection2 := TRSection():New(oReport, STR0054,{(cTRB),"ST4","STJ"}) // "O.S. Bem Pai"
			TRCell():New(oSection2,"(cTRB)->ORDEM"         ,(cTRB)  ,STR0067 ,"@!"           ,08   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Ordem"
			TRCell():New(oSection2,"ST4->T4_NOME"          ,"ST4"   ,STR0068 ,"@!"           ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Servico"
			TRCell():New(oSection2,"DTOC((cTRB)->ORIGI)"   ,(cTRB)  ,STR0069 ,"99/99/9999"   ,12   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Data"
			TRCell():New(oSection2,"(cTRB)->OBS"           ,(cTRB)  ,STR0070 ,"@!"           ,60   ,/*lPixel*/   ,{|| MemoLine((cTRB)->OBS,60,nX) }) //"Obs"
			TRPosition():New(oSection2,"STJ",1,{|| xFilial("STJ")+(cTRB)->ORDEM})
			TRPosition():New(oSection2,"ST4",1,{|| xFilial("ST4")+STJ->TJ_SERVICO})

			//--------------------------------------------------------------------------------------------------------------------------
			//| INSUMO DO BEM PAI                                                                                                      |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection3 := TRSection():New(oReport, STR0055,{(cTRB)}) // "Insumos Bem Pai"
			TRCell():New(oSection3,"(cTRB)->NOMTIPO"   ,(cTRB)  ,STR0071 ,"@!"  		    ,04   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Tipo"
			TRCell():New(oSection3,"(cTRB)->PRODUTO"   ,(cTRB)  ,STR0072 ,"@!"   		    ,30   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Codigo Insumo"
			TRCell():New(oSection3,"(cTRB)->NOMPROD"   ,(cTRB)  ,STR0073 ,"@!"   		    ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome Insumo"
			TRCell():New(oSection3,"PREVQTDE"          ,""      ,STR0074 ,cPictuQnt         ,16   ,/*lPixel*/   ,{|| If((cTRB)->TIPOREG <> "P",NGRHODSEXN((cTRB)->QUANTPRE,"D"),(cTRB)->QUANTPRE) }) //"Qtde. Prev."
			TRCell():New(oSection3,"(cTRB)->UNIDPRE"   ,(cTRB)  ,STR0075 ,"@!"   		    ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Unidade"
			TRCell():New(oSection3,"(cTRB)->VALORPRE"  ,(cTRB)  ,STR0076 ,cPictuCus         ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Prev."
			TRCell():New(oSection3,"REALQTDE"          ,""      ,STR0079 ,cPictuQnt         ,16   ,/*lPixel*/   ,{|| If((cTRB)->TIPOREG <> "P",NGRHODSEXN((cTRB)->QUANTREA,"D"),(cTRB)->QUANTREA) }) //"Qtde. Real."
			TRCell():New(oSection3,"(cTRB)->UNIDREA"   ,(cTRB)  ,STR0075 ,"@!"   		    ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Unidade"
			TRCell():New(oSection3,"(cTRB)->VALORREA"  ,(cTRB)  ,STR0077 ,cPictuCus         ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Real."
			TRCell():New(oSection3,"DIFFVAR"           ,""      ,STR0078 ,cPictuCus         ,16   ,/*lPixel*/   ,{|| nDIF }) //"Diferenca"
			TRCell():New(oSection3,"PORCENT"           ,""      ,STR0097 ,cPictuCus         ,16   ,/*lPixel*/   ,{|| nPER }) //"Var. %"
			oSection3:Cell("PREVQTDE"):SetHeaderAlign("RIGHT")
			oSection3:Cell("(cTRB)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection3:Cell("REALQTDE"):SetHeaderAlign("RIGHT")
			oSection3:Cell("(cTRB)->VALORREA"):SetHeaderAlign("RIGHT")
			oSection3:Cell("DIFFVAR"):SetHeaderAlign("RIGHT")
			oSection3:Cell("PORCENT"):SetHeaderAlign("RIGHT")

			If lApField

				aCells := {}
				aAdd( aCells, "(cTRB)->VALORPRE" )
				aAdd( aCells, "(cTRB)->VALORREA" )
				aAdd( aCells, "DIFFVAR" )

				oSection3:SetObfuscCells(aCells)
			
			EndIf

			//--------------------------------------------------------------------------------------------------------------------------
			//| CUSTO HORA PARADA BEM                                                                                                  |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection4 := TRSection():New(oReport, STR0056,{(cTRB2)}) // "Custo Hora Parada Bem"
			TRCell():New(oSection4,""                  ,""        ,STR0056 ,"@!"                 ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Hora Parada Bem"
			TRCell():New(oSection4,"PREVQTDE"          ,""        ,""      ,cPictuQnt            ,16   ,/*lPixel*/   ,{|| NGRHODSEXN((cTRB2)->QUANTPRE,"D") })
			TRCell():New(oSection4,"(cTRB2)->VALORPRE" ,(cTRB2)   ,""      ,cPictuCus            ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)
			TRCell():New(oSection4,"REALQTDE"          ,""        ,""      ,cPictuQnt            ,16   ,/*lPixel*/   ,{|| NGRHODSEXN((cTRB2)->QUANTREA,"D") })
			TRCell():New(oSection4,"(cTRB2)->VALORREA" ,(cTRB2)   ,""      ,cPictuCus            ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)
			oSection4:Cell("PREVQTDE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("(cTRB2)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("REALQTDE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("(cTRB2)->VALORREA"):SetHeaderAlign("RIGHT")

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DA O.S. DO BEM PAI                                                                                               |
			//--------------------------------------------------------------------------------------------------------------------------
			oBreakOP := TRBreak():New(oSection2,oSection2:Cell("(cTRB)->ORDEM"),STR0062,.F.)//"Total da O.S. do Bem Pai"
			TRFunction():New(oSection3:Cell("(cTRB)->VALORPRE") ,/*cId*/,"ONPRINT",oBreakOP,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nORDPRE) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("(cTRB)->VALORREA") ,/*cId*/,"ONPRINT",oBreakOP,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nORDREA) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("DIFFVAR")          ,/*cId*/,"ONPRINT",oBreakOP,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("PORCENT")          ,/*cId*/,"ONPRINT",oBreakOP,/*cTitle*/,/*cPicture*/,{|| nPER }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DO BEM PAI                                                                                                       |
			//--------------------------------------------------------------------------------------------------------------------------
			oBreakTP := TRBreak():New(oSection1,oSection1:Cell("(cTRB)->CODBEM"),STR0063,.F.)//"Total do Bem Pai"
			TRFunction():New(oSection3:Cell("(cTRB)->VALORPRE") ,/*cId*/,"ONPRINT",oBreakTP,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMPRE) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("(cTRB)->VALORREA") ,/*cId*/,"ONPRINT",oBreakTP,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMREA) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("DIFFVAR")          ,/*cId*/,"ONPRINT",oBreakTP,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF1) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("PORCENT")          ,/*cId*/,"ONPRINT",oBreakTP,/*cTitle*/,/*cPicture*/,{|| nPER1 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| BEM FILHO                                                                                                              |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection5 := TRSection():New(oReport, STR0057,{(cTRB3),"ST9"}) // "Bem Filho"
			TRCell():New(oSection5,"(cTRB3)->CODBEM" ,(cTRB3)  ,STR0057 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Bem Filho"
			TRCell():New(oSection5,"ST9->T9_NOME"    ,"ST9"    ,STR0066 ,"@!"   ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
			TRPosition():New(oSection5,"ST9",1,{|| xFilial("ST9")+(cTRB3)->CODBEM})

			//--------------------------------------------------------------------------------------------------------------------------
			//| ORDEM DE SERVICO DO BEM FILHO                                                                                          |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection6 := TRSection():New(oReport, STR0058,{(cTRB3),"ST4","STJ"}) // "O.S. Bem Filho"
			TRCell():New(oSection6,"(cTRB3)->ORDEM"         ,(cTRB3)   ,STR0067 ,"@!"           ,08   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Ordem"
			TRCell():New(oSection6,"ST4->T4_NOME"           ,"ST4"    ,STR0068  ,"@!"           ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Servico"
			TRCell():New(oSection6,"DTOC((cTRB3)->ORIGI)"   ,(cTRB3)  ,STR0069  ,"99/99/9999"   ,12   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Data"
			TRCell():New(oSection6,"(cTRB3)->OBS"           ,(cTRB3)   ,STR0070 ,"@!"           ,60   ,/*lPixel*/   ,{|| MemoLine((cTRB3)->OBS,60,nX) }) //"Obs"
			TRPosition():New(oSection6,"STJ",1,{|| xFilial("STJ")+(cTRB3)->ORDEM})
			TRPosition():New(oSection6,"ST4",1,{|| xFilial("ST4")+STJ->TJ_SERVICO})

			//--------------------------------------------------------------------------------------------------------------------------
			//| INSUMO DO BEM FILHO                                                                                                    |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection7 := TRSection():New(oReport, STR0059,{(cTRB3)}) // "Insumos Bem Filho"
			TRCell():New(oSection7,"(cTRB3)->NOMTIPO"   ,(cTRB3)   ,STR0071 ,"@!"   		   ,04   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Tipo"
			TRCell():New(oSection7,"(cTRB3)->PRODUTO"   ,(cTRB3)   ,STR0072 ,"@!"   		   ,30   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Codigo Insumo"
			TRCell():New(oSection7,"(cTRB3)->NOMPROD"   ,(cTRB3)   ,STR0073 ,"@!"   		   ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome Insumo"
			TRCell():New(oSection7,"PREVQTDE"        	,""        ,STR0074 ,cPictuQnt         ,16   ,/*lPixel*/   ,{|| If((cTRB3)->TIPOREG <> "P",NGRHODSEXN((cTRB3)->QUANTPRE,"D"),(cTRB3)->QUANTPRE) }) //"Qtde. Prev."
			TRCell():New(oSection7,"(cTRB3)->UNIDPRE"   ,(cTRB3)   ,STR0075 ,"@!"   		   ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Unidade"
			TRCell():New(oSection7,"(cTRB3)->VALORPRE"  ,(cTRB3)   ,STR0076 ,cPictuCus         ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Prev."
			TRCell():New(oSection7,"REALQTDE"        	,""        ,STR0079 ,cPictuQnt         ,16   ,/*lPixel*/   ,{|| If((cTRB3)->TIPOREG <> "P",NGRHODSEXN((cTRB3)->QUANTREA,"D"),(cTRB3)->QUANTREA) }) //"Qtde. Real."
			TRCell():New(oSection7,"(cTRB3)->UNIDREA"   ,(cTRB3)   ,STR0075 ,"@!"   		   ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Unidade"
			TRCell():New(oSection7,"(cTRB3)->VALORREA"  ,(cTRB3)   ,STR0077 ,cPictuCus         ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Real."
			TRCell():New(oSection7,"DIFFVAR"         	,""        ,STR0078 ,cPictuCus         ,16   ,/*lPixel*/   ,{|| nDIF }) //"Diferenca"
			TRCell():New(oSection7,"PORCENT"         	,""        ,STR0097 ,cPictuCus         ,16   ,/*lPixel*/   ,{|| nPER }) //"Var. %"
			oSection7:Cell("PREVQTDE"):SetHeaderAlign("RIGHT")
			oSection7:Cell("(cTRB3)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection7:Cell("REALQTDE"):SetHeaderAlign("RIGHT")
			oSection7:Cell("(cTRB3)->VALORREA"):SetHeaderAlign("RIGHT")
			oSection7:Cell("DIFFVAR"):SetHeaderAlign("RIGHT")
			oSection7:Cell("PORCENT"):SetHeaderAlign("RIGHT")

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DA O.S. DO BEM FILHO                                                                                             |
			//--------------------------------------------------------------------------------------------------------------------------
			oBreakOF := TRBreak():New(oSection6,oSection6:Cell("(cTRB3)->ORDEM"),STR0064,.F.)//"Total da O.S. do Bem Filho"
			TRFunction():New(oSection7:Cell("(cTRB3)->VALORPRE"),/*cId*/,"ONPRINT",oBreakOF,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nORDPRE) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection7:Cell("(cTRB3)->VALORREA"),/*cId*/,"ONPRINT",oBreakOF,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nORDREA) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection7:Cell("DIFFVAR")          ,/*cId*/,"ONPRINT",oBreakOF,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection7:Cell("PORCENT")          ,/*cId*/,"ONPRINT",oBreakOF,/*cTitle*/,/*cPicture*/,{|| nPER }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DO BEM FILHO                                                                                                     |
			//--------------------------------------------------------------------------------------------------------------------------
			oBreakTF := TRBreak():New(oSection5,oSection5:Cell("(cTRB3)->CODBEM"),STR0065,.F.)//"Total do Bem Filho"
			TRFunction():New(oSection7:Cell("(cTRB3)->VALORPRE"),/*cId*/,"ONPRINT",oBreakTF,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMFPRE) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection7:Cell("(cTRB3)->VALORREA"),/*cId*/,"ONPRINT",oBreakTF,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMFREA) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection7:Cell("DIFFVAR")          ,/*cId*/,"ONPRINT",oBreakTF,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF2) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection7:Cell("PORCENT")          ,/*cId*/,"ONPRINT",oBreakTF,/*cTitle*/,/*cPicture*/,{|| nPER2 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL GERAL DO BEM PAI                                                                                                 |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection8 := TRSection():New(oReport, STR0060,{(cTRB3)}) // "Total Geral do Bem Pai"
			TRCell():New(oSection8,"(cTRB3)->CODBEM"    ,(cTRB3)   ,STR0060 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)

			oBreakTB := TRBreak():New(oSection8,oSection8:Cell("(cTRB3)->CODBEM"),STR0060,.F.)//"Total Geral do Bem Pai"
			TRFunction():New(oSection3:Cell("(cTRB)->VALORPRE")  ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nCBEMPAIP) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("(cTRB)->VALORREA")  ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nCBEMPAIR) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("DIFFVAR")           ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF3) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("PORCENT")           ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,/*cPicture*/,{|| nPER3 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL GERAL                                                                                                            |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection9 := TRSection():New(oReport, STR0061,{(cTRB)}) // "Total Geral"
			TRCell():New(oSection9,"(cTRB)->CODBEM"    ,(cTRB)   ,STR0061 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Total Geral"

			oBreakTG := TRBreak():New(oSection9,oSection9:Cell("(cTRB)->CODBEM"),STR0061,.F.)//"Total Geral"
			TRFunction():New(oSection3:Cell("(cTRB)->VALORPRE")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTP) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("(cTRB)->VALORREA")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTR) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("DIFFVAR")           ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF4) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("PORCENT")           ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,/*cPicture*/,{|| nPER4 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//***********SE PARAMETRO CONSIDERA ESTRUTURA = NAO
		Else

			//--------------------------------------------------------------------------------------------------------------------------
			//| BEM                                                                                                                    |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection1 := TRSection():New(oReport, STR0080,{(cTRB),"ST9"}) // "Bem"
			TRCell():New(oSection1,"(cTRB)->CODBEM"    ,(cTRB)  ,STR0080 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Bem"
			TRCell():New(oSection1,"ST9->T9_NOME"      ,"ST9"   ,STR0066 ,"@!"   ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
			TRPosition():New(oSection1,"ST9",1,{|| xFilial("ST9")+(cTRB)->CODBEM})

			//--------------------------------------------------------------------------------------------------------------------------
			//| ORDEM DE SERVICO                                                                                                       |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection2 := TRSection():New(oReport, STR0083,{(cTRB),"ST4","STJ"}) // "Ordem de Servico"
			TRCell():New(oSection2,"(cTRB)->ORDEM"         ,(cTRB)   ,STR0067 ,"@!"           ,08   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Ordem"
			TRCell():New(oSection2,"ST4->T4_NOME"          ,"ST4"    ,STR0068 ,"@!"           ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Servico"
			TRCell():New(oSection2,"DTOC((cTRB)->ORIGI)"   ,(cTRB)   ,STR0069 ,"99/99/9999"   ,12   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Data"
			TRCell():New(oSection2,"(cTRB)->OBS"           ,(cTRB)   ,STR0070 ,"@!"           ,60   ,/*lPixel*/   ,{|| MemoLine((cTRB)->OBS,60,nX) }) //"Obs"
			TRPosition():New(oSection2,"STJ",1,{|| xFilial("STJ")+(cTRB)->ORDEM})
			TRPosition():New(oSection2,"ST4",1,{|| xFilial("ST4")+STJ->TJ_SERVICO})

			//--------------------------------------------------------------------------------------------------------------------------
			//| INSUMO                                                                                                                 |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection3 := TRSection():New(oReport, STR0084,{(cTRB)}) // "Insumos"
			TRCell():New(oSection3,"(cTRB)->NOMTIPO"   ,(cTRB)   ,STR0071 ,"@!"   			 ,04   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Tipo"
			TRCell():New(oSection3,"(cTRB)->PRODUTO"   ,(cTRB)   ,STR0072 ,"@!"   			 ,30   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Codigo Insumo"
			TRCell():New(oSection3,"(cTRB)->NOMPROD"   ,(cTRB)   ,STR0073 ,"@!"   			 ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome Insumo"
			TRCell():New(oSection3,"PREVQTDE"          ,""       ,STR0074 ,cPictuQnt         ,16   ,/*lPixel*/   ,{|| If((cTRB)->TIPOREG <> "P",NGRHODSEXN((cTRB)->QUANTPRE,"D"),(cTRB)->QUANTPRE) }) //"Qtde. Prev."
			TRCell():New(oSection3,"(cTRB)->UNIDPRE"   ,(cTRB)   ,STR0075 ,"@!"   			 ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Unidade"
			TRCell():New(oSection3,"(cTRB)->VALORPRE"  ,(cTRB)   ,STR0076 ,cPictuCus         ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Prev."
			TRCell():New(oSection3,"REALQTDE"          ,""       ,STR0079 ,cPictuQnt         ,16   ,/*lPixel*/   ,{|| If((cTRB)->TIPOREG <> "P",NGRHODSEXN((cTRB)->QUANTREA,"D"),(cTRB)->QUANTREA) }) //"Qtde. Real."
			TRCell():New(oSection3,"(cTRB)->UNIDREA"   ,(cTRB)   ,STR0075 ,"@!"   			 ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Unidade"
			TRCell():New(oSection3,"(cTRB)->VALORREA"  ,(cTRB)   ,STR0077 ,cPictuCus         ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Real."
			TRCell():New(oSection3,"DIFFVAR"           ,""       ,STR0078 ,cPictuCus         ,16   ,/*lPixel*/   ,{|| nDIF }) //"Diferenca"
			TRCell():New(oSection3,"PORCENT"           ,""       ,STR0097 ,cPictuCus         ,16   ,/*lPixel*/   ,{|| nPER }) //"Var. %"
			oSection3:Cell("PREVQTDE"):SetHeaderAlign("RIGHT")
			oSection3:Cell("(cTRB)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection3:Cell("REALQTDE"):SetHeaderAlign("RIGHT")
			oSection3:Cell("(cTRB)->VALORREA"):SetHeaderAlign("RIGHT")
			oSection3:Cell("DIFFVAR"):SetHeaderAlign("RIGHT")
			oSection3:Cell("PORCENT"):SetHeaderAlign("RIGHT")

			If lApField

				aCells := {}
				aAdd( aCells, "(cTRB)->VALORPRE" )
				aAdd( aCells, "(cTRB)->VALORREA" )
				aAdd( aCells, "DIFFVAR" )

				oSection3:SetObfuscCells(aCells)

			EndIf

			//--------------------------------------------------------------------------------------------------------------------------
			//| CUSTO HORA PARADA BEM                                                                                                  |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection4 := TRSection():New(oReport, STR0056,{(cTRB2)}) // "Custo Hora Parada Bem"
			TRCell():New(oSection4,""                  ,""       ,STR0056 ,"@!"                 ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Hora Parada Bem"
			TRCell():New(oSection4,"PREVQTDE"          ,""       ,""      ,cPictuQnt            ,16   ,/*lPixel*/   ,{|| NGRHODSEXN((cTRB2)->QUANTPRE,"D") })
			TRCell():New(oSection4,"(cTRB2)->VALORPRE" ,(cTRB2)  ,""      ,cPictuCus            ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)
			TRCell():New(oSection4,"REALQTDE"          ,""       ,""      ,cPictuQnt            ,16   ,/*lPixel*/   ,{|| NGRHODSEXN((cTRB2)->QUANTREA,"D") })
			TRCell():New(oSection4,"(cTRB2)->VALORREA" ,(cTRB2)  ,""      ,cPictuCus            ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)
			oSection4:Cell("PREVQTDE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("(cTRB2)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("REALQTDE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("(cTRB2)->VALORREA"):SetHeaderAlign("RIGHT")

			If lApField

				aCells := {}
				aAdd( aCells, "(cTRB2)->VALORPRE" )
				aAdd( aCells, "(cTRB2)->VALORREA" )

				oSection4:SetObfuscCells(aCells)
			
			EndIf

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DA O.S.                                                                                                          |
			//--------------------------------------------------------------------------------------------------------------------------
			oBreakOS := TRBreak():New(oSection2,oSection2:Cell("(cTRB)->ORDEM"),STR0081,.F.)//"Total da O.S."
			TRFunction():New(oSection3:Cell("(cTRB)->VALORPRE") ,"(cTRB)->VALORPRE","ONPRINT",oBreakOS,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nORDPRE) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("(cTRB)->VALORREA") ,"(cTRB)->VALORREA","ONPRINT",oBreakOS,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nORDREA) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("DIFFVAR")       	,"DIFFVAR","ONPRINT",oBreakOS,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("PORCENT")       	,"PORCENT","ONPRINT",oBreakOS,/*cTitle*/,/*cPicture*/,{|| nPER }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DO BEM                                                                                                           |
			//--------------------------------------------------------------------------------------------------------------------------
			oBreakTB := TRBreak():New(oSection1,oSection1:Cell("(cTRB)->CODBEM"),STR0082,.F.)//"Total do Bem"
			TRFunction():New(oSection3:Cell("(cTRB)->VALORPRE") ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMPRE) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/, , , , {||lApField})
			TRFunction():New(oSection3:Cell("(cTRB)->VALORREA") ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMREA) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/, , , , {||!lApField})
			TRFunction():New(oSection3:Cell("DIFFVAR")       ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF1) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/, , , , {||lApField})
			TRFunction():New(oSection3:Cell("PORCENT")       ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,/*cPicture*/,{|| nPER1 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/, , , , {||!lApField})

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL GERAL                                                                                                            |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection5 := TRSection():New(oReport, STR0061,{(cTRB)}) // "Total Geral"
			TRCell():New(oSection5,"(cTRB)->CODBEM"    ,(cTRB)   ,STR0061 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)

			oBreakTG := TRBreak():New(oSection5,oSection5:Cell("(cTRB)->CODBEM"),STR0061,.F.)//"Total Geral"
			TRFunction():New(oSection3:Cell("(cTRB)->VALORPRE")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTP) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/, , , , {||lApField})
			TRFunction():New(oSection3:Cell("(cTRB)->VALORREA")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTR) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/, , , , {||!lApField})
			TRFunction():New(oSection3:Cell("DIFFVAR")           ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF2) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection3:Cell("PORCENT")           ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,/*cPicture*/,{|| nPER2 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

		EndIf
		//***********SE PARAMETRO Apresentação ? = Nível Bem
	ElseIf MV_PAR15 = 2
		If MV_PAR16 = 2

			//--------------------------------------------------------------------------------------------------------------------------
			//| BEM PAI                                                                                                                |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection1 := TRSection():New(oReport, STR0053,{(cTRB),"ST9"}) // "Bem Pai"
			TRCell():New(oSection1,"(cTRB)->CODBEM" ,(cTRB)   ,STR0053 ,"@!"   				 ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Bem Pai"
			TRCell():New(oSection1,"ST9->T9_NOME"   ,"ST9"    ,STR0066 ,"@!"   				 ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
			TRCell():New(oSection1,"PREVCUSTO"      ,""       ,STR0076 ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nBEMPRE }) //"Custo Prev."
			TRCell():New(oSection1,"REALCUSTO"      ,""       ,STR0077 ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nBEMREA }) //"Custo Real."
			TRCell():New(oSection1,"DIFFVAR"        ,""       ,STR0078 ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nDIF }) //"Diferenca"
			TRCell():New(oSection1,"PORCENT"        ,""       ,STR0097 ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nPER }) //"Var. %"
			TRPosition():New(oSection1,"ST9",1,{|| xFilial("ST9")+(cTRB)->CODBEM})
			oSection1:Cell("PREVCUSTO"):SetHeaderAlign("RIGHT")
			oSection1:Cell("REALCUSTO"):SetHeaderAlign("RIGHT")
			oSection1:Cell("DIFFVAR"):SetHeaderAlign("RIGHT")
			oSection1:Cell("PORCENT"):SetHeaderAlign("RIGHT")
			
			If lApField

				aCells := {}
				aAdd( aCells, "PREVCUSTO" )
				aAdd( aCells, "REALCUSTO" )
				aAdd( aCells, "DIFFVAR" )

				oSection1:SetObfuscCells(aCells)
			
			EndIf

			//--------------------------------------------------------------------------------------------------------------------------
			//| BEM FILHO                                                                                                              |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection2 := TRSection():New(oReport, STR0057,{(cTRB3),"ST9"}) // "Bem Filho"
			TRCell():New(oSection2,"(cTRB3)->CODBEM" ,(cTRB3)   ,STR0057 ,"@!"   			   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)
			TRCell():New(oSection2,"ST9->T9_NOME"    ,"ST9"    ,STR0066  ,"@!"   			   ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
			TRCell():New(oSection2,"PREVCUSTO"       ,""       ,STR0076  ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nBEMFPRE }) //"Custo Prev."
			TRCell():New(oSection2,"REALCUSTO"       ,""       ,STR0077  ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nBEMFREA }) //"Custo Real."
			TRCell():New(oSection2,"DIFFVAR"         ,""       ,STR0078  ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nDIF }) //"Diferenca"
			TRCell():New(oSection2,"PORCENT"         ,""       ,STR0097  ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nPER }) //"Var. %"
			TRPosition():New(oSection2,"ST9",1,{|| xFilial("ST9")+(cTRB3)->CODBEM})
			oSection2:Cell("PREVCUSTO"):SetHeaderAlign("RIGHT")
			oSection2:Cell("REALCUSTO"):SetHeaderAlign("RIGHT")
			oSection2:Cell("DIFFVAR"):SetHeaderAlign("RIGHT")
			oSection2:Cell("PORCENT"):SetHeaderAlign("RIGHT")

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DO PAI                                                                                                           |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection3 := TRSection():New(oReport, STR0063,{(cTRB3)}) // "Total do Bem Pai"
			TRCell():New(oSection3,"(cTRB3)->CODBEM"    ,(cTRB3)   ,STR0063 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)

			oBreakTB := TRBreak():New(oSection3,oSection3:Cell("(cTRB3)->CODBEM"),STR0063,.F.)//"Total do Bem PAI"
			TRFunction():New(oSection1:Cell("PREVCUSTO")  ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nCBEMPAIP) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection1:Cell("REALCUSTO")  ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nCBEMPAIR) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection1:Cell("DIFFVAR")    ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection1:Cell("PORCENT")    ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,/*cPicture*/,{|| nPER }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL GERAL                                                                                                            |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection4 := TRSection():New(oReport, STR0061,{(cTRB)}) // "Total Geral DO BEM PAI"
			TRCell():New(oSection4,"(cTRB)->CODBEM"    ,(cTRB)   ,STR0061 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)

			oBreakTG := TRBreak():New(oSection4,oSection4:Cell("(cTRB)->CODBEM"),STR0061,.F.)//"Total Geral"
			TRFunction():New(oSection1:Cell("PREVCUSTO")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,/*cPicture*/,{|| nTOTP }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection1:Cell("REALCUSTO")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,/*cPicture*/,{|| nTOTR }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection1:Cell("DIFFVAR")    ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,/*cPicture*/,{|| nDIF1 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection1:Cell("PORCENT")    ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,/*cPicture*/,{|| nPER1 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//***********SE PARAMETRO CONSIDERA ESTRUTURA = NAO
		Else

			//--------------------------------------------------------------------------------------------------------------------------
			//| BEM PAI                                                                                                                |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection1 := TRSection():New(oReport, STR0080,{(cTRB),"ST9"}) // "Bem"
			TRCell():New(oSection1,"(cTRB)->CODBEM" ,(cTRB)   ,STR0080 ,"@!"   			     ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Bem"
			TRCell():New(oSection1,"ST9->T9_NOME"   ,"ST9"    ,STR0066 ,"@!"   				 ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
			TRCell():New(oSection1,"PREVCUSTO"      ,""       ,STR0076 ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nBEMPRE }) //"Custo Prev."
			TRCell():New(oSection1,"REALCUSTO"      ,""       ,STR0077 ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nBEMREA }) //"Custo Real."
			TRCell():New(oSection1,"DIFFVAR"        ,""       ,STR0078 ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nDIF }) //"Diferenca"
			TRCell():New(oSection1,"PORCENT"        ,""       ,STR0097 ,cPictuCus            ,16   ,/*lPixel*/   ,{|| nPER }) //"Var. %"
			TRPosition():New(oSection1,"ST9",1,{|| xFilial("ST9")+(cTRB)->CODBEM})
			oSection1:Cell("PREVCUSTO"):SetHeaderAlign("RIGHT")
			oSection1:Cell("REALCUSTO"):SetHeaderAlign("RIGHT")
			oSection1:Cell("DIFFVAR"):SetHeaderAlign("RIGHT")
			oSection1:Cell("PORCENT"):SetHeaderAlign("RIGHT")

			If lApField

				aCells := {}
				aAdd( aCells, "PREVCUSTO" )
				aAdd( aCells, "REALCUSTO" )
				aAdd( aCells, "DIFFVAR" )

				oSection1:SetObfuscCells(aCells)
			
			EndIf

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL GERAL                                                                                                            |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection2 := TRSection():New(oReport, STR0061,{(cTRB)}) // "Total Geral"
			TRCell():New(oSection2,"(cTRB)->CODBEM"    ,(cTRB)   ,STR0061 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)

			oBreakTG := TRBreak():New(oSection2,oSection2:Cell("(cTRB)->CODBEM"),STR0061,.F.)//"Total Geral"
			TRFunction():New(oSection1:Cell("PREVCUSTO")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTP) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection1:Cell("REALCUSTO")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTR) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection1:Cell("DIFFVAR")    ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection1:Cell("PORCENT")    ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,/*cPicture*/,{|| nPER }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

		EndIf
		//***********SE PARAMETRO Apresentação ? = Nível O.S
	Else

		//***********SE PARAMETRO CONSIDERA ESTRUTURA = SIM
		If MV_PAR16 = 2


			//--------------------------------------------------------------------------------------------------------------------------
			//| BEM PAI                                                                                                                |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection1 := TRSection():New(oReport, STR0053,{(cTRB),"ST9"}) // "Bem Pai"
			TRCell():New(oSection1,"(cTRB)->CODBEM"    ,(cTRB)  ,STR0080 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Bem"
			TRCell():New(oSection1,"ST9->T9_NOME"      ,"ST9"   ,STR0066 ,"@!"   ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
			TRPosition():New(oSection1,"ST9",1,{|| xFilial("ST9")+(cTRB)->CODBEM})

			//--------------------------------------------------------------------------------------------------------------------------
			//| ORDEM DE SERVICO  DO BEM PAI                                                                                           |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection2 := TRSection():New(oReport, STR0054,{(cTRB),"ST4","STJ"}) // "Ordem de Servico pai"
			TRCell():New(oSection2,"(cTRB)->ORDEM"          ,(cTRB)   ,STR0067 ,"@!"             ,08   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Ordem"
			TRCell():New(oSection2,"ST4->T4_NOME"           ,"ST4"    ,STR0068 ,"@!"             ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Servico"
			TRCell():New(oSection2,"DTOC((cTRB)->ORIGI)"    ,(cTRB)   ,STR0069 ,"99/99/9999"     ,12   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Data"
			TRCell():New(oSection2,"(cTRB)->OBS"            ,(cTRB)   ,STR0070 ,"@!"             ,60   ,/*lPixel*/   ,{|| MemoLine((cTRB)->OBS,60,nX) }) //"Obs"
			TRCell():New(oSection2,"(cTRB)->VALORPRE"       ,(cTRB)   ,STR0076 ,cPictuCus        ,16   ,/*lPixel*/   ,{|| nORDPRE }) //"Custo Prev."
			TRCell():New(oSection2,"(cTRB)->VALORREA"       ,(cTRB)   ,STR0077 ,cPictuCus        ,16   ,/*lPixel*/   ,{|| nORDREA }) //"Custo Real."
			TRCell():New(oSection2,"DIFFVAR"	            ,""       ,STR0078 ,cPictuCus        ,16   ,/*lPixel*/   ,{|| nDIF })// "Diferenca"
			TRCell():New(oSection2,"PORCENT"	            ,""       ,STR0097 ,cPictuCus        ,16   ,/*lPixel*/   ,{|| nPER })//"Var. %"
			oSection2:Cell("(cTRB)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection2:Cell("(cTRB)->VALORREA"):SetHeaderAlign("RIGHT")
			oSection2:Cell("DIFFVAR"):SetHeaderAlign("RIGHT")
			oSection2:Cell("PORCENT"):SetHeaderAlign("RIGHT")

			TRPosition():New(oSection2,"STJ",1,{|| xFilial("STJ")+(cTRB)->ORDEM})
			TRPosition():New(oSection2,"ST4",1,{|| xFilial("ST4")+STJ->TJ_SERVICO})

			If lApField

				aCells := {}
				aAdd( aCells, "(cTRB)->VALORPRE" )
				aAdd( aCells, "(cTRB)->VALORREA" )
				aAdd( aCells, "DIFFVAR" )

				oSection2:SetObfuscCells(aCells)
			
			EndIf

			//--------------------------------------------------------------------------------------------------------------------------
			//| CUSTO HORA PARADA BEM PAI                                                                                              |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection4 := TRSection():New(oReport, STR0056,{(cTRB2)}) // "Custo Hora Parada Bem Pai"
			TRCell():New(oSection4,""                  ,""       ,STR0056 ,"@!"                 ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Hora Parada Bem"
			TRCell():New(oSection4,"PREVQTDE"          ,""       ,""      ,cPictuQnt            ,16   ,/*lPixel*/   ,{|| NGRHODSEXN((cTRB2)->QUANTPRE,"D") })
			TRCell():New(oSection4,"(cTRB2)->VALORPRE" ,(cTRB2)  ,""      ,cPictuCus            ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)
			TRCell():New(oSection4,"REALQTDE"          ,""       ,""      ,cPictuQnt            ,16   ,/*lPixel*/   ,{|| NGRHODSEXN((cTRB2)->QUANTREA,"D") })
			TRCell():New(oSection4,"(cTRB2)->VALORREA" ,(cTRB2)  ,""      ,cPictuCus            ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)
			oSection4:Cell("PREVQTDE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("(cTRB2)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("REALQTDE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("(cTRB2)->VALORREA"):SetHeaderAlign("RIGHT")

			If lApField

				aCells := {}
				aAdd( aCells, "(cTRB2)->VALORPRE" )
				aAdd( aCells, "(cTRB2)->VALORREA" )

				oSection4:SetObfuscCells(aCells)
			
			EndIf

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DO BEM  PAI                                                                                                      |
			//--------------------------------------------------------------------------------------------------------------------------
			oBreakTP := TRBreak():New(oSection1,oSection1:Cell("(cTRB)->CODBEM"),STR0063,.F.)//"Total do Bem Pai"
			TRFunction():New(oSection2:Cell("(cTRB)->VALORPRE") ,/*cId*/,"ONPRINT",oBreakTP,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMPRE) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection2:Cell("(cTRB)->VALORREA") ,/*cId*/,"ONPRINT",oBreakTP,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMREA) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection2:Cell("DIFFVAR")          ,/*cId*/,"ONPRINT",oBreakTP,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection2:Cell("PORCENT")          ,/*cId*/,"ONPRINT",oBreakTP,/*cTitle*/,/*cPicture*/,{|| nPER }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| BEM FILHO                                                                                                              |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection5 := TRSection():New(oReport, STR0057,{(cTRB3),"ST9"}) // "Bem Filho"
			TRCell():New(oSection5,"(cTRB3)->CODBEM"    ,(cTRB3)   ,STR0057 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Bem Filho"
			TRCell():New(oSection5,"ST9->T9_NOME"       ,"ST9"    ,STR0066 ,"@!"   ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
			TRPosition():New(oSection5,"ST9",1,{|| xFilial("ST9")+(cTRB3)->CODBEM})

			//--------------------------------------------------------------------------------------------------------------------------
			//| ORDEM DE SERVICO DO BEM FILHO                                                                                          |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection6 := TRSection():New(oReport, STR0058,{(cTRB3),"ST4","STJ"}) // "O.S. Bem Filho"
			TRCell():New(oSection6,"(cTRB3)->ORDEM"         ,(cTRB3)    ,STR0067 ,"@!"             ,08   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Ordem"
			TRCell():New(oSection6,"ST4->T4_NOME"           ,"ST4"      ,STR0068 ,"@!"             ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Servico"
			TRCell():New(oSection6,"DTOC((cTRB3)->ORIGI)"   ,(cTRB3)    ,STR0069 ,"99/99/9999"     ,12   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Data"
			TRCell():New(oSection6,"(cTRB3)->OBS"           ,(cTRB3)    ,STR0070 ,"@!"             ,60   ,/*lPixel*/   ,{|| MemoLine((cTRB3)->OBS,60,nX) }) //"Obs"
			TRCELL():New(oSection6,"(cTRB3)->VALORPRE"		,(cTRB3)	,STR0076, cPictuCus        ,16   ,/*lPixel*/   ,{|| nORDPRE }) //"Custo Prev."
			TRCELL():New(oSection6,"(cTRB3)->VALORREA"		,(cTRB3)	,STR0077, cPictuCus        ,16   ,/*lPixel*/   ,{|| nORDREA }) //"Custo Real."
			TRCELL():New(oSection6,"DIFFVAR"				,""			,STR0078, cPictuCus        ,16   ,/*lPixel*/   ,{|| nDIF }) //"Diferenca"
			TRCELL():New(oSection6,"PORCENT"				,""			,STR0097, cPictuCus        ,16   ,/*lPixel*/   ,{|| nPER }) //"Var. %"
			oSection6:Cell("(cTRB3)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection6:Cell("(cTRB3)->VALORREA"):SetHeaderAlign("RIGHT")
			oSection6:Cell("DIFFVAR"):SetHeaderAlign("RIGHT")
			oSection6:Cell("PORCENT"):SetHeaderAlign("RIGHT")


			If lApField

				aCells := {}
				aAdd( aCells, "(cTRB3)->VALORPRE" )
				aAdd( aCells, "(cTRB3)->VALORREA" )
				aAdd( aCells, "DIFFVAR" )

				oSection6:SetObfuscCells(aCells)
			
			EndIf

			TRPosition():New(oSection6,"STJ",1,{|| xFilial("STJ")+(cTRB3)->ORDEM})
			TRPosition():New(oSection6,"ST4",1,{|| xFilial("ST4")+STJ->TJ_SERVICO})


			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DO BEM FILHO                                                                                                     |
			//--------------------------------------------------------------------------------------------------------------------------
			oBreakTF := TRBreak():New(oSection5,oSection5:Cell("(cTRB3)->CODBEM"),STR0065,.F.)//"Total do Bem Filho"
			TRFunction():New(oSection6:Cell("(cTRB3)->VALORPRE") ,/*cId*/,"ONPRINT",oBreakTF,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMFPRE) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection6:Cell("(cTRB3)->VALORREA") ,/*cId*/,"ONPRINT",oBreakTF,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMFREA) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection6:Cell("DIFFVAR")       	 ,/*cId*/,"ONPRINT",oBreakTF,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection6:Cell("PORCENT")       	 ,/*cId*/,"ONPRINT",oBreakTF,/*cTitle*/,/*cPicture*/,{|| nPER }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL GERAL DO BEM PAI                                                                                                 |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection8 := TRSection():New(oReport, STR0060,{(cTRB3)}) // "Total Geral do Bem Pai"
			TRCell():New(oSection8,"(cTRB3)->CODBEM"    ,(cTRB3)   ,STR0060 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)

			oBreakTB := TRBreak():New(oSection8,oSection8:Cell("(cTRB3)->CODBEM"),STR0060,.F.)//"Total Geral do Bem Pai"
			TRFunction():New(oSection6:Cell("(cTRB3)->VALORPRE")  ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nCBEMPAIP) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection6:Cell("(cTRB3)->VALORREA")  ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nCBEMPAIR) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection6:Cell("DIFFVAR")        	  ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF1) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection6:Cell("PORCENT")        	  ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,/*cPicture*/,{|| nPER1 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL GERAL                                                                                                            |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection9 := TRSection():New(oReport, STR0061,{(cTRB)}) // "Total Geral"
			TRCell():New(oSection9,"(cTRB)->CODBEM"    ,(cTRB)   ,STR0061 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Total Geral"

			oBreakTG := TRBreak():New(oSection9,oSection9:Cell("(cTRB)->CODBEM"),STR0061,.F.)//"Total Geral"
			TRFunction():New(oSection6:Cell("(cTRB3)->VALORPRE")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTP) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection6:Cell("(cTRB3)->VALORREA")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTR) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection6:Cell("DIFFVAR")        	  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF2) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection6:Cell("PORCENT")        	  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,/*cPicture*/,{|| nPER2 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//***********SE PARAMETRO CONSIDERA ESTRUTURA = NAO
		Else

			//--------------------------------------------------------------------------------------------------------------------------
			//| BEM                                                                                                                    |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection1 := TRSection():New(oReport, STR0080,{(cTRB),"ST9"}) // "Bem"
			TRCell():New(oSection1,"(cTRB)->CODBEM" ,(cTRB)  ,STR0080 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Bem"
			TRCell():New(oSection1,"ST9->T9_NOME"   ,"ST9"   ,STR0066 ,"@!"   ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
			TRPosition():New(oSection1,"ST9",1,{|| xFilial("ST9")+(cTRB)->CODBEM})

			//--------------------------------------------------------------------------------------------------------------------------
			//| ORDEM DE SERVICO                                                                                                       |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection2 := TRSection():New(oReport, STR0083,{(cTRB),"ST4","STJ"}) // "Ordem de Servico"
			TRCell():New(oSection2,"(cTRB)->ORDEM"          ,(cTRB)   ,STR0067 ,"@!"             ,08   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Ordem"
			TRCell():New(oSection2,"ST4->T4_NOME"           ,"ST4"    ,STR0068 ,"@!"             ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Servico"
			TRCell():New(oSection2,"DTOC((cTRB)->ORIGI)"    ,(cTRB)   ,STR0069 ,"99/99/9999"     ,12   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Data"
			TRCell():New(oSection2,"(cTRB)->OBS"            ,(cTRB)   ,STR0070 ,"@!"             ,60   ,/*lPixel*/   ,{|| MemoLine((cTRB)->OBS,60,nX) }) //"Obs"
			TRCell():New(oSection2,"(cTRB)->VALORPRE"       ,(cTRB)   ,STR0076 ,cPictuCus        ,16   ,/*lPixel*/   ,{|| nORDPRE })
			TRCell():New(oSection2,"(cTRB)->VALORREA"       ,(cTRB)   ,STR0077 ,cPictuCus        ,16   ,/*lPixel*/   ,{|| nORDREA })
			TRCell():New(oSection2,"DIFFVAR"	       		,""   	  ,STR0078 ,cPictuCus        ,16   ,/*lPixel*/   ,{|| nDIF })
			TRCell():New(oSection2,"PORCENT"	       		,""   	  ,STR0097 ,cPictuCus        ,16   ,/*lPixel*/   ,{|| nPER })
			oSection2:Cell("(cTRB)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection2:Cell("(cTRB)->VALORREA" ):SetHeaderAlign("RIGHT")
			oSection2:Cell("DIFFVAR"):SetHeaderAlign("RIGHT")
			oSection2:Cell("PORCENT"):SetHeaderAlign("RIGHT")

			If lApField

				aCells := {}
				aAdd( aCells, "(cTRB)->VALORPRE" )
				aAdd( aCells, "(cTRB)->VALORREA" )
				aAdd( aCells, "DIFFVAR" )

				oSection2:SetObfuscCells(aCells)
			
			EndIf

			TRPosition():New(oSection2,"STJ",1,{|| xFilial("STJ")+(cTRB)->ORDEM})
			TRPosition():New(oSection2,"ST4",1,{|| xFilial("ST4")+STJ->TJ_SERVICO})

			//--------------------------------------------------------------------------------------------------------------------------
			//| CUSTO HORA PARADA BEM                                                                                                  |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection4 := TRSection():New(oReport, STR0056,{(cTRB2)}) // "Custo Hora Parada Bem"
			TRCell():New(oSection4,""                  ,""       ,STR0056 ,"@!"                 ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Custo Hora Parada Bem"
			TRCell():New(oSection4,"PREVQTDE"          ,""       ,""      ,cPictuQnt            ,16	  ,/*lPixel*/   ,{|| NGRHODSEXN((cTRB2)->QUANTPRE,"D") })
			TRCell():New(oSection4,"(cTRB2)->VALORPRE" ,(cTRB2)  ,""      ,cPictuCus            ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)
			TRCell():New(oSection4,"REALQTDE"          ,""       ,""      ,cPictuQnt            ,16   ,/*lPixel*/   ,{|| NGRHODSEXN((cTRB2)->QUANTREA,"D") })
			TRCell():New(oSection4,"(cTRB2)->VALORREA" ,(cTRB2)  ,""      ,cPictuCus            ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)
			oSection4:Cell("PREVQTDE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("(cTRB2)->VALORPRE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("REALQTDE"):SetHeaderAlign("RIGHT")
			oSection4:Cell("(cTRB2)->VALORREA"):SetHeaderAlign("RIGHT")

			If lApField

				aCells := {}
				aAdd( aCells, "(cTRB2)->VALORPRE" )
				aAdd( aCells, "(cTRB2)->VALORREA" )

				oSection4:SetObfuscCells(aCells)
			
			EndIf

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL DO BEM                                                                                                           |
			//--------------------------------------------------------------------------------------------------------------------------
			oBreakTB := TRBreak():New(oSection1,oSection1:Cell("(cTRB)->CODBEM"),STR0082,.F.)//"Total do Bem"
			TRFunction():New(oSection2:Cell("(cTRB)->VALORPRE") ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMPRE) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection2:Cell("(cTRB)->VALORREA") ,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nBEMREA) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection2:Cell("DIFFVAR")      	,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection2:Cell("PORCENT")       	,/*cId*/,"ONPRINT",oBreakTB,/*cTitle*/,/*cPicture*/,{|| nPER }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

			//--------------------------------------------------------------------------------------------------------------------------
			//| TOTAL GERAL                                                                                                            |
			//--------------------------------------------------------------------------------------------------------------------------
			oSection5 := TRSection():New(oReport, STR0061,{(cTRB)}) // "Total Geral"
			TRCell():New(oSection5,"(cTRB)->CODBEM"    ,(cTRB)   ,STR0061 ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/)

			oBreakTG := TRBreak():New(oSection5,oSection5:Cell("(cTRB)->CODBEM"),STR0061,.F.)//"Total Geral"
			TRFunction():New(oSection2:Cell("(cTRB)->VALORPRE")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTP) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection2:Cell("(cTRB)->VALORREA")  ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nTOTR) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection2:Cell("DIFFVAR")           ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,cPicture,{|| Iif(lApField, '*', nDIF2) }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
			TRFunction():New(oSection2:Cell("PORCENT")           ,/*cId*/,"ONPRINT",oBreakTG,/*cTitle*/,/*cPicture*/,{|| nPER2 }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)

		EndIf

	EndIf

	If lGFrota .And. MV_PAR18 == 1

		//--------------------------------------------------------------------------------------------------------------------------
		//| BEM                                                                                                        |
		//--------------------------------------------------------------------------------------------------------------------------
		oSectionBB := TRSection():New(oReport, STR0057,{(cTRBAbast),"ST9"}) // "Bem Filho"
		TRCell():New(oSectionBB,"(cTRBAbast)->FROTA",(cTRBAbast) ,STR0080  ,"@!"   ,16   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Bem"
		TRCell():New(oSectionBB,"ST9->T9_NOME"      ,"ST9"   	,STR0066 ,"@!"   ,40   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Nome"
		TRPosition():New(oSectionBB,"ST9",1,{|| xFilial("ST9")+(cTRBAbast)->FROTA})

		oSectionAb := TRSection():New(oReport, STR0090,{(cTRBAbast)}) //"Abastecimentos"
		TRCell():New(oSectionAb,"ABAST"                ,(cTRBAbast) ,STR0090 ,"@!"               ,20   ,/*lPixel*/   , {|| ""}) //"Abastecimentos"
		TRCell():New(oSectionAb,"(cTRBAbast)->DTABAST" ,(cTRBAbast) ,STR0069 ,"99/99/9999"       ,10   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Data"
		TRCell():New(oSectionAb,"(cTRBAbast)->HRABAST" ,(cTRBAbast) ,STR0091 ,"99:99"            ,05   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Hora"
		TRCell():New(oSectionAb,"(cTRBAbast)->COMBUST" ,(cTRBAbast) ,STR0092 ,"@!"               ,03   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Combustível"
		TRCell():New(oSectionAb,"(cTRBAbast)->COMBNOM" ,(cTRBAbast) ,STR0096 ,"@!"               ,20   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Descrição"
		TRCell():New(oSectionAb,"(cTRBAbast)->QUANTID" ,(cTRBAbast) ,STR0093 , cPic20			 ,20   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Quantidade"
		TRCell():New(oSectionAb,"(cTRBAbast)->VALTOT"  ,(cTRBAbast) ,STR0094 ,cPic20             ,20   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Valor Total"
		TRCell():New(oSectionAb,"(cTRBAbast)->KMRODAD" ,(cTRBAbast) ,STR0113 ,cPic20             ,09   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Km. Rodad."
		TRCell():New(oSectionAb,"(cTRBAbast)->MEDKML"  ,(cTRBAbast) ,"" 	 ,cPic20             ,20   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Méd. KM/L"
		TRCell():New(oSectionAb,"(cTRBAbast)->TIPMED"  ,(cTRBAbast) ,STR0114 ,"@!"				 ,06   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Méd. KM/L"
		TRCell():New(oSectionAb,"(cTRBAbast)->VALKM"   ,(cTRBAbast) ,STR0115 ,cPic20             ,20   ,/*lPixel*/   ,/*{|| code-block de impressao }*/) //"Val. KM"
		oSectionAb:Cell("(cTRBAbast)->QUANTID"):SetHeaderAlign("RIGHT")
		oSectionAb:Cell("(cTRBAbast)->VALTOT"):SetHeaderAlign("RIGHT")
		oSectionAb:Cell("(cTRBAbast)->KMRODAD"):SetHeaderAlign("RIGHT")
		oSectionAb:Cell("(cTRBAbast)->MEDKML"):SetHeaderAlign("RIGHT")
		oSectionAb:Cell("(cTRBAbast)->VALKM"):SetHeaderAlign("RIGHT")

		oBreakAb := TRBreak():New(oSectionAb,oSectionAb:Cell("ABAST"),STR0095,.F.) //"Total Abastecimentos"
		TRFunction():New(oSectionAb:Cell("(cTRBAbast)->VALTOT"),/*cId*/,"ONPRINT",oBreakAb,/*cTitle*/,/*cPicture*/,{|| nTotAbast }/*uFormula*/,.F./*lEndSection*/,.F./*lEndReport*/,.F./*lEndPage*/)
	EndIf

Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR840APG
Apaga arquivos temporarios.
@author Wagner S. de Lacerda
@since 07/07/2010
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Static Function MNTR840APG()

	//-------------------------------------------------------------
	//| Apaga arquivo de Trabalho                                 |
	//-------------------------------------------------------------

	oTmpTbl1:Delete()//Deleta Tabela Temporaria 1

	oTmpTbl2:Delete()//Deleta Tabela Temporaria 2

	oTmpTbl3:Delete()//Deleta Tabela Temporaria 3

	oTmpTbl4:Delete()//Deleta Tabela Temporaria 4

	If lGFrota .And. MV_PAR18 == 1 //Considera Custos de Abastecimentos
		oTmpTbl5:Delete()// Deleta Arquivo temporario 5
	EndIf

Return
//------------------------------------------------------------------------------
/*/{Protheus.doc} fProcAbast
Processa tabela temporaria de abastecimentos.
@author Wagner S. de Lacerda
@since 20/01/2011
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Static Function fProcAbast()

	Local aDBFAbast := {}
	//Variaveis de controle de combustivel
	Local nKmRod 	 := 0
	Local nMedKm    := 0
	Local nCusKm    := 0
	Local cFormMed  := "1"
	Local cTipoMed  := " "
	Local nValAnt   := 0

	cArqAbast  := ""
	cInd1Abast := ""

	aAdd(aDBFAbast, {"FROTA"  , "C", 16, 0})
	aAdd(aDBFAbast, {"DTABAST", "D", 08, 0})
	aAdd(aDBFAbast, {"HRABAST", "C", 05, 0})
	aAdd(aDBFAbast, {"COMBUST", "C", 03, 0})
	aAdd(aDBFAbast, {"COMBNOM", "C", 20, 0})
	aAdd(aDBFAbast, {"QUANTID", "N", 20, 2})
	aAdd(aDBFAbast, {"VALTOT" , "N", 20, 2})
	aAdd(aDBFAbast, {"TIPMED" , "C", 06, 0})
	aAdd(aDBFAbast, {"KMRODAD", "N", 09, 0})
	aAdd(aDBFAbast, {"MEDKML" , "N", 20, 2})
	aAdd(aDBFAbast, {"VALKM"  , "N", 20, 2})


	//Instancia classe FWTemporaryTable
	oTmpTbl5 := FWTemporaryTable():New( cTRBAbast, aDBFAbast )
	//Cria indices
	oTmpTbl5:AddIndex( "Ind01" , {"FROTA","DTABAST","HRABAST"}  )
	//Cria a tabela temporaria
	oTmpTbl5:Create()


	dbSelectArea("TQN")
	dbSetOrder(1)
	dbSeek(xFilial("TQN")+MV_PAR01,.T.)
	ProcRegua(LastRec() - RecNo())

	While !EoF() .And. TQN->TQN_FILIAL == xFilial("TQN") .And. TQN->TQN_FROTA >= MV_PAR01 .And. TQN->TQN_FROTA <= MV_PAR02
		If TQN->TQN_DTABAS >= MV_PAR03 .And. TQN->TQN_DTABAS <= MV_PAR04
			aArea := GetArea()
			cFrt := TQN->TQN_FROTA
			aHistFrota      := NGACUMEHIS(TQN->TQN_FROTA,TQN->TQN_DTABAS,TQN->TQN_HRABAS,1,"A",,'STP->TP_TIPOLAN = "A" .Or. STP->TP_TIPOLAN = "I"',.F.)
			dDtAnt := aHistFrota[3]
			cHrAnt := aHistFrota[4]
			dbSelectArea("TQN")
			dbSetOrder(1)
			If dbSeek(xFilial("TQN")+cFrt+DTOS(dDtAnt)+cHrAnt)
				nValAnt := TQN->TQN_VALUNI
			Endif
			RestArea(aArea)

			nKmRod := NGCONTPER(TQN->TQN_FROTA,DTOS(TQN->TQN_DTABAS),TQN->TQN_HRABAS)

			aArea := GetArea()

			cTipoMed := ''
			cFormMed := '1'

			dbSelectArea("ST9")
			dbSetOrder(1)
			If dbSeek( xFilial("ST9") + TQN->TQN_FROTA)
				cTipoMed := NGSEEK("ST6",ST9->T9_CODFAMI,1,"T6_TIPO1")
				cFormMed := NGSEEK("ST6",ST9->T9_CODFAMI,1,"T6_MEDIA1")
				cFormMed := If(Empty(cFormMed),"1",cFormMed)
			EndIf

			RestArea(aArea)

			If cFormMed = "1"
				nMedKm := If(nKmRod > 0,nKmRod/TQN->TQN_QUANT,0)
				nCusKm := nValAnt/Round(nMedKm,2)
			Else
				nMedKm := If(nKmRod > 0,TQN->TQN_QUANT/nKmRod,0)
				nCusKm := nValAnt*Round(nMedKm,2)
			EndIf

			RecLock((cTRBAbast),.T.)
			(cTRBAbast)->FROTA   := TQN->TQN_FROTA
			(cTRBAbast)->DTABAST := TQN->TQN_DTABAS
			(cTRBAbast)->HRABAST := TQN->TQN_HRABAS
			(cTRBAbast)->COMBUST := TQN->TQN_CODCOM
			(cTRBAbast)->COMBNOM := SubStr(NGSEEK("TQM",TQN->TQN_CODCOM,1,"TQM_NOMCOM"),1,20)
			(cTRBAbast)->QUANTID := Round(TQN->TQN_QUANT,2)
			(cTRBAbast)->VALTOT  := Round(TQN->TQN_VALTOT,2)
			(cTRBAbast)->TIPMED  := MontUndCon(cTipoMed,NGSEEK("TQM",(cTRBAbast)->COMBUST,1,"TQM_UM"),cFormMed)
			(cTRBAbast)->KMRODAD := nKmRod
			(cTRBAbast)->MEDKML  := Round(nMedKm,2)
			(cTRBAbast)->VALKM   := Round(nCusKm,2)
			MsUnlock(cTRBAbast)
		EndIf
		dbSelectArea("TQN")
		dbSkip()
	End
Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} fCustAbast
Imprime no relatorio padrao os custos de abastecimentos.

@author Wagner S. de Lacerda
@since 20/01/2011

@version undefined

@param cFrota, characters
@param lAbast , Determina se imprimirá somente abastecimentos.

@type function

@return	.T. -> Custos impressos | .F. -> Impressao de abastecimentos desabilitada.
/*/
//------------------------------------------------------------------------------
Static Function fCustAbast( cFrota , lAbast )

	Local cCabecAb := STR0098 //"    Data         Hora     Combustível                      Quantidade      Valor Total   Q.Con.Tr.          Média    Val./Con.Tr."
	Local aArea    := GetArea()
	Local cPic20   := '@E 99,999,999,999,999,999.99'

	nTotAbast := 0

	Default lAbast := .F.

	If lGFrota .And. MV_PAR18 == 1
		If Type("oReport") <> "O"
			dbSelectArea(cTRBAbast)
			dbSetOrder(1)
			If dbSeek(cFrota)
				SomaLinha(.T.)
				@ Li,000 PSAY STR0090+".: "+cFrota //"Abastecimentos"
				SomaLinha()
				@ Li,000 PSAY cCabecAb
				While !EoF() .And. (cTRBAbast)->FROTA == cFrota
					SomaLinha()

					@ Li,001 PSAY DTOC((cTRBAbast)->DTABAST) PICTURE "99/99/9999"
					@ Li,016 PSAY (cTRBAbast)->HRABAST PICTURE "99:99"
					@ Li,026 PSAY (cTRBAbast)->COMBUST PICTURE "@!"
					@ Li,032 PSAY (cTRBAbast)->COMBNOM PICTURE "@!"
					@ Li,057 PSAY Transform((cTRBAbast)->QUANTID, cPic20 )
					@ Li,076 PSAY Transform((cTRBAbast)->VALTOT, cPic20)
					@ Li,092 PSAY (cTRBAbast)->KMRODAD PICTURE cPic20
					@ Li,105 PSAY Transform((cTRBAbast)->MEDKML, cPic20 )
					@ Li,120 PSAY (cTRBAbast)->TIPMED PICTURE "@!"
					@ Li,131 PSAY Transform((cTRBAbast)->VALKM , cPic20 )
					nTotAbast += (cTRBAbast)->VALTOT

					If MV_PAR15 == 1 .or. MV_PAR15 == 3
						If MV_PAR16 == 2
							nBEMREA += (cTRBAbast)->VALTOT
						Else
							nBEMREA += (cTRBAbast)->VALTOT
						EndIf
					Else
						If MV_PAR16 == 2
							nCBEMPAIR += (cTRBAbast)->VALTOT
						Else
							nBEMREA += (cTRBAbast)->VALTOT
						EndIf
					EndIf

					dbSelectArea(cTRBAbast)
					dbSkip()
				End
				SomaLinha()
				@ Li,000 PSAY "*** "+STR0095+": " //"Total Abastecimentos"
				@ Li,076 PSAY Transform(nTotAbast, cPic20)
				SomaLinha()
				SomaLinha()
			EndIf
		Else
			dbSelectArea(cTRBAbast)
			dbSetOrder(1)
			If dbSeek(cFrota)
				If lAbast
					oSectionBB:Init()
					oSectionBB:PrintLine()
				EndIf
				oSectionAb:Init()
				oSectionAb:Cell("ABAST"):Hide()
				While !EoF() .And. (cTRBAbast)->FROTA == cFrota

					nTotAbast += (cTRBAbast)->VALTOT

					oSectionAb:PrintLine()

					If MV_PAR15 == 1 .or. MV_PAR15 == 3
						If MV_PAR16 == 2
							nBEMREA += (cTRBAbast)->VALTOT
						Else
							nBEMREA += (cTRBAbast)->VALTOT
						EndIf
					Else
						If MV_PAR16 == 2
							nCBEMPAIR += (cTRBAbast)->VALTOT
						Else
							nBEMREA += (cTRBAbast)->VALTOT
						EndIf
					EndIf

					dbSelectArea(cTRBAbast)
					dbSkip()
				End
				oSectionAb:Finish()
				If lAbast
					oSectionBB:Finish()
				EndIf
			EndIf
		EndIf
	Else
		Return .F.
		RestArea(aArea)
	EndIf

	RestArea(aArea)


Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} MontUndCon
Monta Unidade de media para Contador e Unidade
@author Jackson Machado
@since 28/10/11
@version undefined
@param cTipo, characters
@param cUnid, characters
@param cTpUn, characters
@type function
/*/
//------------------------------------------------------------------------------
Static Function MontUndCon(cTipo,cUnid,cTpUn)

	Local cT := If(Empty(cTipo),"---",cTipo)
	Local cU := If(Empty(cUnid),"--",cUnid)
	Local cTU := cTpUn
	Local cRet := " "

	If Empty(cTipo) .and. Empty(cUnid)
		Return "Km/L"
	Endif

	If cTU == "1"
		cRet := cT+"/"+cU
	ElseIf cTU == "2"
		cRet := cU+"/"+cT
	EndIf
Return cRet

//---------------------------------------------------------------------------------
/*/{Protheus.doc} MNT840MTSQ
Monta SQL da busca dos Bens

@author Maicon André Pinheiro
@since 08/04/2016
@return cQuery
@version MP11
/*/
//---------------------------------------------------------------------------------
Static Function MNT840MTSQ()

	Local cQuery := ""

	cQuery    := " SELECT * "
	cQuery    += "   FROM " + RetSqlName("ST9")
	cQuery    += "  WHERE T9_FILIAL   = '" + xFilial("ST9") + "'"
	If !Empty(MV_PAR01)
		cQuery += "    AND T9_CODBEM  >= '" + MV_PAR01       + "'"
	EndIf
	cQuery    += "    AND T9_CODBEM  <= '" + MV_PAR02       + "'"
	cQuery    += "    AND T9_SITBEM   = 'A'"
	cQuery    += "    AND T9_SITMAN   = 'A'"
	cQuery    += "    AND D_E_L_E_T_ <> '*'"

Return cQuery
	