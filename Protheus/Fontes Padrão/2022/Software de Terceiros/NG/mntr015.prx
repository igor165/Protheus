#include "Protheus.ch"
#Include "Topconn.ch"
#include "MNTR015.ch"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR015
Relatório para listar os pneus com sulco inferior ao informado no parâmetro.

@author Thiago Olis Machado
@since 07/10/08
@version MP11 - MP12
@return .T.
/*/
//--------------------------------------------------------------------
Function MNTR015()
	
	Local aNGBeginPrm := {}

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 19, 95 )

		aNGBeginPrm := NGBeginPrm()
		
		Private NomeProg := "MNTR015"
		Private Tamanho  := "G"
		Private aReturn  := {STR0001,1,STR0002,1,2,1,"",1} //"Zebrado"###"Administracao"
		Private Titulo   := STR0003
		Private nTipo    := 0
		Private nLastKey := 0
		Private cPerg    := "MNR015"
		Private Cabec1,Cabec2

		wnRel	:= "MNTR015"
		Limite	:= 232
		cDesc1	:= STR0004 //"O relatório mostrará todos os pneus da familia, do modelo, medida e"
		cDesc2	:= STR0005 //"sulco definidos pelos parametros."
		cDesc3	:= ""
		cSTRING:= "TQS"

		Pergunte( cPerg,.F. )
		//---------------------------------------
		// Envia controle para a funcao SETPRINT
		//---------------------------------------                               
		wnRel:=SetPrint( cString,wnRel,cPerg,Titulo,cDesc1,cDesc2,cDesc3,.F.,"",.F.,"G" )     

		If nLastKey = 27
			Set Filter To
			DbSelectArea( "TQS" )
			Return
		EndIf

		SetDefault(aReturn,cString)
		RptStatus({|lEnd| MNTR015Imp(@lEnd,wnRel,Titulo,Tamanho)},Titulo) //"Aguarde..."###"Processando Registros..."

		Dbselectarea( "TQS" )
		
		NGReturnPrm( aNGBeginPrm )

	EndIf

Return .T.

//--------------------------------------------------------------------
/*/{Protheus.doc} MNTR015Imp
Chamada do Relatório.

@author Thiago Olis Machado
@since 07/10/08
@version MP11 - MP12
@return Nil
/*/
//--------------------------------------------------------------------
Function MNTR015Imp( lEnd,wnRel,Titulo,Tamanho )
 
	Local lFirst      := .T.
	Local nRendimento := 0
	Local nRendOrig   := 0
	Local nPrevRod    := 0
	Local nContAtu    := 0
	Local cOldFiltro  := TQS->(dbFilter()) //Retorna a expressão do filtro ativo na área de trabalho corrente, da tabela TQS.
	Local lImprime	 := .F. //Variável utilizada para apresentar mensagem se não houver dados para impressão do relatório.

	Private cRodaTxt  := ""
	Private nCntImpr  := 0
	Private li        := 80
	Private m_pag     := 1
	Private lNoData   := .F.
	Private cAliasQry := GetNextAlias()
	
	Processa({|lEnd| MNTR015Tmp()},STR0013) //"Processando Arquivo..."

	If lNoData
		Return .F.
	EndIf	

	nTipo  := IIf(aReturn[4]==1,15,18)
	
	//---------------------
	// Monta os Cabecalhos
	//---------------------

	Cabec1 := STR0014
	Cabec2 := STR0015

	//          1         2         3         4         5         6         7         8         9         0         1         2         3         4         5         6         7         8         9         0 
	//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	//__________________________________________________________________________________________________________________________________________________________________________________________________________
	//                                                                                                                                                                                                Projecao
	//Número de Fogo  Familia  Descricao da Familia                      Modelo     Descricao do Modelo    Medida  Descricao da Medida    Veículo Aplicado   Posição  Sulco   Ultima Medicao  Banda  Sulco Atual
	//__________________________________________________________________________________________________________________________________________________________________________________________________________
	//xxx 10 xxx      x 06 x   xxxxxxxxxxxxxxxx 40 xxxxxxxxxxxxxxxxxxx   xxx 10 xxx xxxxxxxxx 20 xxxxxxx   x 06 x  xxxxxxxxx 20 xxxxxxx   xxxxxx  16 xxxxx   x 06 x   999,99  99/99/9999      xx          999,99
	
	dbSelectArea(cAliasQry)
	SetRegua(LastRec())
	
	While !Eof()
		IncProc()
	   
		dbSelectArea("TQS")
		dbSetOrder(01) //TQS_FILIAL+TQS_CODBEM
		If dbSeek(xFilial("TQS") + Alltrim((cAliasQry)->TQS_CODBEM))
		   	If Empty(cOldFiltro) .Or. &(cOldFiltro)  //Se a expressão do filtro existir vai ser impresso o relatório, caso contrário não.
			   	NgSomaLi(58)
			   	
			    If !lImprime
			   		lImprime := .T.
			    EndIf
			      
				If lFirst
				   @ Li,000 Psay STR0016+AllTrim(Str(Mv_Par07))
				   lFirst := .F.
				   NgSomaLi(58)
				   NgSomaLi(58)
				EndIf
				
				@ Li,000 	 Psay (cAliasQry)->TQS_NUMFOG   Picture "@!"
				@ Li,016 	 Psay (cAliasQry)->T9_CODFAMI   Picture "@!"
				@ Li,025 	 Psay (cAliasQry)->T6_NOME      Picture "@!"
				@ Li,067 	 Psay (cAliasQry)->T9_TIPMOD    Picture "@!"
				@ Li,078 	 Psay SubStr((cAliasQry)->TQR_DESMOD,1,20)   Picture "@!"
				@ Li,101 	 Psay (cAliasQry)->TQS_MEDIDA   Picture "@!"
				@ Li,109 	 Psay SubStr( (cAliasQry)->TQT_DESMED,1,20 )   Picture "@!"
				@ Li,132 	 Psay (cAliasQry)->TQS_PLACA    Picture "@!"
				@ Li,151 	 Psay (cAliasQry)->TQS_POSIC    Picture "@!"
				@ Li,159 	 Psay Transform((cAliasQry)->TQS_SULCAT , "@E 999.99")
				@ Li,168 	 PSay DtoC(StoD( (cAliasQry)->TQS_DTMEAT ) )  Picture "99/99/9999"
				@ Li,184 	 Psay NGRETSX3BOX("TQS_BANDAA",(cAliasQry)->TQS_BANDAA)   Picture "@!"
				
				nRendOrig  := (cAliasQry)->TQX_KMESPO / (cAliasQry)->TQX_SULCOO
				
				If (cAliasQry)->TQS_BANDAA = '1'
					nRendimento := 0
				ElseIf (cAliasQry)->TQS_BANDAA = '2'
					nRendimento := ((cAliasQry)->TQX_KMESPO * ((cAliasQry)->TQU_KMESP1/100)) /	(cAliasQry)->TQU_SULCO
				ElseIf (cAliasQry)->TQS_BANDAA = '3'
					nRendimento := ((cAliasQry)->TQX_KMESPO * ((cAliasQry)->TQU_KMESP2/100)) /	(cAliasQry)->TQU_SULCO
				ElseIf (cAliasQry)->TQS_BANDAA = '4'
					nRendimento := ((cAliasQry)->TQX_KMESPO * ((cAliasQry)->TQU_KMESP3/100)) /	(cAliasQry)->TQU_SULCO
				ElseIf (cAliasQry)->TQS_BANDAA = '5'
					nRendimento := ((cAliasQry)->TQX_KMESPO * ((cAliasQry)->TQU_KMESP4/100)) /	(cAliasQry)->TQU_SULCO
				EndIf
							
				nPrevRod := ((cAliasQry)->TQS_SULCAT) * If((cAliasQry)->TQS_BANDAA = '1',nRendOrig,nRendimento)
				
				nContAtu := NGBUSCONTHI((cAliasQry)->TQS_CODBEM,StoD( (cAliasQry)->TQS_DTMEAT ) ,"08:00",1)[4]
			   
				nSulcProj := ( (cAliasQry)->T9_CONTACU - nContAtu )/( nPrevRod/(cAliasQry)->TQS_SULCAT ) 
				
				nDifSulc  := (cAliasQry)->TQS_SULCAT- nSulcProj
				
				@ Li,196 PSay Transform( nDifSulc , "@E 999.99")
	   		EndIf
	   EndIf
			
	   dbSelectArea(cAliasQry)			   
	   dbSkip()
	End          
	
	If !lImprime //Se não tiver dados para impressão do relatório.
		MsgInfo(STR0017) //"Não existem dados para montar o relatório!"
		Return .F.
	EndIf

	Roda( nCntImpr,cRodaTxt,Tamanho )

	//-------------------------------------------------
	// Devolve a condicao original do arquivo principal
	//-------------------------------------------------
	RetIndex('TQS')
	Set Filter To 
	Set Device To Screen
	If aReturn[5] == 1
		Set Printer To
		dbCommitAll()
		OurSpool( wnRel )
	EndIf
	Ms_Flush()

Return Nil

//--------------------------------------------------------------------
/*/{Protheus.doc} MNTR015Tmp
Geraão do arquivo temporário. 

@author Thiago Olis Machado
@since 22/03/07
@version MP11 - MP12
/*/
//--------------------------------------------------------------------
Function MNTR015Tmp()

	Local _cGetDB := TcGetDb()

	cQuery := "SELECT TQS.TQS_NUMFOG,ST9.T9_CODFAMI,ST6.T6_NOME,ST9.T9_TIPMOD,TQR.TQR_DESMOD,TQS.TQS_MEDIDA,   "
	cQuery += "	TQT.TQT_DESMED,TQS.TQS_PLACA,TQS.TQS_POSIC,TQS.TQS_SULCAT,TQS.TQS_DTMEAT,TQS.TQS_BANDAA, "
	cQuery += "	TQX.TQX_KMESPO,TQX.TQX_SULCOO, TQS.TQS_CODBEM, ST9.T9_CONTACU, "
	If _cGetDB = "ORACLE"
		cQuery += "NVL(TQU.TQU_KMESP1,0)TQU_KMESP1, NVL(TQU.TQU_KMESP2,0)TQU_KMESP2, "
		cQuery += "NVL(TQU.TQU_KMESP3,0)TQU_KMESP3, NVL(TQU.TQU_KMESP4,0)TQU_KMESP4, NVL(TQU.TQU_SULCO,0)TQU_SULCO "
	ElseIf _cGetDB $ "DB2"                                                                   
		cQuery += "COALESCE(TQU.TQU_KMESP1,0)TQU_KMESP1, COALESCE(TQU.TQU_KMESP2,0)TQU_KMESP2, "
		cQuery += "COALESCE(TQU.TQU_KMESP3,0)TQU_KMESP3, COALESCE(TQU.TQU_KMESP4,0)TQU_KMESP4, COALESCE(TQU.TQU_SULCO,0)TQU_SULCO "
	Else                 
		cQuery += "ISNULL(TQU.TQU_KMESP1,0)TQU_KMESP1, ISNULL(TQU.TQU_KMESP2,0)TQU_KMESP2, "
		cQuery += "ISNULL(TQU.TQU_KMESP3,0)TQU_KMESP3, ISNULL(TQU.TQU_KMESP4,0)TQU_KMESP4, ISNULL(TQU.TQU_SULCO,0)TQU_SULCO "
	EndIf	
	cQuery += "FROM "+RetSqlName("TQS")+" TQS "
	cQuery += "LEFT JOIN "+RetSqlName("TQU")+" TQU ON (TQU.TQU_FILIAL = '"+xFilial("TQU")+"'"
	cQuery += "	AND TQS.TQS_DESENH = TQU.TQU_DESENH AND TQU.D_E_L_E_T_ <> '*') "
	cQuery += "JOIN "+RetSqlName("ST9")+" ST9 ON (ST9.T9_FILIAL = '"+xFilial("ST9")+"'"'
	cQuery += "	AND TQS.TQS_CODBEM = ST9.T9_CODBEM AND ST9.T9_CODFAMI BETWEEN '"+Mv_Par01+"' AND '"+Mv_Par02+"' "
	cQuery += "	AND ST9.T9_TIPMOD BETWEEN '"+Mv_Par03+"' AND '"+Mv_Par04+"' AND ST9.D_E_L_E_T_ <> '*') "
	cQuery += "JOIN "+RetSqlName("ST6")+" ST6 ON (ST6.T6_FILIAL  = '"+xFilial("ST6")+"' "
	cQuery += "	AND ST9.T9_CODFAMI = ST6.T6_CODFAMI AND ST6.D_E_L_E_T_ <> '*') "
	cQuery += "JOIN "+RetSqlName("TQR")+" TQR ON (TQR.TQR_FILIAL = '"+xFilial("TQR")+"' "
	cQuery += "	AND ST9.T9_TIPMOD  = TQR.TQR_TIPMOD AND TQR.D_E_L_E_T_ <> '*') "
	cQuery += "JOIN "+RetSqlName("TQT")+" TQT ON (TQT.TQT_FILIAL = '"+xFilial("TQT")+"' "
	cQuery += "	AND TQS.TQS_MEDIDA = TQT.TQT_MEDIDA AND TQT.D_E_L_E_T_ <> '*') "
	cQuery += "JOIN "+RetSqlName("TQX")+" TQX ON (TQX.TQX_FILIAL = '"+xFilial("TQX")+"' "
	cQuery += "	AND TQS.TQS_MEDIDA = TQX.TQX_MEDIDA AND TQR.TQR_TIPMOD = TQX.TQX_TIPMOD AND TQX.D_E_L_E_T_ <> '*') "
	cQuery += "WHERE TQS.TQS_FILIAL = '"+xFilial("TQS")+"' AND TQS.TQS_MEDIDA BETWEEN '"+Mv_Par05+"' AND '"+Mv_Par06+"' "
	cQuery += "                                   AND TQS.TQS_SULCAT < "+AllTrim(Str(Mv_Par07))+" AND TQS.D_E_L_E_T_ <> '*' 
	cQuery += "ORDER BY TQS.TQS_NUMFOG "
	cQuery := ChangeQuery(cQuery)
	dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)  
	TCSetField( cAliasQry, "T9_POSCONT", "N",9,0)

	dbSelectArea(cAliasQry)			   
	dbGoTop()
	If Eof()
	   MsgInfo(STR0017,STR0018) 
	   (cALIASQRY)->(dbCloseArea())
	   lNoData := .T.
	   Return
	Endif 
	
Return
