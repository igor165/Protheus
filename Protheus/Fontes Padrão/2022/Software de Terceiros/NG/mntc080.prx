#INCLUDE "Mntc080.ch"
#INCLUDE "PROTHEUS.CH"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC080
Solicitacao de Servicos Pendentes
@author Elisangela Costa
@since 14/07/04
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTC080()

	//Armazena variaveis p/ devolucao (NGRIGHTCLICK)
	Local aNGBEGINPRM := NGBEGINPRM()

	Local oTempTable //Objeto Tabela Temporária
	Local aPesq      := {}
	Local aBrFilter  := {}
	Local nSizeCTT   := TamSx3( 'CTT_CUSTO' )[ 1 ]

	Private aRotina    := MenuDef()
	Private cCadastro  := OemtoAnsi(STR0007) //"Solicitacao de Servico Pendente"
	Private cPrograma  := "MNTC080"
	Private lTEMESTORG := .F.
	Private lTEMFACI   := .F.
	Private cLOCAL080  := Space(Len(TAF->TAF_CODNIV))
	Private aFILHOSLOC := {}
	Private cSITA      := "A"
	Private cSITD      := "D"
	Private cTRBB      := GetNextAlias()//Alias Tabela Temporária

	//| Variaveis utilizadas para qarametros!                        |
	//| mv_par01     De Centro de Custo                              |
	//| mv_par02     Ate Centro de Custo                             |
	//| mv_par03     De Centro de Trabalho                           |
	//| mv_par04     Ate Centro de Trabalho                          |
	//| mv_par05     De Familia de Bens                              |
	//| mv_par06     Ate Familia de Bens                             |
	//| mv_par07     De Bem                                          |
	//| mv_par08     Ate Bem                                         |
	//| mv_par09     Prazo                                           |
	//| mv_par10     Imprimir Serviço da SS (Sim/Nao)                |

	lTEMESTORG := NGINTESTORG() //Verifica se tem Estrutura Organizacional
	lTEMFACI   := lTEMESTORG
	aPos1      := {15,1,95,315 }

	aDBFB := {}
		Aadd(aDBFB,{"SOLICI"  ,"C", 06,0})
		Aadd(aDBFB,{"TIPOOS"  ,"C", 11,0})
		Aadd(aDBFB,{"CODBEM"  ,"C", 16,0})
		Aadd(aDBFB,{"NOMEBL"  ,"C", 30,0})
		Aadd(aDBFB,{"CODFAMI" ,"C", 06,0})
		Aadd(aDBFB,{"NOMEFAM" ,"C", 20,0})
		Aadd(aDBFB,{"CCUSTO"  ,"C", nSizeCTT,0})
		Aadd(aDBFB,{"CENTRA"  ,"C", 06,0})
		Aadd(aDBFB,{"DATABER" ,"D", 08,0})
		Aadd(aDBFB,{"HORABER" ,"C", 05,0})
		If AllTrim(GetNewPar("MV_NGMULOS","N")) <> "S"
			Aadd(aDBFB,{"ORDEM"   ,"C", 06,0})
		EndIf
		Aadd(aDBFB,{"SITUAC"  ,"C", 01,0})
		Aadd(aDBFB,{"CODMSS"  ,"C", 06,0})

	//Instancia classe FWTemporaryTable
	oTempTable := FWTemporaryTable():New( cTRBB, aDBFB )
	//Cria indices
	oTempTable:AddIndex( "Ind01" , {"SOLICI"} )
	//Cria a tabela temporaria
	oTempTable:Create()

	If AllTrim(GetNewPar("MV_NGMULOS","N")) <> "S"
		aTRBB := {{STR0008,"SOLICI",  "C", 06, 0, "@!" },;     //"Solitacao"
				  {STR0009,"TIPOOS",  "C", 11, 0, "@!" },;     //"Tipo Sol."
				  {STR0010,"CODBEM",  "C", 16, 0, "@!" },;     //"Bem / Localizacao"
				  {STR0011,"NOMEBL",  "C", 30, 0, "@!" },;     //"Descricao"
				  {STR0012,"CODFAMI", "C", 06, 0, "@!" },;     //"Familia"
				  {STR0011,"NOMEFAM", "C", 20, 0, "@!" },;     //"Descricao"
				  {STR0013,"CCUSTO",  "C", nSizeCTT,0,"@!" },; //"C.Custo"
				  {STR0014,"CENTRA",  "C", 06, 0, "@!" },;     //"C.Trabalho"
				  {STR0015,"DATABER", "D", 08, 0, "99/99/99"},;//"Dt.Abert."
				  {STR0016,"HORABER", "C", 05, 0, "99:99" },;  //"Hr.Abert."
				  {STR0017,"ORDEM",   "C", 06, 0, "@!" }}      //"Ordem Serv."

		// Array responsável pela disponibilização do filtro do browse
		aBrFilter := {  {"SOLICI",  STR0008, "C", 06, 0, "@!" },;     //"Solitacao"
						{"TIPOOS",  STR0009, "C", 11, 0, "@!" },;     //"Tipo Sol."
						{"CODBEM",  STR0010, "C", 16, 0, "@!" },;     //"Bem / Localizacao"
						{"NOMEBL",  STR0011, "C", 30, 0, "@!" },;     //"Descricao"
						{"CODFAMI", STR0012, "C", 06, 0, "@!" },;     //"Familia"
						{"NOMEFAM", STR0011, "C", 20, 0, "@!" },;     //"Descricao"
						{"CCUSTO",  STR0013, "C", nSizeCTT,0,"@!" },; //"C.Custo"
						{"CENTRA",  STR0014, "C", 06, 0, "@!" },;     //"C.Trabalho"
						{"DATABER", STR0015, "D", 08, 0, "99/99/99"},;//"Dt.Abert."
						{"HORABER", STR0016, "C", 05, 0, "99:99" },;  //"Hr.Abert."
						{"ORDEM",   STR0017, "C", 06, 0, "@!" }}      //"Ordem Serv."
	Else
		aTRBB := {{STR0008 ,"SOLICI"  ,"C", 06, 0, "@!" },;     //"Solitacao"
				  {STR0009 ,"TIPOOS"  ,"C", 11, 0, "@!" },;     //"Tipo Sol."
				  {STR0010 ,"CODBEM"  ,"C", 16, 0, "@!" },;     //"Bem / Localizacao"
				  {STR0011 ,"NOMEBL"  ,"C", 30, 0, "@!" },;     //"Descricao"
				  {STR0012 ,"CODFAMI" ,"C", 06, 0, "@!" },;     //"Familia"
				  {STR0011 ,"NOMEFAM" ,"C", 20, 0, "@!" },;     //"Descricao"
				  {STR0013 ,"CCUSTO"  ,"C", nSizeCTT, 0, "@!" },;     //"C.Custo"
				  {STR0014 ,"CENTRA"  ,"C", 06, 0, "@!" },;     //"C.Trabalho"
				  {STR0015 ,"DATABER" ,"D", 08, 0, "99/99/99"},;//"Dt.Abert."
				  {STR0016 ,"HORABER" ,"C", 05, 0, "99:99" }}  //"Hr.Abert."

		// Array responsável pela disponibilização do filtro do browse
		aBrFilter := {  {"SOLICI"  , STR0008, "C", 06, 0, "@!" },;     //"Solitacao"
						{"TIPOOS"  , STR0009, "C", 11, 0, "@!" },;     //"Tipo Sol."
						{"CODBEM"  , STR0010, "C", 16, 0, "@!" },;     //"Bem / Localizacao"
						{"NOMEBL"  , STR0011, "C", 30, 0, "@!" },;     //"Descricao"
						{"CODFAMI" , STR0012, "C", 06, 0, "@!" },;     //"Familia"
						{"NOMEFAM" , STR0011, "C", 20, 0, "@!" },;     //"Descricao"
						{"CCUSTO"  , STR0013, "C", nSizeCTT, 0, "@!" },;     //"C.Custo"
						{"CENTRA"  , STR0014, "C", 06, 0, "@!" },;     //"C.Trabalho"
						{"DATABER" , STR0015, "D", 08, 0, "99/99/99"},;//"Dt.Abert."
						{"HORABER" , STR0016, "C", 05, 0, "99:99" }}  //"Hr.Abert."
	EndIf

	Processa({ |lEnd| MNTC080INI() }, STR0018 ) //"Aguarde ..Processanto Arquivo de S.S."

	DbSelectarea(cTRBB)
	DbGotop()

	//Cria Array para montar a chave de pesquisa
	aAdd( aPesq , { STR0008 ,{{"","C" , 255 , 0 ,"","@!"} }} ) // Indices de pesquisa

	oBrowse:= FWMBrowse():New()
	oBrowse:SetDescription(cCadastro)
	oBrowse:SetTemporary(.T.)
	oBrowse:SetAlias(cTRBB)
	oBrowse:SetFields(aTRBB)
	oBrowse:SetFieldFilter(aBrFilter)
	oBrowse:AddLegend("(cTRBB)->SITUAC = cSITA", "BR_VERMELHO", STR0038)
	oBrowse:AddLegend("(cTRBB)->SITUAC = cSITD", "BR_AMARELO", STR0039)
	oBrowse:SetSeek(.T.,aPesq)
	oBrowse:Activate()

	oTempTable:Delete()// Deleta Tabela Temporária

	DbSelectArea("TQB")
	DbSetOrder(01)
	Dbseek(xFilial("TQB"))

	//Devolve variaveis armazenadas (NGRIGHTCLICK)
	NGRETURNPRM(aNGBEGINPRM)

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC080INI
Monta o arquivo temporario inicial mostrado no browse
@author Elisangela Costa
@since 14/07/04
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTC080INI()

	DbSelectArea("TQB")
	DbSetOrder(01)
	DbSeek(xFilial("TQB"))
	While !Eof() .And. TQB->TQB_FILIAL == xFilial("TQB")

		cSITUCA := " "

		If TQB->TQB_SOLUCA = "A" .Or. TQB->TQB_SOLUCA = "D"

			If !Empty(TQB->TQB_ORDEM)

				DbSelectArea("STJ")
				DbSetOrder(01)
				If DbSeek(xFilial("STJ")+TQB->TQB_ORDEM)
					cSITUCA := "D"
				Else
					DbSelectArea("STS")
					DbSetOrder(01)
					If DbSeek(xFilial("STS")+TQB->TQB_ORDEM)
						If STS->TS_SITUACA <> "L" .Or. STS->TS_TERMINO <> "N"
							DbSelectArea("TQB")
							DbSkip()
							Loop
						EndIf
					Else
						DbSelectArea("TQB")
						DbSkip()
						Loop
					EndIf
					cSITUCA := "D"
				EndIf
			Else
				If TQB->TQB_SOLUCA = "A"
					cSITUCA := "A"
				ElseIf TQB->TQB_SOLUCA = "D"
					cSITUCA := "D"
				Else
					dbSelectArea("TQB")
					dbSkip()
					Loop
				EndIf
			EndIf

			//Grava arquivo temporario
			MNC080GRAV(cSITUCA)

		EndIf
		dbSelectArea("TQB")
		dbSkip()
	End

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNC080PAR
Reprocessa o browse de acordo com os parametros
@author Elisangela Costa
@since 14/07/04
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNC080PAR()

	If !Pergunte("MNT080",.T.)
		Return
	EndIf

	DbSelectArea(cTRBB)
	Zap

	Processa({ |lEnd| MNTC080OS() }, STR0018 ) //"Aguarde ..Processando Arquivo de S.S."

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC080OS
Monta o arquivo temporario
@author Elisangela Costa
@since 14/07/04
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTC080OS()

	Local xyz := 0

	If !lTEMESTORG .Or. Empty(aFILHOSLOC)

		cCondicao := '(TQB->TQB_SOLUCA = "A" .Or. TQB->TQB_SOLUCA = "D") .And.'
		cCondicao := cCondicao + 'TQB->TQB_CENTRA >= MV_PAR03 .And. TQB->TQB_CENTRA <= MV_PAR04'

		DbSelectArea("TQB")
		DbSetOrder(07)
		DbSeek(xFilial("TQB")+MV_PAR01,.T.)
		While !Eof() .And. TQB->TQB_FILIAL == xFilial("TQB") .And. TQB->TQB_CCUSTO <= MV_PAR02

			cSITUCA := " "
			If &(cCondicao)

				If TQB->TQB_TIPOSS == "B" //Bem

					If TQB->TQB_CODBEM < MV_PAR07 .Or. TQB->TQB_CODBEM > MV_PAR08
						DbSelectArea("TQB")
						DbSkip()
						Loop
					EndIf

					DbSelectArea("ST9")
					DbSetOrder(01)
					If DbSeek(xFilial("ST9")+TQB->TQB_CODBEM)
						If ST9->T9_CODFAMI < MV_PAR05 .Or. ST9->T9_CODFAMI > MV_PAR06
							DbSelectArea("TQB")
							DbSkip()
							Loop
						EndIf
					Else
						DbSelectArea("TQB")
						DbSkip()
						Loop
					EndIf

				EndIf

				If !Empty(TQB->TQB_ORDEM)

					DbSelectArea("STJ")
					DbSetOrder(01)
					If DbSeek(xFilial("STJ")+TQB->TQB_ORDEM)
						cSITUCA := "D"
					Else
						DbSelectArea("STS")
						DbSetOrder(01)
						If DbSeek(xFilial("STS")+TQB->TQB_ORDEM)
							If STS->TS_SITUACA <> "L" .Or. STS->TS_TERMINO <> "N"
								DbSelectArea("TQB")
								DbSkip()
								Loop
							EndIf
						Else
							DbSelectArea("TQB")
							DbSkip()
							Loop
						EndIf
						cSITUCA := "D"
					EndIf
				Else
					If TQB->TQB_SOLUCA = "A"
						cSITUCA := "A"
					ElseIf TQB->TQB_SOLUCA = "D"
						cSITUCA := "D"
					Else
						dbSelectArea("TQB")
						dbSkip()
						Loop
					EndIf
				EndIf

				nPRAZO := dDATABASE - TQB->TQB_DTABER

				If MV_PAR09 = 0
					//Grava arquivo temporario
					MNC080GRAV(cSITUCA)
				Else
					If nPRAZO <= MV_PAR09
						//Grava arquivo temporario
						MNC080GRAV(cSITUCA)
					EndIf
				EndIf

			EndIf
			DbSelectArea("TQB")
			DbSkip()
		End
	Else
		cCondicao := '(TQB->TQB_SOLUCA = "A" .Or. TQB->TQB_SOLUCA = "D") .And.'
		cCondicao := cCondicao + 'TQB->TQB_CCUSTO >= MV_PAR01 .And. TQB->TQB_CCUSTO <= MV_PAR02 .And. '
		cCondicao := cCondicao + 'TQB->TQB_CENTRA >= MV_PAR03 .And. TQB->TQB_CENTRA <= MV_PAR04'

		For xyz := 1 To Len(aFILHOSLOC)

			If aFILHOSLOC[xyz][2] = "1"
				DbSelectArea("TQB")
				DbSetOrder(05)
				If DbSeek(xFilial("TQB")+aFILHOSLOC[xyz][1])
					While !Eof() .And. TQB->TQB_FILIAL == xFilial("TQB") .And. TQB->TQB_CODBEM = aFILHOSLOC[xyz][1]

						cSITUCA := " "
						If &(cCondicao)

							If TQB->TQB_TIPOSS == "B" //Bem

								If TQB->TQB_CODBEM < MV_PAR07 .Or. TQB->TQB_CODBEM > MV_PAR08
									DbSelectArea("TQB")
									DbSkip()
									Loop
								EndIf

								DbSelectArea("ST9")
								DbSetOrder(01)
								If DbSeek(xFilial("ST9")+TQB->TQB_CODBEM)
									If ST9->T9_CODFAMI < MV_PAR05 .Or. ST9->T9_CODFAMI > MV_PAR06
										DbSelectArea("TQB")
										DbSkip()
										Loop
									EndIf
								Else
									DbSelectArea("TQB")
									DbSkip()
									Loop
								EndIf
							EndIf

							If !Empty(TQB->TQB_ORDEM)
								DbSelectArea("STJ")
								DbSetOrder(01)
								If DbSeek(xFilial("STJ")+TQB->TQB_ORDEM)
									If STJ->TJ_SITUACA <> "L" .Or. STJ->TJ_TERMINO <> "N"
										DbSelectArea("TQB")
										DbSkip()
										Loop
									EndIf
									cSITUCA := "D"
								Else
									DbSelectArea("STS")
									DbSetOrder(01)
									If DbSeek(xFilial("STS")+TQB->TQB_ORDEM)
										If STS->TS_SITUACA <> "L" .Or. STS->TS_TERMINO <> "N"
											DbSelectArea("TQB")
											DbSkip()
											Loop
										EndIf
									Else
										DbSelectArea("TQB")
										DbSkip()
										Loop
									EndIf
									cSITUCA := "D"
								EndIf
							Else
								If TQB->TQB_SOLUCA = "A"
									cSITUCA := "A"
								ElseIf TQB->TQB_SOLUCA = "D"
									cSITUCA := "D"
								Else
									dbSelectArea("TQB")
									dbSkip()
									Loop
								EndIf
							EndIf

							nPRAZO := dDATABASE - TQB->TQB_DTABER
							If MV_PAR09 = 0
								//Grava arquivo temporario
								MNC080GRAV(cSITUCA)
							Else
								If nPRAZO <= MV_PAR09
									//Grava arquivo temporario
									MNC080GRAV(cSITUCA)
								EndIf
							EndIf

						EndIf
						DbSelectArea("TQB")
						DbSkip()
					End
				EndIf
			Else
				DbSelectArea("TQB")
				DbSetOrder(05)
				If DbSeek(xFilial("TQB")+aFILHOSLOC[xyz][1])
					While !Eof() .And. TQB->TQB_FILIAL == xFilial("TQB") .And. TQB->TQB_CODBEM = aFILHOSLOC[xyz][1]

						If &(cCondicao)

							If !Empty(TQB->TQB_ORDEM)

								DbSelectArea("STJ")
								DbSetOrder(01)
								If DbSeek(xFilial("STJ")+TQB->TQB_ORDEM)
									If STJ->TJ_SITUACA <> "L" .Or. STJ->TJ_TERMINO <> "N"
										DbSelectArea("TQB")
										DbSkip()
										Loop
									EndIf
									cSITUCA := "D"
								Else
									DbSelectArea("STS")
									DbSetOrder(01)
									If DbSeek(xFilial("STS")+TQB->TQB_ORDEM)
										If STS->TS_SITUACA <> "L" .Or. STS->TS_TERMINO <> "N"
											DbSelectArea("TQB")
											DbSkip()
											Loop
										EndIf
									Else
										DbSelectArea("TQB")
										DbSkip()
										Loop
									EndIf
									cSITUCA := "D"
								EndIf
							Else
								If TQB->TQB_SOLUCA = "A"
									cSITUCA := "A"
								ElseIf TQB->TQB_SOLUCA = "D"
									cSITUCA := "D"
								Else
									dbSelectArea("TQB")
									dbSkip()
									Loop
								EndIf
							EndIf

							nPRAZO := dDATABASE - TQB->TQB_DTABER
							If MV_PAR09 = 0
								//Grava arquivo temporario
								MNC080GRAV(cSITUCA)
							Else
								If nPRAZO <= MV_PAR09
									//Grava arquivo temporario
									MNC080GRAV(cSITUCA)
								EndIf
							EndIf

						EndIf
						DbSelectArea("TQB")
						DbSkip()
					End
				EndIf
			EndIf
		Next xyz
	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC080PE
Pesquisa especifica para solicitacao de servico
@author Elisangela Costa
@since 14/07/2004
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTC080PE()

	cNSOLICI := Space(Len(TQB->TQB_SOLICI))

	Define MsDialog oDlg5 From 300,120 To 400,363 Title OemToAnsi(STR0019) Pixel //"Pesquisa"

		@ 0.5,1 Say OemtoAnsi(STR0020) //"Solicitacao"
		@ 0.5,5 MsGet cNSOLICI  Picture '@!' Size 20,10 F3 "NG7"

		@ 3.7,20 Button "&OK" Size 30,10 Action MNTC080POS()

	Activate MsDialog oDlg5 Centered

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC080POS
Posiciona no registro
@author Elisangela Costa
@since 14/07/2004
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Static Function MNTC080POS()

	DbSelectArea(cTRBB)
	DbSeek(cNSOLICI)
	oDlg5:End()

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNC080ORD
Verifica se a solicitacao tem ordem servico para ser consul.
@author Elisangela Costa
@since 14/07/04
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNC080ORD()

	DbSelectArea(cTRBB)
	If !Empty((cTRBB)->ORDEM)
		MNC080COS((cTRBB)->ORDEM,Replicate("0",Len(STJ->TJ_PLANO)))
	Else
		MsgInfo(STR0021,STR0022) //"A solicitacao de servico nao possui O.S relacionada."###"ATENCAO"
		Return .T.
	EndIf

	DbSelectArea(cTRBB)

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNC080COS
Monta um browse com a Ordem de Servico rel. a S.S
@author Elisangela Costa
@since 14/07/04
@version undefined
@param cORDEM080, characters
@param cPLANO080, characters
@type function
/*/
//---------------------------------------------------------------------
Function MNC080COS(cORDEM080,cPLANO080)

	cCadast1  := cCadastro
	cCadastro := OemtoAnsi(STR0040) //"Ordem de Servico"
	aOldar080 := aCLONE(aRotina)
	aRotina   := {{STR0024 ,"NGCAD01"  , 0, 1},;    //"Visual."
				  {STR0025 ,"OSDETALH" , 0, 2, 0},; //"Detalhes"
				  {STR0026 ,"OSHISTOCO", 0, 3, 0},; //"Ocorren."
				  {STR0027 ,"OshistPro", 0, 4, 0},; //"proBlemas"
				  {STR0028 ,"NGATRASOS", 0, 4, 0},; //"Motivo Atraso"
				  {STR0029 ,"OshistEta", 0, 4}}      //"Etapas"

	cKey     := cORDEM080
	bWHILE   := {|| !Eof() .And. STJ->TJ_ORDEM ==  cORDEM080}
	bFOR     := {|| STJ->TJ_FILIAL  == xFilial("STJ")}
	bWHILE2  := {|| !Eof() .And. STS->TS_ORDEM == cORDEM080}
	bFOR2    := {|| STS->TS_FILIAL  == xFilial("STS")}
	bDBFFUNC := {|| NG510PROC("TJ_","TS_","STS",cKey,bWHILE2,bFOR2)}

	DbSelectArea("STS")
	DbSetOrder(01)
	DbSelectArea("STJ")
	DbSetOrder(01)

	NGCONSULTA("TRBJ",cKey,bWHILE,bFOR,aRotina,{},bDBFFUNC)

	DbSelectArea("STJ")
	DbSetOrder(01)
	DbSelectArea("STS")
	DbSetOrder(01)

	cCadastro := cCadast1
	aRotina   := aCLONE(aOldar080)

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC080VI
Monta a tela para visualizacao da solicitacao de servico
@author Elisangela Costa
@since 14/07/04
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTC080VI()

	Private aNGButton  := {}
	If AllTrim(GetNewPar("MV_NGMULOS","N")) <> "S"
		Aadd(aNGButton, {"ANALITICO" ,{|| MNC080ORD()},STR0023})  //"O.S."
	EndIf

	DbSelectArea("TQB")
	DbSetOrder(01)
	DbSeek(xFilial("TQB")+(cTRBB)->SOLICI)
	NGCAD01("TQB",Recno(),1)

	DbSelectArea(cTRBB)

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC080IM
Impressao de Solicitacoes de Servivo Pendentes
@author Elisangela Costa
@since 14/07/04
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTC080IM()

	Local cString := cTRBB
	Local cDesc1  := STR0007 //"Solicitacao de Servico Pendente"
	Local cDesc2  := ""
	Local cDesc3  := ""
	Local wnrel   := "MNTC080"

	Private aReturn  := {STR0030, 1,STR0031, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
	Private nLastKey := 0
	Private Titulo   := cDesc1
	Private Tamanho  := "G"

	DbSelectArea(cTRBB)
	nRegTRBB := Recno()
	DbGoTop()

	If Reccount() = 0
		nDel := Help(" ",1,"NGTDADIMP") //"Nao existem dados para imprimir..."###"ATENCAO"
		Return .T.
	EndIf

	Pergunte("MNT080",.F.)

	//Envia controle para a funcao SETPRINT
	wnrel := SetPrint(cString,wnrel,,titulo,cDesc1,cDesc2,cDesc3,.F.,"")
	If nLastKey = 27
		Set Filter To
		Return
	Endif

	SetDefault(aReturn,cString)
	RptStatus({|lEnd| C080Imp(@lEnd,wnRel,titulo,tamanho)},titulo)

	DbSelectArea(cTRBB)
	DbGoto(nRegTRBB)

Return Nil
//---------------------------------------------------------------------
/*/{Protheus.doc} C080Imp
Impressao do Relatorio
@author Elisangela Costa
@since 14/07/04
@version undefined
@param lEnd, logical
@param wnRel
@param titulo
@param tamanho
@type function
/*/
//---------------------------------------------------------------------
Static Function C080Imp(lEnd,wnRel,titulo,tamanho)

	//Define Variaveis
	Local cRodaTxt := ""
	Local nCntImpr := 0

	Private li    := 80
	Private m_pag := 1

	//Verifica se deve comprimir ou nao
	nTipo  := IIF(aReturn[4]==1,15,18)

	Private Cabec1
	Private Cabec2   := " "
	Private nomeprog := "MNTC080"

	If AllTrim(GetNewPar("MV_NGMULOS","N")) <> "S"
		Cabec1 := STR0032 //"Sol.S. Tipo Sol.   Bem/Localizacao  Descricao                       Familia  Descricao             C.Custo              Descricao                       C.Trab. Descricao                       Dt.Aber.    Hr.Aber.  Ordem"
	Else
		Cabec1 := "Sol.S. Tipo Sol.   Bem/Localizacao  Descricao                       Familia  Descricao             C.Custo              Descricao                       C.Trab. Descricao                       Dt.Aber.    Hr.Aber."
	EndIf
	/*
	1         2         3         4         5         6         7         8         9         0         1         2         3         4         5         6         7         8         9         200       210     220
	01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
	_____________________________________________________________________________________________________________________________________________________________________________________________________________________________
	Sol.S. Tipo Sol.   Bem/Localizacao  Descricao                       Familia  Descricao             C.Custo              Descricao                       C.Trab. Descricao                       Dt.Aber.    Hr.Aber.  Ordem
	_____________________________________________________________________________________________________________________________________________________________________________________________________________________________

	xxxxxx xxxxxxxxxxx xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  xxxxxx   xxxxxxxxxxxxxxxxxxxx  xxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  xxxxxx  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  99/99/9999  99:99     xxxxxx
	xxxxxx xxxxxxxxxxx xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  xxxxxx   xxxxxxxxxxxxxxxxxxxx  xxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  xxxxxx  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  99/99/9999  99:99     xxxxxx
	xxxxxx xxxxxxxxxxx xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  xxxxxx   xxxxxxxxxxxxxxxxxxxx  xxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  xxxxxx  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  99/99/9999  99:99     xxxxxx
	xxxxxx xxxxxxxxxxx xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  xxxxxx   xxxxxxxxxxxxxxxxxxxx  xxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  xxxxxx  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  99/99/9999  99:99     xxxxxx
	*/

	//Define o indice de leitura do arquivo de Bens

	DbSelectArea(cTRBB)
	DbGoTop()
	SetRegua(LastRec())
	While !(cTRBB)->(Eof())

		IncRegua()
		NGSOMALI(58)
		@LI,000 Psay (cTRBB)->SOLICI  Picture "@!"
		@li,007 Psay (cTRBB)->TIPOOS  Picture "@!"
		@li,019 Psay (cTRBB)->CODBEM  Picture "@!"
		@li,036 Psay (cTRBB)->NOMEBL  Picture "@!"
		@li,068 Psay (cTRBB)->CODFAMI Picture "@!"
		@li,077 Psay (cTRBB)->NOMEFAM Picture "@!"
		@li,099 Psay (cTRBB)->CCUSTO  Picture "@!"
		@li,120 Psay NGSEEK("SI3",(cTRBB)->CCUSTO,1,"SubStr(I3_DESC,1,30)")
		@li,152 Psay (cTRBB)->CENTRA  Picture "@!"
		@li,160 Psay NGSEEK("SHB",(cTRBB)->CENTRA,1,"SubStr(HB_NOME,1,30)")
		@li,192 Psay (cTRBB)->DATABER Picture "99/99/9999"
		@li,204 Psay (cTRBB)->HORABER
		If AllTrim(GetNewPar("MV_NGMULOS","N")) <> "S"
			@li,214 Psay (cTRBB)->ORDEM Picture "@!"
		EndIf

		If MV_PAR10 = 2
			cMemo := MSMM((cTRBB)->CODMSS,,,,3)
			If !Empty(cMemo)
				NGIMPMEMO(cMemo,150,000,Space(5)+STR0042+"..: ",.F.,.T.)//"Servico"
			EndIf
		EndIf

		(cTRBB)->(DbSkip())
	End

	Roda(nCntImpr,cRodaTxt,Tamanho)
	Set Filter To
	Set Device To Screen

	If aReturn[5] = 1
		Set Printer To
		dbCommitAll()
		OurSpool(wnrel)
	EndIf
	MS_FLUSH()

Return Nil
//---------------------------------------------------------------------
/*/{Protheus.doc} MNT080EST
Permite selecionar a localizacao da estrutura organizacional a ser filtrada
@author Elisangela Costa
@since 14/07/04
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNT080EST()

	Local xyy

	aESTORG080 := {}
	aFILHOSLOC := {}

	If !lTEMESTORG
		MSGINFO(STR0033,STR0022) //"Nao existe estrutura organizacional para ser selecionada."###"ATENCAO"
		Return .T.
	EndIf

	aESTORG080 := SGASELECT(19) //Retorna os itens selecionados na estrutura organizacional
	If Len(aESTORG080) > 0
		For xyy  := 1 To Len(aESTORG080)
			If aESTORG080[XYY][2]
				DbSelectArea("TAF")
				DbSetOrder(02)
				If DbSeek(xFilial("TAF")+"001"+aESTORG080[XYY][1])
					If !Empty(TAF->TAF_MODMNT)
						If TAF->TAF_INDCON = "1" //Bem
							Aadd(aFILHOSLOC,{TAF->TAF_CODCON,"1"})
						ElseIf TAF->TAF_INDCON = "2" //Localizacao
							Aadd(aFILHOSLOC,{TAF->TAF_CODNIV,"2"})
						EndIf
					EndIf
				EndIf
			EndIf
		Next
	EndIf
Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNC080VLOC
Valida parametro de Localizacao
@author Elisangela Costa
@since 14/07/2004
@version undefined
@param cLOCALIZ, characters
@type function
/*/
//---------------------------------------------------------------------
Function MNC080VLOC(cLOCALIZ)

	If !Empty(cLOCALIZ)
		DbSelectArea("TAF")
		DbSetOrder(07)
		If !DbSeek(xFilial("TAF")+"X"+"2"+cLOCALIZ)
			MsgInfo(STR0036,STR0022) //"Codigo da localizacao invalido."###"ATENCAO"
			Return .F.
		EndIf
	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNC080GRAV
Grava arquivo temporario mostrado no browse
@author  Elisangela Costa
@since 14/07/2004
@version undefined
@param cSITUAC, characters
@type function
/*/
//---------------------------------------------------------------------
Function MNC080GRAV(cSITUAC)

	Dbselectarea(cTRBB)
	If !(cTRBB)->(Dbseek(TQB->TQB_SOLICI))
		(cTRBB)->(DbAppend())
		(cTRBB)->SOLICI := TQB->TQB_SOLICI
		(cTRBB)->TIPOOS := If(TQB->TQB_TIPOSS = "B",STR0037,STR0035) //"BEM"###"LOCALIZACAO"
		(cTRBB)->CODBEM := TQB->TQB_CODBEM

		If TQB->TQB_TIPOSS = "B"
			DbSelectArea("ST9")
			DbSetOrder(01)
			If DbSeek(xFilial("ST9")+TQB->TQB_CODBEM)
				(cTRBB)->NOMEBL  := SubStr(ST9->T9_NOME,1,30)
				(cTRBB)->CODFAMI := ST9->T9_CODFAMI
				DbSelectArea("ST6")
				DbSetOrder(01)
				If DbSeek(xFilial("ST6")+ST9->T9_CODFAMI)
					(cTRBB)->NOMEFAM := SubStr(ST6->T6_NOME,1,20)
				EndIf
			EndIf
		Else
			DbSelectArea("TAF")
			DbSetOrder(07)
			If DbSeek(xFilial("TAF")+"X"+"2"+TQB->TQB_CODBEM)
				(cTRBB)->NOMEBL := SubStr(TAF->TAF_NOMNIV,1,30)
			EndIf
		EndIf

		(cTRBB)->CCUSTO  := TQB->TQB_CCUSTO
		(cTRBB)->CENTRA  := TQB->TQB_CENTRA
		(cTRBB)->DATABER := TQB->TQB_DTABER
		(cTRBB)->HORABER := TQB->TQB_HOABER
		If AllTrim(GetNewPar("MV_NGMULOS","N")) <> "S"
			(cTRBB)->ORDEM   := TQB->TQB_ORDEM
		EndIf
		(cTRBB)->SITUAC  := cSITUAC
		(cTRBB)->CODMSS   := TQB->TQB_CODMSS
	EndIf
Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Utilizacao de menu Funcional
@author Ricardo Dal Ponte
@since 29/11/2006
@version undefined
@return Array com opcoes da rotina.
@type function
/*/
//---------------------------------------------------------------------
Static Function MenuDef()

	//	Parametros do array a Rotina:
	// 1. Nome a aparecer no cabecalho
	// 2. Nome da Rotina associada
	// 3. Reservado
	// 4. Tipo de Transação a ser efetuada:
	//    1 - Pesquisa e Posiciona em um Banco de Dados
	//    2 - Simplesmente Mostra os Campos
	//    3 - Inclui registros no Bancos de Dados
	//    4 - Altera o registro corrente
	//    5 - Remove o registro corrente do Banco de Dados
	// 5. Nivel de acesso
	// 6. Habilita Menu Funcional

	Local aRotina := {{STR0001 ,"MNTC080PE",0,1}  ,; //"Pesquisar"
					  {STR0002 ,"MNTC080VI",0,2}  ,; //"Visualizar"
					  {STR0003 ,"MNT080EST",0,3,0},; //"Sel.Estrut.Org."
					  {STR0004 ,"MNC080PAR",0,3,0},; //"Parametros"
					  {STR0005 ,"MNTC080IM",0,3,0}}  //"Relatorio"
Return(aRotina)