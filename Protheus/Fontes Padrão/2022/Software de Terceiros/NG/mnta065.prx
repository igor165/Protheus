#Include 'Protheus.ch'
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "Mnta065.ch"

#DEFINE _nVERSAO 2 //Versao do fonte

//--------------------------------------------------------------------------------
/*/{Protheus.doc} MNTA065
Pontos de Lubrificação

@author Pablo Servin
@since 07/04/2014
@return Nil
@version p11
/*/
//--------------------------------------------------------------------------------
Function MNTA065()
	
	Local aNGBEGINPRM := NGBEGINPRM( _nVERSAO, "MNTA065" )
	Local oBrowse

	oBrowse := FWMBrowse():New() // Instancia a classe FWMBrowse.

	oBrowse:SetAlias( "TPV" )  // Alias da tabela utilizada
	oBrowse:SetMenuDef( "MNTA065" ) // Nome do fonte onde esta a função MenuDef
	oBrowse:SetDescription( STR0007 ) // Descrição do browse // "Bens do Roteiro"
	oBrowse:Activate()

	NGRETURNPRM(aNGBEGINPRM)

Return Nil

//--------------------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Modelo dados.

@author Pablo Servin
@since 07/04/2014
@return oModel
@version p11
/*/
//--------------------------------------------------------------------------------
Static Function ModelDef()

	Local oModel
	Local oStruct := FWFormStruct( 1, "TPV" )

	// Cria o objeto do Modelo de Dados
	oModel := MPFormModel():New( "MNTA065" )
	
	// Adiciona ao modelo uma estrutura de formulário de edição por campo
	oModel:AddFields( "MNTA065_TPV", Nil, oStruct )
	oModel:SetPrimaryKey( { } )
	oModel:SetDescription( STR0007 ) //"Bens do Roteiro"
	oModel:GetModel( "MNTA065_TPV" ):SetDescription( STR0007 ) //"Bens do Roteiro"
	
Return oModel
//--------------------------------------------------------------------------------
/*/{Protheus.doc} ViewDef
Interface Gráfica

@author Pablo Servin
@since 07/04/2014
@return oModel
@version oView
/*/
//--------------------------------------------------------------------------------
Static Function ViewDef()

	Local oView
	Local oModel := FWLoadModel( "MNTA065" )
	Local oStruct := FWFormStruct( 2, "TPV" )
	
	oView := FWFormView():New()
	
	// Objeto do model a se associar a view.
	oView:SetModel( oModel )	
	//Adiciona no nosso View um controle do tipo FormFields(antiga enchoice)
	oView:AddField( "MNTA065_TPV", oStruct, Nil )
	// Criar um "box" horizontal para receber elementos da view
	oView:CreateHorizontalBox( "TELA", 100 )
	// Associa um View a um box
	oView:SetOwnerView( "MNTA065_TPV", "TELA" )
	//Inclusão de itens nas Ações Relacionadas de acordo com O NGRightClick
	NGMVCUserBtn(oView)

Return oView

//--------------------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Menu de opções padrão

@author Pablo Servin
@since 07/04/2014
@return oModel
@version oView

/*/
//--------------------------------------------------------------------------------
Static Function MenuDef()
Return FWMVCMenu( "MNTA065" )

//--------------------------------------------------------------------------------
/*/{Protheus.doc} NGINCSEQ
Preenche o campo M->TPV_SEQREL de acordo com a TPV e o código do roteiro.

@since 08/04/2014
@return cSEQ : Sequência encontrada.

/*/
//--------------------------------------------------------------------------------
Function NGINCSEQ()

	Local cSeq := "0"
	Local OldAli := Alias()
	Local nRecno := Recno()

	If Inclui .And. !Empty(M->TPV_CODROT)
		DbSelectArea( "TPV" )
		DbSetOrder( 01 )
		DbSeek( xFilial( "TPV" ) + M->TPV_CODROT )
		cSeq := "0"
		While !Eof() .And. TPV->TPV_FILIAL == xFILIAL( "TPV" ) .And.;
				TPV->TPV_CODROT == M->TPV_CODROT
	      
			If Val( TPV->TPV_SEQREL ) > Val( cSeq )
				cSeq := TPV->TPV_SEQREL
			EndIf

			DbSkip()
		End
		DbSelectArea( OldAli )
		DbGoto( nRecno )
	Else
		Return .T.
	EndIf

	cSEQ := IIf( Val( cSEQ ) = 0, "10", Str( Val ( cSEQ ) + 10 ) )
	
	M->TPV_SEQREL := Alltrim(cSEQ)

Return .T.

//--------------------------------------------------------------------------------
/*/{Protheus.doc} MNT065VLDCPOS
Validação dos campos

@author Pablo Servin
@since 08/04/2014
@return lRet
/*/
//--------------------------------------------------------------------------------
Function MNT065VLDCPOS( cCampo )

	Local lRet

	Do Case
		Case cCampo == 'TPV_CODROT'
			lRet := EXISTCPO("TPU",M->TPV_CODROT)
		Case cCampo == 'TPV_CODBEM'
			lRet := EXISTCPO('ST9',M->TPV_CODBEM)
		Case cCampo == 'TPV_SEQREL'
			lRet := EXISTCHAV("TPV",M->TPV_CODROT+M->TPV_CODBEM+M->TPV_SEQREL)
		Case cCampo == 'TPV_SEQUEN'
			lRet := EXISTCHAV("TPV",M->TPV_CODROT+M->TPV_CODBEM+STR(M->TPV_SEQUEN,5))
		OtherWise
			lRet := .T.
	End Case
		
Return lRet
