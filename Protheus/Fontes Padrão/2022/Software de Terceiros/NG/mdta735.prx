#INCLUDE "MDTA735.ch"
#Include "Protheus.ch"

#DEFINE _nVERSAO 2 //Versao do fonte
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MDTA735  ³ Autor ³ Denis Hyroshi de Souza³ Data ³ 11/12/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Cadastro de Areas de Vivencia                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±± 
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MDTA735 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Armazena variaveis p/ devolucao (NGRIGHTCLICK) 				  	   	  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aNGBEGINPRM := NGBEGINPRM(_nVERSAO,,{"TLS"})  
Local lUPDMDT94	:= If( NGRETORDEM("TK1","TK1_FILIAL+TK1_AREA",.T.) > 0, .T., .F.) 
Local cCheckTK1	:= If(lUPDMDT94, "fMBObras('TK1')", ".T." )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Array contendo as Rotinas a executar do programa      ³
//³ ----------- Elementos contidos por dimensao ------------     ³
//³ 1. Nome a aparecer no cabecalho                              ³
//³ 2. Nome da Rotina associada                                  ³
//³ 3. Usado pela rotina                                         ³
//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
//³    2 - Simplesmente Mostra os Campos                         ³
//³    3 - Inclui registros no Bancos de Dados                   ³
//³    4 - Altera o registro corrente                            ³
//³    5 - Remove o registro corrente do Banco de Dados          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aRotina := MenuDef() 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de atualizacoes                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cCadastro := OemtoAnsi(STR0001) //"Areas de Vivencia"
PRIVATE aSMENU := {}, aCHKDEL := {}, bNGGRAVA := {|| fMBObras("TLN") .And. &cCheckTK1 }
PRIVATE cPrograma := "MDTA735"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿ 
//³aCHKDEL array que verifica a INTEGRIDADE REFERENCIAL na exclu-³
//³s„o do registro.                                              ³ 
//³                                                              ³
//³1 - Chave de pesquisa                                         ³
//³2 - Alias de pesquisa                                         ³
//³3 - Ordem de pesquisa                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCHKDEL := { {'TLS->TLS_AREA' , "TLN", 2}}

Private aMemos := {}

dbSelectArea("SX3")
dbSetOrder(2)
If dbSeek("TLS_CODMEM")
	aAdd(aMemos,{"TLS_CODMEM","TLS_DESMEM"})
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Endereca a funcao de BROWSE                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("TLS")
dbSetOrder(1)
mBrowse( 6, 1,22,75,"TLS")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Devolve variaveis armazenadas (NGRIGHTCLICK)                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
NGRETURNPRM(aNGBEGINPRM)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MenuDef  ³ Autor ³ Denis Hyroshi de Souza³ Data ³11/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Utilizacao de Menu Funcional.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMDT                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
Local aRotina :=	{ { STR0002, "AxPesqui", 0 , 1},; //"Pesquisar"
                      { STR0003, "NGCAD01" , 0 , 2},; //"Visualizar"
                      { STR0004, "NGCAD01" , 0 , 3},; //"Incluir"
                      { STR0005, "NGCAD01" , 0 , 4},; //"Alterar"
                      { STR0006, "NGCAD01" , 0 , 5, 3} } //"Excluir"

Return aRotina

//---------------------------------------------------------------------
/*{Protheus.doc} fMBObras
Mostra um markbrowse com as obras relacionadas a vivência

@author Bruno L. Souza
@since 15/04/13
@version MP10/11
@return Nil
*/
//---------------------------------------------------------------------
Static Function fMBObras( cAliViv )
Local nRetAviso := 0
Local aArea := GetArea()
//Variaveis para montar TRB
Local aDBF,aTRBObra
Local oTempTRB
//Variaveis de Tela      
Local oDlgObra,oFont
Local oMARKObra
Local oPnlMSG

Local bOkObra	    := {|| nOpcao := 1,oDlgObra:End()}
Local bCancelObra := {|| nOpcao := 0,oDlgObra:End()}
Local nOpcao
Local lInverte, lRet
Local cAliasTRB := GetNextAlias()
Local cMemo := ""
Local cTrbCC1:=""
Local cTrbCC2:=""
Local cVarHs:=""
Local cStr:=""
Local nOrde:=0
Local cMsM:=""
Local cBusc:=""
Local cVar2:=""
Private cMarca := GetMark()    

lInverte := .F.
If cAliViv == "TLN"
	 TrbCC1:="TLN_CC"
	 TrbCC2:="TLN_NOMECC"
	 VarHs :="TLN_CARACT"
	 cStr:=STR0009
	 cMsM:=TLN->TLN_CARACT
	 cCCusto:="TLN_CC" 
	 cVar2:="TLN_AREA"
ElseIf cAliViv == "TK1"
	TrbCC1:="TK1_CC"
	TrbCC2:="TK1_NOMECC" 
	VarHs :="TK1_CARACT" 
	cStr:= STR0009
	cMsM:=TK1->TK1_CARACT
	cCCusto:="TK1_CC"
	cVar2:="TK1_AREA"
EndIf

dbSelectArea(cAliViv)
dbSetOrder(2)
If dbSeek(xFilial(cAliViv)+M->TLS_AREA) 
	If cAliViv == "TLN"
		nRetAviso := Aviso(STR0015,STR0007,{STR0008,cStr,STR0010})//"Atenção"#"Esta area de vivência está vinculada a uma ou mais obras, deseja atualizar?"#"Todas"#"Selecionar"#"Não"
	ELseIf cAliViv == "TK1"
		nRetAviso := Aviso(STR0015,STR0019,{STR0008,cStr,STR0010})//"Atenção"#"Esta area de vivência está vinculada a uma ou mais fases, deseja atualizar?"#"Todas"#"Selecionar"#"Não"
	Endif
	If nRetAviso == 1 .Or. nRetAviso == 2
	
		//Valores e Caracteristicas da TRB 
		aDBF := {}
		AADD(aDBF,{ "TRB_OK"       , "C" ,02      , 0 })
		AADD(aDBF,{ "TRB_CC"       , "C" ,TamSX3(TrbCC1)[1], 0 }) 
		AADD(aDBF,{ "TRB_NOMECC"  , "C" ,TamSX3(TrbCC2)[1], 0 })
		
		aTRBObra := {}  
		AADD(aTRBObra,{ "TRB_OK"    ,NIL," "	  ,})
		AADD(aTRBObra,{ "TRB_CC"    ,NIL,STR0011,})//"Código da Obra"
		AADD(aTRBObra,{ "TRB_NOMECC",NIL,STR0012,})//"Nome da Obra"
		
		//Cria TRB
		oTempTRB := FWTemporaryTable():New( cAliasTRB, aDBF )
		oTempTRB:AddIndex( "1", {"TRB_CC"} )
		oTempTRB:Create()
		
		Processa({|lEnd| fBuscaObra( cAliViv , cAliasTRB , nRetAviso , cCCusto, cVar2 )},STR0013,STR0014)//"Buscando Obras Relacionadas..."//"Aguarde"
		Dbselectarea(cAliasTRB)
		Dbgotop()
		If (cAliasTRB)->(Reccount()) <= 0
			oTempTRB:Delete()
			RestArea(aArea) 
			Return .T.	
		Endif
		 
		If nRetAviso == 2 //Selecionar
			nOpcao := 0
			
			DEFINE MSDIALOG oDlgObra TITLE OemToAnsi(STR0016) From 64,160 To 580,730 OF oMainWnd Pixel  //"Obras"
				
				oPnlMSG := TPanel():New(0, 0, Nil, oDlgObra, Nil, .T., .F., Nil, Nil, 0, 55, .T., .F. )
					oPnlMSG:Align := CONTROL_ALIGN_TOP
					
					@ 8,9.6 TO 45,280 OF oPnlMSG PIXEL
					TSay():New(19,12,{|| OemtoAnsi(STR0017) },oPnlMSG,,,.F.,.F.,.F.,.T.,CLR_BLACK,CLR_WHITE,200,010)//"Estas são as obras relacionadas a area de vivência."
					TSay():New(29,12,{|| OemtoAnsi(STR0018) },oPnlMSG,,,.F.,.F.,.F.,.T.,CLR_BLACK,CLR_WHITE,200,010)//"Selecione aquelas que serão atualizadas."
			
				oMARKObra := MsSelect():NEW(cAliasTRB,"TRB_OK",,aTRBObra,@lINVERTE,@cMARCA,{0,0,0,0},,,oDlgObra) 
					oMARKObra:oBROWSE:lHASMARK		:= .T.
					oMARKObra:oBROWSE:lCANALLMARK	:= .T.
					oMARKObra:oBROWSE:bALLMARK		:= {|| f735INVERT(cMarca,cAliasTRB) }//Funcao inverte marcadores
					oMARKObra:oBROWSE:ALIGN		    := CONTROL_ALIGN_ALLCLIENT
			
			EnchoiceBar(oDlgObra,bOkObra,bCancelObra) 
			
			ACTIVATE MSDIALOG oDlgObra CENTERED
		Else 
			nOpcao := 1		
		EndIf	
		
		If nOpcao == 1
			dbSelectArea(cAliasTRB)
			dbGoTop()
			While !(cAliasTRB)->(Eof())
				dbSelectArea(cAliViv)
				dbSetOrder(2)
				If dbSeek(xFilial(cAliViv)+M->TLS_AREA+(cAliasTRB)->TRB_CC) .And. !Empty((cAliasTRB)->TRB_OK)
					cMemo := M->TLS_DESMEM
					Reclock(cAliViv,.F.)
					MSMM(cMsM,,,cMemo,1,,,cAliViv,VarHs) 
					MsUnlock(cAliViv)
				EndIf 
				(cAliasTRB)->(dbskip())
			End
		EndIf
		
		oTempTRB:Delete() 
	EndIf
EndIf
RestArea(aArea)

Return .T.

//---------------------------------------------------------------------
/*{Protheus.doc} fBuscaObra
Funcao para retornar as obras relacionadas a vivência em alteração.

@author Bruno L. Souza
@since 02/08/13
@version MP11
@return Nil
*/
//---------------------------------------------------------------------
Static Function fBuscaObra( cAliViv, cAliasTRB , nBuscaObra , cCCusto , cVar2)
Local aArea   := GetArea()

dbSelectArea(cAliViv) 
dbSetOrder(2)
If dbSeek(xFilial(cAliViv)+M->TLS_AREA)
	While (cAliViv)->(!Eof()) .AND. &(cAliViv+"->"+cAliViv+"_FILIAL") == xFilial(cAliViv) .And. &(cAliViv+"->"+cVar2) == M->TLS_AREA 
		RecLock(cAliasTRB,.T.)
		(cAliasTRB)->TRB_OK      := If( nBuscaObra == 1 , cMarca , Space(2) )
		(cAliasTRB)->TRB_CC      := &(cAliViv+"->"+cCCusto)
		(cAliasTRB)->TRB_NOMECC := NGSEEK("TLL",&(cAliViv+"->"+cCCusto),1,"TLL_NOMECC") 
		(cAliasTRB)->(MsUnLock())		
		(cAliViv)->(dbSkip())   
	End
EndIf

RestArea(aArea)
Return

//---------------------------------------------------------------------
/*/{Protheus.doc} f735INVERT
Inverte a marcacao do browse.

@author Bruno L. Souza
@since 15/04/13
@version MP10/11
@return Nil
/*/
//---------------------------------------------------------------------
Static Function f735INVERT(cMarca,cAliasTRB)
Local aArea := GetArea()

dbSelectArea(cAliasTRB)
dbGoTop()
While !(cAliasTRB)->(Eof())
	(cAliasTRB)->TRB_OK := If(Empty((cAliasTRB)->TRB_OK),cMARCA," ")
	(cAliasTRB)->(dbskip())
End

RestArea(aArea)
Return .T.