#Include "Protheus.ch"
#Include "mdta035.ch"
#Include "Topconn.ch"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MDTA035  ³ Autor ³ Marcio Costa          ³ Data ³ 30/12/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa para cadastrar Agentes e Exames por Agente        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MDTA035

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Armazena variaveis p/ devolucao (NGRIGHTCLICK) 						  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aNGBEGINPRM := NGBEGINPRM(,,{"TMA",{"TMB"}})

PRIVATE lSigaMdtPS := If( SuperGetMv("MV_MDTPS",.F.,"N") == "S", .t. , .f. )
PRIVATE aRotina := MenuDef()
PRIVATE aCHKDEL := {}, bNGGRAVA
PRIVATE cDELOK
Private lValDel := .T.

If FindFunction("MDTRESTRI") .AND. !MDTRESTRI(cPrograma)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Devolve variaveis armazenadas (NGRIGHTCLICK) 			 			  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	NGRETURNPRM(aNGBEGINPRM)
	Return .F.
Endif

If lSigaMdtps
	cCadastro := OemtoAnsi(STR0008)  //"Clientes"

	DbSelectArea("SA1")
	DbSetOrder(1)

	mBrowse( 6, 1,22,75,"SA1")
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define o cabecalho da tela de atualizacoes                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cCadastro := OemtoAnsi(STR0006) //"Agentes e Exames x Agente"

	aCHOICE := {}
	aVARNAO := {}

	aGETNAO := { { "TMB_AGENTE" , "M->TMA_AGENTE"},;
	             { "TMB_NOMAGE" , " "            } }

	cGETWHILE := "TMB_FILIAL == xFilial('TMB') .and. TMB_AGENTE == M->TMA_AGENTE"
	cGETMAKE  := "TMA->TMA_AGENTE"
	cGETKEY   := "M->TMA_AGENTE + M->TMB_EXAME"
	cGETALIAS := "TMB"
	cTUDOOK   := "AllwaysTrue()"
	cLINOK    := "AllwaysTrue() .AND. CHK035TN4() .and. PutFileInEof( 'TMB' )"
	cDELOK    := "MDT035VDEL()"

	//aSMENU := { {"Onde-Se-Usa", "MNTC565(M->T0_ESPECIA)" },;
	//            {"Funcionarios Da Especialidade", "MNTC010(M->T0_ESPECIA)" },;
	//           {"O.S. Pendentes", "CONOSPEND(tipoins,ST0->T0_ESPECIA)" } }
	//
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³aCHKDEL array que verifica a INTEGRIDADE REFERENCIAL na exclu-³
	//³s„o do registro.                                              ³
	//³                                                              ³
	//³1 - Chave de pesquisa                                         ³
	//³2 - Alias de pesquisa                                         ³
	//³3 - Ordem de pesquisa                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCHKDEL := { {'TMA->TMA_AGENTE'    , "TMC", 2},;
	             {'TMA->TMA_AGENTE'    , "TN4", 2},;
	             {'TMA->TMA_AGENTE'    , "TN0", 2} }

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Endereca a funcao de BROWSE                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("TMA")
	DbSetOrder(1)
	mBrowse( 6, 1,22,75,"TMA")
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Devolve variaveis armazenadas (NGRIGHTCLICK) 					 	  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

NGRETURNPRM(aNGBEGINPRM)
Return .T.
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³D035CHK   ³ Autor ³ Marcio Costa          ³ Data ³ 03/01/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Consiste a existencia de outro codigo na GetDados          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function D035CHK()
Local xx := 0, npos, lRET := .T.
Local nX

nPOS := aSCAN( aHEADER, { |x| Trim( Upper(x[2]) ) == "TMB_EXAME"})

If nPOS > 0
   For nX := 1 to Len(aCOLS)
       If aCOLS[nX][nPOS] == m->TMB_EXAME .and. !aCOLS[nX][Len(aCOLS[nX])]
          xx := xx + 1
       Endif
   Next
Endif

If xx > 0
   Help(" ",1,"JAEXISTINF")
   lRet := .f.
Endif

Return lRET

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MDT035ALT ³ Autor ³ Denis Hyroshi de Souza³ Data ³ 22/12/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao que altera registro                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MDT035ALT()

Local cSql := ""
Local cAliasRC7 := GetNextAlias()

Private lExistRC7 := .F.


//RC7 - Exposição a ricos do módulo gestão pessoal
DbSelectArea("RC7")
#IFDEF TOP
	cSql := "SELECT RC7_AGENTE FROM "+RetSqlName("RC7")+" RC7 "
	cSql += "WHERE RC7_FILIAL = '"+xFilial("RC7")+"' AND RC7_AGENTE = '"+TMA->TMA_AGENTE+"' AND D_E_L_E_T_ <> '*' "
	cSql := ChangeQuery(cSql)

	MPSysOpenQuery( cSql , cAliasRC7 )

	DbselectArea(cAliasRC7)
	(cAliasRC7)->(DbGoTop())

	lExistRC7 :=  (cAliasRC7)->(!Eof())
	(cAliasRC7)->(DbCloseArea())

#ELSE


	RC7->(DbgoTo())

	While(RC7->(!Eof())) .AND. !lExistRC7

		If RC7->RC7_TIPOEX == TMA->TMA_AGENTE

			lExistRC7 := .T.

		Endif
		RC7->(DbSkip())

	Enddo

#ENDIF


bNGGRAVA := {|| CHKMTD035()}
NGCAD02("TMA",Recno(),4)
bNGGRAVA := {}
Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MDT035INC ³ Autor ³ Denis Hyroshi de Souza³ Data ³ 22/12/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao que inclui registro                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MDT035INC()
bNGGRAVA := {|| CHKMTD035()}
NGCAD02("TMA",Recno(),3)
bNGGRAVA := {}
Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³CHKMTD035 ³ Autor ³ Denis Hyroshi de Souza³ Data ³ 22/12/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para verificar validacoes p/ o campo substancia ati.³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CHKMTD035()
Local lRet := .t.

If M->TMA_GRISCO == "2" .and. Empty(M->TMA_SUBATI)
	MsgStop(STR0009,STR0010)  //"Para os agentes de tipo químico, é necessário informar sua substância ativa."//"ATENÇÃO"
	lRet := .f.
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MenuDef  ³ Autor ³ Andre E. Perez Alvarez³ Data ³13/12/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Utilizacao de Menu Funcional.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MDTA035                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef( lSigaMdtPs )

Local aRotina
Local lTemLimTol := .F.

Default lSigaMdtPS := SuperGetMv("MV_MDTPS",.F.,"N") == "S" //Verifica se é prestador de serviço

If lSigaMdtps
	aRotina := { { STR0001,   "AxPesqui"  , 0 , 1},; //"Pesquisar"
	             { STR0002,   "NGCAD01"   , 0 , 2},; //"Visualizar"
	             { STR0011,   "MDT035AG"  , 0 , 4} } //"Agentes"
Else

	aRotina := {	{ STR0001 , "AxPesqui"  , 0 , 1},; //"Pesquisar"
                    { STR0002 , "NGCAD02"   , 0 , 2},; //"Visualizar"
                    { STR0003 , "MDT035INC" , 0 , 3},; //"Incluir"
                    { STR0004 , "MDT035ALT" , 0 , 4},; //"Alterar"
                    { STR0005 , "MDT035EXC" , 0 , 5, 3},; //"Excluir"
                    { STR0015 , "MDT182TOL" , 0 , 4 } }  //"Lim. Tolerância"

Endif

Return aRotina
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MDT035AG   ³ Autor ³ Andre Perez Alvarez     ³ Data ³24/09/07  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Monta um browse com todos os agentes.                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MDT035AG()                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                                ³±±
±±³          ³                                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³                                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³  SIGAMDT                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function MDT035AG()

Local aArea	:= GetArea()
Local oldROTINA := aCLONE(aROTINA)
Local oldCad := cCadastro

cCliMdtPs := SA1->A1_COD+SA1->A1_LOJA

aRotina := Menudef( .F. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de atualizacoes                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cCadastro := OemtoAnsi(STR0006) //"Agentes e Exames x Agente"
PRIVATE aCHKDEL := {}, bNGGRAVA
PRIVATE cDELOK
Private lValDel := .T.

aCHOICE := {}
aVARNAO := {}

aGETNAO := { { "TMB_AGENTE" , "M->TMA_AGENTE"},;
             { "TMB_NOMAGE" , " "            },;
             { "TMB_CLIENT" , "SA1->A1_COD"  },;
             { "TMB_LOJA"   , "SA1->A1_LOJA"  } }

cGETWHILE := "TMB_FILIAL == xFilial('TMB') .and. TMB_AGENTE == M->TMA_AGENTE .and. TMB_CLIENT+TMB_LOJA == SA1->A1_COD+SA1->A1_LOJA"
cGETMAKE  := "SA1->A1_COD+SA1->A1_LOJA + TMA->TMA_AGENTE"
cGETKEY   := "M->TMB_CLIENT+M->TMB_LOJA + M->TMA_AGENTE + M->TMB_EXAME"
cGETALIAS := "TMB"
cTUDOOK   := "AllwaysTrue()"
cLINOK    := "AllwaysTrue() .AND. CHK035TN4()"
cDELOK    := "MDT035VDEL()"

//aSMENU := { {"Onde-Se-Usa", "MNTC565(M->T0_ESPECIA)" },;
//            {"Funcionarios Da Especialidade", "MNTC010(M->T0_ESPECIA)" },;
//           {"O.S. Pendentes", "CONOSPEND(tipoins,ST0->T0_ESPECIA)" } }
//
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³aCHKDEL array que verifica a INTEGRIDADE REFERENCIAL na exclu-³
//³s„o do registro.                                              ³
//³                                                              ³
//³1 - Chave de pesquisa                                         ³
//³2 - Alias de pesquisa                                         ³
//³3 - Ordem de pesquisa                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCHKDEL := { {'TMA->TMA_AGENTE'    , "TMB", 1},;
             {'TMA->TMA_AGENTE'    , "TMC", 2},;
             {'TMA->TMA_AGENTE'    , "TN4", 2},;
             {'TMA->TMA_AGENTE'    , "TN0", 2} }

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Endereca a funcao de BROWSE                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("TMB")
DbSetOrder(3)

DbSelectArea("TMA")
DbSetOrder(1)
mBrowse( 6, 1,22,75,"TMA")

aROTINA := aCLONE(oldROTINA)
RestArea(aArea)
cCadastro := oldCad

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MDT035EXC ³ Autor ³ André E. Perez Álvarez³ Data ³ 27/05/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Exclusao de registro                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MDT035EXC()

Local nIndTMB := 1
Local nIndTN0 := 2
Local nIndTMC := 2

bNgGrava := { | | CHK035DEL() }

If lSigaMdtps
	nIndTMB := 3  //TMB_FILIAL+TMB_CLIENT+TMB_LOJA+TMB_AGENTE+TMB_EXAME
	nIndTN0 := 14  //TN0_FILIAL+TN0_CODCLI+TN0_LOJACL+TN0_AGENTE+TN0_NUMRIS
	nIndTMC := 4  //TMC_FILIAL+TMC_CLIENT+TMC_LOJA+TMC_AGENTE+TMC_NUMASO
Endif

NGCAD02("TMA",Recno(),5)

Return .t.
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³CHK035TN4 ³ Autor ³ André E. Perez Álvarez³ Data ³ 27/05/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se o exame a ser excluido esta relacionado a um   ³±±
±±³          ³ Resultado de Exames por Agente (TN4)                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CHK035TN4()
Local lRet := .t.

If aCols[n][Len(aCols[n])]

	dbSelectArea("TN4")
	dbSetOrder(2)
	dbSeek(xFilial("TN4")+M->TMA_AGENTE)
	While !Eof() .and. xFilial("TN4")+M->TMA_AGENTE == TN4->(TN4_FILIAL+TN4_AGENTE)

	    If TN4->TN4_EXAME == aCols[n][1]
			cError := AllTrim( FwX2Nome('TN4') ) + " (TN4)"
			ShowHelpDlg(STR0012,{STR0013+cError},2,{STR0014},2)
			lRet := .f.
			Exit
	    Endif

		dbSkip()
	End

Endif

Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MDT035HABL  ³ Autor ³Rodrigo Soledade       ³ Data ³18/07/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida os campos TMB_VALREF e TMB_QTIBMP                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MDT035HABL()
Local lRet := .F., nPOS1

nPOS1 := aSCAN( aHEADER, { |x| Trim( Upper(x[2]) ) == "TMB_EXAME"})
If !Empty(aCols[n,nPos1])
	dbSelectArea("TM4")
	dbSetOrder(1)
	dbSeek(xFilial("TM4")+aCols[n,nPos1])
	If TM4->TM4_INDRES <> "3"
		lRet := .T.
	EndIf
EndIf

Return lRet
//---------------------------------------------------------------------
/*/{Protheus.doc} MDT035VDEL
Valida a exclusao do exame, se este ja esta gravado
Uso MDTA045

@return Nil

@sample
MDT035VDEL()

@author Jackson Machado
@since 21/08/2012
/*/
//---------------------------------------------------------------------
Function MDT035VDEL()
Local nRec, nAt
Local lRet := .T.

If Type("oGet") == "O" .AND. Type("aCols") == "A" .AND. Len(aCols) > 0
	If lValDel
		lValDel := .F.
		nAt := oGet:oBrowse:nAt
		//Se inclusao ou estiver reativando a linha
		If Inclui .or. aCols[nAt][Len(aCols[nAt])]
			Return .T.
		Endif
		nRec := aCols[nAt][Len(aCols[nAt])-1]
		If nRec > 0
			dbSelectArea("TMB")
			dbGoTo(nRec)
			If FindFunction("MDTRESTUS") .AND. NGCADICBASE("TMK_USUARI","A","TMK",.F.) .AND. !MDTRESTUS(MDTDATALO("TMB->TMB_USERGI",.F.))
				lRet := .F.
			Endif
		Endif
	Else
		lValDel := .T.
	Endif
Endif

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} MDT035VLIN
Valida a alteracao do exame, se este ja esta gravado
Uso MDTA045 - When de Campos

@return Nil

@sample
MDT035VLIN()

@author Jackson Machado
@since 21/08/2012
/*/
//---------------------------------------------------------------------
Function MDT035VLIN()
Local nRec, nAt

If Type("oGet") == "O" .AND. SuperGetMV("MV_NG2SEG",.F.,"2") == "1" .AND. !(SuperGetMV("MV_MDTPS",.F.,"N") == "S")
	nAt := oGet:oBrowse:nAt
	nRec := aCols[nAt][Len(aCols[nAt])-1]
	If nRec > 0
		dbSelectArea("TMB")
		dbGoTo(nRec)
		If AllTrim(cUserName) <> AllTrim(MDTDATALO("TMB->TMB_USERGI",.F.)) .AND. AllTrim(MDTDATALO("TMB->TMB_USERGI",.F.)) <> AllTrim(cUserName)
			Return .F.
		Endif
	Endif
Endif

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} CHK035DEL
Valida se já existe um Exame lançado para algum dos agentes vinculados

@return Lógico - Retorna se pode ou não excluir

@sample
CHK035DEL()

@author Guilherme Freudenburg
@since 20/11/2013
/*/
//---------------------------------------------------------------------
Function CHK035DEL()

	Local nCont	:= 0
	Local nPosCod	:= aScan( aHeader , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TMB_EXAME" } )
	Local lRet		:= .T.


	dbSelectArea( "TMB" )
	dbSetOrder( 1 )
	For nCont := 1 To Len( aCols )
		dbSelectArea( "TN4" )
		dbSetOrder( 1 )
		If dbSeek( xFilial( "TN4" ) + TMA->TMA_AGENTE + aCols[ nCont , nPosCod ] )
			cError := AllTrim( FwX2Nome('TN4') ) + " (TN4)"
			ShowHelpDlg(STR0012,{STR0013+cError},2,{STR0014},2)
			lRet := .f.
		EndIf
	Next nCont

	If lRet
		dbSelectArea( "TMB" )
		dbSetOrder( 1 )
		For nCont := 1 To Len( aCols )
			If dbSeek( xFilial( "TMB" ) + aCols[ nCont , nPosCod ] )
				RecLock( "TMB" , .F. )
				TMB->( dbDelete() )
				TMB->( MsUnLock() )
			EndIf
		Next nCont
	EndIf

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} MDT035WHEN
Verifica propriedade WHEN do campo passado como parâmetro.

@param cCpo - Campo a ser verificado a propriedade WHEN
@return lRet - .T. se permitir edição, .F. caso contrário

@author Thiago Henrique dos Santos
@since 25/04/2013
/*/
//---------------------------------------------------------------------

Function MDT035WHEN(cCpo)
local lRet := .T.


If SuperGetMV("MV_NG2SEG",.F.,"2") == "1" .And. ALTERA .AND. Alltrim(cCpo) == "TMA_NOMAGE"
   If Type("lExistRC7") <> "U"
		lRet := !lExistRC7
	Endif

	If lRet

		//TLK - Limites de Tolerâncias de Agentes
		DbSelectArea("TLK")
		TLK->(DbSetOrder(1))
		If TLK->(DbSeek(xFilial("TLK")+M->TMA_AGENTE))

			lRet := .F.

		Else

			//TN4- Resultados Exames x Agentes
			DbSelectArea("TN4")
			TN4->(DbSetOrder(2))
			If TN4->(DbSeek(xFilial("TN4")+M->TMA_AGENTE))

				lRet := .F.

			Else

				//TMC- Resultados Exames x Agentes
				DbSelectArea("TMC")
				TMC->(DbSetOrder(2))
				If TMC->(DbSeek(xFilial("TMC")+M->TMA_AGENTE))

					lRet := .F.

				Else

					//TN0- Ricos
					DbSelectArea("TN0")
					TN0->(DbSetOrder(2))
					If TN0->(DbSeek(xFilial("TN0")+M->TMA_AGENTE))

						lRet := .F.

					Else


						//TN1- Param Geracao Exames Risco
						DbSelectArea("TN1")
						TN1->(DbSetOrder(2))
						If TN1->(DbSeek(xFilial("TN1")+M->TMA_AGENTE))

							lRet := .F.

						Else

							//TNK- Ricos do Mapa de Risco
							DbSelectArea("TNK")
							TNK->(DbSetOrder(2))
							If TNK->(DbSeek(xFilial("TNK")+M->TMA_AGENTE))

								lRet := .F.

							Else

								//TOA- Requisito x Necessidades
								DbSelectArea("TOA")
								TOA->(DbSetOrder(2))
								lRet :=  !TOA->(DbSeek(xFilial("TOA")+'A'+M->TMA_AGENTE))
							Endif
						Endif
					Endif
				Endif
			Endif
		Endif

	Endif

Endif



Return lRet
