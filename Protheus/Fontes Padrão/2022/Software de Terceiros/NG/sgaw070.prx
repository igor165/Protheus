#INCLUDE "SGAW070.ch"
#INCLUDE "RWMAKE.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SGAW070  ºAutor  ³ Rafael Diogo Richterº Data ³ 09/12/2008 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Programa para exportar dados para gerar workflow com       º±±
±±º          ³ Planejamentos do Plano de Acao nao atendidos               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGASGA                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SGAW070()
Private cIniFile := GetAdv97()
Private cCodEmp  := ""
Private cCodFil  := ""

//Abre tabelas necessarias
If !(Type("oMainWnd")=="O")

	//Define Empresa e Filial
	cCodEmp := GetPvProfString("ONSTART",STR0001,"",cInIfile) //"Empresa"
	cCodFil := GetPvProfString("ONSTART",STR0002 ,"",cInIfile) //"Filial"

	If cCodEmp == '-1' .Or. cCodFil == '-1'
		Return .F.
	Endif

	RPCSetType(3)

	//Abre empresa/filial/modulo/arquivos
	RPCSetEnv(cCodEmp,cCodFil,"","","SGA","",{"TAA","TCN"})

	//Faz a chamada da funcao para inciar o processo de exportacao dos dados
	SGW070P() //WorkFlow de Controle de Qualidade

Else
	SGW070P()
EndIf

Return  .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SGW070P  ºAutor  ³Rafael Diogo Richterº Data ³ 09/12/2008  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Carrega os Planejamentos nao atendidos por funcionario     º±±
±±º          ³ responsavel.                                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGASGA                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SGW070P()
Local aRegistros := {}

dbSelectArea("TCN")
dbSetOrder(1)
dbSeek(xFilial("TCN"))
While !Eof() .And. TCN->TCN_FILIAL == xFilial("TCN")
	dbSelectArea("TAA")
	dbSetOrder(1)
	dbSeek(xFilial("TAA")+TCN->TCN_CODPLA)
	If TCN->TCN_DATA <= dDataBase .And. TCN->TCN_META < TAA->TAA_QTDATU
		If Empty(TCN->TCN_WFPROC)
			aRegistros := {}
			lFirst := .T.
			cResp := ""
			dbSelectArea("TC9")
			dbSetOrder(1)
			dbSeek(xFilial("TC9")+TCN->TCN_CODPLA)
			While !Eof() .And. TC9->TC9_FILIAL == xFilial("TC9") .And. TC9->TC9_CODPLA == TCN->TCN_CODPLA
				dbSelectArea("QAA")
				dbSetOrder(1)
				dbSeek(xFilial("QAA")+TC9->TC9_CODRES)
				If !Empty(QAA->QAA_EMAIL)
					If lFirst
						lFirst := .F.
						cResp += AllTrim(QAA->QAA_EMAIL)
					Else
						cResp += ","+AllTrim(QAA->QAA_EMAIL)
					EndIf
				EndIf
				TC9->(dbSkip())
			End

			If !Empty(cResp)
				aAdd(aRegistros, {TCN->TCN_CODPLA, TCN->TCN_NOMPLA, TCN->TCN_DATA, TCN->TCN_META})
				SGW070WF(cResp, aRegistros)
			EndIf
			dbSelectArea("TCN")
			dbSetOrder(1)
			Reclock("TCN",.F.)
			TCN->TCN_WFPROC := "X"
			TCN->(MsUnlock())
		EndIf
	EndIf

	TCN->(dbSkip())
End

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ WF001    ºAutor  ³ Marcos Wagner Jr.  º Data ³  11/08/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Relatorio para gerar um Workflow com as pendencias da      º±±
±±º          ³ qualidade                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP8                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SGW070WF(cResp, aRegistros)
Local oProcess
Local cArquivo := "SGAW070.htm"
Local cDir := Alltrim(GetMV("MV_WFDIR"))
Local i
Local aArea := GetArea()

//Coloco a barra no final do parametro do diretorio
If Substr(cDir,Len(cDir),1) != "\"
	cDir += "\"
Endif

//Verifico se existe o arquivo de workflow
If !File(cDir+cArquivo)
	Msgstop(STR0013+cDir+cArquivo) //">>> Nao foi encontrado o arquivo "
	Return .F.
Endif

// Arquivo html template utilizado para montagem da aprovação
cHtmlModelo := cDir+cArquivo

//Inicio o processo
cCodProcesso := "SGAW070"

// Assunto da mensagem
cAssunto := STR0014 //"Planejamento não atendido"

//Inicio o processo
oProcess := TWFProcess():New(cCodProcesso,cAssunto)
oProcess:NewTask(cAssunto,cHtmlModelo)
oProcess:cSubject := dtoc(MsDate())+" - "+cAssunto
oProcess:cTo := cResp
oProcess:UserSiga := __CUSERID

For i := 1 to Len(aRegistros)
	dbSelectArea("TAA")
	dbSetOrder(1)
	dbSeek(xFilial("TAA")+aRegistros[i,1])
	aadd(oProcess:oHtml:ValByName("IT1.CODPLA")  ,	AllTrim(aRegistros[i,1])+" - "+AllTrim(TAA->TAA_NOME))
	aadd(oProcess:oHtml:ValByName("IT2.DATA")    ,	aRegistros[i,3])
	aadd(oProcess:oHtml:ValByName("IT2.DESPLA")  ,	aRegistros[i,2])
	aadd(oProcess:oHtml:ValByName("IT2.META")    ,	aRegistros[i,4])
Next i

oProcess:Start()
oProcess:Finish()
RestArea(aArea)

Return .T.