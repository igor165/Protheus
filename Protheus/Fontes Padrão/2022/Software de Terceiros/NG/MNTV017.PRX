/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNTV017    ³ Autor ³ Inacio Luiz Kolling   ³ Data ³24/11/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Custo de manutencao por unidade de producao ( CMUP )         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ De_Data    - Data inicio                                     ³±±
±±³          ³ Ate_Data   - Ate data                                        ³±±
±±³          ³ De_Ccusto  - De centro de custo                              ³±±
±±³          ³ Ate_Ccusto - Ate centro de custo                             ³±±
±±³          ³ Tip_Ordem  - Tipo de ordem de servico (C-Corr,P-Prev. A-Ambas³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorna   ³ nCusto     - Custo total das ordem de servico                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GENERICO                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTV017(De_Data,Ate_Data,De_Ccusto,Ate_Ccusto,Tip_Ordem)
Local aAreaOLD   := GetArea(),nCusto := 0.00
Local aBens      := {}
Local De_CcustoL := If(De_Ccusto = Nil,Space(NGSEEKDIC("SX3","TJ_CCUSTO",2,"X3_TAMANHO")),De_Ccusto)

// Variáveis de Histórico de Indicadores
Local lMV_HIST := NGI6MVHIST()
Local aParams := {}
Local cCodIndic := "MNTV017"
Local nResult := 0

// Armazena os Parâmetros
If lMV_HIST
	aParams := {}
	aAdd(aParams, {"DE_DATA"   , De_Data})
	aAdd(aParams, {"ATE_DATA"  , Ate_Data})
	aAdd(aParams, {"DE_CCUSTO" , De_Ccusto})
	aAdd(aParams, {"ATE_CCUSTO", Ate_Ccusto})
	aAdd(aParams, {"TIP_ORDEM" , Tip_Ordem})
	NGI6PREPPA(aParams, cCodIndic)
EndIf

cAliasQry := GetNextAlias()
// Query
If lMV_HIST
	cQuery := "SELECT * "
Else
	cQuery := "SELECT STL.TL_CUSTO, STJ.TJ_CODBEM "
EndIf
cQuery += " FROM "+RetSqlName("STL")+" STL "
cQuery += " INNER JOIN "+RetSqlName("STJ")+" STJ "
cQuery += " ON STJ.TJ_ORDEM = STL.TL_ORDEM AND STJ.TJ_PLANO = STL.TL_PLANO AND"
If ValType(De_CcustoL) == "C" .and. ValType(Ate_Ccusto) == "C"
	cQuery += " STJ.TJ_CCUSTO >= '"+De_CcustoL+"' AND STJ.TJ_CCUSTO <= '"+Ate_Ccusto+"' AND "
Endif
cQuery += " STJ.TJ_SITUACA = 'L' AND "
cQuery += " STJ.TJ_FILIAL = '"+xFilial("STJ")+"' AND STJ.D_E_L_E_T_ <> '*' "
If ValType(Tip_Ordem) == "C"
	If Tip_Ordem <> "3"
	   cQuery += If(Tip_Ordem = "1","AND STJ.TJ_PLANO = '000000'",;
	                                "AND STJ.TJ_PLANO <>'000000'")
	Endif
Endif
cQuery += " AND STJ.D_E_L_E_T_ <> '*' "
cQuery += " WHERE STL.TL_SEQRELA <> '0  ' AND "
If ValType(De_Data) == "D"
	cQuery += " STL.TL_DTINICI >= '"+Dtos(De_Data)+"' AND "
Endif
If ValType(Ate_Data) == "D"
	cQuery += " STL.TL_DTINICI <= '"+Dtos(Ate_Data)+"' AND "
Endif
cQuery += " STL.TL_FILIAL = '"+xFilial("STL")+"' AND STL.D_E_L_E_T_ <> '*' "
cQuery := ChangeQuery(cQuery)
dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)
NGI6PREPDA(cAliasQry, cCodIndic)

While !Eof()
   nCusto += (cAliasQry)->(TL_CUSTO)
   If aScan(aBens,{|x| x == (cAliasQry)->(TJ_CODBEM)}) == 0
   		aAdd(aBens,(cAliasQry)->(TJ_CODBEM))
   EndIf
   DbSkip()
End

(cAliasQry)->(dbCloseArea())

cAliasQry := GetNextAlias()
// Query
If lMV_HIST
	cQuery := "SELECT * "
Else
	cQuery := "SELECT STT.TT_CUSTO, STS.TS_CODBEM "
EndIf
cQuery += " FROM "+RetSqlName("STT")+" STT "
cQuery += " INNER JOIN "+RetSqlName("STS")+" STS "
cQuery += " ON STS.TS_ORDEM = STT.TT_ORDEM AND STS.TS_PLANO = STT.TT_PLANO AND"
If ValType(De_CcustoL) == "C" .and. ValType(Ate_Ccusto) == "C"
	cQuery += " STS.TS_CCUSTO >= '"+De_CcustoL+"' AND STS.TS_CCUSTO <= '"+Ate_Ccusto+"' AND "
Endif
cQuery += " STS.TS_SITUACA = 'L' AND "
cQuery += " STS.TS_FILIAL = '"+xFilial("STS")+"' AND STS.D_E_L_E_T_ <> '*' "
If ValType(Tip_Ordem) == "C"
	If Tip_Ordem <> "3"
	   cQuery += If(Tip_Ordem = "1","AND STS.TS_PLANO = '000000'",;
	                                "AND STS.TS_PLANO <>'000000'")
	Endif
Endif
cQuery += " AND STS.D_E_L_E_T_ <> '*' "
cQuery += " WHERE STT.TT_SEQRELA <> '0  ' AND "
If ValType(De_Data) == "D"
	cQuery += " STT.TT_DTINICI >= '"+Dtos(De_Data)+"' AND "
Endif
If ValType(Ate_Data) == "D"
	cQuery += " STT.TT_DTINICI <= '"+Dtos(Ate_Data)+"' AND "
Endif
cQuery += " STT.TT_FILIAL = '"+xFilial("STT")+"' AND STT.D_E_L_E_T_ <> '*' "

cQuery := ChangeQuery(cQuery)
dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)
NGI6PREPDA(cAliasQry, cCodIndic)

While !Eof()
   nCusto += (cAliasQry)->(TT_CUSTO)
   If aScan(aBens,{|x| x == (cAliasQry)->(TS_CODBEM)}) == 0
   		aAdd(aBens,(cAliasQry)->(TS_CODBEM))
   EndIf
   DbSkip()
End

(cAliasQry)->(dbCloseArea())

// RESULTADO
nResult := nCusto/Len(aBens)
NGI6PREPVA(cCodIndic, nResult)

RestArea(aAreaOLD)
Return nResult