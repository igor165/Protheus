#INCLUDE "MNTA790.ch"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWMVCDEF.CH"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA790
Cadastro de Historico de Acoes no Processo de Multa

@sample MNTA790()
@version P12

@author Guilherme Freudenburg
@since  16/10/2018

@return Sempre verdadeiro.
/*/
//---------------------------------------------------------------------
Function MNTA790()

	Local aNGBEGINPRM := NGBEGINPRM() // Armazena as variáveis
	Local oBrowse

	oBrowse := FWMBrowse():New()
	oBrowse:SetAlias("TSE") // Alias da tabela utilizada
	oBrowse:SetMenuDef("MNTA790") // Nome do fonte onde esta a função MenuDef
	oBrowse:SetDescription(STR0006) // "Cadastro de Histórico de Ações no Processo de Multa"
	oBrowse:Activate()

	NGRETURNPRM(aNGBEGINPRM) // Devolve as variáveis armazenadas

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Opções de menu padrão.

@author Guilherme Freudenburg
@since 16/10/2018
@version P12
@return aRotina - Estrutura
	[n,1] Nome a aparecer no cabecalho
	[n,2] Nome da Rotina associada
	[n,3] Reservado
	[n,4] Tipo de Transação a ser efetuada:
		1 - Pesquisa e Posiciona em um Banco de Dados
		2 - Simplesmente Mostra os Campos
		3 - Inclui registros no Bancos de Dados
		4 - Altera o registro corrente
		5 - Remove o registro corrente do Banco de Dados
		6 - Alteração sem inclusão de registros
		7 - Cópia
		8 - Imprimir
	[n,5] Nivel de acesso
	[n,6] Habilita Menu Funcional
/*/
//---------------------------------------------------------------------
Static Function MenuDef()

	Local aRotina := {}

	ADD OPTION aRotina Title STR0002 Action "VIEWDEF.MNTA790" OPERATION 2 ACCESS 0 //"Visualizar"
	ADD OPTION aRotina Title STR0003 Action "VIEWDEF.MNTA790" OPERATION 3 ACCESS 0 //"Incluir"
	ADD OPTION aRotina Title STR0004 Action "VIEWDEF.MNTA790" OPERATION 4 ACCESS 0 //"Alterar"
	ADD OPTION aRotina Title STR0005 Action "VIEWDEF.MNTA790" OPERATION 5 ACCESS 0 //"Excluir"

Return aRotina

//---------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Regras de Modelagem da gravacao

@author Guilherme Freudenburg
@since 16/10/2018
@version P12

@return oModel, Objeto, Modelo de dados (MVC)
/*/
//---------------------------------------------------------------------
Static Function ModelDef()
	// Cria a estrutura a ser usada no Modelo de Dados
	Local oStructTSE := FWFormStruct( 1, 'TSE', /*bAvalCampo*/,/*lViewUsado*/ )
	Local oModel

	// Cria o objeto do Modelo de Dados
	oModel := MPFormModel():New("MNTA790", /*bPreValid*/, /*bPosValid*/, { | oModel | fCommit(oModel) }/*bFormCommit*/, /*bFormCancel*/)

	// Adiciona ao modelo uma estrutura de formulário de edição por campo
	oModel:AddFields('MNTA790_TSE', /*cOwner*/, oStructTSE, /*bPreValidacao*/, /*bPosValidacao*/, /*bCarga*/)

	// Adiciona a descricao do Modelo de Dados
	oModel:SetDescription(STR0006) // "Cadastro de Histórico de Ações no Processo de Multa"

	// Adiciona a descricao do Componente do Modelo de Dados
	oModel:GetModel('MNTA790_TSE'):SetDescription(STR0006) // "Cadastro de Histórico de Ações no Processo de Multa"

Return oModel

//---------------------------------------------------------------------
/*/{Protheus.doc} ViewDef
Definição da View (padrão MVC).

@author Guilherme Freudenburg
@since 16/10/2018
@version P12

@return oView,  Objeto, Objeto da View MVC
/*/
//---------------------------------------------------------------------
Static Function ViewDef()

	// Cria um objeto de Modelo de dados baseado no ModelDef() do fonte informado
	Local oModel := FWLoadModel("MNTA790")

	// Cria a estrutura a ser usada na View
	Local oStruTSE := FWFormStruct(2, "TSE", /*bAvalCampo*/, /*lViewUsado*/)

	// Interface de visualização construída
	Local oView

	// Cria o objeto de View
	oView := FWFormView():New()

	// Define qual o Modelo de dados será utilizado na View
	oView:SetModel(oModel)

	// Adiciona no View um controle do tipo formulário (antiga Enchoice)
	oView:AddField("VIEW_TSE"/*cFormModelID*/, oStruTSE/*oViewStruct*/, "MNTA790_TSE")

	// Cria os componentes "box" horizontais para receberem elementos da View
	oView:CreateHorizontalBox("BOX_TSE"/*cID*/, 100)

	// Relaciona o identificador (ID) da View com o "box" para exibição
	oView:SetOwnerView("VIEW_TSE"/*cFormModelID*/, "BOX_TSE")

	//Inclusão de itens nas Ações Relacionadas de acordo com O NGRightClick
	NGMVCUserBtn(oView)

Return oView

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA790DAT
Validacao de Data/Hora Acao x Realizada

@author Guilherme Freudenburg
@since 16/10/2018
@version P12

@return lRet, Lógico, Retorna o valor referente a validação.
/*/
//---------------------------------------------------------------------
Function MNTA790DAT()

	Local lRet      := .T.
	Local oModel    := FWModelActivate() // Ativa o Model utilizado.
	Local oModelTSE	:= oModel:GetModel("MNTA790_TSE") // Seleciona o modelo utilizado.

	If oModelTSE:GetValue("TSE_DTREAL") == dDATABASE // Caso seja a mesma data.
		If oModelTSE:GetValue("TSE_HRREAL") > Time() // Caso hora informada seja maior que atual.
			Help( , , STR0008 , , STR0007 , 4 , 0 ) // "Hora da Realização não poderá ser superior a Hora Atual!"##"Atenção"
			lRet := .F.
		Endif
	Endif

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} fCommit
Atualiza a TRX - Multas com a ultima ação lançada no cadastro e
realiza a gravação da TSE - Cadastro de Historico de Acoes no Processo
de Multa.

@author Guilherme Freudenburg
@since 16/10/2018
@version P12

@return Sempre Verdadeiro.
/*/
//---------------------------------------------------------------------
Static Function fCommit(oModel)

	Local nOperation := oModel:GetOperation() // Operação de ação sobre o Modelo
	Local nI         := 0
	Local aOldArea   := GetArea()
	Local cCodAcao   := oModel:GetValue("MNTA790_TSE","TSE_CODACA")
	Local lAtuTRX    := .F.

	If nOperation == MODEL_OPERATION_INSERT .OR. nOperation == MODEL_OPERATION_UPDATE // Caso seja Inclusão ou Alteração.
		cAliasQry := GetNextAlias()
		cQuery := " SELECT COUNT(TSE_CODACA) AS NCODACA "
		cQuery += " FROM " + RetSqlName("TSE") + " TSE "
		cQuery += " WHERE TSE_MULTA = '" + oModel:GetValue("MNTA790_TSE","TSE_MULTA") + "'"
		cQuery += " AND TSE_DTACAO||TSE_HRACAO > '" + DTOS(oModel:GetValue("MNTA790_TSE","TSE_DTACAO")) + oModel:GetValue("MNTA790_TSE","TSE_HRACAO") + "'"
		cQuery += " AND D_E_L_E_T_ <> '*' "
		cQuery := ChangeQuery(cQuery)
		MPSysOpenQuery(cQuery,cAliasQry)

		dbSelectArea(cAliasQry)
		dbGoTop()
		If (cAliasQry)->NCODACA == 0 // Caso não possua nenhum Ação com data e hora maior.
			lAtuTRX := .T.
		Endif
	Else
		cAliasQry := GetNextAlias()
		cQuery := " SELECT TSE_DTACAO, TSE_HRACAO, TSE_CODACA "
		cQuery += " FROM " + RetSqlName("TSE")+" TSE "
		cQuery += " WHERE TSE_MULTA = '" + oModel:GetValue("MNTA790_TSE","TSE_MULTA") + "'"
		cQuery += " AND D_E_L_E_T_ <> '*' "
		cQuery += " ORDER BY TSE_DTACAO, TSE_HRACAO "
		MPSysOpenQuery(cQuery,cAliasQry)

		dbSelectArea(cAliasQry)
		dbGotop()
		While (cAliasQry)->(!Eof())
			nI++
			If (cAliasQry)->TSE_DTACAO+(cAliasQry)->TSE_HRACAO == DTOS(M->TSE_DTACAO)+M->TSE_HRACAO
				lAtuTRX := .T.
				If nI == 1
					cCodAcao := ' '
				Endif
			Else
				lAtuTRX := .F.
				cCodAcao := (cAliasQry)->TSE_CODACA
			Endif
			(cAliasQry)->(dbSkip())
		End
	Endif

	If lAtuTRX
		dbSelectArea("TRX")
		dbSetOrder(01)
		If dbSeek(xFilial("TRX")+oModel:GetValue("MNTA790_TSE","TSE_MULTA"))
			Reclock("TRX",.F.)
			TRX->TRX_CODAC := cCodAcao
			TRX->(MsUnlock())
		Endif
	Endif

	(cAliasQry)->(dbCloseArea()) // Fecha tabela temporária.

	FWFormCommit(oModel) // Gravação do Modelo de Dados

	RestArea(aOldArea) // Retorna área posicionada.

Return .T.
