#INCLUDE "RWMAKE.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SGAW060  ºAutor  ³ Rafael Diogo Richterº Data ³  15/08/06  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Programa para exportar dados para gerar workflow com       º±±
±±º          ³ Requisitos vencidos.                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGASGA                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SGAW060()
Local lAMBIE   := .F.
Local cIniFile := GetAdv97()
Local cCodEmp  := ""
Local cCodFil  := ""

//Abre tabelas necessarias
If !(Type("oMainWnd")=="O")

   lAMBIE  := .T.
   cCodEmp := GetPvProfString("ONSTART","Empresa","",cInIfile)
   cCodFil := GetPvProfString("ONSTART","Filial" ,"",cInIfile)

   If cCodEmp == '-1' .Or. cCodFil == '-1'
	   Return .f.
   Endif

   RPCSetType(3)

   //Abre empresa/filial/modulo/arquivos
   RPCSetEnv(cCodEmp,cCodFil,"","","SGA","",{"TA0","QAA"})

   //Faz a chamada da funcao para inciar o processo de exportacao dos dados
	SGW060P() //WorkFlow de Controle de Qualidade

Else
	SGW060P()
EndIf
Return  .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SGW060P  ºAutor  ³Rafael Diogo Richterº Data ³07/08/2008   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Carrega os Requisitos vencidos por funcionario responsavel º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGASGA                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SGW060P()
Local aRegistros := {}

dbSelectArea("TA0")
dbSetOrder(3)
dbSeek(xFilial("TA0"))
cResp := ""
lFirst := .T.
While !Eof() .And. TA0->TA0_FILIAL == xFilial("TA0")
	If !Empty(TA0->TA0_DTVENC) .And. !Empty(TA0->TA0_RESPON)
		If cResp <> TA0->TA0_RESPON
			If lFirst
				lFirst := .F.
			Else
				SGW060WF(cResp, aRegistros)
			EndIf
			cResp := TA0->TA0_RESPON
			aRegistros := {}
			aAdd(aRegistros, {TA0->TA0_CODLEG, TA0->TA0_EMENTA, TA0_DTVIGE, TA0_DTVENC})
		Else
			aAdd(aRegistros, {TA0->TA0_CODLEG, TA0->TA0_EMENTA, TA0_DTVIGE, TA0_DTVENC})
		EndIf
	EndIf
	dbSelectArea("TA0")
	dbSetOrder(3)
	dbSkip()
End

If Len(aRegistros) > 0 .And. !Empty(cResp)
	SGW060WF(cResp, aRegistros)
Endif

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ WF001    ºAutor  ³ Marcos Wagner Jr.  º Data ³  11/08/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Relatorio para gerar um Workflow com as pendencias da      º±±
±±º          ³ qualidade                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP8                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SGW060WF(cResp, aRegistros)
Local lRetu := .T.
Local oProcess := Nil, cArquivo := "SGAW060.htm"
Local cDir := Alltrim(GetMV("MV_WFDIR"))
Local i

dbSelectArea("QAA")
dbSetOrder(1)
If dbSeek(xFilial("QAA")+cResp)
	cEmail := AllTrim(QAA->QAA_EMAIL)
EndIf

//Coloco a barra no final do parametro do diretorio
If Substr(cDir,Len(cDir),1) != "\"
	cDir += "\"
Endif

//Verifico se existe o arquivo de workflow
If !File(cDir+cArquivo)
	Msgstop(">>> Nao foi encontrado o arquivo "+cDir+cArquivo)
	Return .F.
Endif

// Arquivo html template utilizado para montagem da aprovação
cHtmlModelo := cDir+cArquivo

//Inicio o processo
cCodProcesso := "SGAW050"

// Assunto da mensagem
cAssunto := "Requisitos Vencidos"

//Inicio o processo
oProcess := TWFProcess():New(cCodProcesso,cAssunto)
oProcess:NewTask(cAssunto,cHtmlModelo)
oProcess:cSubject := dtoc(MsDate())+" - "+cAssunto
oProcess:cTo := cEmail
oProcess:UserSiga := __CUSERID

aadd(oProcess:oHtml:ValByName("IT1.CODRES")  , QAA->QAA_NOME)
For i := 1 to Len(aRegistros)
  	 aadd(oProcess:oHtml:ValByName("IT2.CODREQ")  , aRegistros[i,1])
  	 aadd(oProcess:oHtml:ValByName("IT2.EMENTA")  , aRegistros[i,2])
  	 aadd(oProcess:oHtml:ValByName("IT2.DTVIGE")  ,	 aRegistros[i,3])
  	 aadd(oProcess:oHtml:ValByName("IT2.DTVENC")  , aRegistros[i,4])
    aadd(oProcess:oHtml:ValByName("IT2.ATRASO")  , dDataBase - aRegistros[i,4])
Next i

oProcess:Start()
oProcess:Finish()

Return lRetu