#INCLUDE "MNTR780.ch"
#INCLUDE "PROTHEUS.CH"

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR780
Historico de Bens
@author Inacio Luiz Kolling
@since 17/06/97
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Function MNTR780()

	Local aNGBEGINPRM := NGBEGINPRM()

	Local vVETHORAS	     := {}
	Local cString		 := "ST9"
	Local cdesc1		 := STR0001 //"Apresentacao do historico de bens selecionados."
	Local cdesc2		 := STR0002 //"E permitido selecionar o tipo de informacao a ser"
	Local cdesc3		 := STR0003 //"apresentada, atraves dos parametros do relatorio."
	Local wnrel		     := "MNTR780"

	Private nTamPro	 := TAMSX3("TL_CODIGO")[1] - 15
	Private aReturn	 := { STR0004, 1,STR0005, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
	Private nLastKey	 := 0
	Private cPerg		 := "MNT78R"
	Private Titulo	 := STR0006 //"Historico de Bens"
	Private Tamanho	 := "M"
	Private nomeprog	 := "MNTR780"
	Private lUsaTar	 := If(FindFunction("NGUSATARPAD"),NGUSATARPAD(),.f.)

	/*---------------------------------------------------------------
	Vetor utilizado para armazenar retorno da função MNT045TRB,
	criada de acordo com o item 18 (RoadMap 2013/14)
	---------------------------------------------------------------*/
	Private vFilTRB := MNT045TRB()

	SetKey(VK_F4, {|| MNT045FIL( vFilTRB[2] )})

	//+--------------------------------------------------------------+
	//| Variaveis utilizadas para parametros                         |
	//| MV_PAR01     // De  Centro de Custos                         |
	//| MV_PAR02     // Ate Centro de Custos                         |
	//| MV_PAR03     // De Centro de Trabalho                        |
	//| MV_PAR04     // Ate Centro de Trabalho                       |
	//| MV_PAR05     // De Familia de Bem                            |
	//| MV_PAR06     // Ate Familia de Bem                           |
	//| MV_PAR07     // De  Bem                                      |
	//| MV_PAR08     // Ate Bem                                      |
	//| MV_PAR09     // De Servico                                   |
	//| MV_PAR10     // Ate Servico                                  |
	//| MV_PAR11     // De Data Manutencao                           |
	//| MV_PAR12     // Ate Data Manutencao                          |
	//| MV_PAR13     // Detalhes do Bem 1 - Mostra 2 - Nao Mosta     |
	//| MV_PAR14     // Descricao Bem   1 - Mostra 2 - Nao Mosta     |
	//| MV_PAR15     // Descricao Manut.1 - Mostra 2 - Nao Mosta     |
	//| MV_PAR16     // Lista O.S Observacao 1 - Sim 2 - Nao         |
	//| MV_PAR17     // Previsto/Real 1-Previsto/Reali 2- So realiza.|
	//| MV_PAR18     // Lista Ins. Observacao 1 - Sim 2 - Nao        |
	//| MV_PAR19     // De  Ordem Servico                            |
	//| MV_PAR20     // Ate Ordem Servico                            |
	//| MV_PAR21     // Imprimir Localizacao ?  Sim/Nao              |
	//+--------------------------------------------------------------+

	Pergunte(cPerg,.F.)

	//----------------------------------------------------------------
	//| Envia controle para a funcao SETPRINT                        |
	//----------------------------------------------------------------
	wnrel := SetPrint(cString,wnrel,cPerg,titulo,cDesc1,cDesc2,cDesc3,.F.,"")

	SetKey(VK_F4, {|| })

	If nLastKey = 27
		Set Filter To
		dbSelectArea("ST0")

		MNT045TRB( .T., vFilTRB[1], vFilTRB[2])

		Return
	EndIf

	SetDefault(aReturn,cString)
	RptStatus({|lEnd| R780Imp(@lEnd,wnRel,titulo,tamanho)},titulo)

	dbSelectArea("ST0")

	MNT045TRB( .T., vFilTRB[1], vFilTRB[2])

	//----------------------------------------------
	//|  Retorna conteudo de variaveis padroes     |
	//----------------------------------------------
	NGRETURNPRM(aNGBEGINPRM)

Return Nil
//------------------------------------------------------------------------------
/*/{Protheus.doc} R780Imp
Chamada do Relatório
@author Inacio Luiz Kolling
@since 13/11/1997
@version undefined
@param lEnd, logical
@param wnRel
@param titulo
@param tamanho
@type function
/*/
//------------------------------------------------------------------------------
Static Function R780Imp(lEnd,wnRel,titulo,tamanho)

	Local cRodaTxt		:= "", nCntImpr := 0, x := 0
	Local nMaxCarac	:= 119
	Local cT5Sequen	:= Space(TAMSX3("T5_SEQUENC")[1])
	//Tabela Temporaria 1 || Alias (cTRB)
	Local oTmpTbl1		//Objeto Tabela Temporaria

	Private li     := 80 ,m_pag := 1,aTarefa := {}
	Private Cabec1 := " ", Cabec2 := " "
	Private dtrealini,dtrealfim,dtprelini,dtprelfim
	Private hrealini,hrealfim,hrprlini,hrprlfim
	Private aInsumos := {}

	Private cTRB	:= GetNextAlias()



	cCONDST9 := '(ST9->T9_CENTRAB >= MV_PAR03 .And. ST9->T9_CENTRAB <= MV_PAR04) .And. '
	cCONDST9 := cCONDST9 + '(ST9->T9_CODFAMI >= MV_PAR05 .And. ST9->T9_CODFAMI <= MV_PAR06)'
	cCONDST9 := cCONDST9 + ' .And. !MNT045STB( ST9->T9_CODBEM, vFilTRB[2] )'

	cCONDSTJ := 'STJ->TJ_SITUACA <> "C" .And. STJ->TJ_TIPOOS = "B" .and. '
	cCONDSTJ := cCONDSTJ + '(STJ->TJ_CODBEM >= MV_PAR07 .And. STJ->TJ_CODBEM <= MV_PAR08) .And. '
	cCONDSTJ := cCONDSTJ + '(STJ->TJ_SERVICO >= MV_PAR09 .And. STJ->TJ_SERVICO <= MV_PAR10) .And. '
	cCONDSTJ := cCONDSTJ + '(STJ->TJ_ORDEM   >= MV_PAR19 .And. STJ->TJ_ORDEM   <= MV_PAR20) .And. '
	cCONDSTJ := cCONDSTJ + '(STJ->TJ_DTORIGI >= MV_PAR11 .And. STJ->TJ_DTORIGI <= MV_PAR12) '
	cCONDSTJ := cCONDSTJ + ' .And. !MNT045STB( STJ->TJ_CODBEM, vFilTRB[2] ) '

	If MV_PAR22  <> 3
		cCONDSTJ += '.And. STJ->TJ_TERCEIR = Str(MV_PAR22,1,0)'
	EndIf

	cCONDSTS := 'STS->TS_SITUACA <> "C" .And. STS->TS_TIPOOS = "B" .and. '
	cCONDSTS := cCONDSTS + '(STS->TS_CODBEM >= MV_PAR07 .And. STS->TS_CODBEM <= MV_PAR08) .And. '
	cCONDSTS := cCONDSTS + '(STS->TS_SERVICO >= MV_PAR09 .And. STS->TS_SERVICO <= MV_PAR10) .And. '
	cCONDSTS := cCONDSTS + '(STS->TS_ORDEM   >= MV_PAR19 .And. STS->TS_ORDEM   <= MV_PAR20) .And. '
	cCONDSTS := cCONDSTS + '(STS->TS_DTORIGI >= MV_PAR11 .And. STS->TS_DTORIGI <= MV_PAR12) '
	cCONDSTS := cCONDSTS + ' .And. !MNT045STB( STS->TS_CODBEM, vFilTRB[2] )'

	nTipo := IIF(aReturn[4] == 1,15,18)

	ZeraData()

	/*
	1         2         3         4         5         6         7         8         9         0         1         2         3
	0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012

	Bem........: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx > xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx > xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx > xxxxxxxxxxxxxxxxxxxx
	Familia....: xxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	Pai........: xxxxxxxxxxxxxxxx  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  Familia...: xxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	Fornecedor.: xxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxx  Fabricante: xxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Cal.: XXX
	Modelo.....: xxxxxxxxx    Serie..: xxxxxxxxxxxxxxx    Dt.Compra.: dd/mm/aa    Cod.Imob.: xxxxxxxxxxxxxxx      Prazo Gar.: xxxxxx xx
	Dt.Garan...: dd/mm/aaaa   Prior..: xxx    Cod.Estoq.: xxxxxxxxxxxxxxx         Tem Estr.: xxx   Sit.Bem..: x   Sit.Manut.: x
	Desc.Cont1.: xxxxxxxxxxxxxx Contador..: 999.999.999 Acum.: 999.999.999.999 Dt.Acomp.: dd/mm/aaaa Var/Dia: 999999 Limite: 999.999.999
	Desc.Cont2.: xxxxxxxxxxxxxx Contador 2: 999.999.999 Acum.: 999.999.999.999 Dt.Acomp.: dd/mm/aaaa Var/Dia: 999999 Limite: 999.999.999
	Ponderacao.: Jan  Fev  Mar  Abr  Mai  Jun  Jul  Ago  Set  Out  Nov   Dez
	X,XX X,XX X,XX X,XX X,XX X,XX X,XX X,XX X,XX X,XX X,XX, X,XX

	Caracter...: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxx xxxxxxxxxx
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxx xxxxxxxxxx
	Descricao..: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	O.S.   Plano  Serv.  Seq. Nome Servico                Contado 1  Contador 2 Evento P/R  .....Inicio..... ......Fim.......   DD-HH-MM
	xxxxxx xxxxxx xxxxxx  999 xxxxxxxxxxxxxxxxxxxxxxxxx 999.999.999 999.999.999 Parada  P   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx xxxx xx xx
	Parada  R   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx
	Terceiro: Sim/Não                                                    Exec.   P   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx xxxx xx xx
	Exec.   R   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx xxxx xx xx

	Observacao..: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	Motivo do Atraso da  O.S..:  Motivo Descricao                                   .....Inicio..... ......Fim.......
	xxxx   xxxxxxxxxxxxxxxxxxxx                        xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx
	xxxx   xxxxxxxxxxxxxxxxxxxx                        xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx

	Problema da O.S..:  xxxxxx codigo xxxxxnome truncadoxxxxxxxxxxxxxxxxxxxx - xxxxxxxxdescricao do problemaxxxxxxxxxxxxx
	xxxxxx codigo xxxxxnome truncadoxxxxxxxxxxxxxxxxxxxx - xxxxxxxxdescricao do problemaxxxxxxxxxxxxx

	Tarefa..: xxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           Exec.   P   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx
	Exec.   R   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx

	Problema da Tarefa.: xxxxxx xxxcodigoxxxxx xxxxxnome truncadoxxxxxxxxxxx  - xxxxxxxxxxxxxxdescricao do problemaxxxxxxxxxxx
	xxxxxx xxxcodigoxxxxx xxxxxnome truncadoxxxxxxxxxxx  - xxxxxxxxxxxxxxdescricao do problemaxxxxxxxxxxx

	Etapa..: R  xxxxxx  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	Opcao..: XXXXXXXXXXXXXXX   Informou..: XXXXXXXXXXXXXXX
	Opcao..: XXXXXXXXXXXXXXX   Marcou....: SIM


	Ins..: xxxx xxxxxxxxxxxxxxx xxxxxxxxxtamanho 28xxxxxxxxx
	Sq: xx Qr: xxx Quan: 999.999,99 Un: xxx Dest: xxx  Exec.   P   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx
	Exec.  *R   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx //Asteristico se o insumo tiver
	Sq: xx Qr: xxx Quan: 999.999,99 Un: xxx Dest: xxx  Exec.   P   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx   garantia gravado no tpz
	Exec.   R   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx
	Observacao..: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	Ins..: xxxx xxxxxxxxxxxxxxx xxxxxxxxxtamanho 28xxxxxxxxx
	Sq: xx Qr: xxx Quan: 999.999,99 Un: xxx Dest: xxx  Exec.   P   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx
	Exec.   R   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx
	Sq: xx Qr: xxx Quan: 999.999,99 Un: xxx Dest: xxx  Exec.   P   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx
	Exec.   R   xx/xx/xxxx xx:xx xx/xx/xxxx xx:xx  xxxx xx xx

	Ocorr: xxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	Causa: xxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	Soluc: xxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	Descricao.: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	*/

	aDBF := {{"CUSTO"    , "C", Len(stj->tj_ccusto) , 0} ,;
			 {"TRABALHO" , "C", Len(stj->tj_centrab), 0} ,;
			 {"ORDEM"    , "C", 06,0} ,;
			 {"PLANO"    , "C", 06,0} ,;
			 {"BEM"      , "C", 16,0} ,;
			 {"ARQUIVO"  , "C", 03,0}}

	//Instancia classe FWTemporaryTable
	oTmpTbl1:= FWTemporaryTable():New( cTRB, aDBF )
	//Cria indices
	oTmpTbl1:AddIndex( "Ind01" , {"CUSTO","TRABALHO","BEM","PLANO","ORDEM"}  )
	//Cria a tabela temporaria
	oTmpTbl1:Create()

	// PROCESSAO O HISTORICO ( STS )
	dbSelectArea("STS")
	dbSetOrder(04)
	DbSeek(xFilial("STS") + MV_PAR01, .T.)
	While !Eof() .And. STS->TS_FILIAL == xFILIAL("STS") .And.;
	STS->TS_CCUSTO <= MV_PAR02
		If &(cCONDSTS)
			dbSelectArea("ST9")
			dbSetOrder(01)
			If DbSeek(xFilial("ST9")+STS->TS_CODBEM)
				If &(cCONDST9)
					GRAVAR780(STS->TS_CCUSTO,ST9->T9_CENTRAB,STS->TS_ORDEM,STS->TS_PLANO,STS->TS_CODBEM,"STS")
				Endif
			Endif
		Endif
		dbSelectArea("STS")
		dbSkip()
	EndDo

	// PROCESSAO O HISTORICO ( STJ )
	dbSelectArea("STJ")
	dbSetOrder(07)
	DbSeek(xFilial("STJ") + MV_PAR01, .T.)
	While !EoF() .And. STJ->TJ_FILIAL == xFILIAL("STJ") .And.;
	STJ->TJ_CCUSTO <= MV_PAR02
		If &(cCONDSTJ)
			dbSelectArea("ST9")
			dbSetOrder(01)
			If DbSeek(xFilial("ST9")+STJ->TJ_CODBEM)
				If &(cCONDST9)
					GRAVAR780(STJ->TJ_CCUSTO,ST9->T9_CENTRAB,STJ->TJ_ORDEM,STJ->TJ_PLANO,STJ->TJ_CODBEM,"STJ")
				EndIf
			Endif
		Endif
		dbSelectArea("STJ")
		dbSkip()
	EndDo

	dbSelectArea(cTRB)
	dbGotop()
	If !EoF()
		SetRegua(LastRec())
		While !Eof()

			dbSelectArea(cTRB)

			cCUSTO := (cTRB)->CUSTO
			SOMALI780()
			@ Li,000 Psay STR0011 //"BENS DO CENTRO DE CUSTO = "
			@ Li,026 Psay Alltrim(cCUSTO) + " " + NGSEEK('SI3',cCUSTO,1,'I3_DESC')

			dbSelectArea(cTRB)
			While !Eof() .And. (cTRB)->CUSTO == cCUSTO

				cTRABALHO := (cTRB)->TRABALHO
				SOMALI780()
				@ Li,000 Psay STR0012 //"CENTRO DE TRABALHO = "
				@ Li,021 Psay cTRABALHO
				@ Li,042 Psay NGSEEK("SHB",cTRABALHO,1,"HB_NOME")
				SOMALI780()

				dbSelectArea(cTRB)
				While !Eof() .And. (cTRB)->CUSTO == cCUSTO .And. (cTRB)->TRABALHO == cTRABALHO

					cBEM  := (cTRB)->BEM
					lPRIM := .T.
					dbSelectArea(cTRB)
					While !Eof() .And. (cTRB)->CUSTO == cCUSTO .And. (cTRB)->TRABALHO == cTRABALHO .And.;
					cBEM == (cTRB)->BEM

						If mv_par21 == 1 .AND. FindFunction("NGLocComp")
							cLocal := NGLocComp((cTRB)->BEM,"1")
						EndIf

						dbSelectArea(cTRB)

						IncRegua()
						//------------------------------------------------------------
						//| Verifica se o Bem tem Bem Pai                            |
						//------------------------------------------------------------
						If lPRIM
							cChave := NGBEMPAI((cTRB)->BEM)
							//------------------------------------------------------------
							//| Impressao da Primeira Linha da Estrutura                 |
							//------------------------------------------------------------
							SOMALI780()
							dbSelectArea("ST9")
							dbSetOrder(01)
							DbSeek(xFilial("ST9")+(cTRB)->BEM)
							nRegST9 := Recno()
							@ Li,000 Psay STR0014 + Space(1) + (cTRB)->BEM + Space(1) + NGSEEK("ST9",AllTrim((cTRB)->BEM),1,"T9_NOME") //"Bem........:"
							SOMALI780()
							If mv_par21 == 1
								If AllTrim(cLocal) <> AllTrim((cTRB)->BEM)
									@ Li,000 Psay STR0084 //"Localização:"
									If Len(cLocal) > nMaxCarac
										While Len(cLocal) > nMaxCarac
											@ Li,013 Psay SubStr(cLocal,1,nMaxCarac)
											cLocal := SubStr(cLocal,nMaxCarac+1)
											SOMALI780()
										End
										@ Li,013 Psay cLocal
									Else
										@ Li,013 Psay cLocal
									Endif
									SOMALI780()
								EndIf
							Endif

							//------------------------------------------------------------
							//| Impressao da Segunda Linha do Bem                        |
							//------------------------------------------------------------
							@ Li,000 Psay STR0015 //"Familia...:"
							@ Li,013 Psay ST9->T9_CODFAMI
							@ Li,020 Psay NGSEEK("ST6",ST9->T9_CODFAMI,1,"T6_NOME")



							//------------------------------------------------------------
							//| Impressao da Terceira Linha do Bem                       |
							//------------------------------------------------------------
							If !Empty(cChave) .And. (cTRB)->BEM != cChave
								dbSelectArea("ST9")
								dbSetOrder(1)
								DbSeek(xFilial("ST9") + cChave)
								SOMALI780()
								@ Li,000 Psay STR0016 //"Pai........:"
								@ Li,013 Psay cChave
								@ Li,031 Psay Substr(ST9->T9_NOME,1,38)
								@ Li,072 Psay STR0015 //"Familia...:"
								@ Li,084 Psay ST9->T9_CODFAMI
								@ Li,091 Psay NGSEEK("ST6",ST9->T9_CODFAMI,1,"T6_NOME")
							EndIf

							//------------------------------------------------------------
							//| Impressao da Quarta Linha do Bem                         |
							//------------------------------------------------------------
							dbSelectArea("ST9")
							Dbgoto(nRegST9)
							If MV_PAR13 = 1
								SOMALI780()
								@ Li,000 Psay STR0017 //"Fornecedor.:"
								@ Li,013 Psay ST9->T9_FORNECE
								@ Li,034 Psay NGSEEK("SA2",ST9->T9_FORNECE,1,"Substr(SA2->A2_NOME,1,27)")
								@ Li,063 Psay STR0018 //"Fabricante:"
								@ Li,075 Psay ST9->T9_FABRICA
								@ Li,082 Psay NGSEEK("ST7",ST9->T9_FABRICA,1,"T7_NOME")  //ST7->T7_NOME
								@ Li,119 Psay STR0019 //"Cal.:"
								@ Li,125 Psay ST9->T9_CALENDA
							EndIf

							//------------------------------------------------------------
							//| Impressao da Quinta Linha do Bem                         |
							//------------------------------------------------------------
							If MV_PAR13 = 1
								SOMALI780()
								@ Li,000 Psay STR0020 //"Modelo.....:"
								@ Li,013 Psay ST9->T9_MODELO
								@ Li,026 Psay STR0021 //"Serie..:"
								@ Li,035 Psay ST9->T9_SERIE
								@ Li,054 Psay STR0022 //"Dt.Compra.:"
								@ Li,066 Psay ST9->T9_DTCOMPR
								@ Li,079 Psay STR0023 //"Cod.Imob.:"
								@ Li,090 Psay ST9->T9_CODIMOB
								@ Li,112 Psay STR0024 //"Prazo Gar.:"
								@ Li,124 Psay ST9->T9_PRGARAN Picture '999999'
								@ Li,131 Psay ST9->T9_UNGARAN
							EndIf

							//------------------------------------------------------------
							//| Impressao da Sexta Linha do Bem                          |
							//------------------------------------------------------------
							If MV_PAR13 = 1
								SOMALI780()
								@ Li,000 Psay STR0025 //"Dt.Garantia:"
								@ Li,013 Psay ST9->T9_DTGARAN
								@ Li,026 Psay STR0026 //"Prior..:"
								@ Li,034 Psay ST9->T9_PRIORID
								@ Li,039 Psay STR0027 //"Cod.Estoq.:"
								@ Li,051 Psay ST9->T9_CODESTO
								@ Li,086 Psay STR0028 //"Tem Estr.:"
								@ Li,097 Psay ST9->T9_ESTRUTU
								@ Li,103 Psay STR0033 //"Sit.Bem..:"
								@ Li,114 Psay ST9->T9_SITBEM
								@ Li,119 Psay STR0034 //"Sit.Manut.:"
								@ Li,131 Psay ST9->T9_SITMAN
							EndIf

							//------------------------------------------------------------
							//| Impressao da Sétima Linha do Bem                         |
							//------------------------------------------------------------
							If MV_PAR13 = 1
								If ST9->T9_TEMCONT <> "N"
									SOMALI780()
									@ Li,000 Psay STR0071 //"Desc.Cont1.:"
									@ Li,013 Psay Substr(ST9->T9_TPCONTA,1,14)
									@ Li,027 Psay STR0029 //"Contador..:"
									@ Li,038 Psay ST9->T9_POSCONT Picture "@E 999,999,999"
									@ Li,052 Psay STR0072 //"Acum.:"
									@ Li,059 Psay ST9->T9_CONTACU Picture "@E 999,999,999,999"
									@ Li,075 Psay STR0030  //"Dt.Acomp.:"
									@ Li,086 Psay ST9->T9_DTULTAC
									@ Li,097 Psay STR0031 //"Var/Dia:"
									@ Li,106 Psay ST9->T9_VARDIA  Picture "@E 999999"
									@ Li,113 Psay STR0032 //"Limite:"
									@ Li,121 Psay ST9->T9_LIMICON Picture "@E 999,999,999"
								EndIf

								dbSelectArea("TPE")
								dbSetOrder(1)
								If DbSeek(xFilial("TPE")+ST9->T9_CODBEM)
									SOMALI780()
									@ Li,000 Psay STR0073   //"Desc.Cont2.:"
									@ Li,013 Psay Substr(TPE->TPE_TPCONT,1,14)
									@ Li,028 Psay STR0058   //"Contador 2:"
									@ Li,039 Psay TPE->TPE_POSCON Picture "@E 999,999,999"
									@ Li,052 Psay STR0072   //"Acum.:"
									@ Li,059 Psay TPE->TPE_CONTAC Picture "@E 999,999,999,999"
									@ Li,075 Psay STR0030   //"Dt.Acomp.:"
									@ Li,086 Psay TPE->TPE_DTULTA
									@ Li,097 Psay STR0031   //"Var/Dia:"
									@ Li,106 Psay TPE->TPE_VARDIA  Picture "@E 999999"
									@ Li,113 Psay STR0032   //"Limite:"
									@ Li,121 Psay TPE->TPE_LIMICO Picture "@E 999,999,999"
								EndIf
							EndIf

							//------------------------------------------------------------
							//| Impressao da Linha de Poderacao de Uso do Bem            |
							//------------------------------------------------------------
							If MV_PAR13 = 1
								SOMALI780()
								@ Li,000 Psay STR0035 //"Ponderacao.: Jan  Fev  Mar  Abr  Mai  Jun  Jul  Ago  Set  Out  Nov  Dez"
								SOMALI780()
								@ Li,012 Psay ST9->T9_PONDERA
							EndIf

							//------------------------------------------------------------
							//| Impressao da Linha de Caracteristicas                    |
							//------------------------------------------------------------
							If MV_PAR13 = 1
								lPrimeiro = .F.
								dbSelectArea("STB")
								dbSetOrder(01)
								DbSeek(xFilial("STB")+ST9->T9_CODBEM)
								While !Eof() .And. STB->TB_CODBEM == ST9->T9_CODBEM .And.;
								STB->TB_FILIAL == xFilial("STB")

									SOMALI780()
									If !lPrimeiro
										lPrimeiro = .T.
										@ Li,000 Psay STR0036 //"Caracter...:"
									EndIf
									@ Li,013 Psay NGSEEK("TPR",STB->TB_CARACTE,1,"Substr(TPR_NOME,1,39)")
									@ Li,054 Psay Substr(STB->TB_DETALHE,1,14)
									@ Li,070 Psay STB->TB_UNIDADE
									dbSelectArea("STB")
									dbSkip()
								End
							EndIf

							//------------------------------------------------------------
							//| Impressao da Linha de Descricao                          |
							//------------------------------------------------------------
							LPRIMOPE := .F.
							If MV_PAR14 = 1
								SOMALI780()
								NGIMPMEMO(ST9->T9_DESCRIC,56,0,STR0037,.F.,.F.) //"Descricao..: "
							EndIf
							cabecos()
							lPRIM := .F.
						EndIf

						//------------------------------------------------------------
						//| Impressao da Linha de Manutencoes                        |
						//------------------------------------------------------------
						// PROCURA OS HISTORICOS DAS O.S. NO STS990
						If (cTRB)->ARQUIVO == "STS"
							dbSelectArea("STS")
							dbSetOrder(01)
							If DbSeek(xFilial("STS")+(cTRB)->ORDEM+(cTRB)->PLANO)
								SOMALI780()
								PROCORDEM(sts->ts_ordem,sts->ts_plano,sts->ts_servico,sts->ts_seqrela,;
								sts->ts_dtppini,sts->ts_hoppini,sts->ts_dtppfim,sts->ts_hoppfim,;
								sts->ts_dtprini,sts->ts_hoprini,sts->ts_dtprfim,sts->ts_hoprfim,;
								sts->ts_dtmpini,sts->ts_hompini,sts->ts_dtmpfim,sts->ts_hompfim,;
								sts->ts_dtmrini,sts->ts_homrini,sts->ts_dtmrfim,sts->ts_homrfim,;
								sts->ts_poscont,sts->ts_poscon2,2)

								//LISTA OBSERVACAO DA O.S
								If MV_PAR16 = 1
									dbSelectArea("STS")
									LPRIMOPE := .F.
									SOMALI780()
									cOBSERVA := If(FieldPos('TS_MMSYP') > 0,NGMEMOSYP(STS->TS_MMSYP),If(FieldPos('TS_OBSERVA')>0,STS->TS_OBSERVA," "))
									NGIMPMEMO(cOBSERVA,94,007,STR0038,.F.,.T.) //"Observacao.:"
								EndIf

								// MOTIVO DE ATRASO DA O.S.
								R780MOTATH()

								// IMPRIME OS PROBLEMA DA O.S.
								dbSelectArea("STV")
								dbSetOrder(01)
								DbSeek(xFilial("STV")+STS->TS_ORDEM+STS->TS_PLANO+Space(06))
								prim := .t.
								While !Eof() .And. xFilial("STV") == stv->tv_filial .And.;
								stv->tv_ordem == sts->ts_ordem .And. stv->tv_plano == sts->ts_plano  .And.;
								stv->tv_tarefa == Space(06)

									SOMALI780()
									If prim
										SOMALI780()
										@li,007 Psay STR0039 //"Problema da O.S..:"
										prim := .F.
									EndIf
									nnome   := Space(29)
									PROCNOMBE(STV->TV_TIPOREG,STV->TV_CODIGO)
									@li,083 Psay stv->tv_descric
									dbSelectArea("STV")
									dbSkip()
								End

								//IMPRIME DESCRICAO DA MANUTENCAO
								If MV_PAR15 = 1
									LPRIMOPE := .F.
									dbSelectArea("STF")
									dbSetOrder(1)
									If DbSeek(xFilial("STF")+sts->ts_codbem+sts->ts_servico+sts->ts_seqrela)
										NGIMPMEMO(STF->TF_DESCRIC,56,007,STR0037,.F.,.T.) //"Descricao..:"
									EndIf
								EndIf

								// PROCURA AS TAREFAS COM DATA E HORA DE INICIO E FIM
								aTarefa := {}
								dbSelectArea("STQ")
								dbSetOrder(01)
								DbSeek(xFilial("STQ")+STS->TS_ORDEM+STS->TS_PLANO)
								While !Eof() .And. STQ->TQ_ORDEM == STS->TS_ORDEM ;
								.And. STQ->TQ_PLANO == STS->TS_PLANO
									If aScan(aTarefa, {|x| x[1] == STQ->TQ_TAREFA}) == 0
										AAdd(aTarefa,{STQ->TQ_TAREFA,CtoD("  /  /  "),CtoD("  /  /  "),"  :  ","  :  ",;
										CtoD("  /  /  "),CtoD("  /  /  "),"  :  ","  :  ",{0,0,0} ,{0,0,0},cT5Sequen })
									EndIf
									dbSelectArea("STQ")
									dbSkip()
								End
								ZERADATA()
								dbSelectArea("STT")
								dbSetOrder(01)
								If DbSeek(xFilial("STT")+STS->TS_ORDEM+STS->TS_PLANO)
									While !Eof() .And. xFilial("STT") == stt->tt_filial .And.;
									stt->tt_ordem == sts->ts_ordem .And. stt->tt_plano == sts->ts_plano

										nPos := aScan(aTarefa, {|x| x[1] == STT->TT_TAREFA})
										If nPos > 0
											aTarefa[nPos][2] := dtrealini
											aTarefa[nPos][3] := dtrealfim
											aTarefa[nPos][4] := hrealini
											aTarefa[nPos][5] := hrealfim
											aTarefa[nPos][6] := dtprelini
											aTarefa[nPos][7] := dtprelfim
											aTarefa[nPos][8] := hrprlini
											aTarefa[nPos][9] := hrprlfim
										Else
											AAdd(aTarefa,{STL->TL_TAREFA,dtrealini,dtrealfim,hrealini,hrealfim,;
											dtprelini,dtprelfim,hrprlini,hrprlfim,{0,0,0} ,{0,0,0},cT5Sequen})
										EndIf
										dbSkip()
									End
								EndIf

								If !Empty(aTarefa)
									For x := 1 To Len(aTarefa)
										ZERADATA()
										primzero  := .t.
										primoutr  := .t.
										/*
										dbSelectArea("STT")
										dbSetOrder(01)
										DbSeek(xFilial("STT")+STS->TS_ORDEM+STS->TS_PLANO+aTarefa[x][1])
										While !Eof() .And. xFilial("STT") == stt->tt_filial .And.;
										stt->tt_ordem == sts->ts_ordem .And. stt->tt_plano == sts->ts_plano .And.;
										stt->tt_tarefa == aTarefa[x][1]

										PROCHORINI(stt->tt_seqrela,stt->tt_dtinici,stt->tt_dtfim,;
										stt->tt_hoinici,stt->tt_hofim,STT->TT_TIPOREG)
										dbSkip()
										End
										*/
										aRetTmp := TEMPOEXEC(STS->TS_ORDEM,2,aTarefa[x][1])
										aTarefa[x][10] := aRetTmp[1]
										aTarefa[x][11] := aRetTmp[2]
										MNTR780CT(x)
									Next x
								EndIf

								// PROCURA OS DETALHES DAS TAREFAS
								For x := 1 To Len(aTarefa)
									If x == 1
										SOMALI780()
									Endif
									SOMALI780()
									@li,007 Psay STR0040 //"Tarefa..:"
									@li,017 Psay aTarefa[x][1]
									@li,024 Psay MNTR780IT(sts->ts_plano,;
									sts->ts_codbem+sts->ts_servico+sts->ts_seqrela,;
									aTarefa[x,1])
									If MV_PAR17 == 1
										MNTR780DH(STR0047,aTarefa[x,6],aTarefa[x,8],aTarefa[x,7],aTarefa[x,9],aTarefa[x][11])
										SOMALI780()
										MNTR780DH(STR0048,aTarefa[x,2],aTarefa[x,4],aTarefa[x,3],aTarefa[x,5],aTarefa[x][10])
									Else
										MNTR780DH(STR0048,aTarefa[x,2],aTarefa[x,4],aTarefa[x,3],aTarefa[x,5],aTarefa[x][10])
									EndIf

									// IMPRIME OS PROBLEMAS DA TAREFA.
									dbSelectArea("STV")
									dbSetOrder(01)
									DbSeek(xFilial("STV")+STS->TS_ORDEM+STS->TS_PLANO+aTarefa[x][1])
									prim := .t.
									While !Eof() .And. xFilial("STV") == stv->tv_filial .And.;
									stv->tv_ordem == sts->ts_ordem .And. stv->tv_plano == sts->ts_plano .And.;
									stv->tv_tarefa == aTarefa[x][1]

										SOMALI780()
										If prim
											SOMALI780()
											@li,010 Psay STR0042 //"Problema da Tarefa.:"
											prim := .f.
										EndIf

										vNomeI := NGNOMINSUM(stv->tv_tiporeg,stv->tv_codigo,29)
										@li,031 Psay SubStr(vNomeI[1,1],1,4)
										@li,038 Psay STV->TV_CODIGO
										@li,053 Psay vNomeI[1,2]
										@li,084 Psay "-"
										@li,087 Psay Substr(stv->tv_descric,1,36)
										dbSelectArea("STV")
										dbSkip()
									End

									// ETAPAS DA TAREFA
									dbSelectArea("STX")
									dbSetOrder(01)
									lPRIMOPE := .T.
									lOPCOES  := .F.
									If DbSeek(xFilial("STX")+STS->TS_ORDEM+STS->TS_PLANO+aTarefa[x][1])
										cEtapa := stx->tx_etapa
										While !Eof() .And. xFilial("STX") == stx->tx_filial .And.;
										stx->tx_ordem == sts->ts_ordem .And. stx->tx_plano == sts->ts_plano .And.;
										aTarefa[x][1] == stx->tx_tarefa

											If stx->tx_etapa <> cEtapa
												lPRIMOPE := .T.
											EndIf
											If lPRIMOPE
												If lOPCOES
													SOMALI780()
													SOMALI780()
												Else
													SOMALI780()
												EndIf
												@li,017 Psay STR0043 //"Etapa..:"
												If !Empty(stx->tx_ok)
													@li,026 Psay "R"
												EndIf
												@li,029 Psay stx->tx_etapa
												LPRIMOPE := .F.

												dbSelectArea("TPA")
												dbSetOrder(01)
												If DbSeek(xFilial("TPA")+STX->TX_ETAPA)
													NGIMPMEMO(TPA->TPA_DESCRI,90,037,,.T.,.F.)
												EndIf
											EndIf

											//OPCOES DA ETAPA
											lOPCOES := .F.
											dbSelectArea("TPC")
											dbSetOrder(01)
											If DbSeek(xFilial("TPC")+STX->TX_ETAPA)
												While !Eof() .And. TPC->TPC_FILIAL = Xfilial("TPC") .And.;
												TPC->TPC_ETAPA = STX->TX_ETAPA
													If !Empty(STX->TX_OK)
														dbSelectArea("TPX")
														dbSetOrder(01)
														If DbSeek(xFilial("TPX")+STX->TX_ORDEM+STX->TX_PLANO+STX->TX_TAREFA+TPC->TPC_ETAPA)

															While !Eof() .And. TPX->TPX_FILIAL = Xfilial("TPX") .And.;
															TPX->TPX_ORDEM  = STX->TX_ORDEM                   .And.;
															TPX->TPX_PLANO  = STX->TX_PLANO                   .And.;
															TPX->TPX_TAREFA = STX->TX_TAREFA                  .And.;
															TPX->TPX_ETAPA  = TPC->TPC_ETAPA

																If TPX->TPX_OPCAO = TPC->TPC_OPCAO
																	lOPCOES := .T.
																	SOMALI780()
																	@li,026 Psay STR0054 //"Opcao..:"
																	@li,035 Psay TPX->TPX_OPCAO Picture '@!'
																	If TPC->TPC_TIPRES = 'I'
																		@li,053 Psay STR0055 //"Informou....:"
																		@li,067 Psay TPX->TPX_RESPOS
																		@li,088 Psay STR0070 //"OS..:"
																		@li,094 Psay TPX->TPX_ORDEMG
																	Else
																		@li,053 Psay STR0056 //"Marcou......:"
																		@li,067 Psay STR0008 //"SIM"
																	EndIf
																EndIf
																dbSelectArea("TPX")
																dbSkip()
															End
															SOMALI780()
														EndIf
													EndIf
													dbSelectArea("TPC")
													dbSkip()
												End
											EndIf
											cEtapa := stx->tx_etapa
											dbSelectArea("STX")
											dbSkip()
										End
									EndIf

									dbSelectArea("STT")
									dbSetOrder(01)
									If DbSeek(xFilial("STT")+STS->TS_ORDEM+STS->TS_PLANO+aTarefa[x][1])
										While !Eof() .And. xFilial("STT") == stt->tt_filial .And.;
										stt->tt_ordem  == sts->ts_ordem  .And.;
										stt->tt_plano  == sts->ts_plano  .And.;
										aTarefa[x][1]  == stt->tt_tarefa

											If MV_PAR17 == 2 .And. Alltrim(stt->tt_seqrela) = "0"  // SO REAL
												dbSelectArea("STT")
												dbSkip()
												Loop
											EndIf
											ntarefa  := stt->tt_tarefa
											ntiporeg := stt->tt_tiporeg
											vNomeI   := NGNOMINSUM(stt->tt_tiporeg,stt->tt_codigo,28)

											SOMALI780()
											@li,007 Psay STR0059 //"Ins..:"
											@li,014 Psay SubStr(vNomeI[1,1],1,4)
											@li,019 Psay STV->TV_CODIGO
											@li,045+nTamPro Psay vNomeI[1,2]

											dbSelectArea("STT")
											nproduto := stt->tt_codigo
											While !Eof() .And. xFilial("STT") == stt->tt_filial .And.;
											stt->tt_ordem  == sts->ts_ordem   .And.;
											stt->tt_plano  == sts->ts_plano   .And.;
											ntarefa        == stt->tt_tarefa  .And.;
											ntiporeg       == stt->tt_tiporeg .And.;
											nproduto == stt->tt_codigo

												vVETHORAS := NGTQUATINS(STT->TT_CODIGO,STT->TT_TIPOREG,STT->TT_USACALE,;
												STT->TT_QUANTID,STT->TT_TIPOHOR,STT->TT_DTINICI,;
												STT->TT_HOINICI,STT->TT_DTFIM,STT->TT_HOFIM,STT->TT_UNIDADE)
												nHorasDec := vVETHORAS[1]
												nQTDHORAS := vVETHORAS[2]

												SOMALI780()
												@li,007 Psay STR0060 //"Seq:"
												@li,014 Psay stt->tt_seqrela Picture "@!"
												@li,018 Psay STR0061 //"Quant. Rec.:"
												@li,030 Psay stt->tt_quanrec  Picture "999"
												@li,034 Psay STR0062 //"Quant.:"
												@li,041 Psay nQTDHORAS  Picture "@E 999,999.99"
												@li,053 Psay STR0063 //"Unid.:"
												@li,060 Psay stt->tt_unidade
												@li,065 Psay STR0064 //"Dest.:"

												@li,071 Psay stl->tl_destino  Picture "@!S3"
												@li,071 Psay stt->tt_destino  Picture "@!S3"
												If MV_PAR17 == 1   // PREVISTA e REAL
													@li,077 Psay STR0065  //"Exec."
													cTemGar := Space(1)
													cTemGar := If(STT->TT_GARANTI = "S",'*',cTemGar)
													@li,082 Psay cTemGar Picture "@!"
													If Alltrim(stt->tt_seqrela) = "0"
														@li,084 Psay "P"
													Else
														@li,084 Psay "R"
													EndIf
												Else  // REAL
													If Alltrim(stt->tt_seqrela) = "0"
														dbSelectArea("STT")
														dbSkip()
														Loop
													EndIf
													cTemGar := Space(1)
													cTemGar := If(STL->TL_GARANTI = "S",'*',cTemGar)
													@li,076 Psay STR0065 //"Exec."
													@li,082 Psay cTemGar Picture "@!"
													@li,084 Psay "R"
												EndIf
												@li,088 Psay stt->tt_dtinici Picture "99/99/9999"
												@li,099 Psay stt->tt_hoinici Picture "99:99"
												@li,105 Psay stt->tt_dtfim   Picture "99/99/9999"
												@li,116 Psay stt->tt_hofim   Picture "99:99"
												If stt->tt_tiporeg <> "P"

													vDHM := fQuantDHM(nHorasDec)
													@li,122 Psay vDHM[1] Picture "9999"
													@li,127 Psay If(Empty(vDHM[2]),"00",If(vDHM[2] < 10,Strzero(vDHM[2],2),vDHM[2]))
													@li,130 Psay If(Empty(vDHM[3]),"00",If(vDHM[3] < 10,Strzero(vDHM[3],2),vDHM[3]))

												EndIf
												//IMPRIME OBSERVACAO DO INSUMO
												If MV_PAR18 = 1
													LPRIMOPE := .F.
													NGIMPMEMO(STT->TT_OBSERVA,94,007,STR0038,.F.,.T.) //"Observacao.:"
												EndIf
												dbSelectArea("STT")
												dbSkip()
											End
											SOMALI780()
										End
									EndIf

									// PROCURA AS OCORRENCIAS
									dbSelectArea("STU")
									dbSetOrder(01)
									If DbSeek(xFilial("STU")+STS->TS_ORDEM+STS->TS_PLANO+aTarefa[x][1])
										While !Eof() .And. xFilial("STU") == stu->tu_filial .And.;
										stu->tu_ordem == sts->ts_ordem .And.;
										stu->tu_plano == sts->ts_plano .And.;
										aTarefa[x][1] == stu->tu_tarefa

											IMPROCOR(STU->TU_CODOCOR,STU->TU_CAUSA,STU->TU_SOLUCAO,STU->TU_DESCRIC)
											dbSelectArea("STU")
											dbSkip()
										End
									EndIf
								Next x
							EndIf
						Else
							dbSelectArea("STJ")
							dbSetOrder(01)
							If DbSeek(xFilial("STJ")+(cTRB)->ORDEM+(cTRB)->PLANO)
								SOMALI780()
								PROCORDEM(stj->tj_ordem,stj->tj_plano,stj->tj_servico,stj->tj_seqrela,;
								stj->tj_dtppini,stj->tj_hoppini,stj->tj_dtppfim,stj->tj_hoppfim,;
								stj->tj_dtprini,stj->tj_hoprini,stj->tj_dtprfim,stj->tj_hoprfim,;
								stj->tj_dtmpini,stj->tj_hompini,stj->tj_dtmpfim,stj->tj_hompfim,;
								stj->tj_dtmrini,stj->tj_homrini,stj->tj_dtmrfim,stj->tj_homrfim,;
								stj->tj_poscont,stj->tj_poscon2,1)

								// TERCEIRO
								SOMALI780()
								@li,007 Psay STR0085 //"Terceiro..:"
								dbSelectArea("STJ")
								If STJ->TJ_TERCEIR == "1"
									@li,019 Psay STR0080 Picture "@!" //"Nao"
								Else
									@li,019 Psay STR0079 Picture "@!" //"Sim"
								EndIf

								// LISTA OBSERVACAO DA O.S
								If MV_PAR16 = 1
									dbSelectArea("STJ")
									LPRIMOPE := .F.
									cOBSERVA := If(FieldPos('TJ_MMSYP') > 0,NGMEMOSYP(STJ->TJ_MMSYP),If(FieldPos('TJ_OBSERVA')>0,STJ->TJ_OBSERVA," "))
									NG2IMPMEMO(cOBSERVA+CHR(13),94,007,STR0038,.F.,.T.) //"Observacao.:"
								EndIf

								// MOTIVOS DO ATRASO DA O.S

								R780MOTAT()

								// IMPRIME OS PROBLEMA DA O.S.
								dbSelectArea("STA")
								dbSetOrder(01)
								DbSeek(xFilial("STA")+STJ->TJ_ORDEM+STJ->TJ_PLANO+Space(06))
								prim := .t.
								While !Eof() .And. xFilial("STA") == sta->ta_filial .And.;
								sta->ta_ordem  == stj->tj_ordem .And.;
								sta->ta_plano  == stj->tj_plano .And.;
								sta->ta_tarefa == Space(06)

									SOMALI780()
									If prim
										SOMALI780()
										@li,007 Psay STR0039 //"Problema da O.S..:"
										prim := .f.
									EndIf
									nnome := Space(29)
									PROCNOMBE(STA->TA_TIPOREG,STA->TA_CODIGO)
									@li,083 Psay sta->ta_descric
									dbSelectArea("STA")
									dbSkip()
								End

								// IMPRIME A DESCRICAO DA MANUTENCAO
								If MV_PAR15 = 1
									LPRIMOPE := .F.
									dbSelectArea("STF")
									dbSetOrder(1)
									If DbSeek(xFilial("STF")+stj->tj_codbem+stj->tj_servico+stj->tj_seqrela)
										NGIMPMEMO(STF->TF_DESCRIC,56,007,STR0037,.F.,.T.) //"Descricao..:"
									EndIf
								EndIf
								// PROCURA AS TAREFAS COM DATA E HORA DE INICIO E FIM
								aTarefa := {}
								dbSelectArea("STQ")
								dbSetOrder(01)
								DbSeek(xFilial("STQ")+STJ->TJ_ORDEM+STJ->TJ_PLANO)
								While !Eof() .And. STQ->TQ_ORDEM == STJ->TJ_ORDEM ;
								.And. STQ->TQ_PLANO == STJ->TJ_PLANO
									If aScan(aTarefa, {|x| x[1] == STQ->TQ_TAREFA}) == 0
										AAdd(aTarefa,{STQ->TQ_TAREFA,CtoD("  /  /  "),CtoD("  /  /  "),"  :  ","  :  ",;
										CtoD("  /  /  "),CtoD("  /  /  "),"  :  ","  :  ",{0,0,0} ,{0,0,0}, cT5Sequen })
									EndIf
									dbSelectArea("STQ")
									dbSkip()
								End
								ZERADATA()
								dbSelectArea("STL")
								dbSetOrder(01)
								If DbSeek(xFilial("STL")+STJ->TJ_ORDEM+STJ->TJ_PLANO)
									While !Eof() .And. xFilial("STL") == stl->tl_filial .And.;
									stl->tl_ordem == stj->tj_ordem .And.;
									stl->tl_plano == stj->tj_plano

										NGDBAREAORDE("STJ",01)
										If DbSeek(xFilial("STJ") + STL->TL_ORDEM + STL->TL_PLANO)
											NGDBAREAORDE("ST5",01)
											If DbSeek(xFilial("ST5")+STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA+STL->TL_TAREFA)
												cT5Sequen := cValToChar(STRZERO(T5_SEQUENC,TAMSX3("T5_SEQUENC")[1]))
											EndIf
										EndIf

										nPos := aScan(aTarefa, {|x| x[1] == STL->TL_TAREFA})
										If nPos > 0
											aTarefa[nPos][2]	:= dtrealini
											aTarefa[nPos][3]	:= dtrealfim
											aTarefa[nPos][4]	:= hrealini
											aTarefa[nPos][5]	:= hrealfim
											aTarefa[nPos][6]	:= dtprelini
											aTarefa[nPos][7]	:= dtprelfim
											aTarefa[nPos][8]	:= hrprlini
											aTarefa[nPos][9]	:= hrprlfim
											aTarefa[nPos][12] := cT5Sequen
										Else
											AAdd(aTarefa,{STL->TL_TAREFA,dtrealini,dtrealfim,hrealini,hrealfim,;
											dtprelini,dtprelfim,hrprlini,hrprlfim,{0,0,0} ,{0,0,0}, cT5Sequen})
										EndIf

										dbSelectArea("STL")
										dbSkip()
									End While
								EndIf

								//Ordena o array de acordo com a tabela ST5 (Tarefas da manutenção)
								aSort(aTarefa ,,, {|x,y| x[12]+x[1] < y[12]+y[1] })

								If !Empty(aTarefa)
									For x := 1 To Len(aTarefa)
										ZERADATA()
										primzero  := .t.
										primoutr  := .t.
										/*
										dbSelectArea("STL")
										dbSetOrder(01)
										DbSeek(xFilial("STL")+STJ->TJ_ORDEM+STJ->TJ_PLANO+aTarefa[x][1])
										While !Eof() .And. xFilial("STL") == stl->tl_filial .And.;
										stl->tl_ordem  == stj->tj_ordem  .And.;
										stl->tl_plano  == stj->tj_plano  .And.;
										stl->tl_tarefa == aTarefa[x][1]

										PROCHORINI(stl->tl_seqrela,stl->tl_dtinici,stl->tl_dtfim,;
										stl->tl_hoinici,stl->tl_hofim,STL->TL_TIPOREG)
										dbSkip()
										End
										*/
										aRetTmp := TEMPOEXEC(STJ->TJ_ORDEM,1,aTarefa[x][1])
										aTarefa[x][10] := aRetTmp[1]
										aTarefa[x][11] := aRetTmp[2]
										MNTR780CT(x)
									Next x
								EndIf

								// PROCURA OS DETALHES DAS TAREFAS
								For x := 1 To Len(aTarefa)
									If x == 1
										SOMALI780()
									Endif
									SOMALI780()
									@li,007 Psay STR0040 //"Tarefa..:"
									@li,017 Psay aTarefa[x][1]
									@li,024 Psay MNTR780IT(stj->tj_plano,;
									stj->tj_codbem+stj->tj_servico+stj->tj_seqrela,;
									aTarefa[x,1])

									If MV_PAR17 == 1
										MNTR780DH(STR0047,aTarefa[x,6],aTarefa[x,8],aTarefa[x,7],aTarefa[x,9],aTarefa[x][11])
										SOMALI780()
										MNTR780DH(STR0048,aTarefa[x,2],aTarefa[x,4],aTarefa[x,3],aTarefa[x,5],aTarefa[x][10])
									Else
										MNTR780DH(STR0048,aTarefa[x,2],aTarefa[x,4],aTarefa[x,3],aTarefa[x,5],aTarefa[x][10])
									EndIf

									// IMPRIME OS PROBLEMAS DA TAREFA.
									dbSelectArea("STA")
									dbSetOrder(01)
									DbSeek(xFilial("STA")+STJ->TJ_ORDEM+STJ->TJ_PLANO+aTarefa[x][1])
									prim := .t.
									While !Eof() .And. xFilial("STA") == sta->ta_filial .And.;
									sta->ta_ordem  == stj->tj_ordem .And.;
									sta->ta_plano  == stj->tj_plano .And.;
									sta->ta_tarefa == aTarefa[x][1]

										SOMALI780()
										If prim
											SOMALI780()
											@li,010 Psay STR0042 //"Problema da Tarefa.:"
											prim := .f.
										EndIf

										vNomeI := NGNOMINSUM(sta->ta_tiporeg,sta->ta_codigo,29)
										@li,031 Psay SubStr(vNomeI[1,1],1,4)
										@li,038 Psay STV->TV_CODIGO
										@li,053 Psay vNomeI[1,2]
										@li,084 Psay "-"
										@li,087 Psay Substr(sta->ta_descric,1,36)
										dbSelectArea("STA")
										dbSkip()
									End

									// ETAPAS DA TAREFA
									dbSelectArea("STQ")
									dbSetOrder(01)
									lPrimeta := .T.
									lOPCOES  := .F.
									If DbSeek(xFilial("STQ")+STJ->TJ_ORDEM+STJ->TJ_PLANO+aTarefa[x][1])
										cEtapa1 := stq->tq_etapa
										While !Eof() .And. xFilial("STQ") == stq->tq_filial .And.;
										stq->tq_ordem == stj->tj_ordem .And.;
										stq->tq_plano == stj->tj_plano .And.;
										aTarefa[x][1] == stq->tq_tarefa

											If stq->tq_etapa <> cEtapa1
												lPRIMETA := .T.
											EndIf
											If lPRIMETA

												If lOPCOES
													SOMALI780()
													SOMALI780()
												Else
													SOMALI780()
												EndIf
												@li,017 Psay STR0043 //"Etapa..:"
												If !Empty(stq->tq_ok)
													@li,026 Psay "R"
												EndIf
												@li,029 Psay stq->tq_etapa

												lPRIMETA := .F.
												dbSelectArea("TPA")
												dbSetOrder(01)
												If DbSeek(xFilial("TPA")+STQ->TQ_ETAPA)
													NGIMPMEMO(TPA->TPA_DESCRI,90,037,,.T.,.F.)
												EndIf
											EndIf

											//OPCOES DA ETAPA
											lOPCOES := .F.
											dbSelectArea("TPC")
											dbSetOrder(01)
											If DbSeek(xFilial("TPC")+STQ->TQ_ETAPA)
												While !Eof() .And. TPC->TPC_FILIAL = Xfilial("TPC") .And.;
												TPC->TPC_ETAPA = STQ->TQ_ETAPA

													If !Empty(stq->tq_ok)
														dbSelectArea("TPQ")
														dbSetOrder(01)
														If DbSeek(xFilial("TPQ")+STQ->TQ_ORDEM+STQ->TQ_PLANO+STQ->TQ_TAREFA+TPC->TPC_ETAPA)

															While !Eof() .And. TPQ->TPQ_FILIAL = Xfilial("TPQ") .And.;
															TPQ->TPQ_ORDEM  = STQ->TQ_ORDEM                   .And.;
															TPQ->TPQ_PLANO  = STQ->TQ_PLANO                   .And.;
															TPQ->TPQ_TAREFA = STQ->TQ_TAREFA                  .And.;
															TPQ->TPQ_ETAPA  = TPC->TPC_ETAPA

																If TPQ->TPQ_OPCAO = TPC->TPC_OPCAO
																	lOPCOES := .T.
																	SOMALI780()
																	@li,026 Psay STR0054  //"Opcao..:"
																	@li,035 Psay TPQ->TPQ_OPCAO Picture '@!'
																	If TPC->TPC_TIPRES = 'I'
																		@li,053 Psay STR0055 //"Informou....:"
																		@li,067 Psay TPQ->TPQ_RESPOS
																		@li,088 Psay STR0070//"OS..:"
																		@li,094 Psay TPQ->TPQ_ORDEMG
																	Else
																		@li,053 Psay STR0056 //"Marcou......:"
																		@li,067 Psay STR0008 //"SIM"
																	EndIf
																EndIf
																dbSelectArea("TPQ")
																dbSkip()
															End
															SOMALI780()
														EndIf
													EndIf
													dbSelectArea("TPC")
													dbSkip()
												End
											EndIf
											cEtapa1 := stq->tq_etapa
											dbSelectArea("STQ")
											dbSkip()
										End
									EndIf

									dbSelectArea("STL")
									dbSetOrder(01)
									If DbSeek(xFilial("STL")+STJ->TJ_ORDEM+STJ->TJ_PLANO+aTarefa[x][1])
										SOMALI780()
										While !Eof() .And. xFilial("STL") == stl->tl_filial .And.;
										stl->tl_ordem  == stj->tj_ordem  .And.;
										stl->tl_plano  == stj->tj_plano  .And.;
										aTarefa[x][1]  == stl->tl_tarefa

											If MV_PAR17 == 2 .And. Alltrim(stl->tl_seqrela) = "0"  // SO REAL
												dbSelectArea("STL")
												dbSkip()
												Loop
											EndIf
											ntarefa  := stl->tl_tarefa
											ntiporeg := stl->tl_tiporeg

											vNomeI := NGNOMINSUM(stl->tl_tiporeg,stl->tl_codigo,28)
											SOMALI780()
											@li,007 Psay STR0059 //"Ins..:"
											@li,014 Psay SubStr(vNomeI[1,1],1,4)
											@li,019 Psay STL->TL_CODIGO
											@li,035+nTamPro Psay vNomeI[1,2]

											dbSelectArea("STL")
											nproduto := stl->tl_codigo
											While !Eof() .And. xFilial("STL") == stl->tl_filial .And.;
											stl->tl_ordem == stj->tj_ordem   .And.;
											stl->tl_plano == stj->tj_plano   .And.;
											ntarefa       == stl->tl_tarefa  .And.;
											ntiporeg      == stl->tl_tiporeg .And.;
											nproduto      == stl->tl_codigo

												vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
												STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
												STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
												nHorasDec := vVETHORAS[1]
												nQTDHORAS := vVETHORAS[2]

												SOMALI780()
												@li,007 Psay STR0060 //"Seq.:"
												@li,014 Psay stl->tl_seqrela Picture "@!"
												@li,018 Psay STR0061 //"Quant. Rec.:"
												@li,030 Psay stl->tl_quanrec  Picture "999"
												@li,034 Psay STR0062 //"Quan:"
												@li,041 Psay nQTDHORAS  Picture "@E 999,999.99"
												@li,053 Psay STR0063 //"Un:"
												@li,060 Psay stl->tl_unidade
												@li,065 Psay STR0064 //"Dest:"
												@li,072 Psay stl->tl_destino  Picture "@!S3"

												If MV_PAR17 == 1   // PREVISTA e REAL
													@li,076 Psay STR0065 //"Exec."
													cTemGar := Space(1)
													cTemGar := If(STL->TL_GARANTI = "S",'*',cTemGar)
													@li,082 Psay cTemGar Picture "@!"
													cTipI := If(Alltrim(stl->tl_seqrela) = "0","P","R")
													@li,084 Psay cTipI
												Else  // REAL
													If Alltrim(stl->tl_seqrela) = "0"
														dbSelectArea("STL")
														dbSkip()
														Loop
													EndIf
													cTemGar := Space(1)
													cTemGar := if(STL->TL_GARANTI = "S",'*',cTemGar)
													@li,076 Psay STR0065 //"Exec."
													@li,082 Psay cTemGar Picture "@!"
													@li,084 Psay "R"
												EndIf
												@li,088 Psay stl->tl_dtinici  Picture "99/99/9999"
												@li,099 Psay stl->tl_hoinici  Picture "99:99"
												@li,105 Psay stl->tl_dtfim    Picture "99/99/9999"
												@li,116 Psay stl->tl_hofim    Picture "99:99"
												If stl->tl_tiporeg <> "P"
													vDHM := fQuantDHM(nHorasDec)
													@li,122 Psay vDHM[1] Picture "9999"
													@li,127 Psay If(Empty(vDHM[2]),"00",If(vDHM[2] < 10,Strzero(vDHM[2],2),vDHM[2]))
													@li,130 Psay If(Empty(vDHM[3]),"00",If(vDHM[3] < 10,Strzero(vDHM[3],2),vDHM[3]))
												EndIf
												//IMPRIME OBSERVACAO DO INSUMO
												If MV_PAR18 = 1
													LPRIMOPE := .F.
													NG2IMPMEMO(STL->TL_OBSERVA,94,007,STR0038,.F.,.T.) //"Observacao.:"
												EndIf
												dbSelectArea("STL")
												dbSkip()
											End
											SOMALI780()
										End
									EndIf

									// PROCURA AS OCORRENCIAS
									dbSelectArea("STN")
									dbSetOrder(01)
									If DbSeek(xFilial("STN")+STJ->TJ_ORDEM+STJ->TJ_PLANO+aTarefa[x][1])
										While !Eof() .And. xFilial("STN") == stn->tn_filial .And.;
										stn->tn_ordem == stj->tj_ordem .And.;
										stn->tn_plano == stj->tj_plano .And.;
										aTarefa[x][1] == stn->tn_tarefa

											IMPROCOR(STN->TN_CODOCOR,STN->TN_CAUSA,STN->TN_SOLUCAO,STN->TN_DESCRIC)
											dbSelectArea("STN")
											dbSkip()
										End
									EndIf
								Next x
							EndIf
						EndIf
						SOMALI780()
						@Li,000 Psay Replicate("-",132)
						dbSelectArea(cTRB)
						dbSkip()
					EndDo
				EndDo
			EndDo
		EndDo
	Else
		MsgInfo(STR0095, STR0094)
		oTmpTbl1:Delete()
		Return .F.
	EndIf

	Roda(nCntImpr,cRodaTxt,Tamanho)

	//----------------------------------------------------------------
	//| Devolve a condicao original do arquivo principal             |
	//----------------------------------------------------------------
	RetIndex("ST9")
	Set Filter To
	Set device to Screen
	If aReturn[5] = 1
		Set Printer To
		dbCommitAll()
		OurSpool(wnrel)
	EndIf

	MS_FLUSH()

	oTmpTbl1:Delete()// Deleta Arquivo temporario

Return Nil
//------------------------------------------------------------------------------
/*/{Protheus.doc} GRAVAR780
Grava arquivo auxiliar
@author Inacio Luiz Kolling
@since 17/06/97
@version undefined
@param cCCUSTO, characters
@param cCENTRAB, characters
@param cORDEM, characters
@param cPLANO, characters
@param cCODBEM, characters
@param cARQ, characters
@type function
/*/
//------------------------------------------------------------------------------
Static Function GRAVAR780(cCCUSTO,cCENTRAB,cORDEM,cPLANO,cCODBEM,cARQ)

	(cTRB)->(DbAppend())
	(cTRB)->CUSTO    := cCCUSTO
	(cTRB)->TRABALHO := cCENTRAB
	(cTRB)->ORDEM    := cORDEM
	(cTRB)->PLANO    := cPLANO
	(cTRB)->BEM      := cCODBEM
	(cTRB)->ARQUIVO  := cARQ

Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} SOMALI780
Incrementa Linha e Controla Salto de Pagina
@author Inacio Luiz Kolling
@since 17/06/97
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Static Function SOMALI780()
	Li++
	If Li > 58
		Cabec(titulo,cabec1,cabec2,nomeprog,tamanho,nTipo)
		SOMALI780()
		@Li,000 Psay Replicate("*",132)
		Li++
	EndIf
Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} cabecos
Incrementa Linha e Controla Salto de Pagina
@author Inacio Luiz Kolling
@since 17/06/97
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Static Function cabecos()
	SOMALI780()
	@LI,000 Psay STR0044 // "O.S.   Plano  Serv.  Seq. Nome Servico                Contador 1  Contador 2 Evento P/R  .....Inicio..... ......Fim.......   DD-HH-MM"
return  .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} PROCORDEM
Processa as O.S. atuais e historico
@author Inacio Luiz Kolling
@since 17/06/97
@version undefined
@param cordem, characters
@param cplano, characters
@param cservico, characters
@param csequenc, characters
@param ddtppini, date
@param choppini, characters
@param ddtppfim, date
@param choppfim, characters
@param ddtprini, date
@param choprini, characters
@param ddtprfim, date
@param choprfim, characters
@param ddtmpini, date
@param chompini, characters
@param ddtmpfim, date
@param chompfim, characters
@param ddtmrini, date
@param chomrini, characters
@param ddtmrfim, date
@param chomrfim, characters
@param npos1, numeric
@param npos2, numeric
@param _nSTJouSTS
@type function
/*/
//------------------------------------------------------------------------------
Function PROCORDEM(cordem,cplano,cservico,csequenc,ddtppini,choppini,;
	ddtppfim,choppfim,ddtprini,choprini,ddtprfim,choprfim,;
	ddtmpini,chompini,ddtmpfim,chompfim,ddtmrini,chomrini,;
	ddtmrfim,chomrfim,npos1,npos2,_nSTJouSTS)
	Local aDiaHorMin := {}

	@li,096 Psay STR0077 //"DURAÇÃO DA O.S."
	SOMALI780()
	@li,076 Psay "--------------------------------------------------------"
	SOMALI780()

	@li,000 Psay cordem
	@li,007 Psay cplano
	@li,014 Psay cservico
	If ValType(csequenc) = "N"
		@li,022 Psay csequenc Picture '999'
	Else
		@li,022 Psay csequenc Picture '@!'
	EndIf
	@li,026 Psay SubStr(NGSEEK('ST4',cservico,1,'T4_NOME'),1,25)
	@li,052 Psay npos1 Picture '@E 999,999,999'
	@li,064 Psay npos2 Picture '@E 999,999,999'

	If MV_PAR17 = 1  // PARADAS PREVISTA E REALIZADA
		MNTR780DH(STR0045,ddtppini,choppini,ddtppfim,choppfim,nil)
		SOMALI780()
		MNTR780DH(STR0046,ddtprini,choprini,ddtprfim,choprfim,nil)
		SOMALI780()
		MNTR780DH(STR0047,ddtmpini,chompini,ddtmpfim,chompfim,nil)
		SOMALI780()
		MNTR780DH(STR0048,ddtmrini,chomrini,ddtmrfim,chomrfim,nil)
	Else // SO PARADA REAL
		MNTR780DH(STR0046,ddtprini,choprini,ddtprfim,choprfim,nil)
		SOMALI780()
		MNTR780DH(STR0048,ddtmrini,chomrini,ddtmrfim,chomrfim,nil)
	EndIf

	SOMALI780()
	SOMALI780()
	@li,091 Psay STR0076 //"TEMPO DE EXECUÇÃO DA O.S."
	SOMALI780()
	@li,076 Psay "--------------------------------------------------------"
	SOMALI780()
	aDiaHorMin := TEMPOEXEC(cordem,_nSTJouSTS,nil)
	@li,076 Psay STR0075 //"Exec.   R. "
	@li,125 Psay AllTrim(Str(aDiaHorMin[1])) + ' ' + StrZero(aDiaHorMin[2],2) + ' ' + StrZero(aDiaHorMin[3],2)

Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR780DH
Imprime as datas e as horas
@author Inacio Luiz Kolling
@since 31/10/2008
@version undefined
@param cTit, characters
@param dtini, date
@param chini, characters
@param dtfim, date
@param chfim, characters
@param aQtdDHM, array
@type function
/*/
//------------------------------------------------------------------------------
Static Function MNTR780DH(cTit,dtini,chini,dtfim,chfim,aQtdDHM)
	@li,076 Psay cTit
	@li,088 Psay dtini Picture "99/99/9999"
	@li,099 Psay chini Picture "99:99"
	@li,105 Psay dtfim Picture "99/99/9999"
	@li,116 Psay chfim Picture "99:99"

	If Valtype(aQtdDHM) == "A"
		vDHM := aQtdDHM
	Else
		vDHM := NGCALCDHM(dtini,chini,dtfim,chfim)
	Endif

	@li,122 Psay vDHM[1] Picture "9999"
	@li,127 Psay If(Empty(vDHM[2]),"00",If(vDHM[2] < 10,Strzero(vDHM[2],2),vDHM[2]))
	@li,130 Psay If(Empty(vDHM[3]),"00",If(vDHM[3] < 10,Strzero(vDHM[3],2),vDHM[3]))
Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} PROCNOMBE
Procura o nome do bem ou especialidade
@author Inacio Luiz Kolling
@since 17/06/97
@version undefined
@param cTIPOREG, characters
@param cCODIGO, characters
@type function
/*/
//------------------------------------------------------------------------------
Static Function PROCNOMBE(cTIPOREG,cCODIGO)
	@li,027 Psay If(ctiporeg == "B",STR0049,STR0050) //"Bem" //"Espec."
	@li,034 Psay If(ctiporeg == "B",Substr(ccodigo,1,16),Substr(ccodigo,1,3))
	@li,051 Psay Left(If(ctiporeg == "B",NGSEEK('ST9',Substr(ccodigo,1,16),1,'T9_NOME'),;
	NGSEEK('ST0',Substr(ccodigo,1,3),1,'T0_NOME')),29)
	@li,081 Psay "-"
Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} ZERADATA
Limpa as variaveis de data e hora
@author Inacio Luiz Kolling
@since 17/06/97
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Static Function ZERADATA()
	Store CtoD("  /  /    ") To dtrealini,dtrealfim,dtprelini,dtprelfim
	Store Space(5)           To hrealini,hrealfim,hrprlini,hrprlfim
	aInsumos := {}
Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} IMPROCOR
Imprime as ocorrencias
@author Inacio Luiz Kolling
@since 17/06/97
@version undefined
@param cCODOCOR, characters
@param cCAUSA, characters
@param cSOLUCAO, characters
@param cDESCRIC, characters
@type function
/*/
//------------------------------------------------------------------------------
Static Function IMPROCOR(cCODOCOR,cCAUSA,cSOLUCAO,cDESCRIC)
	SOMALI780()
	@li,017 Psay STR0051 //"Ocorr:"
	@li,024 Psay cCODOCOR
	@li,031 Psay NGSEEK('ST8',cCODOCOR,1,'T8_NOME')

	SOMALI780()
	@li,017 Psay STR0052 //"Causa:"
	@li,024 Psay cCAUSA
	@li,031 Psay NGSEEK('ST8',cCAUSA,1,'T8_NOME')

	SOMALI780()
	@li,017 Psay STR0053 //"Saluc:"
	@li,024 Psay cSOLUCAO
	@li,031 Psay NGSEEK('ST8',cSOLUCAO,1,'T8_NOME')
	LPRIMOPE := .F.
	NGIMPMEMO(cDESCRIC,56,017,STR0037,.T.,.T.) //"Descricao..:"
Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} PROCHORINI
Verifica a data e hora inicio e fim
@author Inacio Luiz Kolling
@since 17/06/97
@version undefined
@param nsequ, numeric
@param ddtinic, date
@param ddtfim, date
@param choinici, characters
@param chofim, characters
@param _cTipoReg
@type function
/*/
//------------------------------------------------------------------------------
Static Function PROCHORINI(nsequ,ddtinic,ddtfim,choinici,chofim,_cTipoReg)
	nsequenc := If(ValType(nsequ) = "C",Val(nsequ),nsequ)

	/*If nsequenc = 0
	//  VERIFICA QUAL E A DATA PREVISTA DE INICIO, DATA FIM, HORA INCIO, HORA FIM DA TAREFA
	If primzero
	dtprelini := ddtinic
	dtprelfim := ddtfim
	hrprlini  := choinici
	hrprlfim  := chofim
	primzero  := .f.
	Else
	If (ddtinic < dtprelini)
	dtprelini := ddtinic
	hrprlini  := choinici
	ElseIf ddtinic = dtprelini .And. choinici < hrprlini
	hrprlini  := choinici
	EndIf
	If ddtfim > dtprelfim
	dtprelfim := ddtfim
	hrprlfim  := chofim
	ElseIf ddtfim = dtprelfim .And. chofim > hrprlfim
	hrprlfim  := chofim
	EndIf
	EndIf
	Else
	// VERIFICA QUAL E A DATA REAL DE INICIO, DATA FIM, HORA INCIO, HORA FIM DA TAREFA
	If primoutr
	dtrealini := ddtinic
	dtrealfim := ddtfim
	hrealini  := choinici
	hrealfim  := chofim
	primoutr  := .f.
	Else
	If (ddtinic < dtrealini)
	dtprelini := ddtinic
	hrealini  := choinici
	ElseIf ddtinic = dtrealini .And. choinici < hrealini
	hrealini  := choinici
	EndIf
	If ddtfim > dtrealfim
	dtrealfim := ddtfim
	hrealfim  := chofim
	ElseIf ddtfim = dtrealfim .And. chofim > hrealfim
	hrealfim  := chofim
	EndIf
	EndIf
	EndIf*/

	If _cTipoReg != 'P'
		_cTipoReg := 'O'
	Endif

	nPOS := aScan(aInsumos, {|x| x[1] == _cTipoReg})
	If nPOS == 0
		If nsequenc == 0
			AAdd(aInsumos,{_cTipoReg,STOD('  /  /  '),STOD('  /  /  '),'  :  ','  :  ',ddtinic,choinici,ddtfim,chofim})
		Else
			AAdd(aInsumos,{_cTipoReg,ddtinic,ddtfim,choinici,chofim,STOD('  /  /  '),'  :  ',STOD('  /  /  '),'  :  '})
		Endif
	Else
		If nsequenc == 0
			If DTOS(ddtinic)+choinici < DTOS(aInsumos[nPOS][6])+aInsumos[nPOS][7] .OR. AllTrim(DTOS(aInsumos[nPOS][6])+aInsumos[nPOS][7]) == ':'
				aInsumos[nPOS][6] := ddtinic
				aInsumos[nPOS][7] := choinici
			Endif
			If DTOS(ddtfim)+chofim > DTOS(aInsumos[nPOS][8])+aInsumos[nPOS][9] .OR. AllTrim(DTOS(aInsumos[nPOS][8])+aInsumos[nPOS][9]) == ':'
				aInsumos[nPOS][8] := ddtfim
				aInsumos[nPOS][9] := chofim
			Endif
		Else
			If DTOS(ddtinic)+choinici < DTOS(aInsumos[nPOS][2])+aInsumos[nPOS][4] .OR. AllTrim(DTOS(aInsumos[nPOS][2])+aInsumos[nPOS][4]) == ':'
				aInsumos[nPOS][2] := ddtinic
				aInsumos[nPOS][4] := choinici
			Endif
			If DTOS(ddtfim)+chofim > DTOS(aInsumos[nPOS][3])+aInsumos[nPOS][5] .OR. AllTrim(DTOS(aInsumos[nPOS][3])+aInsumos[nPOS][5]) == ':'
				aInsumos[nPOS][3] := ddtfim
				aInsumos[nPOS][5] := chofim
			Endif
		Endif
	Endif

Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} R780MOTAT
Imprime os motivos de atraso da O.S
@author Elisangela Costa
@since 25/02/02
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Static Function R780MOTAT()
	dbSelectArea("TPL")
	dbSetOrder(1)
	If DbSeek(xFilial("TPL")+(cTRB)->ORDEM)
		SOMALI780()
		SOMALI780()
		@LI,007 Psay STR0057 //"Motivo do Atraso da  O.S..:  Motivo Descricao                                   .....Inicio..... ......Fim......."
		While !Eof() .And. xfilial("TPL") = TPL->TPL_Filial .And. TPL->TPL_ORDEM = (cTRB)->ORDEM
			SOMALI780()
			@LI,036 Psay TPL->TPL_CODMOT Picture '@!'
			@li,043 Psay NGSEEK('TPJ',TPL->TPL_CODMOT,1,'TPJ_DESMOT')
			@li,087 Psay TPL->TPL_DTINIC Picture '99/99/99'
			@li,098 Psay TPL->TPL_HOINIC Picture '99:99'
			@li,104 Psay TPL->TPL_DTFIM  Picture '99/99/99'
			@li,115 Psay TPL->TPL_HOFIM  Picture '99:99'
			dbSelectArea("TPL")
			dbSkip()
		End
		SOMALI780()
	EndIf
Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} R780MOTATH
Imprime o historico dos motivos de atraso da O.S
@author Ricardo Dal Ponte
@since 19/03/07
@version undefined
@type function
/*/
//------------------------------------------------------------------------------
Static Function R780MOTATH()
	dbSelectArea("TQ6")
	dbSetOrder(02)
	If DbSeek(xFilial("TQ6")+(cTRB)->ORDEM)
		SOMALI780()
		SOMALI780()
		@LI,007 Psay STR0057 //"Motivo do Atraso da  O.S..:  Motivo Descricao                                   .....Inicio..... ......Fim......."
		While !Eof() .And. xfilial("TQ6") = TQ6->TQ6_Filial .And. TQ6->TQ6_ORDEM = (cTRB)->ORDEM
			SOMALI780()
			@LI,036 Psay TQ6->TQ6_CODMOT Picture '@!'
			@li,043 Psay NGSEEK('TPJ',TQ6->TQ6_CODMOT,1,'TPJ_DESMOT')
			@li,087 Psay TQ6->TQ6_DTINIC Picture '99/99/99'
			@li,098 Psay TQ6->TQ6_HOINIC Picture '99:99'
			@li,104 Psay TQ6->TQ6_DTFIM  Picture '99/99/99'
			@li,115 Psay TQ6->TQ6_HOFIM  Picture '99:99'
			dbSelectArea("TQ6")
			dbSkip()
		End
		SOMALI780()
	EndIf
Return .T.
//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR780IT
Procura a descricao da tarefa
@author Inacio Luiz Kolling
@since 31/10/2008
@version undefined
@param vCplano
@param vPreCh
@param cVTar, characters
@type function
/*/
//------------------------------------------------------------------------------
Static Function MNTR780IT(vCplano,vPreCh,cVTar)
	If Trim(cVTar) == "0"
		cNOMTAR := STR0041
	Else
		If lUSATAR
			lCORRET := If(Val(vCplano) = 0,.t.,.f.)
			cNOMTAR := NGNOMETAR(vPreCh,cVTar)
		Else
			cNOMTAR := NGSEEK("ST5",vPreCh+cVTar,1,"T5_DESCRIC")
		EndIf
	Endif
Return cNOMTAR
//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR780CT
Carrega a matriz das tarefas
@author Inacio Luiz Kolling
@since 31/10/2008
@version undefined
@param _nLi
@type function
/*/
//------------------------------------------------------------------------------
Static Function MNTR780CT(_nLi)
	Local nI := 0
	Local nPOSPro := aScan(aInsumos, {|x| x[1] == 'P'})
	Local nPOSOut := aScan(aInsumos, {|x| x[1] == 'O'})
	Local nPOS := IIF(nPOSOut != 0,nPOSOut,nPOSPro)

	If len(aInsumos) > 0
		aTarefa[_nLi][2] := aInsumos[nPOS][2]
		aTarefa[_nLi][3] := aInsumos[nPOS][3]
		aTarefa[_nLi][4] := aInsumos[nPOS][4]
		aTarefa[_nLi][5] := aInsumos[nPOS][5]
		If Empty(aInsumos[nPOS][6]) .AND. Empty(aInsumos[nPOS][8]) .AND. nPOSPro != 0
			aTarefa[_nLi][6] := aInsumos[nPOSPro][6]
			aTarefa[_nLi][7] := aInsumos[nPOSPro][8]
			aTarefa[_nLi][8] := aInsumos[nPOSPro][7]
			aTarefa[_nLi][9] := aInsumos[nPOSPro][9]
		Else
			aTarefa[_nLi][6] := aInsumos[nPOS][6]
			aTarefa[_nLi][7] := aInsumos[nPOS][8]
			aTarefa[_nLi][8] := aInsumos[nPOS][7]
			aTarefa[_nLi][9] := aInsumos[nPOS][9]
		Endif
	Endif

Return
//------------------------------------------------------------------------------
/*/{Protheus.doc} TEMPOEXEC
Calcula data hora fim para o insumo
@author Marcos Wagner Junior
@since 14/01/2009
@version undefined
@param _cORDEM
@param _nSTJouSTT
@param cCodTar, characters
@type function
@Return Data Fim,Hora Fim
/*/
//------------------------------------------------------------------------------
Static Function TEMPOEXEC(_cORDEM,_nSTJouSTT,cCodTar)

	Local aOldArea := GetArea()
	Local aCalend  := {}
	Local nPeriodo := 1
	Local nI
	Local lLoop := .F.
	Local lInsTarefa := .F.
	Local oTmpTbl2
	Local oTmpTbl3

	Private cTRB1Ins  := GetNextAlias()
	Private cTRB2Ins  := GetNextAlias()

	If Valtype(cCodTar) == "C"
		If !Empty(cCodTar)
			lInsTarefa := .T.
		Endif
	Endif

	Private aVETINR := {}

	aDBFRIns := {{"DATAINI","D",08,0},;
				 {"HORAINI","C",05,0},;
				 {"DATAFIM","D",08,0},;
				 {"HORAFIM","C",05,0}}

	//Instancia classe FWTemporaryTable (ARQUIVO 2)
	oTmpTbl2  := FWTemporaryTable():New( cTRB1Ins, aDBFRIns )
	//Cria indices
	oTmpTbl2:AddIndex( "Ind01" , {"DATAINI","HORAINI","DATAFIM","HORAFIM"}  )
	//Cria a tabela temporaria
	oTmpTbl2:Create()

	aIns0002 := {{"DATAINI","D",08,0},;
				 {"HORAINI","C",05,0},;
				 {"DATAFIM","D",08,0},;
				 {"HORAFIM","C",05,0}}

	//Instancia classe FWTemporaryTable (ARQUIVO 3)
	oTmpTbl3  := FWTemporaryTable():New( cTRB2Ins, aIns0002 )
	//Cria indices
	oTmpTbl3:AddIndex( "Ind01" , {"DATAINI","HORAINI","DATAFIM","HORAFIM"}  )
	//Cria a tabela temporaria
	oTmpTbl3:Create()

	If _nSTJouSTT == 1
		aArrSTJSTS := {"STL->TL_DTINICI","STL->TL_DTFIM","STL->TL_TIPOREG","STL->TL_USACALE",;
		"STL->TL_CODIGO","STL->TL_HOINICI","STL->TL_HOFIM","STL",;
		"STL->TL_FILIAL","STL->TL_ORDEM","STL->TL_SEQRELA","STJ",;
		"STJ->TJ_SITUACA","STJ->TJ_TERMINO","STJ->TJ_TIPOOS","STJ->TJ_PLANO",;
		"STJ->TJ_CODBEM","STJ->TJ_SERVICO","STJ->TJ_SEQRELA" }
	Else
		aArrSTJSTS := {"STT->TT_DTINICI","STT->TT_DTFIM","STT->TT_TIPOREG","STT->TT_USACALE",;
		"STT->TT_CODIGO","STT->TT_HOINICI","STT->TT_HOFIM","STT",;
		"STT->TT_FILIAL","STT->TT_ORDEM","STT->TT_SEQRELA","STS",;
		"STS->TS_SITUACA","STS->TS_TERMINO","STS->TS_TIPOOS","STS->TS_PLANO",;
		"STS->TS_CODBEM","STS->TS_SERVICO","STS->TS_SEQRELA" }
	Endif

	dbSelectArea(aArrSTJSTS[8])
	dbSetOrder(01)
	dbSeek(xFilial(aArrSTJSTS[8])+_cORDEM)
	While !Eof() .AND. &(aArrSTJSTS[9]) == xFilial(aArrSTJSTS[8]) .AND. &(aArrSTJSTS[10]) == _cORDEM

		If lInsTarefa
			If _nSTJouSTT == 1
				If STL->TL_TAREFA <> cCodTar
					dbSelectArea(aArrSTJSTS[8])
					dbSkip()
					Loop
				Endif
				PROCHORINI(stl->tl_seqrela,stl->tl_dtinici,stl->tl_dtfim,;
				stl->tl_hoinici,stl->tl_hofim,STL->TL_TIPOREG)
			Else
				If STT->TT_TAREFA <> cCodTar
					dbSelectArea(aArrSTJSTS[8])
					dbSkip()
					Loop
				Endif
				PROCHORINI(stt->tt_seqrela,stt->tt_dtinici,stt->tt_dtfim,;
				stt->tt_hoinici,stt->tt_hofim,STT->TT_TIPOREG)
			Endif
		Else
			If Val(&(aArrSTJSTS[11])) == 0
				dbSelectArea(aArrSTJSTS[8])
				dbSkip()
				Loop
			Endif
		Endif

		cTRBInsumo := If( lInsTarefa .and. Val(&(aArrSTJSTS[11])) == 0 , cTRB2Ins , cTRB1Ins )

		dDataIni := &(aArrSTJSTS[1])
		dDataFim := &(aArrSTJSTS[2])

		If ( &(aArrSTJSTS[3]) != 'M' .AND. &(aArrSTJSTS[3]) != 'T' .AND. &(aArrSTJSTS[3]) != 'E' )
			dbSkip()
			Loop
		Else
			dbSelectArea(aArrSTJSTS[12])
			dbSetOrder(01)
			dbSeek(xFilial(aArrSTJSTS[12])+_cORDEM)
			If (&(aArrSTJSTS[13]) != 'L') .OR. (&(aArrSTJSTS[14]) != 'S') .OR.;
			(&(aArrSTJSTS[15]) != 'B')
				dbSelectArea(aArrSTJSTS[8])
				dbSkip()
				Loop
			Endif
		EndIf

		aCalend := {}
		If &(aArrSTJSTS[3]) == 'M'
			If ( &(aArrSTJSTS[4]) == 'S' .OR. ( &(aArrSTJSTS[16]) != '000000' .AND. Val(&(aArrSTJSTS[11])) == 0 ) )
				If NGIFDICIONA("ST1",xFilial("ST1")+SubStr(&(aArrSTJSTS[5]),1,6),1)
					aCalend := NGCALENDAH(ST1->T1_TURNO)
				Endif
			Endif
		ElseIf &(aArrSTJSTS[3]) == 'T'
			If &(aArrSTJSTS[16]) != '000000' .AND. Val(&(aArrSTJSTS[11])) == 0
				cCodChv := &(aArrSTJSTS[17]) + &(aArrSTJSTS[18]) + &(aArrSTJSTS[19])
				If NGIFDICIONA("STF",xFilial("STF")+cCodChv,1)
					aCalend := NGCALENDAH(STF->TF_CALENDA)
				Endif
			Endif
		Endif

		While dDataIni <= dDataFim

			cHoraIni := &(aArrSTJSTS[6])
			cHoraFim := &(aArrSTJSTS[7])

			If dDataIni > &(aArrSTJSTS[1])
				cHoraIni := '00:00'
			Endif
			If dDataIni != &(aArrSTJSTS[2])
				cHoraFim := '24:00'
			Endif

			cHoraIniOK := cHoraIni //Nao podem mais ser alteradas
			cHoraFimOK := cHoraFim //Nao podem mais ser alteradas

			//Verifica o dia da semana data corrente (dDataIni)
			nPeriodo := 1
			If Len(aCalend) > 0
				nPeriodo := Len(aCalend[Dow(dDataIni)][2])
			Endif
			//Se tem periodo de manha e a tarde faz o for 2 vezes
			For nI := 1 to nPeriodo

				lLoop := .t.
				If Len(aCalend) > 0
					cCalendIni := aCalend[Dow(dDataIni)][2][nI][1]
					cCalendFim := aCalend[Dow(dDataIni)][2][nI][2]

					lLoop := .f.
					If cCalendIni >= cHoraIniOK
						cHoraIni := cCalendIni
						lLoop := .t.
					Endif
					cHoraFim := cHoraFimOK
					If cCalendFim <= cHoraFimOK .and. cCalendFim >= cHoraIniOK
						cHoraFim := cCalendFim
						lLoop := .t.
					Endif
				Endif

				If lLoop
					dbSelectArea((cTRBInsumo))
					dbSetOrder(01)
					If !dbSeek(DTOS(dDataIni)) //NAO EXISTE O DIA NA TRB
						RecLock((cTRBInsumo),.t.)
						(cTRBInsumo)->DATAINI := dDataIni
						(cTRBInsumo)->HORAINI := cHoraIni
						(cTRBInsumo)->DATAFIM := dDataFim
						(cTRBInsumo)->HORAFIM := cHoraFim
						If (cTRBInsumo)->DATAINI < dDataFim
							(cTRBInsumo)->DATAFIM := dDataIni
						Endif
						MsUnLock((cTRBInsumo))
					Else //JA EXISTE O DIA NA TRB
						lNaoGravou := .t.
						lRepetido  := .f.
						While !Eof() .AND. dDataIni == (cTRBInsumo)->DATAINI .AND. lNaoGravou .AND. !lRepetido
							If (cHoraIni == (cTRBInsumo)->HORAINI .AND. cHoraFim == (cTRBInsumo)->HORAFIM) .OR.;
							(cHoraIni >= (cTRBInsumo)->HORAINI .AND. cHoraFim <= (cTRBInsumo)->HORAFIM)
								lRepetido := .t.
							ElseIf (cHoraIni < (cTRBInsumo)->HORAINI .AND. cHoraFim >= (cTRBInsumo)->HORAINI .AND.;
							cHoraFim <= (cTRBInsumo)->HORAFIM)
								RecLock((cTRBInsumo),.f.)
								(cTRBInsumo)->HORAINI := cHoraIni
								MsUnLock((cTRBInsumo))
								lNaoGravou := .f.
								//11111111111111111111111111111111111111111111111111//
								cHoraIniOld := (cTRBInsumo)->HORAINI
								dbSkip(-1)
								While !Bof() .AND. dDataIni == (cTRBInsumo)->DATAINI
									If (cTRBInsumo)->HORAINI >= cHoraIniOld
										RecLock((cTRBInsumo),.f.)
										dbDelete()
										MsUnLock((cTRBInsumo))
									ElseIf (cTRBInsumo)->HORAFIM >= cHoraIniOld
										RecLock((cTRBInsumo),.f.)
										(cTRBInsumo)->HORAFIM := MTOH(HTOM(cHoraFimOld)-1)
										MsUnLock((cTRBInsumo))
									Endif
									dbSkip(-1)
								End
								//11111111111111111111111111111111111111111111111111//
							ElseIf (cHoraFim > (cTRBInsumo)->HORAFIM .AND. cHoraIni >= (cTRBInsumo)->HORAINI .AND.;
							cHoraIni <= (cTRBInsumo)->HORAFIM)
								RecLock((cTRBInsumo),.f.)
								(cTRBInsumo)->HORAFIM := cHoraFim
								MsUnLock((cTRBInsumo))
								lNaoGravou := .f.
								//22222222222222222222222222222222222222222222222222//
								cHoraFimOld := (cTRBInsumo)->HORAFIM
								dbSkip()
								While !Eof() .AND. dDataIni == (cTRBInsumo)->DATAINI
									If (cTRBInsumo)->HORAFIM <= cHoraFimOld
										RecLock((cTRBInsumo),.f.)
										dbDelete()
										MsUnLock((cTRBInsumo))
									ElseIf (cTRBInsumo)->HORAINI <= cHoraFimOld
										RecLock((cTRBInsumo),.f.)
										(cTRBInsumo)->HORAINI := MTOH(HTOM(cHoraFimOld)+1)
										MsUnLock((cTRBInsumo))
									Endif
									dbSkip()
								End
							ElseIf cHoraFim >= (cTRBInsumo)->HORAFIM .AND. cHoraIni <= (cTRBInsumo)->HORAINI
								RecLock((cTRBInsumo),.f.)
								(cTRBInsumo)->HORAINI := cHoraIni
								(cTRBInsumo)->HORAFIM := cHoraFim
								MsUnLock((cTRBInsumo))
								lNaoGravou := .f.
								//22222222222222222222222222222222222222222222222222//
								cHoraIniOld := (cTRBInsumo)->HORAINI
								cHoraFimOld := (cTRBInsumo)->HORAFIM
								dbSkip()
								While !Eof() .AND. dDataIni == (cTRBInsumo)->DATAINI
									If (cTRBInsumo)->HORAFIM <= cHoraFimOld
										RecLock((cTRBInsumo),.f.)
										dbDelete()
										MsUnLock((cTRBInsumo))
									ElseIf (cTRBInsumo)->HORAINI <= cHoraFimOld
										RecLock((cTRBInsumo),.f.)
										(cTRBInsumo)->HORAINI := MTOH(HTOM(cHoraFimOld)+1)
										MsUnLock((cTRBInsumo))
									Endif
									dbSkip()
								End
								//22222222222222222222222222222222222222222222222222//
							Endif
							dbSkip()
						End
						If lNaoGravou .AND. !lRepetido
							RecLock((cTRBInsumo),.t.)
							(cTRBInsumo)->DATAINI := dDataIni
							(cTRBInsumo)->HORAINI := cHoraIni
							(cTRBInsumo)->DATAFIM := dDataFim
							(cTRBInsumo)->HORAFIM := cHoraFim
							If (cTRBInsumo)->DATAINI < dDataFim
								(cTRBInsumo)->DATAFIM := dDataIni
							Endif
							MsUnLock((cTRBInsumo))
						Endif

					Endif
				Endif
			Next
			dDataIni += 1
		End
		dbSelectArea(aArrSTJSTS[8])
		dbSkip()
	End

	nHORAS := 0
	dbSelectArea(cTRB1Ins)
	dbGoTop()
	While !Eof()
		nTemp := CalcHora((cTRB1Ins)->DATAINI,(cTRB1Ins)->HORAINI,(cTRB1Ins)->DATAFIM,(cTRB1Ins)->HORAFIM)
		If nTemp > 0
			nHORAS := nHORAS + nTemp
		Endif
		dbSkip()
	End
	aDiaHorMin := {0,0,0}
	aDiaHorMin[1] := Int(nHORAS/1440)
	nHORAS := Mod(nHORAS,1440)
	aDiaHorMin[2] := Int(nHORAS/60)
	nHORAS := Mod(nHORAS,60)
	aDiaHorMin[3] := nHORAS

	If lInsTarefa
		nHORAS := 0
		dbSelectArea(cTRB2Ins)
		dbGoTop()
		While !Eof()
			nTemp := CalcHora((cTRB2Ins)->DATAINI,(cTRB2Ins)->HORAINI,(cTRB2Ins)->DATAFIM,(cTRB2Ins)->HORAFIM)
			If nTemp > 0
				nHORAS := nHORAS + nTemp
			Endif
			dbSkip()
		End
		aDiaHor2 := {0,0,0}
		aDiaHor2[1] := Int(nHORAS/1440)
		nHORAS := Mod(nHORAS,1440)
		aDiaHor2[2] := Int(nHORAS/60)
		nHORAS := Mod(nHORAS,60)
		aDiaHor2[3] := nHORAS
	Endif

	oTmpTbl2:Delete()//Deleta Arquivo temporario 2
	oTmpTbl3:Delete()//Deleta Arquivo temporario 3

	RestArea(aOldArea)

	If lInsTarefa
		Return { aDiaHorMin , aDiaHor2 }
	Endif

Return aDiaHorMin
//------------------------------------------------------------------------------
/*/{Protheus.doc} CalcHora
Calcula a quantidade de horas
@author Marcos Wagner Junior
@since  22/01/10
@version undefined
@param dDataIni, date
@param cHoraIni, characters
@param dDataFim, date
@param cHoraFim, characters
@type function
/*/
//------------------------------------------------------------------------------
Static Function CalcHora(dDataIni,cHoraIni,dDataFim,cHoraFim)

	Local nHORAS := 0
	If (dDataFim - dDataIni) > 0
		nHORAS := (dDataFim - dDataIni) * 1440
	EndIf
	nHORAS := nHORAS+(HTOM(cHoraFim) - HTOM(cHoraIni))

Return nHORAS
//------------------------------------------------------------------------------
/*/{Protheus.doc} fQuantDHM
Converte Quantidade Horas em Dia/Horas/Minutos
@author Marcos Wagner Junior
@since 22/01/10
@version undefined
@param nQtdade, numeric
@type function
/*/
//------------------------------------------------------------------------------
Static Function fQuantDHM(nQtdade)
	Local nHORT, nDIAF, nRESD, nHORF, nMINF

	nHORT := nQtdade * 60
	nDIAF := Int(nHORT/1440)
	nRESD := nHORT - (nDIAF * 1440)
	nHORF := Int(nRESD/60)
	nMINF := Round(nRESD - (nHORF * 60),0)

Return {nDIAF,nHORF,nMINF}