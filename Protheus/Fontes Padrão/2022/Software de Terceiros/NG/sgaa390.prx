#INCLUDE "SGAA390.ch"
#include "Protheus.ch" 
#DEFINE _nVERSAO 1 //Versao do fonte  

//---------------------------------------------------------------------
/*/{Protheus.doc} SGAA390
Programa para cadastro de Monitoramento  

Tabelas:
	TCE - Monitoramento X Criterios 
	TCF - Monitoramento X Requisitos 
	TCG - Monitoramento X Responsaveis  
	TCD - Monitoramentos 
 
@type function
 
@source SGAA390.prx
 
@author Rafael Diogo Richter
@since 04/03/2008
  
@sample SGAA390()
 
@return Lógico, Sempre verdadeiro. 
/*/   
//---------------------------------------------------------------------
Function SGAA390() 
Local lPyme := Iif(Type("__lPyme") <> "U",__lPyme,.F.)
//--------------------------------------------------
//| Armazena variaveis p/ devolucao (NGRIGHTCLICK) |
//--------------------------------------------------
Local aNGBEGINPRM := NGBEGINPRM( _nVERSAO )
Private lMostra := .F.//Varíavel para controle do Filtro
Private aRotina := MenuDef(.F.)
Private cCadastro := OemtoAnsi(STR0001) //"Monitoramento"
Private bNgGrava
Private nTotal1 := 0
Private lVisual := .T.
PRIVATE aTrocaF3	:= {}
Private lTipRes		:= NGCADICBASE( "TCG_TIPRES" , "A" , "TCG" , .F. )
If !lPyme
	AAdd( aRotina, { STR0002, "MsDocument", 0, 4 } ) //"Conhecimento"
EndIf

//Verifica se o UPDSGA13 foi aplicado
If !SG390CHKDIC()
	NGRETURNPRM(aNGBEGINPRM)
	Return .T.
Endif

DbSelectArea("TCD")
DbSetOrder(1)
mBrowse( 6, 1,22,75,"TCD",,,,,,SG390SEM(),,,,,.F.)

//--------------------------------------------------
//| Devolve variaveis armazenadas (NGRIGHTCLICK)   |
//--------------------------------------------------
NGRETURNPRM(aNGBEGINPRM)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SG390PRO ³ Autor ³ Rafael Diogo Richter  ³ Data ³04/03/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Programa para cadastro de Monitoramento                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaSGA                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Sg390Pro(cAlias,nRecno,nOpcx)
Local cTitulo := cCadastro  // Titulo da janela     
Local oMainWnd	 // Objeto para montar a janela de cadastro
Local oDlg
Local oPnlAll
Local lVisual := .t.
Local nControl:= 0,nOK := 0,lGetd := .t.
Local lOK := .f.
Local aPages:= {},aTitles:= {},aVar:= {}
Local Ni,cGet
Local oFont    := TFont():New("Arial",12,12,,.F.,,.F.,,.F.,.F.)
Local oFont01  := TFont():New("Times New Roman",10,10,,.F.,,.F.,,.F.,.F.)
Local cTudoOk  :=	"SG390TUDO()"
Local aNoFields := {}
Private oEnc01
Private aSvATela := {}
Private aNao := {}, aChoice := {}
Private aSvAGets := {}
Private aTELA[0][0],aGETS[0]
Private n := 1, oFolder
Private oMenu
//Variáveis de GetDados
Private aHeadTCE := {}, aHeadTCF := {}
Private aColsTCE := {}, aColsTCF := {}
Private lTipRes		:= NGCADICBASE( "TCG_TIPRES" , "A" , "TCG" , .F. )

//Variaveis de tamanho de tela e objetos
Private aSize := MsAdvSize(,.f.,430), aObjects := {}
Aadd(aObjects,{050,050,.t.,.t.})
Aadd(aObjects,{100,100,.t.,.t.})
aInfo := {aSize[1],aSize[2],aSize[3],aSize[4],0,0}
aPosObj := MsObjSize(aInfo, aObjects,.t.)

//Verifica se está cancelado ou finalizado
If nOpcx <> 3 .and. TCD->TCD_STATUS <> "1" .and. TCD->TCD_STATUS <> "2"
	nOpcx := 2
	MsgInfo(STR0021+If(TCD->TCD_STATUS=="3",STR0022,STR0023)+STR0024, STR0008) //"Monitoramento "###"finalizado"###"cancelado"###". Somente é possível a visualização do mesmo."###"Atenção"
Endif
Aadd(aTitles,OemToAnsi(STR0003)) //"Critérios de Controle"
Aadd(aPages,"Header 1")
nControl++
Aadd(aTitles,OemToAnsi(STR0004)) //"Requisitos Legais"
Aadd(aPages,"Header 2")
nControl++
Aadd(aTitles,OemToAnsi(STR0005)) //"Responsáveis"
Aadd(aPages,"Header 3")
nControl++

bCampo := {|nCPO| Field(nCPO) }

Define MsDialog oDlg Title cTitulo From aSize[7],0 To aSize[6],aSize[5] Of oMainWnd PIXEL
aTela := {}
aGets := {}  

oPnlAll := TPanel():New(01,01,,oDlg,,,,,,10,10,.F.,.F.)
oPnlAll:Align := CONTROL_ALIGN_ALLCLIENT 

Dbselectarea("TCD")
RegToMemory("TCD",(nOpcx == 3))
oEnc01:= MsMGet():New("TCD",nRecno,nOpcx,,,,,aPosObj[1],,3,,,,oPnlAll)
oEnc01:oBox:Align := CONTROL_ALIGN_TOP
aSvATela := aClone(aTela)
aSvAGets := aClone(aGets) 

oPanelBot := TPanel():New(0,0,,oPnlAll,,,,,,0,aPosObj[2,4],.F.,.F.)
oPanelBot:Align := CONTROL_ALIGN_ALLCLIENT 

oFolder := TFolder():New(aSize[6]/5,0,aTitles,aPages,oPanelBot,,,,.T.,.F.)
oFolder:aDialogs[1]:oFont := oPnlAll:oFont
oFolder:aDialogs[2]:oFont := oPnlAll:oFont
oFolder:aDialogs[3]:oFont := oPnlAll:oFont  
oFolder:Align := CONTROL_ALIGN_ALLCLIENT

NGPOPUP(asMenu,@oMenu)
oDlg:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg)}
oEnc01:oBox:bRClicked := { |o,x,y| oMenu:Activate(x,y,oDlg)}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Folder 01                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aHeadTCE := {}
aColsTCE := {}

aNoFields := {'TCE_CODMON','TCE_DTMED','TCE_HRMED'}
cQuery := "SELECT * FROM "+RetSqlName("TCE")+" TCE WHERE TCE.TCE_FILIAL = '"+xFilial("TCE")+"' AND TCE.TCE_CODMON = '"+M->TCD_CODIGO+"' AND TCE.D_E_L_E_T_ = ' '"
FillGetDados( nOpcx, "TCE", 1, xFilial("TCE")+M->TCD_CODIGO, {|| "TCE->TCE_FILIAL + TCE->TCE_CODMON"}, {|| .T.},aNoFields,,,cQuery,,,@aHeadTCE,@aColsTCE)

If Empty(aColsTCE) .Or. nOpcx == 3
   aColsTCE := BlankGetd(aHeadTCE)
EndIf

n      := Len(aColsTCE)
oGet01 := MsNewGetDados():New(005,022,150,302,IIF(!INCLUI.And.!ALTERA,0,GD_INSERT+GD_UPDATE+GD_DELETE),{|| Sg390Lin1("TCE")},cTudoOk,,,,9999,,,,oFolder:aDialogs[1],aHeadTCE,aColsTCE)
oGet01:oBrowse:Default()
oGet01:oBrowse:Refresh()
oGet01:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Folder 02                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aHeader := {}
aCols := {}

aNoFields := {'TCF_CODMON'}
cQuery := "SELECT * FROM "+RetSqlName("TCF")+" TCF WHERE TCF.TCF_FILIAL = '"+xFilial("TCF")+"' AND TCF.TCF_CODMON = '"+M->TCD_CODIGO+"' AND TCF.D_E_L_E_T_ = ' '"
FillGetDados( nOpcx, "TCF", 1, xFilial("TCF")+M->TCD_CODIGO, {|| "TCF->TCF_FILIAL + TCF->TCF_CODMON"}, {|| .T.},aNoFields,,,cQuery,,,@aHeadTCF,@aColsTCF)

If Empty(aColsTCF) .Or. nOpcx == 3
   aColsTCF := BlankGetd(aHeadTCF)
EndIf

n      := Len(aColsTCF)
oGet02 := MsNewGetDados():New(005,022,150,302,IIF(!INCLUI.And.!ALTERA,0,GD_INSERT+GD_UPDATE+GD_DELETE),{|| Sg390Lin1("TCF")},cTudoOk,,,,9999,,,,oFolder:aDialogs[2],aHeadTCF,aColsTCF)
oGet02:oBrowse:Default()
oGet02:oBrowse:Refresh()
oGet02:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Folder 03                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aHeadTCG := {}
aColsTCG := {}

aNoFields := {'TCG_CODMON'}
cQuery := "SELECT * FROM "+RetSqlName("TCG")+" TCG WHERE TCG.TCG_FILIAL = '"+xFilial("TCG")+"' AND TCG.TCG_CODMON = '"+M->TCD_CODIGO+"' AND TCG.D_E_L_E_T_ = ' '"
FillGetDados( nOpcx, "TCG", 1, xFilial("TCG")+M->TCD_CODIGO, {|| "TCG->TCG_FILIAL + TCG->TCG_CODMON"}, {|| .T.},aNoFields,,,cQuery,,,@aHeadTCG,@aColsTCG)

If Empty(aColsTCG) .Or. nOpcx == 3
   aColsTCG := BlankGetd(aHeadTCG)
EndIf

n      := Len(aColsTCG)
oGet03 := MsNewGetDados():New(005,022,150,302,IIF(!INCLUI.And.!ALTERA,0,GD_INSERT+GD_UPDATE+GD_DELETE),{|| Sg390Lin1("TCG")},cTudoOk,,,,9999,,,,oFolder:aDialogs[3],aHeadTCG,aColsTCG,{|| fChange() })
oGet03:oBrowse:Default()
oGet03:oBrowse:Refresh()
oGet03:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

Activate Dialog oDlg On Init (EnchoiceBar(oDlg,{|| lOk:=.T.,If(Sg390Obrig(nOpcx),oDlg:End(),lOk := .f.)},{|| lOk := .f.,oDlg:End()})) Centered

dbSelectArea("TCD")
If !lOk .and. nOpcx == 3
	RollBackSX8()
Endif
dbSelectArea("TCD")
dbSetOrder(1)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Sg390Obrig³ Autor ³ Rafael Diogo Richter  ³ Data ³04/03/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida a Gravacao                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaSGA                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Sg390Obrig(nOpcx)
Local aOldArea := GetArea() // Guarda variaveis de alias e indice

If !Obrigatorio(aGets,aTela)
   Return .f.
Endif

If nOpcx == 3
	//Verifica se já existe outro monitoramento semelhante ativo
	If !Sg390Vld()
		Return .F.
	Endif
Endif
If !SG390Lin1("TCE",.T.)
	Return .F.
EndIf
If !SG390Lin1("TCF",.T.)
	Return .F.
EndIf
If !SG390Lin1("TCG",.T.)
	Return .F.
EndIf
Sg390Grava(nOpcx)

RestArea(aOldArea)
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Sg390Grava³ Autor ³ Rafael Diogo Richter  ³ Data ³05/03/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Gravacao das Tabelas                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaSGA                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Sg390Grava(nOpcx)
Local i := 0
Local X,nY
Local aCoTCE:= aClone(oGet01:aCols), aHeTCE := aClone(oGet01:aHeader)
Local aCoTCF:= aClone(oGet02:aCols), aHeTCF := aClone(oGet02:aHeader)
Local aCoTCG:= aClone(oGet03:aCols), aHeTCG := aClone(oGet03:aHeader)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Manipula a tabela TCD³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea('TCD')
If nOpcx == 3
	ConfirmSX8()
Endif
DbSetOrder(1)
If DbSeek(xFilial('TCD')+M->TCD_CODIGO)
	RecLock('TCD',.F.)
Else
	RecLock('TCD',.T.)
EndIf          

If nOpcx <> 5
	For nY := 1 To Fcount()
		nX := "M->" + FieldName(nY)
		
		If "_FILIAL"$Upper(nX)
			FieldPut(nY, xFilial("TCD"))
		Else
			FieldPut(nY, &nX.)
		EndIf
	Next nY	
Else
	DbDelete()
EndIf   

MsUnLock('TCD')

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Manipula a tabela TCE³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcx == 5
	dbSelectArea("TCE")
	dbSetOrder(1)
	If DbSeek(xFilial('TCE')+M->TCD_CODIGO)
		While !Eof() .And. xFilial('TCE') == TCE->TCE_FILIAL .And.;
			TCE->TCE_CODMON == M->TCD_CODIGO
			RecLock('TCE',.F.)
			dbDelete()
			MsUnLock('TCE')
			TCE->(DbSkip())
		End
	EndIf
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis foram colocadas fora do if pois são chamadas logo a baixo e |
	//| nao era possivel localizá-las. Autor: Jackson Machado.Data: 14/02/2011³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nCodCri := aScan(aHeTCE,{|x| Trim(Upper(x[2])) == "TCE_CODCRI"})
	nLimMin := aScan(aHeTCE,{|x| Trim(Upper(x[2])) == "TCE_LIMMIN"})
	nLimMax := aScan(aHeTCE,{|x| Trim(Upper(x[2])) == "TCE_LIMMAX"})
	nFreque := aScan(aHeTCE,{|x| Trim(Upper(x[2])) == "TCE_FREQUE"})
	nTipFre := aScan(aHeTCE,{|x| Trim(Upper(x[2])) == "TCE_TIPFRE"})
	nCodLab := aScan(aHeTCE,{|x| Trim(Upper(x[2])) == "TCE_CODLAB"})
	DbSelectArea("TCE")
	DbSetOrder(1)
	DbSeek(xFilial("TCE")+M->TCD_CODIGO)
	While !Eof() .and. xFilial("TCE") == TCE->TCE_FILIAL .And.;
		TCE->TCE_CODMON == M->TCD_CODIGO
		nPos := aScan( aCoTCE, { |x| x[nCodCri] == TCE->TCE_CODCRI } )
		If nPos = 0
			RecLock('TCE',.F.)
			DbDelete()
			MsUnLock('TCE')
		ElseIf nPos > 0 .And. aCoTCE[nPos][Len(aHeTCE)+1]
			RecLock('TCE',.F.)
			DbDelete()
			MsUnLock('TCE')
		EndIf
		TCE->(DbSkip())
	End
	If Len(aCoTCE) > 0
		aSORT(aCoTCE,,, { |x, y| x[Len(aCoTCE[1])] .and. !y[Len(aCoTCE[1])] } )
	Endif
	For i:= 1 To Len( aCoTCE )

		If !aCoTCE[i][Len(aHeTCE)+1] .AND. !Empty(aCoTCE[i][nCodCri])
			
			
			DbSelectArea('TCE')
			DbSetOrder(1)
			If !DbSeek(xFilial('TCE')+M->TCD_CODIGO+aCoTCE[i][nCodCri])
				RecLock('TCE',.T.)
			Else
				RecLock('TCE',.F.)
			EndIf
			
			TCE->TCE_FILIAL	:= xFilial('TCE')
			TCE->TCE_CODMON	:= M->TCD_CODIGO
			TCE->TCE_CODCRI	:= aCoTCE[i][nCodCri]
			TCE->TCE_LIMMIN	:= aCoTCE[i][nLimMin]
			TCE->TCE_LIMMAX	:= aCoTCE[i][nLimMax]
			TCE->TCE_FREQUE	:= aCoTCE[i][nFreque]
			TCE->TCE_TIPFRE	:= aCoTCE[i][nTipFre]
			If nCodLab > 0
				TCE->TCE_CODLAB	:= aCoTCE[i][nCodLab]
			EndIf
			MsUnLock('TCE')
		EndIf
	Next
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Manipula a tabela TCF³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcx == 5
	dbSelectArea("TCF")
	dbSetOrder(1)
	DbSeek(xFilial('TCF')+M->TCD_CODIGO)
	While !Eof() .And. xFilial('TCF') == TCF->TCF_FILIAL .And.;
		TCF->TCF_CODMON == M->TCD_CODIGO
		RecLock('TCF',.F.)
		dbDelete()
		MsUnLock('TCF')
		TCF->(DbSkip())
	End
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variavel foi colocada fora do if pois são chamadas logo a baixo e     |
	//| nao era possivel localizá-las. Autor: Jackson Machado.Data: 14/02/2011³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
 	nCodReq := aScan(aHeTCF,{|x| Trim(Upper(x[2])) == "TCF_CODREQ"})
	DbSelectArea("TCF")
	DbSetOrder(1)
	DbSeek(xFilial("TCF")+M->TCD_CODIGO)
	While !Eof() .and. xFilial("TCF") == TCF->TCF_FILIAL .And.;
		TCF->TCF_CODMON == M->TCD_CODIGO
		nPos := aScan( aCoTCF, { |x| x[nCodReq] == TCF->TCF_CODREQ } )
		If nPos = 0
			RecLock('TCF',.f.)
			DbDelete()
			MsUnLock('TCF')
		ElseIf nPos > 0 .And. aCoTCF[nPos][Len(aHeTCF)+1]
			RecLock('TCF',.F.)
			DbDelete()
			MsUnLock('TCF')
		EndIf
		TCF->(DbSkip())
	End
	For i:= 1 To Len( aCoTCF )
		
		If !aCoTCF[i][Len(aHeTCF)+1]
			
			DbSelectArea('TCF')
			DbSetOrder(1)
			If !DbSeek(xFilial('TCF')+M->TCD_CODIGO+aCoTCF[i][nCodReq])
				RecLock('TCF',.T.)
			Else
				RecLock('TCF',.F.)
			EndIf

			TCF->TCF_FILIAL	:= xFilial('TCF')
			TCF->TCF_CODMON	:= M->TCD_CODIGO
			TCF->TCF_CODREQ	:= aCoTCF[i][nCodReq]
			MsUnLock('TCF')
		EndIf
	Next
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Manipula a tabela TCG³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpcx == 5
	dbSelectArea("TCG")
	dbSetOrder(1)
	DbSeek(xFilial('TCG')+M->TCD_CODIGO)
	While !Eof() .And. xFilial('TCG') == TCG->TCG_FILIAL .And.;
		TCG->TCG_CODMON == M->TCD_CODIGO
		RecLock('TCG',.F.)
		dbDelete()
		MsUnLock('TCG')
		TCG->(DbSkip())
	End
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variavel foi colocada fora do if pois são chamadas logo a baixo e     |
	//| nao era possivel localizá-las. Autor: Jackson Machado.Data: 14/02/2011³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lTipRes
		nCodTip := aScan(aHeTCG,{|x| Trim(Upper(x[2])) == "TCG_TIPRES"})
	EndIf
	nCodRes := aScan(aHeTCG,{|x| Trim(Upper(x[2])) == "TCG_CODRES"})
	DbSelectArea("TCG")
	DbSetOrder(1)
	DbSeek(xFilial("TCG")+M->TCD_CODIGO)
	While !Eof() .And. xFilial("TCG") == TCG->TCG_FILIAL .And.;
		TCG->TCG_CODMON == M->TCD_CODIGO
		nPos := aScan( aCoTCG, { |x| x[nCodRes] == TCG->TCG_CODRES } )
		If nPos = 0
			RecLock('TCG',.F.)
			DbDelete()
			MsUnLock('TCG')
		ElseIf nPos > 0 .And. aCoTCG[nPos][Len(aHeTCG)+1]
			RecLock('TCG',.F.)
			DbDelete()
			MsUnLock('TCG')
		EndIf
		TCG->(DbSkip())
	End
		For i:= 1 To Len( aCoTCG )
		If !aCoTCG[i][Len(aHeTCG)+1]
			DbSelectArea('TCG')
			DbSetOrder(1)
			If !DbSeek(xFilial('TCG')+M->TCD_CODIGO+If(!lTipRes,aCoTCG[i][nCodRes],aCoTCG[i][nCodTip]+aCoTCG[i][nCodRes]))
				RecLock('TCG',.T.)
			Else
				RecLock('TCG',.F.)
			EndIf
			
			TCG->TCG_FILIAL	:= xFilial('TCG')
			TCG->TCG_CODMON	:= M->TCD_CODIGO
			TCG->TCG_CODRES	:= aCoTCG[i][nCodRes]
			If lTipRes
				TCG->TCG_TIPRES	:= aCoTCG[i][nCodTip]
			EndIf
			MsUnLock('TCG')
		EndIf
	Next
Endif

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Sg390Vld ³ Autor ³ Rafael Diogo Richter  ³ Data ³06/03/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida o campo Fonte e Grupo                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaSGA                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Sg390Vld()

dbSelectArea("TCD")
dbSetOrder(2)
dbSeek(xFilial("TCD")+M->TCD_GRUPO+M->TCD_FONTE)
While !Eof() .And. TCD->TCD_FILIAL == xFilial("TCD") .And. TCD->TCD_GRUPO == M->TCD_GRUPO .And.;
	TCD->TCD_FONTE == M->TCD_FONTE
	//Se encontrar outro ativo não permite
	If TCD->TCD_CODIGO <> M->TCD_CODIGO .and. TCD->TCD_STATUS $ "1/2"
		MsgStop(STR0006,STR0007) //"Já existe um monitoramento ativo cadastrado com o mesmo Grupo e Fonte."###"Atenção!"
		Return .F.
	EndIf
	dbSelectArea("TCD")
	dbSkip()
End

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³SG390LIN1 ³ Autor ³ Rafael Diogo Richter  ³ Data ³05/03/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida a linha digitada no GetDados.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SGAA390                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³         Atualizacoes Sofridas Desde a Construcao Inicial.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Sg390Lin1(cTabela,lFim)
Local f
Local aColsOk := {}, aHeadOk := {}
Local nPosCod := 0
Local nCodTip := 0
Local nLimMin := 0
Local nLimMax := 0

Default lFim := .F.
//Nenhuma das GetDados eh de preenchimento obrigatório
If cTabela == "TCE"
	aColsOk := aClone(oGet01:aCols)
	aHeadOk := aClone(aHeadTCE)
	nAt     := oGet01:nAt
	nPosCod := aScan( aHeadTCE, { |x| Trim( Upper(x[2]) ) == 'TCE_CODCRI'})
	nLimMin := aScan( aHeadTCE, { |x| Trim( Upper(x[2]) ) == 'TCE_LIMMIN'})
	nLimMax := aScan( aHeadTCE, { |x| Trim( Upper(x[2]) ) == 'TCE_LIMMAX'})
	If lFim .and. Len(aColsOk) == 1
		If Empty(aColsOk[1][nPosCod])
			Return .T.
		Endif
	Endif
Elseif cTabela == "TCF"
	aColsOk := aClone(oGet02:aCols)
	aHeadOk := aClone(aHeadTCF)
	nAt  	  := oGet02:nAt
	nPosCod := aScan( aHeadTCF, { |x| Trim( Upper(x[2]) ) == 'TCF_CODREQ'})
	If lFim .and. Len(aColsOk) == 1
		If Empty(aColsOk[1][nPosCod])
			Return .T.
		Endif
	Endif
Elseif cTabela == "TCG"
	aColsOk := aClone(oGet03:aCols)
	aHeadOk := aClone(aHeadTCG)
	nAt  	  := oGet03:nAt
	nPosCod := aScan( aHeadTCG, { |x| Trim( Upper(x[2]) ) == 'TCG_CODRES'})
	If lTipRes
		nCodTip := aScan( aHeadTCG, {|x| Trim(Upper(x[2])) == "TCG_TIPRES"})
	EndIF
	If lFim .and. Len(aColsOk) == 1
		If Empty(aColsOk[1][nPosCod])
			Return .T.
		Endif
	Endif
Endif

//Percorre aCols
For f:= 1 to Len(aColsOk)
	If !aColsOk[f][Len(aColsOk[f])]
		If lFim .or. f == nAt
			//VerIfica se os campos obrigatórios estão preenchidos
			If Empty(aColsOk[f][nPosCod])
				//Mostra mensagem de Help
				Help(1," ","OBRIGAT2",,aHeadOk[nPosCod][1],3,0)
				Return .F.
			Endif
			If nCodTip > 0 .And. Empty(aColsOk[f][nCodTip])
				//Mostra mensagem de Help
				Help(1," ","OBRIGAT2",,aHeadOk[nPosCod][1],3,0)
				Return .F.
			Endif
		Endif
		If nLimMin > 0 .And. nLimMax > 0
			If aColsOk[f][nLimMin] > aColsOk[f][nLimMax]
				ShowHelpDlg(STR0008,{STR0053+" "+aHeadOk[nLimMin][1]+" "+STR0054+" "+aHeadOk[nLimMax][1]+"."},1,;	//"Atenção"##"O"##"deve ser menor que"
				{ STR0055+" "+cValToChar(aColsOk[f][nLimMax])+" "+STR0056+" "+aHeadOk[nLimMin][1]+" "+;				//"Informe um valor menor ou igual a"##"no campo"
					STR0057+" "+cValToChar(aColsOk[f][nLimMin])+" "+STR0056+" "+aHeadOk[nLimMax][1]+"."},2 )		//"ou um valor maior ou igual a"##"no campo"
				Return .F.
			EndIf
		EndIf
		If f <> nAt .and. !aColsOk[nAt][Len(aColsOk[nAt])]
			If aColsOk[f][nPosCod] == aColsOk[nAt][nPosCod] .And. If(nCodTip > 0 , aColsOk[f][nCodTip] == aColsOk[nAt][nCodTip] , .T. )
				Help(" ",1,"JAEXISTINF",,aHeadOk[nPosCod][1])
				Return .F.
			Endif
		Endif
	Endif	
Next f

PutFileInEof("TCE")
PutFileInEof("TCF")
PutFileInEof("TCG")
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MenuDef  ³ Autor ³ Rafael Diogo Richter  ³ Data ³04/03/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Utilizacao de Menu Funcional.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaSGA                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef( lMdi )
Local aRotina :=	{ { STR0012		, "AxPesqui"		, 0 , 1},; //"Pesquisar"
                    { STR0013		, "Sg390Pro"		, 0 , 2},; //"Visualizar"
                    { STR0014		, "Sg390Pro"		, 0 , 3},; //"Incluir"
                    { STR0015		, "Sg390Pro"		, 0 , 4},; //"Alterar"
                    { STR0025	, "Sg390FINAL(3)"	, 0 , 2},; //"Finalizar"
                    { STR0026	, "Sg390FINAL(4)"	, 0 , 2},; //"Cancelar"
                    { STR0028	, "SG390LEG"		, 0 , 2}} //"Legenda"

Default lMdi := .T.

If SuperGetMv("MV_NGMDTTR",.F.,"2") == "1" .AND. !lMdi .AND. NGCADICBASE( "TCG_TIPRES" , "A" , "TCG" , .F. ) .And. nModulo == 35
	aAdd( aRotina , { STR0035 , "SG390TRM" , 0 , 4 } )//"Gerar Treinamento"
EndIf

Return aRotina
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SG390SEM  ºAutor  ³Roger Rodrigues     º Data ³  20/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Define as cores para o semáforo                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SGAA390                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SG390SEM()
Local aCores :={{"NGSEMAFARO('TCD->TCD_STATUS = "+'"1"'+"')" , "BR_AZUL" },;
				 {"NGSEMAFARO('TCD->TCD_STATUS = "+'"2"'+"')" , "BR_AMARELO"},;
				 {"NGSEMAFARO('TCD->TCD_STATUS = "+'"4"'+"')" , "BR_VERMELHO"},;
 				 {"NGSEMAFARO('TCD->TCD_STATUS = "+'"3"'+"')" , "BR_VERDE"}}

Return aCores
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SG390LEG  ºAutor  ³Roger Rodrigues     º Data ³  20/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Monta Browse com Legenda                                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SGAA390                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SG390LEG()
BrwLegenda(cCadastro,STR0028,{{"BR_AZUL", STR0029 },; //"Legenda"###"Iniciado"
									 {"BR_AMARELO", STR0030},; //"Em Andamento"
									 {"BR_VERDE", STR0022},; //"Finalizado"
									 {"BR_VERMELHO", STR0023}}) //"Cancelado"
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SG390CHKDICºAutor  ³Roger Rodrigues     º Data ³  20/11/09  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se o UPDSGA13 foi aplicado                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SGAA390/SGAA400                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SG390CHKDIC()

dbSelectArea("SX3")
dbSetOrder(2)
If !dbSeek("TCD_DTINI")
   MsgInfo(STR0017+CHR(13); //"O Sistema de Gestão Ambiental possui incompatibilidade de dicionário."
          +STR0018+CHR(13); //"Favor execute a função UPDSGA13. Para maiores informações consulte o"
          +STR0019,STR0020) //"Boletim Técnico de número 00003048-07"#"NÃO CONFORMIDADE"
	Return .F.
Endif
Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SG390FINALºAutor  ³Roger Rodrigues     º Data ³  20/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Cancela ou finaliza o monitoramento                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SGAA390                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SG390FINAL(nOpc)
If TCD->TCD_STATUS $ "3/4"
	MsgStop(STR0031+If(nOpc==3,STR0025,STR0026)+STR0032,STR0008) //"Somente é possível "###"Finalizar"###"Cancelar"###" monitoramentos cujo status esteja como 1=Inciado ou 2=Em Análise."###"Atenção"
	Return .F.
Endif
If nOpc == 3
	If MsgYesNo(STR0033, STR0008) //"Deseja finalizar o monitoramento? Após isso nenhuma informação poderá ser alterada."###"Atenção"
			Processa({ |lEnd| SG390ALST(nOpc) })
	Endif
ElseIf nOpc == 4
	If MsgYesNo(STR0034, STR0008) //"Deseja mesmo cancelar o monitoramento? Isto cancelará todas as análises já realizadas."###"Atenção"
		Processa({ |lEnd| SG390ALST(nOpc) })
	Endif
Endif
	
Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SG390ALST ºAutor  ³Roger Rodrigues     º Data ³  23/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Altera status das analises de acordo com a operação desejadaº±±
±±º          ³3=Finalizada, 4=Cancelada                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SG390FINAL                                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function SG390ALST(nOpc)

RecLock("TCD",.F.)
TCD->TCD_STATUS := AllTrim(Str(nOpc))
MsUnlock("TCD")
dbSelectArea("TCH")
dbSetOrder(2)
dbSeek(xFilial("TCH")+TCD->TCD_CODIGO)
While !eof() .and. xFilial("TCH")+TCD->TCD_CODIGO == TCH->TCH_FILIAL+TCH->TCH_MONIT
	RecLock("TCH",.F.)
	TCH->TCH_STATUS := AllTrim(Str(nOpc-1))
	MsUnlock("TCH")
	dbSelectArea("TCH")
	dbSkip()
End

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} SG390VLTIP
Troca o F3 do Campo

@return .T.

@sample
SG390VLTIP()

@author Jackson Machado
@since 02/04/2013
/*/
//---------------------------------------------------------------------
Function SG390VLFUN()
	Local lRet := .T.
	Local nAt, nTipo, nCod, nDesc
	Local aColsOk, aHeaderOk
	
	//Definicoes de variaveis de GetDados
	aColsOk		:= aClone( oGet03:aCols )
	aHeaderOk	:= aClone( oGet03:aHeader )
	nAt			:= oGet03:nAt
	
	//Definicoes de posicoes
	nTipo		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TCG_TIPRES" } )
	nCod		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TCG_CODRES" } )
	nDesc		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TCG_NOMRES" } )

	If !lTipRes .Or. aColsOk[ nAt , nTipo ] == "1"//Caso seja usuario
		If !ExistCPO( "QAA" , SubStr( M->TCG_CODRES , 1 , Len( QAA->QAA_MAT ) ) )
			lRet := .F.
			aCols[ nAt , nDesc ] := Space( TamSx3( "TCG_NOMRES" )[ 1 ] )
		Else
			aCols[ nAt , nDesc ] := NGSeek( "QAA" , M->TCG_CODRES , 1 , "QAA_NOME" )
		EndIf
	Else
		//Caso seja funcionario
		If !ExistCPO( "SRA" , SubStr( M->TCG_CODRES , 1 , Len( SRA->RA_MAT ) ) )
			lRet := .F.
			aCols[ nAt , nDesc ] := Space( TamSx3( "TCG_NOMRES" )[ 1 ] )
		Else
			aCols[ nAt , nDesc ] := NGSeek( "SRA" , M->TCG_CODRES , 1 , "RA_NOME" )
		EndIf
	EndIf
			
Return lRet
//---------------------------------------------------------------------
/*/{Protheus.doc} SG390DEFUN
Descricao do Funcionario

@return .T.

@sample
SG390DEFUN()

@author Jackson Machado
@since 02/04/2013
/*/
//---------------------------------------------------------------------
Function SG390DEFUN()
	
	Local cRet 		:= ""	
	
	If !lTipRes .Or. TCG->TCG_TIPRES == "1"//Caso seja usuario
		cRet := NGSeek( "QAA" , TCG->TCG_CODRES , 1 , "QAA_NOME" )
	Else
		//Caso seja funcionario
		cRet := NGSeek( "SRA" , TCG->TCG_CODRES , 1 , "RA_NOME" )
	EndIf
			
Return cRet
//---------------------------------------------------------------------
/*/{Protheus.doc} SG390VLTIP
Troca o F3 do Campo

@return .T.

@sample
SG390VLTIP()

@author Jackson Machado
@since 02/04/2013
/*/
//---------------------------------------------------------------------
Function SG390VLTIP()
    
    Local nAt, nTipo, nCod, nDesc
	Local aColsOk, aHeaderOk
	
	//Definicoes de variaveis de GetDados
	aColsOk		:= aClone( oGet03:aCols )
	aHeaderOk	:= aClone( oGet03:aHeader )
	nAt			:= oGet03:nAt
	
	//Definicoes de posicoes
	nTipo		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TCG_TIPRES" } )
	nCod		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TCG_CODRES" } )
	nDesc		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TCG_NOMRES" } )
	
	aTrocaF3 := {}
	
	If M->TCG_TIPRES == "1"
		aAdd( aTROCAF3 , { "TCG_CODRES" , "QAA" } )
	Else
		aAdd( aTROCAF3 , { "TCG_CODRES" , "SRA" } )
	EndIf
	
	If M->TCG_TIPRES <> aCols[ nAt , nTipo ]	
		aCols[ nAt , nCod ]		:= Space( TamSx3( "TCG_CODRES" )[ 1 ] )
		aCols[ nAt , nDesc ]	:= Space( TamSx3( "TCG_NOMRES" )[ 1 ] )
	Endif
	
Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} fChange
Função chamada para trocar o F3

@return .T.

@sample
SG390VLTIP()

@author Jackson Machado
@since 02/04/2013
/*/
//---------------------------------------------------------------------
Static Function fChange()
	Local nAt, nTipo, nCod, nDesc
	Local aColsOk, aHeaderOk
	
	//Definicoes de variaveis de GetDados
	aColsOk		:= aClone( oGet03:aCols )
	aHeaderOk	:= aClone( oGet03:aHeader )
	nAt			:= oGet03:nAt
	
	//Definicoes de posicoes
	nTipo		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TCG_TIPRES" } )
	nCod		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TCG_CODRES" } )
	nDesc		:= aScan( aHeaderOk , { | x | AllTrim( Upper( x[ 2 ] ) ) == "TCG_NOMRES" } )
	
	//Verifica o aF3
	aTrocaF3 := {}
	
	If lTipRes
		If aCols[ nAt , nTipo ] == "1"
			aAdd( aTROCAF3 , { "TCG_CODRES" , "QAA" } )
		Else
			aAdd( aTROCAF3 , { "TCG_CODRES" , "SRA" } )
		EndIf
	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} SG390TRM
Gera o treinamento para os responsáveis funcionários

@return .T.

@sample
SG390TRM()

@author Jackson Machado
@since 02/04/2013
/*/
//---------------------------------------------------------------------
Function SG390TRM( cAlias , nReg , nOpcx )
    
    Local nOpcao    := 0
    Local nFun		:= 0
	Local lExist	:= .F.
	Local cSeekTRM	:= ""
	
	//Objetos
	Local oWndCfgEmp, oPnlWnd, oPnlFun, oPnlTrm, oSplitter
	Local oPnlMsgF, oPnlMsgT
	Local oTempFUN
	Local oTempTRM
	
	//Definicoes de TRB
	Local nCont		:= 0
	Local cTRBFUN	:= GetNextAlias()
	Local cTRBTRM	:= GetNextAlias()
	Local aDBFFUN	:= {}
	Local aDBFTRM	:= {}
	Local aColFun	:= {}
	Local aColTrm	:= {}
	Local aTRM		:= {}
	Local aFunc		:= {}
	Local aFuncMK	:= {}
			
	Private cMarca	:= GetMark()
	Private aSize 	:= MsAdvSize(,.f.,430), aObjects := {}
	
	Aadd(aObjects,{050,050,.t.,.t.})
	Aadd(aObjects,{020,020,.t.,.t.})
	Aadd(aObjects,{100,100,.t.,.t.})
	
	aInfo := { aSize[1], aSize[2], aSize[3], aSize[4], 0, 0 }
	aPosObj := MsObjSize( aInfo, aObjects, .T. )
	
	//Validacoes para utilizacao da funcao
    If !AliasInDic( "TJE" ) .AND. !NGINCOMPDIC("UPDMDT57","TGPPNQ")
		Return .F.
    EndIf
    
    //Verifica a existência de funcionários no monitoramento
	dbSelectArea( "TCG" )
	dbSetOrder( 1 )
	dbSeek( xFilial( "TCG" ) + TCD->TCD_CODIGO + "2" )
	While TCG->( !Eof() ) .AND. TCG->TCG_FILIAL == xFilial( "TCG" ) .AND. TCG->TCG_CODMON == TCD->TCD_CODIGO
	    If TCG->TCG_TIPRES == "2"
	    	aAdd( aFunc , { TCG->TCG_CODRES } )
	    EndIf
		TCG->( dbSkip() )
	End
	If Len( aFunc ) == 0
		ShowHelpDlg( STR0036 , { STR0037 } , 2 , { STR0038 } , 2 )//"ATENÇÃO"###"Não existem funcionário da folha cadastrados para este monitoramento."###"Relacione os funcionários através da opção de alteração."
		Return .F.
	EndIf	
	
	//Verifica a existência de treinamentos no monitoramento
	dbSelectArea( "TCF" )
	dbSetOrder( 1 )
	dbSeek( xFilial( "TCF" ) + TCD->TCD_CODIGO )
	While TCF->( !Eof() ) .AND. TCF->TCF_FILIAL == xFilial( "TCF" ) .AND. TCF->TCF_CODMON == TCD->TCD_CODIGO
	    dbSelectArea( "TJE" )
	    dbSetOrder( 1 )
	    If dbSeek( xFilial( "TJE" ) + TCF->TCF_CODREQ )
	    	While TJE->( !Eof() ) .AND. TJE->TJE_FILIAL == xFilial( "TJE" ) .AND. TJE->TJE_CODLEG == TCF->TCF_CODREQ
	    		aAdd( aTRM , { TJE->TJE_CALEND , TJE->TJE_CURSO , TJE->TJE_TURMA } )
	    		TJE->( dbSkip() )
	    	End
	    EndIf
		TCF->( dbSkip() )
	End
	If Len( aTRM ) == 0
		ShowHelpDlg( STR0036 , { STR0039 } , 2 , { STR0040 } , 2 )//"ATENÇÃO"###"Requisitos do monitoramento não possuem treinamentos."###"Relacione treinamentos aos requisitos."
		Return .F.
	EndIf
	
	//Monta e Alimenta o TRB de Funcionarios
	aAdd( aDBFFUN , { "OK" 		, "C" , 02 , 0 } )
	aAdd( aDBFFUN , { "MATFUN"	, "C" , 06 , 0 } )
	aAdd( aDBFFUN , { "NOMFUN"	, "C" , 40 , 0 } )
	
	oTempFUN := FWTemporaryTable():New( cTRBFUN, aDBFFUN )
	oTempFUN:AddIndex( "1", {"MATFUN","NOMFUN"} )
	oTempFUN:AddIndex( "2", {"NOMFUN","MATFUN"} )
	oTempFUN:AddIndex( "3", {"OK"} )
	oTempFUN:Create()
	
	For nCont := 1 To Len( aFunc )
		RecLock( cTRBFUN , .T. )
		( cTRBFUN )->OK		:= ""
		( cTRBFUN )->MATFUN	:= aFunc[ nCont , 1 ]
		( cTRBFUN )->NOMFUN	:= NGSEEK( "SRA" , aFunc[ nCont , 1 ] , 1 , "RA_NOME" )
		( cTRBFUN )->( MsUnLock() )
	Next nCont
	
	aAdd( aColFun , { "OK"		, NIL , " "			, } )
	aAdd( aColFun , { "MATFUN"	, NIL , STR0041	, } )//"Matrícula"
	aAdd( aColFun , { "NOMFUN"	, NIL , STR0042	, } )//"Nome"
	
	//Monta e Alimenta o TRB de Treinamentos
	aAdd( aDBFTRM , { "OK" 		, "C" , 02 , 0 } )
	aAdd( aDBFTRM , { "CALEND"	, "C" , 04 , 0 } )
	aAdd( aDBFTRM , { "DESCAL"	, "C" , 20 , 0 } )
	aAdd( aDBFTRM , { "CURSO"	, "C" , 04 , 0 } )
	aAdd( aDBFTRM , { "DESCUR"	, "C" , 30 , 0 } )
	aAdd( aDBFTRM , { "TURMA"	, "C" , 03 , 0 } )
	aAdd( aDBFTRM , { "VAGAS"	, "N" , 12 , 0 } )
		
	oTempTRM := FWTemporaryTable():New( cTRBTRM, aDBFTRM )
	oTempTRM:AddIndex( "1", {"CALEND","CURSO","TURMA"} )
	oTempTRM:AddIndex( "2", {"CURSO"} )
	oTempTRM:AddIndex( "3", {"TURMA","CURSO","CALEND"} )
	oTempTRM:AddIndex( "4", {"OK"} )
	oTempTRM:Create()
	
	For nCont := 1 To Len( aTRM )
		cSeekTRM := aTRM[ nCont , 1 ] + aTRM[ nCont , 2 ] + aTRM[ nCont , 3 ]
		RecLock( cTRBTRM , .T. )
		( cTRBTRM )->OK		:= ""
		( cTRBTRM )->CALEND	:= aTRM[ nCont , 1 ]
		( cTRBTRM )->DESCAL	:= NGSEEK( "RA2" , aTRM[ nCont , 1 ] , 1 , "RA2_DESC" )
		( cTRBTRM )->CURSO	:= aTRM[ nCont , 2 ]
		( cTRBTRM )->DESCUR	:= NGSEEK( "RA1" , aTRM[ nCont , 2 ] , 1 , "RA1_DESC" )
		( cTRBTRM )->TURMA	:= aTRM[ nCont , 3 ]
		( cTRBTRM )->VAGAS	:= NGSEEK( "RA2" , cSeekTRM , 1 , "RA2_VAGAS" ) - NGSEEK( "RA2" , cSeekTRM , 1 , "RA2_RESERV" )
		( cTRBTRM )->( MsUnLock() )
	Next nCont
	
	aAdd( aColTrm , { "OK"		, NIL , " "		, } )
	aAdd( aColTrm , { "CALEND"	, NIL , STR0043	, } )//"Treinamento"
	aAdd( aColTrm , { "DESCAL"	, NIL , STR0044	, } )//"Descrição"
	aAdd( aColTrm , { "CURSO"	, NIL , STR0045	, } )//"Curso"
	aAdd( aColTrm , { "DESCUR"	, NIL , STR0046	, } )//"Desc. Curso"
	aAdd( aColTrm , { "TURMA"	, NIL , STR0047	, } )//"Turma"
	aAdd( aColTrm , { "VAGAS"	, NIL , STR0048	, } )//"Vagas Restantes"
	
	dbSelectArea( cTRBFUN )
	dbGoTop()
	
	dbSelectArea( cTRBTRM )
	dbGoTop()
	
	//Definicao de Tela
	Define MsDialog oWndCfgEmp From aSize[7],0 To aSize[6],aSize[5] Title STR0049 Pixel//"Treinamentos a serem gerados"
	
		// Main Panel
		oPnlWnd := TPanel():New(0, 0, , oWndCfgEmp, , , , , , 0, 0, .F., .F.)
		oPnlWnd:Align := CONTROL_ALIGN_ALLCLIENT
			
			// Splitter - Centro 
			oSplitter := tSplitter():New(01, 01, oPnlWnd, 0, 0)
			oSplitter:Align := CONTROL_ALIGN_ALLCLIENT
			
			// Left Panel - Funcionários
			oPnlFun := TPanel():New(0, 0, , oSplitter, , , , , , 250, 0, .F., .F.)
			oPnlFun:Align := CONTROL_ALIGN_LEFT
				
				oPnlMsgF := TPanel():New( 0 , 0 , , oPnlFun , , , , , , 0 , 017 , .F. , .F. )
	 				oPnlMsgF:Align := CONTROL_ALIGN_TOP
	 				
	 				TSay():New( 007 , 002 , {|| STR0050 } , ;//"Selecione os funcionários que deverão realizar o treinamento:"
	 							oPnlMsgF , , , .F. , .F. , .F. , .T. , , , 155 , 008 )
			
				oMrkFun := MsSelect():New( cTRBFUN , "OK" , , aColFun , , @cMarca, { 0 , 0 , 0 , 0 }, , , oPnlFun )
				oMrkFun:oBrowse:Align       := CONTROL_ALIGN_ALLCLIENT
				oMrkFun:oBrowse:lCANALLMARK := .T.
				oMrkFun:oBrowse:lALLMARK    := .T.
				oMrkFun:oBrowse:bALLMARK    := {|| SetMarkAll( cTRBFUN , @cMarca , oMrkFun )  }
				oMrkFun:bMark               := {|| SetMark( cTRBFUN , @cMarca , , , oMrkFun ) }
					
			// Right Panel - Treinamentos
			oPnlTrm := TPanel():New(0, 0, , oSplitter, , , , , , 0, 0, .F., .F.)
			oPnlTrm:Align := CONTROL_ALIGN_ALLCLIENT
				
				oPnlMsgT := TPanel():New( 0 , 0 , , oPnlTrm , , , , , , 0 , 017 , .F. , .F. )
	 				oPnlMsgT:Align := CONTROL_ALIGN_TOP
	                
	 				TSay():New( 007 , 002 , {|| STR0051 } , ;//"Selecione os treinamentos a serem realizados:"
	 							oPnlMsgT , , , .F. , .F. , .F. , .T. , , , 135 , 008 )
				
				oMrkTrm := MsSelect():New( cTRBTRM , "OK" , , aColTrm , , @cMarca , { 0 , 0 , 0 , 0 } , , , oPnlTrm )
				oMrkTrm:oBrowse:Align       := CONTROL_ALIGN_ALLCLIENT
				oMrkTrm:oBrowse:lCANALLMARK := .T.
				oMrkTrm:oBrowse:lALLMARK    := .T.
				oMrkTrm:oBrowse:bALLMARK    := {|| SetMarkAll( cTRBTRM , @cMarca , oMrkTrm )  }
				oMrkTrm:bMark               := {|| SetMark( cTRBTRM , @cMarca , , , oMrkTrm ) }
					
		oWndCfgEmp:lEscClose := .F.
	
	Activate MsDialog oWndCfgEmp ON INIT EnchoiceBar( oWndCfgEmp , { | | nOpcao := 1 , If( fValTrm( cTRBFUN , cTRBTRM ) , oWndCfgEmp:End() , Nil ) } , { | | nOpcao := 2 , oWndCfgEmp:End() } ) CENTERED
	
	If nOpcao == 1
		dbSelectArea( cTRBFUN )
		dbGoTop()
		While ( cTRBFUN )->( !Eof() )
		    If !Empty( ( cTRBFUN )->OK )
		    	aAdd( aFuncMK , { ( cTRBFUN )->MATFUN } )
		    EndIf
			( cTRBFUN )->( dbSkip() )
		End
	    
	    dbSelectArea( cTRBTRM )
		dbGoTop()
		While ( cTRBTRM )->( !Eof() )
		    If !Empty( ( cTRBTRM )->OK )
		    	
		    	lExist := .F.
		    	
		    	For nFun := 1 To Len( aFuncMK )
			    	dbSelectArea( "RA4" )
					dbSetOrder( 1 )
					If dbSeek( xFilial( "RA4" ) + aFuncMK[ nFun , 1 ] + ( cTRBTRM )->CURSO )
				    	RecLock( "RA4" , .F. )
						RA4->( dbDelete() )
						RA4->( MsUnLock() )
					EndIf
				    
				    dbSelectArea( "RAI" )
					dbSetOrder( 1 )
					If dbSeek( xFilial("RAI") + ( cTRBTRM )->CALEND + ( cTRBTRM )->CURSO + ( cTRBTRM )->TURMA + aFuncMK[ nFun , 1 ] )
						RecLock("RAI",.F.)
						dbDelete()
						RAI->(MsUnLock())
					Endif
					
					dbSelectArea( "RA3" )
   					dbSetOrder( 1 )
					If dbSeek( xFilial("RA3") + aFuncMK[ nFun , 1 ] + ( cTRBTRM )->CURSO )
						While RA3->( !Eof() ) .AND. xFilial("RA3") == RA3->RA3_FILIAL .AND. ;
								RA3->RA3_MAT ==  aFuncMK[ nFun , 1 ] .AND. RA3->RA3_CURSO == ( cTRBTRM )->CURSO
							If RA3->RA3_CALEND == ( cTRBTRM )->CALEND
								RecLock( "RA3" , .F. )
								lExist := .T.
								Exit
							EndIf
							RA3->( dbSkip() )
						End
					Endif
					If !lExist
						RecLock( "RA3" , .T. )
					EndIf
					RA3->RA3_FILIAL := xFilial( "RA3" )
					RA3->RA3_MAT    := aFuncMK[ nFun , 1 ]
					RA3->RA3_CURSO  := ( cTRBTRM )->CURSO
					RA3->RA3_DATA   := dDataBase
					RA3->RA3_TURMA  := ( cTRBTRM )->TURMA
					RA3->RA3_CALEND := ( cTRBTRM )->CALEND
					RA3->RA3_RESERV := "S"
					RA3->RA3_NVEZAD := 0
					RA3->RA3_SEQ 	 := 0
					RA3->(MsUnLock())
		    	Next nFun	    	
		    	
		    EndIf
			( cTRBTRM )->( dbSkip() )
		End
	EndIf
	
	oTempFUN:Delete()
	oTempTRM:Delete()
	
Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} SetMark
Função para Marcação

@param cAliasMrk - Area do MarkBrowse
@param cMrkBrw 	- Valor da Marcação
@param lGrMrk  	- Indica se deve inverter a marcacao
@param lAlwMrk 	- Indica se eh MarkAll
@param oBrwMrk 	- Objeto do MarkBrowse

@author Jackson Machado
@since 03/04/13
/*/
//---------------------------------------------------------------------
Static Function SetMark( cAliasMrk , cMrkBrw , lGrMrk , lAlwMrk , oBrwMrk )
	
	Local lRefreshMrk := ValType( oBrwMrk ) == "O"
	
	Default lGrMrk  := .F.
	Default lAlwMrk := .F.
	
	dbSelectArea( cAliasMrk )
	RecLock( cAliasMrk , .F. )
	If lGrMrk
		( cAliasMrk )->OK := GetMrk( ( cAliasMrk )->OK , cMrkBrw , lAlwMrk )
	Endif
	(cAliasMrk)->( MsUnlock() )
	
	If lRefreshMrk
		oBrwMrk:oBrowse:Refresh( .T. )
		oBrwMrk:oBrowse:SetFocus()
	Endif

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} GetMark
Função para verificar a marcação

@param cField	- Campo a ser marcado
@param cMrkBrw	- Valor da Marcação 
@param lAlwMrk	- Indica o tipo de marcacao

@author Jackson Machado
@since 03/04/13
/*/
//---------------------------------------------------------------------
Static Function GetMrk( cField , cMrkBrw , lAlwMrk )
Return If( lAlwMrk , cMrkBrw , If( !Empty( cField ) , Space( 2 ) , cMrkBrw ) )

//---------------------------------------------------------------------
/*/{Protheus.doc} SetMarkAll
Função para marcar e desmarcar todos

@param AliasMrk - Area do MarkBrowse
@param cMrkBrw 	- Valor da Marcação
@param oBrwMrk 	- Objeto do MarkBrowse

@author Jackson Machado
@since 03/04/13
/*/
//---------------------------------------------------------------------
Static Function SetMarkAll( cAliasMrk , cMrkBrw , oBrwMrk )

	Local nRecnoMrk
	
	dbSelectArea( cAliasMrk )
	nRecnoMrk := Recno()
	dbGoTop()
	While !Eof()
		SetMark( cAliasMrk , cMrkBrw , .T. , .F. )
		dbSelectArea( cAliasMrk )
		dbSkip()
	End
	
	dbSelectArea( cAliasMrk )
	dbGoTo( nRecnoMrk )
	
	oBrwMrk:oBrowse:Refresh( .T. )
	oBrwMrk:oBrowse:SetFocus()

Return
//---------------------------------------------------------------------
/*/{Protheus.doc} fValTrm
Valida os treinametnos

@param cFUN - Alias do arquivo de funcionários
@param cTRM	- Alias do arquivo de treinamentos

@author Jackson Machado
@since 03/04/13
/*/
//---------------------------------------------------------------------
Static Function fValTrm( cFun , cTrm )

	Local nRegFun	:= ( cFun )->( Recno() )
	Local nRegTrm	:= ( cTrm )->( Recno() )
	Local cMsg		:= STR0052//"Os seguintes treinamentos não possuem a quantidade de vagas solicitadas:" 
	Local lRet		:= .T.
	Local aFuncMK	:= {}
	Local aArea		:= GetArea()
	
	
	dbSelectArea( cFUN )
	dbGoTop()
	While ( cFUN )->( !Eof() )
	    If !Empty( ( cFUN )->OK )
	    	aAdd( aFuncMK , { ( cFUN )->MATFUN } )
	    EndIf
		( cFUN )->( dbSkip() )
	End
	
	dbSelectArea( cTRM )
	dbGoTop()
	While ( cTRM )->( !Eof() )
	    If ( cTRM )->VAGAS < Len( aFuncMK )
			lRet := .F.
			cMsg += CRLF + STR0043 + ":" + CHR( 09 ) + ( cTRM )->CALEND + " - " + AllTrim( ( cTRM )->DESCAL )//"Treinamento"
			cMsg += CRLF + STR0045 + ":" + CHR( 09 ) + CHR( 09 ) + ( cTRM )->CURSO  + " - " + AllTrim( ( cTRM )->DESCUR )//"Curso"
			cMsg += CRLF + STR0047 + ":" + CHR( 09 ) + CHR( 09 ) + ( cTRM )->TURMA//"Turma"
			cMsg += CRLF + Replicate( "-" , 100 )
		EndIf
		( cTRM )->( dbSkip() )
	End
	
	If !lRet
		If FindFunction( "NGMSGMEMO" )
			NGMSGMEMO( STR0036 , cMsg )//"ATENÇÃO"
		Else
		 	MsgInfo( cMsg )
		EndIf
	EndIf
	
	dbSelectArea( cFun )
	dbGoTo( nRegFun )
	
	dbSelectArea( cTrm )
	dbGoTo( nRegTrm )
	
	RestArea( aArea )
Return lRet
//---------------------------------------------------------------------
/*/{Protheus.doc} SGMONTCC
Realiza o filtro na tabela TCC pela consulta SXB (TCCMON)

@author Jackson Machado
@since 03/04/13
/*/
//---------------------------------------------------------------------
Function SGMONTCC()
	
	Local lRet 	:= .F.
	Local aArea	:= GetArea()
		
	dbSelectArea( "TCE" )
	dbSetOrder( 1 )
	If dbSeek( xFilial( "TCE" ) + cMonitSXB + TCC->TCC_CODIGO )
		lRet := .T.	
	EndIf
	
	RestArea( aArea )
	
Return lRet