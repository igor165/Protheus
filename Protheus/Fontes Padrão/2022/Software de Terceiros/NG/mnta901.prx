#INCLUDE "mnta901.ch"
#INCLUDE "PROTHEUS.CH"
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA901   ³ Autor ³ Paulo Pego            ³ Data ³ 28/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Recalcula o custo das manutencoes                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAMNT - Planejamento de Manutencao                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³DT.ALTERAC³ANLISTA/PROG.³ MOTIVO                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA901
	If !MsgYesNo(STR0002,STR0003) //"Deseja recalcular os custos das O.S. de Manutencao"###"ATENCAO"
		Return
	Else
		Processa({ |lEnd| MNTA901STJ() }, STR0004 ) //"Aguarde...Processando arquivo Manutencao"
	EndIf
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA901STJ³ Autor ³ Paulo Pego            ³ Data ³ 28/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Recalcula o custo das manutencoes                      STJ ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAMNT - Planejamento de Manutencao                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA901STJ()

	Local cDocumSD3
	Local lCustFer  := NGCADICBASE("TJ_CUSTFER","A","STJ",.F.)
	Local lMMoeda  	:= NGCADICBASE("TL_MOEDA","A","STL",.F.) // Multi-Moeda
	Local cCODTER 	:= Trim(GetMv("MV_PRODTER"))
	Local cNGUNIDT	:= AllTrim(GetMv("MV_NGUNIDT"))
	Local cCODPRO 	:= Trim(GetMv("MV_PRODMNT"))

	DbSelectArea("STJ")
	DbSetOrder(1)
	DbSeek(xFilial('STJ'))
	ProcRegua(LastRec())
	While !Eof() .And. stj->tj_filial = xFILIAL("STJ")
		IncProc()
		If STJ->TJ_TERMINO = "S"
			cOS    := STJ->TJ_ORDEM
			cPLANO := STJ->TJ_PLANO

			dMIN := CtoD("31/12/35")
			hMIN := "23:59"
			dMAX := CtoD("01/01/80")
			hMAX := "00:01"

			nMDO := 0.00
			nTRO := 0.00
			nSUB := 0.00
			nAPO := 0.00
			nTER := 0.00
			nFER := 0.00

			cCalend := "   "
			DbSelectArea("STF")
			DbSetOrder(1)
			If DbSeek(xFilial('STF')+STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA)
				cCALEND := STF->TF_CALENDA
				aDIAMAN := NG_H7(cCALEND)
			Endif

			//Verifica se o existe SD3 para esta OP e incrementa a OS
			dbSelectArea('SD3')
			dbSetOrder(1)
			cCod := PadR( cOS + 'OS001', Len( SD3->D3_OP ) )

			dbSeek( xFilial( 'SD3' ) + cCod )
			While SD3->( !Eof() ) .And. SD3->D3_FILIAL == xFilial('SD3') .And. SD3->D3_OP == cCod

				If IsProdMod( Trim( SD3->D3_COD ) )
					SD3->( dbSkip() )
					Loop
				EndIf

				cNUMSEQ := SD3->D3_NUMSEQ

				DbSelectArea("STL")
				DbSetOrder(7)
				If !DbSeek(xFIlial('STL') + cNUMSEQ)
					If Trim(sd3->d3_cod) == cCODTER
					cTipo := "T"
					hFIM  := Space(5)
					dFIM  := CtoD("  /  /  ")
					hINI  := Space(5)

					If !Empty(cCALEND)
						nSem := If(DOW(sd3->d3_emissao)==1,7,DOW(sd3->d3_emissao)-1)
						hINI := aDIAMAN[nSEM][01]
						dFIM := aDIAMAN[nSEM][01]
						hFIM := MtoH( HtoM(hINI) + sd3->d3_quant)
					Endif
					Else
					cTipo := "P"
					hFIM  := Space(5)
					dFIM  := CtoD("  /  /  ")
					hINI  := Space(5)

					If !Empty(cCALEND)
						nSem := If(DOW(sd3->d3_emissao)==1,7,DOW(sd3->d3_emissao)-1)
						hINI := aDIAMAN[nSEM][01]
					Endif
					Endif

					M->TJ_PLANO := cOS
					M->TJ_ORDEM := cPLANO
					M->TL_PLANO := M->TJ_PLANO
					M->TL_ORDEM := M->TJ_ORDEM
					nSEQSTL := ULTSEQ(Recno())
					RecLock("STL",.T.)
					stl->tl_filial   := xFilial('STL')
					stl->tl_ordem    := cOS
					stl->tl_plano    := cPLANO
					stl->tl_seqrela  := nSEQSTL
					stl->tl_tarefa   := "0"
					stl->tl_tiporeg  := cTIPO
					stl->tl_codigo   := sd3->d3_cod
					stl->tl_quanrec  := 0
					stl->tl_quantid  := sd3->d3_quant
					stl->tl_unidade  := sd3->d3_um
					stl->tl_dtinici  := sd3->d3_emissao
					stl->tl_hoinici  := hINI
					stl->tl_dtfim    := dFIM
					stl->tl_hofim    := hFIM
					stl->tl_custo    := sd3->d3_custo1
					stl->tl_local    := sd3->d3_local
					STL->TL_TIPOHOR  := cNGUNIDT
					STL->TL_USACALE  := "N"
					If lMMoeda
						STL->TL_MOEDA := "1"
					Endif
					MsUnlock("STL")
				Endif

				//Atualiza arquivo de empenhos e B2_QEMP
				dbSelectArea('SD4')
				dbSetOrder(2)
				dbSeek( xFilial( 'SD4' ) + SD3->D3_OP )
				While SD4->( !EoF() ) .And. SD4->D4_FILIAL + SD4->D4_OP == xFilial( 'SD4' ) + SD3->D3_OP
					
					//Nao baixa se quantidade empenhada for negativa
					If SD4->D4_QUANT == 0 .Or. IsProdMod( Trim( SD4->D4_COD ) )
						SD4->( dbSkip() )
						Loop
					EndIf

					//Atualiza o campo totalizador dos empenhos
					DbSelectArea("SB2")
					DbSeek(xFilial('SB2')+SD4->D4_COD+SD4->D4_LOCAL)
					If Eof()
					CriaSB2(SD4->D4_COD,SD4->D4_LOCAL)
					// A FUNCAO ACIMA NAO LIBERA O REGISTRO
					MsUnlock("SB2")
					EndIf
					RecLock("SB2",.F.)
					If SD4->D4_QUANT > 0
					Replace B2_QEMP With B2_QEMP - SD4->D4_QUANT
					Else
					Replace B2_SALPEDI With B2_SALPEDI - ABS(SD4->D4_QUANT)
					EndIf
					MsUnlock()

					DbSelectArea("SD4")
					RecLock("SD4",.F.)
					Replace D4_QUANT With 0
					Replace D4_QTSEGUM With 0
					MsUnlock()
					DbSkip()
				End

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona no arquivo de OP's                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DbSelectArea("SC2")
				DbSetOrder(1)
				DbSeek(xFilial('SC2')+SD3->D3_OP)
				RecLock("SC2",.F.)
				Replace C2_DATRF With SD3->D3_EMISSAO
				MsUnlock()

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza o campo totalizador dos empenhos ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DbSelectArea("SB2")
				DbSetOrder(1)
				DbSeek(xFilial('SB2')+SC2->C2_PRODUTO+SC2->C2_LOCAL)
				If Eof()
					CriaSB2(SC2->C2_PRODUTO,SC2->C2_LOCAL)
				// A FUNCAO ACIMA NAO LIBERA O REGISTRO
					MsUnlock("SB2")
				EndIf

				RecLock("SB2",.F.)
				Replace B2_SALPEDI With B2_SALPEDI - (SC2->C2_QUANT - SC2->C2_QUJE - SC2->C2_PERDA)
				MsUnlock()

				DbSelectArea("SD3")
				DbSkip()
			End

			DbSelectArea("STL")
			DbSetOrder(1)
			DbSeek(xFilial('STL')+cOS+cPLANO)
			While !Eof() .And. STL->TL_FILIAL == xFILIAL('STL') .and.;
				STL->TL_ORDEM == cOS .and. STL->TL_PLANO == cPLANO

				If Alltrim(stl->tl_seqrela) = "0"
					DbSkip()
					Loop
				Endif

				dMIN := MIN(dMIN, stl->tl_dtinici)
				h1   := HtoM(hMIN)
				h2   := HtoM(stl->tl_hoinici)
				hMIN := MIN(h1 , h2)
				hMIN := MtoH(hMIN)
				dMAX := MAX(dMAX, stl->tl_dtfim)
				h1   := HtoM(hMAX)
				h2   := HtoM(stl->tl_hofim)
				hMAX := MAX(h1, h2)
				hMAX := MtoH(hMAX)

				nCustoAtu := If(lMMoeda, xMoeda(STL->TL_CUSTO, STL->TL_MOEDA, 1, STL->TL_DTINICI,TAMSX3("TL_CUSTO")[2]), STL->TL_CUSTO)

				If STL->TL_TIPOREG == "T"
					nTER := nTER + nCustoAtu
				ElseIf STL->TL_TIPOREG == "P"
					If STL->TL_DESTINO == "T"
					nTRO := nTRO + nCustoAtu
					ElseIf STL->TL_DESTINO == "S"
					nSUB := nSUB + nCustoAtu
					Else
					nAPO := nAPO + nCustoAtu
					Endif
				ElseIf STL->TL_TIPOREG == "F"
						nFER := nFER + nCustoAtu
				ElseIf STL->TL_TIPOREG == "M"
					nMDO := nMDO + nCustoAtu
				Endif

				RecLock("STL",.F.)
				stl->tl_repfim := "S"
				MsUnlock("STL")

				DbSelectArea("STL")
				DbSkip()
			End

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava no SD3 o encerramento da OP gerada                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nTOTAL := (nMDO + nTRO + nSUB + nAPO + nTER + nFER)

			DbSelectArea("SB1")
			DbSetOrder(1)
			DbSeek(xFilial('SB1')+cCODPRO)

			lFecha := .T.

			DbSelectArea("SD3")
			DbSetOrder(1)
			DbSeek(xFilial('SD3') + stj->tj_ordem+"OS001")
			While !Eof() .And. sd3->d3_filial == xFilial('SD3') .and.;
				sd3->d3_OP == stj->tj_ordem+"OS001"

				If SubStr(d3_cf,1,2) == "PR"
					lFecha := .f.
					Exit
				Endif
				DbSkip()
			End

			If lFecha

				//Pega o proximo numero sequencial do documento do SD3
				cDocumSD3 := NextNumero("SD3",2,"D3_DOC",.T.)
				cDocumSD3 := A261RetINV(cDocumSD3)

				dbSelectArea("SD3")
				RecLock("SD3",.T.)
				Replace d3_filial   with xFilial('SD3')
				Replace d3_tm       with "499"
				Replace d3_cod      with cCODPRO
				Replace d3_um       with sb1->b1_um
				Replace d3_quant    with 1
				Replace d3_cf       with "PR0"
				Replace d3_conta    with sb1->b1_conta
				Replace d3_op       with stj->tj_ordem+"OS001"
				Replace d3_local    with sb1->b1_locpad
				Replace d3_doc      with cDocumSD3
				Replace d3_emissao  with dMAX
				Replace d3_custo1   with nTOTAL
				Replace d3_segum    with sb1->b1_segum
				Replace d3_qtsegum  with ConvUm(SB1->B1_COD,1,0,2)
				Replace d3_tipo     with sb1->b1_tipo
				Replace d3_usuario  with If(Len(sd3->d3_usuario) > 15,cUsername,Substr(cUsuario,7,15))
				Replace d3_ordem    with stj->tj_ordem
				SD3->D3_CHAVE   := SubStr(D3_CF,2,1)+If(D3_CF $ 'RE4|DE4','9','0')
				If SB1->B1_APROPRI
					SD3->D3_CHAVE   := Substr(sd3->d3_chave,1,1)+"3"
				Endif

					If NGCADICBASE("T9_ITEMCTA","A","ST9",.F.)
						SD3->D3_ITEMCTA := NGSEEK("ST9",STJ->TJ_CODBEM,1,"T9_ITEMCTA")
					EndIf
				MsUnLock()

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Pega os 5 custos medios atuais             ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				aCM := PEGACMATU(SD3->D3_COD,SD3->D3_LOCAL)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Grava o custo da movimentacao              ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				aCUSTO := GRAVACUSD3(aCM)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza o saldo atual (VATU) com os dados do SD3     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				B2ATUCOMD3(aCUSTO)

				C2ATUCOMD3(aCUSTO)

					//-------------------------------------
					//INTEGRACAO POR MENSAGEM UNICA
					//-------------------------------------
					If AllTrim(GetNewPar("MV_NGINTER","N")) == "M"  //Mensagem Unica
						NGMUCanReq(SD3->(RecNo()),"SD3")
					EndIf

			Endif

			DbSelectArea("STJ")
			RecLock("STJ",.F.)
			STJ->TJ_CUSTMDO := nMDO
			STJ->TJ_CUSTMAT := nTRO
			STJ->TJ_CUSTMAA := nAPO
			STJ->TJ_CUSTMAS := nSUB
			STJ->TJ_CUSTTER := nTER
				If lCustFer
					STJ->TJ_CUSTFER := If(nFER > nMAX .Or. nFER < 0.00, 0.00, nFER)
				EndIf
			STJ->TJ_DTMRINI := dMIN
			STJ->TJ_HOMRINI := hMIN
			STJ->TJ_DTMRFIM := dMAX
			STJ->TJ_HOMRFIM := hMAX
			If lMMoeda
				STJ->TJ_MOEDA := "1"
			Endif
			MsUnlock()
		Endif
		DbSelectArea("STJ")
		DbSkip()
	End

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} MNTA901STL
Recalcula o custo das manutencoes

@author  Paulo Pego
@since   28/06/99
@version P11/P12
@param   [cEMP],       Caracter, Código da Empresa
@param   [cFil],       Caracter, Código da Filial
@param   [dDataUlMes], Data,     Data contida no parametro MV_ULMES
@param   [lNGRECAL],   Lógico,   Verifica se o parametro MV_NGRECAL == 'S'
@param   [lMMoeda],    Lógico,   Verifica existência do campo TL_MOEDA
/*/
//-------------------------------------------------------------------
Function MNTA901STL( cEMP, cFIL, dDataUlMes, lNGRECAL, lMMoeda )

	Local aCstMoeda		:= {}
	Local cFilST1		:= ''
	Local cFilSD3		:= ''
	Local cFilSB1		:= ''
	Local cFilSB2		:= ''
	Local cMoedaCst		:= "1"
	Local nCUSTO		:= 0.00

	Private vVETHORAS	:= {}

	Default dDataUlMes	:= SuperGetMV( 'MV_ULMES', .F., ' ' )
	Default lNGRECAL    := Upper( AllTrim( GetNewPar( "MV_NGRECAL" ) ) ) == "S"
	Default lMMoeda     := FieldPos( 'TL_MOEDA' ) > 0

	If lNGRECAL .And. STL->TL_DTFIM >= dDataUlMes

		DbSelectArea("STL")
		DbSetOrder(1)
		If Alltrim(STL->TL_SEQRELA) == "0"
			If lMMoeda
				aCstMoeda := NGCALCUSMD(stl->tl_codigo,stl->tl_tiporeg,STL->TL_QUANTID,stl->tl_local,stl->tl_tipohor,cEMP,cFIL,stl->tl_quanrec,,If(lMMoeda, STL->TL_MOEDA, ""))
				nCUSTO    := aCstMoeda[1]
				cMoedaCst := aCstMoeda[2]
			Else
				nCUSTO := NGCALCUSTI(stl->tl_codigo,stl->tl_tiporeg,STL->TL_QUANTID,stl->tl_local,stl->tl_tipohor,cEMP,cFIL,stl->tl_quanrec,,If(lMMoeda, STL->TL_MOEDA, ""))
			Endif
		Else

			If cEmp != Nil
				cFilST1 := NGTROCAFILI("ST1",cFIL,cEMP)
				cFilSD3 := NGTROCAFILI("SD3",cFIL,cEMP)
				cFilSB1 := NGTROCAFILI("SB1",cFIL,cEMP)
				cFilSB2 := NGTROCAFILI("SB2",cFIL,cEMP)
			Else
				cFilST1 := xFilial( 'ST1', cFil )
				cFilSD3 := xFilial( 'SD3', cFil )
				cFilSB1 := xFilial( 'SB1', cFil )
				cFilSB2 := xFilial( 'SB2', cFil )
			EndIf

			cOP := Padr( STL->TL_ORDEM + "OS001" , Len( SD3->D3_OP ) )

			DbSelectArea("SD3")
			DbSetOrder(4) // D3_FILIAL + D3_NUMSEQ
			If dbSeek( cFilSD3 + AllTrim( STL->TL_NUMSEQ ) )
				nCUSTO := SD3->D3_CUSTO1
			Endif

		Endif

		DbSelectArea("STL")
		If nCUSTO > 0.00
			RecLock("STL",.F.)
			STL->TL_CUSTO := nCUSTO
			If lMMoeda
				STL->TL_MOEDA := cMoedaCst
			Endif
			MsUnlock()
		Endif
	EndIf
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} MNTA901STL
Recalcula o custo das manutencoes

@author  Paulo Pego
@since   28/06/99
@version P11/P12
@version P11/P12
@param   [cEMP],       Caracter, Código da Empresa
@param   [cFil],       Caracter, Código da Filial
@param   [dDataUlMes], Data,     Data contida no parametro MV_ULMES
@param   [lNGRECAL],   Lógico,   Verifica se o parametro MV_NGRECAL == 'S'
@param   [lMMoeda],    Lógico,   Verifica existência do campo TL_MOEDA
/*/
//-------------------------------------------------------------------
Function MNTA901STT( cEMP, cFIL, dDataUlMes, lNGRECAL, lMMoeda)

	Local cFilST1		:= ''
	Local cFilSD3		:= ''
	Local cFilSB1		:= ''
	Local cFilSB2		:= ''
	Local aCstMoeda		:= {}
	Local cMoedaCst		:= "1"

	Default dDataUlMes	:= SuperGetMV( 'MV_ULMES', .F., ' ' )
	Default lNGRECAL    := Upper( AllTrim( GetNewPar( "MV_NGRECAL" ) ) ) == "S"
	Default lMMoeda     := FieldPos( 'TL_MOEDA' ) > 0

	If lNGRECAL .And. STT->TT_DTFIM >= dDataUlMes

		DbSelectArea("STT")
		DbSetOrder(1)
		If Alltrim(STT->TT_SEQRELA) == "0"

			If lMMoeda
				aCstMoeda := NGCALCUSMD(stt->tt_codigo,stt->tt_tiporeg,STL->TL_QUANTID,stt->tt_local,stt->tt_tipohor,cEMP,cFIL,stt->tt_quanrec, If(lMMoeda, STT->TT_MOEDA, ""))
				nCUSTO    := aCstMoeda[1]
				cMoedaCst := aCstMoeda[2]
			Else
				nCUSTO := NGCALCUSTI(stt->tt_codigo,stt->tt_tiporeg,STL->TL_QUANTID,stt->tt_local,stt->tt_tipohor,cEMP,cFIL,stt->tt_quanrec,, If(lMMoeda, STT->TT_MOEDA, ""))
			EndIf

		Else
			cFilST1 := xFilial( 'ST1', cFil )
			cFilSD3 := xFilial( 'SD3', cFil )
			cFilSB1 := xFilial( 'SB1', cFil )
			cFilSB2 := xFilial( 'SB2', cFil )

			cOP := Padr( STT->TT_ORDEM + "OS001" , Len( SD3->D3_OP ) )

			DbSelectArea("SD3")
			DbSetOrder(4) // D3_FILIAL + D3_NUMSEQ
			If dbSeek( cFilSD3 + AllTrim( STT->TT_NUMSEQ ) )
				nCUSTO := SD3->D3_CUSTO1
			Endif

		Endif

		DbSelectArea("STT")
		If nCUSTO > 0.00
			RecLock("STT",.F.)
			STT->TT_CUSTO := nCUSTO
			If lMMoeda
				STT->TT_MOEDA := cMoedaCst
			Endif
			STT->( MsUnlock() )
		Endif

	EndIf

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} MNTA901OS
Recalcula o custo das O.S. (STJ e STL)

@author  Paulo Pego
@since   04/10/99
@version P11/P12
@param   cTBL, Caracter, Tabela que sera usada no calculo (STJ/STS)
/*/
//-------------------------------------------------------------------
Function MNTA901OS(cTBL)

	Local nMDO       := 0.00
	Local nMAT       := 0.00
	Local nMAA       := 0.00
	Local nMAS       := 0.00
	Local nTER       := 0.00
	Local nFER       := 0.00
	Local lNGRECAL   := Upper( AllTrim( GetNewPar( 'MV_NGRECAL' ) ) ) == 'S' // Permite o recalculo de custo de insumo on-line
	Local lMMoeda    := FieldPos('TL_MOEDA') > 0
	Local dDtUlMes   := SuperGetMV( 'MV_ULMES', .F., ' ' ) // Data do último fechamento do estoque.

	If cTBL == "STJ"
		aOrS := {"STJ","STJ->TJ_ORDEM","STJ->TJ_PLANO","STJ->TJ_CUSTMDO","STJ->TJ_CUSTMAT","STJ->TJ_CUSTMAA","STJ->TJ_CUSTMAS","STJ->TJ_CUSTTER","STJ->TJ_CUSTFER"}
		aIns := {"STL","STL->TL_ORDEM","STL->TL_PLANO","STL->TL_SEQRELA","STL->TL_TIPOREG","STL->TL_CUSTO","STL->TL_DESTINO","STL->TL_FILIAL"}
	Else
		aOrS := {"STS","STS->TS_ORDEM","STS->TS_PLANO","STS->TS_CUSTMDO","STS->TS_CUSTMAT","STS->TS_CUSTMAA","STS->TS_CUSTMAS","STS->TS_CUSTTER","STS->TS_CUSTFER"}
		aIns := {"STT","STT->TT_ORDEM","STT->TT_PLANO","STT->TT_SEQRELA","STT->TT_TIPOREG","STT->TT_CUSTO","STT->TT_DESTINO","STT->TT_FILIAL"}
	EndIf

	DbSelectArea(aIns[1])
	DbSetOrder(1)
	DbSeek(xFilial(aIns[1]) + &(aOrs[2]) + &(aOrS[3]))
	While !Eof() .And. &(aIns[8]) == xFILIAL(aIns[1]) .and.;
		&(aIns[2]) == &(aOrS[2]) .and. &(aIns[3]) == &(aOrS[3])

		If cTBL == "STJ"
			MNTA901STL( , , dDtUlMes, lNGRECAL , lMMoeda )
		Else
			MNTA901STT( , , dDtUlMes, lNGRECAL , lMMoeda )
		EndIf

		DbSelectArea(aIns[1])
		DbSetOrder(1)
		If Alltrim(&(aIns[4])) == "0"
			DbSkip()
			Loop
		Endif

		If &(aIns[5]) == "T"
			nTER := nTER + &(aIns[6])
		ElseIf &(aIns[5]) == "M"
			nMDO := nMDO + &(aIns[6])
		ElseIf &(aIns[5]) == "E"
			nMDO := nMDO + &(aIns[6])
		ElseIf &(aIns[5]) == "P"
			If &(aIns[7]) == "T"
				nMAT := nMAT + &(aIns[6])
			ElseIf &(aIns[7]) == "S"
				nMAS := nMAS + &(aIns[6])
			Else
				nMAA := nMAA + &(aIns[6])
			Endif
		ElseIf &(aIns[5]) == "F"
			nFER := nFER + &(aIns[6])
		Endif
		DbSkip()
	EndDo

	DbSelectArea(aOrs[1])
	Reclock(aOrs[1],.F.)
	&(aOrs[4]) := nMDO
	&(aOrs[5]) := nMAT
	&(aOrs[6]) := nMAA
	&(aOrs[7]) := nMAS
	&(aOrs[8]) := nTER
	&(aOrs[9]) := nFER
	MSUNLOCK(aOrs[1])
Return
