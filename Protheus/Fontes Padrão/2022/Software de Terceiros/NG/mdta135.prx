#INCLUDE "MDTA135.ch"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWMVCDEF.CH"

//---------------------------------------------------------------------
/*/{Protheus.doc} MDTA135
Programa de Cadastro das Medidas de Controle para os Riscos

@return

@sample MDTA135()

@author Thiago Olis Machado - Refeito por: Jackson Machado
@since 22/06/01 - Revisão: 23/09/13
/*/
//---------------------------------------------------------------------
Function MDTA135()

	// Armazena as variáveis
	Local aNGBEGINPRM := NGBEGINPRM()

	Local oBrowse

	oBrowse := FWMBrowse():New()
		oBrowse:SetAlias( "TO4" )			// Alias da tabela utilizada
		oBrowse:SetMenuDef( "MDTA135" )		// Nome do fonte onde esta a função MenuDef
		oBrowse:SetDescription( STR0006 )	// Descrição do browse ###"Medidas de Controle"
	oBrowse:Activate()

	// Devolve as variáveis armazenadas
	NGRETURNPRM( aNGBEGINPRM )

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Definição do Menu (padrão MVC).

@author Jackson Machado
@since 13/09/13

@return aRotina array com o Menu MVC
/*/
//---------------------------------------------------------------------
Static Function MenuDef()

	Local aRotina 	:= {}

	ADD OPTION aRotina Title STR0001	Action 'AxPesqui'	  	 OPERATION 1 ACCESS 0 //'Pesquisar'
	ADD OPTION aRotina Title STR0002	Action 'VIEWDEF.MDTA135' OPERATION 2 ACCESS 0 //'Visualizar'
	ADD OPTION aRotina Title STR0003	Action 'VIEWDEF.MDTA135' OPERATION 3 ACCESS 0 //'Incluir'
	ADD OPTION aRotina Title STR0004	Action 'VIEWDEF.MDTA135' OPERATION 4 ACCESS 0 //'Alterar'
	ADD OPTION aRotina Title STR0005	Action 'VIEWDEF.MDTA135' OPERATION 5 ACCESS 0 //'Excluir'
	ADD OPTION aRotina Title STR0007	Action 'VIEWDEF.MDTA135' OPERATION 9 ACCESS 0 //'Copiar'

Return aRotina

//---------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Definição do Modelo (padrão MVC).

@author Jackson Machado
@since 13/09/13

@return oModel objeto do Modelo MVC
/*/
//---------------------------------------------------------------------
Static Function ModelDef()

    // Cria a estrutura a ser usada no Modelo de Dados
	Local oStructTO4 := FWFormStruct( 1 ,"TO4" , /*bAvalCampo*/ , /*lViewUsado*/ )

	// Modelo de dados que será construído
	Local oModel

	Local oEvent  := MDT135A():New()

	// Cria o objeto do Modelo de Dados
	// cID     Identificador do modelo
	// bPre    Code-Block de pre-edição do formulário de edição. Indica se a edição esta liberada
	// bPost   Code-Block de validação do formulário de edição
	// bCommit Code-Block de persistência do formulário de edição
	// bCancel Code-Block de cancelamento do formulário de edição
	oModel := MPFormModel():New( "MDTA135" , /*bPre*/ , /*bPos*/ , /*bCommit*/ , /*bCancel*/ )
		//--------------------------------------------------
		// Componentes do Modelo
		//--------------------------------------------------

		// Adiciona ao modelo um componente de Formulário Principal
		// cId          Identificador do modelo
		// cOwner       Identificador superior do modelo
		// oModelStruct Objeto com  a estrutura de dados
		// bPre         Code-Block de pré-edição do formulário de edição. Indica se a edição esta liberada
		// bPost        Code-Block de validação do formulário de edição
		// bLoad        Code-Block de carga dos dados do formulário de edição
		oModel:AddFields( "TO4MASTER" , Nil , oStructTO4 , /*bPre*/ , /*bPost*/ , /*bLoad*/ )
			// Adiciona a descrição do Modelo de Dados (Geral)
			oModel:SetDescription( STR0006 /*cDescricao*/ ) //"Medidas de Controle"
			// Adiciona a descricao do Componente do Modelo de Dados
			oModel:GetModel( "TO4MASTER" ):SetDescription( STR0006 ) //"Medidas de Controle"

	oModel:InstallEvent("MDT135A", /*cOwner*/, oEvent)

Return oModel

//---------------------------------------------------------------------
/*/{Protheus.doc} ViewDef
Definição da View (padrão MVC).

@author Jackson Machado
@since 13/09/13

@return oView objeto da View MVC
/*/
//---------------------------------------------------------------------
Static Function ViewDef()

	// Cria um objeto de Modelo de dados baseado no ModelDef() do fonte informado
	Local oModel := FWLoadModel( "MDTA135" )

	// Cria a estrutura a ser usada na View
	Local oStructTO4 := FWFormStruct( 2 , "TO4" , /*bAvalCampo*/ , /*lViewUsado*/ )

	// Interface de visualização construída
	Local oView

	// Cria o objeto de View
	oView := FWFormView():New()
		// Objeto do model a se associar a view.
		oView:SetModel( oModel )
		// Adiciona no View um controle do tipo formulário (antiga Enchoice)
		// cFormModelID - Representa o ID criado no Model que essa FormField irá representar
		// oStruct - Objeto do model a se associar a view.
		// cLinkID - Representa o ID criado no Model ,Só é necessári o caso estamos mundando o ID no View.
		oView:AddField( "VIEW_TO4" , oStructTO4 , "TO4MASTER" )
			//Adiciona um titulo para o formulário
			oView:EnableTitleView( "VIEW_TO4" , STR0006 )	// Descrição do browse ###"Medidas de Controle"
			// Cria os componentes "box" horizontais para receberem elementos da View
			// cID		  	Id do Box a ser utilizado
			// nPercHeight  Valor da Altura do box( caso o lFixPixel seja .T. é a qtd de pixel exato)
			// cIdOwner 	Id do Box Vertical pai. Podemos fazer diversas criações uma dentro da outra.
			// lFixPixel	Determina que o valor passado no nPercHeight é na verdade a qtd de pixel a ser usada.
			// cIDFolder	Id da folder onde queremos criar o o box se passado esse valor, é necessário informar o cIDSheet
			// cIDSheet     Id da Sheet(Folha de dados) onde queremos criar o o box.
			oView:CreateHorizontalBox( "TELATO4" , 100,/*cIDOwner*/,/*lFixPixel*/,/*cIDFolder*/,/*cIDSheet*/ )
		// Associa um View a um box
		oView:SetOwnerView( "VIEW_TO4" , "TELATO4" )

Return oView