#INCLUDE	"MNTA640.ch"
#INCLUDE	"Protheus.ch"
#INCLUDE	"FWMVCDEF.CH"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA640
Cadastro de Tipos de Combustíveis.

TABELAS:
TQF - Postos
TQM - Tipos de Combustíveis

ATENÇÃO:
Programa refeito em 01/02/2012.
Autor: Wagner Sobral de Lacerda

@author Evaldo
@since 04/01/2006

@return .T.
/*/
//---------------------------------------------------------------------
Function MNTA640()

	// Armazena as variáveis
	Local aNGBEGINPRM := {}

	Local oBrowse // Variável do Browse

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 95 )

		aNGBEGINPRM := NGBEGINPRM()

		Private cCadastro := OemToAnsi(STR0005) // "Tipos de Combustíveis"

		//----------------
		// Monta o Browse
		//----------------
		dbSelectArea("TQF")
		dbSetOrder(1)
		dbGoTop()

		// Instanciamento da Classe de Browse
		oBrowse := FWMBrowse():New()

			// Definição da tabela do Browse
			oBrowse:SetAlias("TQM")

			// Descrição do Browse
			oBrowse:SetDescription(cCadastro)

			// Menu Funcional relacionado ao Browse
			oBrowse:SetMenuDef("MNTA640")

		// Ativação da Classe
		oBrowse:Activate()
		//----------------
		// Fim do Browse
		//----------------

		// Devolve as variáveis armazenadas
		NGRETURNPRM(aNGBEGINPRM)

	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Definição do Menu (padrão MVC).

@author Wagner Sobral de Lacerda
@since 01/02/2012

@return aRotina array com o Menu MVC
/*/
//---------------------------------------------------------------------
Static Function MenuDef()

	// Variável do Menu
	Local aRotina := {}

	ADD OPTION aRotina TITLE STR0001 ACTION "VIEWDEF.MNTA640" OPERATION 2 ACCESS 0 // "Visualizar"
	ADD OPTION aRotina TITLE STR0002 ACTION "VIEWDEF.MNTA640" OPERATION 3 ACCESS 0 // "Incluir"
	ADD OPTION aRotina TITLE STR0003 ACTION "VIEWDEF.MNTA640" OPERATION 4 ACCESS 0 // "Alterar"
	ADD OPTION aRotina TITLE STR0004 ACTION "VIEWDEF.MNTA640" OPERATION 5 ACCESS 0 // "Excluir"

Return aRotina

/*/
############################################################################################
##                                                                                        ##
## DEFINIÇÃO DO < MODELO > * MVC                                                          ##
##                                                                                        ##
############################################################################################
/*/

//---------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Definição do Modelo (padrão MVC).

@author Wagner Sobral de Lacerda
@since 01/02/2012

@return oModel objeto do Modelo MVC
/*/
//---------------------------------------------------------------------
Static Function ModelDef()

	// Cria a estrutura a ser usada no Modelo de Dados
	Local oStruTQM := FWFormStruct(1, "TQM", /*bAvalCampo*/, /*lViewUsado*/)

	// Modelo de dados que será construído
	Local oModel

	// Cria o objeto do Modelo de Dados
	oModel := MPFormModel():New("MNTA640", , {|oModel| fMPosValid(oModel) }/*bPosValid*/)

		//--------------------------------------------------
		// Componentes do Modelo
		//--------------------------------------------------

		// Adiciona ao modelo um componente de Formulário Principal
		oModel:AddFields("TQMMASTER"/*cID*/, /*cIDOwner*/, oStruTQM/*oModelStruct*/, /*bPre*/, /*bPost*/, /*bLoad*/)

			// Adiciona a descrição do Modelo de Dados (Geral)
			oModel:SetDescription(STR0005/*cDescricao*/) // "Tipos de Combustíveis"

Return oModel

/*/
############################################################################################
##                                                                                        ##
## DEFINIÇÃO DA < VIEW > * MVC                                                            ##
##                                                                                        ##
############################################################################################
/*/

//---------------------------------------------------------------------
/*/{Protheus.doc} ViewDef
Definição da View (padrão MVC).

@author Wagner Sobral de Lacerda
@since 01/02/2012

@return oView objeto da View MVC
/*/
//---------------------------------------------------------------------
Static Function ViewDef()

	// Cria um objeto de Modelo de dados baseado no ModelDef() do fonte informado
	Local oModel := FWLoadModel("MNTA640")

	// Cria a estrutura a ser usada na View
	Local oStruTQM := FWFormStruct(2, "TQM", /*bAvalCampo*/, /*lViewUsado*/)

	// Interface de visualização construída
	Local oView

	// Cria o objeto de View
	oView := FWFormView():New()

		// Define qual o Modelo de dados será utilizado na View
		oView:SetModel(oModel)

		//--------------------------------------------------
		// Componentes da View
		//--------------------------------------------------

		// Adiciona no View um controle do tipo formulário (antiga Enchoice)
		oView:AddField("VIEW_TQMMASTER"/*cFormModelID*/, oStruTQM/*oViewStruct*/, "TQMMASTER"/*cLinkID*/, /*bValid*/)

			// Cria os componentes "box" horizontais para receberem elementos da View
			oView:CreateHorizontalBox("BOX_MASTER"/*cID*/, 100/*nPercHeight*/, /*cIDOwner*/, /*lFixPixel*/, /*cIDFolder*/, /*cIDSheet*/)

		// Relaciona o identificador (ID) da View com o "box" para exibição
		oView:SetOwnerView("VIEW_TQMMASTER"/*cFormModelID*/, "BOX_MASTER"/*cIDUserView*/)

	//Inclusão de itens nas Ações Relacionadas de acordo com O NGRightClick
	NGMVCUserBtn(oView)

Return oView

/*/
############################################################################################
##                                                                                        ##
## DEFINIÇÃO DAS VALIDAÇÕES * MVC                                                         ##
##                                                                                        ##
############################################################################################
/*/

//---------------------------------------------------------------------
/*/{Protheus.doc} fMPosValid
Pós-validação do modelo de dados.

@author Wagner Sobral de Lacerda
@since 01/02/2012

@param oModel
	Objeto do modelo de dados * Obrigatório

@return .T./.F.
/*/
//---------------------------------------------------------------------
Static Function fMPosValid(oModel)

	Local lReturn 	:= .T.
	Local aAreaTQM := TQM->( GetArea() )

	Local nOperation := oModel:GetOperation() // Operação de ação sobre o Modelo
	Local oModelTQM := oModel:GetModel("TQMMASTER")

	Private aCHKSQL := {} // Variável para consistência na exclusão (via SX9)
	Private aCHKDEL := {} // Variável para consistência na exclusão (via Cadastro)

	// Recebe SX9 - Formato:
	// 1 - Domínio (tabela)
	// 2 - Campo do Domínio
	// 3 - Contra-Domínio (tabela)
	// 4 - Campo do Contra-Domínio
	// 5 - Condição SQL
	// 6 - Comparação da Filial do Domínio
	// 7 - Comparação da Filial do Contra-Domínio
	aCHKSQL := NGRETSX9("TQM", {"TQG","TQH","TQN","TQI", "TQQ", "TT8"})

	// Recebe relação do Cadastro - Formato:
	// 1 - Chave
	// 2 - Alias
	// 3 - Ordem (Índice)
	aAdd(aCHKDEL, {"TQM->TQM_CODCOM", "TQG", 2})

	If nOperation == MODEL_OPERATION_DELETE //Exclusão

		cCodCom := TQM->TQM_CODCOM
		cConven := TQM->TQM_CONVEN

		//1ª Query para validar a exclusão do combustível pois a TQH não possui campo de Convênio
		cAliasQry := GetNextAlias()
		BeginSql alias cAliasQry

			SELECT COUNT(*) AS QTDCON
			FROM %table:TQF% TQF
				INNER JOIN %table:TQH% TQH
					ON TQF.TQF_CODIGO = TQH.TQH_CODPOS AND TQF.TQF_LOJA = TQH.TQH_LOJA AND TQF.TQF_FILIAL = TQH.TQH_FILIAL
						AND TQH.%notDel%
				INNER JOIN %table:TQM% TQM
					ON TQM.TQM_FILIAL = TQH.TQH_FILIAL AND TQM.TQM_CODCOM = TQH.TQH_CODCOM AND TQM.TQM_CONVEN = TQF.TQF_CONVEN
						AND TQM.%notDel%
			WHERE TQM.TQM_CODCOM = %exp:cCodCom% AND TQM.TQM_CONVEN = %exp:cConven%
				  	AND TQF.%notDel%
		EndSql

		dbSelectArea( cAliasQry )
		If ( cAliasQry )->QTDCON > 0
			Help(" ",1,"NGINTMOD",,"PRECOS DOS COMBUSTIVEIS" + " (TQH)",5,1)
			lReturn := .F.
		EndIf
		( cAliasQry )->( dbCloseArea() )

		//2ª Query para validar a exclusão do combustível pois a TQI não possui campo de Convênio
		cAliasQry := GetNextAlias()
		BeginSql alias cAliasQry

			SELECT COUNT(*) AS QTDCON
			FROM %table:TQF% TQF
				INNER JOIN %table:TQI% TQI
					ON TQF.TQF_CODIGO = TQI.TQI_CODPOS AND TQF.TQF_LOJA = TQI.TQI_LOJA AND TQF.TQF_FILIAL = TQI.TQI_FILIAL
						AND TQI.%notDel%
				INNER JOIN %table:TQM% TQM
					ON TQM.TQM_FILIAL = TQI.TQI_FILIAL AND TQM.TQM_CODCOM = TQI.TQI_CODCOM AND TQM.TQM_CONVEN = TQF.TQF_CONVEN
						AND TQM.%notDel%
			WHERE TQM.TQM_CODCOM = %exp:cCodCom% AND TQM.TQM_CONVEN = %exp:cConven%
				  	AND TQF.%notDel%
		EndSql

		dbSelectArea( cAliasQry )
		If ( cAliasQry )->QTDCON > 0
			Help(" ",1,"NGINTMOD",,"TANQUES DE COMBUSTIVEIS" + " (TQI)",5,1)
			lReturn := .F.
		EndIf
		( cAliasQry )->( dbCloseArea() )

		//3ª Query para validar a exclusão do combustível pois a TQN não possui campo de Convênio
		cAliasQry := GetNextAlias()
		BeginSql alias cAliasQry

			SELECT COUNT(*) AS QTDCON
			FROM %table:TQF% TQF
				INNER JOIN %table:TQN% TQN
					ON TQF.TQF_CODIGO = TQN.TQN_POSTO AND TQF.TQF_LOJA = TQN.TQN_LOJA
						AND TQN.%notDel%
				INNER JOIN %table:TQM% TQM
					ON TQM.TQM_CODCOM = TQN.TQN_CODCOM AND TQM.TQM_CONVEN = TQF.TQF_CONVEN
						AND TQM.%notDel%
			WHERE TQM.TQM_CODCOM = %exp:cCodCom% AND TQM.TQM_CONVEN = %exp:cConven%
				  	AND TQF.%notDel%
		EndSql

		dbSelectArea( cAliasQry )
		If ( cAliasQry )->QTDCON > 0
			Help(" ",1,"NGINTMOD",,"ENTRADA MANUAL ABASTECIMENTO" + " (TQN)",5,1)
			lReturn := .F.
		EndIf
		( cAliasQry )->( dbCloseArea() )

		//4ª Query para validar a exclusão do combustível pois a TQQ não possui campo de Convênio
		cAliasQry := GetNextAlias()
		BeginSql alias cAliasQry

			SELECT COUNT(*) AS QTDCON
			FROM %table:TQF% TQF
				INNER JOIN %table:TQQ% TQQ
					ON TQF.TQF_CODIGO = TQQ.TQQ_POSTO AND TQF.TQF_LOJA = TQQ.TQQ_LOJA AND TQF.TQF_FILIAL = TQQ.TQQ_FILIAL
						AND TQQ.%notDel%
				INNER JOIN %table:TQM% TQM
					ON TQM.TQM_FILIAL = TQQ.TQQ_FILIAL AND TQM.TQM_CODCOM = TQQ.TQQ_CODCOM AND TQM.TQM_CONVEN = TQF.TQF_CONVEN
						AND TQM.%notDel%
			WHERE TQM.TQM_CODCOM = %exp:cCodCom% AND TQM.TQM_CONVEN = %exp:cConven%
				  	AND TQF.%notDel%
		EndSql

		dbSelectArea( cAliasQry )
		If ( cAliasQry )->QTDCON > 0
			Help(" ",1,"NGINTMOD",,"ABASTECIMENTOS REJEITADOS" + " (TQQ)",5,1)
			lReturn := .F.
		EndIf
		( cAliasQry )->( dbCloseArea() )

		//Query para validar a exclusão do combustível pois a TT8 não possui campo de Convênio
		cAliasQry := GetNextAlias()
		BeginSql alias cAliasQry

			SELECT COUNT(*) AS QTDCON
			FROM %table:TQF% TQF
				INNER JOIN %table:TQN% TQN
					ON TQF.TQF_CODIGO = TQN.TQN_POSTO AND TQF.TQF_LOJA = TQN.TQN_LOJA AND TQF.TQF_FILIAL = TQN.TQN_FILIAL
						AND TQN.%notDel%
				INNER JOIN %table:TT8% TT8
					ON TQN.TQN_FROTA = TT8.TT8_CODBEM AND TQN.TQN_CODCOM = TT8.TT8_CODCOM AND TQN.TQN_FILIAL = TT8.TT8_FILIAL
						AND TQF.TQF_FILIAL = TT8.TT8_FILIAL AND TT8.%notDel%
				INNER JOIN %table:TQM% TQM
					ON TQM.TQM_FILIAL = TQN.TQN_FILIAL AND TQM.TQM_CODCOM = TQN.TQN_CODCOM AND TQM.TQM_CONVEN = TQF.TQF_CONVEN
						AND TQM.%notDel%
			WHERE TQM.TQM_CODCOM = %exp:cCodCom% AND TQM.TQM_CONVEN = %exp:cConven%
				  	AND TQF.%notDel%
		EndSql

		dbSelectArea( cAliasQry )
		If ( cAliasQry )->QTDCON > 0
			Help(" ",1,"NGINTMOD",,"TANQUE DO BEM" + " (TT8)",5,1)
			lReturn := .F.
		EndIf
		( cAliasQry )->( dbCloseArea() )

		If lReturn .And. !NGCHKDEL("TQM")
			RestArea(aAreaTQM)
			lReturn := .F.
		EndIf

	Else

		If !oModelTQM:VldData()
			RestArea(aAreaTQM)
			lReturn := .F.
		EndIf

	EndIf

	RestArea(aAreaTQM)

Return lReturn

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTA640VLD
Validação de campos

@author Wexlei Silveira
@since 24/04/2019
@param cField, Caractere, nome do campo a ser validado
@param [cValue], Caractere, valor do campo a ser validado
@return lRet
@Obs.: Foi necessário garantir que o código cadastrado no campo TQM_CODCOM
seja único pois, embora a chave única da tabela inclua o convênio, muitos dos
processos relacionados (como cadastro de veículos e abastecimento) não estão
levando em consideração o convênio. Isso ocorre por uma questão conceitual que
deve ser estudada em algum momento. Antes de efetuar qualquer alteração relativo
a esta validação, é necessário considerar que a duplicidade do código pode
gerar inconsistências nos processos já citados.
/*/
//------------------------------------------------------------------------------
Function MNTA640VLD(cField, cValue)

	Local lRet   := .T.
	Local cError := ""
	Local cSoluc := ""

	Default cValue := &("M->"+AllTrim(cField))

	If cField == "TQM_CODCOM"

		dbSelectArea("TQM")
		dbSetOrder(1)
		If dbSeek(xFilial("TQM") + cValue)
			lRet := .F.
			cError := STR0007 // Código de combustível já cadastrado
			cSoluc := STR0008 // Escolha um código único para o combustível
		EndIf

	EndIf

	If !lRet
		Help(NIL, NIL, STR0006, NIL, cError, 1, 0, NIL, NIL, NIL, NIL, NIL, {cSoluc}) // Não conformidade
	EndIf

Return lRet
