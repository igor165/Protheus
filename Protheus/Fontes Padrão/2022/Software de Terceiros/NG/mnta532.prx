#INCLUDE 'MNTA532.ch'
#INCLUDE 'TOTVS.ch'
#INCLUDE 'FWMVCDEF.ch'

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTA532
Cria uma nova rotina chamada Modelo x Medida
@type   Function
@author João Ricardo Santini Zandoná
@since  01/10/2021
@return Nil
/*/
//------------------------------------------------------------------------------
Function MNTA532()

	Local oBrowse := FWMBrowse():New()

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 19, 95 )	

		oBrowse:SetAlias( 'TQT' )          // Alias da tabela utilizada
		oBrowse:SetMenuDef( 'MNTA532' )    // Nome do fonte onde esta a função MenuDef
		oBrowse:SetDescription( STR0004 )  // 'Modelo X Medidas'
		oBrowse:Activate()

	EndIf

Return

//------------------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Inicializa o MenuDef com as suas opções
@type   Function
@author João Ricardo Santini Zandoná
@since  01/10/2021
@return array, retorna quais as opções do menu ( Visualizar, Modelos )
/*/
//------------------------------------------------------------------------------
Static Function MenuDef

	Local aRotina := {}

	ADD OPTION aRotina Title STR0002	    Action 'VIEWDEF.MNTA532'	OPERATION 2 ACCESS 0
	ADD OPTION aRotina Title STR0003		Action 'VIEWDEF.MNTA532'	OPERATION 4 ACCESS 0

Return aRotina

//------------------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Inicializa o ModelDef com as suas opções
@type   Function
@author João Ricardo Santini Zandoná
@since  01/10/2021
@return objeto, leva todo o modelo que foi criado da rotina
/*/
//------------------------------------------------------------------------------
Static Function ModelDef()

	Local oStructTQT := FWFormStruct( 1, 'TQT', /*AvalCampo*/, /*lViewUsado*/ ) // Tabela com os campos que ficam fora da grid
	Local oStructTQX := FWFormStruct( 1, 'TQX', /*AvalCampo*/, /*lViewUsado*/ ) // Tabela com todos os campos

	// Remove os campos repetidos
	oStructTQX:RemoveField( 'TQX_MEDIDA' )

	// Cria o objeto do Modelo de Dados
	oModel := MPFormModel():New( 'MNTA532', {||MNTA532GRA()}, {||MNT532TDOK()}, /*CommitInfo*/, /*bCancel*/ )

	// Adiciona ao modelo uma estrutura de formulário de edição por campo
	oModel:AddFields( 'MNTA532_TQT', Nil, oStructTQT, /*LinePre*/, /*Pos*/, /*bLoad*/ )

	// Adiciona ao modelo uma estrutura de formulário de edição por grid
	oModel:AddGrid( 'MNTA532_TQX', 'MNTA532_TQT', oStructTQX, /*Pre*/, /*Pos*/, /*bPreVal*/, /*bPosVal*/, /*bLoad*/ )

	// Faz o relacionamento entre os componentes do oModel
	oModel:SetRelation( 'MNTA532_TQX', {{ 'TQX_FILIAL', 'xFilial( "TQX" )' }, ;
									   { 'TQX_MEDIDA', 'TQT_MEDIDA' }}, ;
									   TQX->( IndexKey( 1 ) ) )

	oModel:SetPrimaryKey( { 'TQT_FILIAL', 'TQT_MEDIDA' } ) // TQT_FILIAL+TQT_MEDIDA

	// Permite que todas as linhas da grid TQX possam ser excluidas
	oModel:GetModel( 'MNTA532_TQX' ):SetOptional(.T.)

	// Adiciona a descricao do Modelo de Dados
	oModel:SetDescription( STR0004 ) // Modelo X Medidas

	// oModel:SetActivate( bSetActiv )
	oModel:GetModel( 'MNTA532_TQX' ):SetUniqueLine( { 'TQX_TIPMOD' } )
    
Return oModel

//------------------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Inicializa o ViewDef com as suas opções
@type   Function
@author João Ricardo Santini Zandoná
@since  01/10/2021
@return object, variável responsável pela construção da View.
/*/
//------------------------------------------------------------------------------	
Static Function ViewDef()

	Local oModel	  := FWLoadModel( 'MNTA532' ) // Cria um objeto de Modelo de Dados baseado no ModelDef do fonte inFormado
	Local oStructTQX  := FWFormStruct( 2, 'TQX' ) // Cria a estrutura a ser usada na View
	Local oView		  := FWFormView():New()       // Cria o objeto de View

	oView:SetModel( oModel ) // Objeto do model a se associar a view.

	// Remove o campo repetido em tela
	oStructTQX:RemoveField( 'TQX_MEDIDA' )
	oStructTQX:RemoveField( 'TQX_DESMED' )

	// Adiciona no nosso View um controle do tipo FormFields( antiga enchoice )
	oView:AddField( 'MNTA532_TQT', FWFormStruct( 2, 'TQT' ), /*cLinkID*/ )

	// Adiciona no nosso View um controle do tipo FormGrid( antiga newgetdados )
	oView:AddGrid( 'MNTA532_TQX', oStructTQX, 'MNTA532_TQX' )

	// Criar um 'box' horizontal para receber algum elemento da view
	oView:CreateHorizontalBox( 'SUPERIOR', 40, /*cIDOwner*/, /*lFixPixel*/, /*cIDFolder*/, /*cIDSheet*/ )
	oView:CreateHorizontalBox( 'INFERIOR', 60, /*cIDOwner*/, /*lFixPixel*/, /*cIDFolder*/, /*cIDSheet*/ )

	// Relaciona o ID da View com o 'box' para exibicao
	oView:SetOwnerView( 'MNTA532_TQT', 'SUPERIOR' )
	oView:SetOwnerView( 'MNTA532_TQX', 'INFERIOR' )

	// Inclusão de itens no Ações Relacionadas de acordo com o NGRightClick
	NGMVCUserBtn( oView )

Return oView

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNT532TDOK
Última validação antes de efetuar a ação ( Incluir, alterar, ou excluir ),
valida novamente se os campos estão corretos. Essa função está validando apenas
se os campos Sulcoo, Kmespo, Lonas, estão com valores positivos, essa validação
está sendo feita no TDOK para que funcione também para usuários com versões
inferiores a 12.1.37
@type   Function
@author João Ricardo Santini Zandoná
@since  15/10/2021
@return Logica, Retorna se todas as validações passaram, ou se alguma delas não 
passou.
/*/
//------------------------------------------------------------------------------
Function MNT532TDOK()

	Local oModel  := FWModelActive()
	Local lReturn := .T.
	
	DO CASE
		CASE !Positivo( oModel:GetValue( 'MNTA532_TQX', 'TQX_SULCOO' ) )
			lReturn := .F.
		CASE !Positivo( oModel:GetValue( 'MNTA532_TQX', 'TQX_KMESPO' ) )
			lReturn := .F.
		CASE !Positivo( oModel:GetValue( 'MNTA532_TQX', 'TQX_LONAS' ) )
			lReturn := .F.
	END CASE

Return lReturn

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNT532VLD
Recebe o campo que solicitou validação e chama a sua função de validação
@type   Function
@author João Ricardo Santini Zandoná
@since  05/10/2021
@param  cCampo, caractere, indica para a função qual foi o campo que chamou a validação
@return logica, carrega o resultado da validação solicitada pelo campo
/*/
//------------------------------------------------------------------------------	
Function MNT532VLD(cCampo)

	Local lReturn := .T.

	DO CASE
		CASE cCampo == 'TQX_TIPMOD'
			lReturn := A532Exist()
		CASE cCampo == 'TQX_CALMIN'
			lReturn := Positivo()
		CASE cCampo == 'TQX_CALMAX'
			lReturn := Positivo()
		CASE cCampo == 'TQX_SULCOO'
			lReturn := Positivo()
		CASE cCampo == 'TQX_KMESPO'
			lReturn := Positivo()
		CASE cCampo == 'TQX_LONAS'
			lReturn := Positivo()
	END CASE

Return lReturn

//------------------------------------------------------------------------------
/*/{Protheus.doc} A532Exist
Busca a descrição do modelo do pneu
@type   Function
@author João Ricardo Santini Zandoná
@since  05/10/2021
@return logica, variável responsável por carregar o resultado da busca ( .T. quando encontrar, e .F. quando não encontrar )
/*/
//------------------------------------------------------------------------------	
Function A532Exist()              

	Local oModel  := FWModelActive()
	Local lReturn := .T.

	If ExistCPO( 'TQR', oModel:GetValue( 'MNTA532_TQX', 'TQX_TIPMOD' ) )   

		DbSelectArea( 'TQR' )
		dbSetOrder( 1 ) //Filial + Tipo Modelo 

		If dbSeek( xFilial( 'TQX' ) + oModel:GetValue( 'MNTA532_TQX', 'TQX_TIPMOD' ) )
			
			oModel:LoadValue( 'MNTA532_TQX', 'TQX_DESMOD', TQR->TQR_DESMOD  )  
		
		EndIf
	
	Else
		
		lReturn := .F.  
	
	Endif          

Return lReturn      

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTA532GRA
Executa o ponto de entrada
@type   Function
@author João Ricardo Santini Zandoná
@since  05/10/2021
@return logica, variável responsável por carregar o resultado da execução do ponto de entrada ( .T. quando for executado com sucesso, e .F. quando não for )
/*/
//------------------------------------------------------------------------------
Function MNTA532GRA()

	Local lReturn := .T.
	Local oModel  := FWModelActive()

	If ExistBlock( 'MNTA5321' )
		
		lReturn := ExecBlock( 'MNTA5321',.F.,.F., {oModel} )
	
	EndIf

Return lReturn
