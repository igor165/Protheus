#INCLUDE "PROTHEUS.CH"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTV026
Quantidade rodada em relacao aos parametros

@param De_Data			Data inicio
@param Ate_Data			Ate data
@param De_Ccusto		De centro de custo
@param Ate_Ccusto		Ate centro de custo
@param De_CenTra		De centro de trabalho
@param Ate_CenTra		Ate sentro de trabalho
@param De_Familia		De Familia
@param Ate_Familia		Ate Familia
@param De_Modelo		De Modelo
@param Ate_Modelo		Ate Modelo
@param Aditivo			Aditivo

@author Thiago Olis Machado
@since 01/03/2010
@author Rodrigo Luan Backes
@since 01/07/2016
@version MP11
@return nResult - Quantidade Rodada
/*/
//---------------------------------------------------------------------
Function MNTV026(De_Data,Ate_Data,De_Ccusto,Ate_Ccusto,De_CenTra,Ate_CenTra,De_Familia,Ate_Familia,De_Modelo,Ate_Modelo,Aditivo)

	Local aAreaOLD   := GetArea(), nQtdRod := 0
	Local De_CcustoL := If(De_Ccusto  = Nil,Space(NGSEEKDIC("SX3","TQN_CCUSTO",2,"X3_TAMANHO")),De_Ccusto)
	Local De_CenTraL := If(De_CenTra  = Nil,Space(NGSEEKDIC("SX3","TQN_CENTRA",2,"X3_TAMANHO")),De_CenTra)
	Local De_FamiliaL:= If(De_Familia = Nil,Space(NGSEEKDIC("SX3","T9_CODFAMI",2,"X3_TAMANHO")),De_Familia)
	Local De_ModeloL := If(De_Modelo  = Nil,Space(NGSEEKDIC("SX3","T9_TIPMOD" ,2,"X3_TAMANHO")),De_Modelo)
	Local aAuxSTP    := {}, nScan := 0, nX := 0

	// Variáveis de Histórico de Indicadores
	Local lMV_HIST := NGI6MVHIST()
	Local aParams := {}
	Local cCodIndic := "MNTV026"
	Local nResult := 0

	// Armazena os Parâmetros
	If lMV_HIST
		aParams := {}
		aAdd(aParams, {"DE_DATA"    , De_Data})
		aAdd(aParams, {"ATE_DATA"   , Ate_Data})
		aAdd(aParams, {"DE_CCUSTO"  , De_Ccusto})
		aAdd(aParams, {"ATE_CCUSTO" , Ate_Ccusto})
		aAdd(aParams, {"DE_CENTRA"  , De_CenTra})
		aAdd(aParams, {"ATE_CENTRA" , Ate_CenTra})
		aAdd(aParams, {"DE_FAMILIA" , De_Familia})
		aAdd(aParams, {"ATE_FAMILIA", Ate_Familia})
		If Ate_Modelo != nil
			aAdd(aParams, {"DE_MODELO"  , De_Modelo})
			aAdd(aParams, {"ATE_MODELO" , Ate_Modelo})
		EndIf
		NGI6PREPPA(aParams, cCodIndic)
	EndIf

	If ValType(De_Data) != "D" .or. ValType(Ate_Data) != "D"
		NGI6PREPVA(cCodIndic, nResult)
		Return nResult
	Endif

	cAliasQry := GetNextAlias()
	// Query
	If lMV_HIST
		cQuery := " SELECT * "
	Else
		cQuery := " SELECT STP.TP_FILIAL, STP.TP_CODBEM, STP.TP_ACUMCON "
	EndIf
	cQuery += " FROM "+RetSQLName("STP")+" STP "
	cQuery += " INNER JOIN "+RetSQLName("ST9")+" ST9 ON "
	cQuery += " ( "
	cQuery += " ST9.T9_CODBEM = STP.TP_CODBEM "
	If ValType(De_FamiliaL) == "C"
		cQuery += " AND ST9.T9_CODFAMI >= " + ValToSQL(De_FamiliaL) + " "
	EndIf
	If ValType(Ate_Familia) == "C"
		cQuery += " AND ST9.T9_CODFAMI <= " + ValToSQL(Ate_Familia) + " "
	EndIf
	//Verifica se o campo Ate_Modelo está preenchido e quando é Rendimento Médio de Aditivo (RMDA)
	If Ate_Modelo != nil
		If ValType(De_ModeloL) == "C"
			cQuery += " AND ST9.T9_TIPMOD >= " + ValToSQL(De_ModeloL) + " "
		EndIf
		If ValType(Ate_Modelo) == "C"
			cQuery += " AND ST9.T9_TIPMOD <= " + ValToSQL(Ate_Modelo) + " "
		EndIf
	EndIf

	cQuery += "  AND ST9.D_E_L_E_T_ <> '*' "
	cQuery += " ) "
	cQuery += " WHERE "
	cQuery += " STP.TP_FILIAL = " + ValToSQL(xFilial("STP")) + " "
	cQuery += " AND STP.TP_DTLEITU BETWEEN " + ValToSQL(De_Data) + " AND " + ValToSQL(Ate_Data) + " "
	If ValType(De_CcustoL) == "C"
		cQuery += " AND STP.TP_CCUSTO >= " + ValToSQL(De_CcustoL) + " "
	EndIf
	If ValType(Ate_Ccusto) == "C"
		cQuery += " AND STP.TP_CCUSTO <= " + ValToSQL(Ate_Ccusto) + " "
	EndIf
	If ValType(De_CenTraL) == "C"
		cQuery += " AND STP.TP_CENTRAB >= " + ValToSQL(De_CenTraL) + " "
	EndIf
	If ValType(Ate_CenTra) == "C"
		cQuery += " AND STP.TP_CENTRAB <= " + ValToSQL(Ate_CenTra) + " "
	EndIf
	cQuery += " AND STP.TP_TEMCONT = 'S' "
	cQuery += " AND STP.TP_TIPOLAN IN ('A','I') "
	cQuery += " AND STP.D_E_L_E_T_ <> '*' "
	cQuery += " ORDER BY STP.TP_FILIAL,STP.TP_CODBEM,STP.TP_DTLEITU,STP.TP_HORA "

	cQuery := ChangeQuery(cQuery)
	dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)
	NGI6PREPDA(cAliasQry, cCodIndic)

	dbSelectArea(cAliasQry)
	dbGoTop()
	While !Eof()
		nScan := aScan(aAuxSTP, {|x| x[1] == (cAliasQry)->TP_CODBEM })
		If nScan == 0
			aAdd(aAuxSTP, {(cAliasQry)->TP_CODBEM, {}})
			nScan := Len(aAuxSTP)
		EndIf
		aAdd(aAuxSTP[nScan][2], (cAliasQry)->TP_ACUMCON)
		dbSkip()
	End
	(cAliasQry)->(dbCloseArea())
	For nX := 1 To Len(aAuxSTP)
		If Len(aAuxSTP[nX][2]) > 1
			//aAuxSTP[nX][2][1] pois é a primeira posição do contador
			nQtdRod += ( aAuxSTP[nX][2][Len(aAuxSTP[nX][2])] - aAuxSTP[nX][2][1] )
		EndIf
	Next nX

	// RESULTADO
	nResult := nQtdRod
	NGI6PREPVA(cCodIndic, nResult)

	RestArea(aAreaOLD)

Return nResult