#INCLUDE "MNTA720.ch"
#Include "Protheus.ch"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNTA720  ³ Autor ³ Marcos Wagner Junior  ³ Data ³ 21/09/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa que permitir registrar o envio de pneus           ³±±
±±³          | transferidos entre filiais. O controle é feito por lote, a ³±±
±±³          ³ cada lote são relacionados os pneus que serão enviados para³±±
±±³          | a filial de destino.                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA720()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Guarda conteudo e declara variaveis padroes ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Local aNGBEGINPRM := {}
	Local aCoresBrw   := {}
	Local cFilMbroTR7 := ""
	Local cCondTR7    := ""

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 95 )

		Private cProdTerc := If(FindFunction("NGProdMNT"), NGProdMNT("T")[1], GetMv("MV_PRODTER")) //Ira verificar apenas o primeiro Produto Terceiro do parametro
		Private lEstoque := GetMv("MV_NGMNTES") == "S" //Integrado com Estoque
		Private lCompras := GetMv("MV_NGMNTCM") == "S" //Integrado com Compras
		// INICIO
		// Variaveis usadas na geracao de solicitacao de compras
		// NAO MEXER....
		Private aDataOPC1 := {}, aDataOPC7 := {}, aOPC1 := {}, aOPC7 := {}
		Private vVetP     := {}, aNumSC1 := {}
		Private lTemNf := .F.
		// FIM

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Define Array contendo as Rotinas a executar do programa      ³
		//³ ----------- Elementos contidos por dimensao ------------     ³
		//³ 1. Nome a aparecer no cabecalho                              ³
		//³ 2. Nome da Rotina associada                                  ³
		//³ 3. Usado pela rotina                                         ³
		//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
		//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
		//³    2 - Simplesmente Mostra os Campos                         ³
		//³    3 - Inclui registros no Bancos de Dados                   ³
		//³    4 - Altera o registro corrente                            ³
		//³    5 - Remove o registro corrente do Banco de Dados          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		Private aRotina := MenuDef()

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Define o cabecalho da tela de atualizacoes                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Private cCadastro := STR0007 //"Abertura de Ordens de Serviço em Lote"
		Private aCHKDEL := {}, bNGGRAVA
		Private cServRef := AllTrim(GetMv("MV_NGSEREF"))
		Private cStatRef := AllTrim(GetMv("MV_NGSTAGR"))
		Private cServCon := AllTrim(GetMv("MV_NGSECON"))
		Private aServCon := StrTokArr(cServCon,";")
		Private cStatCon := AllTrim(GetMv("MV_NGSTAGC"))
		Private cAnalise := GetMv("MV_NGSTAAT")
		Private cParMot  := GetNewPar("MV_NGMODEF"," ")
		Private lValDoc  := (SuperGetMv("MV_NGOSNFE",.F.,"2") == "1") .and. (lEstoque .Or. lCompras)

		//checa se é integrado com pneus e se servico altera vida util
		Private lVdUtPne := NGSEEK("ST4",cServRef,1,"T4_VIDAUTI") == "S" .And. AllTrim(SuperGetMv("MV_NGPNEUS",.F.,"N")) == "S"

		Private lNovoBrw := If(TcSrvType() == "AS/400" .OR. TcSrvType() == "iSeries",.F.,.T.)
		Private aVETINR  := {}
		Private lReceber := .f.
		Private lCodbem  := .t.
		Private lDESEN   := .f.
		Private nTotal   := 0
		Private cPerg    := "MNTA720"
		Private lRetTRA  := If(NGRETORDEM("TRA","TRA_FILIAL+TRA_FORNEC+TRA_LOJA+TRA_SERVIC+TRA_ESPECI+TRA_MEDIDA+TRA_BANDA",.T.) = 0,.f.,.t.)
		Private aChoice  := If(lRetTRA,{'TR7_LOTE','TR7_DTLOTE','TR7_HRLOTE','TR7_FORNEC','TR7_NOMFOR','TR7_LOJA','TR7_SERVIC','TR7_NOMSER','TR7_ESPECI','TR7_NOMESP','TR7_REABRE'},;
		{'TR7_LOTE','TR7_DTLOTE','TR7_HRLOTE','TR7_FORNEC','TR7_NOMFOR','TR7_LOJA','TR7_SERVIC','TR7_REABRE'})
		Private aNGButton := {}
		Private lScreenRec := .f.
		Private cUsaIntEs := AllTrim(GetMV("MV_NGMNTES"))
		Private cUsaIntCm := AllTrim(GetMv("MV_NGMNTCM"))
		Private lGeraSA := .F.
		Private aRetSA :={}

		// Variável para o Ponto de Entrada MNTA7203
		Private aMNTA7203 := {}
		// Variável para o Ponto de Entrada MNTA7204
		Private cMNTA7204 := "", lMNTA7204 := .F.
		// Variável para o Ponto de Entrada MNTA7205
		Private aMNTA7205 := {}
		// Variável para o Ponto de Entrada MNTA7206
		Private aMNTA7206 := {}
		// Variável para o Ponto de Entrada MNTA7207
		Private aMNTA7207 := {}
		// Variável para o Ponto de Entrada MNTA7208
		Private aMNTA7208 := {}

		aNGBEGINPRM := NGBEGINPRM()

		//--- Carrega variáveis Private
		MNTA720VAR()

		If NGCADICBASE('TL_NUMSA','A','STL',.F.) .And. FindFunction("NGGERASA")
			If GetNewPar("MV_NGGERSA","N") == "S" .And. cUsaIntEs == "S"
				lGeraSA := .T.
			EndIf
		EndIf

		If NGSX2MODO("TR7") <> NGSX2MODO("TR8")
			MsgAlert(STR0057+chr(13); //"Existe um problema de compartilhamento entre as tabelas TR7 e TR8."
			+STR0058,STR0059) //"Favor verificar o X2_MODO dessas tabelas para que sejam iguais."###"Atenção!"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Devolve variaveis armazenadas (NGRIGHTCLICK)                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			NGRETURNPRM(aNGBEGINPRM)

			Return .T.
		EndIf

		aGETNAO := {{'TR8_LOTE','TR8_DESENH','TR8_INDREL','TR8_MOTIVO','TR8_OS'}}
		cGETWHILE := "TR8_FILIAL == xFilial('TR8') .and. TR8_LOTE == M->TR7_LOTE"
		cGETMAKE  := "TR7->TR7_LOTE"
		cGETKEY   := "M->TR7_LOTE"
		cGETALIAS := "TR8"

		cTUDOOK   := AllwaysTrue()
		cLINOK    := "MNT720LIN()"

		//--------------------------------------------------------------------------------
		// Ponto de Entrada para carregar um filtro personalizado para o browse
		//--------------------------------------------------------------------------------
		If ExistBlock("MNTA7204")
			cMNTA7204 := ExecBlock("MNTA7204", .F., .F., {lNovoBrw})
			If ValType(cMNTA7204) == "C"
				lMNTA7204 := .T.
			EndIf
		EndIf

		//--------------------------------------------------------------------------------
		// Ponto de Entrada para carregar as cores de legenda do browse
		//--------------------------------------------------------------------------------
		If ExistBlock("MNTA7206")
			aMNTA7206 := ExecBlock("MNTA7206", .F., .F.)
			If ValType(aMNTA7206) == "A" .And. Len(aMNTA7206) > 0
				aCoresBrw := aClone( aMNTA7206 )
			EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Filtro no Browse                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lNovoBrw
			dDtaReD := CtoD('  /  /  ')
			Dbselectarea("TR7")
			DbSetOrder(1)
			aCoresBrw := { {'Empty(TR7_DTRECI) .And. TR7_REABRE = "2" ','BR_VERDE'},;
				{'!Empty(TR7_DTRECI) .And. TR7_REABRE = "1"','BR_AMARELO'},;
				{'!Empty(TR7_DTRECI) .And. TR7_REABRE = "2"','BR_VERMELHO'}}

			MBROWSE(6,1,22,75,"TR7",,,,,,aCoresBrw,,,,,,,,cFilMbroTR7)
		Else
			Private aIndTR7a    := {}
			Private bFilTr7Brw := {|| Nil}

			dbSelectArea("TR7")
			cCondTR7 := 'Empty(TR7_DTRECI)'
			If lMNTA7204
				cCondTR7 := cMNTA7204
			EndIf
			bFilTr7Brw := {|| FilBrowse("TR7",@aIndTR7a,@cCondTR7) }
			Eval(bFilTr7Brw)

			DbSelectArea("TR7")
			Dbsetorder(1)
			mBrowse(6,1,22,75,"TR7",,,,,,aCoresBrw)
			aEval(aIndTR7a,{|x| Ferase(x[1]+OrdBagExt())})
			ENDFILBRW("TR7",aIndTR7a)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Devolve a condicao original do arquivo principal             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("TR7")
		Set Filter To
		dbSetOrder(1)
		dbSeek(xFilial("TR7"))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Retorna conteudo de variaveis padroes       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		NGRETURNPRM(aNGBEGINPRM)

	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} MNT720IN
Incluir

@author  Marcos Wagner Junior
@since   13/11/06
@version P12
/*/
//-------------------------------------------------------------------
Function MNT720IN(cAlias, nReg, nOpcX)

	Local bCampo
	Local i
	Local x
	Local nI
	Local oFont   	:= TFont():New("Arial",9,15,.T.,.T.,,,,.F.)
	Local oMenu
	Local oDlg
	Local aNoFields 	:= {}
	Local aNoChoice 	:= {}
	Local aNewChoice 	:= {}
	Local aOldChoice 	:= {}
	Local cHoraIni
	Local dDataIni
	Local lValidDlg := .F.
	Local lMNTA7209 := ExistBlock("MNTA7209")
	Local nFCount
	Local cField
	Local cMemory
	Local nCusto 	:= 0
	Local cIndRel 	:= "2" // Variavel para verificar se o servico foi realizado
	Local cOrdem 	:= ''
	Local nXX
	Local aNgHeader:= {}
	Local nTamTot	:= 0
	Local nInd		:= 0
	Local cCampo	:= ""
	Local cRelação	:= ""
	Local cXX
	Local cYY

	Private nLinNG
	Private oTotal
	Private oGet720
	Private lFIELD
	Private cSulco
	Private cLote
	Private cSpace
	Private aHeaderIni := {}
	Private aColsIni   := {}
	Private cServTR7   := ''
	Private cEspeTR7   := ''
	Private cFornTR7   := ''
	Private cLojaTR7   := ''

	If nOpcX == 3
		lCodbem := .t.
	Endif

	// Monta a entrada de dados do arquivo
	Private aTELA[0][0]
	Private aGETS[0]
	Private aHeader[0]
	Private aCOLS[0]
	Private Continua
	Private nUsado		:=0
	Private aAC 		:= {STR0008,STR0009}
	Private aCRA		:= {STR0009,STR0010,STR0008} // "Abandona"###"Confirma"###"Confirma"###"Redigita"###"Abandona"
	Private aSize 		:= MsAdvSize(,.f.,430)
	Private aObjects 	:= {}
	Private nTam055Per := 0
	Private nTam045Per := 0
	Private nTam005Per := 0
	Private nTamHoriz  := 0
	Private nTamGetDds := 0
	Private nLinIniTla := 0
	Private nColIniTla := 0
	Private nLinFimTla := 0
	Private nColFimTla := 0
	Private oPnlEnchoi := Nil
	Private oPnlLeft   := Nil
	Private oPnlRight  := Nil
	Private oPnlTot    := Nil
	Private oPnlGetDad := Nil
	Private oPnlValTot := Nil
	Private oEnchoice  := Nil
	Private oSize      := Nil

	f720MtTela()

	nTotal := 0
	If nOpcX == 3
		lReceber := .t.
	ElseIf nOpcX == 4
		lReceber := .f.
	Endif

	Aadd(aObjects,{040,040,.t.,.t.})
	Aadd(aObjects,{100,100,.t.,.t.})
	Aadd(aObjects,{020,020,.t.,.t.})

	aInfo := {aSize[1],aSize[2],aSize[3],aSize[4],0,0}
	aPosObj := MsObjSize(aInfo, aObjects,.f.)

	bCampo  := {|nCPO| Field(nCPO)}
	lScreenRec := .F.
	// Inibe exclusão ou alteração de registro já recebido
	If nOpcX == 4 .Or. nOpcX == 5
		If !Empty(TR7->TR7_DTRECI) .And. TR7->TR7_REABRE == "2"
			Help(Nil, Nil, STR0013, Nil, STR0060, 1, 0) // "ATENÇÃO" # "O Lote selecionado já foi recebido."
			Return 0
		ElseIf  (TR7->TR7_REABRE == "1" .Or. !Empty(TR7->TR7_DTRECI)) .And. nOpcX == 5
			Help(Nil, Nil, STR0013, Nil, STR0060, 1, 0) // "ATENÇÃO" # "O Lote selecionado já foi recebido."
			Return .F.
		EndIf
	EndIf

	dbSelectArea("TR7")
	dbSetOrder(1)
	FOR i := 1 TO FCount()
		M->&(Eval(bCampo,i)) := &(Eval(bCampo,i))
		If nOPCX == 3 //INCLUIR
			IF     ValType(M->&(Eval(bCampo,i))) == "C"
				M->&(Eval(bCampo,i)) := Space(Len(M->&(Eval(bCampo,i))))
			ELSEIF ValType(M->&(Eval(bCampo,i))) == "N"
				M->&(Eval(bCampo,i)) := 0
			ELSEIF ValType(M->&(Eval(bCampo,i))) == "D"
				M->&(Eval(bCampo,i)) := cTod("  /  /  ")
			ELSEIF ValType(M->&(Eval(bCampo,i))) == "L"
				M->&(Eval(bCampo,i)) := .F.
			ELSEIF ValType(M->&(Eval(bCampo,i))) == "M"
				M->&(Eval(bCampo,i)) := Space(50)
			ENDIF
		Endif
	Next i

	If nOPCX == 3
		RegToMemory("TR7", .T., .T., .T.)

		aArea := GetArea()

		//Ajusta o sequencia da TR7
		DbSelectArea("TR7")
		DbSetOrder(1)

		//Tratamento para evitar duplicação de número de O.S. em Lote
		If DbSeek(xFilial("TR7") + M->TR7_LOTE )
			ConfirmSX8()
			M->TR7_LOTE := GetSXENum( "TR7","TR7_LOTE" )
		EndIf

		RestArea( aArea )

	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta o aHEADER e o aCOLS da Getdados                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpcX == 3
		aAdd( aNoFields, 'TR8_LOTE'   )
		aAdd( aNoFields, 'TR8_DESENH' )
		aAdd( aNoFields, 'TR8_INDREL' )
		aAdd( aNoFields, 'TR8_MOTIVO' )
		aAdd( aNoFields, 'TR8_OS'     )
		aAdd( aNoFields, 'TR8_CREDIT' )
		aAdd( aNoFields, 'TR8_SULCO'  )
		aAdd( aNoFields, 'TR8_DESMOT' )
		aAdd( aNoFields, 'TR8_ORDEM'  )
	ElseIf nOpcX == 4
		aAdd(aNoFields, 'TR8_LOTE')
		aAdd(aNoFields, 'TR8_BANDA')
		aAdd(aNoFields, 'TR8_GARANT')
		aAdd(aNoFields, 'TR8_OS')
		aAdd(aNoFields, 'TR8_CREDIT')
	EndIf

	//--------------------------------------------------------------------------------
	// Ponto de Entrada para carregar os campos que NÃO devem ser apresentados em tela
	//--------------------------------------------------------------------------------
	lFIELD := (TYPE("aCHOICE") == "A")
	If lFIELD
		lFIELD := !empty(aCHOICE)
	Endif
	aOldChoice := If(lFIELD, aClone(aChoice), {})
	If ExistBlock("MNTA7203")
		aNewChoice := If(lFIELD, aClone(aChoice), {})

		aNoChoice := aClone( NGCAMPNSX3("TR7",aNewChoice) )
		aMNTA7203 := ExecBlock("MNTA7203", .F., .F., {aNoChoice, aNoFields, nOpcX})
		If ValType(aMNTA7203) == "A" .And. Len(aMNTA7203) >= 2
			aNoChoice := aClone( aMNTA7203[1] )
			aChoice   := aClone( NGCAMPNSX3("TR7",aNoChoice) )
			aNoFields := aClone( aMNTA7203[2] )
		EndIf
	EndIf

	cQuery := "SELECT * FROM "+RetSqlName("TR8")+" TR8 WHERE TR8.TR8_FILIAL = '"+xFilial("TR8")+"' AND "
	cQuery += "TR8.TR8_LOTE = '"+TR7->TR7_LOTE+"' AND "
	cQuery += "TR8.D_E_L_E_T_ = ' '"
	FillGetDados( 4, "TR8", 1, xFilial("TR8")+TR7->TR7_LOTE,;
	{|| "TR8_FILIAL + TR8_LOTE"},;
	{|| .T.},aNoFields,,,cQuery)

	If Empty(aCols) .or. nOPCX == 3
		aCols := BlankGetd(aHeader)
	EndIf

	//--- Carrega variáveis private
	MNTA720VAR()

	If nOPCX == 4
		lTemNf := lValDoc
		For nI := 1 to Len (aCols)
			If !lReceber .And. (cUsaIntEs == "S" .Or. cUsaIntCm == "S")
				lRealizado := .F.
				dbSelectArea("TR8")
				dbSetOrder(1)
				dbSeek(xFilial("TR8")+M->TR7_LOTE+aCols[nI][nPosCODBEM])
				cOrdem := TR8->TR8_ORDEM
				dbSelectArea("STL")
				dbSetOrder(1)
				If dbSeek(xFilial("STL")+cOrdem)
					While !Eof () .And. xFilial("STL")+cOrdem == STL->TL_FILIAL+STL->TL_ORDEM
						If STL->TL_SEQRELA == "1  "
							lRealizado := .T.
							dDataIni := If(!Empty(M->TR7_DTRECI),M->TR7_DTRECI,STL->TL_DTINICI)
							cHoraIni := If(!Empty(M->TR7_HRRECI),M->TR7_HRRECI,SubStr(Time(),1,5))
							nCusto   := STL->TL_CUSTO
						EndIf
						dbSelectArea("STL")
						dbSkip()
					End
				EndIf

				//-------------------------------------
				//INTEGRACAO POR MENSAGEM UNICA
				//-------------------------------------
				If lValDoc .And. AllTrim(GetNewPar("MV_NGINTER","N")) == "M"  //Mensagem Unica
					aCols[nI][nPosVALOR] := nCusto //TOTAL
					M->TR7_NFE    := '' //Nota Fiscal
					If NGCADICBASE('TL_SDOC','A','STL',.F.)
						M->TR7_SDOC  := '' //Serie
					Else
						M->TR7_SERIE  := '' //Serie
					EndIf
					M->TR7_DTRECI := dDataIni
					M->TR7_HRRECI := cHoraIni
					nTotal        := nTotal + aCols[nI][nPosVALOR]
					If lRealizado
						aCols[nI][nPosINDREL]  := '1' //Realizado
					Else
						aCols[nI][nPosINDREL]  := '2' //Nao Realizado
					EndIf
				Else
				
					dbSelectArea("SD1")
					dbSetOrder(9)
					If dbSeek( xFilial( 'SD1' ) + cOrdem )

						If lRealizado
						
							If M->TR7_FORNEC == SD1->D1_FORNECE
								aCols[nI][nPosVALOR]  := SD1->D1_CUSTO //TOTAL
								aCols[nI][nPosINDREL]  := '1' //Realizado
								M->TR7_NFE    := SD1->D1_DOC //Nota Fiscal
								If NGCADICBASE('TL_SDOC','A','STL',.F.)
									M->TR7_SDOC  := SD1->D1_SDOC //Serie
									M->TR7_SERIE  := SD1->D1_SERIE //Id de controle
								Else
									M->TR7_SERIE  := SD1->D1_SERIE //Serie
								EndIf
								M->TR7_DTRECI := dDataIni
								M->TR7_HRRECI := cHoraIni
								nTotal        := nTotal + aCols[nI][nPosVALOR]
							EndIf

						Else
							// ATENÇÃO # Recebimento não permitido, a N.F. encontra-se não classificada # Realizar a classificação da N.F. para o recebimento do lote.
							Help( , , STR0013, , STR0112, 1, 0, , , , , , { STR0113 } )
							Return .F.
							
						EndIf

					Else

						If lValDoc
							aCols[nI][nPosVALOR] := 0
							aCols[nI][nPosINDREL] := '2' //Nao Realizado
							If Empty(M->TR7_DTRECI)
								M->TR7_DTRECI := dDatabase
								M->TR7_HRRECI := Substr(Time(),1,5)
							Endif
						Else
							aCols[nI][nPosINDREL] := '1' //Realizado
							nTotal := nTotal + aCols[nI][nPosVALOR]
						EndIf

					EndIf

				EndIf

			Else
				aCols[nI][nPosINDREL] := '1'
				nTotal := nTotal + aCols[nI][nPosVALOR]
			EndIf

		Next

	ElseIf nOpcx = 5 .Or. nOpcx = 2
		For nI := 1 to Len (aCols)
			nTotal := nTotal + aCols[nI][nPosVALOR]
		Next
	Endif

	//--------------------------------------------------------------------------------
	// Ponto de Entrada para carregar novos Botões em tela
	//--------------------------------------------------------------------------------
	aNGButton := {}
	If ExistBlock("MNTA7205")
		aMNTA7205 := ExecBlock("MNTA7205", .F., .F., {nOpcX})
		If ValType(aMNTA7205) == "A"
			For nI := 1 To Len(aMNTA7205)
				aAdd(aNGButton, aClone(aMNTA7205[nI]))
			Next nI
		EndIf
	EndIf

	//--------------------------------------------------------------------------------
	// Ponto de Entrada para carregar o aCols de forma personalizada, de acordo com um conteúdo padrão já pré-carregado
	//--------------------------------------------------------------------------------
	If ExistBlock("MNTA7208")
		aMNTA7208 := ExecBlock("MNTA7208", .F., .F., {aCols, aHeader, nOpcX})
		If ValType(aMNTA7208) == "A" .And. Len(aMNTA7208) > 0
			aCols := aClone( aMNTA7208 )
		EndIf
	EndIf

	aPos1 := {15,1,78,315}
	nOpca := 0

	lValidDlg := ( nOpcX <> 2 )
	DEFINE MSDIALOG oDlg TITLE cCadastro From nLinIniTla,nColIniTla TO nLinFimTla,nColFimTla OF oMainWnd PIXEL Style nOR(WS_VISIBLE,WS_POPUP)

		oPnlLeft         := TPanel():New(000,000,,oDlg,,,,,CLR_WHITE,002,000)
		oPnlLeft:Align   := CONTROL_ALIGN_LEFT

		oPnlRight        := TPanel():New(000,000,,oDlg,,,,,CLR_WHITE,002,000)
		oPnlRight:Align  := CONTROL_ALIGN_RIGHT

		oPnlTot          := TPanel():New(000,000,,oDlg,,,,,CLR_WHITE,000,000)
		oPnlTot:Align    := CONTROL_ALIGN_ALLCLIENT

		oPnlEnchoi       := TPanel():New(000,000,,oPnlTot,,,,,CLR_WHITE,nTamHoriz,nTam055Per)
		oPnlEnchoi:Align := CONTROL_ALIGN_TOP

		oPnlGetDad       := TPanel():New(nTam055Per,000,,oPnlTot,,,,,CLR_WHITE,nTamHoriz,nTam045Per)
		oPnlGetDad:Align := CONTROL_ALIGN_ALLCLIENT

		oPnlValTot       := TPanel():New(000,000,,oPnlTot,,,,,CLR_WHITE,nTamHoriz,nTam005Per)
		oPnlValTot:Align := CONTROL_ALIGN_BOTTOM

		oEnchoice            := If(lFIELD,Msmget():New("TR7", RecNo(), nopcx,,,,aChoice,{0,0,0,0},,3,,,,oPnlEnchoi),Msmget():New("TR7", RecNo(), nopcx,,,,,{0,0,0,0},,3,,,,oPnlEnchoi))
		oEnchoice:oBox:Align := CONTROL_ALIGN_ALLCLIENT

		If nOpcX == 4
			oGet720 := MSGetDados():New(0,0,nTamGetDds,nTamHoriz,nOpcx,"MNT720MOT(1,.F.)","MNT720MOT(1,.T.)","",.F.,,,,Len(aCols),,,,,oPnlGetDad)
		Else
			oGet720 := MSGetDados():New(0,0,nTamGetDds,nTamHoriz,nOpcx,"MNT720LIN()","MNT720LIN()","",.T.,,,,3000,,,,,oPnlGetDad)
		Endif

		aColsIni := aClone(aCols)
		@ 2,10 Say OemToAnsi(STR0011) of oPnlValTot Pixel Font oFont //"Valor Total"
		@ 2,60 Say oTotal Var nTotal Size 70,10 Of oPnlValTot Pixel Picture '@E 999,999,999.99' Font oFont
		oTotal:Refresh()

		If Len(aSMenu) > 0
			NGPOPUP(asMenu,@oMenu)
			oDlg:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg)}
			oEnchoice:oBox:bRClicked := { |o,x,y| oMenu:Activate(x,y,oDlg)}
		EndIf

	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpca := 1, If(lValidDlg, If(oGET720:TudoOK() .And. obrigatorio(aGets,aTela), If(!MNT720ALL(nOpcX) .And. obrigatorio(aGets,aTela),;
	 													nOpca := 0,oDlg:End()), nOpca := 0), oDlg:End()) }, {|| nOpca := 0, oDlg:End()}, , aNGButton) CENTERED

	If !lValidDlg .And. nOpcX == 2
		nOpca := 0
	EndIf
	If nOpca == 1 .and. nOpcX == 5

		DbSelectArea("TR8")
		DbSetOrder(01)
		DbSeek(xFilial("TR8")+TR7->TR7_LOTE)
		While !Eof() .and. TR8->TR8_FILIAL == xFilial("TR8") .and. TR8->TR8_LOTE == TR7->TR7_LOTE

			//Verifica se existe algum insumo aplicado para o lote.
			dbSelectArea("STL")
			dbSetOrder(1)
			If dbSeek(xFilial("STL")+TR8->TR8_ORDEM+TR8->TR8_PLANO)
				While !Eof() .And.  STL->TL_FILIAL == xFilial("STL") .And. STL->TL_ORDEM+STL->TL_PLANO == TR8->TR8_ORDEM+TR8->TR8_PLANO

					If STL->TL_SEQRELA <> "0"
						MsgStop(STR0073) //"Não é possível excluir a O.S. Lote pois a mesma já possui insumos aplicados."
						Return .F.
					EndIf
					dbSelectArea("STL")
					dbSkip ()
				End
			EndIf
			DbSelectArea("TR8")
			dbSkip ()
		End

		DbSelectArea("TR8")
		DbSetOrder(01)
		DbSeek(xFilial("TR8")+TR7->TR7_LOTE)
		While !Eof() .and. TR8->TR8_FILIAL == xFilial("TR8") .and. TR8->TR8_LOTE == TR7->TR7_LOTE

			If !NGDELETOS(TR8->TR8_ORDEM,TR8->TR8_PLANO)
				Return .F.
			EndIf

			RecLock("TR8",.F.)
			DbDelete()
			MsUnLock("TR8")

			If NGCADICBASE("TQT_CODPRO","A","TQT",.F.)
				dbSelectArea("TQS")
				dbSetOrder(01)
				dbSeek(xFilial("TQS")+TR8->TR8_CODBEM)
				DbSelectArea("TQT")
				DbSetOrder(1)
				If DbSeek(xFilial("TQT")+TQS->TQS_MEDIDA)
					If !Empty(TQT->TQT_CODPRO)
						cProdTerc := TQT->TQT_CODPRO
					Endif
				Endif
			Endif
			DbSelectArea("TR8")
			DbSkip()
		End

		DbSelectArea("TR7")
		RecLock("TR7",.F.)
		DbDelete()
		MsUnLock("TR7")
	EndIf

	If nOpca == 1 .and. nOpcX == 4

		nI := 1

		DbSelectArea("TR7")
		RecLock("TR7",.F.)
		For nFCount := 1 To FCount()
			cMemory := "M->"+FieldName(nFCount)
			cField  := "TR7->"+FieldName(nFCount)
			Replace &cField. with &cMemory.
		Next nFCount
		TR7->TR7_FILIAL := xFilial("TR7")
		TR7->TR7_REABRE := "2"
		MsUnLock("TR7")

		nPosOBSERV := GDFIELDPOS("TR8_OBS",aHEADER)
		For nI := 1 to Len(aCols)
			DbSelectArea("TR8")
			DbSetOrder(01)
			If DbSeek(xFilial("TR8")+M->TR7_LOTE+aCols[nI][nPosCODBEM])
				cIndRel := TR8->TR8_INDREL

				RecLock("TR8",.F.)
				TR8->TR8_INDREL := aCols[nI][nPosINDREL]
				If nPosDESENH > 0
					TR8->TR8_DESENH := aCols[nI][nPosDESENH]
				EndIf
				TR8->TR8_VALOR  := aCols[nI][nPosVALOR]
				TR8->TR8_MOTIVO := aCols[nI][nPosMOTIVO]
				TR8->TR8_OBS    := aCols[nI][nPosOBSERV]
				MsUnLock("TR8")

				cOrdem := TR8->TR8_ORDEM
				cPlano := TR8->TR8_PLANO
			Endif
			If aCols[nI][nPosINDREL] == '2'

				dbSelectArea("STJ")
				dbSetOrder(01)
				dbSeek(xFilial("STJ")+cOrdem+cPlano)
				nRecno := Recno()

				//Exclui o lancamento de contador relacionado ao bem do Contador 1
				If !EMPTY(STJ->TJ_HORACO1) .And. STJ->TJ_POSCONT > 0
					MNT470EXCO(STJ->TJ_CODBEM,STJ->TJ_DTORIGI,STJ->TJ_HORACO1,1)
				EndIf
				//Exclui o lancamento de contador relacionado ao bem do Contador 2
				If !EMPTY(STJ->TJ_HORACO2) .And. STJ->TJ_POSCON2 > 0
					MNT470EXCO(STJ->TJ_CODBEM,STJ->TJ_DTORIGI,STJ->TJ_HORACO2,2)
				EndIf
				NGDELETOS(cOrdem,cPlano)

				//Preenchimento automatico do campo observação
				dbSelectArea("STJ")
				dbGoTo(nRecNo)
				If NGCADICBASE("TJ_MMSYP","A","STJ",.F.)
					cObs := NGMEMOSYP(STJ->TJ_MMSYP)
				Else
					cObs := CriaVar("TJ_OBSERVA")
					cObs := STJ->TJ_OBSERVA
				EndIf

				cObs := ("Data: "+DTOC(dDataBase)+CRLF+"Nota Fiscal: "+Alltrim(TR7->TR7_NFE)+" Serie: "+Alltrim(TR7->TR7_SERIE)+CRLF+"Fornecedor: "+Alltrim(TR7->TR7_FORNEC)+" "+Alltrim(TR7->TR7_LOJA)+" "+;
				NGSEEK("SA2",TR7->TR7_FORNEC+TR7->TR7_LOJA,1,'SubStr(A2_NOME,1,30)')+CRLF+"Serviço: "+Alltrim(TR7->TR7_SERVIC)+;
				CRLF+"Motivo: "+Alltrim(TR8->TR8_MOTIVO)+" "+NGSEEK("ST8",TR8->TR8_MOTIVO+"P",1,'SubStr(T8_NOME,1,30)'))

				dbSelectArea("STJ")
				RecLock('STJ',.F.)
				If NGCADICBASE("TJ_MMSYP","A","STJ",.F.)
					MsMM(STJ->TJ_MMSYP,80,,cObs,1,,,"STJ","TJ_MMSYP")
				Else
					STJ->TJ_OBSERVA := cObs
				EndIf
				MsUnLock('STJ')
			Else
				If aCols[nI][nPosINDREL] = '1'
					DbSelectArea("TQS")
					DbSetOrder(01)
					If dbSeek(xFilial("TQS")+aCols[nI][nPosCODBEM])
						RecLock("TQS",.F.)
						If Alltrim(M->TR7_SERVIC) == Alltrim(cServRef)
							TQS->TQS_DESENH := aCols[nI][nPosDESENH]
						Endif
						TQS->TQS_SULCAT := aCols[nI][nPosSULCO]
						TQS->TQS_DTMEAT := M->TR7_DTRECI
						TQS->TQS_HRMEAT := M->TR7_HRRECI
						TQS->(MsUnLock())
					Endif
				Endif
				DbSelectArea("TQZ")
				DbSetOrder(01)
				If !DbSeek(xFILIAL("TQZ")+aCols[nI][nPosCODBEM]+Dtos(M->TR7_DTRECI)+M->TR7_HRRECI+cAnalise)
					RecLock("TQZ",.T.)
					TQZ->TQZ_FILIAL := xFilial("TQZ")
					TQZ->TQZ_CODBEM := aCols[nI][nPosCODBEM]
					TQZ->TQZ_DTSTAT := M->TR7_DTRECI
					TQZ->TQZ_HRSTAT := M->TR7_HRRECI
					TQZ->TQZ_STATUS := cAnalise
					MsUnLock("TQZ")
				Endif

				dbSelectArea("TQV")
				dbSetOrder(1)
				If !dbSeek(xFilial("TQV")+aCols[nI][nPosCODBEM]+DTOS(M->TR7_DTRECI)+M->TR7_HRRECI) //+TR8->TR8_BANDA
					RecLock("TQV",.T.)
					TQV->TQV_FILIAL := xFilial("TQV")
					TQV->TQV_CODBEM := aCols[nI][nPosCODBEM]
					TQV->TQV_DTMEDI := M->TR7_DTRECI
					TQV->TQV_HRMEDI := M->TR7_HRRECI
					TQV->TQV_BANDA  := IIF(cServRef == AllTrim(TR7->TR7_SERVIC) .AND. TR8->TR8_BANDA <= '4' .And. lVdUtPne,AllTrim(Str(Val(TR8->TR8_BANDA)+1)),TR8->TR8_BANDA)
					TQV->TQV_DESENH := aCols[nI][nPosDESENH]
					TQV->TQV_SULCO  := aCols[nI][nPosSULCO]
					TQV->(MsUnLock())
				Endif
				lNovo := .F.
				//-----------------------------------------------------
				// Registro de insumo realizado.
				//-----------------------------------------------------
				DbSelectArea("STL")
				DbSetOrder(3)//TL_FILIAL+TL_ORDEM+TL_PLANO+TL_SEQRELA+TL_TAREFA+TL_TIPOREG+TL_CODIGO
				If !DbSeek(xFilial("STL")+cOrdem+cPlano+"1")
					lNovo := .T.
				EndIf
				If DbSeek(xFilial("STL")+cOrdem+cPlano+"0") //Posiciona no Insumo Previsto.
					If lNovo
						//-----------------------------------------------------
						// Grava insumo realizado.
						//-----------------------------------------------------
						NGRETINS(	cOrdem,;	//PORDEM ->TL_ORDEM
						cPlano,;		//PPLANO ->TL_PLANO
						'C',;				//PTIPO ->TL_TIPOREG
						,;							//PCODBEM
						,;							//PSERVICO
						,;							//PSEQ
						STL->TL_TAREFA,;	//PTAREFA
						'T',;	//PTIPOINS
						STL->TL_CODIGO,;	//PCODIGO
						STL->TL_QUANTID,;	//PQUANTID
						STL->TL_UNIDADE,;	//PUNIDADE
						,;					//PDESTINO ->Não Precisa
						STR0061 + M->TR7_LOTE,;//PDESCRIC //"Consumo Por O.S. Lote "
						STL->TL_DTINICI,;	//PDATAINI
						STL->TL_HOINICI,;	//PHORAINI
						"F",;							//PGERAFES
						STL->TL_LOCAL,;					//PLOCAL
						,;								//PLOTEC
						,;								//PNUMLOTE
						,;								//PDTVALID
						)								//PLOCALIZ

						//-----------------------------------
						// Dados não gravados pela NGRETINS.
						//-----------------------------------
					EndIf
					DbSeek(xFilial("STL")+cOrdem+cPlano+"1")
					DbSelectArea("STL") //Ainda está posicionado no Insumo que acabou de gravar, apenas Seleciona a Tabela.
					RecLock("STL",.F.)
					STL->TL_NOTFIS  := M->TR7_NFE
					If NGCADICBASE('TL_SDOC','A','STL',.F.)
						STL->TL_SDOC := M->TR7_SDOC
					Else
						STL->TL_SERIE   := M->TR7_SERIE
					EndIf
					STL->TL_CUSTO   := aCols[nI][nPosVALOR]
					MsUnLock("STL")

				EndIf

				//-----------------------------------------------------
				// Finaliza a Ordem de Serviço.
				//-----------------------------------------------------
				DbSelectArea("STJ")
				DbSetOrder(01)
				DbSeek(xFilial("STJ")+cOrdem+cPlano)
				NGFINAL(cOrdem,cPlano,,,,,,,,,,,,,If(aCols[nI][nPosINDREL] == '1' .And. cIndRel == '2',.T.,.F.))
				//Verificar se a data de fechamento foi preenchida
				If Empty(STJ->TJ_DTMRINI)
					RecLock("STJ",.F.)
					STJ->TJ_DTMRINI := M->TR7_DTRECI
					STJ->TJ_HOMRINI := M->TR7_HRRECI
					STJ->TJ_DTMRFIM := M->TR7_DTRECI
					STJ->TJ_HOMRFIM := M->TR7_HRRECI
					MsUnLock("STJ")
				EndIf
			EndIf

			If NGSX2MODO("ST9") == "E" .AND. NGSX2MODO("TR7") == "E"
				cFilialSeek := TR7->TR7_FILIAL
			ElseIf (NGSX2MODO("ST9") == "E" .AND. NGSX2MODO("TR7") == "C") .OR. (NGSX2MODO("ST9") == "C" .AND. NGSX2MODO("TR7") == "E")
				cFilialSeek := xFilial("ST9")
			Else
				cFilialSeek := xFilial("ST9")
			Endif

			//Independente se foi realizado o serviço ou não, quando o pneu é recebido o Status do pneu informado é igual a "ANALISE TECNICA".
			DbSelectArea("ST9")
			DbSetOrder(01)
			If DbSeek(cFilialSeek+aCols[nI][nPosCODBEM])
				RecLock("ST9",.F.)
				ST9->T9_STATUS := cAnalise
				MsUnLock("ST9")
			Endif

		Next
		If lMNTA7209
			ExecBlock("MNTA7209")
		EndIf

		For nXX := 1 to Len(aCols)
			If aCols[nXX][nPosINDREL] == "2"
				If Len(aCols) > 1 .And. MsgYesNo("Este lote possui pneus não realizados, deseja gerar um novo lote para os pneus não realizados?") //"Este lote possui pneus não realizados, deseja gerar um novo lote para os pneus não realizados?"
					fRecebOS()
					Exit
				EndIf
			EndIf
		Next nXX

	EndIf

	If nOpcx <> 2
		If nOPCA <> 1
			RollBackSX8()
		Endif
	EndIf

	If lFIELD
		aChoice := aClone(aOldChoice)
	EndIf

	If Len(aRotina) >= 3
		aRotina[3][4] := 5
	EndIf

Return nOPCA
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    |MNT720SER ³ Autor ³Marcos Wagner Junior   ³ Data ³ 13/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica se o servico e de recape ou reforma                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      |MNTA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT720SER()

	Local cServCon := AllTrim(GetMv("MV_NGSECON"))
	Local aServCon := StrTokArr(cServCon,";")
	Local cServRef := AllTrim(GetMv("MV_NGSEREF"))

	If TPO->TPO_FILIAL = xFilial("TPO") .AND. (TPO->TPO_FORNEC = M->TR7_FORNEC) .AND. (TPO->TPO_LOJA = M->TR7_LOJA)
		If (AllTrim(TPO->TPO_SERVIC) != cServRef) .AND. (aScan(aServCon, {|x| x == AllTrim(TPO->TPO_SERVIC)}) = 0)
			Return .f.
		Else
			Return .t.
		Endif
	Endif

Return .f.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNT720PNEU
Monta filtro no modelo SQL para consulta padrão NGR.
@type function

@author Marcos Wagner Junior
@since 13/11/06

@return cReturn, Caracter, Filtro para execução do SXB

@obs Reescrito por: Alexandre Santos, 21/01/2019.
/*/
//---------------------------------------------------------------------
Function MNT720PNEU()

	Local cReturn  := ''

	If AllTrim( Posicione( 'SXB', 1, Padr( 'NGR' , Len( SXB->XB_ALIAS  ) ) + '6' + '01', 'XB_CONTEM' ) ) <> '#MNT720PNEU()'
		cReturn := "@#"
		cReturn += "(ST9->T9_CATBEM == '3' .And. ST9->T9_SITBEM == 'A' .And. AllTrim(ST9->T9_STATUS) != '') .And. ('" + cPerg + "' == 'MNTA720' .And. "
		cReturn += "(('" + M->TR7_SERVIC + "' == '" + cServRef + "' .And. ST9->T9_STATUS == '" + cStatRef + "') .Or. "
		cReturn += "((" + cValToChar((aScan(aServCon, {|x| x == AllTrim(M->TR7_SERVIC)}))) + " > 0) .And. AllTrim(ST9->T9_STATUS) == '" + cStatCon + "')))"
		cReturn += "@#"
	Else
		cReturn := "@"
		cReturn += "T9_CATBEM = '3'"
		cReturn += " AND T9_SITBEM   = 'A'"
		cReturn += " AND T9_FILIAL   = " + ValToSQL( xFilial( 'ST9' ) )
		cReturn += " AND T9_STATUS  <> ' '"
		cReturn += " AND ( ( T9_STATUS = " + ValToSQL( cStatRef )
		cReturn += " AND " + ValToSQL( M->TR7_SERVIC ) + " = " + ValToSQL( cServRef ) + ")"
		cReturn += " OR    ( T9_STATUS = " + ValToSQL( cStatCon )
		cReturn += " AND " + ValToSQL( aScan( aServCon, { |x| x == Trim( M->TR7_SERVIC ) } ) ) + " > 0 ) )"
		cReturn += " AND D_E_L_E_T_ <> '*'"
	EndIf

Return cReturn
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT720BAN ³ Autor ³Marcos Wagner Junior   ³ Data ³ 13/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Visualizar                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      |MNTA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT720BAN()
	Local nQtd := 0
	Local cCodBem := ''
	Local nI
	Local lServVida := .F. //Serviço que aumenta a vida do Pneu
	Local cServRef := AllTrim(GetMv("MV_NGSEREF"))
	Local cQuantBan := ''

	If !Existcpo("ST9",M->TR8_CODBEM)
		Return .f.
	EndIf

	//Verifica se é serviço de reforma.
	If cServRef == AllTrim( M->TR7_SERVIC )

		//Verifica se o Pneu esta na quarta vida, se estiver bloqueia o serviço de reforma
		dbSelectArea("TPO")
		dbSetOrder(1) //TPO_FILIAL+TPO_FORNEC+TPO_LOJA+TPO_SERVIC+TPO_ESPECI
		If dbSeek( xFilial("TPO") + M->TR7_FORNEC + M->TR7_LOJA + M->TR7_SERVIC + M->TR7_ESPECI )

			dbSelectArea("ST4")
			dbSetOrder(1) //T4_FILIAL+T4_SERVICO
			If dbSeek( xFilial("ST4") + TPO->TPO_SERVIC )
				If ST4->T4_VIDAUTI == "S"
					lServVida := .T.
				EndIf
			EndIf

			If lServVida

				dbSelectArea( "TQS" )
				dbSetOrder( 01 )
				If dbSeek( xFilial( "TQS" ) + M->TR8_CODBEM )
					If NGCADICBASE( 'TQS_KMR5','A','TQS',.F. ) //Verifica se existe o campo 'TQS_KMR5' no dicionario (SX3) ou na base dados ou em ambos;
						cQuantBan := "A"
					Else
						cQuantBan := "5"
					EndIf
					If TQS->TQS_BANDAA == cQuantBan
						MsgStop(STR0090 + Alltrim(M->TR8_CODBEM) + STR0091) //"Pneu " ## " esta na ultima vida e não pode ser reformado."
						Return .F.
					EndIf
				EndIf

			EndIf

		EndIf
	EndIf

	//--- Carrega variáveis Private
	MNTA720VAR()

	If nPosCODBEM > 0
		For nI := 1 to Len(aCols)
			If aCols[nI][nPosCODBEM] == cCodBem .AND. !aCols[nI][Len(aCols[nI])]
				nQtd++
			Endif
		Next
	Endif

	If nQtd > 1
		Help(" ",1,STR0013,,STR0014,3,1) //"ATENÇÃO"
		Return .f.
	EndIf
	//Checa se pneu nao esta em outro lote que ainda não foi recebido
	If MNT720PNLT()
		MsgStop(STR0048,STR0013) //"Pneu já informado em outro lote!"
		Return .f.
	EndIf

	dbSelectArea("ST9")
	dbSetOrder(01)
	If dbSeek(xFilial("ST9")+M->TR8_CODBEM)
		If ST9->T9_CATBEM == '3' .AND. ST9->T9_SITBEM == "A"
			If AllTrim(M->TR7_SERVIC) == cServRef
				If !Empty(cStatRef)
					If AllTrim(ST9->T9_STATUS) == cStatRef
						Return .t.
					Else
						MsgStop(STR0046,STR0013)  //"O Status do pneu informado é diferente do Status de Reforma"
						Return .F.
					Endif
				Else
					MsgStop(STR0044,STR0013) //"O Status para Aguardando Reforma (MV_NGSTAGR) está em branco. Favor informar o Administrador do Sistema"
					Return .F.
				EndIf
			ElseIf (aScan(aServCon, {|x| x == AllTrim(M->TR7_SERVIC)}) > 0)
				If !Empty(cStatCon)
					If AllTrim(ST9->T9_STATUS) == cStatCon
						Return .t.
					Else
						MsgStop(STR0047,STR0013)  //"O Status do pneu informado é diferente do Status de Conserto"
						Return .F.
					Endif
				Else
					MsgStop(STR0045,STR0013) //"O Status para Aguardando Conserto (MV_NGSTAGC) está em branco. Favor informar o Administrador do Sistema"
					Return .F.
				EndIf
			Endif
		Endif
	Endif

	MsgStop(STR0012,STR0013)  //"Pneu digitado é invalido, a Categoria do bem não é Pneu ou o Bem está Inativo. "

Return .f.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT720CUS ³ Autor ³Marcos Wagner Junior   ³ Data ³ 13/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica a garantia do servico                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      |MNTA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT720CUS()
	Local cMedida, cBanda
	Local cMotivo := Space(06)

	//--- Carrega variáveis Private
	MNTA720VAR()

	dbSelectArea("TQS")
	dbSetOrder(01)
	If dbSeek(xFilial("TQS")+M->TR8_CODBEM)
		cBanda  := TQS->TQS_BANDAA
		cMedida := TQS->TQS_MEDIDA
		//Verifica garantia de acordo com o Sulco e o Motivo
		If TQS->TQS_SULCAT > 2
			dbSelectArea("TR4")
			dbSetOrder(01)
			dbSeek(xFilial("TR4")+M->TR8_CODBEM)
			While !Eof() .AND. M->TR8_CODBEM == TR4->TR4_CODBEM
				cMotivo := TR4->TR4_MOTIVO
				dbSkip()
			End
			If (AllTrim(cMotivo) $ cParMot )
				aCols[n][nPosGARANT] := '1'
			Else
				aCols[n][nPosGARANT] := '2'
			Endif
		Else
			aCols[n][nPosGARANT] := '2'
		Endif
	Else
		cBanda  := Space(Len(TQS->TQS_BANDAA))
		cMedida := Space(Len(TQS->TQS_MEDIDA))
	Endif

	nTotal := nTotal - aCols[n][nPosVALOR]

	If lRetTRA
		dbSelectArea("TRA")
		dbSetOrder(01)
		If dbSeek(xFilial("TRA")+M->TR7_FORNEC+M->TR7_LOJA+M->TR7_SERVIC+M->TR7_ESPECI+cMedida+cBanda)
			aCols[n][nPosVALOR] := TRA->TRA_CUSTO
		Else
			If dbSeek(xFilial("TRA")+M->TR7_FORNEC+M->TR7_LOJA+M->TR7_SERVIC+M->TR7_ESPECI+cMedida+Space(Len(TQS->TQS_BANDAA)))
				aCols[n][nPosVALOR] := TRA->TRA_CUSTO
			Else
				aCols[n][nPosVALOR] := 0
			Endif
		Endif
	Else
		dbSelectArea("TRA")
		dbSetOrder(01)
		If dbSeek(xFilial("TRA")+M->TR7_FORNEC+M->TR7_LOJA+M->TR7_SERVIC+cMedida+cBanda)
			aCols[n][nPosVALOR] := TRA->TRA_CUSTO
		Else
			If dbSeek(xFilial("TRA")+M->TR7_FORNEC+M->TR7_LOJA+M->TR7_SERVIC+cMedida+Space(Len(TQS->TQS_BANDAA)))
				aCols[n][nPosVALOR] := TRA->TRA_CUSTO
			Else
				aCols[n][nPosVALOR] := 0
			Endif
		Endif
	EndIf

	nTotal := nTotal + aCols[n][nPosVALOR]
	oTotal:Refresh()

Return .t.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT720LIN ³ Autor ³Marcos Wagner Junior   ³ Data ³ 13/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida linha digitada na GetDados                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      |MNTA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT720LIN()
	Local cOrdem   := Space(06)
	Local cPlano   := Space(06)
	Local cFornec  := Space(08)
	Local nQtd 	   := 0
	Local nx 	   := 0
	Local nTotalAt := 0
	Local cPneu    := " "

	//--- Carrega variáveis Private
	MNTA720VAR()

	If Empty(aCols[1][nPosCODBEM]) .Or. nPosCODBEM == 0
		Return .t.
	Endif

	cPneu := aCols[n][nPosCODBEM]

	For nx:=1 To Len(aCols)
		If !aCols[nx][Len(aCols[nx])]
			If Empty(aCols[nx][nPosCODBEM])
				Help(" ",1,"OBRIGAT")
				Return .F.
			Endif
			nTotalAt += If(nPosVALOR > 0,aCols[nx][nPosVALOR],0)
		Endif
	Next

	nTotal := nTotalAt
	oTotal:Refresh()

	If nPosCODBEM > 0
		aEval( aCols, { |x| nQtd += IIF( !aTail(x) .And. x[nPosCODBEM] == cPneu, 1, 0 ) } )
	EndIf

	If nQtd > 1
		Help(" ",1,STR0013,,STR0014,3,1) //"ATENÇÃO"###"Campo Pneu Duplicado"
		Return .f.
	EndIf

	If aCols[n][nPosGARANT] = '1'

		cAliasQry := GetNextAlias()
		cQuery := " SELECT STJ.TJ_ORDEM, STJ.TJ_PLANO"
		cQuery += " FROM " + RetSqlName("STJ")+" STJ "

		cQuery += " WHERE STJ.TJ_CODBEM = '"+aCols[n][nPosCODBEM]+"'
		cQuery += " AND   STJ.TJ_SERVICO = '"+cServRef+Space(6-Len(cServRef))+"'"
		cQuery += " AND   STJ.D_E_L_E_T_ <> '*' "
		cQuery += " ORDER BY STJ.TJ_DTMRINI"

		cQuery := ChangeQuery(cQuery)
		dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)

		While !Eof()
			cOrdem := (cAliasQry)->TJ_ORDEM
			cPlano := (cAliasQry)->TJ_PLANO
			dbSkip()
		End

		cAliasQry := GetNextAlias()
		cQuery := " SELECT STL.TL_CODIGO"
		cQuery += " FROM " + RetSqlName("STL")+" STL "
		cQuery += " WHERE STL.TL_ORDEM = '"+cOrdem+"'
		cQuery += " AND   STL.TL_PLANO = '"+cPlano+"'
		cQuery += " AND   STL.TL_TIPOREG = '"+'T'+"'
		cQuery += " AND   STL.D_E_L_E_T_ <> '*' "
		cQuery += " ORDER BY STL.TL_ORDEM"
		cQuery := ChangeQuery(cQuery)
		dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)

		While !Eof()
			cFornec := (cAliasQry)->TL_CODIGO
			dbSkip()
		End

		If cFornec != M->TR7_FORNEC .AND. !Empty(cFornec)
			MsgStop(STR0015,STR0013) //"Serviço em garantia por outro fornecedor"
			Return .f.
		Else
			Return .t.
		Endif
	Endif

Return .t.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT720ALL ³ Autor ³Marcos Wagner Junior   ³ Data ³ 13/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Grava dados na TR7, TR8, SC1, STJ, STL e Cria/Finaliza OS   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      |MNTA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT720ALL(nOpcX)

	Local nI := 0, i := 0, nQtd := 0, nX
	Local lVldPn      	:= .F.
	Local aRetorno    	:= {}
	Local aCalDtFim  	:= {}
	Local nPosOBSERV	:= GDFIELDPOS("TR8_OBS",aHEADER)
	Local lGrava 		:= .T.
	Local lCodComp		:= .F.
	Local nFCount, cField, cMemory
	Local cNGLOCPA		:= Padr( SuperGetMV("MV_NGLOCPA",.F.,"01"), TamSx3("NNR_CODIGO")[1] )
	Local cNGUNIDT		:= SuperGetMv("MV_NGUNIDT",.F.,"D")
	Local cTarefa 		:= PADR("0",Len(STL->TL_TAREFA))
	Local cPlano		:= ""

	Private cUsaIntCm := AllTrim(GetMv("MV_NGMNTCM"))
	Private cUsaIntEs := AllTrim(GetMv("MV_NGMNTES"))
	Private nIAcols   := 0

	//--- Carrega variáveis Private
	MNTA720VAR(.T.)

	If nOpcX == 4
		For nX := 1 to Len(aCols)

			If AllTrim(M->TR7_SERVIC) == cServRef .and. aCols[nX][nPosINDREL] == '1' .and. Empty(aCols[nX][nPosDESENH])
				Help(" ",1,STR0013,,STR0020,3,1) //"ATENÇÃO"###"Quando o serviço de recape é executado, deverá ser informado o novo desenho"
				Return .f.
			EndIf

			If (aCols[nX][nPosINDREL] == "2")
				If Empty(aCols[nX][nPosMOTIVO])
					If lValDoc
						ShowHelpDLG(STR0013,{STR0055},;  //"Para os Pneus onde o serviço não foi realizado, deve-se informar o motivo (TR8_MOTIVO)"
						2,{STR0056},4)  //"1 - Informe o motivo pelo qual não o serviço não foi realizado. 2 - Informe um Documento de Entrega para identificar a realização do serviço."
					Else
						Help(" ",1,STR0013,,STR0021,3,1) //"ATENÇÃO"###"Campo Motivo obrigatório quando o serviço não é executado"
					EndIf
					Return .f.
				EndIf

				cPlano := Posicione("STJ", 1, xFilial("STJ") + aCols[nX][nPosORDEM], "TJ_PLANO" )

				dbSelectArea("STJ")
				dbSetOrder(01) //TJ_FILIAL+TJ_ORDEM+TJ_PLANO+TJ_TIPOOS+TJ_CODBEM+TJ_SERVICO+TJ_SEQRELA
				If dbSeek(xFilial("STJ")+aCols[nX][nPosORDEM]+cPlano) 
					nRecno := Recno()
					If !NGGERCOTAC(STJ->TJ_ORDEM)
						Return
					EndIf
					//Checa se existe SA com Pre-Requisicao
					If !NGCHKSAPR(STJ->TJ_ORDEM,STJ->TJ_PLANO,,.f.,.t.)
						Return
					EndIf
				EndIf
			Endif
				
		Next nX
	EndIf

	If nOpcX == 5 //Valida Exclusao
		DbSelectArea("TR8")
		DbSetOrder(01)
		DbSeek(xFilial("TR8")+TR7->TR7_LOTE)
		While !Eof() .and. TR8->TR8_FILIAL == xFilial("TR8") .and. TR8->TR8_LOTE == TR7->TR7_LOTE

			//se esta integrado por mensagem unica, considera que a existencia de um insumo realizado
			//indica que houve uma aplicacao direta pelo backoffice, ou seja, processo ja iniciado
			If AllTrim(GetNewPar("MV_NGINTER","N")) == "M"  //Mensagem Unica
				dbSelectArea("STL")
				dbSetOrder(01)
				dbSeek(xFilial("STL")+TR8->TR8_ORDEM)
				While STL->(!Eof()) .And. STL->TL_FILIAL == xFilial("STL") .And. STL->TL_ORDEM == TR8->TR8_ORDEM
					If Val(STL->TL_SEQRELA) > 0
						lGrava := .F.
						Help(" ",1,STR0013,,STR0074,3,1) //"ATENÇÃO"  ## "Não é possível excluir as OS's relacionadas. Backoffice já reportou a execução de serviços."
						Exit
					EndIf
					STL->(dbSkip())
				EndDo
			Else

				If !NGGERCOTAC(TR8->TR8_ORDEM,.t.,,TR8->TR8_CODBEM)
					lGrava := .f.
					Exit
				EndIf

			EndIf

			dbSelectArea("TR8")
			dbSkip()
		End
		Return lGrava
	Endif

	If lRetTRA .AND. Empty(M->TR7_ESPECI) .AND. nOpcX = 3
		HELP(" ",1,"OBRIGAT",,NGSEEKDIC("SX3","TR7_ESPECI",2,"X3_TITULO"),05)
		Return .f.
	Endif

	If lScreenRec
		If !obrigatorio(aGets,aTela)
			Return .f.
		EndIf

		If AllTrim(M->TR7_SERVIC) = cServRef .and. aCols[n][nPosINDREL] = '1' .and. Empty(aCols[n][nPosDESENH])
			Help(" ",1,STR0013,,STR0016,3,1) //"ATENÇÃO"###"Quando o serviço de recape é executado, deverá ser informado o novo desenho"
			Return .f.
		EndIf

		If (aCols[n][nPosINDREL] == "2") .and. Empty(aCols[n][nPosMOTIVO])
			Help(" ",1,STR0013,,STR0017,3,1) //"ATENÇÃO"###"Campo Motivo obrigatório quando o serviço não é executado"
			Return .f.
		Endif
	EndIf

	// Diferente de Alteração
	If nOpcX <> 4
		nQtd := 0
		lVldPn := .F.
		For i := 1 To Len(aCols)
			If !aTail( aCols[i] ) // não deletado
				If !Empty(aCols[i][nPosCODBEM])
					nQtd++
				Else
					lVldPn := .T.
				EndIf
			EndIf
		Next i

		If nQtd == 0
			MsgStop(STR0018,STR0013) //"Nenhum pneu foi vinculado ao Lote"
			Return .f.
		ElseIf lVldPn
			MsgStop(STR0070,STR0013) //"Campo Pneu não informado"
			Return .f.
		Endif

		If Empty(M->TR7_LOTE) .OR. Empty(M->TR7_DTLOTE) .OR. Empty(M->TR7_HRLOTE) .OR. Empty(M->TR7_FORNEC) .OR. Empty(M->TR7_SERVIC)
			MsgStop(STR0019,STR0013) //"Um ou mais campos obrigatórios não foram preenchidos"
			Return .f.
		Endif

		//------------------------------------------------
		// Ponto de Entrada para validação
		//------------------------------------------------
		If ExistBlock('MNTA720B') .And. !ExecBlock('MNTA720B', .F., .F., { nOpcX, aHeader, aCols })
			Return .F.
		EndIf

		For nI := 1 to Len(aCols)

			nIAcols := nI  // usado em MNTA7202

			If !aTail( aCols[nI] ) // não deletado
				DbSelectArea("ST4")
				DbSetOrder(1)
				DbSeek(xFilial("ST4")+M->TR7_SERVIC)

				DbSelectArea("STE")
				DbSetOrder(1)
				DbSeek(xFilial("STE")+ST4->T4_TIPOMAN)

				aRetorno := NGGERAOS(STE->TE_CARACTE,M->TR7_DTLOTE,aCols[nI][nPosCODBEM],M->TR7_SERVIC,'0','N','N','N')
				If aRetorno[1][1] = 'N'
					MsgStop(aRetorno[1][2],STR0013)
				Else

					cPlano := Posicione("STJ", 1, xFilial("STJ") + aRetorno[1][3], "TJ_PLANO" )

					RecLock("STL",.T.)
					STL->TL_FILIAL  := xFILIAL('STL')
					STL->TL_ORDEM   := aRetorno[1][3]
					STL->TL_PLANO   := cPlano
					STL->TL_CODIGO  := M->TR7_FORNEC
					STL->TL_USACALE := 'N'
					STL->TL_TIPOREG := 'T'
					STL->TL_TAREFA  := cTarefa
					STL->TL_SEQRELA := '0'
					STL->TL_SEQUENC := 0
					STL->TL_UNIDADE := 'H'
					STL->TL_QUANTID := 1
					STL->TL_DTINICI := M->TR7_DTLOTE
					STL->TL_HOINICI := M->TR7_HRLOTE
					STL->TL_LOCAL   := cNGLOCPA
					STL->TL_TIPOHOR := cNGUNIDT

					aCalDtFim := NGCALDATF(M->TR7_DTLOTE,M->TR7_HRLOTE,1,"H")

					STL->TL_DTFIM   := aCalDtFim[3]
					STL->TL_HOFIM   := aCalDtFim[4]
					STL->TL_GARANTI := 'N'
					MsUnLock("STL")

					DbSelectArea("STJ")
					DbSetOrder(1)
					If DbSeek(xFilial("STJ")+STL->TL_ORDEM+STL->TL_PLANO)
						RecLock("STJ",.f.)
						STJ->TJ_TIPORET := 'S'
						MsUnLock("STJ")
					EndIf
					If NGCADICBASE("TQT_CODPRO","A","TQT",.F.)
						DbSelectArea("TQT")
						DbSetOrder(1)
						If DbSeek(xFilial("TQT")+aCols[n][nPosMEDIDA])
							If !Empty(TQT->TQT_CODPRO)
								cCodComp := TQT->TQT_CODPRO
								lCodComp := .T. //Determina que utiliza o campo TQT_CODPRO
							Endif
						Endif
					Endif

					If lCodComp
						a340TER({cTarefa,M->TR7_FORNEC + Space( TAMSX3("TL_CODIGO")[1] - TAMSX3("TR7_FORNEC")[1] ),1,M->TR7_DTLOTE,,,,STJ->TJ_ORDEM,STJ->TJ_PLANO}, cNGLOCPA,1,'H',.t.,1,cCodComp,aCols[nI][nPosOBSERV])
					Else
						a340TER({cTarefa,M->TR7_FORNEC + Space( TAMSX3("TL_CODIGO")[1] - TAMSX3("TR7_FORNEC")[1] ),1,M->TR7_DTLOTE,,,,STJ->TJ_ORDEM,STJ->TJ_PLANO}, cNGLOCPA,1,'H',.t.,1,,aCols[nI][nPosOBSERV])
					Endif

					lCodComp := .F. //Retorna variável ao valor padrão.

					NGPONTOENTR("MNTA7202")
				Endif

				If aRetorno[1][1] = 'S'
					DbSelectArea("TR8")
					RecLock("TR8",.T.)
					TR8->TR8_FILIAL := xFilial("TR8")
					TR8->TR8_LOTE   := M->TR7_LOTE
					TR8->TR8_CODBEM := aCols[nI][nPosCODBEM]
					TR8->TR8_MEDIDA := aCols[nI][nPosMEDIDA]
					TR8->TR8_TIPMOD := aCols[nI][nPosTIPMOD]
					TR8->TR8_INDREL := "2"
					If nPosDESENH > 0
						TR8->TR8_DESENH := aCols[nI][nPosDESENH]
					EndIf
					TR8->TR8_BANDA  := aCols[nI][nPosBANDA]
					TR8->TR8_VALOR  := aCols[nI][nPosVALOR]
					TR8->TR8_GARANT := aCols[nI][nPosGARANT]
					TR8->TR8_OBS    := aCols[nI][nPosOBSERV]
					If Len(aRetorno[1]) >= 3
						TR8->TR8_ORDEM  := aRetorno[1][3]
						TR8->TR8_PLANO  := cPlano
					Endif


					For nFCount := 1 To Len(aPosUsu) //Percorre o array que contem as posicoes no aHeader dos campos de usuario
						cMemory := aCols[nI][aPosUsu[nFCount]] //Preenche com o conteudo do campo
						cField  := "TR8->"+aHeader[aPosUsu[nFCount]][2] //Nome do campo
						Replace &cField. with cMemory //Preenche o campo com o coteudo do acols
					Next nFCount //Proximo registro

					MsUnLock("TR8")

				Else
					lGrava := .F.
					Exit

				EndIf

			EndIf
		Next

		If aRetorno[1][1] = 'S'
			DbSelectArea("TR7")
			RecLock("TR7",.T.)
			For nFCount := 1 To FCount()
				cMemory := "M->"+FieldName(nFCount)
				cField  := "TR7->"+FieldName(nFCount)
				Replace &cField. with &cMemory.
			Next nFCount
			TR7->TR7_FILIAL := xFilial("TR7")
			TR7->TR7_REABRE := "2"
			MsUnLock("TR7")

			ConfirmSX8()

		EndIf

	EndIf

	If ExistBlock("MNTA7201")
		ExecBlock("MNTA7201",.F.,.F.)
	EndIf

Return lGrava

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT720REC ³ Autor ³Marcos Wagner Junior   ³ Data ³ 17/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Funcao para recebimento do lote							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      |MNTA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT720REC(cAlias,nRecno,nOpcx)

	lScreenRec := .T.

	lCodbem := .F.
	aCHOICE := {}
	NG720Ser()

	MNT720IN("TR7",Recno(),nOpcx)

	aChoice  := If(lRetTRA,{'TR7_LOTE','TR7_DTLOTE','TR7_HRLOTE','TR7_FORNEC','TR7_NOMFOR','TR7_LOJA','TR7_SERVIC','TR7_NOMSER','TR7_ESPECI','TR7_NOMESP'},;
	{'TR7_LOTE','TR7_DTLOTE','TR7_HRLOTE','TR7_FORNEC','TR7_NOMFOR','TR7_LOJA','TR7_SERVIC'})

	lScreenRec := .F.

Return .F.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT720MOT ³ Autor ³Marcos Wagner Junior   ³ Data ³ 22/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Funcao para ativacao do campo de motivo					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      |MNTA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT720MOT(nNum,lTudoOk)

	Default lTudoOk := .F.

	//--- Carrega variáveis Private
	MNTA720VAR()

	If nNum == 2
		If (M->TR8_INDREL == "1")
			dbSelectArea("TR8")
			dbSetOrder(01)
			If dbSeek(xFilial("TR8")+M->TR7_LOTE+aCols[n][nPosCODBEM])
				nTotal := nTotal - aCols[n][nPosVALOR]
				aCols[n][nPosVALOR] := TR8->TR8_VALOR
				nTotal := nTotal + aCols[n][nPosVALOR]
			Endif
		Elseif (M->TR8_INDREL == "2")

			dbSelectArea("TQZ") //TQZ_FILIAL+TQZ_CODBEM+DTOS(TQZ_DTSTAT)+TQZ_HRSTAT+TQZ_STATUS
			dbSetOrder(1)
			If dbSeek( xFilial("TQZ") + aCols[n][nPosCODBEM] + DtoS(M->TR7_DTRECI) + M->TR7_HRRECI )
				MsgStop(STR0069) //"Já existe movimentação de Status (TQZ) posterior a data e hora do recebimento deste Lote e este pneu já havia sido recebido como o serviço realizado. Não será permitido a alteração desta informação."
				Return .F.
			EndIf

			nPosORDEM  := aScan(aHeader, {|x| AllTrim(Upper(x[2])) == "TR8_ORDEM"})
			//Verificar se existe algum insumo aplicado para aquela O.S. do lote.
			dbSelectArea("STL")
			dbSetOrder(1)
			If dbSeek(xFIlial("STL")+aCols[n][nPosORDEM])
				While !Eof() .And. STL->TL_FILIAL == xFilial("STL") .And. STL->TL_ORDEM == aCols[n][nPosORDEM]
					If STL->TL_SEQRELA <> "0"
						MsgStop(STR0071) //"Não é possivel dizer que o serviço nao foi realizado pois existe um insumo realizado na O.S."
						Return .F.
					EndIf
					dbSelectArea("STL")
					dbSkip()
				End
			EndIf

		Endif
		GetDRefresh()
		oTotal:Refresh()
	Else
		If lTudoOk
			//Verificar se é possivel fechar o lote após a reabertura.
			If TR7->TR7_REABRE == "1"
				If !fValRecebi(.T.)
					Return .F.
				EndIf
			EndIf
		EndIf

		If AllTrim(M->TR7_SERVIC) == cServRef .and. aCols[n][nPosINDREL] == '1' .and. Empty(aCols[n][nPosDESENH])
			Help(" ",1,STR0013,,STR0020,3,1) //"ATENÇÃO"###"Quando o serviço de recape é executado, deverá ser informado o novo desenho"
			Return .f.
		EndIf

		If (aCols[n][nPosINDREL] == "2") .and. Empty(aCols[n][nPosMOTIVO])
			If lValDoc
				ShowHelpDLG(STR0013,{STR0055},;  //"Para os Pneus onde o serviço não foi realizado, deve-se informar o motivo (TR8_MOTIVO)"
				2,{STR0056},4)  //"1 - Informe o motivo pelo qual não o serviço não foi realizado. 2 - Informe um Documento de Entrega para identificar a realização do serviço."
			Else
				Help(" ",1,STR0013,,STR0021,3,1) //"ATENÇÃO"###"Campo Motivo obrigatório quando o serviço não é executado"
			EndIf
			Return .f.
		Endif
	Endif


Return .t.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT720IMP ³ Autor ³Marcos Wagner Junior   ³ Data ³ 22/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Funcao para impressao do lote 							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      |MNTA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT720IMP()
	Local cString    := "TR7"
	Local cPerg      := ""
	Local cDesc1     := STR0022 //"Pneus enviados para manutenção externa"
	Local cDesc2     := ""
	Local cDesc3     := ""
	Local wnrel      := "MNTA720"
	Private aReturn  := {STR0023, 1,STR0024, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
	Private nLastKey := 0
	Private Titulo   := cDesc1
	Private Tamanho  := "M"
	Private NOMEPROG := "MNTA720"

	TITULO   := STR0025 //"Pneus enviados para manutenção externa"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia controle para a funcao SETPRINT                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	WNREL:=SetPrint(cSTRING,WNREL,cPERG,TITULO,cDESC1,cDESC2,cDESC3,.F.,"")
	If nLASTKEY = 27
		DbSelectArea("ST9")
		Return
	EndIf
	SetDefault(aReturn,cSTRING)
	RptStatus({|lEND| C720Imp(@lEND,WNREL,TITULO,TAMANHO)},STR0026,STR0027) //"Aguarde..."###"Processando Registros..."
	Dbselectarea("ST9")

Return .t.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ C720Imp  ³ Autor ³Marcos Wagner Junior   ³ Data ³ 23/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Impressao do Relatorio                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA720                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function C720Imp(lEnd,wnRel,titulo,tamanho)
	Private cRODATXT := ""
	Private nCNTIMPR := 0
	Private li := 80 ,m_pag := 1

	nTIPO  := IIf(aReturn[4]==1,15,18)

	CABEC1 := ""
	CABEC2 := ""


	/*          1         2         3         4         5         6         7         8         9       100       110       120       130
	0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345
	________________________________________________________________________________________________________________________________________

	________________________________________________________________________________________________________________________________________

	Fornecedor: xxxxxxxx - xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                           Data: 99/99/9999   Hora: 99:99
	Serviço: xxxxxx - xxxxxxxxxxxxxxxxxxxx 						                        Data Recebimento: 99/99/9999  as  99:99

	N. Fogo           Medida                Modelo                     Valor  Garantia  Realizado?  Observacao
	xxxxxxxxxxxxxxxx  xxxxxxxxxxxxxxxxxxxx  xxxxxxxxxxxxxxxxxxxx  999,999.99     xxx       xxx      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	*/

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define o indice de leitura do arquivo de Bens            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("TR7")
	DbSetOrder(01)
	DbSeek(xFilial("TR7")+TR7->TR7_LOTE)

	NgSomaLi(58)
	@Li,000 Psay STR0088 //"Lote: "
	@Li,006 Psay TR7->TR7_LOTE

	NgSomaLi(58)
	@Li,000 Psay STR0028 //"Fornecedor: "
	@Li,012 Psay TR7->TR7_FORNEC + " - "
	DbSelectArea("SA2")
	DbSetOrder(01)
	DbSeek(xFilial("SA2")+TR7->TR7_FORNEC+TR7->TR7_LOJA)
	@Li,023 Psay SA2->A2_NOME
	@Li,090 Psay STR0029 //"Date Abertura: "
	@Li,108 Psay TR7->TR7_DTLOTE
	@Li,121 Psay STR0030 //"Hora: "
	@Li,127 Psay TR7->TR7_HRLOTE

	NgSomaLi(58)
	@Li,000 Psay STR0031 //"Serviço: "
	@Li,009 Psay TR7->TR7_SERVIC + " - "
	DbSelectArea("ST4")
	DbSetOrder(01)
	DbSeek(xFilial("ST4")+TR7->TR7_SERVIC)
	@Li,018 Psay ST4->T4_NOME
	@Li,090 Psay STR0032 //"Data Recebimento: "
	@Li,108 Psay TR7->TR7_DTRECI
	@Li,121 Psay STR0030 //"Hora: "
	@Li,127 Psay TR7->TR7_HRRECI

	NgSomaLi(58)
	NgSomaLi(58)
	@Li,000 Psay STR0034 //"N.Fogo            Medida               Modelo                     Valor  Garantia  Realizado  Observação"
	NgSomaLi(58)

	dbSelectArea("TR8")
	dbSetOrder(01)
	If dbSeek(xFilial("TR8")+TR7->TR7_LOTE)
		SetRegua(LastRec())
		While !Eof() .AND. (TR8->TR8_FILIAL == TR7->TR7_FILIAL) .AND. (TR8->TR8_LOTE == TR7->TR7_LOTE)
			NgSomaLi(58)
			@Li,000 Psay TR8->TR8_CODBEM

			dbSelectArea("TQT")
			dbSetOrder(01)
			dbSeek(xFilial("TQT")+TR8->TR8_MEDIDA)
			@Li,018 Psay TQT->TQT_DESMED

			dbSelectArea("TQR")
			dbSetOrder(01)
			dbSeek(xFilial("TQR")+TR8->TR8_TIPMOD)
			@Li,039 Psay TQR->TQR_DESMOD

			@Li,061 Psay TR8->TR8_VALOR Picture "@E 999,999.99"

			If TR8->TR8_GARANT = "1"
				@Li,076 Psay STR0035 //"SIM"
			ElseIf TR8->TR8_GARANT = "2"
				@Li,076 Psay STR0036 //"NÃO"
			Endif

			If TR8->TR8_INDREL = "1"
				@Li,086 Psay STR0035 //"SIM"
			ElseIf TR8->TR8_INDREL = "2"
				@Li,086 Psay STR0036 //"NÃO"
			Endif

			@Li,094 Psay SubStr(TR8->TR8_OBS,1,25) // Observação;

			@Li,122	 Psay TR8->TR8_ORDEM // Numero da ordem de serviço gerada;

			dbSelectArea("TR8")
			dbSkip()
		End
	Endif

	RODA(nCNTIMPR,cRODATXT,TAMANHO)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Devolve a condicao original do arquivo principal             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RetIndex('TR7')
	Set Device To Screen
	If aReturn[5] == 1
		Set Printer To
		dbCommitAll()
		OurSpool(WNREL)
	EndIf
	MS_FLUSH()

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NG720SER  ³ Autor ³Thiago Olis Machado    ³ Data ³ 27/03/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Habilita o desenho para servico de reforma de pneus.       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA720                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function NG720Ser()

	If cServRef == AllTrim(TR7->TR7_SERVIC)
		lDESEN := .t.
	Else
		lDESEN := .f.
	EndIf

	If ReadVar() == 'M->TR7_SERVIC'
		DbSelectArea("ST4")
		DbSetOrder(1)
		If DbSeek(xFilial("ST4")+M->TR7_SERVIC)
			If NGFUNCRPO("NGSERVBLOQ",.F.) .And. !NGSERVBLOQ(M->TR7_SERVIC)
				Return .f.
			EndIf
			DbSelectArea("STE")
			DbSetOrder(1)
			If DbSeek(xFilial("STE")+ST4->T4_TIPOMAN)
				If STE->TE_CARACTE <> "C"
					MsgStop(STR0039,STR0013) //"Serviço deve ser do tipo de manutenção corretivo"###"ATENÇÃO"
					Return .f.
				EndIf
			EndIf
		EndIf
		If AllTrim(M->TR7_SERVIC) != cServRef .AND. (aScan(aServCon, {|x| x == AllTrim(M->TR7_SERVIC)}) = 0)
			MsgStop(STR0042,STR0013) //"Serviço deverá ser igual ao parâmetro MV_NGSEREF ou MV_NGSECON!"###"ATENÇÃO"
			Return .f.
		Endif
		If cServTR7 != M->TR7_SERVIC
			aCols := BlankGetd(aHeader)
			cServTR7 := M->TR7_SERVIC
			If lRetTRA
				M->TR7_ESPECI := Space(Len(TR7->TR7_ESPECI))
				M->TR7_NOMESP := ''
				cEspeTR7 := M->TR7_ESPECI
			Endif
			GetDRefresh()
			oTotal:Refresh()
		Endif
	Endif

Return .t.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT720SUL ³ Autor ³Marcos Wagner Junior   ³ Data ³ 10/05/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Busca o sulco do Pneu de acordo com o Desenho		      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA720                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function  MNT720SUL()

	Local cTRB    := GetNextAlias()
	Local oTmpTbl1

	dbSelectArea("TQS")
	aDBF := dbStruct()

	//Instancia classe FWTemporaryTable
	oTmpTbl1:= FWTemporaryTable():New( cTRB, aDBF )
	//Adiciona os Indices
	oTmpTbl1:AddIndex( "Ind01" , {"TQS_CODBEM"} )
	//Cria a tabela temporaria
	oTmpTbl1:Create()

	//--- Carrega variáveis Private
	MNTA720VAR()

	If nPosSULCO > 0

		If TR7->TR7_REABRE == "1"
			//Verifica se o Desenho Ja foi digitado
			dbSelectArea("TR8")
			dbSetOrder(1)
			If dbSeek(xFilial("TR8") + M->TR7_LOTE + aCols[n][nPosCODBEM] )
				If !Empty(TR8->TR8_DESENH) .And. M->TR8_DESENH <> TR8->TR8_DESENH

					//Verificar se houve historico posterior
					cQuery := " SELECT * FROM " + RetSqlName("TQS")+" TQS "
					cQuery += " WHERE TQS.TQS_CODBEM = '" + aCols[n][nPosCODBEM] + "' "
					cQuery += " AND TQS.TQS_DTMEAT || TQS.TQS_HRMEAT > '" + DtoS(TR7->TR7_DTRECI) + TR7->TR7_HRRECI + "' "
					cQuery += " AND TQS.TQS_FILIAL = '" + xFilial("TQS") + "' AND  TQS.D_E_L_E_T_ = '' "

					SqlToTrb(cQuery,aDBF,cTRB)

					dbSelectArea(cTRB)
					If !Eof()
						MsgStop(STR0072) //"Não é possivel alterar um desenho de um lote já recebido."
						Return .F.
					EndIf
				EndIf
			EndIf
		EndIf

		dbSelectArea("TQU")
		dbSetOrder(01)
		If dbSeek(xFilial("TQU")+M->TR8_DESENH)
			aCols[n][nPosSULCO] := TQU->TQU_SULCO
		EndIf
	EndIf

	oTmpTbl1:Delete()//Deleta Tabela Temporária

Return .t.
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MenuDef  ³ Autor ³ Denis Hyroshi Souza   ³ Data ³01/02/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Utilizacao de Menu Funcional.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMDT                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
	Local aROTINA := { { STR0001 ,"AxPesqui"  , 0 , 1},; //"Pesquisar"
	{ STR0002 ,"MNT720IN"   , 0 , 2},;    //"Visualizar"
	{ STR0003 ,"MNT720IN"  , 0 , 3},;     //"Incluir"
	{ STR0004 ,"MNT720REC" , 0 , 4, 0},;  //"Receber"
	{ STR0005 ,"MNT720IN"  , 0 , 5, 3},;  //"Excluir"
	{ STR0006 ,"MNT720IMP" , 0 , 6, 0},;  //"I&mprimir"
	{ STR0062 ,"MNT170LEG" , 0, 7,,.F.},; //"Legenda"
	{ STR0065 ,"MNT720REA" , 0 , 8, 0}}   //"Reabertura"

	//--------------------------------------------------------------------------------
	// Ponto de Entrada para carregar um aRotina específio
	//--------------------------------------------------------------------------------
	If ExistBlock("MNTA7207")
		aMNTA7207 := ExecBlock("MNTA7207", .F., .F., {aRotina})
		If ValType(aMNTA7207) == "A" .And. Len(aMNTA7207) > 0
			aRotina := aClone( aMNTA7207 )
		EndIf
	EndIf
Return aRotina

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNTA720VAL³ Autor ³Marcos Wagner Junior   ³ Data ³ 10/06/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida o valor informado pelo usuario					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA720                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTA720VAL()

	Local nValCus := 0
	Local cBanda  := ""
	Local cMedida := ""

	//--- Carrega variáveis Private
	MNTA720VAR()

	If !Positivo(M->TR8_VALOR)
		Return .f.
	EndIf

	//Procura o conteúdo da banda e medida.
	dbSelectArea( "TQS" )
	dbSetOrder( 01 )
	If dbSeek( xFilial( "TQS" )+aCols[n][nPosCODBEM] )
		cBanda  := TQS->TQS_BANDAA
		cMedida := TQS->TQS_MEDIDA
	Else
		cBanda  := Space(Len(TQS->TQS_BANDAA))
		cMedida := Space(Len(TQS->TQS_MEDIDA))
	Endif

	// Verifica se existe
	If lRetTRA
		dbSelectArea( "TRA" )
		dbSetOrder( 01 )
		If dbSeek( xFilial( "TRA" )+M->TR7_FORNEC+M->TR7_LOJA+M->TR7_SERVIC+M->TR7_ESPECI+cMedida+cBanda )
			nValCus := TRA->TRA_CUSTO
		Else
			If dbSeek( xFilial( "TRA" )+M->TR7_FORNEC+M->TR7_LOJA+M->TR7_SERVIC+M->TR7_ESPECI+cMedida+Space(Len(TQS->TQS_BANDAA)))
				nValCus := TRA->TRA_CUSTO
			Else
				nValCus := 0
			EndIf
		EndIf
	Else
		dbSelectArea( "TRA" )
		dbSetOrder( 01 )
		If dbSeek( xFilial( "TRA" )+M->TR7_FORNEC+M->TR7_LOJA+M->TR7_SERVIC+cMedida+cBanda )
			nValCus := TRA->TRA_CUSTO
		Else
			If dbSeek( xFilial( "TRA" )+M->TR7_FORNEC+M->TR7_LOJA+M->TR7_SERVIC+cMedida+Space(Len(TQS->TQS_BANDAA)))
				nValCus := TRA->TRA_CUSTO
			Else
				nValCus := 0
			EndIf
		EndIf
	EndIf

	If !Empty(aColsIni[n][nPosVALOR])
		If nValCus < M->TR8_VALOR
			If !MsgYesNo(STR0037,STR0013) //"Valor informado é diferente do valor cadastrado para o Fornecedor, confirma?"###"ATENÇÃO"
				nValCus := aColsIni[n][nPosVALOR]
				Return .F.
			EndIf
		ElseIf nValCus > M->TR8_VALOR
			Help(" ",1,STR0013,,STR0038,3,1) //"ATENÇÃO"###"Valor informado é menor que o valor cadastrado para o Fornecedor!"
			nValCus := aColsIni[n][nPosVALOR]
			Return .F.
		Endif
	EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNTA720DT ³ Autor ³Marcos Wagner Junior   ³ Data ³ 01/12/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao BNGGRAVA						   					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA720                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTA720DT(nPar)
	Local lRet := .t.
	Local aArea := GetArea()

	If !Empty(M->TR7_DTRECI) .And. M->TR7_DTLOTE > M->TR7_DTRECI
		MsgStop(STR0040,STR0013) //"Data/Hora do Recebimento não poderá ser menor que a Data/Hora do Lote!"###"ATENÇÃO"
		Return .f.
	Endif

	If !Empty(M->TR7_DTRECI) .AND. !Empty(M->TR7_HRRECI)
		If (DTOS(M->TR7_DTLOTE)+M->TR7_HRLOTE) > (DTOS(M->TR7_DTRECI)+M->TR7_HRRECI)
			MsgStop(STR0040,STR0013) //"Data/Hora do Recebimento não poderá ser menor que a Data/Hora do Lote!"###"ATENÇÃO"
			Return .f.
		Endif
	Endif

	If nPar == 2 .AND. dDATABASE == M->TR7_DTRECI
		If M->TR7_HRRECI > TIME()
			MsgStop(STR0041,STR0013) //"Hora do Recebimento não poderá ser maior que a Hora atual!"###"ATENÇÃO"
			Return .f.
		Endif
	Endif

	If nPar == 1 .And. !Empty(M->TR7_DTRECI)
		If NGIFDBSEEK("TR8",M->TR7_LOTE,1)
			While !Eof() .And. TR8->TR8_FILIAL == xFilial("TR8") .And. TR8->TR8_LOTE == M->TR7_LOTE
				If NGIFDBSEEK("ST9",TR8->TR8_CODBEM,1) .And. DTOS(M->TR7_DTRECI) < DTOS(ST9->T9_DTCOMPR)
					MsgStop(STR0054,STR0013) //"Data de Recebimento deverá ser maior que a data de compra dos pneus relacionados!"###"ATENÇÃO"
					lRet := .f.
					Exit
				Endif
				DbSelectArea("TR8")
				Dbskip()
			End
		Endif
	Endif
	If TR7->TR7_REABRE == "1" .And. ( nPar == 1 .Or. nPar == 3 )
		dbSelectArea("TR7")
		dbSetOrder(1)
		dbSeek(xFilial("TR7")+M->TR7_LOTE)
		If M->TR7_DTRECI <> TR7->TR7_DTRECI .Or. M->TR7_HRRECI <> TR7->TR7_HRRECI
			MsgStop(STR0067,STR0013) //"Não é possivel alterar a data/hora de um lote reaberto."
			lRet := .F.
		EndIf
	EndIf

	RestArea(aArea)

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNTA720VLO³ Autor ³Marcos Wagner Junior   ³ Data ³ 02/12/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao X3_VALID do campo TR8_VALOR   					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA720                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTA720VLO()

	//--- Carrega variáveis Private
	MNTA720VAR()

	nTotal := nTotal - aCols[n][nPosVALOR]
	nTotal := nTotal + M->TR8_VALOR

	GetDRefresh()
	oTotal:Refresh()

Return .t.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNTA720ESP³ Autor ³Marcos Wagner Junior   ³ Data ³ 02/12/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao X3_VALID do campo TR7_ESPECI  					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA720                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTA720ESP()
	Local aOldArea := GetArea()
	Local lRet := .t.

	dbSelectArea("TPO")
	dbSetOrder(01)
	If !dbSeek(xFilial("TPO")+M->TR7_FORNEC+M->TR7_LOJA+M->TR7_SERVIC+M->TR7_ESPECI)
		MsgStop(STR0043,STR0013) //"Especialidade informada é inválida!"###"ATENÇÃO"
		lRet := .f.
	Else
		If cEspeTR7 != M->TR7_ESPECI
			aCols := BlankGetd(aHeader)
			cEspeTR7 := M->TR7_ESPECI
			GetDRefresh()
			oTotal:Refresh()
		Endif
	Endif

	RestArea(aOldArea)

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNTA720FOR³ Autor ³Marcos Wagner Junior   ³ Data ³ 10/12/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao X3_VALID do campo TR7_FORNEC  					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA720                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTA720FOR()
	Local aOldArea := GetArea()
	Local lRet := .F.
	Local cLojaTPO

	dbSelectArea("SA2")
	dbSetOrder(1)
	If !Empty(M->TR7_FORNEC) .AND. !Empty(M->TR7_LOJA)
		lRet := EXISTCPO("SA2",Alltrim(M->TR7_FORNEC+M->TR7_LOJA))
	ElseIf !Empty(M->TR7_FORNEC) .AND. Empty(M->TR7_LOJA)
		If dbSeek(xFilial("SA2")+M->TR7_FORNEC)
			While Alltrim(SA2->A2_COD) == Alltrim(M->TR7_FORNEC) .and. !lRet
				If dbSeek(xFilial("SA2")+M->TR7_FORNEC+SA2->A2_LOJA) .and. SA2->A2_MSBLQL <> '1'
					lRet := EXISTCPO("SA2",Alltrim(M->TR7_FORNEC+SA2->A2_LOJA))
				EndIf
				dbSkip()
			End
		EndIf
		IIF(!lRet,lRet := EXISTCPO("SA2",Alltrim(M->TR7_FORNEC+SA2->A2_LOJA)),)
	ElseIf Empty(M->TR7_FORNEC) .AND. !Empty(M->TR7_LOJA)
		lRet := .T.
	EndIf
	If lRet
		If cFornTR7 != M->TR7_FORNEC .Or. M->TR7_LOJA != cLojaTR7 .Or. (TPO->TPO_FORNEC == M->TR7_FORNEC .And. M->TR7_LOJA != TPO->TPO_LOJA)
			cFornTR7 := M->TR7_FORNEC
			If TPO->TPO_FORNEC == M->TR7_FORNEC
				M->TR7_LOJA   := TPO->TPO_LOJA
			Else
				cLojaTPO := NGSEEK("TPO",M->TR7_FORNEC,1,"TPO->TPO_LOJA")
				M->TR7_LOJA := If(!Empty(cLojaTPO),cLojaTPO,Space(Len(TR7->TR7_LOJA)))
			EndIf

			SA2->(dbSeek(xFilial("SA2")+M->TR7_FORNEC+M->TR7_LOJA))
			M->TR7_SERVIC := Space(Len(TR7->TR7_SERVIC))
			M->TR7_NOMFOR := ''
			cLojaTR7 := M->TR7_LOJA
			cServTR7 := M->TR7_SERVIC
			If lRetTRA
				M->TR7_ESPECI := Space(Len(TR7->TR7_ESPECI))
				M->TR7_NOMESP := ''
				cEspeTR7 := M->TR7_ESPECI
			Endif
			aCols := BlankGetd(aHeader)
			GetDRefresh()
			oTotal:Refresh()
		Endif
	Endif

	RestArea(aOldArea)

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT720PNLT³ Autor ³Evaldo Cevinscki Jr.   ³ Data ³ 03/03/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Checa se o pneu informado nao encontra-se em outro lote    ³±±
±±³          ³ ainda nao recebido.                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA720                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT720PNLT()
	Local lAchou := .f.

	cAliasQry := GetNextAlias()
	cQuery := " SELECT * "
	cQuery += " FROM " + RetSqlName("TR7")+" TR7,"+ RetSqlName("TR8")+" TR8 "
	cQuery += " WHERE TR8.TR8_CODBEM = '"+M->TR8_CODBEM+"' "
	cQuery += " AND   TR7.TR7_FILIAL = TR8.TR8_FILIAL "
	cQuery += " AND   TR7.TR7_LOTE = TR8.TR8_LOTE "
	cQuery += " AND   TR7.TR7_DTRECI = ' ' "
	cQuery += " AND   TR7.D_E_L_E_T_ <> '*' "
	cQuery += " AND   TR8.D_E_L_E_T_ <> '*' "
	cQuery += " ORDER BY TR7.TR7_LOTE"
	cQuery := ChangeQuery(cQuery)
	dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)

	While !Eof()
		If (cAliasQry)->TR7_LOTE <> M->TR7_LOTE
			lAchou := .t.
		EndIf
		dbSkip()
	End
	(cAliasQry)->(DbCloseArea())

Return lAchou

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA720VAR
Carrega variáveis private da rotina.

@param  [lCampUsuar], Lógico, Se deve carregar campos de usuario.
@return .T.

@sample
MNTA720VAR()

@author Wagner Sobral de Lacerda
@since 25/07/2012
@version 1.0
/*/
//---------------------------------------------------------------------
Function MNTA720VAR(lCampUsuar)

	Local aNgHeader		:= {}
	Local nTamTot		:= 0
	Local nInd			:= 0
	Local cCampo		:= ""
	Local cPropri		:= ""

	// Variáveis auxiliares
	Local aAuxHeader := If(Type("aHeader") == "A", aClone(aHeader), { {"",""} })
	Default lCampUsuar := .F. // Define se usa os campos de usuário


	// Declara variáveis da GetDados
	If Type("nPosCODBEM") == "U"
		_SetOwnerPrvt("nPosCODBEM", 0)
	EndIf
	If Type("nPosMEDIDAIDA") == "U"
		_SetOwnerPrvt("nPosMEDIDA", 0)
	EndIf
	If Type("nPosTIPMOD") == "U"
		_SetOwnerPrvt("nPosTIPMOD", 0)
	EndIf
	If Type("nPosSULCOCO") == "U"
		_SetOwnerPrvt("nPosSULCO", 0)
	EndIf
	If Type("nPosDESENH") == "U"
		_SetOwnerPrvt("nPosDESENH", 0)
	EndIf
	If Type("nPosINDRELREL") == "U"
		_SetOwnerPrvt("nPosINDREL", 0)
	EndIf
	If Type("nPosVALOROR") == "U"
		_SetOwnerPrvt("nPosVALOR", 0)
	EndIf
	If Type("nPosBANDADA") == "U"
		_SetOwnerPrvt("nPosBANDA", 0)
	EndIf
	If Type("nPosMOTIVOIVO") == "U"
		_SetOwnerPrvt("nPosMOTIVO", 0)
	EndIf
	If Type("nPosGARANTANT") == "U"
		_SetOwnerPrvt("nPosGARANT", 0)
	EndIf
	If Type("nPosOBSERVERV") == "U"
		_SetOwnerPrvt("nPosOBSERV", 0)
	EndIf

	If Type("aPosUsu") == "U" //Se o array nao existir
		_SetOwnerPrvt("aPosUsu",{}) //Declara como private o array
	Else
		aPosUsu := {} //Se o array ja existir, limpa o mesmo
	EndIf

	If Type("nPosORDEM") == "U"
		_SetOwnerPrvt("nPosORDEM", 0)
	EndIf

	// Define variáveis da GetDados
	nPosCODBEM := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_CODBEM"})
	nPosMEDIDA := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_MEDIDA"})
	nPosTIPMOD := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_TIPMOD"})
	nPosSULCO  := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_SULCO"})
	nPosDESENH := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_DESENH"})
	nPosINDREL := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_INDREL"})
	nPosVALOR  := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_VALOR"})

	nPosBANDA  := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_BANDA"})
	nPosMOTIVO := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_MOTIVO"})
	nPosGARANT := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_GARANT"})
	nPosOBSERV := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_OBS"})
	nPosORDEM  := aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == "TR8_ORDEM"})

	// Define variáveis da GetDados - Campos de Usuario
	If lCampUsuar // Verifica se usa os campos de usuário

		aNgHeader := NGHeader("TR8")
		nTamTot := Len(aNgHeader)
		For nInd := 1 To nTamTot
			cCampo 		:= aNgHeader[nInd,2]
			cPropri 	:= Posicione("SX3",2,cCampo,"X3_PROPRI")

			If cPropri == "U" // Verifica se e campo de usuario
				aAdd(aPosUsu,aScan(aAuxHeader, {|x| AllTrim(Upper(x[2])) == Alltrim(cCampo)})) // Preenche um array com a posicao do campo no aHeader
			EndIf
		Next nInd
	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA720WHE
Executa o WHEN do campos.

@author Wagner Sobral de Lacerda
@since 30/07/2012

@param cCampo
Indica o ID do campo * Obrigatório

@return .T./.F.
/*/
//---------------------------------------------------------------------
Function MNTA720WHE(cCampo)

	// Variável do Retorno do WHEN
	Local lWHEN := .T.

	// Variáveis auxiliares
	Local aAuxCols   := If(Type("aCols") == "A", aClone(aCols), { {} })
	Local nAuxLinha  := If(Type("n") == "N", n, 0)

	// Defaults
	Default cCampo := ReadVar()

	//--- Carrega variáveis Private
	MNTA720VAR()

	//--------------------
	// Executa o WHEN
	//--------------------
	If cCampo == "TR8_DESENH"
		If Len(aAuxCols) > 0 .And. nAuxLinha > 0 .And. nPosINDREL > 0
			lWHEN := ( aAuxCols[nAuxLinha][nPosINDREL] == "1" )
		EndIf
	EndIf

Return lWHEN

//---------------------------------------------------------------------
/*/{Protheus.doc} MNT170LEG
Mostra a descricao da legenda

@author Tainã Alberto Cardoso
@since 04/09/2013

@return .T./.F.
/*/
//---------------------------------------------------------------------
Function MNT170LEG()
	Local aLegenda := {}

	aAdd(aLegenda,{"BR_VERDE"   ,STR0064})  //"Aberta"
	aAdd(aLegenda,{"BR_AMARELO" ,STR0068})  //"Reaberta"
	aAdd(aLegenda,{"BR_VERMELHO",STR0063})  //"Finalizada"

	BrwLegenda(cCADASTRO,STR0062,aLegenda) //"Legenda"

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNT720REA
Reabertura de O.S. em lote

@author Tainã Alberto Cardoso
@since 04/09/2013

@return .T./.F.
/*/
//---------------------------------------------------------------------
Function MNT720REA(cAlias,nRecno,nOpcx)

	Local cOP := "", cServico := ""
	Local ni
	Local aSTLPR 	:= {}
	Local aAreaSTJ 	:= {}
	Local lReabre 	:= .T.
	Local cNGMNTES	:= GetMv("MV_NGMNTES")

	If Empty(TR7->TR7_DTRECI)
		MsgInfo(STR0066)  //"Ordem de Serviço em lote não esta finalizada."
		Return .F.
	ElseIf TR7->TR7_REABRE == "1"
		MsgInfo(STR0082)  //"Ordem de Serviço ja foi reaberta."
		Return .F.
	EndIf

	//Verificar se é possivel reabrir o lote.
	If !fValRecebi(.F.)
		Return .F.
	EndIf

	//Seleciona as O.S. abertas pelo Lote
	dbSelectArea("TR8")
	dbSetOrder(1)//TR8_FILIAL+TR8_LOTE
	If dbSeek(xFilial("TR8")+TR7->TR7_LOTE)
		While !Eof() .And. TR8->TR8_FILIAL == xFilial("TR8") .And. TR8->TR8_LOTE == TR7->TR7_LOTE

			dbSelectArea("STJ")
			dbSetOrder(1) //TJ_FILIAL + TJ_ORDEM + TJ_PLANO
			If dbSeek(xFilial("STJ") + TR8->TR8_ORDEM + TR8->TR8_PLANO )
				If STJ->TJ_SITUACA <> "C" .And. STJ->TJ_TERMINO == 'S'
					//Verificar o fechamento do Estoque
					If cNGMNTES = "S" .And. !NGCHKMESFE(STJ->TJ_DTMRFIM,"P")
						Return .F.
					Endif
				EndIf
			EndIf

			//Reabre a O.S. se nao houver outra O.S. de Reforma aberta.
			//-------------------------------------------------------------
			RecLock("STJ",.F.)
			STJ->TJ_TERMINO := "N"
			STJ->TJ_SITUACA := "L"
			MsUnlock("STJ")
			//-------------------------------------------------------------
			//EndIf


			cOP := Alltrim(STJ->TJ_ORDEM) + "OS001"

			If NGIFDBSEEK("SC2",cOP,1,.F.)
				RecLock("SC2",.F.)
				Replace C2_DATRF With CtoD( "  /  /  ")
				MsUnlock("SC2")
			Else
				//--------------------------------------------------
				// Reabre OP :D
				//--------------------------------------------------
				cQuery := " UPDATE " + RetSqlName("SC2")
				cQuery += " SET D_E_L_E_T_ = '' "
				cQuery += " WHERE C2_BATROT = 'MNTA720' AND C2_NUM + C2_ITEM + C2_SEQUEN = "+ ValToSql(cOp)+" "
				cQuery += " AND C2_FILIAL = '" + xFilial('STP') + " ' "

				TcSqlExec(cQuery)
			EndIf

			If NGIFDBSEEK("STL",STJ->TJ_ORDEM+STJ->TJ_PLANO,1,.F.)
				While !Eof() .And. STL->TL_FILIAL = Xfilial("STL") .And.;
				STL->TL_ORDEM = STJ->TJ_ORDEM .And. STL->TL_PLANO = STJ->TJ_PLANO
					If STL->TL_TIPOREG = "P"
						nPosA := Ascan(aSTLPR,{|x| x[1]+x[2] == STL->TL_CODIGO+STL->TL_LOCAL})
						If nPosA = 0
							Aadd(aSTLPR,{STL->TL_CODIGO,STL->TL_LOCAL,0,0})
							nPosA := Len(aSTLPR)
						Endif
						nColA := If(Alltrim(STL->TL_SEQRELA) = "0",3,4)
						aSTLPR[nPosA,nColA] += STL->TL_QUANTID
					Endif
					Dbskip()
				End
				For ni := 1 To Len(aSTLPR)
					If aSTLPR[ni,4] < aSTLPR[ni,3]  .And. NGIFDBSEEK("SD4",aSTLPR[ni,1]+STJ->TJ_ORDEM+"OS001",1,.F.)
						RecLock("SD4",.F.)
						SD4->D4_QUANT := aSTLPR[ni,3]-aSTLPR[ni,4]
						SD4->(MsUnlock())
						If NGIFDBSEEK("SB2",aSTLPR[ni,1]+aSTLPR[ni,2],1,.F.)
							RecLock("SB2",.F.)
							SB2->B2_QEMP += aSTLPR[ni,3]-aSTLPR[ni,4]
							SB2->(MsUnlock())
						Endif
					Endif
				Next ni
			EndIf

			dbSelectArea("TR8")
			dbSkip()
		End
	EndIf

	//Limpa a data de fechamento da O.S.
	dbSelectArea("TR7")
	dbSetOrder(1)
	If dbSeek(xFilial("TR7")+TR7->TR7_LOTE)
		RecLock("TR7",.F.)
		TR7->TR7_REABRE := "1"
		MsUnlock("TR7")
	EndIf

	MsgInfo("Lote reaberto.")

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} fValRecebi
Verifica  o recebimento de uma O.S. ja Reabertura

@author Tainã Alberto Cardoso
@since 14/10/2013

@return .T./.F.
/*/
//---------------------------------------------------------------------
Function fValRecebi(lacols)

	Local cTexto 	:= ""
	Local cMask  	:= "Arquivos Texto (*.TXT) |*.txt|"
	Local oFont, oDlgl
	Local nY
	Local lMostra  := .F.
	Local cTRB     := GetNextAlias()
	Local cPneuRec := ""
	Local oTmpTbl2
	Default lAcols := .T.

	dbSelectArea("TQS")
	aDBF := dbStruct()

	//Instancia classe FWTemporaryTable
	oTmpTbl2:= FWTemporaryTable():New( cTRB, aDBF )
	//Adiciona os Indices
	oTmpTbl2:AddIndex( "Ind01" , {"TQS_CODBEM"} )
	//Cria a tabela temporaria
	oTmpTbl2:Create()


	//--- Carrega variáveis private
	MNTA720VAR()

	//Valida a rotina se for no recebimento do Pneu
	If lAcols
		For nY := 1 to len(aCols)
			If aCols[nY][nPosINDREL] == '2'
				dbSelectArea("TR8")
				dbSetOrder(2) //TR8_FILIAL+TR8_ORDEM+TR8_PLANO
				If dbSeek(xFilial("TR8") + aCols[nY][nPosORDEM])
					If !Empty(TR8->TR8_DESENH)
						//Monta o cabeçalho do log.
						If !lMostra
							lMostra := .T.
							cTexto := "Lote: " + M->TR7_LOTE+CRLF
							cTexto += STR0079+CRLF+CRLF  //"Cod.Pneu           O.S       Inconcistência"
						EndIf

						//Verificar se houve historico posterior
						cQuery := " SELECT * FROM " + RetSqlName("TQS")+" TQS "
						cQuery += " WHERE TQS.TQS_CODBEM = '" + aCols[nY][nPosCODBEM] + "' "
						cQuery += " AND TQS.TQS_DTMEAT || TQS.TQS_HRMEAT > '" + DtoS(TR7->TR7_DTRECI) + TR7->TR7_HRRECI + "' "
						cQuery += " AND TQS.TQS_FILIAL = '" + xFilial("TQS") + "' AND  TQS.D_E_L_E_T_ = '' "

						SqlToTrb(cQuery,aDBF,cTRB)

						dbSelectArea(cTRB)
						If !Eof()
							cTexto +=  aCols[nY][nPosCODBEM] + Space(5) + aCols[nY][nPosORDEM] + Space(4) + "002" +CRLF
						Else
							dbSelectArea("STJ")
							dbSetOrder(1)
							If dbSeek(xFilial("STJ")+aCols[nY][nPosORDEM])
								cTexto += Alltrim(STJ->TJ_CODBEM) + Space(5) + Alltrim(STJ->TJ_ORDEM) + SPACE(4) + "001" +CRLF
							EndIf
						EndIf
					EndIf
				EndIf
			ElseIf aCols[nY][nPosINDREL] == '1'

				//Verificar se houve historico posterior
				cQuery := " SELECT * FROM " + RetSqlName("TQS")+" TQS "
				cQuery += " WHERE TQS.TQS_CODBEM = '" + aCols[nY][nPosCODBEM] + "' "
				cQuery += " AND TQS.TQS_DTMEAT || TQS.TQS_HRMEAT > '" + DtoS(TR7->TR7_DTRECI) + TR7->TR7_HRRECI + "' "
				cQuery += " AND TQS.TQS_FILIAL = '" + xFilial("TQS") + "' AND  TQS.D_E_L_E_T_ = '' "

				SqlToTrb(cQuery,aDBF,cTRB)

				dbSelectArea(cTRB)
				If !Eof()
					If !lMostra
						lMostra := .T.
						cTexto := STR0079+CRLF+CRLF  //"Cod.Pneu           O.S       Inconcistência"
					EndIf
					cTexto +=  SubStr(aCols[nY][nPosCODBEM],1,20) + Space(5) + aCols[nY][nPosORDEM] + Space(4) + "003" +CRLF
				EndIf

			EndIf

		Next nY
	Else//Validacao para verificar se é possivel reabrir o lote

		dbSelectArea("TR8")
		dbSetOrder(1) //TR8_FILIAL+TR8_LOTE
		If dbSeek(xFilial("TR8") + TR7->TR7_LOTE)
			While !Eof() .And. xFilial("TR8") == TR8->TR8_FILIAL .And. TR7->TR7_LOTE == TR8->TR8_LOTE
				If TR8->TR8_INDREL == '2'
					If !Empty(TR8->TR8_DESENH)
						//Monta o cabeçalho do log.
						If !lMostra
							lMostra := .T.
							cTexto := "Lote: " + TR7->TR7_LOTE+CRLF
							cTexto += STR0079+CRLF+CRLF  //"Cod.Pneu           O.S       Inconcistência"
						EndIf

						//Verificar se houve historico posterior
						cQuery := " SELECT * FROM " + RetSqlName("TQS")+" TQS "
						cQuery += " WHERE TQS.TQS_CODBEM = '" + TR8->TR8_CODBEM + "' "
						cQuery += " AND TQS.TQS_DTMEAT || TQS.TQS_HRMEAT > '" + DtoS(TR7->TR7_DTRECI) + TR7->TR7_HRRECI + "' "
						cQuery += " AND TQS.TQS_FILIAL = '" + xFilial("TQS") + "' AND  TQS.D_E_L_E_T_ = '' "

						SqlToTrb(cQuery,aDBF,cTRB)

						dbSelectArea(cTRB)
						If !Eof()
							cTexto +=  TR8->TR8_CODBEM + Space(5) + TR8->TR8_ORDEM + Space(4) + "002" +CRLF
						Else
							dbSelectArea("STJ")
							dbSetOrder(1)
							If dbSeek(xFilial("STJ")+TR8->TR8_ORDEM)
								cTexto += Alltrim(STJ->TJ_CODBEM) + Space(5) + Alltrim(STJ->TJ_ORDEM) + SPACE(4) + "001" +CRLF
							EndIf
						EndIf
					EndIf
				ElseIf TR8->TR8_INDREL == '1'

					//Verificar se houve historico posterior
					cQuery := " SELECT * FROM " + RetSqlName("TQS")+" TQS "
					cQuery += " WHERE TQS.TQS_CODBEM = '" + TR8->TR8_CODBEM + "' "
					cQuery += " AND TQS.TQS_DTMEAT || TQS.TQS_HRMEAT > '" + DtoS(TR7->TR7_DTRECI) + TR7->TR7_HRRECI + "' "
					cQuery += " AND TQS.TQS_FILIAL = '" + xFilial("TQS") + "' AND  TQS.D_E_L_E_T_ = '' "

					SqlToTrb(cQuery,aDBF,cTRB)

					dbSelectArea(cTRB)
					If !Eof()
						If !lMostra
							lMostra := .T.
							cTexto := STR0079+CRLF+CRLF  //"Cod.Pneu           O.S       Inconcistência"
						EndIf
						cTexto +=  SubStr(TR8->TR8_CODBEM ,1,20) + Space(5) + TR8->TR8_ORDEM + Space(4) + "003" +CRLF
					EndIf
				EndIf

				dbSelectArea("TR8")
				dbSkip()

			End
		EndIf
	EndIf
	cTexto += CRLF + STR0084 + CRLF + STR0080 + CRLF // "Inconsistência 001" ## "Esse pneu teve o serviço (TR8_INDREL) como REALIZADO no recebimento do lote, após a reabertura não é possível alterá-lo para NÃO REALIZADO "
	cTexto += CRLF + STR0085 + CRLF + STR0083 + CRLF // "Inconsistência 002" ## "Esse pneu teve o serviço (TR8_INDREL) como NÃO REALIZADO no recebimento do lote, após a reabertura não é possível alterá-lo para  REALIZADO pois existe histórico posterior ao recebimento nas tabelas TQS-Complemento Bem-Pneus e TQV-Histórico de Sulco de Pneus. "
	cTexto += CRLF + STR0089 + CRLF // "Soluções: Favor excluir análises técnicas ou demais movimentações apontadas após o fechamento do lote."
	cTexto += CRLF + STR0086 + CRLF + STR0087 + CRLF // "Inconsistência 003" ## "Esse pneu não pode ter seu desenho alterado (TR8_DESENH) pois existe histórico posterior ao recebimento do lote nas tabelas TQS-Complemento Bem-Pneus e TQV-Histórico de Sulco de Pneus."
	cTexto += CRLF + STR0089  //"Soluções: Favor excluir análises técnicas ou demais movimentações apontadas após o fechamento do lote."

	If lMostra
		DEFINE FONT oFont NAME "Arial" SIZE 5,0
		DEFINE MSDIALOG oDlgl TITLE STR0081 From 3,0 TO 430,460 COLOR CLR_BLACK,CLR_WHITE PIXEL //"Inconsistência no Lote"
		@ 5,5 GET oMemo  VAR cTexto MEMO SIZE 215,190 OF oDlgl PIXEL
		oMemo:bRClicked := {||AllwaysTrue()}
		oMemo:oFont 	:= oFont
		oMemo:lReadOnly := .T.

		DEFINE SBUTTON FROM 200,160 TYPE 1  ACTION oDlgl:End() 							ENABLE OF oDlgl PIXEL // Ok
		DEFINE SBUTTON FROM 200,190	TYPE 13 ACTION ( cFile:=cGetFile( cMask, OemToAnsi( '' )),;
		If( cFile="", .T., MemoWrite( cFile, cTexto )),) 	ENABLE OF oDlgl PIXEL  //"Salvar Como..."

		ACTIVATE MSDIALOG oDlgl CENTERED
	Else
		oTmpTbl2:Delete()
		Return .T.
	EndIf

	oTmpTbl2:Delete()

Return .F.

//---------------------------------------------------------------------
/*/{Protheus.doc} M720TR8Mot
Valida TR8_MOTIVO

@author Bruno Lobo de Souza
@since 22/06/2016

@return .T./.F.
/*/
//---------------------------------------------------------------------
Function M720TR8Mot()

	Local lRet := .F.

	If EXISTCPO('ST8',M->TR8_MOTIVO)
		dbSelectArea("ST8")
		dbSetOrder(1)
		If !dbSeek(xFilial('ST8')+M->TR8_MOTIVO+"P")
			ShowHelpDlg(STR0013,; // "ATENÇÃO"
			{STR0092},1,; // "Verifique se a ocorrência é do tipo 'Problema'."
			{STR0093},1) // "Informe uma ocorrência do tipo 'Problema'."
			lRet := .F.
		Else
			lRet := .T.
		EndIf
	EndIf

Return lRet

//---------------------------------------------------------------------------------
/*/{Protheus.doc}  fRecebOS
Função para gerar uma nova OS em Lote quando com Pneu não realizado.

@param cBEM			-> Código do pneu
@param dRece		-> Data de Recebimento
@param cHrRec		-> Hora do Recebimento

@author Diego de Oliveira
@since  17/01/2017
@return .T.
/*/
//---------------------------------------------------------------------------------
Static Function fRecebOS()

	Local lGeraTR8 		:= .F.
	Local nZZ 			:= 0
	Local nFCountAux 	:= 0
	Local cNGUNIDT		:= SuperGetMv("MV_NGUNIDT",.F.,"D")
	Local cNGLOCPA		:= Padr( SuperGetMV("MV_NGLOCPA",.F.,"01"), TamSx3("NNR_CODIGO")[1] )
	Local cPlano		:= ""

	//Atribuiu novo valor para nova OS Lote
	dbSelectArea("TR7")
	dbSetOrder(1)
	If dbSeek(xFilial("TR7") + M->TR7_LOTE )
		ConfirmSX8()
		M->TR7_LOTE := GetSXENum( "TR7","TR7_LOTE" )
	EndIf

	For nZZ := 1 to Len(aCols)
		If aCols[nZZ][nPosINDREL] == "2"
			nIAcols := nZZ  // usado em MNTA7202
			dbSelectArea("ST4")
			dbSetOrder(1)
			dbSeek(xFilial("ST4")+M->TR7_SERVIC)

			dbSelectArea("STE")
			dbSetOrder(1)
			dbSeek(xFilial("STE")+ST4->T4_TIPOMAN)

			aRetorno := NGGERAOS(STE->TE_CARACTE,M->TR7_DTLOTE,aCols[nZZ][nPosCODBEM],M->TR7_SERVIC,'0','N','N','N')
			If aRetorno[1][1] = 'N'
				MsgStop(aRetorno[1][2],STR0013)
			Else

				cPlano := Posicione("STJ", 1, xFilial("STJ") + aRetorno[1][3], "TJ_PLANO" )

				RecLock("STL",.T.)
				STL->TL_FILIAL  := xFILIAL('STL')
				STL->TL_ORDEM   := aRetorno[1][3]
				STL->TL_PLANO   := cPlano
				STL->TL_CODIGO  := M->TR7_FORNEC
				STL->TL_USACALE := 'N'
				STL->TL_TIPOREG := 'T'
				STL->TL_TAREFA  := '0'
				STL->TL_SEQRELA := '0'
				STL->TL_SEQUENC := 0
				STL->TL_UNIDADE := 'H'
				STL->TL_QUANTID := 1
				STL->TL_DTINICI := M->TR7_DTLOTE
				STL->TL_HOINICI := M->TR7_HRLOTE
				STL->TL_LOCAL   := cNGLOCPA
				STL->TL_TIPOHOR := cNGUNIDT

				aCalDtFim := NGCALDATF(M->TR7_DTLOTE,M->TR7_HRLOTE,1,"H")

				STL->TL_DTFIM   := aCalDtFim[3]
				STL->TL_HOFIM   := aCalDtFim[4]
				STL->TL_GARANTI := 'N'
				STL->TL_FORNEC  := M->TR7_FORNEC
				STL->TL_LOJA	:= M->TR7_LOJA
				MsUnLock("STL")

				dbSelectArea("STJ")
				dbSetOrder(1)
				If dbSeek(xFilial("STJ")+STL->TL_ORDEM+STL->TL_PLANO)
					RecLock("STJ",.f.)
					STJ->TJ_TIPORET := 'S'
					MsUnLock("STJ")
				EndIf

				//------------------------------------------------------------
				// Estrutura array conforme padrao aceito pela funcao a340Ter()
				//-------------------------------------------------------------
				aTerceiros := Array( 24 )
				aTerceiros[01] := STL->TL_TAREFA
				aTerceiros[02] := STL->TL_CODIGO
				aTerceiros[03] := STL->TL_QUANTID
				aTerceiros[04] := STL->TL_DTINICI
				aTerceiros[08] := STL->TL_ORDEM
				aTerceiros[09] := STL->TL_PLANO
				aTerceiros[23] := STL->TL_FORNEC
				aTerceiros[24] := STL->TL_LOJA

				//------------------------------------------
				// Gera solicitacao de compra para terceiros
				//------------------------------------------
				a340Ter( aTerceiros , cNGLOCPA, 1 , 'H' , .T. , 1 ,/* cCodComp */, aCols[nZZ][nPosObserv] )

				//--------------------------------------------------------
				// Verifica existencia e executa ponto de entrada MNTA7202
				//--------------------------------------------------------
				NGPONTOENTR("MNTA7202")

			EndIf

			If aRetorno[1][1] == 'S'
				dbSelectArea("TR8")
				RecLock("TR8",.T.)
				TR8->TR8_FILIAL := xFilial("TR8")
				TR8->TR8_LOTE   := M->TR7_LOTE
				TR8->TR8_CODBEM := aCols[nZZ][nPosCODBEM]
				TR8->TR8_MEDIDA := aCols[nZZ][nPosMEDIDA]
				TR8->TR8_TIPMOD := aCols[nZZ][nPosTIPMOD]
				TR8->TR8_INDREL := "2"
				If nPosDESENH > 0
					TR8->TR8_DESENH := aCols[nZZ][nPosDESENH]
				EndIf
				TR8->TR8_BANDA  := NGSEEK("TQS",TR8->TR8_CODBEM,1,"TQS_BANDAA")
				TR8->TR8_VALOR  := aCols[nZZ][nPosVALOR]
				If nPosGARANT > 0
					TR8->TR8_GARANT := aCols[nZZ][nPosGARANT]
				EndIf
				TR8->TR8_OBS    := aCols[nZZ][nPosOBSERV]
				If Len(aRetorno[1]) >= 3
					TR8->TR8_ORDEM  := aRetorno[1][3]
					TR8->TR8_PLANO  := cPlano
				EndIf
				TR8->TR8_MOTIVO := aCols[nZZ][nPosMOTIVO]

				For nFCountAux := 1 To Len(aPosUsu) //Percorre o array que contem as posicoes no aHeader dos campos de usuario
					cMemory := aCols[nZZ][aPosUsu[nFCountAux]] //Preenche com o conteudo do campo
					cField  := "TR8->"+aHeader[aPosUsu[nFCountAux]][2] //Nome do campo
					Replace &cField. with cMemory //Preenche o campo com o coteudo do acols
				Next nFCountAux //Proximo registro

				MsUnLock("TR8")

				If !lGeraTR8
					lGeraTR8 := .T.
				EndIf

			EndIf
		EndIf
	Next nZZ

	If lGeraTR8

		M->TR7_DTLOTE := M->TR7_DTRECI
		M->TR7_HRLOTE := M->TR7_HRRECI
		DbSelectArea("TR7")
		If !dbSeek(xFilial("TR7") + M->TR7_LOTE)
			RecLock("TR7",.T.)
			For nFCountAux := 1 To FCount()
				cMemory := "M->"+FieldName(nFCountAux)
				cField  := "TR7->"+FieldName(nFCountAux)
				Replace &cField. with &cMemory.
			Next nFCountAux
			TR7->TR7_FILIAL := xFilial("TR7")
			TR7->TR7_REABRE := "2"
			TR7->TR7_DTRECI := CtoD(Space(TAMSX3("TR7_DTRECI")[1]))
			TR7->TR7_HRRECI := Space(TAMSX3("TR7_HRRECI")[1])
			MsUnLock("TR7")
		EndIf

		ConfirmSX8()

	EndIf

Return .T.

//---------------------------------------------------------------------------------------------------
/*/{Protheus.doc} f720MtTela - Monta Tela

Monta valores de disposição e tamanhos utilizado na tela e no panel.

@sample
MenuDef()

@author Maicon André Pinheiro
@since 02/09/2016
/*/
//---------------------------------------------------------------------------------------------------
Static Function f720MtTela()

	oSize := FwDefSize():New(.T.) // Com enchoicebar

	//Calcula a porcentagem dos panels, considerando 90% da tela, visto que a faixa de ações relacionadas na P12 ocupa em média 10% da tela.
	nTam055Per := oSize:aWorkArea[4] * 0.55 // Tamanho de 55% para a Enchoice
	nTam045Per := oSize:aWorkArea[4] * 0.45 // Tamanho de 45% para o GetDados
	nTam005Per := oSize:aWorkArea[4] * 0.05 // Tamanho de 5% para o valor total
	nTamGetDds := nTam045Per - 30           // Altura da GetDados descontando faixa
	nTamHoriz  := oSize:aWorkArea[3] - 4    // Desconta 4 pixeis do tamanho, pois as laterais possuem o proprio panel.
	nLinIniTla := oSize:aWindSize[1]        // Linha  inicial da tela
	nColIniTla := oSize:aWindSize[2]        // Coluna inicial da tela
	nLinFimTla := oSize:aWindSize[3]        // Linha  final   da tela
	nColFimTla := oSize:aWindSize[4]        // Coluna final   da tela

Return .T.
