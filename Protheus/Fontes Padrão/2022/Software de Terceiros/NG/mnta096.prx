#INCLUDE "MNTA096.ch"
#INCLUDE "Protheus.ch"
#INCLUDE "FWMVCDEF.CH"

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNTA0096
Cadastro de desenho de Pneus

@author Wexlei Silveira
@since 22/08/06
@version P12
/*/
//------------------------------------------------------------------------------
Function MNTA096()

	Local oBrowse

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 95 )

		oBrowse := FWMBrowse():New()
		oBrowse:SetAlias("TQU") // Alias da tabela utilizada
		oBrowse:SetMenuDef("MNTA096") // Nome do fonte onde esta a função MenuDef
		oBrowse:SetDescription(STR0006) // Descrição do browse //"Cadastro de Desenhos"
		oBrowse:Activate()

	EndIf

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Opções de menu

@author Wexlei Silveira
@since 09/01/2018
@return aRotina - Estrutura
	[n,1] Nome a aparecer no cabecalho
	[n,2] Nome da Rotina associada
	[n,3] Reservado
	[n,4] Tipo de Transação a ser efetuada:
		1 - Pesquisa e Posiciona em um Banco de Dados
		2 - Simplesmente Mostra os Campos
		3 - Inclui registros no Bancos de Dados
		4 - Altera o registro corrente
		5 - Remove o registro corrente do Banco de Dados
		6 - Alteração sem inclusão de registros
		7 - Cópia
		8 - Imprimir
	[n,5] Nivel de acesso
	[n,6] Habilita Menu Funcional
/*/
//---------------------------------------------------------------------
Static Function MenuDef()
//Inicializa MenuDef com todas as opções
Return FWMVCMenu( 'MNTA096' )

//---------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Regras de Modelagem da gravacao

@author Wexlei Silveira
@since 09/01/2018
@version P11
@return Nil
/*/
//---------------------------------------------------------------------
Static Function ModelDef()
	// Cria a estrutura a ser usada no Modelo de Dados
	Local oStructTQU := FWFormStruct( 1, 'TQU', /*bAvalCampo*/,/*lViewUsado*/ )
	Local oModel

	// Cria o objeto do Modelo de Dados
	oModel := MPFormModel():New('MNTA096',,{|| fPosValid() },, /*bCancel*/ )

	// Adiciona ao modelo uma estrutura de formulário de edição por campo
	oModel:AddFields( 'MNTA096_TQU', /*cOwner*/, oStructTQU, /*bPreValidacao*/, /*bPosValidacao*/, /*bCarga*/ )

	// Adiciona a descricao do Modelo de Dados
	oModel:SetDescription( STR0006 )

	// Adiciona a descricao do Componente do Modelo de Dados
	oModel:GetModel('MNTA096_TQU' ):SetDescription( STR0006 ) // "Cadastro de Desenhos"
Return oModel

//---------------------------------------------------------------------
/*/{Protheus.doc} ViewDef
Regras de Interface com o Usuario

@author Wexlei Silveira
@since 09/01/2018
@version P11
@return Nil
/*/
//---------------------------------------------------------------------
Static Function ViewDef()

	// Cria um objeto de Modelo de Dados baseado no ModelDef do fonte informado
	Local oModel   := FWLoadModel( 'MNTA096' )
	// Cria a estrutura a ser usada na View
	Local oStructTQU := FWFormStruct( 2, 'TQU' )

	// Cria o objeto de View
	oView := FWFormView():New()

	// Define qual o Modelo de dados será utilizado
	oView:SetModel( oModel )

	//Adiciona no nosso View um controle do tipo FormFields(antiga enchoice)
	oView:AddField( 'VIEW_TQU', oStructTQU, 'MNTA096_TQU' )

	//Adiciona um titulo para o formulário
	oView:EnableTitleView( 'VIEW_TQU' ,STR0006 ) // "Cadastro de Desenhos"

	// Relaciona o ID da View com o "box" para exibicao
	oView:SetOwnerView( 'VIEW_TQU' )

	//Inclusão de itens no Ações Relacionadas de acordo com o NGRightClick
	NGMVCUserBtn(oView)

Return oView

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNT096TWI
Valida TWI para que não permita ser menor do que o cadastrado na Rotina de
Desenho e/ou menor do que o permitido por Lei.

@author	 Eduardo Mussi
@since	 17/10/2015
@version P12
@param	 nAtualTWI - Memoria do campo TWI - Obrigatório
@example Usado no X3_VALID dos campos TQS_TWI e TQU_TWI
@return	 Caso encontre alguma inconsistência retorna .F.
/*/
//------------------------------------------------------------------------------
Function MNT096TWI(nAtualTWI)

	Local lReturn	:= .T.

	//TWI Minimo pela Resolução nº 558 de 15/04/1980 / CONTRAN
	Local nMinTWI 	:= 1.6

	Default nAtualTWI := 0

	//Verifica se é diferente de vazio, se é referente ao Brasil
	If !Empty(nAtualTWI) .And. cPaisLoc == "BRA"
		//Se banda for diferente de Original também será considerado TWI cadastrado no Desenho
		If readvar() == "M->TQS_TWI" .And. M->TQS_BANDAA <> "1"
			If !Empty(M->TQS_DESENH)
				//Busca Limite definido no desenho do pneu.
				nLimTQUTWI := NGSEEK("TQU",M->TQS_DESENH, 1, 'TQU_TWI')
				//Verifica se o TWI informado é menor do que foi cadastrado no desenho do pneu.
				If nAtualTWI < nLimTQUTWI
					//Retorna mensagem informando a não conformidade.
					//"O (TWI) do pneu" #### "é inferior à margem de segurança (TWI) informada no desenho "###",
					// portanto a operação não pode ser realizada."
					Help(,,'HELP',,STR0007 + ' "' + AllTrim(M->T9_NOME) + '" ' + STR0008 + ' "' + Alltrim(M->TQS_DESENH) + '",' + STR0014,1,0)
					lReturn := .F.
				EndIf
			ElseIf Empty(M->TQS_BANDAA)
				//Caso não tenha informado a Banda.
				Help(,,'HELP',,STR0009 + ' "' + AllTrim(M->T9_NOME) + '"',1,0)//"Informar Banda para o"
				lReturn := .F.
			ElseIf Empty(M->TQS_DESENH)
				//Caso não tenha informado o Desenho
				Help(,,'HELP',,STR0010 + ' "' + AllTrim(M->T9_NOME) + '"',1,0)//"Informar Desenho para o"
				lReturn := .F.
			EndIf
		EndIf
		//Verifica se o TWI informado está dentro da Resolução.
		If  lReturn .And. nAtualTWI < nMinTWI
			//Retorna mensagem informando a não conformidade.
			//"TWI informado é menor do que o permitido por Lei - Resolução nº 558/80" +
			//"TWI minimo permitido é 1,6mm"
			Help(,,'HELP',,STR0011 + Chr(13)+Chr(10) + STR0012,1,0)
			lReturn := .F.
		EndIf
	EndIf

Return lReturn

//------------------------------------------------------------------------------
/*/{Protheus.doc} fPosValid
Consistência final da rotina, valida se existem outros registros do mesmo desenho
com outros fabricantes, se existir valida se o campo TWI é o mesmo.

@author	 João Ricardo Santini Zandoná
@since	 21/09/2022
@version P12
@return	 logico, Retorna o resultado da validacao realizada, caso encontre outro
		 registro com o mesmo desenho e fabricante diferente, e o campo TWI
		 diferente, retorna .F.
/*/
//------------------------------------------------------------------------------
Static Function fPosValid()

	Local lReturn   := .T.
	Local oModel    := FWModelActive()
	Local cAliasQry := GetNextAlias()

	If oModel:GetOperation() != MODEL_OPERATION_DELETE

		BeginSQL Alias cAliasQry

			SELECT
				TQU_TWI
			FROM
				%table:TQU% TQU
			WHERE
				TQU.TQU_FILIAL = %xFilial:TQU%                                      AND
				TQU.TQU_TWI    <> %exp:oModel:GetValue( 'MNTA096_TQU', 'TQU_TWI' )% AND
				TQU.TQU_DESENH = %exp:oModel:GetValue('MNTA096_TQU','TQU_DESENH')%  AND
				TQU.TQU_FABRIC <> %exp:oModel:GetValue('MNTA096_TQU','TQU_FABRIC')% AND
				TQU.%NotDel%
		EndSql

		If (cAliasQry)->(!EoF())
				
				lReturn := .F.
				Help( NIL, 1, STR0013, NIL, STR0015, 1, 0, NIL, NIL, NIL, NIL, NIL, { STR0016+cValToChar( (cAliasQry)->TQU_TWI ) } ) // "ATENÇÃO"###
																																	// "Já existe um registro desse desenho para outro fabricante com um TWI diferente."###
																																	// "O campo TWI de todos os registros desse desenho devem ter o mesmo valor. TWI: "
		EndIf

		(cAliasQry)->(dbCloseArea())

	EndIf

Return lReturn
