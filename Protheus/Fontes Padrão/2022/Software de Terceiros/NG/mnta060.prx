#INCLUDE "Protheus.ch"
#INCLUDE "FWMVCDef.ch"
#INCLUDE "MNTA060.ch"

//-------------------------------------------------------------------
/*/{Protheus.doc} MNTA060
Programa de Desgaste por Produção

@author      Paulo Pego
@author MVC  Maicon André Pinheiro (MVC)
@since       10/09/97
@since  MVC  13/02/2018
@version P12
/*/
//-------------------------------------------------------------------
Function MNTA060()

    Local aArea   := GetArea()
    Local oBrowse := Nil

	Private aRotina := {}

    //Instânciando FWMBrowse - Somente com dicionário de dados
    oBrowse := FWMBrowse():New()

    //Setando a tabela de cadastro de Desgaste por Produção
    oBrowse:SetAlias("STR")

    //Setando a descrição da rotina
    oBrowse:SetDescription(STR0006) //"Desgaste por Produção"

    //Ativa a Browse
    oBrowse:Activate()

    RestArea(aArea)

Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Menu Options

@author Maicon André Pinheiro
@since 13/02/2018
@version P12
@return Array - aRotina
/*/
//------------------------------------------------------------------------------
Static Function MenuDef()

	aRotina := {}

    //Adicionando opções
    ADD OPTION aRotina TITLE STR0002 ACTION "VIEWDEF.MNTA060" OPERATION MODEL_OPERATION_VIEW   ACCESS 0 //"Visualizar"
    ADD OPTION aRotina TITLE STR0003 ACTION "VIEWDEF.MNTA060" OPERATION MODEL_OPERATION_INSERT ACCESS 0 //"Incluir"
    ADD OPTION aRotina TITLE STR0004 ACTION "VIEWDEF.MNTA060" OPERATION MODEL_OPERATION_UPDATE ACCESS 0 //"Alterar"
    ADD OPTION aRotina TITLE STR0005 ACTION "VIEWDEF.MNTA060" OPERATION MODEL_OPERATION_DELETE ACCESS 0 //"Excluir"

Return aRotina

//------------------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Modelo de dados da rotina

@author Maicon André Pinheiro
@since 13/02/2018
@version P12
@return oModel
/*/
//------------------------------------------------------------------------------
Static Function ModelDef()

	Local oModel     := Nil
	Local bPre       := {|oModel| .T.}
	Local bPos       := {|oModel|fPosValid(oModel)}
    Local oStructAux := FWFormStruct(1,"STR") //Criação da estrutura de dados utilizada na interface

	oModel := MPFormModel():New("MNTA060",bPre,bPos) //Cria o objeto do Modelo de Dados
    oModel:SetDescription(STR0006) //"Desgaste por Produção"
    oModel:AddFields("MNTA060_STR",,oStructAux) //Atribuindo formulários para o modelo

Return oModel

//-----------------------------------------------------------
/*/{Protheus.doc} ViewDef
Interface da rotina

@author Maicon André Pinheiro
@since 13/02/2018
@version P12
@return oView
/*/
//-----------------------------------------------------------
Static Function ViewDef()

	Local oModel     := FWLoadModel("MNTA060")
	Local oStructAux := FWFormStruct(2,"STR")
	Local oView      := FWFormView():New()

	oView:SetModel(oModel)                              // Objeto do model a se associar a view.
	oView:AddField("VIEW_STR",oStructAux,"MNTA060_STR") // Adiciona no nosso View um controle do tipo FormFields(antiga enchoice)
	oView:CreateHorizontalBox("TELA",100)               // Criar um "box" horizontal para receber elementos da view
	oView:SetOwnerView("VIEW_STR","TELA")               // Associa um View a um box

	oStructAux:RemoveField("TR_TIPOPRO")
	
	//Inclusão de itens nas Ações Relacionadas de acordo com O NGRightClick
	NGMVCUserBtn(oView)

Return oView

//-------------------------------------------------------------------
/*/{Protheus.doc} MNTA060VLD
Validação de campos

@author  Maicon André Pinheiro
@since   13/02/2018
@version P12
/*/
//-------------------------------------------------------------------
Function MNTA060VLD(cField)

	Local lRet       := .T.
	Local oModel     := FWModelActive()
	Local nOperation := oModel:GetOperation()
	Local cBemFami   := oModel:GetValue("MNTA060_STR", "TR_BEMFAMI")
	Local cCodBem    := oModel:GetValue("MNTA060_STR", "TR_CODBEM")
	Local cProduto   := oModel:GetValue("MNTA060_STR", "TR_PRODUTO")
	Local cFator     := oModel:GetValue("MNTA060_STR", "TR_FATOR")

	Default cField := ReadVar()

	If "TR_BEMFAMI" $ cField

		If !Empty(cBemFami)
			dbSelectArea("ST6")
			dbSetOrder(1)
			If !dbSeek(xFilial("ST6") + cBemFami)
				lRet :=  .F.
				Help(" ",1,"FAMINAOEXIST")

			ElseIf nOperation == 3

				dbSelectArea("STR")
				dbSetOrder(1)
				If dbSeek(xFilial("STR") + cBemFami + cCodBem + cProduto)
					Help(" ",1,"JAEXISTINF")
					lRet := .F.
				EndIf
			EndIf
		EndIf

	ElseIf "TR_CODBEM" $ cField

		If !Empty(cCodBem)
			dbSelectArea("ST9")
			dbSetOrder(1)
			If !dbSeek(xFilial("ST9") + cCodBem)
				lRet :=  .F.
				Help(" ",1,"BEMNAOEXIST")
			ElseIf ST9->T9_POSCONT = 0
				lRet :=  .F.
				Help(" ",1,"BEMNCONTDR")
			ElseIf nOperation == 3
				dbSelectArea("STR")
				dbSetOrder(1)
				If dbSeek(xFilial("STR") + cBemFami + cCodBem + cProduto)
					Help(" ",1,"JAEXISTINF")
					lRet := .F.
				EndIf
			EndIf
		Endif

	ElseIf "TR_PRODUTO" $ cField

		dbSelectArea("SB1")
		dbSetOrder(1)
		If !dbSeek(xFilial("SB1") + cProduto)
			If nOperation == 3
				dbSelectArea("STR")
				dbSetOrder(1)
				If dbSeek(xFilial("STR") + cBemFami + cCodBem + cProduto)
					Help(" ",1,"JAEXISTINF")
					lRet := .F.
				Else
					oModel:LoadValue("MNTA060_STR","TR_NOME",Space(TAMSX3("TR_NOME")[1]))
				EndIf
			Else
				oModel:LoadValue("MNTA060_STR","TR_NOME",Space(TAMSX3("TR_NOME")[1]))
			EndIf
		Else
			//Verifica se o produto é produzido.
			dbSelectArea("SG1")
			dbSetOrder(1)
			If !dbSeek(xFilial("SG1") + cProduto)
				lRet := .F.
				Help(" ",1,"NAOPRODUZIDO")
			Else
				If !EXISTCPO("SB1",cProduto) //Não permite selecionar um produto 'bloqueado'
					lRet := .F.
				ElseIf nOperation == 3
					dbSelectArea("STR")
					dbSetOrder(1)
					If dbSeek(xFilial("STR") + cBemFami + cCodBem + cProduto)
						Help(" ",1,"JAEXISTINF")
						lRet := .F.
					Else
						oModel:LoadValue("MNTA060_STR","TR_NOME",SB1->B1_DESC)
					EndIf
				Else
					oModel:LoadValue("MNTA060_STR","TR_NOME",SB1->B1_DESC)
				EndIf
			EndIf
		EndIf

	ElseIf "TR_FATOR" $ cField

		If cFator <= 0
			Help(,,STR0008,,STR0010,1,0) //"ATENÇÃO"##"O Fator deve ser maior que zero."
			lRet := .F.
		EndIf

	EndIf

Return lRet

//------------------------------------------------------------------------------
/*/{Protheus.doc} MNT060WHEN
Define modo de edição de Campos

@author Maicon André Pinheiro
@since 13/02/2018
@version P12
@return lAbreCampo - Indica se campo ficará aberto
/*/
//------------------------------------------------------------------------------
Function MNT060WHEN(cField)

	Local lAbreCampo := .T.
	Local oModel     := FWModelActive()
	Local nOperation := oModel:GetOperation()
	Local cBemFami   := oModel:GetValue("MNTA060_STR", "TR_BEMFAMI")
	Local cCodBem    := oModel:GetValue("MNTA060_STR", "TR_CODBEM")
	Local cProduto   := oModel:GetValue("MNTA060_STR", "TR_PRODUTO")

	Default cField := ReadVar()

	If "TR_BEMFAMI" $ cField
		lAbreCampo := Empty(cCodBem) .And. nOperation == 3

	ElseIf "TR_CODBEM" $ cField

		lAbreCampo := Empty(cBemFami) .And. nOperation == 3

	ElseIf "TR_PRODUTO" $ cField

		lAbreCampo := nOperation == 3

	ElseIf "TR_NOME" $ cField

		If nOperation == 3
			If Empty(cProduto)
				lAbreCampo := .F.
			Else
				dbSelectArea("SB1")
				dbSetOrder(1)
				If dbSeek(xFilial("SB1") + cProduto)
					lAbreCampo := .F.
				EndIf
			EndIf
		Else
			lAbreCampo := .F.
		EndIf

	EndIf

Return lAbreCampo

//-------------------------------------------------------------------
/*/{Protheus.doc} fPosValid
Pós validação do gravação do registro.

@author  Maicon André Pinheiro
@since   13/02/2018
@version P12
/*/
//-------------------------------------------------------------------
Function fPosValid(oModel)

	Local lRet       := .T.
	Local nOperation := oModel:GetOperation()
	Local cBemFami   := oModel:GetValue("MNTA060_STR", "TR_BEMFAMI")
	Local cCodBem    := oModel:GetValue("MNTA060_STR", "TR_CODBEM")
	Local cProduto   := oModel:GetValue("MNTA060_STR", "TR_PRODUTO")

	If nOperation == 3

		dbSelectArea("STR")
		dbSetOrder(1)
		If dbSeek(xFilial("STR") + cBemFami + cCodBem + cProduto)
			Help(" ",1,"JAEXISTINF")
			lRet := .F.
		EndIf

		If lRet

			If Empty(cBemFami) .And. Empty(cCodBem)
				Help(,,STR0008,,STR0009,1,0) //"ATENÇÃO"##"É necessário informar um Código de Família ou Código de Bem"
				lRet := .F.
			Else
				dbSelectArea("SB1")
				dbSetOrder(01)
				If dbSeek(xFilial("SB1") + cProduto)
					oModel:SetValue("MNTA060_STR","TR_TIPOPRO","S")
				EndIf
			EndIf

		EndIf

	EndIf

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} MNT060Filt
Funcão para filtrar o F3 do produto, visto que quando é usado o F3
apesar de a função fazer as corretas validações, o sistema permite sair
do campo mesmo com o registro inválido.

@author  Guilherme Freudenburg
@since   09/07/2018
@version 01

@return lRet, Lógico, Caso .T. adiciona o registro, caso .F. registro não é mostrado.
/*/
//-------------------------------------------------------------------
Function MNT060Filt()

	Local lRet     := .T.
	Local cProduto := SB1->B1_COD
	Local aAreaSB1 := SB1->(GetArea()) // Salva área posicionada.

	dbSelectArea("SG1")
	dbSetOrder(1)
	If !dbSeek(xFilial("SG1") + cProduto) // Verifica se o produto é produzido.
		lRet := .F.
	EndIf

	RestArea(aAreaSB1) // Retorna área salva.

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} MNT060SB1F
Funcão para filtrar o F3 do produto, executado query direto no banco.

@author  Tainã Alberto Cardoso
@since   30/11/2018
@version 01

@return cReturn, Caracter, Consulta realizada no banco de dados
/*/
//-------------------------------------------------------------------
Function MNT060SB1F()

	Local cReturn := ""

	cReturn := "@"
	cReturn +=	"B1_FILIAL = " + ValToSQL(xFilial("SB1"))
	cReturn +=	" AND D_E_L_E_T_ <> '*'"
	cReturn +=	" AND B1_COD IN ( "
	cReturn +=					  " SELECT G1_COD FROM " + RetSQLName("SG1") + " SG1 "
	cReturn +=					  " JOIN "+ RetSQLName("SB1") + " SB1"
	cReturn +=					  " ON SG1.G1_COD = SB1.B1_COD "
	cReturn +=					  " WHERE SG1.G1_FILIAL = " + ValToSQL(xFilial("SG1"))
	cReturn +=					  " AND SB1.B1_FILIAL = " + ValToSQL(xFilial("SB1"))
	cReturn +=					  " AND SB1.D_E_L_E_T_ <> '*' "
	cReturn +=					  " AND SG1.D_E_L_E_T_ <> '*')"

Return cReturn
