#INCLUDE "Mnta175.ch"
#INCLUDE "PROTHEUS.CH"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA175
Atualizacao do Custo de Mao de Obra Com Base no Contrato
@author Denis Hyroshi de Souza
@since 13/08/02
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA175()     
	
	Local vVETHORAS := {}

	//+-------------------------------------------------------------------+
	//| Armazena variaveis p/ devolucao (NGRIGHTCLICK) 					  |
	//+-------------------------------------------------------------------+
	Local bKeyF9,bKeyF10,bKeyF11,bKeyF12
	Local aOldMenu
	Local aNGCAD02 := {}

	
	Private asMenu 

	bKeyF9  := SetKey(VK_F9)          
	bKeyF10 := SetKey(VK_F10)
	bKeyF11 := SetKey(VK_F11)
	bKeyF12 := SetKey(VK_F12)
	SetKey( VK_F9, { | | NGVersao( "MNTA175" , 1 ) } )
	SETKEY(VK_F10,Nil)
	SETKEY(VK_F11,Nil)
	SETKEY(VK_F12,Nil)

	aOldMenu := ACLONE(asMenu)
	asMenu   := NGRIGHTCLICK("MNTA175") 

	aNGCAD02:={;
				If(Type("aCHOICE")   == "A",ACLONE(aCHOICE),{}),;
				If(Type("aVARNAO")   == "A",ACLONE(aVARNAO),{}),;
				If(Type("aGETNAO")   == "A",ACLONE(aGETNAO),{}),;
				If(Type("cGETWHILE") == "C",cGETWHILE,NIL),;
				If(Type("cGETMAKE")  == "C",cGETMAKE,NIL),;
				If(Type("cGETKEY")   == "C",cGETKEY,NIL),;
				If(Type("cGETALIAS") == "C",cGETALIAS,NIL),;
				If(Type("cTUDOOK")   == "C",cTUDOOK,NIL),;
				If(Type("cLINOK")    == "C",cLINOK,NIL),;
				If(Type("aRELAC")    == "A",ACLONE(aRELAC),{}),;
				If(Type("aCHKDEL")   == "A",ACLONE(aCHKDEL),{}),;
				If(Type("bngGRAVA")  == "A",ACLONE(bngGRAVA),{}),;
				If(Type("aNGBUTTON") == "A",ACLONE(aNGBUTTON),{});
			  }

	cCadastro := OemToAnsi(STR0001)

	//+-------------------------------------------------------------------+
	//| Ativa tecla F10 para acessar os parametros                     	  |
	//+-------------------------------------------------------------------+
	//+-------------------------------------------------------------------+
	//| Verifica as perguntas selecionadas                           	  |
	//| mv_par01     // De  Contrato                                 	  |
	//| mv_par02     // Ate Contrato                                 	  |
	//| mv_par03     // Mes do Calculo                               	  |
	//| mv_par04     // Ano do Calculo                                	  |
	//+-------------------------------------------------------------------+
	SetKey( VK_F12, { || Pergunte("MNT175",.T.) } )

	If Pergunte("MNT175",.T.)
		Processa({|lEnd| A175EXEC()})
	EndIf

	Set Key VK_F12  To

	//+-------------------------------------------------------------------+
	//| Recupera a Ordem Original do arquivo principal               	  |
	//+-------------------------------------------------------------------+

	DbSelectArea("STL")
	DbSetOrder(01) 

	//+-------------------------------------------------------------------+
	//| Devolve variaveis armazenadas (NGRIGHTCLICK) 					  |
	//+-------------------------------------------------------------------+
	SETKEY(VK_F9,bKeyF9)
	SETKEY(VK_F10,bKeyF10)
	SETKEY(VK_F11,bKeyF11)
	SETKEY(VK_F12,bKeyF12)

	asMenu  := ACLONE(aOldMenu)
	aCHOICE := ACLONE(aNGCAD02[1])
	aVARNAO := ACLONE(aNGCAD02[2])
	AGETNAO := ACLONE(aNGCAD02[3])
	If(aNGCAD02[4] != NIL,cGETWHILE := aNGCAD02[4],)
	If(aNGCAD02[5] != NIL,cGETMAKE  := aNGCAD02[5],)
	If(aNGCAD02[6] != NIL,cGETKEY   := aNGCAD02[6],)
	If(aNGCAD02[7] != NIL,cGETALIAS := aNGCAD02[7],)
	If(aNGCAD02[8] != NIL,cTUDOOK   := aNGCAD02[8],)
	If(aNGCAD02[9] != NIL,cLINOK    := aNGCAD02[9],)
	aRELAC    := ACLONE(aNGCAD02[10])
	aCHKDEL   := ACLONE(aNGCAD02[11])
	bngGRAVA  := ACLONE(aNGCAD02[12])
	aNGBUTTON := ACLONE(aNGCAD02[13])

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} A175EXEC
PROCESSO ATUALIZA O CONTADOR DO PNEU
@author Denis Hyroshi de Souza
@since 09/08/02
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function A175EXEC()

	Local oTempTable //Obj. Tabela Temporária
	
	Private cTRB := GetNextAlias()//Alias Tabela Temporária
	
	aCampos  := {}
		aAdd(aCAMPOS,{"CONTRATO" , "C", 08, 0})
		aAdd(aCAMPOS,{"HORAS"    , "N", 10, 2})
		aAdd(aCAMPOS,{"VALOR"    , "N", 10, 2})
		aAdd(aCAMPOS,{"ACUMU"    , "N", 12, 2})	

	//Instancia classe FWTemporaryTable
	oTempTable := FWTemporaryTable():New( cTRB, aCampos )
	//Cria indices 
	oTempTable:AddIndex( "Ind01" , {"CONTRATO"} )
	//Cria a tabela temporaria
	oTempTable:Create()

	If mv_par03 = 1 ;  nDiaFim := 31	 
	ElseIf mv_par03 = 2 
		If (mv_par04 % 4) = 0
			nDiaFim := 29
		Else
			nDiaFim := 28
		EndIf       
	ElseIf mv_par03 = 3  ; nDiaFim := 31
	ElseIf mv_par03 = 4  ; nDiaFim := 30
	ElseIf mv_par03 = 5  ; nDiaFim := 31
	ElseIf mv_par03 = 6  ; nDiaFim := 30
	ElseIf mv_par03 = 7  ; nDiaFim := 31
	ElseIf mv_par03 = 8  ; nDiaFim := 31
	ElseIf mv_par03 = 9  ; nDiaFim := 30
	ElseIf mv_par03 = 10 ; nDiaFim := 31
	ElseIf mv_par03 = 11 ; nDiaFim := 30
		Else             ; nDiaFim := 31                     
	EndIf

	nDiaIni := 1  
	nAcum   := 0

	nDiaIni := Strzero(nDiaIni,2) 
	nDiaFim := Strzero(nDiaFim,2)   
	nMes_C  := Strzero(mv_par03,2) 
	nAno_C  := Alltrim(Strzero(mv_par04,2))

	dDt_Ini := CTOD(nDiaIni+'/'+nMes_C+'/'+nAno_C) 
	dDt_Fim := CTOD(nDiaFim+'/'+nMes_C+'/'+nAno_C)  

	DbSelectArea("STL")
	DbSetOrder(06)
	DbSeek(xFilial("STL")+DTOS(dDt_Ini),.T.)
	While !Eof() .And. STL->TL_FILIAL == xFilial("STL") .And. STL->TL_DTINICI <= dDt_Fim 

		If STL->TL_TIPOREG == "M" .And. Alltrim(STL->TL_SEQRELA) <> "0"

			nQTDHORAS := 0.00     
			DbSelectArea("ST1")
			DbSetOrder(01)
			DbSeek(xFilial("ST1")+STL->TL_CODIGO)
			If !Empty(ST1->T1_CONTRAT)
				If ST1->T1_CONTRAT < mv_par01 .Or. ST1->T1_CONTRAT > mv_par02
					DbSelectArea("STL")
					DbSkip()
					Loop
				EndIf      

				DbSelectArea(cTRB)
				DbGotop()
				If !DbSeek(ST1->T1_CONTRAT)
					vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
					STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
					STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)       
					nQTDHORAS := vVETHORAS[1]

					DbSelectArea("TP3")
					DbSetOrder(01)
					DbSeek(xFilial("TP3")+ST1->T1_CONTRAT)  
					(cTRB)->(DbAppend())
					(cTRB)->CONTRATO := ST1->T1_CONTRAT
					(cTRB)->HORAS    := nQTDHORAS
					(cTRB)->VALOR    := TP3->TP3_VALOR

				Else

					vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
					STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
					STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)       
					nQTDHORAS := vVETHORAS[1]

					Reclock((cTRB),.F.)
					(cTRB)->HORAS += nQTDHORAS
					(cTRB)->(MsUnlock())

				EndIf                         
			EndIf
		EndIf 
		DbSelectArea("STL")
		DbSkip()
	End    

	DbSelectArea("STL")
	DbSetOrder(06)
	DbSeek(xFilial("STL")+DTOS(dDt_Ini),.T.)
	While !Eof() .And. STL->TL_FILIAL == xFilial("STL") .And. STL->TL_DTINICI <= dDt_Fim 

		If STL->TL_TIPOREG == "M" .And. Alltrim(STL->TL_SEQRELA) <> "0"

			nQTDHORAS := 0.00      
			DbSelectArea("ST1")
			DbSetOrder(01)
			DbSeek(xFilial("ST1")+STL->TL_CODIGO)
			If !Empty(ST1->T1_CONTRAT)

				DbSelectArea(cTRB)
				DbGotop()
				If DbSeek(ST1->T1_CONTRAT) 

					vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
					STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
					STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)       
					nQTDHORAS := vVETHORAS[1]

					Reclock("STL",.F.)
					STL->TL_CUSTO := ((cTRB)->VALOR / (cTRB)->HORAS) * nQTDHORAS 
					MsUnlock("STL")    

					Reclock((cTRB),.F.)
					(cTRB)->ACUMU += STL->TL_CUSTO 
					(cTRB)->(MsUnlock())   

					nDif := (cTRB)->VALOR - (cTRB)->ACUMU

					If nDif <= 1
						Reclock("STL",.F.)
						STL->TL_CUSTO += nDif
						MsUnlock("STL")                  
					EndIf  

				EndIf        
			EndIf
		EndIf         
		DbSelectArea("STL")
		DbSkip()
	End     

	oTempTable:Delete()//Deleta Tabela Temporária.

Return .T.