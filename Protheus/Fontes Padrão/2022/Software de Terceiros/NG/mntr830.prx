#INCLUDE "mntr830.ch"
#INCLUDE "PROTHEUS.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNTR830  ³ Autor ³ Inacio Luiz Kolling   ³ Data ³ 18/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Custo do Plano                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTR830()

	Local aNGBeginPrm := {}
	Local cString     := "STJ"
	Local cdesc1      := STR0001 //"Relatorio de Custos do Plano de Manutencao"
	Local cdesc2      := STR0002 //"Este programa seleciona por default OS finalizadas e as"
	Local cdesc3      := STR0003 //"em aberto conforme parametro selecionado."
	Local wnrel       := "MNTR830"

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 19, 95 )

		aNGBeginPrm      := NGBeginPrm()
	
		Private nTamPro	 := TamSX3("TL_CODIGO")[1] - 15
		Private aReturn  := { STR0004, 1,STR0005, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
		Private nLastKey := 0
		Private Titulo   := STR0006 //"Relatorio de Custo do Plano"
		Private Tamanho  := "G"
		Private nomeprog := "MNTR830"
		Private cperg    := "MNT830"

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Variaveis utilizadas para parametros!                        ³
		//³ MV_PAR01     // De Filial                                    ³
		//³ MV_PAR02     // Ate Filial 									 ³
		//³ MV_PAR03     // De Plano                                     ³
		//³ MV_PAR04     // Ate Plano                                    ³
		//³ MV_PAR05     // De Data Manutencao                           ³
		//³ MV_PAR06     // Ate Data Manutencao                          ³
		//³ MV_PAR07     // De Familia de Bens                           ³
		//³ MV_PAR08     // Ate Familia de Bens                          ³
		//³ MV_PAR09     // De Servico                                   ³
		//³ MV_PAR10     // Ate Servico                                  ³
		//³ MV_PAR11     // Considerar Produtos ( Sim/Nao )              ³
		//³ MV_PAR12     // Considerar Ferramenta ( Sim/Nao )            ³
		//³ MV_PAR13     // Considerar Mao de Obra ( Sim/Nao )           ³
		//³ MV_PAR14     // Considerar Terceiros   ( Sim/Nao )           ³
		//³ MV_PAR15     // Tipo de Custo          ( Medio/Standard)     ³
		//³ MV_PAR16     // Ordem                  ( Bem/Servico )       ³
		//³ MV_PAR17     // Custo Maquina Parada   ( Nao/Sim )           ³
		//³ MV_PAR18     // Aglutina M.D.O         ( Sim/Nao )           ³
		//³ mv_par19     // Detalhado ou Resumido  (Detalhado/Resumido)  ³
		//³ MV_PAR20     // Considera Data    (Da O.s/Do Insumo)         ³
		//³ MV_PAR21     // Considera OS(Liberada/pendente/ambas/nenhuma)³
		//³ MV_PAR22     // Considera Especialidade ? ( Sim/Nao )        ³
		//³ MV_PAR23     // De Localizacao                               ³
		//³ MV_PAR24     // Ate Localizacao                              ³
		//³ MV_PAR25     // Imprimir Localizacao ?  Sim/Nao				 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		Pergunte(cperg,.F.)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Envia controle para a funcao SETPRINT                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		wnrel:=SetPrint(cString,wnrel,cperg,titulo,cDesc1,cDesc2,cDesc3,.F.,"")

		If nLastKey = 27
			Set Filter To
			NGRETURNPRM( aNGBeginPrm )
			Return
		Endif

		SetDefault(aReturn,cString)
		RptStatus({|lEnd| R830Imp(@lEnd,wnRel,titulo,tamanho)},titulo)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Retorna conteudo de variaveis padroes       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		NGRETURNPRM( aNGBeginPrm )

	EndIf

Return NIL

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ R830Imp  ³ Autor ³ Inacio Luiz Kolling   ³ Data ³ 18/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Chamada do Relat¢rio                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTR830                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function R830Imp(lEnd,wnRel,titulo,tamanho)

	Local cRodaTxt := ""
	Local nCntImpr := 0
	Local cFilAte  := If(Empty(MV_PAR02),Replicate("Z", Len(MV_PAR02)),MV_PAR02)
	Local aFiliais := {}
	Local nFil,nFilPre,nFilRea
	Local cFilOld := cFilAnt

	// Objeto Tabela Temporaria
	Local oTmpTbl1
	Local oTmpTbl2

	//Verifica a picture no dicionário, devido a possibilidade de alteração
	//no tamanho dos campos 'TL_QUANTID' e 'TL_CUSTO'
	Local cPictuQnt :=  X3Picture( 'TL_QUANTID' )
	Local cPictuCus  := X3Picture( 'TL_CUSTO' )

	Private nMaxCarac
	Private li := 80 ,m_pag := 1
	Private CABEC1 := STR0027 + Space(4) + STR0106 + Space(19) + STR0107 + Space(14) + STR0108 + Space(5) + STR0109 //"Tipo    Codigo Insumo                   Nome Insumo              ...................Previsto...................     ................Realizado................"
	Private CABEC2 := Space(76) + STR0044 + Space(1) + STR0111 + Space(16) + STR0110 + Space(14) + STR0044 + Space(2) + STR0111 + Space(13) + STR0110 + Space(14) + STR0112 + Space(18) + STR0113//"                                                                            Quantid. Unid.                Custo              Quantid.  Unid.             Custo              Diferenca           Var.%"

	// Alias das Tabelas temporarias
	Private cTRB	:= GetNextAlias()
	Private cTRB2	:= GetNextAlias()

	nTipo := IIF(aReturn[4]==1,15,18)

	/*/
	1         2         3         4         5         6         7         8         9         0         1         2         3
	012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	___________________________________________________________________________________________________________________________________
	Tipo Codigo Insumo   Nome Insumo                      ..........Previsto.......... ........Realizado.........
	Quantid. Unid.     Custo   Quantid. Unid.     Custo   Diferenca       Var.%
	____________________________________________________________________________________________________________________________________
	Plano.......: xxxxxx  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	Data Plano..: 99/99/99        De.: 99/99/99     Ate.: 99/99/99
	************************************************************************************************************************************
	Bem.. : xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	Local : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	Ordem : xxxxxx Bem..: xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Serv.: xxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  Data..:xx/xx/xx

	xxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxx.xxx,xx xxx  xxx.xxx,xx xxx.xxx,xx xxx  xxx.xxx,xx xxxxx.xxx,x  xxxx,xxx.x
	xxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxx.xxx,xx xxx  xxx.xxx,xx xxx.xxx,xx xxx  xxx.xxx,xx xxxxx.xxx,x  xxxx,xxx,x
	xxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxx.xxx,xx xxx  xxx.xxx,xx xxx.xxx,xx xxx  xxx.xxx,xx xxxxx.xxx,x  xxxx,xxx,x
	xxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxx.xxx,xx xxx  xxx.xxx,xx xxx.xxx,xx xxx  xxx.xxx,xx xxxxx.xxx,x  xxxx,xxx,x

	***Total da O.S                                                        xxx.xxx,xx                 xxx.xxx,xx xxxxx.xxx,x xxxxx,xxx,x

	***Total do Bem                                                        xxx.xxx,xx                 xxx.xxx,xx xxxxx.xxx,x xxxxx,xxx,x

	***Total do Plano                                                      xxx.xxx,xx                 xxx.xxx,xx xxxxx.xxx,x xxxxx,xxx,x

	***Total Geral                                                       x,xxx.xxx,xx               x,xxx.xxx,xx xxxxx.xxx,x xxxxx,xxx,x
	/*/

	aCampos  := {}
	aAdd(aCAMPOS,{'FILIAL'   ,'C',FwSizeFilial(),0})
	aAdd(aCAMPOS,{'FILANT'   ,'C',FwSizeFilial(),0})
	AAdd(aCAMPOS,{"PLANO"    ,"C",06,0})
	AAdd(aCAMPOS,{"CODBEM"   ,"C",16,0})
	AAdd(aCAMPOS,{"SERVICO"  ,"C",06,0})
	AAdd(aCAMPOS,{"SEQRELA"  ,"C",03,0})
	AAdd(aCAMPOS,{"ORDEM"    ,"C",06,0})
	AAdd(aCAMPOS,{"TIPOREG"  ,"C",01,0})
	AAdd(aCAMPOS,{"NOMTIPO"  ,"C",04,0})
	AAdd(aCAMPOS,{"PRODUTO"  ,"C",TamSX3("TL_CODIGO")[1],0})
	AAdd(aCAMPOS,{"NOMPROD"  ,"C",40,0})
	AAdd(aCAMPOS,{"QUANTPRE" ,"N",TamSX3("TL_QUANTID")[1],2})
	AAdd(aCAMPOS,{"UNIDPRE"  ,"C",03,0})
	AAdd(aCAMPOS,{"VALORPRE" ,"N",TamSX3("TL_CUSTO")[1],2})
	AAdd(aCAMPOS,{"QUANTREA" ,"N",TamSX3("TL_QUANTID")[1],2})
	AAdd(aCAMPOS,{"UNIDREA"  ,"C",03,0})
	AAdd(aCAMPOS,{"VALORREA" ,"N",TamSX3("TL_CUSTO")[1],2})
	AAdd(aCAMPOS,{"OBS"      ,"M",10,0})
	AAdd(aCAMPOS,{"ORIGI"    ,"D",08,0})
	AAdd(aCAMPOS,{"TIPOOS"   ,"C",01,0})

	//Intancia classe FWTemporaryTable
	oTmpTbl1	:= FWTemporaryTable():New( cTRB, aCAMPOS )
	//Cria indices
	oTmpTbl1:AddIndex( "Ind01" , {"FILIAL","PLANO","CODBEM","SERVICO","ORDEM","TIPOREG","PRODUTO"}  )
	oTmpTbl1:AddIndex( "Ind02" , {"FILIAL","PLANO","SERVICO","CODBEM","ORDEM","TIPOREG","PRODUTO"} )
	//Cria a tabela temporaria
	oTmpTbl1:Create()

	aCampos  := {}
	AAdd(aCAMPOS,{"FILIAL"   ,"C",FwSizeFilial(),0})
	AAdd(aCAMPOS,{"PLANO"    ,"C",06,0})
	AAdd(aCAMPOS,{"ORDEM"    ,"C",06,0})
	AAdd(aCAMPOS,{"QUANTPRE" ,"N",TamSX3("TL_QUANTID")[1],2})
	AAdd(aCAMPOS,{"VALORPRE" ,"N",TamSX3("TL_CUSTO")[1],2})
	AAdd(aCAMPOS,{"QUANTREA" ,"N",TamSX3("TL_QUANTID")[1],2})
	AAdd(aCAMPOS,{"VALORREA" ,"N",TamSX3("TL_CUSTO")[1],2})

	//Intancia classe FWTemporaryTable
	oTmpTbl2	:= FWTemporaryTable():New( cTRB2, aCAMPOS )
	//Cria indices
	oTmpTbl2:AddIndex( "Ind01" , {"FILIAL","ORDEM","PLANO"}  )
	//Cria a tabela temporaria
	oTmpTbl2:Create()

	/*----------------------------------------------+
	| Recupera lista de filiais disponiveis na SM0. |
	+----------------------------------------------*/
	aFiliais := FWLoadSM0()

	For nFil := 1 to Len( aFiliais )

		/*--------------------------------------------------------------------------------+
		| Filtra filiais do grupo de empresas aberto e parâmetros definidos no relatório. |
		+--------------------------------------------------------------------------------*/
		If aFiliais[nFil,1] == cEmpAnt .And. ( aFiliais[nFil,2] >= MV_PAR01 .And.;
			aFiliais[nFil,2] <= cFilAte )

			/*-------------------------------------------------------+
			| Atualiza cFilAnt para consultas em diferentes filiais. |
			+-------------------------------------------------------*/
			cFilAnt := aFiliais[nFil,2]

		Else
			
			/*---------------------------------------------------------------------+
			| Filiais de grupos diferentes do aberto no momento são desconsiderado |
			+---------------------------------------------------------------------*/
			Loop

		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Possiciona os arquivos para processamento                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cCONDSTJ := 'STJ->TJ_SITUACA <> "C"'
		cCONDSTJ += ' .And. (STJ->TJ_SERVICO >= MV_PAR09 .And. STJ->TJ_SERVICO <= MV_PAR10)'

		cCONDSTS := 'STS->TS_SITUACA = "L" .And. STS->TS_TERMINO = "S" .And. (STS->TS_TIPOOS = "B" .Or. STS->TS_TIPOOS = "L")'
		cCONDSTS += ' .And. (STS->TS_SERVICO >= MV_PAR09 .And. STS->TS_SERVICO <= MV_PAR10)'

		DbSelectArea("STL")
		DbSetOrder(1)

		DbSelectArea("STT")
		DbSetOrder(1)

		DbSelectArea("STS")
		DbSetOrder(03)  // PLANO ORDEM
		DbSeek(xFilial("STS")+MV_PAR03,.t.)
		nReg := LastRec() - Recno()

		DbSelectArea("STJ")
		DbSetOrder(03)  // PLANO ORDEM BEM SERVICO
		DbSeek(xFilial("STJ")+MV_PAR03,.t.)
		nReg += (LastRec() - Recno())

		SetRegua(nReg)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Processa arquivo de O.S.                                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		While !Eof() .And. STJ->TJ_FILIAL == xFilial("STJ") .And. ;
		STJ->TJ_PLANO <= MV_PAR04

			IncRegua()

			If !&cCONDSTJ
				DbSkip()
				Loop
			EndIf

			If !NGTRCSTJOS( MV_PAR05, MV_PAR06, MV_PAR21, MV_PAR20, STJ->TJ_SITUACA, STJ->TJ_TERMINO, STJ->TJ_DTMRFIM,;
				STJ->TJ_DTMPINI )
				DbSkip()
				Loop
			EndIf

			If STJ->TJ_TIPOOS == 'B'
				DbSelectArea("ST9")
				DbSetOrder(1)
				If DbSeek(xFilial("ST9")+STJ->TJ_CODBEM)
					If ST9->T9_CODFAMI < MV_PAR07 .Or. ST9->T9_CODFAMI > MV_PAR08
						DbSelectArea("STJ")
						DbSkip()
						Loop
					EndIf
				EndIf
			EndIf

			DbSelectArea("TAF")
			DbSetOrder(7)
			If DbSeek(XFILIAL("TAF")+"X"+"2"+STJ->TJ_CODBEM)
				If TAF->TAF_CODNIV < MV_PAR23 .Or. TAF->TAF_CODNIV > MV_PAR24
					DbSelectArea("STJ")
					DbSkip()
					Loop
				EndIf
			Endif

			DbSelectArea("STL")
			DbSeek(xFilial("STL")+STJ->TJ_ORDEM+STJ->TJ_PLANO)
			While !Eof() .And. STL->TL_FILIAL == xFILIAL("STL") .And. STL->TL_ORDEM == STJ->TJ_ORDEM .And. ;
			STL->TL_PLANO == STJ->TJ_PLANO

				If (STL->TL_TIPOREG == "P" .and. MV_PAR11 != 1) .or.;
				(STL->TL_TIPOREG == "F" .and. MV_PAR12 != 1) .or.;
				(STL->TL_TIPOREG == "M" .and. MV_PAR13 != 1) .or.;
				(STL->TL_TIPOREG == "T" .and. MV_PAR14 != 1) .or.;
				(STL->TL_TIPOREG == "E" .and. MV_PAR22 != 1)
					DbSkip()
					Loop
				EndIf

				If !NGTRDTINSU(MV_PAR20,MV_PAR05,MV_PAR06,STL->TL_DTINICI)
					Dbskip()
					Loop
				EndIf

				//Calcula o custo do Insumo
				MNTA901STL()

				nEXTRA   := If(MV_PAR15 == 2, 1+( If(NGCADICBASE('TL_PCTHREX','A','STL',.F.),STL->TL_PCTHREX,VAL(STL->TL_HREXTRA)) /100), 1)
				aVETCUST := NGCUSTSTAN(STL->TL_CODIGO,STL->TL_TIPOREG,nExtra,MV_PAR18)

				nCUSTO   := aVETCUST[1] //Custo standard
				cNOMTIPO := aVETCUST[2] //Nome do tipo de insumo
				cTIPOREG := aVETCUST[3] //Tipo do Insumo
				cNOME    := aVETCUST[4] //Nome do Insumo
				cCODPROD := aVETCUST[5] //Codigo do insumo

				If NGCADICBASE("TJ_MMSYP","A","STJ",.F.)
					cObs := NGMEMOSYP(STJ->TJ_MMSYP)
				Else
					cObs := STJ->TJ_OBSERVA
				EndIf

				ckey := IIf( MV_PAR16 == 1, xFilial( 'STJ' ) + STJ->TJ_PLANO + STJ->TJ_CODBEM + STJ->TJ_SERVICO + STJ->TJ_ORDEM + cTIPOREG + cCODPROD,;
					xFilial( 'STJ' ) + STJ->TJ_PLANO + STJ->TJ_SERVICO + STJ->TJ_CODBEM + STJ->TJ_ORDEM + cTIPOREG + cCODPROD)

				If !(cTRB)->(DbSeek(cKey))
					(cTRB)->(DbAppend())
					(cTRB)->FILIAL   := xFilial( 'STJ' )
					(cTRB)->FILANT   := cFilAnt
					(cTRB)->PLANO    := STJ->TJ_PLANO
					(cTRB)->CODBEM   := STJ->TJ_CODBEM
					(cTRB)->SERVICO  := STJ->TJ_SERVICO
					(cTRB)->SEQRELA  := STJ->TJ_SEQRELA
					(cTRB)->ORDEM    := STJ->TJ_ORDEM
					(cTRB)->TIPOREG  := cTIPOREG
					(cTRB)->NOMTIPO  := cNOMTIPO
					(cTRB)->PRODUTO  := STL->TL_CODIGO
					(cTRB)->NOMPROD  := cNOME
					(cTRB)->OBS      := cObs
					(cTRB)->ORIGI    := STJ->TJ_DTORIGI
					(cTRB)->TIPOOS   := STJ->TJ_TIPOOS
				EndIf

				vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
				STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
				STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
				nQTDHORAS := vVETHORAS[1]

				nCUSTO := If(MV_PAR15 == 1,STL->TL_CUSTO * nEXTRA,nCUSTO * nQTDHORAS)

				If  Alltrim(STL->TL_SEQRELA) = "0"
					(cTRB)->QUANTPRE += nQTDHORAS
					(cTRB)->UNIDPRE  := STL->TL_UNIDADE
					(cTRB)->VALORPRE += nCUSTO
				Else
					(cTRB)->QUANTREA += nQTDHORAS
					(cTRB)->UNIDREA  := STL->TL_UNIDADE
					(cTRB)->VALORREA += nCUSTO
				EndIf

				DbSelectArea("STL")
				DbSkip()
			End

			If MV_PAR17 == 1
				DbSelectArea("STF")
				DbSetOrder(1)
				DbSeek(xFilial("STF") + STJ->TJ_CODBEM + STJ->TJ_SERVICO + STJ->TJ_SEQRELA )
				If STF->TF_PARADA == "S" .or. STJ->TJ_PLANO == "000000"

					vVetHPR := NGHORPARAPR(STJ->TJ_CODBEM,STJ->TJ_DTPPINI,STJ->TJ_HOPPINI,;
					STJ->TJ_DTMPINI,STJ->TJ_HOMPINI,STJ->TJ_DTPPFIM,;
					STJ->TJ_HOPPFIM,STJ->TJ_DTMPFIM,STJ->TJ_HOMPFIM,;
					STJ->TJ_DTPRINI,STJ->TJ_HOPRINI,STJ->TJ_DTMRINI,;
					STJ->TJ_HOMRINI,STJ->TJ_DTPRFIM,STJ->TJ_HOPRFIM,;
					STJ->TJ_DTMRFIM,STJ->TJ_HOMRFIM)
					lPARADA := .T.
					If STJ->(FIELDPOS("TJ_PARADA")) > 0
						If STJ->TJ_PARADA == "N"
							lPARADA := .F.
						Endif
					EndIf

					If lPARADA
						dbSelectArea("ST9")
						DbSetOrder(1)
						DbSeek(xFilial("ST9") + STJ->TJ_CODBEM)
						If !Empty(ST9->T9_CUSTOHO)
							DbSelectArea(cTRB2)
							If !DbSeek(xFilial("STJ")+STJ->TJ_ORDEM + STJ->TJ_PLANO)
								DbAppend()
								(cTRB2)->ORDEM := STJ->TJ_ORDEM
								(cTRB2)->PLANO := STJ->TJ_PLANO
								(cTRB2)->FILIAL:= xFilial("STJ")
							EndIf
							(cTRB2)->QUANTPRE += vVetHPR[1] //nPRE
							(cTRB2)->QUANTREA += vVetHPR[2] //nREA
							(cTRB2)->VALORPRE += (vVetHPR[1] * ST9->T9_CUSTOHO)
							(cTRB2)->VALORREA += (vVetHPR[2] * ST9->T9_CUSTOHO)
						EndIf
					EndIf
				EndIf
			EndIf
			DbSelectArea("STJ")
			Dbskip()
		End

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Processa arquivo de O.S. HISTORICO                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("STS")
		While !Eof() .And. STS->TS_FILIAL == xFilial("STS") .And. ;
		STS->TS_PLANO <= MV_PAR04

			IncRegua()

			If !&cCONDSTS
				DbSkip()
				Loop
			EndIf

			If !NGTRCSTSOS( MV_PAR05, MV_PAR06, MV_PAR20, STS->TS_SITUACA, STS->TS_TERMINO, STS->TS_DTMRFIM )
				DbSkip()
				Loop
			EndIf

			If STS->TS_TIPOOS == 'B'
				DbSelectArea("ST9")
				DbSetOrder(1)
				If DbSeek(xFilial("ST9")+STS->TS_CODBEM)
					If ST9->T9_CODFAMI < MV_PAR07 .Or. ST9->T9_CODFAMI > MV_PAR08
						DbSelectArea("STS")
						DbSkip()
						Loop
					EndIf
				EndIf
			EndIf

			DbSelectArea("TAF")
			DbSetOrder(7)
			If DbSeek(XFILIAL("TAF")+"X"+"2"+STS->TS_CODBEM)
				If TAF->TAF_CODNIV < MV_PAR23 .Or. TAF->TAF_CODNIV > MV_PAR24
					DbSelectArea("STS")
					DbSkip()
					Loop
				EndIf
			Endif

			DbSelectArea("STT")
			DbSeek(xFilial("STT")+STS->TS_ORDEM+STS->TS_PLANO)
			While !Eof() .And. STT->TT_FILIAL == xFILIAL("STT") .And. STT->TT_ORDEM  == STS->TS_ORDEM .And.;
			STT->TT_PLANO  == STS->TS_PLANO

				If (STT->TT_TIPOREG == "P" .and. MV_PAR11 != 1) .or.;
				(STT->TT_TIPOREG == "F" .and. MV_PAR12 != 1) .or.;
				(STT->TT_TIPOREG == "M" .and. MV_PAR13 != 1) .or.;
				(STT->TT_TIPOREG == "T" .and. MV_PAR14 != 1) .or.;
				(STT->TT_TIPOREG == "E" .and. MV_PAR22 != 1)
					DbSkip()
					Loop
				EndIf

				If !NGTRDTINSU(MV_PAR20,MV_PAR05,MV_PAR06,STT->TT_DTINICI)
					Dbskip()
					Loop
				Endif

				//Calcula o custo do Insumo
				MNTA901STT()

				nEXTRA   := If(MV_PAR15 == 2, 1+( If(NGCADICBASE('TT_PCTHREX','A','STT',.F.),STT->TT_PCTHREX,VAL(STT->TT_HREXTRA)) /100), 1)
				aVETCUST := NGCUSTSTAN(STT->TT_CODIGO,STT->TT_TIPOREG,nExtra,MV_PAR18)

				nCUSTO   := aVETCUST[1] //Custo standard
				cNOMTIPO := aVETCUST[2] //Nome do tipo de insumo
				cTIPOREG := aVETCUST[3] //Tipo do Insumo
				cNOME    := aVETCUST[4] //Nome do Insumo
				cCODPROD := aVETCUST[5] //Codigo do insumo

				If NGCADICBASE("TS_MMSYP","A","STS",.F.)
					cObs := NGMEMOSYP(STS->TS_MMSYP)
				Else
					cObs := STS->TS_OBSERVA
				EndIf

				ckey := IIf( MV_PAR16 == 1, xFilial( 'STS' ) + STS->TS_PLANO + STS->TS_CODBEM + STS->TS_SERVICO + STS->TS_ORDEM + cTIPOREG + cCODPROD,;
					xFilial( 'STS' ) + STS->TS_PLANO + STS->TS_SERVICO + STS->TS_CODBEM + STS->TS_ORDEM + cTIPOREG + cCODPROD )
				
				If !(cTRB)->(DbSeek(cKey))
					(cTRB)->(DbAppend())
					(cTRB)->FILIAL   := xFilial( 'STS' )
					(cTRB)->FILANT   := cFilAnt
					(cTRB)->PLANO    := STS->TS_PLANO
					(cTRB)->CODBEM   := STS->TS_CODBEM
					(cTRB)->SERVICO  := STS->TS_SERVICO
					(cTRB)->SEQRELA  := STS->TS_SEQRELA
					(cTRB)->ORDEM    := STS->TS_ORDEM
					(cTRB)->TIPOREG  := cTIPOREG
					(cTRB)->NOMTIPO  := cNOMTIPO
					(cTRB)->PRODUTO  := STT->TT_CODIGO
					(cTRB)->NOMPROD  := cNOME
					(cTRB)->OBS      := cObs
					(cTRB)->ORIGI    := STS->TS_DTORIGI
					(cTRB)->TIPOOS   := STS->TS_TIPOOS
				Endif

				vVETHORAS := NGTQUATINS(STT->TT_CODIGO,STT->TT_TIPOREG,STT->TT_USACALE,;
				STT->TT_QUANTID,STT->TT_TIPOHOR,STT->TT_DTINICI,;
				STT->TT_HOINICI,STT->TT_DTFIM,STT->TT_HOFIM,STT->TT_UNIDADE)
				nQTDHORAS := vVETHORAS[1]

				nCUSTO := If(MV_PAR15 == 1,STT->TT_CUSTO * nEXTRA,nCUSTO * nQTDHORAS)

				If Alltrim(STT->TT_SEQRELA) = "0"
					(cTRB)->QUANTPRE += nQTDHORAS
					(cTRB)->UNIDPRE  := STT->TT_UNIDADE
					(cTRB)->VALORPRE += nCUSTO
				Else
					(cTRB)->QUANTREA += nQTDHORAS
					(cTRB)->UNIDREA  := STT->TT_UNIDADE
					(cTRB)->VALORREA += nCUSTO
				EndIf

				DbSelectArea("STT")
				DbSkip()
			End

			DbSelectArea("STS")
			If MV_PAR17 == 1
				DbSelectArea("STF")
				DbSetOrder(1)
				DbSeek(xFilial("STF") + STS->TS_CODBEM + STS->TS_SERVICO + STS->TS_SEQRELA )
				If STF->TF_PARADA == "S" .Or. STS->TS_PLANO == "000000"

					vVetHPR := NGHORPARAPR(STS->TS_CODBEM,STS->TS_DTPPINI,STS->TS_HOPPINI,;
					STS->TS_DTMPINI,STS->TS_HOMPINI,STS->TS_DTPPFIM,;
					STS->TS_HOPPFIM,STS->TS_DTMPFIM,STS->TS_HOMPFIM,;
					STS->TS_DTPRINI,STS->TS_HOPRINI,STS->TS_DTMRINI,;
					STS->TS_HOMRINI,STS->TS_DTPRFIM,STS->TS_HOPRFIM,;
					STS->TS_DTMRFIM,STS->TS_HOMRFIM)
					lPARADA := .T.

					If STS->(FIELDPOS("TS_PARADA")) > 0
						If STS->TS_PARADA == "N"
							lPARADA := .F.
						EndIf
					EndIf

					If lPARADA
						DbSelectArea("ST9")
						DbSetOrder(1)
						DbSeek(xFilial("ST9") + STS->TS_CODBEM )
						If !Empty(ST9->T9_CUSTOHO)
							DbSelectArea(cTRB2)
							If !DbSeek(xFilial("STS")+STS->TS_ORDEM + STS->TS_PLANO)
								DbAppend()
								(cTRB2)->ORDEM := STS->TS_ORDEM
								(cTRB2)->PLANO := STS->TS_PLANO
								(cTRB2)->FILIAL:= xFilial("STS")
							EndIf
							(cTRB2)->QUANTPRE += vVetHPR[1]
							(cTRB2)->QUANTREA += vVetHPR[2]
							(cTRB2)->VALORPRE += (vVetHPR[1] * ST9->T9_CUSTOHO)
							(cTRB2)->VALORREA += (vVetHPR[2] * ST9->T9_CUSTOHO)
						Endif
					EndIf
				EndIf
			EndIf
			DbSelectArea("STS")
			Dbskip()
		End
	Next nFil

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicio da Impressao                                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTOTGPRE := 0.00
	nTOTGREA := 0.00
	DbSelectArea(cTRB)
	DbGoTop()
	SetRegua(LastRec())
	While !Eof()

		IncRegua()
		DbSelectArea(cTRB)

		cFilAnt := (cTRB)->FILANT
		cFilOS  := (cTRB)->FILIAL
		nFilPre := 0.00 // Previsto Filial
		nFilRea := 0.00 // Realizado Filial

		While !Eof() .And. (cTRB)->FILIAL == cFilOS

			cPLANO  := (cTRB)->PLANO
			nPLAPRE := 0.00
			nPLAREA := 0.00
			Li      := 80

			DbSelectArea("STI")
			DbSeek( xFilial( "STI" ) + cPLANO )
			DbSelectArea(cTRB)

			While !Eof() .And. (cTRB)->PLANO == cPLANO .And.  (cTRB)->FILIAL == cFilOS

				SomaLin()

				If MV_PAR16 == 1
					_ORD := (cTRB)->CODBEM
					cORD := (cTRB)->CODBEM
					cTOT := STR0029 //"*** Total do Bem"
				Else
					_ORD := (cTRB)->SERVICO
					cORD := (cTRB)->SERVICO
					cTOT := STR0030 //"*** Total do Servico"
				EndIf

				nORDPRE := 0.00
				nORDREA := 0.00

				cBem      := (cTRB)->CODBEM
				nMaxCarac := 123
				If MV_PAR16 == 1
					If (cTRB)->TIPOOS == 'B'
						@ Li,000 Psay STR0031+(cTRB)->CODBEM+" "+NGSEEK("ST9",(cTRB)->CODBEM,1,"SubStr(ST9->T9_NOME,01,30)")
						If MV_PAR25 == 1
							MNTR830RTL(cBem,nMaxCarac,"1")
						Endif
					Else
						If (cTRB)->TIPOOS == 'L'
							@ Li,000 Psay STR0031+(cTRB)->CODBEM+" "+NGSEEK("TAF",(cTRB)->CODBEM,8,"SubStr(TAF->TAF_NOMNIV,01,30)")
							If MV_PAR25 == 1
								MNTR830RTL(cBem,nMaxCarac,"2")
							Endif
						EndIf
					Endif
				Else
					@ Li,000 Psay STR0032+(cTRB)->SERVICO+ " "+NGSEEK("ST4",(cTRB)->SERVICO,1,"SubStr(ST4->T4_NOME,01,30)")ÿ
				Endif

				SomaLin()

				DbSelectArea(cTRB)
				While !Eof() .And. _ORD == cORD .And. (cTRB)->PLANO == cPLANO .And. (cTRB)->FILIAL == cFilOS

					nNUMPRE := 0.00
					nNUMREA := 0.00
					cBem    := (cTRB)->CODBEM

					cNUM := (cTRB)->ORDEM
					@ Li,000 Psay STR0033 + (cTRB)->ORDEM //"Ordem.: "
					If (cTRB)->TIPOOS == 'B'
						@ Li,014 Psay STR0034 + (cTRB)->CODBEM + " "+NGSEEK("ST9",(cTRB)->CODBEM,1,"SubStr(ST9->T9_NOME,01,30)")
					ElseIf (cTRB)->TIPOOS == 'L'
						@ Li,014 Psay STR0034 + (cTRB)->CODBEM + " "+NGSEEK("TAF",(cTRB)->CODBEM,8,"SubStr(TAF->TAF_NOMNIV,01,30)")
					EndIf
					@ Li,069 Psay STR0032 + (cTRB)->SERVICO + " "+NGSEEK("ST4",(cTRB)->SERVICO,1,"SubStr(ST4->T4_NOME,01,30)")ÿ
					@ LI,115 Psay STR0035 + DTOC((cTRB)->ORIGI) //"Data.: "

					If MV_PAR25 == 1
						If MV_PAR16 == 2
							If (cTRB)->TIPOOS == 'B'
								MNTR830RTL(cBem,nMaxCarac,"1")
							ElseIf (cTRB)->TIPOOS == 'L'
								MNTR830RTL(cBem,nMaxCarac,"2")
							EndIf
						EndIf
					Endif

					SomaLin()

					cOBS := (cTRB)->OBS
					If !Empty(cOBS)
						@ li, 000 Psay STR0036 //"Descricao da OS.: "
						//Função para impressão do memo
						NG2IMPMEMO(cOBS,100,021)
					EndIf

					DbSelectArea(cTRB)
					While !Eof() .And. (cTRB)->ORDEM == cNUM .And. _ORD == cORD .And.;
					(cTRB)->PLANO == cPLANO .And. (cTRB)->FILIAL == cFilOS

						nDIF := (cTRB)->VALORREA - (cTRB)->VALORPRE

						If (cTRB)->VALORPRE > (cTRB)->VALORREA
							nPER := -( Round( 100 - ( ( (cTRB)->VALORREA * 100 ) / (cTRB)->VALORPRE ), 2 ) )
						ElseIf (cTRB)->VALORPRE < (cTRB)->VALORREA
							nPER := Round( 100 - ( (cTRB)->VALORPRE * 100 ) / (cTRB)->VALORREA, 2 )
						Else
							nPER := 0
						EndIf

						@ Li,000 Psay (cTRB)->NOMTIPO
						@ Li,008 Psay (cTRB)->PRODUTO
						@ Li,025+nTamPro Psay Substr((cTRB)->NOMPROD,1,30)
						If (cTRB)->TIPOREG <> "P"
							@ Li,050+nTamPro Psay NGRHODSEXN((cTRB)->QUANTPRE, "D")  Picture cPictuQnt
						Else
							@ Li,050+nTamPro Psay (cTRB)->QUANTPRE Picture cPictuQnt
						EndIf
						@ Li,071+nTamPro Psay (cTRB)->UNIDPRE
						@ Li,078+nTamPro Psay (cTRB)->VALORPRE  Picture cPictuCus
						If (cTRB)->TIPOREG <> "P"
							@ Li,099+nTamPro Psay NGRHODSEXN((cTRB)->QUANTREA, "D")  Picture cPictuQnt
						Else
							@ Li,099+nTamPro Psay (cTRB)->QUANTREA Picture cPictuQnt
						EndIf
						@ Li,121+nTamPro Psay (cTRB)->UNIDREA
						@ Li,125+nTamPro Psay (cTRB)->VALORREA  Picture cPictuCus
						@ Li,147+nTamPro Psay nDIF              Picture cPictuCus
						@ Li,170+nTamPro Psay nPER              Picture cPictuCus

						nNUMPRE += (cTRB)->VALORPRE
						nNUMREA += (cTRB)->VALORREA

						SomaLin()
						DbSkip()

						_ORD := If(MV_PAR16 == 1,(cTRB)->CODBEM,(cTRB)->SERVICO)

					End //Bem ou Serviço

					If MV_PAR17 == 1
						If (cTRB2)->( DbSeek(cNUM + cPLANO) )
							@ Li,005 Psay STR0037 //"Custo Hora Parada do Bem "
							@ Li,050+nTamPro Psay NGRHODSEXN((cTRB2)->QUANTPRE, "D") Picture cPictuQnt
							@ Li,078+nTamPro Psay (cTRB2)->VALORPRE Picture cPictuCus
							@ Li,099+nTamPro Psay NGRHODSEXN((cTRB2)->QUANTREA, "D") Picture cPictuQnt
							@ Li,125+nTamPro Psay (cTRB2)->VALORREA Picture cPictuCus
							SomaLin()

							nNUMPRE += (cTRB2)->VALORPRE
							nNUMREA += (cTRB2)->VALORREA
						EndIf
					EndIf

					nDIF := nNUMREA - nNUMPRE

					If nNUMPRE > nNUMREA
						nPER := -( Round( 100 - ( ( nNUMREA * 100 ) / nNUMPRE ), 2 ) )
					ElseIf nNUMPRE < nNUMREA
						nPER := Round( 100 - ( nNUMPRE * 100 ) / nNUMREA, 2 )
					Else
						nPER := 0
					EndIf

					@ Li,000 Psay STR0038 //"*** Total da O.S. "
					@ Li,077+nTamPro Psay nNUMPRE        Picture cPictuCus
					@ Li,124+nTamPro Psay nNUMREA        Picture cPictuCus
					@ Li,146+nTamPro Psay nDIF           Picture cPictuCus
					@ Li,169+nTamPro Psay nPER            Picture cPictuCus
					SomaLin()
					SomaLin()

					nORDPRE += nNUMPRE
					nORDREA += nNUMREA
				End //Ordem

				nDIF := nORDREA - nORDPRE

				If nORDPRE > nORDREA
					nPER := -( Round( 100 - ( ( nORDREA * 100 ) / nORDPRE ), 2 ) )
				ElseIf nORDPRE < nORDREA
					nPER := Round( 100 - ( nORDPRE * 100 ) / nORDREA, 2 )
				Else
					nPER := 0
				EndIf

				@ Li,000 Psay cTOT
				@ Li,077+nTamPro Psay nORDPRE        Picture cPictuCus
				@ Li,124+nTamPro Psay nORDREA        Picture cPictuCus
				@ Li,146+nTamPro Psay nDIF           Picture cPictuCus
				@ Li,169+nTamPro Psay nPER            Picture cPictuCus

				nPLAPRE += nORDPRE
				nPLAREA += nORDREA

				SomaLin()
			End // Plano


			nDIF := nPLAREA - nPLAPRE

			If nPLAPRE > nPLAREA
				nPER := -( Round( 100 - ( ( nPLAREA * 100 ) / nPLAPRE ), 2 ) )
			ElseIf nPLAPRE < nPLAREA
				nPER := Round( 100 - ( nPLAPRE * 100 ) / nPLAREA, 2 )
			Else
				nPER := 0
			EndIf

			SomaLin()
			@ Li,000 Psay STR0039 //"*** Total do Plano"
			@ Li,077+nTamPro Psay nPLAPRE        Picture cPictuCus
			@ Li,124+nTamPro Psay nPLAREA        Picture cPictuCus
			@ Li,146+nTamPro Psay nDIF           Picture cPictuCus
			@ Li,169+nTamPro Psay nPER            Picture cPictuCus

			nFilPre += nPLAPRE
			nFilRea += nPLAREA

			SomaLin()
		End // Filial

		If nFilPre > 0 .or. nFilRea > 0

			nDIF := nFilRea - nFilPre

			If nFilPre > nFilRea
				nPER := -( Round( 100 - ( ( nFilRea * 100 ) / nFilPre ), 2 ) )
			ElseIf nFilPre < nFilRea
				nPER := Round( 100 - ( nFilPre * 100 ) / nFilRea, 2 )
			Else
				nPER := 0
			EndIf

			SomaLin()
			@ Li,000 Psay "*** Total da Filial "
			@ Li,077+nTamPro Psay nFilPre        Picture cPictuCus
			@ Li,124+nTamPro Psay nFilRea        Picture cPictuCus
			@ Li,146+nTamPro Psay nDIF           Picture cPictuCus
			@ Li,169+nTamPro Psay nPER           Picture cPictuCus
		Endif

		nTOTGPRE += nFilPre
		nTOTGREA += nFilRea

		SomaLin()
	End //Geral
	If nTOTGPRE > 0 .or. nTOTGREA > 0

		nDIF := nTOTGREA - nTOTGPRE

		If nTOTGPRE > nTOTGREA
			nPER := -( Round( 100 - ( ( nTOTGREA * 100 ) / nTOTGPRE ), 2 ) )
		ElseIf nTOTGPRE < nTOTGREA
			nPER := Round( 100 - ( nTOTGPRE * 100 ) / nTOTGREA, 2 )
		Else
			nPER := 0
		EndIf

		SomaLin()
		@ Li,000 Psay STR0045 //"*** Total Geral"
		@ Li,077+nTamPro Psay nTOTGPRE       Picture cPictuCus
		@ Li,124+nTamPro Psay nTOTGREA       Picture cPictuCus
		@ Li,146+nTamPro Psay nDIF           Picture cPictuCus
		@ Li,169+nTamPro Psay nPER            Picture cPictuCus

	EndIf

	Roda(nCntImpr,cRodaTxt,Tamanho)

	oTmpTbl1:Delete()//Deleta arquivo temporario 1
	oTmpTbl2:Delete()//Deleta arquivo temporario 2

	//³ Devolve a condicao original do arquivo principam             ³
	RetIndex("SI3")
	Set Filter To

	Set device to Screen

	If aReturn[5] = 1
		Set Printer To
		dbCommitAll()
		OurSpool(wnrel)
	Endif
	
	MS_FLUSH()

	cFilAnt := cFilOld

Return NIL

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡…o   ³ SomaLin  ³ Autor ³ Inacio Luiz Kolling   ³ Data ³ 18/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡…o³ Incrementa Linha e Controla Salto de Pagina                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe  ³ somlir830()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTR830        !                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Static Function SomaLin()
	Local cNomeFil := ""
	Li++
	If Li > 60
		Cabec(titulo,cabec1,cabec2,nomeprog,tamanho,nTipo)

		cNomeFil := NGSEEKSM0(cEmpAnt + cFilAnt ,{"M0_NOME"})[1]

		If !Empty(cNomeFil)
			@Li,000 Psay STR0065  + cFilAnt + " " + cNomeFil  //"Filial......: "
			SomaLin()
		Endif

		@Li,000 Psay STR0040 + cPlano + " " + STi->TI_DESCRIC //"Plano.......: "
		SomaLin()

		@Li,000 Psay STR0041 + DtoC(STI->TI_DATAPLA) //"Data Plano.: "
		@Li,030 Psay STR0042 + DtoC(STI->TI_DATAINI) //"De.: "
		@Li,048 Psay STR0043 + DtoC(STI->TI_DATAFIM) //"Ate.: "
		SomaLin()

		@Li,000 Psay replicate("*",190+nTamPro)
		SomaLin()
	EndIf
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³MNTR830EL ³ Autor ³ Microsiga             ³ Data ³13/08/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Retorna a estrutura da localizacao em forma de texto       ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cIndCon -> Obrigatorio                                     ³±±
±±³          ³            Inica se a O.S. e' Bem ou Localizacao           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTR830                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTR830EL(cEstrut) // MNTR 830 Estrutura da Localização

	Local nAT			:=	0	// Quantidade de caracteres ate o '>'
	Local nAuxAT		:=	0	//	Quantidade total de carcteres ja verificados
	Local aAuxEstrut	:=	{} // Array que recebe as localizacoes - cada posicao diferente corresponde a outra linha

	While Len(cEstrut) > nMaxCarac
		nAT := AT	(">",cEstrut)
		If nAT == 0
			Exit
		EndIf
		If nAT > nMaxCarac
			aAdd(aAuxEstrut,SubStr(cEstrut,1,nMaxCarac))
			cEstrut := SubStr(cEstrut,(nMaxCarac+1))
			nAT := AT(">",cEstrut)
			If nAT == 0
				Exit
			EndIf
			While nAT > nMaxCarac
				aAdd(aAuxEstrut,SubStr(cEstrut,1,nMaxCarac))
				cEstrut := SubStr(cEstrut,(nMaxCarac+1))
				nAT := AT(">",cEstrut)
				If nAT == 0
					Exit
				EndIf
			End
		EndIf
		aAdd(aAuxEstrut,SubStr(cEstrut,1,(nAT+1)))
		cEstrut := SubStr(cEstrut,(nAT+2))
		nAuxAT := nAT
		While nAuxAT < nMaxCarac
			nAT := AT(">",cEstrut)
			If nAT == 0
				Exit
			EndIf
			nAuxAT += (nAT+1)
			If nAuxAT < nMaxCarac
				aAuxEstrut[Len(aAuxEstrut)] += SubStr(cEstrut,1,(nAT+1))
				cEstrut := SubStr(cEstrut,(nAT+2))
			EndIf
		End
	End

	If Len(cEstrut) > 0
		If (Len(aAuxEstrut[Len(aAuxEstrut)]) + Len(cEstrut)) < nMaxCarac
			aAuxEstrut[Len(aAuxEstrut)] += cEstrut
		Else
			aAdd(aAuxEstrut,cEstrut)
		EndIf
	EndIf

Return aAuxEstrut

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MNTR830   ºAutor  ³Microsiga           º Data ³  08/23/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para imprimir a localização do Bem em questão.       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MNTR830RTL(cBem, nMaxCarac, cInd)
	Local aLocal := {}
	Local nCont := 0

	DbSelectArea("TAF")

	If cInd == '1'
		DbSetOrder(6)
	ElseIf cInd == '2'
		DbSetOrder(7)
	EndIf

	If	DbSeek(XFILIAL("TAF")+"X"+cInd+cBem)
		If FindFunction("NGLocComp")
			cBem := NGLocComp((cTRB)->CODBEM,cInd)
		EndIf
		If Len(cBem) > nMaxCarac
			aLocal := MNTR830EL(cBem)
		EndIf

		SomaLin()
		@ Li,000 Psay STR0054 //"Localização: "

		If Len(cBem) > nMaxCarac
			For nCont := 1 to Len(aLocal)
				@ Li,013 Psay aLocal[nCont]
				If Len(aLocal) != nCont
					SomaLin()
				Endif
			Next nCont
		Else
			@ Li,013 Psay cBem
		EndIf
		SomaLin()
	Endif

Return .T.
