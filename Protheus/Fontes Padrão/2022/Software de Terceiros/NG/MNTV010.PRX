/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNTV010    ³ Autor ³ Inacio Luiz Kolling   ³ Data ³20/11/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Quantidade horas estimadas em manutencao TODAS O.S.          ³±±
±±³          ³ em relacao aos parametros  ( Homem estimada de todos as O.S. ³±±
±±³          ³ do periodo - HHES )                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ De_Data   - Data inicio                                      ³±±
±±³          ³ Ate_Data  - Ate data                                         ³±±
±±³          ³ De_Area   - De area inicio                                   ³±±
±±³          ³ Ate_Area  - Ate area fim                                     ³±±
±±³          ³ De_Espec  - De especialidade inicio                          ³±±
±±³          ³ Ate_Espec - Ate especialidade fim                            ³±±
±±³          ³ De_Funci  - De funcionario inicio                            ³±±
±±³          ³ Ate_Funci - Ate funcionario fim                              ³±±
±±³          ³ De_Terce  - De terceiro inicio                               ³±±
±±³          ³ Ate_Terce - Ate terceiro fim                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorna   ³ nQtdho    - Quantidade de horas disponivel                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GENERICO                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTV010(De_Data,Ate_Data,De_Area,Ate_Area,De_Funci,Ate_Funci)
	Local cTab1    := "", cPrefix1 := "",cTab2 := "", cPrefix2 := ""
	Local aAreaOLD := GetArea(),nQtdho := 0, nTab := 0, nX := 0
	Local aCodFunc := {}//Salva os funcionarios para busca na TTL
	Local De_AreaL := If(De_Area = Nil,Space(NGSEEKDIC("SX3","TJ_CODAREA",2,"X3_TAMANHO")),De_Area)
	Local De_FuncL := If(De_Funci = Nil,Space(NGSEEKDIC("SX3","T1_CODFUNC",2,"X3_TAMANHO")),De_Funci)
	
	// Variáveis de Histórico de Indicadores
	Local lMV_HIST := NGI6MVHIST()
	Local aParams := {}
	Local cCodIndic := "MNTV010"
	Local nResult := 0
	
	// Armazena os Parâmetros
	If lMV_HIST
		aParams := {}
		aAdd(aParams, {"DE_DATA"   , De_Data})
		aAdd(aParams, {"ATE_DATA"  , Ate_Data})
		aAdd(aParams, {"DE_AREA"   , De_Area})
		aAdd(aParams, {"ATE_AREA"  , Ate_Area})
		aAdd(aParams, {"DE_FUNCI"  , De_Funci})
		aAdd(aParams, {"ATE_FUNCI" , Ate_Funci})
		NGI6PREPPA(aParams, cCodIndic)
	EndIf
	
	For nTab := 1 To 2
		If nTab == 1
			cTab1   := "STL"
			cPrefix1:= "STL.TL_"
			cTab2   := "STJ"
			cPrefix2:= "STJ.TJ_"
		Else
			cTab1   := "STT"
			cPrefix1 := "STT.TT_"
			cTab2   := "STS"
			cPrefix2:= "STS.TS_"
		EndIf
		cAliasQry := GetNextAlias()
		// Query
		If lMV_HIST
			cQuery := "SELECT * "
		Else
			cQuery := " SELECT "+cPrefix1+"QUANTID,"+cPrefix1+"TIPOHOR,"+cPrefix1+"CODIGO,"+cPrefix1+"TIPOREG "
		EndIf
		cQuery += " FROM "+RetSqlName(cTab1)+" "+cTab1+" "
		cQuery += " INNER JOIN "+RetSqlName(cTab2)+" "+cTab2+" "
		cQuery += " ON "+cPrefix2+"ORDEM = "+cPrefix1+"ORDEM AND "+cPrefix2+"PLANO = "+cPrefix1+"PLANO AND"
		If ValType(De_AreaL) == "C" .and. ValType(Ate_Area) == "C"
			cQuery += " "+cPrefix2+"CODAREA >= '"+De_AreaL+"' AND "+cPrefix2+"CODAREA <= '"+Ate_Area+"' AND "
		Endif
		cQuery += " "+cPrefix2+"SITUACA = 'L' AND "
		cQuery += " "+cPrefix2+"FILIAL = '"+xFilial("STJ")+"' AND "+cTab2+".D_E_L_E_T_ <> '*' "
		If lMV_HIST .And. AliasInDic("TTL")
			cQuery += " LEFT JOIN " + RetSQLName("TTL") + " TTL ON "
			cQuery += " (TTL.TTL_FILIAL = " + ValToSQL(xFilial("TTL")) + " AND RTRIM(TTL.TTL_CODFUN) = RTRIM("+cPrefix1+"CODIGO) "
			If ValType(De_Data) == "D"
				cQuery += " AND TTL.TTL_DTINI >= " + ValToSQL(De_Data) + " "
			EndIf
			If ValType(Ate_Data) == "D"
				cQuery += " AND TTL.TTL_DTFIM <= " + ValToSQL(Ate_Data) + " "
			EndIf
			cQuery += " AND TTL.D_E_L_E_T_ <> '*') "
		EndIf
		cQuery += " WHERE "+cPrefix1+"FILIAL = '"+xFilial(cTab1)+"' AND "
		cQuery += " "+cPrefix1+"SEQRELA = '0  ' AND "
		cQuery += " "+cPrefix1+"TIPOREG = 'M' AND "
		If ValType(De_Data) == "D"
			cQuery += " "+cPrefix1+"DTINICI >= '"+Dtos(De_Data)+"' AND "
		Endif
		If ValType(Ate_Data) == "D"
			cQuery += " "+cPrefix1+"DTINICI <= '"+Dtos(Ate_Data)+"' AND "
		Endif
		cQuery += " "+cTab1+".D_E_L_E_T_ <> '*' "
		cQuery := ChangeQuery(cQuery)
		dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)
		NGI6PREPDA(cAliasQry, cCodIndic)
    	
		dbSelectArea(cAliasQry)
		dbGoTop()
		While !Eof()
			If nTab == 1
				lEspeOk := .F.
				cCodigo := SubStr((cAliasQry)->TL_CODIGO,1,6)
			Else
				lEspeOk := .F.
				cCodigo := SubStr((cAliasQry)->TT_CODIGO,1,6)
			EndIf

			If ValType(De_FuncL) == "C" .and. ValType(Ate_Funci) == "C"
				lEspeOk := If(cCodigo >= De_FuncL .And. cCodigo <= Ate_Funci,.t.,.f.)
			Else
				lEspeOk := .t.
			Endif

			If lEspeOk
				If aScan(aCodFunc,{|x| x == cCodigo }) == 0
					aAdd(aCodFunc,cCodigo)
				Endif
				If nTab == 1 
					nQtdho += If((cAliasQry)->TL_TIPOHOR <> "D",NGCONVERHORA((cAliasQry)->TL_QUANTID,"S","D"),;
									(cAliasQry)->TL_QUANTID)
				Else
					nQtdho += If((cAliasQry)->TT_TIPOHOR <> "D",NGCONVERHORA((cAliasQry)->TT_QUANTID,"S","D"),;
									(cAliasQry)->TT_QUANTID)
				EndIf
			Endif
			dbSelectArea((cAliasQry))
			Dbskip()
		End

		(cAliasQry)->(dbCloseArea())
	Next nTab

	If AliasInDic("TTL") .AND. ValType(De_Data) == "D" .AND. ValType(Ate_Data) == "D"
		For nX := 1 To Len(aCodFunc)
			dbSelectArea("TTL")
			dbSetOrder(1)
			If dbSeek(xFilial("TTL")+aCodFunc[nX]+DTOS(De_Data),.T.)
				While TTL->(!Eof()) .AND. TTL->TTL_FILIAL == xFilial("TTL") .AND. ;
						TTL->TTL_CODFUN == aCodFunc[nX] .AND. ;
						TTL->TTL_DTINI <= Ate_Data
					nQtdho += NGCALCH100(TTL->TTL_DTINI,TTL->TTL_HRINI,TTL->TTL_DTFIM,TTL->TTL_HRFIM)
					TTL->(dbSkip())
				End
			EndIf
		Next nX
	EndIf

	RestArea(aAreaOLD)
	
	// RESULTADO
	nResult := nQtdho
	NGI6PREPVA(cCodIndic, nResult)
	
Return nResult