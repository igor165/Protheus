#INCLUDE "MNTR355.ch"
#include "Protheus.ch"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR355
	Relatorio de Abastecimento Por Motorista

	@param
	@return

	@sample MNTR355()

	@author Evaldo Cevinscki Jr.
	@since 23/03/06
/*/
//---------------------------------------------------------------------
Function MNTR355()

	WNREL      := "MNTR355"
	LIMITE     := 155
	cDESC1     := STR0001 //"Relatorio de Abastecimentos por Motorista no periodo informado, totalizando a "
	cDESC2     := STR0002 //"Quantidade de litros no periodo informado nos parametros,Preco Medio e Valor"
	cDESC3     := STR0003 //"Total dos abastecimentos."
	cSTRING    := "TQN"

	Private NOMEPROG 	:= "MNTR355"
	Private TAMANHO  	:= "G"
	Private aRETURN  	:= {STR0004,1,STR0005,1,2,1,"",1}  //"Zebrado"###"Administracao"
	Private TITULO   	:= STR0006 //"Relatório de Abastecimentos por Motorista"
	Private nTIPO    	:= 0
	Private nLASTKEY 	:= 0
	Private CABEC1		:= ""
	Private CABEC2		:= ""
	Private cPERG 		:= "MNR355"

	Private nTotLitros 	:= 0
	Private nTotPreco  	:= 0
	Private nQtd       	:= 0
	Private nPrMedio   	:= 0
	Private nVlrTotal  	:= 0
	Private nKmAnt 		:= 0
	Private lOper 		:= IIf(Alltrim(GetMv("MV_NGOPER")) == "S",.T.,.F.)
	Private cContab 	:= GetMv("MV_MCONTAB")
	Private vCampoCC 	:= {}

	If cContab == "CTB"
		vCampoCC := {"CTT","CTT->CTT_CUSTO","CTT->CTT_OPERAC"}
	ElseIf cContab == "CON"
		vCampoCC := {"SI3","SI3->I3_CUSTO","SI3->I3_OPERAC"}
	EndIf

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Variaveis utilizadas para parametros!                        ³
	³ MV_PAR01     // De Motorista                                 ³
	³ MV_PAR02     // Ate Motorista                                ³
	³ MV_PAR03     // De Data                                      ³
	³ MV_PAR04     // Ate Data                                     ³
	³ MV_PAR05     // De Servico	                               ³
	³ MV_PAR06     // Ate Servico                                  ³
	³                                                              ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/

	Pergunte(cPERG,.F.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia controle para a funcao SETPRINT                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	WNREL:=SetPrint(cSTRING,WNREL,cPERG,TITULO,cDESC1,cDESC2,cDESC3,.F.,"")
	If nLASTKEY = 27
		Set Filter To
		dbSelectArea("TQN")
		Return
	EndIf
	SetDefault(aReturn,cSTRING)
	RptStatus({|lEND| MNTR355IMP(@lEND,WNREL,TITULO,TAMANHO)},TITULO)
	dbSelectArea("TQN")

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR355ATE
	Validação de perguntas

	@param	Alias	, Caracter, Tabela relacionada
			Par1	, Caracter, Pergunta DE
			Par2	, Caracter, Pergunta ATE
			TAM		, Numerico, Tamanho relatorio.
			cId		, Caracter, ID
	@return

	@sample MNTR355ATE()

	@author Heverson Vitoreti
	@since 13/04/06
/*/
//---------------------------------------------------------------------
Function MNTR355ATE(ALIAS,PAR1,PAR2,TAM,cID)
	Local lRet := .T.

	If Empty(par2)
		If cID == 1
			Help(" ",1,STR0015,,STR0016,3,1) //"ATENÇÃO"###"Motorista final não pode ser vazio."
		ElseIf cID == 2
			Help(" ",1,STR0015,,STR0017,3,1) //"ATENÇÃO"###"Operação final não pode ser vazia."
		EndIf
		lRet := .F.
	ElseIf par2 < par1
		If cID == 1
			Help(" ",1,STR0015,,STR0018,3,1) //"ATENÇÃO"###"Motorista final informado inválido."
		ElseIf cID == 2
			Help(" ",1,STR0015,,STR0019,3,1) //"ATENÇÃO"###"Operação final informada inválida."
		EndIf
		lRet := .F.
	EndIf

	If par2 = replicate('Z',Len(PAR2))
		lRet := .T.
	Else
		If ALIAS == "SRA"
			If !ExCpoMDT(ALIAS,PAR2)
				lRet := .F.
			EndIf
		Else
			If !ExistCpo(ALIAS,PAR2)
				lRet := .F.
			EndIf
		EndIf
	EndIf

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR355IMP
	Validação de perguntas

	@param	lEND	, Lógico	, Verfica se chegou ao fim
			WNREL	, Caracter	, Configurações estabelecidas para o relatório.
			TITULO	, Caracter	, Titulo do relatório
			TAMANHO	, Numérico	, Tamanho da impressão

	@return

	@sample MNTR355IMP()

	@author Evaldo Cevinscki Jr
	@since 23/03/06
/*/
//---------------------------------------------------------------------
Function MNTR355IMP(lEND,WNREL,TITULO,TAMANHO)

	Local lKmPrimAb 	:= IIf(MV_PAR09 == 1,.T.,.F.)
	Local lPrimAbas 	:= .F.
	Local oTempTable       //Tabela Temporaria
	Local cQuery		:= ""
	Local cAlias 		:= GetNextAlias()
	Local cFilial1		:= IIf(!Empty(MV_PAR07),xFilial("TQN",MV_PAR07),MV_PAR07)
	Local cFilial2		:= IIf(Replicate('Z', FWSizeFilial()) == MV_PAR08, MV_PAR08, xFilial("TQN",MV_PAR08))

	Private cRODATXT 	:= ""
	Private nCNTIMPR 	:= 0
	Private li 			:= 80
	Private m_pag 		:= 1
	Private nKm 		:= 0
	Private cTRB	 	:= GetNextAlias()

	nTIPO  := IIf(aReturn[4]==1,15,18)
	CABEC1 := STR0020 //"Posto              Nome Comercial                         Loja   Frota                       Km           Km Percorrido   Qtd.Litros        Média         Vlr.Unit.            Vlr.Total      Data"
	CABEC2 := ""
	
    /*
	Posto                  Nome Fantasia                   Loja  Frota               Km                  Km Percorrido   Qtd.Litros        Média    Vlr.Unit.                 Vlr.Total             Data"
	0         1         2         3         4         5         6         7         8         9         0         1         2        3         4         5         6         7        8         9   
	01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456790123456789012345678901234567890123456790123456789012345
	***********************************************************************************************************************************************************
	Abastecimentos por Motorista
	***********************************************************************************************************************************************************
	Posto      Nome Fantasia      Loja   Frota                       Km   Km Percorrido   Qtd.Litros        Média    Vlr.Unit.            Vlr.Total   Data
	***********************************************************************************************************************************************************
	Periodo: 99/99/99 a 99/99/99
	Operação: xxx  xxxxxxxxxxxxxxxxxxxx
	Motorista: xxxxxx - xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  Filial Motorista:xxxxxxxxxxxxxxx
	Veiculo          Filial Veíc.    Modelo                Média Padrão Km/l
	xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxx      999,999

	99999999   xxxxxxxxxxxxxxxxxx xxxxx  xxxxxxxxxxxxxxxx   999,999,999     999,999,999   99,999.999   999,999.99   99,999.999   99,999,999,999.999   99/99/99
	99999999   xxxxxxxxxxxxxxxxxx xxxxx  xxxxxxxxxxxxxxxx   999,999,999     999,999,999   99,999.999   999,999.99   99,999.999   99,999,999,999.999   99/99/99
	99999999   xxxxxxxxxxxxxxxxxx xxxxx  xxxxxxxxxxxxxxxx   999,999,999     999,999,999   99,999.999   999,999.99   99,999.999   99,999,999,999.999   99/99/99
	99999999   xxxxxxxxxxxxxxxxxx xxxxx  xxxxxxxxxxxxxxxx   999,999,999     999,999,999   99,999.999   999,999.99   99,999.999   99,999,999,999.999   99/99/99
	*/

	aDBF := {}
	If lOper
		aAdd(aDBF,{"OPERACAO"  ,"C",3,0})
	EndIf
		aAdd(aDBF,{"MOTORISTA" ,"C",6,0})
		aAdd(aDBF,{"PLACA"     ,"C",8,0})
		aAdd(aDBF,{"POSTO"     ,"C",TAMSX3("TQF_CODIGO")[1],0})
		aAdd(aDBF,{"LOJA"      ,"C",TAMSX3("TQF_LOJA")[1],0})
		aAdd(aDBF,{"LITROS"    ,"N",09,2})
		aAdd(aDBF,{"PREUNI"    ,"N",TAMSX3("TQN_VALUNI")[1]/*9*/,TAMSX3("TQN_VALUNI")[2]/*3*/})
		aAdd(aDBF,{"VLRABAS"   ,"N",12,3})
		aAdd(aDBF,{"KM"        ,"N",09,0})
		aAdd(aDBF,{"KMPERCOR"  ,"N",09,0})
		aAdd(aDBF,{"DTABAS"    ,"D",08,0})
		aAdd(aDBF,{"VEICULO"   ,"C",16,0})
		aAdd(aDBF,{"FILBEM"    ,"C",FWSizeFilial(),0})
		aAdd(aDBF,{"DESCFIL"   ,"C",15,0})
		aAdd(aDBF,{"PRIMAB"    ,"L",01,0})
		aAdd(aDBF,{"CODCOM"    ,"C",03,0})
		aAdd(aDBF,{"FILIAL"    ,"C",FWSizeFilial(),0})

	oTempTable  := FWTemporaryTable():New( cTRB, aDBF )

	//CRIA INDICES
	If lOper
		If MV_PAR10 == 2
			oTempTable:AddIndex( "Ind01" , {"FILIAL","OPERACAO","MOTORISTA"} )
		Else
			oTempTable:AddIndex( "Ind01" , {"OPERACAO","MOTORISTA"} )
		EndIf
	Else
		If MV_PAR10 == 2
			oTempTable:AddIndex( "Ind01" , {"FILIAL","MOTORISTA"} )
		Else
			oTempTable:AddIndex( "Ind01" , {"MOTORISTA"} )
		EndIf
	EndIf

	oTempTable:Create()


	cQuery := "SELECT  TQN.TQN_FILIAL, TQN.TQN_FROTA, TQN.TQN_DTABAS, TQN.TQN_HRABAS, "
	cQuery += "TQN.TQN_CODMOT, TQN.TQN_PLACA, TQN.TQN_POSTO, TQN.TQN_LOJA, TQN.TQN_QUANT, "
	cQuery += "TQN.TQN_VALUNI, TQN.TQN_VALTOT, TQN.TQN_HODOM, TQN.TQN_CODCOM"
	cQuery += " FROM " + RetSqlName('TQN') + " TQN"
	cQuery += " WHERE TQN.TQN_FILIAL <= " + ValToSql(cFilial2) + "AND TQN.TQN_FILIAL >= " + ValToSql(cFilial1)
	cQuery += " AND TQN.TQN_CODMOT >= " + ValToSql(MV_PAR01) + " AND TQN.TQN_CODMOT <= " + ValToSql(MV_PAR02)
	cQuery += " AND TQN.TQN_DTABAS >= " + ValToSql(MV_PAR03) + " AND TQN.TQN_DTABAS <= " + ValToSql(MV_PAR04)
	cQuery += " AND TQN.D_E_L_E_T_ <> '*'"
	cQuery += " ORDER BY TQN.TQN_FILIAL, TQN.TQN_FROTA, TQN.TQN_DTABAS, TQN.TQN_HRABAS, TQN.R_E_C_N_O_"
	cQuery := ChangeQuery(cQuery)

	dbUseArea(.T., "TOPCONN", TcGenQry(,, cQuery), cAlias, .F., .T.)
	dbSelectArea(cAlias)
	dbGoTop()
	ProcRegua(LastRec())
	Do While (cAlias)->(!EoF())
		IncProc()
		dbSelectArea("ST9")
		dbSetOrder(16)
		If dbSeek((cAlias)->TQN_FROTA)
			dbSelectArea(vCampoCC[1])
			dbSetOrder(01)
			lValid := IIf(lOper,&(vCampoCC[3]) >= MV_PAR05 .And. &(vCampoCC[3]) <= MV_PAR06,.T.)
			If dbSeek(IIF(NgSX2Modo(vCampoCC[1])=='C',xFilial(vCampoCC[1]),ST9->T9_FILIAL)+ST9->T9_CCUSTO)
				If lValid
					dbSelectArea("TQN")
					lPrimAbas := NGPRIABAS((cAlias)->TQN_FROTA,(cAlias)->TQN_DTABAS,(cAlias)->TQN_HRABAS) //verifica se eh o 1a abast. do veiculo
					If lPrimAbas .And. !lKmPrimAb
						nKm := 0
					Else
						nKm := NGCONTPER((cAlias)->TQN_FROTA,(cAlias)->TQN_DTABAS,(cAlias)->TQN_HRABAS)
					EndIf

					dbSelectArea(cTRB)
					(cTRB)->(DBAPPEND())
					(cTRB)->FILBEM    := ST9->T9_FILIAL
					dbSelectArea("SM0")
					dbSetOrder(01)
					aArea01 := GetArea()
					If DbSeek(SM0->M0_CODIGO+(cTRB)->FILBEM)
						(cTRB)->DESCFIL:= SM0->M0_FILIAL
					Else
						RestArea(aArea01)
					EndIf
					If lOper
						(cTRB)->OPERACAO  := &(vCampoCC[3])
					EndIf
					(cTRB)->FILIAL    := (cAlias)->TQN_FILIAL
					(cTRB)->MOTORISTA := (cAlias)->TQN_CODMOT
					(cTRB)->PLACA     := (cAlias)->TQN_PLACA
					(cTRB)->POSTO     := (cAlias)->TQN_POSTO
					(cTRB)->LOJA      := (cAlias)->TQN_LOJA
					(cTRB)->LITROS    := (cAlias)->TQN_QUANT
					(cTRB)->PREUNI    := (cAlias)->TQN_VALUNI
					(cTRB)->VLRABAS   := (cAlias)->TQN_VALTOT
					(cTRB)->KM        := (cAlias)->TQN_HODOM
					(cTRB)->KMPERCOR  := nKm
					(cTRB)->DTABAS    := StoD((cAlias)->TQN_DTABAS)
					(cTRB)->VEICULO   := (cAlias)->TQN_FROTA
					(cTRB)->PRIMAB    := lPrimAbas
					(cTRB)->CODCOM    := (cAlias)->TQN_CODCOM
				EndIf
			EndIf
		EndIf
		
		(cAlias)->(dbSkip())
	EndDo

	dbSelectArea(cTRB)
	dbGoTop()
	If Reccount() = 0
		MsgInfo(STR0022,STR0023) //"Não existem dados para imprimir o relatório."###"ATENÇAO"
		oTempTable:Delete()		 //Deleta tabela temporária
		Return .F.
	EndIf

	Processa({|lEND| MNTR355PRO()},STR0024)  //"Processando Arquivo..."

	RODA(nCNTIMPR,cRODATXT,TAMANHO)
	Set Filter To
	Set Device To Screen
	If aReturn[5] == 1
		Set Printer To
		dbCommitAll()
		OurSpool(WNREL)
	EndIf

	(cAlias)->(dbCloseArea()) 
	MS_FLUSH()
	oTempTable:Delete()//Deleta tabela temporária

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR355PRO
	Processa Relatorio

	@param
	@return

	@sample MNTR355PRO()

	@author Evaldo Cevinscki Jr
	@since 09/02/2006
/*/
//---------------------------------------------------------------------

Function MNTR355PRO()

	Local cOPERA		:= " "
	Local cMOT			:= " "
	Local cVEIC			:= " "
	Local lJAIMPRIMIU	:= .T.
	Local nTotPerco		:= 0 , nTotMotPerco := 0, nTotGerPerco := 0
	Local nTotLts		:= 0, nTot := 0, nTotMotLts := 0, nTotMot := 0,nTotGerLts := 0, nTotGer := 0
	Local nTotMedia		:= 0, nTotMotMedia := 0,nTotGerMedia := 0
	Local nLtPri		:= 0, nLtPriT   := 0
	Local lPrim			:= .F., lPrimFim := .F.
	Local nKmPri		:= 0, nKmPriT   := 0
	Local cDescFil		:= ""
	Local aAreaST9		:= ""
	Local cChaveTT8		:= ""

	Private lTT8 := NGCADICBASE("TT8_CODCOM","A","TT8",.F.)

	dbSelectArea(cTRB)
	dbSetOrder(1)
	dbGoTop()
	SetRegua(LastRec())
	Do While !EoF()

		IF lJAIMPRIMIU
			NgSomaLi(58)
			@ Li,000 Psay STR0025 //"Período:"
			@ Li,009 Psay MV_PAR03
			@ Li,020 Psay STR0026 //"a"
			@ Li,022 Psay MV_PAR04
			lJAIMPRIMIU := .F.
			NgSomaLi(58)
		EndIf
		If lOper
			If cOPERA <> (cTRB)->OPERACAO
				cOPERA := (cTRB)->OPERACAO
				NgSomaLi(58)
				@ Li,000 Psay STR0027 //"Operação:"
				@ Li,010 Psay If(!Empty((cTRB)->OPERACAO),(cTRB)->OPERACAO,STR0045) //"Não existe operação relacionada ao centro de custos do bem."
				@ Li,014 Psay NGSEEK('TSZ',(cTRB)->OPERACAO,1,'(TSZ->TSZ_DESSER)') Picture "@!"
				NgSomaLi(58)
				NgSomaLi(58)
			EndIf
		EndIf
		If cMOT <> (cTRB)->MOTORISTA
			cMOT := (cTRB)->MOTORISTA
			cFili := (cTRB)->FILIAL
			cVEIC := ""
			@ Li,008 Psay STR0028 //"Motorista:"
			@ Li,019 Psay If(!Empty((cTRB)->MOTORISTA),(cTRB)->MOTORISTA,STR0044) //"Não existe motorista relacionado ao abastecimento do bem."
			dbSelectArea("DA4")
			dbSetOrder(1)
			If dbSeek(xFilial("DA4")+(cTRB)->MOTORISTA)
				@ Li,028 Psay sUBsTR(DA4->DA4_NOME,1,30)
				dbSelectArea("SM0")
				dbSetOrder(01)
				If dbSeek(SM0->M0_CODIGO+DA4->DA4_FILIAL)
					@ Li,060 Psay STR0029 //"Filial Motorista:"
					@ Li,078 Psay SM0->M0_FILIAL
				EndIf
			EndIf
			NgSomaLi(58)
			NgSomaLi(58)
		EndIf
		nTotMotPerco := 0
		nTotMotLts   := 0
		nTotMot      := 0
		nTotMotMedia := 0
		nTotLtsP  := 0
		nTotKmsP		:= 0
		dbSelectArea(cTRB)
		Do While !EoF() .And. If(lOper,(cTRB)->MOTORISTA == cMOT .And. (cTRB)->OPERACAO == cOPERA,(cTRB)->MOTORISTA == cMOT)
			If cFili <> (cTRB)->FILIAL
				cFili := (cTRB)->FILIAL
				cVEIC := (cTRB)->VEICULO
				Exit
			EndIf
			If cVEIC <> (cTRB)->VEICULO
				cVEIC := (cTRB)->VEICULO
				@ Li,008 Psay STR0030  //"Veículo"
				@ Li,025 Psay "Descrição"
				@ Li,063 Psay STR0032 //"Modelo"
				@ Li,080 Psay "Descrição
				@ Li,101 Psay STR0031 //"Filial Veíc."
				@ Li,122 Psay STR0033 //"Média Padrão Km/l"
				NgSomaLi(58)
				If !Empty((cTRB)->PLACA)
					dbSelectArea("ST9")
					dbSetOrder(14)
					If dbSeek((cTRB)->PLACA)
						cFilBem := ST9->T9_FILIAL
						@ Li,008 Psay ST9->T9_CODBEM Picture "@!"
						@ Li,025 Psay SubStr(ST9->T9_NOME,1,20)Picture "@!"
						@ Li,063 Psay ST9->T9_TIPMOD Picture "@!"
						@ Li,080 Psay NGSEEK('TQR',ST9->T9_TIPMOD,1,'TQR->TQR_DESMOD') Picture "@!"
						aAreaST9 := ST9->(GetArea())
						MsSeek(cEMPANT)
						dbSelectArea("SM0")
						dbSetOrder(1)
						If dbSeek(cEMPANT+cFilBem)
							cDescFil:= SM0->M0_FILIAL
						EndIf
						RestArea(aAreaST9)
						@ Li,101 Psay cDescFil Picture "@!"
						If lTT8

							cChaveTT8	:= ST9->T9_CODBEM + (cTRB)->CODCOM
							@ Li,128 Psay NGSEEK('TT8',cChaveTT8, 1,'TT8->TT8_MEDIA') Picture "@E 999,999.999"

						Else
							@ Li,128 Psay ST9->T9_MEDIA Picture "@E 999,999.999"
						EndIf
					EndIf
				Else
					dbSelectArea("ST9")
					dbSetOrder(1)
					If dbSeek(xFilial("ST9", (cTRB)->FILIAL) + (cTRB)->VEICULO)
						cFilBem := ST9->T9_FILIAL
						@ Li,008 Psay ST9->T9_CODBEM Picture "@!"
						@ Li,025 Psay SubStr(ST9->T9_NOME,1,20)Picture "@!"
						@ Li,063 Psay ST9->T9_TIPMOD Picture "@!"
						@ Li,080 Psay NGSEEK('TQR',ST9->T9_TIPMOD,1,'TQR->TQR_DESMOD') Picture "@!"
						aAreaST9 := ST9->(GetArea())
						MsSeek(cEMPANT)
						dbSelectArea("SM0")
						dbSetOrder(1)
						If dbSeek(cEMPANT+cFilBem)
							cDescFil:= SM0->M0_FILIAL
						EndIf
						RestArea(aAreaST9)
						@ Li,101 Psay cDescFil Picture "@!"
						If lTT8

							cChaveTT8	:= ST9->T9_CODBEM + (cTRB)->CODCOM
							@ Li,128 Psay NGSEEK('TT8',cChaveTT8, 1,'TT8->TT8_MEDIA') Picture "@E 999,999.999"

						Else
							@ Li,128 Psay ST9->T9_MEDIA Picture "@E 999,999.999"
						EndIf
					EndIf
				EndIf
				NgSomaLi(58)
				NgSomaLi(58)
			EndIf
			nTotPerco := 0
			nTotLts   := 0
			nTot      := 0
			nTotMedia := 0
			nLtPri    := 0
			nKmPri	 := 0
			dbSelectArea(cTRB)
			Do While !EoF() .And. cVEIC == (cTRB)->VEICULO .And. cMOT == (cTRB)->MOTORISTA
				@ Li,000 Psay (cTRB)->POSTO
				@ Li,019 Psay NGSEEK('TQF',(cTRB)->POSTO+(cTRB)->LOJA,1,'TQF->TQF_NREDUZ',(cTRB)->FILIAL) Picture "@!"
				@ Li,058 Psay (cTRB)->LOJA
				@ Li,064 Psay (cTRB)->VEICULO
				@ Li,083 Psay (cTRB)->KM Picture "@E 999,999,999"
				@ Li,107 Psay (cTRB)->KMPERCOR Picture "@E 999,999,999"
				@ Li,121 Psay (cTRB)->LITROS Picture "@E 999,999.99"
				@ Li,134 Psay IIf((cTRB)->PRIMAB,0,((cTRB)->KMPERCOR / (cTRB)->LITROS)) Picture "@E 999,999.99"  //((cTRB)->KMPERCOR / (cTRB)->LITROS)
				@ Li,152+3-TAMSX3("TQN_VALUNI")[2] Psay (cTRB)->PREUNI Picture '@E 99,999.'+Replicate('9',TAMSX3("TQN_VALUNI")[2])
				@ Li,165 Psay (cTRB)->VLRABAS Picture "@E 99,999,999,999.99"
				@ Li,189 Psay (cTRB)->DTABAS Picture "99/99/99"
				If (cTRB)->PRIMAB
					@ Li,202 PSay "*"
					nLtPri	+= (cTRB)->LITROS
					nLtPriT	+= (cTRB)->LITROS
					nTotLtsP += (cTRB)->LITROS
					nKmPri	+= (cTRB)->KMPERCOR
					nKmPriT	+= (cTRB)->KMPERCOR
					nTotKmsP	+= (cTRB)->KMPERCOR
					lPrim 	:= .T.
				EndIf
				nTotPerco := nTotPerco + (cTRB)->KMPERCOR
				nTotLts   := nTotLts + (cTRB)->LITROS
				nTot      := nTot + (cTRB)->VLRABAS
				nTotMedia := (nTotPerco - nKmPri) / (nTotLts - nLtPri)
				NgSomaLi(58)
				dbSelectArea(cTRB)
				dbSkip()
			EndDo
			NgSomaLi(58)
			@ Li,000 Psay STR0034 //"Total do Veículo:"
			@ Li,108 Psay nTotPerco Picture "@E 999,999,999"
			@ Li,122 Psay nTotLts Picture "@E 999,999.99"
			@ Li,135 Psay nTotMedia Picture "@E 999,999.99"
			@ Li,152 Psay (nTot / nTotLts) Picture "@E 999,999.999"
			@ Li,169 Psay nTot Picture "@E 999,999,999.99"
			nTotMotPerco := nTotMotPerco + nTotPerco
			nTotMotLts   := nTotMotLts + nTotLts
			nTotMot      := nTotMot + nTot
			nTotMotMedia := (nTotMotPerco - nTotKmsP) / (nTotMotLts	- nTotLtsP)
			NgSomaLi(58)
		EndDo
		@ Li,000 Psay STR0035 //"Total do Motorista:"
		@ Li,108 Psay nTotMotPerco Picture "@E 999,999,999"
		@ Li,122 Psay nTotMotLts Picture "@E 999,999.99"
		@ Li,135 Psay nTotMotMedia Picture "@E 999,999.99"
		@ Li,152 Psay (nTotMot / nTotMotLts) Picture "@E 999,999.999"
		@ Li,169 Psay nTotMot Picture "@E 999,999,999.99"
		If lPrim
			NgSomaLi(58)
			@ Li,000 Psay STR0041 //"* Primeiro abastecimento do veículo, portanto a média de Km percorrido não é calculada."
			lPrim := .F.
			lPrimFim := .T.
		EndIf
		NgSomaLi(58)
		@ Li,000 PSAY Replicate("-",195)
		NgSomaLi(58)
		nTotGerPerco := nTotGerPerco + nTotMotPerco
		nTotGerLts   := nTotGerLts + nTotMotLts
		nTotGer      := nTotGer + nTotMot
		nTotGerMedia := (nTotGerPerco - nKmPriT) / (nTotGerLts - nLtPriT)
	EndDo
	@ Li,000 Psay STR0036 //"Total do Geral:"
	@ Li,108 Psay nTotGerPerco Picture "@E 999,999,999"
	@ Li,122 Psay nTotGerLts Picture "@E 999,999.99"
	@ Li,135 Psay nTotGerMedia Picture "@E 999,999.99"
	@ Li,152 Psay (nTotGer / nTotGerLts) Picture "@E 999,999.999"
	@ Li,169 Psay nTotGer Picture "@E 999,999,999.99"
	If lPrimFim
		NgSomaLi(58)
		@ Li,000 Psay STR0041 //"* Primeiro abastecimento do veículo, portanto a média de Km percorrido não é calculada."
	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR355DT
	Valida o parametro ate data

	@param
	@return

	@sample MNTR355DT()

	@author Soraia de Carvalho
	@since 25/07/06
/*/
//---------------------------------------------------------------------
Function MNTR355DT()
	Local lRet := .T.

	If  MV_PAR04 < MV_PAR03
		MsgStop(STR0037)  //"Data final não pode ser inferior à data inicial!"
		lRet := .F.
	EndIf

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR355FL
	Funcao para buscar a filial

	@param	nOpc, Númerico, Opção que será definida o modelo de validação
	@return

	@sample MNTR355FL()

	@author Rafael Diogo Richter
	@since 30/06/2006
/*/
//---------------------------------------------------------------------
Function MNTR355FL(nOpc)
	Local lRet := .T.

	If Empty(MV_PAR07)
		lRet := .T.
	Else
		If nOpc == 1
			lRet := IIf(Empty(MV_PAR07),.T.,ExistCpo('SM0',SM0->M0_CODIGO+MV_PAR07))
			If !lRet
				lRet := .F.
			EndIf
		EndIf

		If nOpc == 2
			If MV_PAR08 == Replicate("Z",Len(MV_PAR08))
				lRet := .F.
			EndIf
			lRet := IIF(ATECODIGO('SM0',SM0->M0_CODIGO+MV_PAR07,SM0->M0_CODIGO+MV_PAR08,02),.T.,.F.)
			If !lRet
				lRet := .F.
			EndIf
		EndIf
	EndIf

Return lRet