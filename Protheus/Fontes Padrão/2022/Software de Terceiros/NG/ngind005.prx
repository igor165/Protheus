#INCLUDE "NGIND005.ch"
#Include "Protheus.ch"
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ NGIND005 ³ Autor ³ Denis Hyroshi de Souza³ Data ³ 01/07/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Cadastro de Indicadores (Formulas)             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NGIND005()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de atualizacoes                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aRotina := MenuDef()
Private cCadastro := OemtoAnsi(STR0001) //"Indicadores (Fórmulas)"
Private aSMENU := {}, aCHKDEL := {}, bNGGRAVA
Private aMemos := {}

dbSelectArea("SX3")
dbSetOrder(2)
If dbSeek("TZ5_DESCRI")
	aAdd(aMemos,{"TZ5_DESCRI","TZ5_MEMO1"})
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Endereca a funcao de BROWSE                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("TZ5")
Set Filter To TZ5->TZ5_MODULO == Str(nModulo,2)
dbSetOrder(1)
mBrowse( 6, 1,22,75,"TZ5")
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MenuDef  ³ Autor ³ NG Informatica        ³ Data ³01/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Utilizacao de Menu Funcional.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMDT                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ F.O  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
Local aRotina :=	{ { STR0002, 	"AxPesqui"  , 0 , 1},; //"Pesquisar"
                    { STR0003,	"NGIND5IN"   , 0 , 2},; //"Visualizar"
                    { STR0004,   "NGIND5IN"   , 0 , 3},; //"Incluir"
                    { STR0005,   "NGIND5IN"   , 0 , 4},; //"Alterar"
                    { STR0006,   "NGIND5IN"   , 0 , 5, 3} } //"Excluir"

Return aRotina

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ NGIND5IN ³ Autor ³ Denis Hyroshi de Souza³ Data ³03/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Tela de manutencao do Indicador                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NGIND5IN(cAlias, nRecno, nOpcx)
	Local oFont, oGet, oDlg, oPnlPai
	Local lWhen1   := .T.
	Local lWhen2   := .T.
	Local lWhen4   := .T.
	Local nX2
	Local nControl := 0
	Local nPadrao  := 0
	Local aPages   := {}
	Local aTitles  := {}
	Local cCadOpt  := ""
	Local aTmpCbx  := {}, nTmpCbx := 0
	Local aIndFix  := { "BACK", "CHMC", "CHMP", "CMDM", "EPEP", "PEXE", "PTMC",;
						"PTMP", "PTOT", "MTBF", "TMMP", "MTTR", "QSOL", "SCSO",;
						"QTOS", "CTAB", "MRPL", "CTPN", "CRPR", "CTPSI", "CPRO",;
						"CTMU", "PMPM", "CTDO", "CTPR", "RMDA", "SSQPRAZO","SSQENCCAN",;
						"SSQFORA","SSPPRAZO", "SSPFORA","SSPDISTF", "MTTF","DISP", "CONF","CMFT", "CMVR"}

	Private cFormula := Space( Len(TZ5->TZ5_CODIND) )
	Private cCodVari := Space( Len(TZ2->TZ2_CODVAR) )
	Private cCodExp  := 0
	Private cMemoFor := ''
	Private aSvATela := {}, aSvAGets := {}, aTela := {}, aGets := {}, aNao := {}
	Private oMemoFor, oCodVar, oCodExp
	Private oBtn01, oBtn02, oBtn03, oBtn04, oBtn05, oBtn06, oBtnAdd, oBtnLim, oBtnDes
	//Private nPula := 70
	Private aMemoAlt := {} //Controle de alteracoes no memo
	Private nTipoOp  := 1  //Controle do ultimo botao pressionado
	Private nNgTam   := 13 //Tamanho do campo Valor Constante
	Private nNgDec   := 3  //Decimal do campo Valor Constante
	Private cNgFor   := "@E 9999999.99" //Formato do campo Valor Constante
	Private cTypeRes := PadR("999.999.999,99",30) //Formato do Resultado Tela
	Private cTypePad := PadR("@E 999,999,999.99",30) //Formato do Resultado Real
	Private oTypeRes
	Private nTamaRes := 12 //Tamanho do Resultado
	Private nDeciRes := 2  //Decimal do Resultado
	Private cUniMedi := Space(Len(SAH->AH_UNIMED)) //Unidade Medida Resultado
	Private cDesMedi := Space(40)
	If Len(cUniMedi) == 0
		cUniMedi := Space(2)
	Endif
	Private cTipoCmb := Space(10) //Tipo Avaliação (Maior que, igual a, menor, ... )
	Private cTipoVal := "1" //Indica se o resultado é numerico ou hora
	Private cTipoBkp := cTipoVal //Backup do cTipoVal
	Private nPadrao1 := 0 //Parametro 1 do Resultado
	Private nPadrao2 := 0 //Parametro 2 do Resultado
	Private aTipoCmb := {}
	Private aTipoVal := {"1="+STR0084,"2="+STR0085} //"Numerico"#"Hora"

	Private bListPar,oListPar,aColsPar := { {Space(12),Space(2),Space(12),Space(40)} } //Objeto e Array dos Parametros por Variavel
	Private bListCom,oListCom,aColsCom := { {Space(12),Space(40)} } //Objeto e Array dos Parametros comuns entre as variaveis
	Private bListVal,oListVal,aColsVal := { {.f.,Space(12),Space(40),nil} } //Objeto e Array dos Conteudos dos Parametros
	Private bListObr,oListObr,aColsObr := { {.f.,Space(12),Space(40)} } //Objeto e Array dos Parametros Obrigatorios
	Private aVarIndi := {} //Array das Variaveis do INDICADOR
	Private aIndParm := {} //Variavel utilizada na funcao NgIndParm
	Private aVarParm := {} //Variavel utilizada na funcao NgIndParm

	Private oChecked := LoadBitmap(GetResources(),'LBTIK')
	Private oUnCheck := LoadBitmap(GetResources(),'LBNO')

	Private lCpo2_TZ5 := NGCADICBASE("TZ5_FORCON","D","TZ5",.F.)
	Private nLen1_TZ5 := Len(TZ5->TZ5_FORMUL)
	Private nLen2_TZ5 := If(lCpo2_TZ5,Len(TZ5->TZ5_FORCON),0)

	Private oFolder

	// Caso seja um indicador Padrão não permite a alteração e ou exclusão.
	If nOpcx == 4 .Or. nOpcx == 5
		nPadrao := aScan( aIndFix,{ |x| AllTrim( x ) == AllTrim( TZ5->TZ5_CODIND ) } )
	EndIf

	//-- Define o ComboBox do Tipo de Meta
	aTmpCbx := {}
	dbSelectArea("SX3")
	dbSetOrder(2)
	dbSeek("TZ5_TIPRES")
	aTmpCbx := StrTokArr(AllTrim(X3CBox()),";")
	aTipoCmb := {Space(10)}
	For nTmpCbx := 1 To Len(aTmpCbx)
		aAdd(aTipoCmb, aTmpCbx[nTmpCbx])
	Next nTmpCbx

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	// Carregando as informacoes quando nao for opcao INCLUIR
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpcx <> 3
		//Dados da tabela TZ5
		cFormula := TZ5->TZ5_CODIND
		cMemoFor := Alltrim(TZ5->TZ5_FORMUL)+" "
		If lCpo2_TZ5
			cMemoFor := Alltrim(TZ5->TZ5_FORMUL)+Alltrim(TZ5->TZ5_FORCON)+" "
		Endif
		cUniMedi := TZ5->TZ5_UNIMED
		cDesMedi := NGSEEK("SAH",cUniMedi,1,"SAH->AH_DESCPO")
		nTamaRes := TZ5->TZ5_TAMMED
		If TZ5->TZ5_TIPVAL == "2"
			nDeciRes := 0
			cTypeRes := Replicate("9",nTamaRes)+":99"
			cTypePad := Replicate("9",nTamaRes)+":99"
		Else
			nDeciRes := TZ5->TZ5_DECMED
			cTypeRes := ""
			cTypePad := ""
			NGINDPICT(nTamaRes,nDeciRes,@cTypeRes,".",",")
			NGINDPICT(nTamaRes,nDeciRes,@cTypePad,",",".")
			cTypePad := "@E "+cTypePad
		Endif

		If !Empty(TZ5->TZ5_TIPVAL)
			cTipoVal := TZ5->TZ5_TIPVAL
			cTipoBkp := cTipoVal //Backup do cTipoVal
		Endif
		cTipoCmb := TZ5->TZ5_TIPRES

		If !Empty(TZ5->TZ5_TIPRES)
			If cTipoVal == "2"
				nPadrao1 := PadL( Alltrim(TZ5->TZ5_VALOR1) , nTamaRes+3 )
				nPadrao2 := PadL( Alltrim(TZ5->TZ5_VALOR2) , nTamaRes+3 )
			Else
				nPadrao1 := Val(TZ5->TZ5_VALOR1)
				nPadrao2 := Val(TZ5->TZ5_VALOR2)
			Endif
		Endif

		//Dados da tabela TZ7 (Parametros Fixos)
		dbSelectArea("TZ7")
		dbSetOrder(1)
		dbSeek(xFilial("TZ7")+Str(nModulo,2)+cFormula+'1')
		While !Eof() .and. xFilial("TZ7")+cFormula == TZ7->TZ7_FILIAL+TZ7->TZ7_CODIND .and. TZ7->TZ7_TIPO == '1' .and. TZ7->TZ7_MODULO == Str(nModulo,2)
			If aScan( aColsVal, {|x| x[2] == TZ7->TZ7_CODPAR } ) == 0
				dbSelectArea("TZ4")
				dbSetOrder(1)
				If dbSeek(xFilial("TZ4")+Str(nModulo,2)+TZ7->TZ7_CODPAR)
					cTipoTemp := TZ4->TZ4_TIPO
					If !Empty(Posicione("SX3", 2, TZ4->TZ4_CAMPOS, "X3_CAMPO"))
						cTipoTemp := Posicione("SX3", 2, TZ4->TZ4_CAMPOS, "X3_TIPO")
					EndIf
					xTempVal := Alltrim(TZ7->TZ7_CONTEU)
					If cTipoTemp $ "D/4"
						xTempVal := StoD(xTempVal)
					ElseIf cTipoTemp $ "N/2"
						xTempVal := Val(xTempVal)
					ElseIf cTipoTemp $ "L/3"
						xTempVal := If(xTempVal==".F.",.f.,.t.)
					ElseIf cTipoTemp $ "6"
						aTipoTZ4 := fRetCombo(Alltrim(TZ4->TZ4_OPCOES))
						nIND := aScan(aTipoTZ4,{|x| Upper(Substr(x,1,1)) == Substr(xTempVal,1,1)})
						If nIND > 0
							xTempVal := Substr(xTempVal,1,1)
						Else
							xTempVal := " "
						Endif
					Endif
					aAdd( aColsVal , { .t. , TZ7->TZ7_CODPAR , Alltrim(TZ4->TZ4_DESCRI) , xTempVal } )
				Endif
			Endif
			dbSelectArea("TZ7")
			dbSkip()
		End

		//Dados da tabela TZ7 (Parametros Obrigatorio)
		dbSelectArea("TZ7")
		dbSetOrder(1)
		dbSeek(xFilial("TZ7")+Str(nModulo,2)+cFormula+'2')
		While !Eof() .and. xFilial("TZ7")+cFormula == TZ7->TZ7_FILIAL+TZ7->TZ7_CODIND .and. TZ7->TZ7_TIPO == '2' .and. TZ7->TZ7_MODULO == Str(nModulo,2)
			If aScan( aColsObr, {|x| x[2] == TZ7->TZ7_CODPAR } ) == 0
				dbSelectArea("TZ4")
				dbSetOrder(1)
				If dbSeek(xFilial("TZ4")+Str(nModulo,2)+TZ7->TZ7_CODPAR)
					aAdd( aColsObr , { .t. , TZ7->TZ7_CODPAR , Alltrim(TZ4->TZ4_DESCRI) } )
				Endif
			Endif
			dbSelectArea("TZ7")
			dbSkip()
		End

	EndIf

	dbSelectArea("TZ5")
	RegToMemory("TZ5",(nOpcx == 3))

	// Inicializa variaveis para campos Memos Virtuais
	If Type("aMemos")=="A"
		For nX2 := 1 To Len(aMemos)
			cMemo := "M->" + aMemos[nX2][2]
			If ExistIni(aMemos[nX2][2])
				&cMemo := InitPad(Posicione("SX3", 2, aMemos[nX2][2], "X3_RELACAO"))
			Else
				&cMemo := ""
			EndIf
		Next nX2
	EndIf

	If nOpcx == 3
		cCadOpt  := STR0015 //" - Incluir"
	ElseIf nOpcx == 2
		cCadOpt := STR0016 // - Visualizar
		lWhen1  := .F.     // When para os campos do Folder 1 - Formula
		lWhen2  := .F.     // When para os campos do Folder 2 - Resultados / Padroes de Mercado
		lWhen4  := .F.     // When para os campos do Folder 4 - Parametros com conteudo fixo
	ElseIf nOpcx == 5
		cCadOpt := STR0017 // - Excluir
		lWhen1  := .F.     // When para os campos do Folder 1 - Formula
		lWhen2  := .F.     // When para os campos do Folder 2 - Resultados / Padroes de Mercado
		lWhen4  := .F.     // When para os campos do Folder 4 - Parametros com conteudo fixo
	ElseIf nOpcx == 4
		cCadOpt := STR0018      // - Alterar
		lWhen1  := nPadrao == 0 // When para os campos do Folder 1 - Formula
		lWhen2  := .T.          // When para os campos do Folder 2 - Resultados / Padroes de Mercado
		lWhen4  := nPadrao == 0 // When para os campos do Folder 4 - Parametros com conteudo fixo
	EndIf

	//aChoice recebe os campos que serao apresentados na tela
	aNao    := {"TZ5_FORMUL","TZ5_FORCON","TZ5_UNIMED","TZ5_TAMMED","TZ5_DECMED","TZ5_DESMED","TZ5_TIPRES","TZ5_VALOR1","TZ5_VALOR2","TZ5_TIPVAL"}
	aChoice := NGCAMPNSX3("TZ5",aNao)
	aTela   := {}
	aGets   := {}

	//Tamanho da tela
	Private aAC := {STR0019,STR0020},aCRA:= {STR0020,STR0021,STR0019} //"Abandona"###"Confirma"###"Confirma"###"Redigita"###"Abandona"
	Private aHeader[0],Continua,nUsado:=0
	Private aSize := MsAdvSize(,.f.,430), aObjects := {}
	Aadd(aObjects,{200,200,.t.,.f.})
	aInfo := {aSize[1],aSize[2],aSize[3],aSize[4],0,0}
	aPosObj := MsObjSize(aInfo, aObjects,.t.)

	//Criando Folders
	Aadd(aTitles,OemToAnsi(STR0022)) //"Fórmula"
	Aadd(aTitles,OemToAnsi(STR0023)) //"Avaliação Resultado"
	Aadd(aTitles,OemToAnsi(STR0024)) //"Visualização dos Parâmetros"
	Aadd(aTitles,OemToAnsi(STR0025)) //"Conteúdo dos Parâmetros"
	Aadd(aPages,"Header 1")
	Aadd(aPages,"Header 2")
	Aadd(aPages,"Header 3")
	Aadd(aPages,"Header 4")
	nControl := 4

	nOpca:=0
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From aSize[7],0 To aSize[6],aSize[5] COLOR CLR_BLACK,CLR_WHITE OF oMainWnd PIXEL

	@ 000,000 MSPANEL oPnlPai SIZE 0,0 OF oDlg
	oPnlPai:Align := CONTROL_ALIGN_ALLCLIENT

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Enchoice tabela TZ5                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@ 000,000 MSPANEL oPanel SIZE 0,0 OF oPnlPai
	oPanel:Align := CONTROL_ALIGN_TOP
	oPanel:nHeight := 270
	If aSize[6] > 600
		oPanel:nHeight := 320
	Endif
	oEnc01:= MsMGet():New("TZ5",nRecno,nOpcx,,,,aChoice,{13,0,89,aPosObj[1,4]},,,,,,oPanel,,,.f.,"aSvATela")
	oEnc01:oBox:Align := CONTROL_ALIGN_ALLCLIENT
	oEnc01:oBox:bGotFocus := {|| NgEntraEnc("TZ5")}
	aSvATela := aClone(aTela)
	aSvAGets := aClone(aGets)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Folders                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oFolder := TFolder():New(7,0,aTitles,aPages,oPnlPai,,,,.f.,.f.,aPosObj[1,4],aPosObj[1,3],)
	oFolder:Align := CONTROL_ALIGN_ALLCLIENT

	// Folder 1 - Formula
	oFolder:aDialogs[1]:oFont := oPnlPai:oFont
	@ 000,000 MSPANEL oPanel1 SIZE aSize[5],aSize[6] OF oFolder:aDialogs[1]
	@ 08,008 Say OemToAnsi(STR0083) Of oPanel1 Pixel //"Variável"
	@ 08,050 MSGET oCodVar Var cCodVari Size 80,09 Valid If(!Empty(cCodVari),ExistCpo("TZ2",Str(nModulo,2)+cCodVari),.t.) Picture "@!" F3 "TZ2" ;
			Of oPanel1 Pixel When lWhen1 HasButton
	@ 20,008 Say OemToAnsi(STR0026) Of oPanel1 Pixel //"Valor Constante"
	@ 20,050 MSGET oCodExp Var cCodExp  Size 80,09 Valid fValExpr() Picture "@E 999,999,999.999" Of oPanel1 Pixel When lWhen1

	@ 008,160 Button oBtn01 Prompt "+" Size 10,10 Of oPanel1 Pixel Action Ng005Add(	'+', 1, lWhen1 )
	oBtn01:cToolTip := STR0027 //"Adição"
	@ 008,171 Button oBtn02 Prompt "-" Size 10,10 Of oPanel1 Pixel Action Ng005Add( '-', 1, lWhen1 )
	oBtn02:cToolTip := STR0028 //"Substração"
	@ 019,160 Button oBtn03 Prompt "*" Size 10,10 Of oPanel1 Pixel Action Ng005Add( '*', 1, lWhen1 )
	oBtn03:cToolTip := STR0029 //"Multiplicação"
	@ 019,171 Button oBtn04 Prompt "/" Size 10,10 Of oPanel1 Pixel Action Ng005Add( '/', 1, lWhen1 )
	oBtn04:cToolTip := STR0030 //"Divisão"
	@ 008,182 Button oBtn05 Prompt "(" Size 10,10 Of oPanel1 Pixel Action Ng005Add( '(', 2, lWhen1 )
	oBtn05:cToolTip := STR0031 //"Abre parêntese"
	@ 019,182 Button oBtn06 Prompt ")" Size 10,10 Of oPanel1 Pixel Action Ng005Add( ')', 3, lWhen1 )
	oBtn06:cToolTip := STR0032 //"Fecha parêntese"

	@ 034,008 Button oBtnAdd Prompt STR0033 Size 40,11 Of oPanel1 Pixel Action Ng005Add( , 4, lWhen1 ) //"Adicionar"
	oBtnAdd:cToolTip := STR0034 //"Adiciona variável ou valor constante na fórmula"
	@ 034,058 Button oBtnLim Prompt STR0035 Size 40,11 Of oPanel1 Pixel Action Ng005Lim( lWhen1 ) //"Limpar Fórmula"
	oBtnLim:cToolTip := STR0036 //"Limpa a fórmula"
	@ 034,108 Button oBtnDes Prompt STR0037 Size 40,11 Of oPanel1 Pixel Action Ng005Des( lWhen1 ) //"Desfazer"
	oBtnDes:cToolTip := STR0038 //"Desfaz a última alteração realizada na fórmula"

	@ 048,008 Get oMemoFor Var cMemoFor Of oPanel1 Memo Size 285,55 Pixel Font oPnlPai:oFont Color CLR_BLACK,CLR_HGRAY When .F.

	fLoadBtn( .T., lWhen1 ) // Verifica se o botão deve estar habilitado ou não

	// Folder 2 - Resultados / Padroes de Mercado
	oFolder:aDialogs[2]:oFont := oPnlPai:oFont
	@ 000,000 MSPANEL oPanel2 SIZE aSize[5],aSize[6] OF oFolder:aDialogs[2]

	@ 08,008 Say OemToAnsi(STR0039) Of oPanel2 Pixel //"Unidade Medida"
	@ 08,065 MSGET oCodUni Var cUniMedi Size 25,09 Valid fValUnMed() Picture "@!" F3 "SAH" ;
			Of oPanel2 Pixel When lWhen2 HasButton 
	@ 08,110 MSGET cDesMedi Size 100,09 Picture "@!" Of oPanel2 Pixel When .f.

	@ 21.6,008 Say OemToAnsi(STR0082) Of oPanel2 Pixel //"Tipo de Resultado"
	@ 21.6,065 COMBOBOX oCbx2 VAR cTipoVal ITEMS aTipoVal Valid fValTipVal() SIZE 60,60 Of oPanel2 Pixel When lWhen2

	@ 40.2,008 Say OemToAnsi(STR0040) Of oPanel2 Pixel //"Formato do Resultado"
	@ 40.2,065 MSGET oTypeRes VAR cTypeRes Size 100,09 Of oPanel2 Pixel When .f.

	If lWhen2

		@ 70,340 BTNBMP oMaisTam Resource 'PMSMAIS'  Size 17,17 Pixel Of oPanel2 Noborder Pixel Action fResizeFor(1)
		@ 70,355 BTNBMP oMenoTam Resource 'PMSMENOS' Size 17,17 Pixel Of oPanel2 Noborder Pixel Action fResizeFor(2)
		@ 38.6,187 Say STR0041 Of oPanel2 Pixel //"Tamanho"

		@ 86,340 BTNBMP oMaisDec Resource 'PMSMAIS'  Size 17,17 Pixel Of oPanel2 Noborder Pixel Action fResizeFor(3)
		@ 86,355 BTNBMP oMenoTam Resource 'PMSMENOS' Size 17,17 Pixel Of oPanel2 Noborder Pixel Action fResizeFor(4)
		@ 46.6,187 Say STR0042 Of oPanel2 Pixel //"Casas Decimais"
		If cTipoVal == "2"
			oMaisDec:Disable()
			oMenoTam:Disable()
		Endif

	EndIf

	@ 54,008 Say OemToAnsi(STR0043) Of oPanel2 Pixel //"Meta"
	@ 54,065 COMBOBOX oCbx1 VAR cTipoCmb ITEMS aTipoCmb Valid fValCombo() SIZE 70,60 Of oPanel2 Pixel When lWhen2
	@ 67.5,065 MSGET oPadrao1 VAR nPadrao1 Picture cTypePad Valid fValParam(nPadrao1,1) Size 100,09 Of oPanel2 Pixel When lWhen2
	@ 68.0,165 Say oPadrao3 Prompt " " Of oPanel2 Pixel
	@ 67.5,170 MSGET oPadrao2 VAR nPadrao2 Picture cTypePad Valid fValParam(nPadrao2,2) Size 100,09 Of oPanel2 Pixel When lWhen2
	oPadrao1:Picture := cTypePad
	oPadrao2:Picture := cTypePad
	fValCombo()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Folder 3 - Parametros                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nAltList := 170
	If aSize[6] < 930
		nAltList := 170	* ( aSize[6] / 930 )
	Endif
	oFolder:aDialogs[3]:oFont := oPnlPai:oFont
	@ 000,000 MSPANEL oPanel3 SIZE aSize[5],aSize[6] OF oFolder:aDialogs[3]
	@ 003,010 Say STR0044 Of oPanel3 Pixel //"Parâmetros por variável"
	oListPar := VCBrowse():New( 015 , 010, 200, nAltList,,{STR0077,STR0078,STR0080},{45,20,45,80},; //'Variável'#'Ordem'#'Parâmetro'#'Descrição'
								oPanel3,,,,,{||},,,,,,,.F.,,.T.,,.F.,,.t.,.t.)
	oListPar:SetArray(aColsPar)
	bListPar := { || { aColsPar[oListPar:nAt,1],aColsPar[oListPar:nAt,2],aColsPar[oListPar:nAt,4] } }
	oListPar:bLine:= bListPar

	@ 003,220 Say STR0045 Of oPanel3 Pixel //"Parâmetros comuns entre as variáveis"
	oListCom := VCBrowse():New( 015 , 220, 150, nAltList,,{STR0080},{45,80},; //'Parâmetro'#'Descrição'
								oPanel3,,,,,{||},,,,,,,.F.,,.T.,,.F.,,.t.,.t.)
	oListCom:SetArray(aColsCom)
	bListCom := { || { aColsCom[oListCom:nAt,2] } }
	oListCom:bLine:= bListCom

	// Folder 4 - Parametros com conteudo fixo
	oFolder:aDialogs[4]:oFont := oPnlPai:oFont
	@ 000,000 MSPANEL oPanel4 SIZE aSize[5],aSize[6] OF oFolder:aDialogs[4]
	@ 003,010 Say STR0046 Of oPanel4 Pixel //"Selecione os parâmetros que terão seu conteúdo fixo neste indicador (fórmula)."
	oListVal := VCBrowse():New( 015 , 010, 200, nAltList,,{'',STR0080,STR0081},{10,45,80,60},; //'Parâmetro'#'Descrição'#'Conteúdo'
								oPanel4,,,,,{||},,,,,,,.F.,,.T.,,.F.,,.t.,.t.)
	oListVal:SetArray(aColsVal)
	bListVal := { || {	If(aColsVal[oListVal:nAt,1],oChecked,oUnCheck),;
						aColsVal[oListVal:nAt,3],;
						aColsVal[oListVal:nAt,4] } }
	oListVal:bLine:= bListVal
	If lWhen4
		oListVal:bLDblClick := {|| fDblValor(oListVal:nColPos) , oListVal:DrawSelect() }
	Endif

	@ 003,220 Say STR0047 Of oPanel4 Pixel //"Selecione os parâmetros com preenchimento obrigatório"
	oListObr := VCBrowse():New( 015 , 220, 150, nAltList,,{'',STR0080},{10,45,80},; //'Parâmetro'#'Descrição'
								oPanel4,,,,,{||},,,,,,,.F.,,.T.,,.F.,,.t.,.t.)
	oListObr:SetArray(aColsObr)
	bListObr := { || {	If(aColsObr[oListObr:nAt,1],oChecked,oUnCheck),;
						aColsObr[oListObr:nAt,3] } }
	oListObr:bLine:= bListObr
	If lWhen4
		oListObr:bLDblClick := {|| fDblObrig(oListObr:nColPos) , oListObr:DrawSelect() }
	Endif

	If nOpcx <> 3
		//Separa os parametros e atualiza os ListBox
		fOrgParm()
	EndIf

	Activate MsDialog oDlg On Init EnchoiceBar(oDlg,{||nOpca:=1,If(!Ng005OK(nOpcx),nOpca := 0,oDlg:End())},{||oDlg:End()}) CENTERED

	If nOpca == 1
		Begin Transaction
			Ng005Grv(nOpcx)
		End Transaction
	Endif

Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fValCombo ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida o combo box para habilitar os Edit                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fValCombo()

If Empty(cTipoCmb)
	oPadrao1:Hide()
	oPadrao2:Hide()
	oPadrao3:SetText("")
ElseIf cTipoCmb $ "5/6" //"intervalo"
	oPadrao1:Show()
	oPadrao2:Show()
	oPadrao3:SetText(STR0049) //"a"
Else
	oPadrao1:Show()
	oPadrao2:Hide()
	oPadrao3:SetText("")
Endif
oPadrao1:Refresh()
oPadrao2:Refresh()

Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fDblValor ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Informar valor para o parametro                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fDblValor(nColuna)

If !aColsVal[oListVal:nAt][1] .or. nColuna <> 1
	//Abre janela para receber o valor do parametro
	aRet := fGetValPar( aColsVal[oListVal:nAt][2] , aColsVal[oListVal:nAt][4])
	If aRet[1]
		//Se o parametro for informado corretamente, a listbox é atualizada
		aColsVal[oListVal:nAt][1] := .t.
		aColsVal[oListVal:nAt][4] := aRet[2]
		oListVal:REFRESH()
	Endif
Else
	//Caso o usuario desmarque o checkbox
	aColsVal[oListVal:nAt][1] := .f.
	aColsVal[oListVal:nAt][4] := nil
	oListVal:REFRESH()
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fDblObrig ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Indica se o parametro eh obrigatorio                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fDblObrig()

If !aColsObr[oListObr:nAt][1]
	aColsObr[oListObr:nAt][1] := .t.
	oListObr:REFRESH()
Else
	aColsObr[oListObr:nAt][1] := .f.
	oListObr:REFRESH()
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fDblValor ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Informar valor para o parametro                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fGetValPar( cCodPar , _xValPar )
Local aTemp := {}
Local nOpcxx := 0

dbSelectArea("TZ4")
dbSetOrder(1)
If !dbSeek(xFilial("TZ4")+Str(nModulo,2)+cCodPar) .or. Empty(cCodPar)
	MsgInfo(STR0050) //"Parâmetro não existe"
	Return {.f.,""}
Endif

If !Empty(Posicione("SX3", 2, TZ4->TZ4_CAMPOS, "X3_CAMPO"))
	aTemp := { 1,;									                       //1.Tipo CAMPO
			 Alltrim(TZ4->TZ4_DESCRI),;                                    //2.Descricao
			 Posicione("SX3", 2, TZ4->TZ4_CAMPOS, "X3_TIPO"),;			   //3.Tipo Var
			 Posicione("SX3", 2, TZ4->TZ4_CAMPOS, "X3_TAMANHO"),;		   //4.Tamanho
			 Posicione("SX3", 2, TZ4->TZ4_CAMPOS, "X3_DECIMAL"),;		   //5.Decimal
			 Alltrim( Posicione("SX3", 2, TZ4->TZ4_CAMPOS, "X3_PICTURE")),;//6.Picture
			 TZ4->TZ4_TABELA,;					                           //7.Tabela
			 Alltrim(TZ4->TZ4_CAMPOS),;			                           //8.Campo
			 cCodPar,Alltrim(TZ4->TZ4_F3),Space(10)}                       //9.TZ4_CODPAR, 10.TZ4_F3, 11.Lista
Else
	aTemp := { 2,;						  //1.Tipo VARIAVEL
			 Alltrim(TZ4->TZ4_DESCRI),;   //2.Descricao
			 TZ4->TZ4_TIPO,;			  //3.Tipo Var
			 TZ4->TZ4_TAMANH,;			  //4.Tamanho
			 TZ4->TZ4_DECIMA,;			  //5.Decimal
			 Alltrim(TZ4->TZ4_PICTUR),;  //6.Picture
								,;		  //7.Tabela
								,;		  //8.Campo
			 cCodPar,Alltrim(TZ4->TZ4_F3),Alltrim(TZ4->TZ4_OPCOES)} //9.TZ4_CODPAR, 10.TZ4_F3, 11.Lista
Endif

//Cria variavel
Private cValidVal := ".t."
Private cValPar

aTipoTZ4 := {}
If aTemp[3] == "6"
	aTipoTZ4 := fRetCombo(aTemp[11])
Endif

If _xValPar <> nil
	cValPar := _xValPar
Else
	If aTemp[3] $ "D/4"
		cValPar := StoD("")
	ElseIf aTemp[3] $ "C/1"
		cValPar := Space(aTemp[4])
	ElseIf aTemp[3] $ "N/2"
		cValPar := 0
	ElseIf aTemp[3] $ "L/3"
		cValPar := .F.
	Else
		cValPar := Space(aTemp[4])
	Endif
Endif
If aTemp[3] $ "D/4/C/1"
	cValidVal := "Naovazio(cValPar)"
Endif

DEFINE MSDIALOG oDlg3 TITLE OemToAnsi(STR0051) From 22,33 To 30,75 OF oMainWnd //"Parâmetro com conteúdo fixo no indicador"

@ 08,008 Say OemToAnsi(aTemp[2]) Of oDlg3 Pixel
If aTemp[3] $ "L/3"
	@ 08,95 Checkbox oGetVal Var cValPar Prompt "" Size 10,7 OF oDlg3
ElseIf aTemp[3] == "6"
	@ 08,95 COMBOBOX oGetVal VAR cValPar ITEMS aTipoTZ4 SIZE 70,60 Of oDlg3 Pixel
Else
	@ 08,95 MSGET oGetVal Var cValPar Size 60,09 Valid &(cValidVal) Picture aTemp[6] Of oDlg3 Pixel
	If !Empty(aTemp[10])
		oGetVal:cF3 := aTemp[10]
	Endif
Endif

Define sButton From 40,098 Type 1 Enable Of oDlg3 Action (nOpcxx := 1,oDlg3:End())
Define sButton From 40,128 Type 2 Enable Of oDlg3 Action (nOpcxx := 0,oDlg3:End())

ACTIVATE MSDIALOG oDlg3 CENTERED

If nOpcxx == 1
	Return {.t.,cValPar}
Endif

Return {.f.,""}

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fResizeFor ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Altera o formato do Resultado (Picture)                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fResizeFor(nTipo)
Local lAtualizou := .f.

If nTipo == 1
	If nTamaRes < 25
		nTamaRes ++
		lAtualizou := .t.
	Endif
ElseIf nTipo == 2
	If nTamaRes > 1
		If nTamaRes > nDeciRes+2 .or. nDeciRes == 0
			nTamaRes --
			lAtualizou := .t.
		Endif
	Endif
ElseIf nTipo == 3
	If nTamaRes < 25
		If nDeciRes == 0
			nTamaRes += 2
		Else
			nTamaRes ++
		Endif
		nDeciRes ++
		lAtualizou := .t.
	Endif
ElseIf nTipo == 4
	If nDeciRes > 0
		nDeciRes --
		If nDeciRes > 0
			nTamaRes --
		Else
			nTamaRes := nTamaRes - 2
		Endif
		lAtualizou := .t.
	Endif
Endif

If lAtualizou
	If cTipoVal == "2"
		cTypeRes := Replicate("9",nTamaRes)+":99"
		cTypePad := Replicate("9",nTamaRes)+":99"
		oPadrao1:Picture := cTypePad
		oPadrao2:Picture := cTypePad
		nPadrao1 := Alltrim(nPadrao1)
		nPadrao2 := Alltrim(nPadrao2)
		If nTamaRes+3 >= Len(nPadrao1)
			nPadrao1 := PadL( nPadrao1 , nTamaRes+3 )
		Else
			nPadrao1 := Substr( nPadrao1 , 2 , nTamaRes+3 )
		Endif
		If nTamaRes+3 >= Len(nPadrao2)
			nPadrao2 := PadL( nPadrao2 , nTamaRes+3 )
		Else
	  		nPadrao2 := Substr( nPadrao2 , 2 , nTamaRes+3 )
		Endif
	Else
		NGINDPICT(nTamaRes,nDeciRes,@cTypeRes,".",",")
		NGINDPICT(nTamaRes,nDeciRes,@cTypePad,",",".")
		cTypePad := "@E "+cTypePad
		oPadrao1:Picture := cTypePad
		oPadrao2:Picture := cTypePad
		nPadrao1 := Val( Str(nPadrao1,nTamaRes,nDeciRes) )
		nPadrao2 := Val( Str(nPadrao2,nTamaRes,nDeciRes) )
	Endif
	oPadrao1:Refresh()
	oPadrao2:Refresh()
	oTypeRes:Refresh()
	oPanel2:Refresh()
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fValTipVal ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao chamada ao alterar o tipo de resultado (decimal/hora)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fValTipVal()
If cTipoBkp == cTipoVal
	Return .t.
Endif
cTipoBkp := cTipoVal //Backup do cTipoVal
If cTipoVal == "2"
	nDeciRes := 0
	cTypeRes := Replicate("9",nTamaRes)+":99"
	cTypePad := Replicate("9",nTamaRes)+":99"
	If ValType(nPadrao1) == "N"
		nPadrao1 := PadL( NTOH(nPadrao1) , nTamaRes+3 )
	Else
		nPadrao1 := PadL( '00:00' , nTamaRes+3 )
	Endif
	If ValType(nPadrao2) == "N"
		nPadrao2 := PadL( NTOH(nPadrao2) , nTamaRes+3 )
	Else
		nPadrao2 := PadL( '00:00' , nTamaRes+3 )
	Endif
	oPadrao1:Picture := cTypePad
	oPadrao2:Picture := cTypePad
	oMaisDec:Disable()
	oMenoTam:Disable()
Else
	nDeciRes := 2
	nTamaRes := nTamaRes + 3
	NGINDPICT(nTamaRes,nDeciRes,@cTypeRes,".",",")
	NGINDPICT(nTamaRes,nDeciRes,@cTypePad,",",".")
	cTypePad := "@E "+cTypePad
	If ValType(nPadrao1) == "C"
		nPadrao1 := HTON(nPadrao1)
	Else
		nPadrao1 := 0
	Endif
	If ValType(nPadrao2) == "C"
		nPadrao2 := HTON(nPadrao2)
	Else
		nPadrao2 := 0
	Endif
	oPadrao1:Picture := cTypePad
	oPadrao2:Picture := cTypePad
	oMaisDec:Enable()
	oMenoTam:Enable()
Endif
oPadrao1:Refresh()
oPadrao2:Refresh()
oTypeRes:Refresh()
oPanel2:Refresh()
Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fValParam ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida intervalo da avaliacao do resultado                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fValParam(nValPar,nTipo)
Local lRETVH := .T.,xh,xm,cTemp
Local lPROVH := .F.
Local nPadraoX := nValPar

If cTipoVal == "1"
	Return .t.
Endif

If Empty(nPadraoX)
   lPROVH := .F.
Else
   If ValType(nPadraoX) <> "C"
   	  nPadraoX := cValToChar(nPadraoX)
   Endif
   posv := At(":",nPadraoX)
   If posv = 0
      lPROVH := .T.
   Else
      cTemp := Alltrim(Substr(nPadraoX,1,posv-1)+Substr(nPadraoX,posv+1))
      If Empty(cTemp)
	      lPROVH := .T.
      Else
	      If Len(cTemp) == 1
		      nPadraoX := "0:0"+cTemp
		      posv := 2
	      ElseIf Len(cTemp) == 2
		      nPadraoX := "0:"+cTemp
		      posv := 2
	      Else
		      nPadraoX := Substr( cTemp, 1, Len(cTemp)-2 )+":"+Substr(cTemp,Len(cTemp)-1)
		      posv := Len(nPadraoX)-2
	      Endif

	      cHorav   := SubStr( nPadraoX ,1,(posv-1))
	      cMinutov := SubStr( nPadraoX ,(posv+1),2)
	      If Empty(cHorav) .Or. Empty(cMinutov) .Or. Len(Alltrim(cMinutov)) < 2
	         lPROVH := .T.
	      Else
	         For xh := 1 To Len(cHorav)
	            cCARACHOR := Substr(cHorav,xh,1)
	            If Empty(cCARACHOR) .Or. !Isdigit(cCARACHOR)
	              lPROVH := .T.
	              Exit
	            Endif
	         Next xh
	         If !lPROVH
	            For xm := 1 To Len(cMinutov)
	               cCARACMIN := Substr(cMinutov,xm,1)
	               If Empty(cCARACMIN) .Or. !Isdigit(cCARACMIN)
	                 lPROVH := .T.
	                 Exit
	               Endif
	            Next xm
	         Endif

	         If !lPROVH
	            nHorav   := Val(cHorav)
	            nMinutov := Val(cMinutov)
	            If !(nMinutov < 60)
	               lPROVH := .T.
	            Endif
	         Endif
	      Endif
      Endif
   Endif
Endif

If lPROVH
   Help(" ",1,"HORAINVALI")
   lRETVH := .F.
Endif

If nTipo == 1
	nPadrao1 := PadL( nPadraoX , nTamaRes+3 )
Else
	nPadrao2 := PadL( nPadraoX , nTamaRes+3 )
Endif

Return lRETVH

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ NGINDPICT ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Altera picture de acordo com o tamanho e decimal            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NGINDPICT(nSize, nDecMax, cTypePict, cTypeCase, cTypeDec)
	Local nInd      := 0
	Local nTamTot   := (nSize + nDecMax + 1)
	Local nSizeAux  := nSize
	Local cSizeTemp := ''

	Default cTypeDec  := ','
	Default cTypeCase := '.'
	Default cTypePict := '@E '

	//Valor fixo 16, pois é o valor maximo aceito pelo dicionario para campos númericos
	If nTamTot > 16
		nSizeAux := 16
		nDecMax  := 3
	EndIf

	If nDecMax > 0
		nSizeAux := nSizeAux - nDecMax - 1
	EndIf

	cSizeTemp := Replicate("9", nSizeAux)

	For nInd := Len(cSizeTemp)-3 To 1 Step -3
		If nInd > 0
			cSizeTemp := SubStr(cSizeTemp, 1, nInd) + cTypeCase + SubStr(cSizeTemp, nInd + 1)
		EndIf
	Next nInd

	cTypePict := cSizeTemp

	If nDecMax > 0
		cTypePict += cTypeDec + Replicate("9",nDecMax)
	EndIf

Return cTypePict

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fValUnMed ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida o campo Unidade de Medida                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fValUnMed()
Local lRet := .t.
Local aArea

If !Empty(cUniMedi)
	aArea := GetArea()
	dbSelectArea("SAH")
	dbSetOrder(1)
	If dbSeek(xFilial("SAH")+cUniMedi)
		cDesMedi := SAH->AH_DESCPO
	Else
		Help(" ",1,"REGNOIS")
		lRet := .f.
	Endif
	RestArea(aArea)
Else
	cDesMedi := Space(40)
Endif

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} fOrgParm
Atualiza listbox dos parametros utilizados na formula
@author  Denis Hyroshi Souza
@since   07/07/2008
@version p12
/*/
//-------------------------------------------------------------------
Static Function fOrgParm()
Local nPos1,nPos2,nPos3,nFor
Local aTemp  := aClone(aColsVal)
Local aTemp2 := aClone(aColsObr)
Local cMemoTmp := cMemoFor
Local cMemoRes := ""
Local aTabVar := {}

aColsVal := {} //Zera a lista dos conteudos
aColsObr := {} //Zera a lista dos parametros obrigatorios
aVarIndi := {} //Zera a lista das variaveis
aIndParm := {} //Variavel utilizada na funcao NgIndParm
aVarParm := {} //Variavel utilizada na funcao NgIndParm

//Armazena os parametros usados na formula
NgIndParm( cMemoFor , cFormula )
aColsPar := aClone(aVarParm)
nPos3 := aScan( aIndParm, {|x| x[1] == cFormula } )
If nPos3 > 0
	aColsCom := aClone( aIndParm[nPos3,2] )
Endif

//Armazena 1x todos os parametros usados
For nFor := 1 To Len(aTemp)
	nPos3 := aScan( aVarParm, {|x| x[3] == aTemp[nFor,2] } )
	If nPos3 > 0
		aAdd( aColsVal , aTemp[nFor] )
	Endif
Next nFor
For nFor := 1 To Len(aVarParm)
	nPos3 := aScan( aColsVal, {|x| x[2] == aVarParm[nFor,3] } )
	If nPos3 == 0
		aAdd( aColsVal , { .f. , aVarParm[nFor,3] , aVarParm[nFor,4] , nil } )
	Endif
Next nFor

//Armazena os parametros comuns
For nPos1 := 1 to Len(aColsVal)
	nPos3 := aScan( aTemp2, {|x| x[2] == aColsVal[nPos1,2] } )
	If nPos3 > 0
		aAdd( aColsObr , { aTemp2[nPos3,1] , aColsVal[nPos1,2] , aColsVal[nPos1,3] } )
	Else
		aAdd( aColsObr , { .f. , aColsVal[nPos1,2] , aColsVal[nPos1,3] } )
	Endif
Next nPos1

//---------------------------------------------------------------
// Varre formula separando as @variaveis@
//---------------------------------------------------------------
While !Empty(cMemoTmp)
	nPos1 := AT("@",cMemoTmp)
	If nPos1 > 0
		nPos2 := AT("@", Substr(cMemoTmp,nPos1+1) )
		If nPos2 > 0
			cTempVar := Alltrim( Substr( cMemoTmp , nPos1+1 , nPos2-1 ) )
			nPos3 := aScan( aVarIndi, {|x| x == cTempVar } )
			If nPos3 == 0
				aAdd( aVarIndi , cTempVar )
			Endif
			cMemoRes += Substr( cMemoTmp , 1 , nPos1 - 1) + '1'
			cMemoTmp := Substr( cMemoTmp , nPos1+nPos2+1 ) //Pega a partir do fecha variavel '@XXXXXXXX@'
		Else
			Exit
		Endif
	Else
		cMemoRes += cMemoTmp
		Exit
	EndIf
End

//Atualiza ListBox 1
If Len(aColsPar) == 0
	aColsPar := { { Space(12) , Space(2) , Space(12) , Space(40) } }
Endif
oListPar:SetArray(aColsPar)
oListPar:bLine:= bListPar
oListPar:GoTop()
oListPar:REFRESH()

//Atualiza ListBox 2
If Len(aColsCom) == 0
	aColsCom := { { Space(12) , Space(40) } }
Endif
oListCom:SetArray(aColsCom)
oListCom:bLine:= bListCom
oListCom:GoTop()
oListCom:REFRESH()

//Atualiza ListBox Fixos
If Len(aColsVal) == 0
	aColsVal := { {.f.,Space(12),Space(40),nil} }
Endif
oListVal:SetArray(aColsVal)
oListVal:bLine:= bListVal
oListVal:GoTop()
oListVal:REFRESH()

//Atualiza ListBox Obrigatorios
If Len(aColsObr) == 0
	aColsObr := { {.f.,Space(12),Space(40)} }
Endif
oListObr:SetArray(aColsObr)
oListObr:bLine:= bListObr
oListObr:GoTop()
oListObr:REFRESH()

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fValForm  ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida alteracao do tamaanho e decimal da Valor Constante   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fValForm(nTamTemp,nDecTemp,nTipo)

If nTipo == 1
	If nTamTemp < 1
		Msginfo(STR0054) //"O campo Tamanho deve ser maior que ZERO."
		Return .f.
	Endif
ElseIf nTipo == 2
	If nDecTemp < 0
		Msginfo(STR0055) //"O campo Decimal deve ser positivo."
		Return .f.
	Endif
Endif
If nDecTemp > 0
	If nTamTemp <= nDecTemp+1
		Msginfo(STR0056+Alltrim(Str(nDecTemp+2,3))+"." ) //"O campo Tamanho deve ser no mínimo "
		Return .f.
	Endif
Endif

Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fValExpr  ³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida o campo Valor Constante                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fValExpr()
Return .t.

//--------------------------------------------------------------
/*/{Proteus.doc} fLoadBtn
Verifica se o botão deve estar habilitado ou não.
@type function

@author Denis Hyroshi Souza
@since  07/07/2008

@sample fLoadBtn( .F., .F. )

@param  lLoad, boolean, Se terá conteúdo pré carregado.
@param  lWhen, boolean, Indica condição do WHEN para os botões.
@return 
/*/
//--------------------------------------------------------------
Static Function fLoadBtn( lLoad, lWhen )
	
	Local cTemp
	
	oBtn01:Disable()
	oBtn02:Disable()
	oBtn03:Disable()
	oBtn04:Disable()
	oBtn05:Disable()
	oBtn06:Disable()
	oBtnAdd:Disable()
	oBtnLim:Disable()
	oBtnDes:Disable()

	If !lWhen
		Return
	Endif

	If !Empty(cMemoFor)
		oBtnLim:Enable()
	Endif
	If Len(aMemoAlt) > 0
		oBtnDes:Enable()
	Endif

	If lLoad
		cTemp := Alltrim(cMemoFor)
		cTemp := Substr( Alltrim(cMemoFor) , Len(cTemp) , 1 )
		If cTemp $ "-+/*"
			nTipoOp := 1
		ElseIf cTemp == "("
			nTipoOp := 2
		ElseIf cTemp == ")"
			nTipoOp := 3
		ElseIf cTemp $ "#@"
			nTipoOp := 4
		Endif
	Endif

	//Verifica a ultima operacao e habilita apenas os botoes necessarios
	If nTipoOp == 1 //Se operador matematico
		oBtn05:Enable()
		oBtnAdd:Enable()
	ElseIf nTipoOp == 2 //Se abre parentese
		oBtn05:Enable()
		oBtnAdd:Enable()
	ElseIf nTipoOp == 3 //Se fecha parentese
		oBtn01:Enable()
		oBtn02:Enable()
		oBtn03:Enable()
		oBtn04:Enable()
		If fQtdOcorre("(") > fQtdOcorre(")")
			oBtn06:Enable()
		Endif
	ElseIf nTipoOp == 4 //Se adicionado variavel
		oBtn01:Enable()
		oBtn02:Enable()
		oBtn03:Enable()
		oBtn04:Enable()
		If fQtdOcorre("(") > fQtdOcorre(")")
			oBtn06:Enable()
		Endif
	Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fQtdOcorre³ Autor ³ Denis Hyroshi Souza   ³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Quantidade do caracter na formula                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fQtdOcorre(cCharOcorre)
Local nPos
Local nCont  := 0
Local cTexto := Alltrim(cMemoFor)

While !Empty(cTexto)
	nPos := AT(cCharOcorre,cTexto)
	If nPos == 0
		cTexto := ""
		exit
	Else
		nCont++
		cTexto := Substr(cTexto,nPos+1)
	Endif
End

Return nCont

//--------------------------------------------------------------
/*/{Proteus.doc} Ng005Lim
Limpa formula.
@type function

@author Denis Hyroshi Souza
@since  07/07/2008

@sample Ng005Lim( .F., .F. )

@param  lWhen, boolean, Indica condição do WHEN para o botão.
@return 
/*/
//--------------------------------------------------------------
Static Function Ng005Lim( lWhen )

	aAdd( aMemoAlt , {cMemoFor,nTipoOp} )
	cMemoFor := ""
	//nPula    := 70
	nTipoOp  := 1  //Controle do ultimo botao pressionado
	fLoadBtn( .F., lWhen )
	oMemoFor:Refresh()

	//Separa os parametros e atualiza os ListBox
	fOrgParm()

Return .t.

//--------------------------------------------------------------
/*/{Proteus.doc} Ng005Des
Desfazer ultima operação.
@type function

@author Denis Hyroshi Souza
@since  07/07/2008

@sample Ng005Des( .F. )

@param  lWhen, boolean, Indica condição do WHEN para o botão.
@return 
/*/
//--------------------------------------------------------------
Static Function Ng005Des( lWhen )

	If Len(aMemoAlt) > 0
		cMemoFor := aMemoAlt[Len(aMemoAlt),1]
		nTipoOp  := aMemoAlt[Len(aMemoAlt),2] //Controle do ultimo botao pressionado
		aDel(aMemoAlt, Len(aMemoAlt) )
		aSize(aMemoAlt, Len(aMemoAlt)-1 )
		fLoadBtn( .F., lWhen )
		//Separa os parametros e atualiza os ListBox
		fOrgParm()
	Endif

	oMemoFor:Refresh()

Return .t.

//--------------------------------------------------------------
/*/{Proteus.doc} Ng005Add
Adiciona informacoes na formula do indicador.
@type function

@author Denis Hyroshi Souza
@since  07/07/2008

@sample Ng005Add( '+', 1, .F. )

@param  cOperacao, string , Indica a operação que será inclusa na formula.
@param  nTipo    , numeric, Controle do tipo da ultima operação.
@param  lWhen    , boolean, Indica condição do WHEN para o botão.
@return 
/*/
//--------------------------------------------------------------
Static Function Ng005Add( cOperacao, nTipo, lWhen )
	Local cMsg := STR0061 //"A Fórmula não pode ultrapassar o limite de 500 caracteres."

	If cOperacao == Nil
		If !Empty(cCodVari)
			If Len(cMemoFor + '@'+Alltrim(cCodVari)+'@') > 500
				MsgInfo(cMsg)
				Return .f.
			Endif
			aAdd( aMemoAlt , {cMemoFor,nTipoOp} )
			cMemoFor +=  '@'+Alltrim(cCodVari)+'@ '
			cCodVari := Space( Len(TZ2->TZ2_CODVAR) )

			//Separa os parametros e atualiza os ListBox
			fOrgParm()

		ElseIf !Empty(cCodExp)
			If Len(cMemoFor + '#'+Alltrim(Str(cCodExp,nNgTam,nNgDec))+'#') > 500
				MsgInfo(cMsg)
				Return .f.
			Endif
			aAdd( aMemoAlt , {cMemoFor,nTipoOp} )
			cMemoFor +=  '#'+Alltrim(Str(cCodExp,nNgTam,nNgDec))+'# '
			cCodExp  := 0
		Else
			Return .t.
		Endif
	Else
		If Len(cMemoFor + cOperacao) > 500
			MsgInfo(cMsg)
			Return .f.
		Endif
		aAdd( aMemoAlt , {cMemoFor,nTipoOp} )
		cMemoFor += cOperacao+" "
	Endif
	nTipoOp := nTipo //Controle do ultimo botao pressionado

	fLoadBtn( .F., lWhen )

	oMemoFor:Refresh()

Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ NGCHKFORM ³ Autor ³ Denis Hyroshi de Souza³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida se a formula digitada esta correta.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NGCHKFORM(cMemoFor,lHelpMsg)
Local cMemoTmp := StrTran(cMemoFor, Chr(10) , "")
Local cVarNao  := ""
Local cFunNao  := ""
Local aTabVar  := {}
Local aTabExp  := {}
Local lRet     := .t.
Local aArea    := GetArea()
Local nPos1,nPos2,nXX

If Empty(cMemoFor)
	If lHelpMsg
		Help(" ",1,'ATENCAO',,STR0060,3,1) //"A fórmula não pode ficar vazia."
	Endif
	Return .f.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Varre formula separando as @variaveis@                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cMemoRes := ""
While !Empty(cMemoTmp)
	nPos1 := AT("@",cMemoTmp)
	If nPos1 > 0
		nPos2 := AT("@", Substr(cMemoTmp,nPos1+1) )
		If nPos2 > 0
			aAdd( aTabVar, Substr( cMemoTmp , nPos1+1 , nPos2-1 ) )
			cMemoRes += Substr( cMemoTmp , 1 , nPos1 - 1) + '1'
			cMemoTmp := Substr( cMemoTmp , nPos1+nPos2+1 ) //Pega a partir do fecha variavel '@XXXXXXXX@'
		Else
			Exit
		Endif
	Else
		cMemoRes += cMemoTmp
		Exit
	EndIf
End

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Varre formula separando as #Valor Constante#                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cMemoTmp := cMemoRes
cMemoRes := ""
While !Empty(cMemoTmp)
	nPos1 := AT("#",cMemoTmp)
	If nPos1 > 0
		nPos2 := AT("#", Substr(cMemoTmp,nPos1+1) )
		If nPos2 > 0
			aAdd( aTabExp, Substr( cMemoTmp , nPos1+1 , nPos2-1 ) )
			cMemoRes += Substr( cMemoTmp , 1 , nPos1 - 1) + '2'
			cMemoTmp := Substr( cMemoTmp , nPos1+nPos2+1 ) //Pega a partir do fecha Valor Constante '#XXXXXXXX#'
		Else
			Exit
		Endif
	Else
		cMemoRes += cMemoTmp
		Exit
	EndIf
End

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a quantidade de abre e fecha parenteses iguais   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lTemParen := .f.
nContAbr := 0 //Quantidade de (
nContFec := 0 //Quantidade de )
For nXX := 1 to Len(cMemoRes)
	If Substr( cMemoRes , nXX , 1 ) == "("
		nContAbr++
		lTemParen := .t.
	ElseIf Substr( cMemoRes , nXX , 1 ) == ")"
		nContFec++
		lTemParen := .t.
	Endif
Next nXX
If nContAbr > nContFec
	If lHelpMsg
		MsgInfo(STR0062) //"A quantidade de '(' está maior do que ')'."
	Endif
	Return .f.
ElseIf nContAbr < nContFec
	If lHelpMsg
		MsgInfo(STR0063) //"A quantidade de '(' está menor do que ')'."
	Endif
	Return .f.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a sintaxe da formula esta correta                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aForCalc := {}
cMemoTmp := cMemoRes
nColIni  := 1
While !Empty(cMemoTmp)

	nPos1a := AT("(", Substr( cMemoTmp , nColIni ) )
	nPos1b := AT(")", Substr( cMemoTmp , nColIni ) )
	If nPos1a > 0 .and. nPos1b > 0
		nPos2a := AT("(", Substr( cMemoTmp , nColIni+nPos1a ) )
		If nPos1a+nPos2a >= nPos1b .or. nPos2a == 0
			aAdd( aForCalc , Substr( cMemoTmp , nColIni+nPos1a , nPos1b-nPos1a-2 ) )
			cMemoTmp := Substr( cMemoTmp , 1 , nColIni+nPos1a-2 ) + "1" + Substr( cMemoTmp , nColIni+nPos1b )
			nColIni := 1
		Else
			nColIni := nColIni+nPos2a
			Loop
		Endif
	Else
		aAdd( aForCalc , cMemoTmp )
		cMemoTmp := ""
		Exit
	Endif
End

For nXX := 1 To Len(aForCalc)

	cMemoTmp := aForCalc[nXX] //cMemoRes
	nPosChar := 1
	nUltOper := 0 //1-Valor ou 2-Operador
	While nPosChar <= Len(cMemoTmp)

		If Empty( Substr( cMemoTmp , nPosChar , 1 ) )
			nPosChar++
			Loop
		Endif

		If nUltOper == 0
			If Substr( cMemoTmp , nPosChar , 1 ) $ "12"
				nUltOper := 1
			Else
				If lHelpMsg
					MsgInfo(STR0065,STR0064) //"A fórmula não pode iniciar com operador (+ - / *)."#"Erro na fórmula"
				Endif
				Return .f.
			Endif
		ElseIf nUltOper == 2
			If Substr( cMemoTmp , nPosChar , 1 ) $ "12"
				nUltOper := 1
			Else
				If lHelpMsg
					MsgInfo(STR0066+Chr(10)+; //"A fórmula não pode ter dois operadores em sequência (+ - / *). "
							STR0067,STR0064) //"Necessita de uma variável ou valor constante entre os operadores."#"Erro na fórmula"
				Endif
				Return .f.
			Endif
		ElseIf nUltOper == 1
			If Substr( cMemoTmp , nPosChar , 1 ) $ "+-/*"
				nUltOper := 2
			Else
				If lHelpMsg
					MsgInfo(STR0068+Chr(10)+; //"A fórmula não pode ter duas variáveis/valores em sequência. "
							STR0069,STR0064) //"Necessita de um operador entre as variáveis/valores."#"Erro na fórmula"
				Endif
				Return .f.
			Endif
		Endif

		nPosChar++
	End

	If nUltOper == 2
		If lHelpMsg
			MsgInfo(STR0070,STR0064) //"A fórmula não pode terminar com operador (+ - / *)."#"Erro na fórmula"
		Endif
		Return .f.
	Endif

Next nXX

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a variavel existe na tabela TZ2                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTot1Erro := 0
nTot2Erro := 0
For nXX := 1 to Len(aTabVar)
	dbSelectArea("TZ2")
	dbSetOrder(1)
	If !dbSeek(xFilial("TZ2")+Str(nModulo,2)+PadR(aTabVar[nXX],12))
		lRet := .f.
		cVarNao += Chr(10) + "- " + aTabVar[nXX]
		nTot1Erro++
	Else
		cNomFun := Alltrim(TZ2->TZ2_FUNCAO)
		If TZ2->TZ2_TIPO == "2"
			cNomFun := "U_"+cNomFun
		Endif
		If !FindFunction(cNomFun)
			lRet := .f.
			cFunNao += Chr(10) + "- "+STR0075+": " + Alltrim(aTabVar[nXX]) + " - "+STR0076+": " + cNomFun //"Var"#"Função"
			nTot2Erro++
		Endif
	EndIf
Next nXX

If !Empty(cVarNao)
	If lHelpMsg
		If nTot1Erro > 1
			Help(" ",1,"ATENCAO",,STR0071+cVarNao,3,1) //"As seguintes variáveis não existem: "
		Else
			Help(" ",1,"ATENCAO",,STR0072+cVarNao,3,1) //"A seguinte variável não existe: "
		Endif
	Endif
Endif

If !Empty(cFunNao)
	If lHelpMsg
		If nTot2Erro > 1
			Help(" ",1,"ATENCAO",,STR0073+cFunNao,3,1) //"As seguintes funções não existem no repositório: "
		Else
			Help(" ",1,"ATENCAO",,STR0074+cFunNao,3,1) //"A seguinte função não existe no repositório: "
		Endif
	Endif
Endif

RestArea(aArea)
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³  Ng005OK  ³ Autor ³ Denis Hyroshi de Souza³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se a formula esta correta e faz a gravacao         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Ng005OK(nOpcx)

Local lOk := .T.

If nOpcx == 3 .or. nOpcx == 4
	If !NGCHKFORM(cMemoFor,.t.)
		lOk := .F.
	EndIf
	If STR0057 $ cTipoCmb //"intervalo"
		If cTipoVal != "2"
			If nPadrao1 > nPadrao2
				MsgInfo(STR0059,; //"Quando for selecionado um Intervalo para a Meta, o primeiro valor não pode ser maior que o segundo valor."
						STR0058) //"Atenção"
				oFolder:SetOption(2)
				lOk := .F.
			Endif
		Else
			If HtoM(nPadrao1) > HtoM(nPadrao2)
				MsgInfo(STR0059,; //"Quando for selecionado um Intervalo para a Meta, o primeiro valor não pode ser maior que o segundo valor."
						STR0058) //"Atenção"
				oFolder:SetOption(2)
				lOk := .F.
			Endif
		Endif
	Endif
EndIf

lOk := obrigatorio(aSvAGets,aSvATela)

Return lOk

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³  Ng005Grv ³ Autor ³ Denis Hyroshi de Souza³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se a formula esta correta e faz a gravacao         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Ng005Grv(nOpcx)

	Local nx        := 0
	Local nCmpo     := 0
	Local nX2       := 0
	Local nTotal    := 0
	Local xConteudo := ""
	Local cCampo    := ""

	If nOpcx == 3
		cFormula := M->TZ5_CODIND
	Endif

	If nOpcx == 3 .or. nOpcx == 4

		dbSelectArea("TZ5")
		dbSetOrder(1)
		If dbSeek(xFilial("TZ5")+Str(nModulo,2)+cFormula)
			RecLock("TZ5",.F.)
		Else
			RecLock("TZ5",.T.)
		EndIf

		nTotal := FCOUNT()
		For nx := 1 To nTotal

			cCampo := FieldName(nx)
			If Alltrim(cCampo) <> "TZ5_FILIAL" .And. Alltrim(cCampo) <> "TZ5_CODIND" .And. ;
			   Alltrim(cCampo) <> "TZ5_FORMUL" .And. Alltrim(cCampo) <> "TZ5_FORCON"

				nCmpo := "M->" + cCampo
				xConteudo := &nCmpo.
				If ValType(xConteudo) <> "U"
					FieldPut(nx, xConteudo)
				Endif

			Endif

		Next nx

		cMemoFor        := Alltrim(cMemoFor)
		TZ5->TZ5_FILIAL := xFilial("TZ5")
		TZ5->TZ5_MODULO := Str(nModulo,2)
		TZ5->TZ5_CODIND := M->TZ5_CODIND

		If lCpo2_TZ5
			TZ5->TZ5_FORMUL := Substr(cMemoFor,1,nLen1_TZ5)
			TZ5->TZ5_FORCON := SubStr(cMemoFor,nLen1_TZ5+1,nLen2_TZ5)
		Else
			TZ5->TZ5_FORMUL := cMemoFor
		Endif

		TZ5->TZ5_UNIMED := cUniMedi
		TZ5->TZ5_TAMMED := nTamaRes
		TZ5->TZ5_DECMED := nDeciRes
		TZ5->TZ5_TIPVAL := If(Empty(cTipoVal),"1",cTipoVal)
		TZ5->TZ5_TIPRES := cTipoCmb

		If !Empty(TZ5->TZ5_TIPRES)
			If cTipoVal != "2"
				TZ5->TZ5_VALOR1 := Alltrim( Str(nPadrao1,nTamaRes,nDeciRes) )
				If TZ5->TZ5_TIPRES $ "5/6"
					TZ5->TZ5_VALOR2 := Alltrim( Str(nPadrao2,nTamaRes,nDeciRes) )
				Else
					TZ5->TZ5_VALOR2 := ""
				Endif
			Else
				TZ5->TZ5_VALOR1 := Alltrim( nPadrao1 )
				If TZ5->TZ5_TIPRES $ "5/6"
					TZ5->TZ5_VALOR2 := Alltrim( nPadrao2 )
				Else
					TZ5->TZ5_VALOR2 := ""
				Endif
			Endif
		Else
			TZ5->TZ5_VALOR1 := ""
			TZ5->TZ5_VALOR2 := ""
		Endif

		//Manipula campos MEMO
		If Type("aMemos") == "A"
			If nOpcx == 3
				For nX2 := 1 to Len(aMemos)
					cVar := aMemos[nX2][2]
					cAliasMemo := If(len(aMemos[nX2]) == 3,aMemos[nX2][3],Nil)
					MSMM(,TamSx3(aMemos[nX2][2])[1],,&cVar,1,,,"TZ5",aMemos[nX2][1],cAliasMemo)
				Next nX2
			ElseIf nOpcx == 4
				For nX2 := 1 to Len(aMemos)
					cVar := aMemos[nX2][2]
					cVar1:= aMemos[nX2][1]
					cAliasMemo := If(len(aMemos[nX2]) == 3,aMemos[nX2][3],Nil)
					MSMM(&cVar1,TamSx3(aMemos[nX2][2])[1],,&cVar,1,,,"TZ5",aMemos[nX2][1],cAliasMemo)
				Next nX2
			Endif
		Endif

		TZ5->(MsUnLock())

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		// Incluindo na tabela Parametros Fixos
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("TZ7")
		dbSetOrder(1)
		For nX2 := 1 to Len(aColsVal)
			If aColsVal[nX2,4] <> nil .and. aColsVal[nX2,1]
				If TZ7->(dbSeek(xFilial("TZ7")+Str(nModulo,2)+cFormula+'1'+aColsVal[nX2,2]))
					RecLock("TZ7",.f.)
				Else
					RecLock("TZ7",.t.)
					TZ7->TZ7_FILIAL := xFilial("TZ7")
					TZ7->TZ7_MODULO := Str(nModulo,2)
					TZ7->TZ7_CODIND := cFormula
					TZ7->TZ7_CODPAR := aColsVal[nX2,2]
					TZ7->TZ7_TIPO   := '1'
				EndIf
				If ValType(aColsVal[nX2,4]) == "N"
					TZ7->TZ7_CONTEU := Alltrim(Str(aColsVal[nX2,4]))
				ElseIf ValType(aColsVal[nX2,4]) == "D"
					TZ7->TZ7_CONTEU := DtoS(aColsVal[nX2,4])
				ElseIf ValType(aColsVal[nX2,4]) == "L"
					TZ7->TZ7_CONTEU := If(aColsVal[nX2,4],".T.",".F.")
				Else
					TZ7->TZ7_CONTEU := aColsVal[nX2,4]
				Endif
				TZ7->(MsUnLock())
			Endif
		Next nX2

		// Excluindo os Parametros Fixos que nao foram mantidos na alteracao
		If nOpcx == 4
			dbSelectArea("TZ7")
			dbSetOrder(1)
			dbSeek(xFilial("TZ7")+Str(nModulo,2)+cFormula+'1')
			While !Eof() .and. xFilial("TZ7")+cFormula == TZ7->TZ7_FILIAL+TZ7->TZ7_CODIND .and. TZ7->TZ7_TIPO == '1' .and. TZ7->TZ7_MODULO == Str(nModulo,2)
				If aScan( aColsVal, {|x| x[2] == TZ7->TZ7_CODPAR .and. x[1] .and. x[4] <> nil } ) == 0
					RecLock("TZ7",.f.)
					dbDelete()
					TZ7->(MsUnLock())
				Endif
				dbSkip()
			End
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		// Incluindo na tabela Parametros Obrigatorios
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("TZ7")
		dbSetOrder(1)
		For nX2 := 1 to Len(aColsObr)
			If aColsObr[nX2,1]
				If TZ7->(dbSeek(xFilial("TZ7")+Str(nModulo,2)+cFormula+'2'+aColsObr[nX2,2]))
					RecLock("TZ7",.f.)
				Else
					RecLock("TZ7",.t.)
					TZ7->TZ7_FILIAL := xFilial("TZ7")
					TZ7->TZ7_MODULO := Str(nModulo,2)
					TZ7->TZ7_CODIND := cFormula
					TZ7->TZ7_CODPAR := aColsObr[nX2,2]
					TZ7->TZ7_TIPO   := '2'
				EndIf
				TZ7->(MsUnLock())
			Endif
		Next nX2

		// Excluindo os Parametros Fixos que nao foram mantidos na alteracao
		If nOpcx == 4
			dbSelectArea("TZ7")
			dbSetOrder(1)
			dbSeek(xFilial("TZ7")+Str(nModulo,2)+cFormula+'2')
			While !Eof() .and. xFilial("TZ7")+cFormula == TZ7->TZ7_FILIAL+TZ7->TZ7_CODIND .and. TZ7->TZ7_TIPO == '2' .and. TZ7->TZ7_MODULO == Str(nModulo,2)
				If aScan( aColsObr, {|x| x[2] == TZ7->TZ7_CODPAR .and. x[1] } ) == 0
					RecLock("TZ7",.f.)
					dbDelete()
					TZ7->(MsUnLock())
				Endif
				dbSkip()
			End
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		// Incluindo na tabela Variaveis por Indicador
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("TZ6")
		dbSetOrder(1)
		For nX2 := 1 to Len(aVarIndi)
			If TZ6->(!dbSeek(xFilial("TZ6")+Str(nModulo,2)+cFormula+aVarIndi[nX2]))
				RecLock("TZ6",.t.)
				TZ6->TZ6_FILIAL := xFilial("TZ6")
				TZ6->TZ6_MODULO := Str(nModulo,2)
				TZ6->TZ6_CODIND := cFormula
				TZ6->TZ6_CODVAR := aVarIndi[nX2]
				TZ6->(MsUnLock())
			Endif
		Next nX2
		// Excluindo os Parametros Fixos que nao foram mantidos na alteracao
		If nOpcx == 4
			dbSelectArea("TZ6")
			dbSetOrder(1)
			dbSeek(xFilial("TZ6")+Str(nModulo,2)+cFormula)
			While !Eof() .and. xFilial("TZ6")+cFormula == TZ6->TZ6_FILIAL+TZ6->TZ6_CODIND .and. TZ6->TZ6_MODULO == Str(nModulo,2)
				If aScan( aVarIndi, {|x| x == Alltrim(TZ6->TZ6_CODVAR) } ) == 0
					RecLock("TZ6",.f.)
					dbDelete()
					TZ6->(MsUnLock())
				Endif
				dbSkip()
			End
		Endif

	ElseIf nOpcx == 5

		//Deleta campos MEMO
		If Type("aMemos") == "A"
			For nX2 := 1 To Len(aMemos)
				cAliasMemo := If(len(aMemos[nX2]) == 3,aMemos[nX2][3],Nil)
				MSMM(&(aMemos[nX2][1]),,,,2,,,,,cAliasMemo)
			Next nX2
		Endif

		//Exclui as variaveis do indicador
		dbSelectArea("TZ6")
		dbSetOrder(1)
		dbSeek(xFilial("TZ6")+Str(nModulo,2)+cFormula)
		While !Eof() .and. xFilial("TZ6")+cFormula == TZ6->TZ6_FILIAL+TZ6->TZ6_CODIND .and. TZ6->TZ6_MODULO == Str(nModulo,2)
			RecLock("TZ6",.f.)
			dbDelete()
			TZ6->(MsUnLock())
			dbSkip()
		End

		//Exclui os parametros do indicador
		dbSelectArea("TZ7")
		dbSetOrder(1)
		dbSeek(xFilial("TZ7")+Str(nModulo,2)+cFormula)
		While !Eof() .and. xFilial("TZ7")+cFormula == TZ7->TZ7_FILIAL+TZ7->TZ7_CODIND .and. TZ7->TZ7_MODULO == Str(nModulo,2)
			RecLock("TZ7",.f.)
			dbDelete()
			TZ7->(MsUnLock())
			dbSkip()
		End

		//Exclui o indicador
		dbSelectArea("TZ5")
		dbSetOrder(1)
		If dbSeek(xFilial("TZ5")+Str(nModulo,2)+cFormula)
			RecLock("TZ5",.f.)
			dbDelete()
			TZ5->(MsUnLock())
		Endif

	EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³  fRetCombo³ Autor ³ Denis Hyroshi de Souza³ Data ³07/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se a formula esta correta e faz a gravacao         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fRetCombo(cVar)
Local aArray1 := RetSx3Box(cVar,,,1)
Local nCont,aArray2 := {}

For nCont := 1 To Len(aArray1)
	AADD(aArray2,aArray1[nCont][1])
Next nCont

Return aClone(aArray2)

/*/
############################################################################################
##                                                                                        ##
## FUNÇÕES UTILIZADAS NO DICIONÁRIO DE DADOS / MODELO DE DADOS                            ##
##                                                                                        ##
############################################################################################
/*/

//---------------------------------------------------------------------
/*/{Protheus.doc} NGIND005BX
Função para COMBO BOX (apenas do campo TZE_TIPMET/TZ5_TIPRES.

@author Wagner Sobral de Lacerda
@since 21/09/2012

@return cComboBox
/*/
//---------------------------------------------------------------------
Function NGIND005BX()

	// Variável do Retorno 'COMBO BOX'
	Local cComboBox := STR0086 //"1=Maior que;2=Maior que ou igual a;3=Menor que;4=Menor que ou igual a;5=Dentro do intervalo;6=Fora do intervalo;7=Igual a;8=Diferente de"

Return cComboBox
