#INCLUDE "MNTR585.ch"
#INCLUDE "PROTHEUS.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTR585   ³ Autor ³ Marcos Wagner Junior  ³ Data ³ 01/03/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Relatorio de Acidente por Veiculo - RAV   			      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTR585()

	WNREL      := "MNTR585"
	LIMITE     := 134
	cDESC1     := STR0001 //"O relatório apresentará informações detalhadas do acidente, "
	cDESC2     := STR0002 //"em formulário do tipo ficha."
	cDESC3     := " "
	cSTRING    := "TRH"


	Private NOMEPROG := "MNTR585"
	Private TAMANHO  := "M"
	Private aRETURN  := {STR0003,1,STR0004,1,2,1,"",1} //"Zebrado"###"Administracao"
	Private TITULO   := STR0005 //"Relatório de Acidente por Veículo - RAV"
	Private nTIPO    := 0
	Private nLASTKEY := 0
	Private CABEC1,CABEC2
	Private aVETINR := {}
	Private cPERG := "MNR585"
	Private aPerg :={}
	Private lOper := If(Alltrim(GetMv("MV_NGOPER")) == "S",.T.,.F.)

	SetKey( VK_F9, { | | NGVersao( "MNTR585" , 1 ) } )

	Pergunte(cPERG,.F.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia controle para a funcao SETPRINT                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	WNREL:=SetPrint(cSTRING,WNREL,cPERG,TITULO,cDESC1,cDESC2,cDESC3,.F.,"")
	If nLASTKEY = 27
		Set Filter To
		DbSelectArea("TRH")
		Return
	EndIf
	SetDefault(aReturn,cSTRING)
	RptStatus({|lEND| MNTR585IMP(@lEND,WNREL,TITULO,TAMANHO)},STR0007,STR0008) //"Aguarde..."###"Processando Registros..."
	Dbselectarea("TRH")

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR585IMP
Chamada do Relatório

@author Marcos Wagner Junior
@since 01/03/2007
@param lEnd, Lógico, controle da régua de progressão
@param wnRel, Caractere, Nome do relatório
@param titulo, Caractere, Título do relatório
@param tamanho, Caractere, tamanho do rodapé
@return Nil
/*/
//---------------------------------------------------------------------
Function MNTR585IMP(lEND,WNREL,TITULO,TAMANHO)

	Local nI
	Local cCodTMS
	// [LGPD] Se as funcionalidades, referentes à LGPD, podem ser utilizadas
	Local lLgpd      := FindFunction( 'FWPDCanUse' ) .And. FwPdCanUse( .T. )
	Local aOfusc     := {}
	Local lNome      := .F.
	Local lNomvit    := .F.
	Local lNomtes    := .F.
	Local lRANome    := .F.
	Local lTRHCidpro := .F.
	Local lTRHEndpro := .F.
	Local lTRHTelpro := .F.
	Local lCidvit    := .F.
	Local lEndvit    := .F.
	Local lTelvit    := .F.
	Local lUfvit     := .F.
	Local lDocto     := .F.
	Local lEndtes    := .F.
	Local lTeltes    := .F.
	Local lCidmot    := .F.
	Local lCidpro    := .F.
	Local lCnhmot    := .F.
	Local lCpf       := .F.
	Local lEndmor    := .F.
	Local lEndpro    := .F.
	Local lMotvei    := .F.
	Local lNompr     := .F.
	Local lRg        := .F.
	Local lSspmot    := .F.
	Local lTelpro    := .F.
	Local lUfmot     := .F.
	Local lUfpro     := .F.
	Local lTU4Cidpro := .F.
	Local lTU4Endpro := .F.
	Local lTU4Telpro := .F.
	Local lTu4Nompro := .F.
	Local lTrhNompro := .F.
	Local lTu4Ufpro  := .F.

	Private cRODATXT := ""
	Private nCNTIMPR := 0
	Private li := 80 ,m_pag := 1
	Private cNomeOri
	Private aTotGeral := {}
	Private nAno, nMes
	Private nTotCarga := 0, nTotManut := 0
	Private nTotTer := 0
	Private nTotal := 0
	Private aOperacao := {}
	Private cCodSer := 0

	If lLgpd

		// [LGPD] Caso o usuário não possua acesso ao(s) campo(s), deve-se ofuscá-lo(s)
		aOfusc  := FwProtectedDataUtil():UsrAccessPDField(__CUSERID, {'DA4_NOME', 'TRM_NOMVIT', 'TRN_NOMTES', 'RA_NOME',;
																	  'TRH_CIDPRO', 'TRH_ENDPRO', 'TRH_TELPRO', 'TRM_CIDVIT',;
																	  'TRM_ENDVIT', 'TRM_TELVIT', 'TRM_TELVIT', 'TRM_UFVIT',;
																	  'TRN_DOCTO', 'TRN_ENDTES', 'TRN_TELTES', 'TRO_CIDMOT',;
																	  'TRO_CIDPRO', 'TRO_CNHMOT', 'TRO_CPF', 'TRO_ENDMOR',;
																	  'TRO_ENDPRO', 'TRO_MOTVEI', 'TRO_NOMPR', 'TRO_RG',;
																	  'TRO_SSPMOT', 'TRO_TELPRO', 'TRO_UFMOT', 'TRO_UFPRO',;
																	  'TU4_CIDPRO','TU4_ENDPRO', 'TU4_TELPRO', 'TU4_NOMPRO',;
																	  'TRH_NOMPRO', 'TU4_UFPRO'})
		lNome      := Ascan( aOfusc, { |x|  AllTrim(x) == 'DA4_NOME' } ) == 0
		lRANome    := Ascan( aOfusc, { |x|  AllTrim(x) == 'RA_NOME' } ) == 0
		lTRHCidpro := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRH_CIDPRO' } ) == 0
		lTRHEndpro := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRH_ENDPRO' } ) == 0
		lTRHTelpro := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRH_TELPRO' } ) == 0
		lCidvit    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRM_CIDVIT' } ) == 0
		lEndvit    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRM_ENDVIT' } ) == 0
		lNomvit    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRM_NOMVIT' } ) == 0
		lTelvit    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRM_TELVIT' } ) == 0
		lUfvit     := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRM_UFVIT' } ) == 0
		lDocto     := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRN_DOCTO' } ) == 0
		lEndtes    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRN_ENDTES' } ) == 0
		lNomtes    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRN_NOMTES' } ) == 0
		lTeltes    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRN_TELTES' } ) == 0
		lCidmot    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_CIDMOT' } ) == 0
		lCidpro    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_CIDPRO' } ) == 0
		lCnhmot    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_CNHMOT' } ) == 0
		lCpf       := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_CPF' } ) == 0
		lEndmor    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_ENDMOR' } ) == 0
		lEndpro    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_ENDPRO' } ) == 0
		lMotvei    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_MOTVEI' } ) == 0
		lNompr     := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_NOMPR' } ) == 0
		lRg        := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_RG' } ) == 0
		lSspmot    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_SSPMOT' } ) == 0
		lTelpro    := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_TELPRO' } ) == 0
		lUfmot     := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_UFMOT' } ) == 0
		lUfpro     := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRO_UFPRO' } ) == 0
		lTU4Cidpro := Ascan( aOfusc, { |x|  AllTrim(x) == 'TU4_CIDPRO' } ) == 0
		lTU4Endpro := Ascan( aOfusc, { |x|  AllTrim(x) == 'TU4_ENDPRO' } ) == 0
		lTU4Telpro := Ascan( aOfusc, { |x|  AllTrim(x) == 'TU4_TELPRO' } ) == 0
		lTu4Nompro := Ascan( aOfusc, { |x|  AllTrim(x) == 'TU4_NOMPRO' } ) == 0
		lTrhNompro := Ascan( aOfusc, { |x|  AllTrim(x) == 'TRH_NOMPRO' } ) == 0
		lTu4Ufpro  := Ascan( aOfusc, { |x|  AllTrim(x) == 'TU4_UFPRO' } ) == 0

	EndIf

	nTIPO  := IIf(aReturn[4]==1,15,18)

	CABEC1 := ""
	CABEC2 := ""

	cAliasQry := GetNextAlias()
	cQuery := " SELECT TRH.TRH_CODBEM, TRH.TRH_PLACA, TRH.TRH_NUMSIN, TRH.TRH_DTACID, TRH.TRH_HRACID, TRH.TRH_LOCAL, "
	cQuery += " 		 TRH.TRH_VELOC, TRH.TRH_INTERR, TRH.TRH_TIPACI, TRH.TRH_VIA, TRH.TRH_VIADIR, TRH.TRH_PERIOD, "
	cQuery += " 		 TRH.TRH_NOMPRO, TRH.TRH_TELPRO, TRH.TRH_TIPANI, TRH.TRH_QTDANI, TRH.TRH_NUMBO, TRH.TRH_ENDPRO, "
	cQuery += " 		 TRH.TRH_UFPRO, TRH.TRH_CAUPRE, TRH.TRH_TEREVA, TRH.TRH_DTDIG, TRH.TRH_CIDPRO "
	cQuery += " FROM " + RetSqlName("TRH")+" TRH"
	cQuery += " WHERE TRH.TRH_NUMSIN  = '"+MV_PAR01+"'"
	cQuery += " AND   TRH.D_E_L_E_T_ <> '*' "
	cQuery := ChangeQuery(cQuery)
	dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)

	If Eof()
		MsgInfo(STR0009,STR0010) //"Não existem dados para montar o relatório!"###"ATENÇÃO"
		(cAliasQry)->(dbCloseArea())
		Return .F.
	EndIf

	NgSomaLi(58)
	@ Li,000 	 Psay STR0105+MV_PAR01 //"SINISTRO: "
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,063 	 Psay STR0011 //"Veículo"
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	If lOper
		@ Li,000 	 Psay STR0012 + MNTR585SER() //"Operação: "
		NgSomaLi(58)
	EndIf
	@ Li,000 	 Psay STR0013 + (cAliasQry)->TRH_CODBEM  //"Frota: "
	aBem := NGCOMPEST((cAliasQry)->TRH_CODBEM,'B',.F.,.F.)
	cCarreta := ''
	For nI := 1 to Len(aBem)
		dbSelectArea("ST9")
		dbSetOrder(1)
		dbSeek(xFilial("ST9")+aBem[nI])
		cCodTMS := ST9->T9_CODTMS
		dbSelectArea("DA3")
		dbSetOrder(01)
		If dbSeek(xFilial("DA3")+cCodTMS)
			dbSelectArea("DUT")
			dbSetOrder(01)
			If DbSeek(xFilial("DUT")+DA3->DA3_TIPVEI)
				If DUT->DUT_CATVEI = '3'
					cCarreta := aBem[nI]
				Endif
			Endif
		Endif
	Next
	cPlaca := ''
	If !Empty(cCarreta)
		dbSelectArea("ST9")
		dbSetOrder(01)
		If dbSeek(xFilial("ST9")+cCarreta)
			cPlaca := ST9->T9_PLACA
		Endif
	Endif
	@ Li,050 	 Psay STR0014 + cCarreta //"Carreta: "
	NgSomaLi(58)
	@ Li,000 	 Psay STR0015 + (cAliasQry)->TRH_PLACA //"Placa: "
	@ Li,050 	 Psay STR0014 + cPlaca //"Carreta: "
	///////////////////////////////////////////////////
	///////////////////////////////////////////////////
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,062 	 Psay STR0016 //"Motorista"
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	dbSelectArea("TRV")
	dbSetOrder(01)
	If dbSeek(xFilial("TRV")+(cAliasQry)->TRH_NUMSIN)
		cCodMot  := TRV->TRV_CODMOT
		cOrigem  := TRV->TRV_CIDORI
		cDestino := TRV->TRV_CIDDES
		cLaudo   := NGRETSX3BOX('TRV_LAUEMP',TRV->TRV_LAUEMP)
		cViagem := TRV->TRV_CODVIA
		cCarga := Posicione("SX5", 1, xFilial("SX5")+"DU"+TRV->TRV_TIPCAR, "X5Descri()")
		cEvitar   := TRV->TRV_DESEVI
		dbSelectArea("SRA")
		dbSetOrder(01)
		If dbSeek(xFilial("SRA")+TRV->TRV_RESABE)
			cRespon := IIf(lRANome, FwProtectedDataUtil():ValueAsteriskToAnonymize(SRA->RA_NOME), SRA->RA_NOME)
			dbSelectArea("SQ3")
			dbSetOrder(01)
			If dbSeek(xFilial("SQ3")+SRA->RA_CARGO)
				cCargo := SQ3->Q3_DESCSUM
			Else
				cCargo := ''
			Endif
		Else
			cRespon := ''
			cCargo  := ''
		Endif
		cMatricu  := TRV->TRV_RESABE
		cComLocal := NGRETSX3BOX('TRV_COMLOC',TRV->TRV_COMLOC)
		cParecer1 := TRV->TRV_DESPAR
		cParecer2 := TRV->TRV_DESGER
		dbSelectArea("SRA")
		dbSetOrder(01)
		If dbSeek(xFilial("SRA")+TRV->TRV_MATGER)
			cNomeGer := IIf(lRANome, FwProtectedDataUtil():ValueAsteriskToAnonymize(SRA->RA_NOME), SRA->RA_NOME)
		Else
			cNomeGer := ''
		Endif
	Else
		cCodMot   := ''
		cOrigem   := ''
		cDestino  := ''
		cLaudo    := ''
		cViagem   := ''
		cCarga 	  := ''
		cEvitar   := ''
		cRespon   := ''
		cCargo    := ''
		cMatricu  := ''
		cComLocal := ''
		cParecer1 := ''
		cParecer2 := ''
		cNomeGer  := ''
	Endif
	cMotori := ''
	cMatric := ''
	cTipMot := ''
	If !Empty(cCodMot)
		dbSelectArea("DA4")
		dbSetOrder(01)
		If dbSeek(xFilial("DA4")+cCodMot)
			cMotori :=IIf(lNome, FwProtectedDataUtil():ValueAsteriskToAnonymize(DA4->DA4_NOME), DA4->DA4_NOME)
			cMatric := DA4->DA4_MAT
			cTipMot := NGRETSX3BOX("DA4_TIPMOT",DA4->DA4_TIPMOT)
		Endif
	Endif
	@ Li,000 	 Psay STR0022 + cMotori //"Nome: "
	NgSomaLi(58)
	@ Li,000 	 Psay STR0023 + cMatric //"Matrícula: "
	@ Li,040 	 Psay STR0024 + cCodMot //"Código: "
	@ Li,077 	 Psay STR0025 + cTipMot //"Tp. Motorista: "
	///////////////////////////////////////////////////
	///////////////////////////////////////////////////
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,059 	 Psay STR0026 //"Dados do Acidente"
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,000 	 Psay STR0027 //"Data: "
	@ Li,006 	 Psay STOD((cAliasQry)->TRH_DTACID) Picture '99/99/9999'
	@ Li,020 	 Psay STR0028 + (cAliasQry)->TRH_HRACID //"Hora: "
	@ Li,040 	 Psay STR0029 + (cAliasQry)->TRH_LOCAL //"Local: "
	NgSomaLi(58)
	@ Li,000 	 Psay STR0030 //"Veloc.: "
	If !Empty(AllTrim(Str((cAliasQry)->TRH_VELOC)))
		@ Li,009 	 Psay AllTrim(Str((cAliasQry)->TRH_VELOC)) + ' Km/h'
	Endif
	@ Li,040 	 Psay STR0031 + Substr(cOrigem,1,28) //"Origem: "
	@ Li,077 	 Psay STR0032 + cDestino //"Destino: "
	NgSomaLi(58)
	cDescricao := NGRETSX3BOX('TRH_INTERR',(cAliasQry)->TRH_INTERR)
	@ Li,000 	 Psay STR0033 + cDescricao //"Interrupção Viagem? "
	cSubst  := STR0018 //Não
	cSubVei := ''
	If !Empty((cAliasQry)->TRH_PLACA)
		dbSelectArea("DA3")
		dbSetOrder(03)
		If dbSeek(xFilial("DA3")+(cAliasQry)->TRH_PLACA)
			dbSelectArea("DTR")
			dbSetOrder(01)
			If dbSeek(xFilial("DTR")+DA3->DA3_FILVGA+DA3->DA3_NUMVGA)
				dbSelectArea("DUA")
				dbSetOrder(02)
				dbSeek(xFilial("DUA")+DA3->DA3_FILVGA+DA3->DA3_NUMVGA)
				While !Eof() .AND. xFilial("DUA") == DUA->DUA_FILIAL .AND. DA3->DA3_FILVGA == DUA->DUA_FILOCO .AND.;
				DA3->DA3_NUMVGA == DUA->DUA_VIAGEM
					If DUA->DUA_DATOCO > DTR->DTR_DATINI
						If !Empty(DUA->DUA_NUMVTR)
							cSubst  := STR0017 //Sim
							cSubVei := DUA->DUA_NUMVTR
						Endif
					ElseIf DUA->DUA_DATOCO == DTR->DTR_DATINI .AND. DUA->DUA_HOROCO > DTR->DTR_HORINI
						If !Empty(DUA->DUA_NUMVTR)
							cSubst  := STR0017 //Sim
							cSubVei := DUA->DUA_NUMVTR
						Endif
					Endif
					dbSkip()
				End
			Endif
		Endif
	Endif
	@ Li,040 	 Psay STR0034 + cSubst  //"Substituição Veículo: "
	@ Li,077 	 Psay STR0035 + ' ' + cSubVei //"Nº Veículo:"
	NgSomaLi(58)
	DbSelectArea("TRH")
	DbSetOrder(01)
	DbSeek(xFilial("TRH")+(cAliasQry)->TRH_NUMSIN)
	@ Li,000 	 Psay STR0036 //"Danos do Veículo: "
	NgSomaLi(58)
	If NGCADICBASE("TRH_MMDAN2","A","TRH",.F.)
		cDanos := NGMEMOSYP(TRH->TRH_MMDAN2)
	Else
		cDanos := TRH->TRH_DANOS
	EndIf
	If !Empty(cDanos)
		NGIMPMEMO(cDanos,125,000,,.T.,.F.)
		NgSomaLi(58)
	Endif

	cDescricao := Posicione("SX5", 1, xFilial("SX5")+"AF"+(cAliasQry)->TRH_TIPACI, "X5Descri()")

	@ Li,000 	 Psay STR0037 + cDescricao //"Tipo de Evento: "
	cDescricao := NGRETSX3BOX('TRH_VIA',(cAliasQry)->TRH_VIA)
	@ Li,077 	 Psay STR0041 + cDescricao //"Tipo de Via: "
	NgSomaLi(58)
	cDescricao := NGRETSX3BOX('TRH_VIADIR',(cAliasQry)->TRH_VIADIR)
	@ Li,000 	 Psay STR0044 + AllTrim(cDescricao)  //"Tipo de Mão: "
	cDescricao := NGRETSX3BOX('TRH_PERIOD',(cAliasQry)->TRH_PERIOD)
	@ Li,077 	 Psay STR0047 + AllTrim(cDescricao) //"Período: "
	NgSomaLi(58)
	//////////////////////////////////////////
	//////////////////////////////////////////
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	dbSelectArea("TRM")
	dbSetOrder(01)
	If dbSeek(xFilial("TRM")+(cAliasQry)->TRH_NUMSIN)
		@ Li,000 	 Psay STR0048   //"Vítimas: Sim"
		NgSomaLi(58)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
		While !Eof() .AND. xFilial("TRM") == TRM->TRM_FILIAL .AND. (cAliasQry)->TRH_NUMSIN == TRM->TRM_NUMSIN
			@ Li,000 	 Psay STR0049 + TRM->TRM_SEQVIT //"Sequência: "
			@ Li,018 	 Psay STR0022 + IIf(lNomvit, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRM->TRM_NOMVIT), TRM->TRM_NOMVIT) //"Nome: "
			NgSomaLi(58)
			@ Li,000 	 Psay STR0050 + IIf(lEndvit, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRM->TRM_ENDVIT), TRM->TRM_ENDVIT) //"Endereço: "
			@ Li,060 	 Psay STR0051 + IIf(lCidvit, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRM->TRM_CIDVIT), TRM->TRM_CIDVIT) //"Cidade: "
			@ Li,090 	 Psay STR0052 + IIf(lUfvit, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRM->TRM_UFVIT), TRM->TRM_UFVIT) //"UF: "
			@ Li,100 	 Psay STR0053 //"Telefone: "
			@ Li,110 	 Psay IIf(lTelvit, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRM->TRM_TELVIT), TRM->TRM_TELVIT) Picture PesqPict("TRM","TRM_TELVIT")
			NgSomaLi(58)
			@ Li,000 	 Psay STR0054 + TRM->TRM_LESOES //"Lesões: "
			NgSomaLi(58)
			@ Li,000 	 Psay Replicate("-",134)
			NgSomaLi(58)
			dbSkip()
		End
	Else
		@ Li,000 	 Psay STR0055 //"Vítimas: Não"
		NgSomaLi(58)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
	Endif
	//////////////////////////////////////////
	//////////////////////////////////////////
	@ Li,058 	 Psay STR0056 //"Carga Transportada"
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,000 	 Psay STR0057 //"Carga: "
	dbSelectArea("TRK")
	dbSetOrder(01)
	If dbSeek(xFilial("TRK")+(cAliasQry)->TRH_NUMSIN)
		@ Li,007 	 Psay STR0058 //"Carregado"
		@ Li,040 	 Psay STR0059 + cViagem  //"Nº Viagem: "
		NgSomaLi(58)
		While !Eof()
			@ Li,000 	 Psay STR0060 + TRK->TRK_CODCAR //"Nº Carga: "
			@ Li,020 	 Psay STR0061 //"Val. Carga(Roubo/Avaria): R$ "
			@ Li,049 	 Psay TRK->TRK_VALAVA Picture '@E 999,999,999.99'
			@ Li,070 	 Psay STR0062 + cCarga //"Tipo Mercadoria: "
			NgSomaLi(58)
			dbSkip()
		End
	Else
		@ Li,007 	 Psay STR0063 //"Vazio"
		NgSomaLi(58)
	Endif


	dbSelectArea("TRO")
	dbSetOrder(01)
	If dbSeek(xFilial("TRO")+(cAliasQry)->TRH_NUMSIN)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
		@ Li,060 	 Psay STR0064 //"Veículo Terceiro"
		NgSomaLi(58)
		While !Eof() .AND. xFilial("TRO") == TRO->TRO_FILIAL .AND. (cAliasQry)->TRH_NUMSIN == TRO->TRO_NUMSIN
			@ Li,000 	 Psay Replicate("-",134)
			NgSomaLi(58)
			cDescricao := NGRETSX3BOX('TRH_TEREVA',(cAliasQry)->TRH_TEREVA)
			@ Li,000 	 Psay STR0065 + cDescricao //"Evadiu-se Local: "
			@ Li,030 	 Psay STR0066 + TRO->TRO_DESVEI //"Desc. Veículo: "
			NgSomaLi(58)
			cDescricao := NGRETSX3BOX('TRO_SEGUR',TRO->TRO_SEGUR)
			@ Li,000 	 Psay STR0067 + cDescricao //"Veic. Seg.: "
			@ Li,030 	 Psay STR0068 + AllTrim(TRO->TRO_SEGCOR) //"Corretora/Seguradora: "
			@ Li,090 	 Psay STR0069 + TRO->TRO_APOLIC //"Nº Apólice: "
			NgSomaLi(58)
			@ Li,000 	 Psay STR0070 + IIf(lNompr, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_NOMPR), TRO->TRO_NOMPR) //"Proprietário: "
			@ Li,060 	 Psay STR0071 //"Tel.: "
			@ Li,066 	 Psay IIf(lTelpro, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_TELPRO), TRO->TRO_TELPRO) Picture PesqPict("TRO","TRO_TELPRO")
			NgSomaLi(58)
			@ Li,000 	 Psay STR0072 + IIf(lEndpro, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_ENDPRO), TRO->TRO_ENDPRO) //"End. Prop.: "
			@ Li,060 	 Psay STR0051 + IIf(lCidpro, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_CIDPRO), TRO->TRO_CIDPRO) //"Cidade: "
			@ Li,090 	 Psay STR0052 + IIf(lUfpro, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_UFPRO), TRO->TRO_UFPRO) //"UF: "
			NgSomaLi(58)
			@ Li,000 	 Psay STR0073 + IIf(lMotvei, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_MOTVEI), TRO->TRO_MOTVEI) //"Motorista: "
			@ Li,060 	 Psay STR0074 + IIf(lCnhmot, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_CNHMOT), TRO->TRO_CNHMOT) //"CNH: "
			NgSomaLi(58)
			@ Li,000 	 Psay STR0075 + IIf(lEndmor, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_ENDMOR), TRO->TRO_ENDMOR) //"End. Mot.: "
			@ Li,060 	 Psay STR0051 + IIf(lCidmot, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_CIDMOT), TRO->TRO_CIDMOT) //"Cidade: "
			@ Li,090 	 Psay STR0052 + IIf(lUfmot, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_UFMOT), TRO->TRO_UFMOT) //"UF: "
			NgSomaLi(58)
			@ Li,000 	 Psay STR0076 + IIf(lRg, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_RG), TRO->TRO_RG) //"RG: "
			@ Li,060 	 Psay STR0077 + IIf(lSspmot, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_SSPMOT), TRO->TRO_SSPMOT) //"SSP: "
			@ Li,090 	 Psay STR0078 + IIf(lCpf, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRO->TRO_CPF), TRO->TRO_CPF) //"CPF: "
			NgSomaLi(58)
			@ Li,000 	 Psay STR0079 //"Descrição Danos Sofridos: "
			NgSomaLi(58)
			If !Empty(TRO->TRO_DESC)
				NGIMPMEMO(TRO->TRO_DESC,125,000,,.T.,.F.)
			Endif
			NgSomaLi(58)
			dbSkip()
		End
	End
	/////////////////////////////////
	NgSomaLi(58)
	@ Li,060 	 Psay STR0080 //"Atropelamento de Animais"
	NgSomaLi(58)
	If AliasInDic("TU4")
		dbSelectArea("TU4")
		dbSetOrder(1)
		dbSeek( xFilial("TU4")+TRH->TRH_NUMSIN )
		While !Eof() .And. xFilial("TU4") == TU4->TU4_FILIAL .And. TU4->TU4_NUMSIN == TRH->TRH_NUMSIN

			@ Li,000 	 Psay Replicate("-",134)
			@ Li,000 	 Psay Replicate("-",134)
			NgSomaLi(58)
			@ Li,000 	 Psay STR0070 + IIf(lTu4Nompro, FwProtectedDataUtil():ValueAsteriskToAnonymize(TU4->TU4_NOMPRO), TU4->TU4_NOMPRO) //"Proprietário: "
			@ Li,060 	 Psay STR0071 //"Tel.: "
			@ Li,066 	 Psay IIf(lTU4Telpro, FwProtectedDataUtil():ValueAsteriskToAnonymize(TU4->TU4_TELPRO), TU4->TU4_TELPRO) Picture PesqPict("TU4","TU4_TELPRO")
			NgSomaLi(58)
			@ Li,000 	 Psay STR0081 + TU4->TU4_TIPANI //"Tipo Animal: "
			@ Li,060 	 Psay STR0082 + AllTrim(Str(TU4->TU4_QTDANI)) //"Qtde. Animais: "
			NgSomaLi(58)
			@ Li,000 	 Psay STR0050 + IIf(lTU4Endpro, FwProtectedDataUtil():ValueAsteriskToAnonymize(TU4->TU4_ENDPRO), TU4->TU4_ENDPRO) //"Endereço: "
			@ Li,060 	 Psay STR0051 + IIf(lTU4Cidpro, FwProtectedDataUtil():ValueAsteriskToAnonymize(TU4->TU4_CIDPRO), TU4->TU4_CIDPRO) //"Cidade: "
			@ Li,090 	 Psay STR0052 + IIf(lTu4Ufpro, FwProtectedDataUtil():ValueAsteriskToAnonymize(TU4->TU4_UFPRO), TU4->TU4_UFPRO) //"UF: "
			NgSomaLi(58)
			dbSelectArea("TU4")
			dbSkip()
		EndDo
	Else
		@ Li,000 	 Psay Replicate("-",134)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
		@ Li,000 	 Psay STR0070 + IIf(lTrhNompro, FwProtectedDataUtil():ValueAsteriskToAnonymize((cAliasQry)->TRH_NOMPRO), (cAliasQry)->TRH_NOMPRO) //"Proprietário: "
		@ Li,060 	 Psay STR0071 //"Tel.: "
		@ Li,066 	 Psay IIf(lTRHTelpro, FwProtectedDataUtil():ValueAsteriskToAnonymize((cAliasQry)->TRH_TELPRO), (cAliasQry)->TRH_TELPRO) Picture PesqPict("TRH","TRH_TELPRO")
		NgSomaLi(58)
		@ Li,000 	 Psay STR0081 + (cAliasQry)->TRH_TIPANI //"Tipo Animal: "
		@ Li,060 	 Psay STR0082 + AllTrim(Str((cAliasQry)->TRH_QTDANI)) //"Qtde. Animais: "
		NgSomaLi(58)
		@ Li,000 	 Psay STR0050 + IIf(lTRHEndpro, FwProtectedDataUtil():ValueAsteriskToAnonymize((cAliasQry)->TRH_ENDPRO), (cAliasQry)->TRH_ENDPRO) //"Endereço: "
		@ Li,060 	 Psay STR0051 + IIf(lTRHCidpro, FwProtectedDataUtil():ValueAsteriskToAnonymize((cAliasQry)->TRH_CIDPRO), (cAliasQry)->TRH_CIDPRO) //"Cidade: "
		@ Li,090 	 Psay STR0052 + (cAliasQry)->TRH_UFPRO //"UF: "
	EndIf

	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,061 	 Psay STR0083 //"Ocorrências"
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	If !Empty((cAliasQry)->TRH_NUMBO)
		cDescricao := STR0017 //"Sim"
	Else
		cDescricao := STR0018 //"Não"
	Endif
	@ Li,000 	 Psay STR0084 + cDescricao //"Ocorrência Policial: "
	@ Li,040 	 Psay STR0085 + (cAliasQry)->TRH_NUMBO //"Nº Boletim Ocorrência: "
	@ Li,090 	 Psay STR0086 + cLaudo //"Laudo Pericial? "
	/////////////////////////////////
	/////////////////////////////////
	NgSomaLi(58)
	dbSelectArea("TRN")
	dbSetOrder(01)
	If dbSeek(xFilial("TRN")+(cAliasQry)->TRH_NUMSIN)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
		@ Li,062 	 Psay STR0087 //"Testemunhas"
		NgSomaLi(58)
		While !Eof()
			@ Li,000 	 Psay Replicate("-",134)
			NgSomaLi(58)
			@ Li,000 	 Psay STR0022 + IIf(lNomtes, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRN->TRN_NOMTES), TRN->TRN_NOMTES) //"Nome: "
			NgSomaLi(58)
			@ Li,000 	 Psay STR0050 + IIf(lEndtes, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRN->TRN_ENDTES), TRN->TRN_ENDTES) //"Endereço: "
			@ Li,060 	 Psay STR0053 //"Telefone: "
			@ Li,070 	 Psay IIf(lTeltes, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRN->TRN_TELTES), TRN->TRN_TELTES) Picture PesqPict("TRN","TRN_TELTES")
			NgSomaLi(58)
			cDescricao := NGRETSX3BOX('TRN_TIPDOC',TRN->TRN_TIPDOC)
			@ Li,000 	 Psay STR0091 + cDescricao //"Tp.Doc.: "
			@ Li,060 	 Psay STR0092 + IIf(lDocto, FwProtectedDataUtil():ValueAsteriskToAnonymize(TRN->TRN_DOCTO), TRN->TRN_DOCTO) //"RG/CPF: "
			NgSomaLi(58)
			dbSkip()
		End
	Endif
	/////////////////////////////////////
	/////////////////////////////////////
	dbSelectArea("TRH")
	dbSetOrder(01)
	dbSeek(xFilial("TRH")+(cAliasQry)->TRH_NUMSIN)
	cDescricao := If(NGCADICBASE('TRH_MMDAN2','A','TRH',.F.),;
	NGMEMOSYP(TRH->TRH_MMSYP),TRH->TRH_DESCRI)
	If !Empty(cDescricao)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
		@ Li,057 	 Psay STR0093 //"Descrição dos Fatos"
		NgSomaLi(58)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
		NGIMPMEMO(cDescricao,125,000,,.T.,.F.)
	Endif
	/////////////////////////////////////
	/////////////////////////////////////
	If !Empty((cAliasQry)->TRH_CAUPRE)
		cDescricao := Posicione("SX5", 1, xFilial("SX5")+"CX"+(cAliasQry)->TRH_CAUPRE, "X5Descri()")
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
		@ Li,000 	 Psay STR0094 + cDescricao //"Causa Preliminar do Acidente: "
		NgSomaLi(58)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
	Endif
	/////////////////////////////////////
	/////////////////////////////////////
	If !Empty(cEvitar)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
		@ Li,000 	 Psay STR0095 + cEvitar //"Como poderia ser evitado: "
		NgSomaLi(58)
		@ Li,000 	 Psay Replicate("-",134)
		NgSomaLi(58)
	Endif
	/////////////////////////////////////
	/////////////////////////////////////
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,038 	 Psay STR0096 //"Responsável Pela Abertura do RAV / Atendimento do Acidente"
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,000 	 Psay STR0022 + cRespon	 //"Nome: "
	@ Li,060 	 Psay STR0097 + cCargo //"Cargo: "
	@ Li,100 	 Psay STR0023 + cMatricu		 //"Matrícula: "
	NgSomaLi(58)
	@ Li,000 	 Psay STR0098 //"Data Abertura: "
	@ Li,015 	 Psay STOD((cAliasQry)->TRH_DTDIG) Picture '99/99/9999'
	@ Li,050 	 Psay STR0099 + cComLocal //"Compareceu ao Local? "
	@ Li,080 	 Psay STR0100  //"Visto:"
	NgSomaLi(58)
	/////////////////////////////////////
	/////////////////////////////////////
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,057 	 Psay STR0101 //"Anexo I - Pareceres"
	NgSomaLi(58)
	@ Li,000 	 Psay Replicate("-",134)
	NgSomaLi(58)
	@ Li,000 	 Psay STR0102 + cParecer1 //"Manutenção: "
	NgSomaLi(58)
	NgSomaLi(58)
	NgSomaLi(58)
	NgSomaLi(58)
	@ Li,060 	 Psay STR0022 + cRespon //"Nome: "
	NgSomaLi(58)
	@ Li,060 	 Psay STR0103 //"Assinatura: "
	@ Li,100 	 Psay STR0027 //"Data: "
	NgSomaLi(58)
	@ Li,000 	 Psay STR0104 + cParecer2 //"Gerência: "
	NgSomaLi(58)
	NgSomaLi(58)
	NgSomaLi(58)
	NgSomaLi(58)
	@ Li,060 	 Psay STR0022 + cNomeGer //"Nome: "
	NgSomaLi(58)
	@ Li,060 	 Psay STR0103 //"Assinatura: "
	@ Li,100 	 Psay STR0027 //"Data: "
	/////////////////////////////////////
	/////////////////////////////////////

	RODA(nCNTIMPR,cRODATXT,TAMANHO)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Devolve a condicao original do arquivo principal             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RetIndex('TRH')
	Set Filter To
	Set Device To Screen
	If aReturn[5] == 1
		Set Printer To
		dbCommitAll()
		OurSpool(WNREL)
	EndIf
	MS_FLUSH()

	(cAliasQry)->(dbCloseArea())

Return Nil
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    |MNTR585SER| Autor ³ Marcos Wagner Junior  ³ Data ³ 01/03/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Retorna a Descricao do Servico                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTR585                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTR585SER()
	Private cServico := ''

	dbSelectArea('ST9')
	dbSetOrder(01)
	If dbSeek(xFilial('ST9')+(cAliasQry)->TRH_CODBEM)
		cServico  := SubStr(ST9->T9_CCUSTO,11,3)
		dbSelectArea("TSZ")
		dbSetOrder(01)
		If dbSeek(xFilial("TSZ")+cServico)
			cServico := TSZ->TSZ_DESSER
		Else
			cServico := ''
		Endif
	Endif

Return cServico