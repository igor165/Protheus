#INCLUDE "sgaa190.ch"
#include "Protheus.ch"

#DEFINE _nVERSAO 1 //Versao do fonte
/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥ SGAA190  ≥ Autor ≥ Thiago Olis Machado   ≥ Data ≥12/01/2005≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Programa para transferencia de residuos.                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Tabelas   ≥TBA - Transferencia                                         ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Function SGAA190()
//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Armazena variaveis p/ devolucao (NGRIGHTCLICK)                        ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
Local aNGBEGINPRM := NGBEGINPRM(_nVERSAO)

Private aRotina := MenuDef()
Private cCadastro := OemtoAnsi(STR0006)//"Transferencia de Residuos"
Private aChkDel := {}, bNgGrava := { || Sg190Grava() }, aVARNAO := If(AllTrim(GetMv("MV_NGSGAES")) == "S",{'TBA_CODPRO','TBA_DESPRO'},{})
Private lWhen := .f.

aCHOICE  := NGCAMPNSX3("TBA",aVarNao)

DbSelectArea("TBA")
DbSetOrder(1)
mBrowse( 6, 1,22,75,"TBA")

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Devolve variaveis armazenadas (NGRIGHTCLICK)                          ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
NGRETURNPRM(aNGBEGINPRM)

Return .t.
//------------------------------------------

Function Sga190Rec()
Local aOldArea := GetArea() // Guarda variaveis de alias e indice
Local lLoja   := NGCADICBASE("TBA_LOJA","A","TBA",.F.)

If TB7->(DbSeek(xFilial("TB7")+M->TBA_CODRES))
	If TB7->TB7_TIPO == '3'
		lWhen := .T.
	EndIf
EndIf

If !Empty(M->TBA_CODRES)
	If !ExistCpo("TAX",M->TBA_CODRES)
		Return .F.
	EndIf

	If GetNewPar("MV_NGSGAES") == "S" .And. GetNewPar("MV_RASTRO") == "S"
		If !Rastro(M->TBA_CODRES)
			Help(" ",1,"NAORASTRO")
			Return .F.
		EndIf
	Endif
EndIf

//Limpa campo Fornecedor
If NGCADICBASE("TBA_CODREC","A","TBA",.F.)
	M->TBA_CODREC := Space(Len(M->TBA_CODREC))
Else
	M->TBA_FORNEC := Space(Len(M->TBA_FORNEC))
Endif

If !Empty(M->TBA_CODRES)
	M->TBA_NUMLOT := CriaVar("TBA_NUMLOT")
	M->TBA_LOTECT := CriaVar("TBA_LOTECT")
EndIf

If lLoja
	M->TBA_LOJA := Space(Len(M->TBA_LOJA))
EndIf
M->TBA_DESFOR := Space(Len(M->TBA_DESFOR))

RestArea(aOldArea)
Return .t.

//------------------------------------------

Function Sg190Lic()
Local aOldArea := GetArea() // Guarda variaveis de alias e indice
Local lAchou := .F., lRet := .T.
Local lCodigo := NGCADICBASE("TBA_CODREC","A","TBA",.F.)
Local lLoja   := NGCADICBASE("TBA_LOJA","A","TBA",.F.)
Local cMsg := ""

If !Empty(M->TBA_CODRES)
	dbSelectArea("TC4")
	dbSetOrder(1)
	If lCodigo
		If dbSeek(xFilial("TC4")+M->TBA_CODREC+M->TBA_CODRES)
			lAchou := .T.
		Endif
	Else
		If dbSeek(xFilial("TC4")+M->TBA_FORNEC + If( lLoja , M->TBA_LOJA , "" ))
			While !Eof() .And. TC4->TC4_FILIAL == xFilial("TC4") .And. TC4->TC4_FORNEC == M->TBA_FORNEC
				If TC4->TC4_CODPRO == M->TBA_CODRES
					lAchou := .T.
				EndIf
				TC4->(dbSkip())
			End
		EndIf
	Endif

	If !lAchou
		If lCodigo
			cMsg := "O Receptor "+AllTrim(M->TBA_CODREC)+STR0008+" "+STR0009+;//" nao possui licenciamento para"##"o produto "
						AllTrim(M->TBA_CODRES)+"."+CHR(13)+STR0010
		Else
			cMsg := STR0007+AllTrim(M->TBA_FORNEC)+ If( lLoja , " Loja " +AllTrim(M->TBA_LOJA) , "" ) +STR0008+" "+STR0009+;//"O Fornecedor "##" nao possui licenciamento para"##"o produto "
						AllTrim(M->TBA_CODRES)+"."+CHR(13)+STR0010//"Deseja enviar mesmo assim ?"
		Endif
		If !MsgYesNo(cMsg,STR0011)  //###"ATENCAO"
			lRet := .F.
		EndIf
	EndIf
EndIf

If lRet .and. lCodigo
	M->TBA_DESFOR := SG280INFD(M->TBA_CODREC,"NOME")
Endif

RestArea(aOldArea)
Return lRet

//------------------------------------------

Function Sg190Est()
Local aOldArea := GetArea() // Guarda variaveis de alias e indice
Local lRet := .T.
Local lEstNeg := If(SuperGetMV("MV_ESTNEG")=="S",.T.,.F.)
Local cCodDes := ""

If M->TBA_QTDSAI > 0
	If AllTrim(GetMv("MV_NGSGAES")) == "S"
		If !Empty(M->TBA_CODDES)
			cCodDes := NGSEEK("TB2",M->TBA_CODDES,1,"TB2->TB2_CODALM")
		Endif
		If Empty(cCodDes)
			cCodDes := NGSEEK("SB1",M->TBA_CODRES,1,"SB1->B1_LOCPAD")
		Endif
		dbSelectArea("SB2")
		dbSetOrder(1)
		If !DbSeek(xFilial("SB2")+M->TBA_CODRES+cCodDes)
			MsgStop(STR0015,STR0016)  //"N„o existem Saldos FÌsicos e Financeiros para este produto."##"AtenÁ„o"
			lRet := .F.
		Else
			If !lEstNeg
				nEstoque := SB2->B2_QATU

				//Ao alterar, a requisicao eh compensada por uma devolucao
				If nOpcao == 4
					nEstoque += TBA->TBA_QTDSAI
				EndIf

				If nEstoque < M->TBA_QTDSAI
					MsgStop(STR0012+"("+AllTrim( Str( M->TBA_QTDSAI ) )+")"+STR0013+CHR(13);  //"A quantidade que esta sendo enviada "###" nao pode ser maior que a quantidade"
					+STR0014+"("+AllTrim( Str( nEstoque ) )+")." )  //"disponivel no estoque para transferÍncia  "
					lRet := .F.
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

RestArea(aOldArea)
Return lRet

//------------------------------------------

Function Sg190Grava()
Local aOldArea := GetArea() // Guarda variaveis de alias e indice
Local lCodigo := NGCADICBASE("TBA_CODREC","A","TBA",.F.)
Local cFornec := ""
Local lRet := .T.

If Inclui .and. !Sg190Est()
	lRet := .F.
Endif
If lRet .And. nOpcao == 3
	dbSelectArea("TBA")
	dbSetOrder(01)
	If dbSeek(xFilial("TBA")+M->TBA_CODRES+DTOS(M->TBA_DTTRAN)+M->TBA_HRTRAN)
		MsgStop(STR0025+CHR(13)+;  //"N„o È possÌvel incluir um novo registro com a mesma chave:"
				  AllTrim(NGRETTITULO("TBA_CODRES"))+": "+AllTrim(M->TBA_CODRES)+", "+;
				  AllTrim(NGRETTITULO("TBA_DTTRAN"))+": "+AllTrim(DTOC(M->TBA_DTTRAN))+", "+;
				  AllTrim(NGRETTITULO("TBA_HRTRAN"))+": "+AllTrim(M->TBA_HRTRAN)+". " ,STR0016)  //##"AtenÁ„o"
		lRet := .F.
	EndIf
EndIf

If lRet .and. M->TBA_QTDSAI <= 0
	MsgStop(STR0026,STR0016)  //"Quantidade de saÌda para a transferÍncia È inv·lida."##"AtenÁ„o"
	lRet := .F.
EndIf

If lRet .And. AllTrim(GetMv("MV_NGSGAES")) = "S"
	cCodDes := NGSEEK("TB2",M->TBA_CODDES,1,"TB2->TB2_CODALM")
	If nOpcao == 4
		cDocumSD3 := ""
		dbSelectArea("SD3")
		dbSetOrder(04)
		If dbSeek(xFilial("SD3")+TBA->TBA_NUMSEQ+"E0")
			cDocumSD3 := SD3->D3_DOC
		EndIf

		dbSelectArea("SB1")
		dbSetOrder(1)
		dbSeek(xFilial("SB1")+TBA->TBA_CODRES)
		cCodDes := If(Empty(cCodDes),SB1->B1_LOCPAD,cCodDes)
		aNumSeqD := SgMovEstoque('DE0',cCodDes,TBA->TBA_CODRES,"TBA->TBA_NUMSEQ",SB1->B1_UM,TBA->TBA_QTDSAI,TBA->TBA_DTTRAN,cDocumSD3,TBA->TBA_LOTECT,TBA->TBA_NUMLOT,TBA->TBA_DTVALI)

		If aNumSeqD[2]
			lRet := .F.
		EndIf

		If lRet .And. M->TBA_QTDSAI > 0
			cDocumSD3 := NextNumero("SD3",2,"D3_DOC",.T.)
			aNumSeqD := SgMovEstoque('RE0',cCodDes,M->TBA_CODRES,"TBA->TBA_NUMSEQ",SB1->B1_UM,M->TBA_QTDSAI,M->TBA_DTTRAN,cDocumSD3,M->TBA_LOTECT,M->TBA_NUMLOT,M->TBA_DTVALI)
	   	DbSelectArea("TBA")
			M->TBA_NUMSEQ := aNumSeqD[1]
		EndIf

	ElseIf nOpcao == 3

		If M->TBA_QTDSAI > 0
			dbSelectArea("SB1")
			dbSetOrder(1)
			dbSeek(xFilial("SB1")+M->TBA_CODRES)
			cCodDes := If(Empty(cCodDes),SB1->B1_LOCPAD,cCodDes)
			cDocumSD3 := NextNumero("SD3",2,"D3_DOC",.T.)
			aNumSeqD := SgMovEstoque('RE0',cCodDes,M->TBA_CODRES,"TBA->TBA_NUMSEQ",SB1->B1_UM,M->TBA_QTDSAI,M->TBA_DTTRAN,cDocumSD3,M->TBA_LOTECT,M->TBA_NUMLOT,M->TBA_DTVALI)

			If aNumSeqD[2]
				lRet := .F.
			Else
		   	DbSelectArea("TBA")
				M->TBA_NUMSEQ := aNumSeqD[1]
			EndIf
		EndIf

	ElseIf nOpcao == 5

		cDocumSD3 := ""
		dbSelectArea("SD3")
		dbSetOrder(04)
		If dbSeek(xFilial("SD3")+TBA->TBA_NUMSEQ+"E0")
			cDocumSD3 := SD3->D3_DOC
		EndIf

		dbSelectArea("SB1")
		dbSetOrder(1)
		dbSeek(xFilial("SB1")+TBA->TBA_CODRES)
		cCodDes := If(Empty(cCodDes),SB1->B1_LOCPAD,cCodDes)
		aNumSeqD := SgMovEstoque('DE0',cCodDes,TBA->TBA_CODRES,"TBA->TBA_NUMSEQ",SB1->B1_UM,TBA->TBA_QTDSAI,TBA->TBA_DTTRAN,cDocumSD3,TBA->TBA_LOTECT,TBA->TBA_NUMLOT,TBA->TBA_DTVALI)

		If aNumSeqD[2]
			lRet := .F.
		EndIf

	EndIf
EndIf

If lRet
	If lCodigo
		cFornec := M->TBA_CODREC
	Else
		cFornec := M->TBA_FORNEC
	Endif
	dbSelectArea("TCP")
	dbSetOrder(2)
	If dbSeek(xFilial("TCP")+M->TBA_CODRES+cFornec) .AND. !Empty(cFornec)
		If nOpcao == 3 .Or. nOpcao == 4
			dbSelectArea("TA0")
			dbSetOrder(1)
			If dbSeek(xFilial("TA0")+TCP->TCP_CODRES)
				If TA0->TA0_DTVENC <= dDatabase
					If !MsgYesNo(STR0017,STR0016)  //"A validade da licenÁa ambiental para este fornecedor est· esgotada, deseja enviar mesmo assim?"##"AtenÁ„o!"
						lRet := .F.
					EndIf
				EndIf
			Endif

			If lRet .And. TCP->TCP_TOTAL+M->TBA_QTDSAI > TCP->TCP_QUANTI
				If !MsgYesNo(STR0018,STR0016)  //"O saldo de expediÁ„o deste resÌduo para este fornecedor est· esgotado, deseja enviar mesmo assim?"##"AtenÁ„o!"
					lRet := .F.
				EndIf
			EndIf

			If lRet .And. nOpcao == 3
				Reclock("TCP",.F.)
				TCP->TCP_TOTAL += M->TBA_QTDSAI
				MsUnlock("TCP")
			EndIf

		ElseIf nOpcao == 5

			Reclock("TCP",.F.)
			TCP->TCP_TOTAL -= M->TBA_QTDSAI
			MsUnlock("TCP")

			dbSelectArea("TCQ")
			dbSetOrder(1)
			If dbSeek(xFilial("TCQ")+TCP->TCP_CODEXP+TCP->TCP_CODRES+DTOS(M->TBA_DTTRAN)+M->TBA_HRTRAN)
				Reclock("TCQ",.F.)
				dbDelete()
				MsUnlock("TCQ")
			EndIf
		EndIf
	ElseIf nOpcao <> 5
		If !MsgYesNo(STR0019,STR0016)  //"N„o foi encontrado controle de expediÁ„o deste resÌduo para este fornecedor, deseja enviar mesmo assim?"##"AtenÁ„o!"
			lRet := .F.
		EndIf
	EndIf
EndIf

RestArea(aOldArea)
Return lRet

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥ MenuDef  ≥ Autor ≥ Rafael Diogo Richter  ≥ Data ≥29/11/2006≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Utilizacao de Menu Funcional.                               ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ SigaSGA                                                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Retorno   ≥Array com opcoes da rotina.                                 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥Parametros do array a Rotina:                               ≥±±
±±≥          ≥1. Nome a aparecer no cabecalho                             ≥±±
±±≥          ≥2. Nome da Rotina associada                                 ≥±±
±±≥          ≥3. Reservado                                                ≥±±
±±≥          ≥4. Tipo de TransaáÑo a ser efetuada:                        ≥±±
±±≥          ≥	  1 - Pesquisa e Posiciona em um Banco de Dados           ≥±±
±±≥          ≥    2 - Simplesmente Mostra os Campos                       ≥±±
±±≥          ≥    3 - Inclui registros no Bancos de Dados                 ≥±±
±±≥          ≥    4 - Altera o registro corrente                          ≥±±
±±≥          ≥    5 - Remove o registro corrente do Banco de Dados        ≥±±
±±≥          ≥5. Nivel de acesso                                          ≥±±
±±≥          ≥6. Habilita Menu Funcional                                  ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥         ATUALIZACOES SOFRIDAS DESDE A CONSTRUÄAO INICIAL.             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Programador ≥ Data   ≥ F.O  ≥  Motivo da Alteracao                     ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥            ≥        ≥      ≥                                          ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Static Function MenuDef()
Local aRotina :=	{ 	{ STR0001 , "AxPesqui"  , 0 , 1},; //"Pesquisar"
	                    { STR0002 , "SG190Inc"  , 0 , 2},;  //"Visualizar"
	                    { STR0003 , "SG190Inc"  , 0 , 3},;  //"Incluir"
	                    { STR0004 , "SG190Inc"  , 0 , 4},;  //"Alterar"
	                    { STR0005 , "SG190Inc"  , 0 , 5, 3}}//"Excluir"

Return aRotina

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥ SG190EXC ≥ Autor ≥ Rafael Diogo Richter  ≥ Data ≥14/10/2008≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Chama funcao de exclusao do registro.                       ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ SGAA190                                                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥         Atualizacoes Sofridas Desde a Construcao Inicial.             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Programador ≥ Data   ≥ F.O  ≥  Motivo da Alteracao                     ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥            ≥        ≥      ≥                                          ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Function SG190Inc(cAlias,nReg,nOpcx)
Private nOpcao := nOpcx
Private cForPad := Space( Len( TBA->TBA_FORNEC ) )

If nOpcx <> 3
	cForPad := TBA->TBA_FORNEC
EndIf

bKeyF8 := SetKey(VK_F8 ,{||SG190F8()})

NgCad01(cAlias,nReg,nOpcx)

SETKEY(VK_F8,bKeyF8)

Return .T.

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥ Sg190VRa  ≥ Autor ≥ Rafael Diogo Richter ≥ Data ≥29/05/2009≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Funcao para validar os campos de Numero do Lote             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Tabelas   ≥                                                            ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ SigaSGA                                                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥         ATUALIZACOES SOFRIDAS DESDE A CONSTRUÄAO INICIAL.             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Programador ≥ Data   ≥ F.O  ≥  Motivo da Alteracao                     ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥            ≥        ≥      ≥                                          ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Function Sg190VRa()
Local cVar:=ReadVar()
Local cCODIGO  := M->TBA_CODRES
Local cLOCALT := ""
Local cLOTCTL  := M->TBA_LOTECT
Local cNUMLOT  := M->TBA_NUMLOT
Local lVRastro := GetNewPar("MV_RASTRO") == "S" .And. GetNewPar("MV_NGSGAES") == "S"

dbSelectArea("TB2")
dbSetOrder(1)
If dbSeek(xFilial("TB2")+M->TBA_CODDES)
	cLOCALT  := TB2->TB2_CODALM
EndIf

If !Empty(cCODIGO)
	If cVar == "M->TBA_LOTECT"   //Campo que esta sendo digitado

		If lVRastro
	   	//Valida controle por sub-lote
			If Rastro(cCODIGO,"S")
				If !Empty(cNUMLOT)
					DbSelectArea("SB8")
					DbSetOrder(02)
					If DbSeek(xFilial("SB8")+cNUMLOT) .And. cCODIGO+cLOCALT == SB8->B8_PRODUTO+SB8->B8_LOCAL
						If cLOTCTL != SB8->B8_LOTECTL
							Help(" ",1,"A240LOTCTL")
							Return .F.
						Else
							If NGCONDTSB8(SB8->B8_DTVALID)
								M->TBA_DTVALI := SB8->B8_DTVALID
							Else
								Return .f.
							EndIf
						EndIf
					EndIf
				EndIf
			Else
				//Valida controle por lote
				If !Empty(cLOTCTL)
					DbSelectArea("SB8")
					DbSetOrder(03)
					If !(DbSeek(xFilial()+cCODIGO+cLOCALT+cLOTCTL))
						Help(" ",1,"NGATENCAO",,STR0020+;  //"Numero do lote n„o corresponde ao produto que foi "
								STR0021,3,1)  //" informado. Digite um lote correspondente."
						Return .F.
					Else
			 			If NGCONDTSB8(SB8->B8_DTVALID)
				   			M->TBA_DTVALI := SB8->B8_DTVALID
						Else
							Return .f.
						EndIf
					EndIf
				EndIf
			EndIf
		Endif

	ElseIf cVar == "M->TBA_NUMLOT"

		If lVRastro
   		If Rastro(cCODIGO,"S")
      		If !Empty(cNUMLOT)
         		DbSelectArea("SB8")
	 	   		DbSetOrder(2)
		   		If DbSeek(xFilial("SB8")+cNUMLOT) .And. cCODIGO+cLOCALT == SB8->B8_PRODUTO+SB8->B8_LOCAL
						If NGCONDTSB8(SB8->B8_DTVALID)
							M->TBA_LOTECT := SB8->B8_LOTECTL
							M->TBA_DTVALI := SB8->B8_DTVALID
						Else
							Return .f.
						EndIf
	      		Else
	        		Help(" ",1,"NGATENCAO",,STR0022+;  //"Numero do sub-lote n„o corresponde ao produto que foi "
			     		STR0023,3,1)  //" informado. Digite um sub-lote e local correspondente."
            		Return .F.
         		EndIf
      		EndIf
  		 	Else
      		M->TBA_NUMLOT := CriaVar("TBA_NUMLOT")
   		EndIf
		EndIf

	Endif

EndIf

Return .T.

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥ Sg190WRa  ≥ Autor ≥ Rafael Diogo Richter ≥ Data ≥29/05/2009≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Funcao para validar o When dos campos de Numero do Lote     ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Tabelas   ≥                                                            ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ SigaSGA                                                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥         ATUALIZACOES SOFRIDAS DESDE A CONSTRUÄAO INICIAL.             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Programador ≥ Data   ≥ F.O  ≥  Motivo da Alteracao                     ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥            ≥        ≥      ≥                                          ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Function Sg190WRa()

Return If(Alltrim(GetMv("MV_RASTRO"))="S" .And. Alltrim(GetMv("MV_NGSGAES"))="S",.T.,.F.)


/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥SG190F8   ≥ Autor ≥ Felipe Nathan Welter  ≥ Data ≥ 20/01/10 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Carrega consulta F8 com transportadores para residuo selec. ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Uso       ≥ SGAA190                                                    ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Static Function SG190F8()
Local nPos
Local lRet := .t.
Local lCodigo := NGCADICBASE("TBA_CODREC","A","TBA",.F.)
Local cCampo  := If(lCodigo,"M->TBA_CODREC","M->TBA_FORNEC")
Local aRet := {}
Local cTitulo := STR0024 //"Fornecedores por ResÌduo"
Local bF8  := SetKey(VK_F8)

//Executa Valid do campo posicionado
If ReadVar() != cCampo
	nPos := aScan(oDlg:aControls,{|x| x:cREADVAR = ReadVar()})
	If(nPos > 0)
		lRet := EVAL(oDlg:aControls[nPos]:bValid)
		lRet := If(lRet == Nil,.T.,lRet)
	EndIf
EndIf

//Encontra posicao do controle referente ao campo TBA_FORNEC
nPos := aScan(oDlg:aControls,{|x| x:cREADVAR = cCampo})
If lRet .And. (nPos > 0)
	//Move o foco para o TBA_FORNEC
	oDlg:aControls[nPos]:SetFocus()
	//Monta consulta TB5RES
	lCONDP := CONPAD1(NIL,NIL,NIL,"TB5RES",NIL,NIL,.F.)

	If lCONDP
		If lCodigo
			M->TBA_CODREC := TB5->TB5_CODIGO
		Else
			M->TBA_FORNEC := TB5->TB5_FORNEC
		Endif
	EndIf

EndIf

SetKey(VK_F8, bF8)
Return

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥SG190TC4  ≥ Autor ≥ Felipe Nathan Welter  ≥ Data ≥ 20/01/10 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Filtro da consulta TB5RES                                   ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Uso       ≥SGAA190 - SXB TB5RES                                        ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Function SG190TC4()
Local aArea := GetArea()
Local lCodigo := NGCADICBASE("TBA_CODREC","A","TBA",.F.)
Local cCodRes := If(IsInCallStack("SG190Inc"),M->TBA_CODRES,If( IsInCallStack( "SGAA750" ),M->TF0_CODRES,M->TDI_CODRES ))
Local lRet := .F.

dbSelectArea("TC4")
dbSetOrder(01)
If lCodigo
	If dbSeek(xFilial("TC4")+TB5->TB5_CODIGO+cCodRes)
		lRet := .T.
	Endif
Else
	dbSeek(xFilial("TC4")+TB5->TB5_FORNEC)
	While !Eof() .And. TC4->TC4_FORNEC == TB5->TB5_FORNEC
		lRet := (TC4->TC4_CODPRO == cCodRes)
		If lRet
			Exit
		EndIf
		TC4->(dbSkip())
	End
Endif

RestArea(aArea)
Return lRet
//---------------------------------------------------------------------
/*/{Protheus.doc} SGA190LOJ
Gatilha os campos de Loja

@return Nil

@sample
SGA190LOJ()

@author Jackson Machado
@since 05/07/2013
/*/
//---------------------------------------------------------------------
Function SGA190LOJ(cCampo)

	Local aArea := GetArea()
	Local lRet	:= .T.
	Default cCampo := "TBA_FORNEC"

	If cCampo == "TBA_FORNEC" .And. !Empty(M->TBA_FORNEC) .And. !Empty(M->TBA_LOJA)
		If cForPad <> M->TBA_FORNEC
			M->TBA_LOJA := Space( Len( M->TBA_LOJA ) )
			cForPad := M->TBA_FORNEC
		EndIf
	EndIf

	Do Case
		Case cCampo == "TBA_FORNEC" .And. !Empty(M->TBA_FORNEC) .And. Empty(M->TBA_LOJA)
			lRet := ExistCPO( "SA2" , M->TBA_FORNEC )
		Case cCampo == "TBA_LOJA" .And. !Empty(M->TBA_FORNEC) .And. Empty(M->TBA_LOJA)
			ShowHelpDLG( "AtenÁ„o", {"Campo loja inv·lido."} , 2 , {"… necess·rio o preenchimento do campo loja."} , 2 )
			lRet := .F.
		Case cCampo $ "TBA_LOJA/TBA_FORNEC" .And. !Empty(M->TBA_FORNEC) .And. !Empty(M->TBA_LOJA)
			lRet := ExistCPO( "SA2" , M->TBA_FORNEC + M->TBA_LOJA )
		Case cCampo $ "TBA_LOJA/TBA_FORNEC" .And. Empty(M->TBA_FORNEC) .And. !Empty(M->TBA_LOJA)
			ShowHelpDLG( "AtenÁ„o", {"Campo loja inv·lido."} , 2 , {"… necess·rio informar primeiro o fornecedor."} , 2 )
			lRet	:= .F.
	End Case

	RestArea( aArea )

Return lRet