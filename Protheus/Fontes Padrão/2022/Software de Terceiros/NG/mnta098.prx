#INCLUDE "MNTA098.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "COLORS.CH"
#INCLUDE "FWADAPTEREAI.CH" // Integração via Mensagem Única

Static lRel12133 := GetRPORelease() >= '12.1.033'

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNTA098  ³ Autor ³ Inacio Luiz Kolling   ³ Data ³ 29/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de rodizio da estrutura                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Objetivo  ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA098(_cBEMPAI)

	Local aPosCpo		:= {}
	Local nPosCpo		:= 0
	Local lCONT2		:= .F.
	Local lMNTA098B		:= ExistBlock("MNTA098B")
	Local lMNTA098C		:= ExistBlock("MNTA098C")
	Local lMain			:= .F.
	Local cTipMod		:= ""
	Local cGERAPREV		:= AllTrim(GETMv("MV_NGGERPR")),n := 0, nI := 0
	Local aCONTACUM		:= {}
	Local aCONTACUM2	:= {}
	Local oTmpTbl1
	Local oTmpTbl2
	Local oTmpTbl3
	Local oTmpTbl4
	Local oPanel
	Local aNGBEGINPRM := {}
	Local aCposAlter  := {}

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 19, 95 )

		aNGBEGINPRM := NGBEGINPRM()

		Private cTRB981 := GetNextAlias() //Tabela 1
		Private cTRB982 := GetNextAlias() //Tabela 2
		Private cTRBY   := GetNextAlias() //Tabela 3
		Private cTRBZ   := GetNextAlias() //Tabela 4
		Private M->T9_CATBEM := ''
		Private M->TZ_TIPOMOV := ''
		Private cBemSTZ := ""

		// Definida apenas para emular a getdados NAO DEVE SER RETIRADA
		Private aRotina   := {{STR0005,"AxPesqui",0 ,1},;
		{STR0005,"NGCAD02" ,0 ,2},;
		{STR0005,"MNTA098" ,0 ,3}}

		Private dDATAMOV1, dDATAMOV2
		Private cBEMPAIPR, cBEMNOME , cHORCON1,cHORCON2
		Private nCONTADOR, nCONTADAU, nLINGETD,nCONTADOR2, nCONTADAU2
		Private TIPOACOM , TIPOACOM2, lCHKCON1,lCHKCON2  , lTEMEST, LSH1
		Private oDlg98   , oMenu

		Private cVBEMPAI98 := ""
		Private cBEMPAI	:= ''
		Private cFamiBPai	:= ''
		Private cCadastro  := STR0001
		Private aBEMFIL	:= {}
		Private cHRTIME	:= SubStr(Time(),1,5) //Hora do Sistema
		Private cHRTIME1M	:= MTOH(HTOM(cHRTIME)+1) //Hora do Sistema + 1 minuto para a troca de localizacao na estrutura
		Private aCOMPRETR	:= {}
		Private lFrota		:= MNTA098FR()
		Private lTipMod     := lRel12133 .Or. lFrota // Utilizado no processo do tipo modelo TODOS
		Private lStatus	:= .T.
		Private cStatus	:= Space(2)
		Private lDESTMS2	:= .F.
		Private lDESTMS	   := .F.
		Private lINTEGTMS  := .F.
		Private lINTTQS    := "N"
		Private lINTTMS    := "N"
		Private lBlockBem	:= .T.//Variavel criada para haver a possibilidade de tratamento de When do campo CODBEM - Não retirar
		Private lSequeSTC	:= NGCADICBASE( "TC_SEQUEN","A","STC",.F. ) //Verifica se existe o campo TC_SEQUEN no dicionário ou base dados.
		Private aOrdStruct	:= {} //Array utilizado para adicionar 'filhos' da estrutura para controle da árvore ordenada.

		Private M->T9_CATBEM := Space(1)
		//Variável declarada para que seja possível reabrir a tela para novo Rodízio
		Private oGet

		//Integracao com TMS
		lINTTMS := SuperGetMv('MV_NGMNTMS',.F.,"N")

		//Integracao com TQS
		lINTTQS := SuperGetMv('MV_NGPNEUS',.F.,"N")

		//Codigo de Integracao com TMS
		DbSelectArea("ST9")
		lINTEGTMS := .T.

		Private lTMSInt := If((lINTTMS = "S" .or. lINTTMS = "P") .And. lINTEGTMS,.T.,.F.)
		Private lTQSInt := If(lINTTQS = "S",.T.,.F.)

		If lFrota
			cParFr := SuperGetMv("MV_NGSTAPL",.F.," ")
			If cParFr = Nil .Or. Empty(cParFr)
				MsgInfo(STR0020+' MV_NGSTAPL '+STR0021,STR0019)
				Return
			Else
				cStatus := cParFr
			Endif
		Endif

		Store Space(16) To cBEMPAIPR,cBEMPAI
		Store 0         To nCONTADOR,nCONTADAU,nCONTADOR2,nCONTADAU2,nLINGETD
		Store .F.       To TIPOACOM,TIPOACOM2,LSH1,lCHKCON1,lCHKCON2,lTEMEST
		Store '  :  '   To cHORCON1,cHORCON2

		dDATAMOV2 := Ctod(' /  /  ')
		dDATAMOV1 := dDATABASE
		cBEMNOME  := Space(40)

		//---------------------------------------------------------------------------------------
		// Trecho abaixo cria temporária cTRB981 - estrutura do pai - considera o acols
		//---------------------------------------------------------------------------------------
		nTAM := Len(STC->TC_CODBEM)
		aDBF := STC->(DbStruct())
		Aadd(aDBF,{"TC_FAMBEM" ,"C",nTAM,0})
		Aadd(aDBF,{"TC_FAMCOMP","C",nTAM,0})
		Aadd(aDBF,{"TIPOMOV","C",01,0})

		oTmpTbl1 := FWTemporaryTable():New( cTRB981, aDBF )
		oTmpTbl1:AddIndex("Ind01", {"TC_CODBEM" ,"TC_COMPONE"} )
		oTmpTbl1:AddIndex("Ind02", {"TC_COMPONE","TC_CODBEM" } )
		oTmpTbl1:AddIndex("Ind03", {"TC_FAMBEM" ,"TC_FAMCOMP", "TIPOMOV"} )
		oTmpTbl1:Create()

		//---------------------------------------------------------------------------
		// Trecho abaixo cria temporária cTRB982 - estrutura padrão da familia do pai
		//---------------------------------------------------------------------------
		aDBF1:= STC-> (DbStruct())
		aAdd(aDBF1, {"TC_OK", "C", 01, 0})

		oTmpTbl2:= FWTemporaryTable():New( cTRB982, aDBF1 )
		oTmpTbl2:AddIndex("Ind01", {"TC_CODBEM" ,"TC_COMPONE"} )
		oTmpTbl2:AddIndex("Ind02", {"TC_COMPONE","TC_CODBEM" } )
		oTmpTbl2:Create()

		//---------------------------------------------------------------------------
		// Trecho abaixo cria temporária cTRBY - situação atual do pai da estrutura
		//---------------------------------------------------------------------------
		aDBFY:= STC->(DbStruct())
		aAdd(aDBFY,{"TC_CONTRO","C",01,0}) //TIPO DE CONTROLE DO COMPONENTE(S,P,I,N)

		oTmpTbl3 := FWTemporaryTable():New( cTRBY, aDBFY )
		oTmpTbl3:AddIndex( "Ind01" , {"TC_CODBEM","TC_COMPONE"} )
		oTmpTbl3:AddIndex( "Ind02" , {"TC_COMPONE","TC_CODBEM"} )
		oTmpTbl3:Create()

		//-----------------------------------------------------------------------------------
		// Trecho abaixo cria temporária cTRBZ - situação atual do pai após gravação da STC
		//-----------------------------------------------------------------------
		aDBFZ  := STC->(DbStruct())
		aAdd(aDBFZ,{"TC_CONTRO","C",01,0}) //TIPO DE CONTROLE DO COMPONENTE(S,P,I,N)

		oTmpTbl4 := FWTemporaryTable():New( cTRBZ, aDBFZ )
		oTmpTbl4:AddIndex( "Ind01" , {"TC_CODBEM","TC_COMPONE"} )
		oTmpTbl4:AddIndex( "Ind02" , {"TC_COMPONE","TC_CODBEM"} )
		oTmpTbl4:Create()

		vVETOR098 := {}

		//Montando aHeader
		Dbselectarea("STZ")
		Dbsetorder(1)
		Dbgobottom()
		Dbskip()

		nUSADO  := 0
		aHEADER := {}

		aCposAlter := fMontaHea()

		Dbselectarea("SX3")
		Dbsetorder(1)

		//Inclui coluna de registro atraves de funcao generica
		ADHeadRec("STZ",aHeader)
		nUsado := nUsado + 2

		//Montando aCols
		aCOLS:=Array(1,nUSADO+1)
		Store Space(06) To aCOLS[1][3],aCOLS[1][4]
		aCOLS[1][1] := Space(01)
		aCOLS[1][2] := Space(16)
		aCOLS[1][5] := Space(20)
		nStatus     := aSCAN(aHEADER,{|x| TRIM(UPPER(x[2])) == "TQZ_STATUS"})

		If lFrota
			aCOLS[1][nStatus] := Space(Len(st9->t9_status))
		Endif

		//Preenche o array auxiliar aCposAlter...
		If Len(aCposAlter) > 0
			For nI := 1 To Len(aCposAlter)
				nPosCpo := Ascan(aHeader,{|x| AllTrim(x[2])==aCposAlter[nI]})
				AADD(aPosCpo,{aCposAlter[nI],nPosCpo})
				aCOLS[1][nPosCpo] := CriaVar(aCposAlter[nI])
			Next nI
		EndIf
		aArea := GetArea()
		dbSelectArea("STZ")

		aCols[1][nUsado-1]      := "STZ"
		aCols[1][nUsado]        := STZ->(Recno())
		aCOLS[1][Len(aCOLS[1])] := .F.
		RestArea(aArea)

		nOpcx   := 3
		nOPC098 := 2

		cBEMPAI := _cBEMPAI
		If Empty(cBEMPAI) .Or. cBEMPAI == Nil
			Store Space(16) To cBEMPAI
		Else
			MNTA098BEM()
		EndIf

		If ExistBlock("MNTA0983")//Alimenta aCols
			ExecBlock("MNTA0983",.F.,.F.)
		EndIf

		DEFINE MSDIALOG oDLG098 FROM 90,50 TO 500,730 TITLE STR0005 PIXEL
		oDLG098:lMaximized := .T.

			@ 000,000 MSPANEL oPanel OF oDLG098

			@ 002,003 say OemtoAnsi(STR0001) of oPanel Pixel COLOR CLR_HBLUE //"Bem Pai"
			@ 002,045 Msget cBEMPAI  Picture '@!';
			Valid MNTA098BEM() F3 "ST9" When lBlockBem SIZE 100,7 of oPanel Pixel HasButton
			@ 002,148 Msget cBEMNOME Picture '@!' When .F. SIZE 185,7 of oPanel Pixel

			@ 017,003 say OemtoAnsi(STR0003) of oPanel PIXEL COLOR CLR_HBLUE //"Data Movimentacao
			@ 017,060 MSGET dDATAMOV1 PICTURE '99/99/99' Valid naovazio() .And. NGCPDIAATU(dDATAMOV1,"<=",.T.,.T.,.T.) SIZE 44,7 OF oPanel PIXEL HasButton

			@ 017,105 say OemtoAnsi(STR0009) of oPanel Pixel//"Hora Leitura"
			@ 017,138 MSGET cHORCON1 Picture '99:99' Valid MNTA098HIS(nCONTADOR,dDATAMOV1,cHORCON1,1,.T.);
					.And. MNTA098CCB(cBEMPAI, dDATAMOV1, cHORCON1) When TIPOACOM SIZE 10,8 OF oPanel PIXEL

			@ 017,170 say OemtoAnsi(STR0004) of oPanel PIXEL //"Contador 1"
			@ 017,205 MSGET nCONTADOR Picture '999999999' Valid MNTA098VCO(nCONTADOR,1);
					When TIPOACOM .And. (!FindFunction("NGBlCont") .Or. NGBlCont( cBEMPAI )) SIZE 45,7 OF oPanel PIXEL

			@ 032,003 say OemtoAnsi(STR0010) of oPanel PIXEL //"Dt Leitura 2 Contador"
			@ 032,060 MSGET dDATAMOV2 PICTURE '99/99/99' Valid naovazio() When TIPOACOM2 SIZE 44,7 OF oPanel PIXEL HasButton

			@ 032,170 say OemtoAnsi(STR0006) of oPanel PIXEL //"Contador 2"
			@ 032,205 MSGET nCONTADOR2 Picture '999999999' Valid MNTA098VCO(nCONTADOR2,2) When TIPOACOM2 SIZE 45,7 OF oPanel PIXEL

			@ 032,105 say OemtoAnsi(STR0009) of oPanel Pixel//"Hora Leitura"
			@ 032,138 MSGET cHORCON2 Picture '99:99' Valid MNTA098HIS(nCONTADOR2,dDATAMOV2,cHORCON2,2,.T.) When TIPOACOM2 SIZE 10,8 OF oPanel PIXEL

			@ 030,266 BITMAP oBmp1 RESOURCE "FOLDER6" SIZE 8,8 PIXEL OF oPanel NOBORDER When .F.
			@ 029,278 BUTTON STR0011 SIZE 35,12 PIXEL Of oPanel ACTION NGESTVITRB(cTRB981,220,335,STR0012); //'Estrutura' # "Estrutura Do Bem"
			When lTEMEST

			oGet                 := MSGetDados():New(60,1,175,315,nOpcx,"MNTA098LOK","MNTA098LOK",,.T.,,1,,300) //,"MNTA401CAB()")
			oGet:oBrowse:Align   := CONTROL_ALIGN_ALLCLIENT
			oGet:oBrowse:bChange := { || MNTA098ENT() }

			NGPOPUP(aSMenu,@oMenu)
			oDlg098:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg098)}

		ACTIVATE MSDIALOG oDLG098 ON INIT (EnchoiceBar(oDLG098,{||nOPC098:=1,if(oGet:TudoOk() .And. MNTA098TOK() .And.;
										MNT98CONSE(),oDLG098:End(),nOPC098 := 2)},{||nOPC098:=2,oDLG098:End()}),;
										AlignObject(oDlg098,{oPanel,oGet:oBrowse},1,,{90}))

		If nOPC098 == 1

			If TIPOACOM .And. nCONTADOR > 0
				NGTRETCON(cBEMPAI,dDATAMOV1,nCONTADOR,cHORCON1,1,,.T.)
			Endif

			If TIPOACOM2 .And. nCONTADOR2 > 0
				NGTRETCON(cBEMPAI,dDATAMOV2,nCONTADOR2,cHORCON2,2,,.F.)
			Endif

			Dbselectarea("ST9")
			Dbseek(xFILIAL("ST9")+cBEMPAI)
			cCCUSTOPAI  := ST9->T9_CCUSTO
			cCENTRABPAI := ST9->T9_CENTRAB
			cCALENDBPAI := ST9->T9_CALENDA
			If lTipMod
				cTipMod := ST9->T9_TIPMOD
			EndIf

			vVETOR098 := {}
			For n := 1 TO Len(aCOLS)
				Aadd(vVETOR098,0)
			Next

			//Identifica criação de MsDialog
			lMain := Type( "oMainWnd" ) == "O"

			For n := 1 TO Len(aCOLS)
				If !Empty(aCOLS[n][1]) .And. !Empty(aCOLS[n][2])
					If !aCOLS[n][Len(aCOLS[n])]
						// ATUALIZA A ESTRUTURA
						lRET := .T.
						If lMNTA098B
							lRET := ExecBlock("MNTA098B",.F.,.F.)
						Endif

						Dbselectarea("ST9")
						If Dbseek(xFILIAL("ST9")+aCOLS[n][2])
							If aCOLS[n][1] == 'E' .And. ST9->T9_MOVIBEM == 'S' .And.;
							ST9->T9_CCUSTO <> cCCUSTOPAI

								RecLock("ST9",.F.)
								ST9->T9_CCUSTO  := cCCUSTOPAI
								ST9->T9_CENTRAB := cCENTRABPAI
								ST9->T9_CALENDA := cCALENDBPAI
								ST9->( MsUnLock() )

								//Atualiza o centro de custo no ativo fixo
								NGATUATF(ST9->T9_CODIMOB,ST9->T9_CCUSTO)

								Dbselectarea("TPN")
								Dbsetorder(1)
								RecLock("TPN",.T.)
								TPN->TPN_FILIAL := xFILIAL("TPN")
								TPN->TPN_CODBEM := aCOLS[n][2]
								TPN->TPN_DTINIC := dDATABASE
								TPN->TPN_HRINIC := If(Alltrim(cHORCON1) = ":",time(),cHORCON1)
								TPN->TPN_CCUSTO := cCCUSTOPAI
								TPN->TPN_CTRAB  := cCENTRABPAI
								TPN->TPN_UTILIZ := "U"
								TPN->TPN_POSCON := nCONTADOR
								TPN->TPN_POSCO2 := nCONTADOR2
								TPN->( MsUnLock() )

								//Funcao de integracao com o PIMS atraves do EAI
								If FindFunction("NGIntPIMS")
									NGIntPIMS("TPN",TPN->(RecNo()),3)
								EndIf

								//----------------------------------------------------
								// Integração via mensagem única do cadastro de Bem
								//----------------------------------------------------
								If FindFunction("MN080INTMB") .And. MN080INTMB(ST9->T9_CODFAMI)

									DbSelectArea( "ST9" )

									// Define array private que será usado dentro da integração
									aParamMensUn    := Array( 4 )
									aParamMensUn[1] := Recno() // Indica numero do registro
									aParamMensUn[2] := 4       // Indica tipo de operação que esta invocando a mensagem unica
									aParamMensUn[3] := .F.     // Indica que se deve recuperar dados da memória
									aParamMensUn[4] := 1       // Indica se deve inativar o bem (1 ativo,2 - inativo)

									lMuEquip := .F.
									bBlock := { || FWIntegDef( "MNTA080",EAI_MESSAGE_BUSINESS,TRANS_SEND,Nil ) }

									If lMain
										MsgRun( "Aguarde integração com backoffice...","Equipment",bBlock )
									Else
										Eval( bBlock )
									EndIf

								EndIf

							Endif
						Endif

						DbSelectArea("STZ")
						DbSetOrder(1)
						Dbseek(xFILIAL("STZ")+aCOLS[n][2]+"E")

						Dbselectarea("STC")
						Dbsetorder(1)
						If Dbseek(xFILIAL("STC")+STZ->TZ_BEMPAI+aCOLS[n][2])
							If aCOLS[n][1] == 'S'
								RecLock("STC",.F.)
								DbDelete()
								MsUnLock()
							Endif
						Else
							If aCOLS[n][1] == 'E'
								dbSelectArea("STC")
								RecLock("STC",.T.)
								STC->TC_FILIAL  := xFILIAL('STC')
								STC->TC_TIPOEST := 'B'
								STC->TC_CODBEM  := cBEMPAI
								STC->TC_COMPONE := aCOLS[n][2]
								STC->TC_LOCALIZ := aCOLS[n][3]
								If lTipMod
									STC->TC_TIPMOD := cTipMod
								EndIf

								If lSequeSTC //Verifica se existe o campo TC_SEQUEN no dicionário ou base dados.
									STC->TC_SEQUEN := Mnt090RtSq( STC->TC_CODBEM,STC->TC_COMPONE ) //Função que retorna o sequencial do componente na estrutura.
								EndIf

								STC->TC_DATAINI := dDATAMOV1
								STC->( MsUnLock() )

								dbSelectArea("ST9")
								RecLock("ST9",.F.)
								ST9->T9_ESTRUTU := "S"
								If lFrota
									ST9->T9_STATUS := aCOLS[n,nStatus]
								Endif

								ST9->( MsUnLock() )
							Endif
						Endif
						// ATUALIZA A RETORNO ( STZ )
						Dbselectarea("STZ")
						Dbsetorder(1)
						If aCOLS[n][1] == 'E'
							RecLock("STZ",.T.)
							STZ->TZ_FILIAL  := xFILIAL('STZ')
							STZ->TZ_CODBEM  := aCOLS[n][2]
							STZ->TZ_BEMPAI  := cBEMPAI
							STZ->TZ_TIPOMOV := 'E'
							STZ->TZ_DATAMOV := dDATAMOV1
							STZ->TZ_LOCALIZ := aCOLS[n][3]
							STZ->TZ_TEMCONT := NGSEEK("ST9",STZ->TZ_CODBEM,1,"T9_TEMCONT")
							STZ->TZ_TEMCPAI := NGSEEK("ST9",STZ->TZ_BEMPAI,1,"T9_TEMCONT")

							DbSelectArea(cTRBY) //Troca de localizacao do componente
							DbSetOrder(02)
							If DbSeek(aCOLS[n][2])

								STZ->TZ_HORAENT := If(Alltrim(cHORCON1) = ":",cHRTIME1M,MTOH(HTOM(SubStr(cHORCON1,1,5))+1))
								If STZ->TZ_HORAENT = "24:00"
									STZ->TZ_HORAENT := "00:00"
								EndIf
								If STZ->TZ_HORAENT = "00:00"
									STZ->TZ_DATAMOV := dDATAMOV1 + 1

									DbSelectArea("STC")
									Reclock("STC",.F.)
									STC->TC_DATAINI := STZ->TZ_DATAMOV
									STC->( MsUnlock() )

								EndIf

							Else
								STZ->TZ_HORAENT := If(Alltrim(cHORCON1) = ":",cHRTIME,cHORCON1)
							EndIf

							//Faz a gravacao dos campos de usuario
							If Len(aCposAlter) > 0
								For nI := 1 To Len(aCposAlter)
									nPosCpo := Ascan(aHeader,{|x| AllTrim(x[2])==aCposAlter[nI]})
									STZ->(FieldPut(FieldPos(aCposAlter[nI]),aCols[n][nPosCpo]))
								Next nI
							EndIf

							DbSelectArea("STZ")
							STZ->( MsUnLock() )

							// Recebe o endereco logico do STZ na entrada do componente

							vVETOR098[n] := Recno()

							If lMNTA098C
								ExecBlock("MNTA098C",.F.,.F.)
							EndIf
						Else
							Dbseek(xFILIAL('STZ')+aCOLS[n][2]+'E')
							While !Eof() .And. STZ->TZ_FILIAL == xFILIAL('STZ') .And.;
							STZ->TZ_CODBEM == aCOLS[n][2]
								If Empty(STZ->TZ_DATASAI)
									RecLock("STZ",.F.)
									STZ->TZ_TIPOMOV := 'S'
									STZ->TZ_DATASAI := dDATAMOV1
									STZ->TZ_CAUSA   := aCOLS[n][4]
									STZ->TZ_HORASAI := If(Alltrim(cHORCON1) = ":",cHRTIME,cHORCON1)

									//Faz a gravacao dos campos de usuario
									If Len(aCposAlter) > 0
										For nI := 1 To Len(aCposAlter)
											nPosCpo := Ascan(aHeader,{|x| AllTrim(x[2])==aCposAlter[nI]})
											STZ->(FieldPut(FieldPos(aCposAlter[nI]),aCols[n][nPosCpo]))
										Next nI
									EndIf
									MsUnLock()

									Aadd(aCOMPRETR,{stz->tz_codbem,stz->tz_datamov,;
									stz->tz_horaent})

									// Recebe o endereco logico do STZ de saida do componente
									vVETOR098[n] := Recno()

									RecLock("ST9",.F.)
									ST9->T9_ESTRUTU := "N"
									If lFrota
										ST9->T9_STATUS := aCOLS[n,nStatus]
									Endif

									ST9->( MsUnLock() )
									If lMNTA098C
										ExecBlock("MNTA098C",.F.,.F.)
									Endif
									Exit
								Endif
								Dbskip()
							End
						Endif
					Endif
				Endif
			Next

			//Retorna o bem pai de toda a estrutura
			cBEMPEST := NGBEMPAI(cBEMPAI)
			cBEMPEST := If(Empty(cBEMPEST),cBEMPAI,cBEMPEST)

			//Retorna a estrutura padrao do bem pai e informacao dos componentes que recebem contador
			DbSelectArea("ST9")
			DbSetOrder(01)
			Dbseek(xfilial("ST9")+cBEMPEST)
			cCODFAM098 := ST9->T9_CODFAMI+Space(Len(ST9->T9_CODBEM)-Len(ST9->T9_CODFAMI))
			cTIPMOD098 := IIf( lTipMod, ST9->T9_TIPMOD, Nil )
			aESTFAM098 := NGCOMPEST(cCODFAM098,"F",.T.,.F.,.T.,Nil,Nil,cTIPMOD098)

			// Le acols com os itens de saida
			For n := 1 To Len(aCOLS)
				If !Empty(aCOLS[n][1]) .And. !Empty(aCOLS[n][2])
					If !aCOLS[n][Len(aCOLS[n])]

						// Procura no arq. TRBY que ‚ o pai do componente na estrutura e acessa o ST9 para obter
						// o contador e alterar o contador no STZ
						If aCOLS[n][1] = "S"

							DbSelectArea("STZ")
							DbGoto(vVETOR098[n])

							Dbselectarea("ST9")
							DbSetOrder(01)
							If Dbseek(xFILIAL("ST9")+aCOLS[n][2])

								//Verifica se o componente e um step
								lREPAS098 := .T.
								If Len(aESTFAM098) > 0
									cCODF098 := ST9->T9_CODFAMI+Space(Len(ST9->T9_CODBEM)-Len(ST9->T9_CODFAMI))
									nPOSF098 := aSCAN(aESTFAM098,{|x| x[1]+x[2] = cCODF098+STZ->TZ_LOCALIZ})
									If nPOSF098 > 0 .And. aESTFAM098[nPOSF098,3] = "N"
										lREPAS098 := .F.
									EndIf
								EndIf

								If lREPAS098
									DbSelectArea(cTRBY)
									DbSetOrder(02)
									If DbSeek(aCOLS[n][2])
										If (cTRBY)->TC_CONTRO <> "N"

											//Procura o bem pai do componente
											cVBEMPAI98 := NGTBEMPTE(aCOLS[n][2],(cTRBY))

											lCONT2 := .F.
											dbSelectArea("TPE")
											dbSetOrder(01)
											If DbSeek(xFilial("TPE")+aCOLS[n][2])
												lCONT2 := .T.
											EndIf

											If !Empty(cVBEMPAI98)

												If cVBEMPAI98 == cBEMPAI

													dbSelectArea("STZ")
													RecLock("STZ",.F.)
													STZ->TZ_CONTSAI := nCONTADOR
													STZ->TZ_CONTSA2 := If(lCONT2,nCONTADOR2,STZ->TZ_CONTSA2)
													MsUnLock()

												Else

													//Funcao que retorna o contador exato ou parecido com a Data+hora do bem pai do
													//componente
													aCONTACUM  := NGACUMEHIS(cVBEMPAI98,STZ->TZ_DATASAI,STZ->TZ_HORASAI,;
													1,"E")
													aCONTACUM2 := NGACUMEHIS(cVBEMPAI98,STZ->TZ_DATASAI,STZ->TZ_HORASAI,;
													2,"E")

													dbSelectArea("STZ")
													RecLock("STZ",.F.)
													STZ->TZ_CONTSAI := If(aCONTACUM[1] > 0,aCONTACUM[1],STZ->TZ_CONTSAI)
													STZ->TZ_CONTSA2 := If(aCONTACUM2[1] > 0,aCONTACUM2[1],STZ->TZ_CONTSA2)
													MsUnLock()
												EndIf
											EndIf
										EndIf
									EndIf
								Else
									nCONT2TRBY := 0
									DbSelectArea("TPE")
									DbSetOrder(01)
									If DbSeek(xFilial("TPE")+aCOLS[n][2])
										nCONT2TRBY := TPE->TPE_POSCON
									EndIf

									DbSelectArea("STZ")
									DbGoto(vVETOR098[n])
									RecLock("STZ",.F.)
									STZ->TZ_CONTSAI := ST9->T9_POSCONT
									STZ->TZ_CONTSA2 := nCONT2TRBY
									MsUnLock()
								EndIf
							EndIf
						EndIf
					EndIf
				EndIf
			Next n

			//Alimenta o arquivo temporario com os componentes que fazem parte da
			//estrutura do bem pai apos o Rodizio
			M98ARQTRB((cTRBZ),cBEMPEST,.T.)

			// Le acols com os itens de entrada
			For n := 1 To Len(aCOLS)
				If !Empty(aCOLS[n][1]) .And. !Empty(aCOLS[n][2])
					If !aCOLS[n][Len(aCOLS[n])]

						// Procura no arq. TRBZ que ‚ o pai do componente na estrutura e acessa o ST9 e para obter
						// o contador e alterar o contador no STZ
						If aCOLS[n][1] = "E"

							DbSelectArea("STZ")
							DbGoto(vVETOR098[n])

							DbSelectArea("ST9")
							DbSetOrder(01)
							If DbSeek(xFilial("ST9")+aCOLS[n][2])

								//Verifica se o componente e um step
								lREPAS098 := .T.
								If Len(aESTFAM098) > 0
									cCODF098 := ST9->T9_CODFAMI+Space(Len(ST9->T9_CODBEM)-Len(ST9->T9_CODFAMI))
									nPOSF098 := aSCAN(aESTFAM098,{|x| x[1]+x[2] = cCODF098+STZ->TZ_LOCALIZ})
									If nPOSF098 > 0 .And. aESTFAM098[nPOSF098,3] = "N"
										lREPAS098 := .F.
									EndIf
								EndIf

								If lREPAS098
									DbSelectArea(cTRBZ)
									DbSetOrder(02)
									If DbSeek(aCOLS[n][2])
										If (cTRBZ)->TC_CONTRO <> "N"

											nREGTRBZ := Recno()

											//Procura o bem pai do componente na estrutura
											cVBEMPAI98 := NGTBEMPTE(aCOLS[n][2],(cTRBZ))

											DbSelectArea(cTRBZ)
											DbGoto(nREGTRBZ)
											If !Empty(cVBEMPAI98)

												lCONT2 := .F.
												dbSelectArea("TPE")
												dbSetOrder(01)
												If DbSeek(xFilial("TPE")+aCOLS[n][2])
													lCONT2 := .T.
												EndIf

												If cVBEMPAI98 == cBEMPAI

													nCONT1TRBZ := nCONTADOR
													nCONT2TRBZ := nCONTADOR2
													dbSelectArea("STZ")
													RecLock("STZ",.F.)
													STZ->TZ_POSCONT := nCONT1TRBZ
													STZ->TZ_POSCON2 := If(lCONT2,nCONT2TRBZ,STZ->TZ_POSCON2)
													MsUnLock()

												Else
													//Funcao que retorna o contador exato ou parecido com a Data+hora do bem pai do
													//componente
													aCONTACUM  := NGACUMEHIS(cVBEMPAI98,STZ->TZ_DATAMOV,STZ->TZ_HORAENT,;
													1,"E")
													aCONTACUM2 := NGACUMEHIS(cVBEMPAI98,STZ->TZ_DATAMOV,STZ->TZ_HORAENT,;
													2,"E")

													nCONT1TRBZ := If(aCONTACUM[1] > 0,aCONTACUM[1],STZ->TZ_POSCONT)
													nCONT2TRBZ := If(aCONTACUM2[1] > 0,aCONTACUM2[1],STZ->TZ_POSCON2)

													dbSelectArea("STZ")
													RecLock("STZ",.F.)
													STZ->TZ_POSCONT := nCONT1TRBZ
													STZ->TZ_POSCON2 := nCONT2TRBZ
													MsUnLock()

												EndIf

												If nCONT1TRBZ  > 0
													DbSelectArea("ST9")
													DbSetOrder(01)
													If DbSeek(xFilial("ST9")+STZ->TZ_CODBEM)

														//Inclui registro de entrada na estrutura para componente controlado por Pai da estrutura
														//ou Imediato e Contador Proprio
														If ST9->T9_TEMCONT = "S"
															NGTRETCON(STZ->TZ_CODBEM,STZ->TZ_DATAMOV,nCONT1TRBZ,STZ->TZ_HORAENT,1,,.T.)
														ElseIf ST9->T9_TEMCONT = "P" .Or. ST9->T9_TEMCONT = "I"
															NGINREGEST(STZ->TZ_CODBEM,STZ->TZ_DATAMOV,STZ->TZ_HORAENT,1,nCONT1TRBZ,;
															ST9->T9_CONTACU,ST9->T9_VIRADAS)
														EndIf

													EndIf
												EndIf

												If nCONT2TRBZ > 0
													DbSelectArea("TPE")
													DbSetOrder(01)
													If DbSeek(xFilial("TPE")+STZ->TZ_CODBEM)

														//Inclui registro de entrada na estrutura para componente controlado por Pai da estrutura
														//ou Imediato e Contador Proprio
														If (cTRBZ)->TC_CONTRO == "S"
															NGTRETCON(STZ->TZ_CODBEM,STZ->TZ_DATAMOV,nCONT2TRBZ,STZ->TZ_HORAENT,2,,.T.)
														ElseIf (cTRBZ)->TC_CONTRO == "P" .Or. (cTRBZ)->TC_CONTRO == "I"
															NGINREGEST(STZ->TZ_CODBEM,STZ->TZ_DATAMOV,STZ->TZ_HORAENT,2,nCONT2TRBZ,;
															TPE->TPE_CONTAC,TPE->TPE_VIRADA)
														EndIf

													EndIf
												EndIf
											EndIf
										EndIf
									EndIf
								Else
									nCONT2TRBZ := 0
									DbSelectArea("TPE")
									DbSetOrder(01)
									If DbSeek(xFilial("TPE")+aCOLS[n][2])
										nCONT2TRBZ := TPE->TPE_POSCON
									EndIf

									DbSelectArea("STZ")
									DbGoto(vVETOR098[n])
									RecLock("STZ",.F.)
									STZ->TZ_POSCONT :=  ST9->T9_POSCONT
									STZ->TZ_POSCON2 :=  nCONT2TRBZ
									MsUnLock()
								EndIf
							EndIf
						EndIf
					EndIf
				EndIf
			Next n
			If ExistBlock("MNTA0981")
				ExecBlock("MNTA0981",.F.,.F.,{_cBEMPAI})
			Endif

		EndIf

		// Deleção das tabelas temporarias
		oTmpTbl1:Delete()
		oTmpTbl2:Delete()
		oTmpTbl3:Delete()
		oTmpTbl4:Delete()

		If nOPC098 == 1
			//GERA O.S AUTOMATICA POR CONTADOR
			If (cGERAPREV = "S" .Or. cGERAPREV = "C") .And. (!Empty(nCONTADOR) .Or. !Empty(nCONTADOR2))
				If NGCONFOSAUT(cGERAPREV)
					NGGEROSAUT(cBEMPAI,If(!Empty(nCONTADOR),nCONTADOR,nCONTADOR2))
				EndIf
			EndIf
		EndIf

		Set Key VK_F9 To
		Dbselectarea("STZ")
		Dbsetorder(1)
		Dbselectarea("STC")
		Dbsetorder(1)


		// Devolve variaveis armazenadas (NGRIGHTCLICK)
		NGRETURNPRM(aNGBEGINPRM)

		//Emulando nova inclusão, para evitar a rotina fechar e ter que abrir novamente
		If nOPC098 == 1
			MNTA098()
		EndIf

	EndIf

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} MNTA098LOK
Consistência da linha

@author  Inacio Luiz Kolling
@since   29/06/99
@version P11/P12
@return	 lRet, Lógico, .F. caso encontre alguma inconsistência
/*/
//-------------------------------------------------------------------
Function MNTA098LOK()

	Local i 	   := 0
	Local nQtd	   := 0
	Local nPosTipo := GdFieldPos("TZ_TIPOMOV")
	Local nPosBem  := GdFieldPos("TZ_CODBEM")
	Local nPosLoc  := GdFieldPos("TZ_LOCALIZ")
	Local nPosCaus := GdFieldPos("TZ_CAUSA")
	Local cTipoMov := aCols[n][nPosTipo]
	Local cCodBem  := aCols[n][nPosBem]
	Local lRet     := .T.

	If !aCOLS[n][Len(aCOLS[n])]

		For i := 1 TO Len(aCOLS)
			If !aCOLS[i][Len(aCOLS[n])]
				If Empty(aCOLS[i][nPosTipo]) .And. Empty(aCOLS[i][nPosBem])
					lRet := .F.
				Else
					If (Empty(aCOLS[i][nPosTipo]) .And. !Empty(aCOLS[i][nPosBem])) .Or.;
					(!Empty(aCOLS[i][nPosTipo]) .And. Empty(aCOLS[i][nPosBem]))
						HELP(" ",1,"RODIZIOOBR")
						lRet := .F.
					ElseIf aCOLS[i][nPosTipo] == 'S' .And. Empty(aCOLS[i][nPosCaus])
						HELP(" ",1,"RODIZIOOBR")
						lRet := .F.
					EndIf
				EndIf
			EndIf
		Next i

		If nPosTipo > 0 .And. nPosBem > 0 .And. lRet
			If !MNTA098DUP()
				lRet := .F.
			EndIf
		EndIf

		// Insere o registro de estrutura na (cTRB981)
		MNTA098LOC()

	Endif

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA098BEM
Consistencia do bem pai da estrutura

@author	Inacio Luiz Kolling
@since 29/06/99
Return boolean, se operação pode prosseguir
/*/
//---------------------------------------------------------------------
Function MNTA098BEM()

	Local aOldArea := GetArea()
	Local aCposAlter := {}
	Local aPosCpo    := {}
	Local nPosCpo    := 0
	Local nI := 0
	Local lFilhoInfo := .F.
	Store .F.To TIPOACOM,TIPOACOM2,lCHKCON1,lCHKCON2,lTEMEST
	Store 0  To nCONTADOR,nCONTADOR2

	If !EXISTCPO("ST9",cBEMPAI)
		Return .F.
	Endif

	Dbselectarea("ST9")
	Dbsetorder(1)
	Dbseek(xFILIAL('ST9')+cBEMPAI)

	If cBEMPAIPR <> cBEMPAI
		If !found()
			HELP(" ",1,"CODNEXIST")
			Return .F.
		Else
			Dbselectarea("STC")
			Dbsetorder(1)
			If !Dbseek(xFILIAL('STC')+cBEMPAI)
				ShowHelpDlg( STR0019, { STR0034 + AllTrim( cBEMPAI ) + STR0035 };//"Atenção"###"O Equipamento "###" não possui estrutura."
	     		,1,{ STR0036 },1 ) //"Verificar o cadastro de estrutura de bens e/ou selecione outro equipamento"
				Return .F.
			Else

				//---------------------------------------------------------------------------------
				// verifica se há pneus na estrutura com status aguardando marcação de fogo
				//---------------------------------------------------------------------------------
				If FindFunction( 'MNTAGFOGO' ) .And. !Empty( MNTAGFOGO( STC->TC_CODBEM ) )
					Return .F.
				EndIf

			Endif
		Endif
		// INCLUI NO ARQUIVO AUXILIAR OS BEM PAI
		cBEMNOME := ST9->T9_NOME

		Dbselectarea(cTRB981)
		ZAP
		Dbselectarea(cTRB982)
		ZAP
		Dbselectarea(cTRBY)
		ZAP
		Dbselectarea(cTRBZ)
		ZAP

		//Retorna o bem pai de toda a estrutura
		cBEMPEST := NGBEMPAI(cBEMPAI)
		cBEMPEST := If(Empty(cBEMPEST),cBEMPAI,cBEMPEST)

		//Alimenta o arquivo temporario com os componentes que fazem parte da
		//estrutura do bem pai antes do Rodizio
		DbSelectArea("ST9")
		nREGST998 := Recno()

		M98ARQTRB((cTRBY),cBEMPEST,.T.)

		DbSelectArea("ST9")
		DbGoto(nREGST998)

		aCOLS       := {}
		lREFRESH    := .F.
		aCOLS       := Array(1,nUSADO+1)
		aCOLS[1][1] := Space(01)
		aCOLS[1][2] := Space(16)
		aCOLS[1][5] := Space(20)
		n := 1

		If lFrota
			aCOLS[1][nStatus] := Space(Len(st9->t9_status))
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Preenche o array auxiliar aCposAlter...              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("NG098CPU")
			aCposAlter := ExecBlock("NG098CPU",.F.,.F.)
		EndIf
		If Len(aCposAlter) > 0
			For nI := 1 To Len(aCposAlter)
				nPosCpo := Ascan(aHeader,{|x| AllTrim(x[2])==aCposAlter[nI]})
				AADD(aPosCpo,{aCposAlter[nI],nPosCpo})
				aCOLS[1][nPosCpo] := CriaVar(aCposAlter[nI])
			Next nI
		EndIf
		aArea := GetArea()
		dbSelectArea("STZ")
		aCols[1][nUsado-1] := "STZ"
		aCols[1][nUsado] := STZ->(Recno())
		aCOLS[1][Len(aCOLS[1])] := .F.
		RestArea(aArea)

		Store Space(06) To aCOLS[1][3],aCOLS[1][4]

		MNTA098PAI( 'B', cBEMPAI, IIf( lTipMod, ST9->T9_TIPMOD, Nil ) )

		MNTA098PAI( 'F', ST9->T9_CODFAMI, IIf( lTipMod, ST9->T9_TIPMOD, Nil ) )

	Endif

	TIPOACOM := If(ST9->T9_TEMCONT == 'S',.T.,.F.)

	//FindFunction remover na release GetRPORelease() >= '12.1.027'
	If FindFunction("MNTCont2")
		TIPOACOM2 := MNTCont2(xFilial('TPE'), cBEMPAI)
	Else
		dbselectarea("TPE")
		dbsetorder(1)
	 	TIPOACOM2 := dbseek(xFilial("TPE")+cBEMPAI)
	EndIf


	nCONTADOR  := If(TIPOACOM,st9->t9_poscont,0)
	nCONTADOR2 := If(TIPOACOM2,tpe->tpe_poscon,0)
	dDataMov1  := If( Empty( ST9->T9_DTULTAC ),dDATABASE,ST9->T9_DTULTAC )
	dDataMov2  := If(TIPOACOM2,tpe->tpe_dtulta,Ctod('  /  /  '))
	cHORCON1   := If(!TIPOACOM, '  :  ',If(Alltrim(cHORCON1) = ':',Time(),cHORCON1))
	cHORCON2   := If(!TIPOACOM2,'  :  ',If(Alltrim(cHORCON2) = ':',Time(),cHORCON2))
	lTEMEST    := .T.

	For nI := 1 To Len(aCols)
		If !aCols[nI][Len(aCols[nI])]
			lFilhoInfo := .T.
			Exit
		Endif
	Next

	If lFilhoInfo .AND. cBEMPAIPR <> cBEMPAI .AND. Type('oGet') == 'O'
		aCOLS := BLANKGETD(aHeader)
		oGet:oBrowse:Refresh()
	Endif

	cBEMPAIPR := cBEMPAI
	cFamiBPai := ST9->T9_CODFAMI

	RestArea(aOldArea)

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA098PAI
Inclui no arquivo de trabalho os bem pais

@type function

@source MNTA098.prx

@author Inacio Luiz Kolling
@since 01/07/99

@param cTIP, Caracter, 'B' EST. DO BEM  VTIP = 'P' Est. Padrão
@param cBEMCOD, Caracter, Código do bem ou familia
@param cTIPMOD, Caracter, Modelo do bem ou familia

@sample MNTA098PAI( cTIP , cBEMCOD, cTIPMOD )

@obs Essa função é chamada pela rotina MNTA230, ao realizar alguma alteração
verificar se não irá impactar em ambas rotinas. As rotinas utilizam a mesma
TRB cTRB981.

@return Lógico, Sempre verdadeiro
/*/
//---------------------------------------------------------------------
Function MNTA098PAI(cTIP,cBEMCOD,cTIPMOD)
	Local i := 0,nREC,nREGST998
	Local cModelo := ''

	Dbselectarea("STC")
	If cTIP == 'B'
		Set Filter To STC->TC_FILIAL = xFilial("STC") .And. STC->TC_TIPOEST == "B"
	Else
		Set Filter To STC->TC_FILIAL = xFilial("STC") .And. STC->TC_TIPOEST == "F"
	Endif

	If lTipMod
		// Somente irá utilizar o MNTSeekPad quando o tipo de estrutura for familia
		If lRel12133 .And. cTIP == 'F'
			// Após release 12133 a busca será realizada primeramente com o tipo modelo informado
			// caso não encontre, irá buscar pelo tipo modelo '*'( TODOS )
			MNTSeekPad( 'STC', 5, Padr( cBEMCOD, Len( STC->TC_CODBEM ) ), cTIPMOD )
			cModelo := STC->TC_TIPMOD
		Else
			DbSetOrder(5)
			Dbseek(xFILIAL('STC')+cBEMCOD+Space(TAMSX3("T9_CODBEM")[1]-Len(cBEMCOD))+cTipMod)
			cModelo := STC->TC_TIPMOD
		EndIf
	Else
		DbSetOrder(1)
		Dbseek(xFILIAL('STC')+cBEMCOD)
	Endif

	While !Eof() .And. STC->TC_FILIAL == xFILIAL('STC') .And. AllTrim(STC->TC_CODBEM) == AllTrim(cBEMCOD) .And.;
	IIf( lTipMod, AllTrim( STC->TC_TIPMOD ) == AllTrim( cModelo ), .T. )

		nREC  := RECNO()
		cCOMP := STC->TC_COMPONE
		If cTIP == 'B'
			Dbselectarea(cTRB981)
			DbsetOrder(1)
			If !Dbseek(cBEMCOD+cCOMP)
				RecLock((cTRB981),.T.)
				Dbselectarea("STC")
				For i := 1 TO FCOUNT()
					(cTRB981)->(FieldPut(i,STC->(FIELDGET(i))))
				Next i

				(cTRB981)->TC_SEQUEN := STC->TC_SEQUEN
				Mnt090AdFi( STC->TC_CODBEM,STC->TC_COMPONE,STC->TC_SEQUEN ) //Adiciona filhos no array para controle da árvore ordenada

				DbSelectArea("ST9")
				nREGST998 := Recno()
				(cTRB981)->TC_FAMBEM  := NGSEEK("ST9",STC->TC_CODBEM,1,"T9_CODFAMI")
				(cTRB981)->TC_FAMCOMP := NGSEEK("ST9",STC->TC_COMPONE,1,"T9_CODFAMI")
				DbSelectArea("ST9")
				Dbgoto(nREGST998)
				(cTRB981)->( MsUnLock() )
			Endif
		Else
			Dbselectarea(cTRB982)
			DbsetOrder(1)
			If !Dbseek(cBEMCOD+cCOMP)
				RecLock((cTRB982),.T.)
				Dbselectarea("STC")
				For i := 1 TO FCOUNT()
					(cTRB982)->(FieldPut(i,STC->(FIELDGET(i))))
				Next i
				(cTRB982)->TC_OK := "N"
				(cTRB982)->( MsUnLock() )
			Endif
		Endif

		Dbselectarea("STC")
		If Dbseek(xFILIAL('STC')+cCOMP)
			MNTA098FIL(cCOMP,cTIP)
		Endif
		Dbgoto(nREC)
		Dbskip()
	End

	Dbselectarea("STC")
	Dbsetorder(1)
	Set Filter To
	Dbseek(xFILIAL('STC'))
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098FIL  ³ Autor ³ Inacio Luiz Kolling ³ Data ³ 01/07/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Inclui no arquivo de trabalho os itens filhos              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTA098FIL(cPAI,cTIP1,cNALIS)
	Local nREC,i := 0,cNOALI := If(cNALIS <> NIL,cNALIS,(cTRB981)),nREGST998
	While !EOF() .And. STC->TC_FILIAL == xFILIAL('STC') .And.;
	AllTrim(STC->TC_CODBEM) == AllTrim(cPAI)
		nREC  := RECNO()
		cCOMP := STC->TC_COMPONE
		If cTIP1 == 'B'

			Dbselectarea(cNOALI)
			DbsetOrder(1)
			If !Dbseek(cPAI+cCOMP)
				RecLock(cNOALI,.T.)
				Dbselectarea("STC")
				For i := 1 TO FCOUNT()
					&(cNOALI)->(FieldPut(i,STC->(FIELDGET(i))))
				Next i
				DbSelectArea("ST9")
				nREGST998 := Recno()

				Dbselectarea(cNOALI)
				If &(cNOALI)->(FieldPos("TC_FAMBEM"))>0
					&(cNOALI+"->TC_FAMBEM") := NGSEEK("ST9",STC->TC_CODBEM,1,"T9_CODFAMI")
				EndIf
				If &(cNOALI)->(FieldPos("TC_FAMCOMP"))>0
					&(cNOALI +"->TC_FAMCOMP") := NGSEEK("ST9",STC->TC_COMPONE,1,"T9_CODFAMI")
				EndIf
				DbSelectArea("ST9")
				DbGoto(nREGST998)
				(cNOALI)->( MsUnLock() )
			Endif
		Else
			Dbselectarea(cTRB982)
			DbsetOrder(1)
			If !Dbseek(cPAI+cCOMP)
				RecLock((cTRB982),.T.)
				Dbselectarea("STC")
				For i := 1 TO FCOUNT()
					(cTRB982)->(FieldPut(i,STC->(FIELDGET(i))))
				Next i
				(cTRB982)->TC_OK := "N"
				(cTRB982)->( MsUnLock() )
			Endif
		Endif
		Dbselectarea("STC")
		If Dbseek(xFILIAL('STC')+cCOMP)
			If cNALIS <> NIL
				MNTA098FIL(cCOMP,cTIP1,cNALIS)
			Else
				MNTA098FIL(cCOMP,cTIP1)
			Endif
		Endif
		Dbgoto(nREC)
		Dbskip()
	End
Return NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098SBE³ Autor ³ Inacio Luiz Kolling   ³ Data ³ 29/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Consistencia do bem que faz entrada ou saida da estrutura  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA098SBE()

	Local aCposAlter := {}
	Local aPosCpo    := {}
	Local nPosCpo    := 0, nI := 0
	Local cBemPaiEst := ""

	If !EXISTCPO("ST9",M->TZ_CODBEM)
		Return .F.
	Endif

	cBemSTZ := M->TZ_CODBEM //Varíavel utilizada na função que adiciona os componentes filhos ao componente pai na estrutura da TRB.

	cBemPaiEst := NGBEMIME( cBEMPAI ) //Retorna o bem pai IMEDIATO da estrutura;
	If AllTrim( M->TZ_CODBEM ) == AllTrim( cBemPaiEst ) //Se o bem informado for igual ao bem pai IMEDIATO da estrutura;
		//"ATENÇÃO"##"O Bem "##" não pode ser filho desta estrutura, pelo fato dele ser pai do bem "##"Alterar o Bem definido."
		ShowHelpDlg(STR0019,{STR0031+AllTrim(M->TZ_CODBEM)+STR0032+AllTrim(cBEMPAI)+"."},1,{STR0033},2)
		Return .F.
	EndIf

	Dbselectarea("ST9")
	DbSetOrder(01)
	Dbseek(Xfilial("ST9")+M->TZ_CODBEM)
	If lFrota
		M->T9_CATBEM := ST9->T9_CATBEM
		If ST9->T9_CATBEM = "3"
			Help(" ",1,"NGATENCAO",,STR0024+Chr(13)+Chr(10)+ STR0025,3,1)
			Return .F.
		EndIf
	Endif

	If aCOLS[n][1] == 'E' .And. ST9->T9_SITBEM == 'I'
		HELP(" ",1,"BEMINATIV")
		Return .F.
	Endif

	If aCOLS[n][1] == 'E' .And. ST9->T9_SITBEM == 'T'
		Help(" ",1,"BEMTRANSF",,STR0026,3,1) //"Bem informado foi TRANSFERIDO, portanto não pode fazer parte da estrutura."
		Return .F.
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste se o bem e o mesmo do bem pai                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If M->TZ_CODBEM == cBEMPAI
		HELP(" ",1,"A090NODES2",,M->TZ_CODBEM,2,26)
		Return .F.
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste se o bem esta cadastrado em outra estrutura          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Dbselectarea(cTRB981)
	Dbselectarea("STC")
	DbSetOrder(01)
	Dbseek(xFilial("STC")+cBemPai+M->TZ_CODBEM)

	If aCOLS[n][1] == 'S'
		If !FOUND()
			HELP(" ",1,"CODNOTESTU")
			Return .F.
		Else
			Dbselectarea(cTRB981)
			DbSetOrder(01)
			If Dbseek(cBemPai+M->TZ_CODBEM)
				M->TZ_LOCALIZ := (cTRB981)->TC_LOCALIZ
				aCOLS[n][3]   := (cTRB981)->TC_LOCALIZ
			EndIf
			Dbselectarea(cTRB981)
			DbSetOrder(02)
		Endif
	Else
		If FOUND()
			HELP(" ",1,"A090NODES2",,M->TZ_CODBEM,2,26)
			Return .F.
		Endif
	Endif
	If aCOLS[n][1] == 'E'
		Dbselectarea("STC")
		Dbsetorder(03)
		If Dbseek(xFILIAL("STC")+M->TZ_CODBEM)
			If cBEMPAI <> STC->TC_CODBEM .And. STC->TC_TIPOEST == "B"
				Help(" ",1,"NGMBJAEXEST")
				Return .F.
			Endif
		Endif
	Endif

	//Carrega o valor dos campos de usuario quando saida do componente da estrurura
	If aCOLS[n][1] == 'S'

		If ExistBlock("NG098CPU")
			aCposAlter := ExecBlock("NG098CPU",.F.,.F.)
		EndIf

		If Len(aCposAlter) > 0
			dbSelectArea("STZ")
			dbSetOrder(01)
			If dbSeek(xFILIAL('STZ')+M->TZ_CODBEM+'E')

				For nI := 1 To Len(aCposAlter)
					nPosCpo := Ascan(aHeader,{|x| AllTrim(x[2])==aCposAlter[nI]})
					aCols[n][nPosCpo] := &("STZ->"+aCposAlter[nI])
				Next nI

			EndIf
		EndIf

	EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098LOC³ Autor ³ Inacio Luiz Kolling   ³ Data ³ 29/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Consistencia da localizacao na estrutura                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA098LOC()
	Local nREGST998
	Local nPosBem   := GdFieldPos("TZ_CODBEM")
	Local nPosLoc   := GdFieldPos("TZ_LOCALIZ")
	Local nPosMov   := GdFieldPos("TZ_TIPOMOV")
	Local aRestArea := GetArea()

	If aCols[n][nPosMov] == "E"
		If !Empty( aCols[n][nPosLoc] ) .And. !EXISTCPO( "TPS",aCols[n][nPosLoc] )
			Return .F.
		Endif
		Dbselectarea(cTRB981)
		DbSetOrder( 1 ) // "TC_CODBEM+TC_COMPONE"
		If DbSeek( cBEMPAI + aCOLS[n][nPosBem] )
			//Atualiza localização
			RecLock((cTRB981),.F.)
			(cTRB981)->TC_LOCALIZ := aCols[n][nPosLoc]
			MsUnlock()
		Else

			RecLock((cTRB981),.T.)
			(cTRB981)->TC_FILIAL  := xFILIAL('STC')
			(cTRB981)->TC_CODBEM  := cBEMPAI
			(cTRB981)->TC_COMPONE := aCOLS[n][nPosBem]
			(cTRB981)->TC_LOCALIZ := aCols[n][nPosLoc]

			If lTipMod
				(cTRB981)->TC_TIPMOD := NGSEEK( "ST9",cBEMPAI,1,"T9_TIPMOD" ) // Grava modelo do bem pai
			EndIf

			If lSequeSTC //Verifica se existe o campo TC_SEQUEN no dicionário ou base dados.
				MNT098ADFL() //Faz a chamada da função que adiciona todos os componentes filhos ao componente pai da estrutura.
				Mnt090AdFi( (cTRB981)->TC_CODBEM,(cTRB981)->TC_COMPONE ) //Adiciona filhos no array para controle da árvore ordenada

				(cTRB981)->TC_SEQUEN := Mnt090RtSq( (cTRB981)->TC_CODBEM,(cTRB981)->TC_COMPONE ) //Função que retorna o sequencial do componente na estrutura.
			EndIf

			DbSelectArea("ST9")
			nREGST998 := Recno()
			(cTRB981)->TC_FAMBEM  := NGSEEK("ST9",cBEMPAI,1,"T9_CODFAMI")
			(cTRB981)->TC_FAMCOMP := NGSEEK("ST9",aCOLS[n][2],1,"T9_CODFAMI")
			(cTRB981)->( MsUnlock() )
			DbSelectArea("ST9")
			DbGoto(nREGST998)
		EndIf
	EndIf
	RestArea( aRestArea )
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098TOK³ Autor ³ Inacio Luiz Kolling   ³ Data ³ 29/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Consistencia da estrutura padrao com a estrutura do bem pai³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA098TOK()

	Local nI, nX
	Local lRET       := .T.
	Local lInformado := .F.
	Local nPosLoc    := aScan(aHEADER,{|x|Trim(Upper(x[2])) == "TZ_LOCALIZ"})
	Local nPosBem    := aScan(aHEADER,{|x|Trim(Upper(x[2])) == "TZ_CODBEM"})
	Local nPosTip    := aScan(aHEADER,{|x|Trim(Upper(x[2])) == "TZ_TIPOMOV"})
	Local nPosMov    := aScan(aHEADER,{|x|Trim(Upper(x[2])) == "TZ_TIPOMOV"})
	Local cModTODOS  := Padr( '*', Len( STC->TC_TIPMOD ) )
	Local lMNTDesTp  := FindFunction( 'MNTDesTpMd' )

	Dbselectarea(cTRB981)
	DbSetOrder( 1 ) // "TC_CODBEM+TC_COMPONE"
	For nI := 1 to Len(aCols)
		If !Empty(aCols[nI][1]) .AND. !aCols[nI][Len(aCols[nI])]
			lInformado := .T.
		EndIf

		//-------------------------------------------
		//Deleta registro da TRB quando é tipo saída
		//-------------------------------------------
		If aCols[nI][nPosMov] == "S" .And. !aCols[nI][Len(aCols[nI])] .And. DbSeek( cBEMPAI + aCOLS[nI][nPosBem] )
			RecLock((cTRB981),.F.)
			(cTRB981)->TIPOMOV := "S" // Saída
			MsUnlock()
		EndIf
	Next
	If !lInformado
		MsgStop(STR0030) //"Deverá ser informada pelo menos uma movimentação!"
		Return .F.
	Endif

	If TIPOACOM .And. !lCHKCON1
		If !MNTA098HIS(nCONTADOR,dDATAMOV1,cHORCON1,1,.F.)
			Return .F.
		Endif
	Endif
	If TIPOACOM2 .And. !lCHKCON2
		If !MNTA098HIS(nCONTADOR2,dDATAMOV2,cHORCON2,2,.F.)
			Return .F.
		Endif
	Endif

	lFound:=.T.
	//Zera os campos de OK como N no caso de estar preenchido como S
	Dbselectarea(cTRB982)
	DbGotop()
	While !Eof()
		(cTRB982)->TC_OK := "N"
		Dbselectarea(cTRB982)
		Dbskip()
	End

	//----------------------------------------------------------------------------
	//Recupera os registros da cTRB981 quando não está mais no acols
	//Isso ocorre quando  é alterado no acols o componente tipo saída
	//----------------------------------------------------------------------------
	DbSelectArea(cTRB981)
	DbSetOrder(01)
	DbGotop()
	While !Eof()
		If (cTRB981)->TIPOMOV == "S" .And. Ascan( aCols,{|x| x[ nPosBem ] == (cTRB981)->TC_COMPONE ;
							.And. !x[Len(x)] .And. x[ nPosMov ] == "S" }) == 0
			RecLock((cTRB981),.F.)
			(cTRB981)->TIPOMOV := ""
			MsUnlock()
		EndIf
		(cTRB981)->( dbSkip() )
	EndDo

	Dbselectarea(cTRB981)
	Dbsetorder(3)

	Dbselectarea(cTRB982)
	DbGotop()
	While !Eof()

		lFound := .T.
		Dbselectarea(cTRB981)
		If !Dbseek((cTRB982)->TC_CODBEM+(cTRB982)->TC_COMPONE)
			lFound := .F.
		ElseIf (cTRB981)->TIPOMOV == "S"
			lFound := .F.
		Else
			If !Empty((cTRB982)->TC_LOCALIZ)
				lFound := .F.
				While !Eof() .And. Alltrim((cTRB981)->TC_FAMBEM) == Alltrim((cTRB982)->TC_CODBEM) .And.;
				Alltrim((cTRB981)->TC_FAMCOMP) == Alltrim((cTRB982)->TC_COMPONE)

					If (cTRB982)->TC_OK  <> "S" .And. Empty( (cTRB981)->TIPOMOV )
						// Após release 12133 a busca será realizada primeramente com o tipo modelo informado
						// caso não encontre, irá buscar pelo tipo modelo '*'( TODOS )
						If (cTRB981)->TC_LOCALIZ == (cTRB982)->TC_LOCALIZ .And.;
						IIf( lTipMod, (cTRB981)->TC_TIPMOD == (cTRB982)->TC_TIPMOD .Or. (cTRB982)->TC_TIPMOD == cModTODOS, .T. )
							lFound := .T.
							(cTRB982)->TC_OK := 'S'
							Exit
						Endif
					Endif
					(cTRB981)->(Dbskip())
				End
			Endif
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Checagem da localizacao na Estrutura Padrao³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		If !lFound
			If (cTRB982)->TC_OBRIGAT == "S"
				If ST6->(Dbseek(xFilial('ST6')+Alltrim((cTRB982)->TC_COMPONE)))

					If TPS->(Dbseek(xFILIAL("TPS")+(cTRB982)->TC_LOCALIZ))
						cError := STR0014+ CHR(10)+CHR(10); //"Nao foi informado componente obrigatorio para: "
						+ STR0015+ Alltrim((cTRB982)->TC_COMPONE)+" - "+Alltrim(ST6->T6_NOME) + CHR(10)//" Familia........: "
						If lTipMod
							//" Tipo Modelo: " // "TODOS"
							cError += STR0029 + Alltrim((cTRB982)->TC_TIPMOD)+ " - " + IIf( lMNTDesTp, MNTDesTpMd( (cTRB982)->TC_TIPMOD ), NGSEEK("TQR",Alltrim((cTRB982)->TC_TIPMOD),1,"TQR_DESMOD")) + CHR(10)
						EndIf

						cError += STR0016+ Alltrim((cTRB982)->TC_LOCALIZ)+" - "+Alltrim(TPS->TPS_NOME) // "Localizacao:"
					Else
						cError := STR0014+ CHR(10)+CHR(10); //"Nao foi informado componente obrigatorio para: "
						+STR0015+ Alltrim((cTRB982)->TC_COMPONE)+" - "+Alltrim(ST6->T6_NOME) //" Familia........: "
						If lTipMod
							//" Tipo Modelo: " // "TODOS"
							cError += CHR(10)+ STR0029 + Alltrim((cTRB982)->TC_TIPMOD) + " - " + IIf( lMNTDesTp, MNTDesTpMd( (cTRB982)->TC_TIPMOD ), NGSEEK("TQR",Alltrim((cTRB982)->TC_TIPMOD),1,"TQR_DESMOD"))
						EndIf
					EndIf

				Else
					cError := " "
				Endif
				Help(" ",1,"FORAPADRA",,cError,5,1)
				lRet := .F.
				Exit
			Endif
		Endif

		//Checagem do contador na Estrutura Padrao

		If !Empty((cTRB981)->TC_COMPONE)
			Dbselectarea("ST9")
			Dbsetorder(1)
			Dbseek(xFilial('ST9')+(cTRB981)->TC_COMPONE)
			If (cTRB982)->TC_CONTADO == "S"
				If ST9->T9_TEMCONT == 'N'
					cError := Alltrim(ST9->T9_CODBEM) + "-" + Alltrim(ST9->T9_NOME)
					Help(" ",1,"CONTAPADRA",,cError,5,1)
					lRet := .F.
					Exit
				EndIf
			EndIf
		Endif

		Dbselectarea(cTRB982)
		Dbskip()
	End

	For nX := 1 To Len(aCols)
		If !ValLocSTZ(aCols[nX][nPosLoc],aCols[nX][nPosBem],cBemPai,aCols[nX][nPosTip])
			Return .F.
		Endif
	Next nX

Return lRET

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098VCO³ Autor ³ In cio Luiz Kolling   ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Consistencia dos contadores ( GET )                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ mnta098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTA098VCO(nCONTG,nTIPG)
	lCHKCON1 := If(nTIPG = 1,.F.,lCHKCON1)
	lCHKCON2 := If(nTIPG = 2,.F.,lCHKCON2)
	If !Positivo(nCONTG) .Or. !Naovazio(nCONTG) .Or. !CHKPOSLIM(cBEMPAI,nCONTG,nTIPG)
		Return .F.
	Endif
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098HIS³ Autor ³ In cio Luiz Kolling   ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Consistencia dos contadores ( gets / final )                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ mnta098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTA098HIS(nCONTAD,dDATACON,cVHORCON,nTIP,lCHKTIP)
	If !NGVALHORA(cVHORCON,.T.)
		Return .F.
	Endif
	If !NGCHKHISTO(cBEMPAI,dDATACON,nCONTAD,cVHORCON,nTIP,,.T.)
		Return .F.
	Endif
	If !NGVALIVARD(cBEMPAI,nCONTAD,dDATACON,cVHORCON,nTIP,.T.)
		Return .F.
	Endif
	If lCHKTIP
		If nTIP = 1
			lCHKCON1 := .T.
		Elseif nTIP = 2
			lCHKCON2 := .T.
		Endif
	Endif
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³M98ARQTRB   ³ Autor ³ Elisangela Costa    ³ Data ³ 26/10/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Monta a estrutura do bem pai repassado no parametro         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³cARQTRB = Nome do arquivo temporario a ser alimentado       ³±±
±±³          ³cBEMCOD = Codigo do bem pai                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA098                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M98ARQTRB(cARQTRB,cBEMCOD,lNALI)

	Local i := 0

	Dbselectarea("STC")
	Set Filter To STC->TC_FILIAL = xFilial("STC") .And. STC->TC_TIPOEST == "B"
	DbSeek(xFILIAL("STC")+cBEMCOD)
	While !Eof() .And.  STC->TC_FILIAL == xFILIAL("STC") .And.;
	AllTrim(STC->TC_CODBEM) == AllTrim(cBEMCOD)

		nREC  := Recno()
		cCOMP := STC->TC_COMPONE

		DbSelectArea(cARQTRB)
		DbAppend()
		For i := 1 To FCount()-1
			&(cARQTRB)->(FieldPut(i,STC->(FIELDGET(i))))
		Next i

		(cARQTRB)->( DBCommit() )

		DbSelectArea("STC")
		If Dbseek(xFILIAL("STC")+cCOMP)
			If lNALI
				MNT98FTRB(cCOMP,cARQTRB,cARQTRB)
			Else
				MNT98FTRB(cCOMP,cARQTRB)
			Endif
		EndIf
		DbGoto(nREC)
		DbSkip()
	End

	//Faz a leitura do arquivo temporario para gravar o tipo de controle do componente
	//(P,S,N,I)
	cARQTEMP1 := cARQTRB+"->TC_COMPONE"
	cARQTEMP2 := cARQTRB+"->TC_CONTRO"
	Dbselectarea(cARQTRB)
	Dbgotop()
	While !Eof()

		DbSelectArea("ST9")
		DbSetOrder(01)
		If DbSeek(xFilial("ST9")+&(cARQTEMP1))
			&(cARQTEMP2) := ST9->T9_TEMCONT
		EndIf
		DbSelectArea(cARQTRB)
		DbSkip()

	End

	Dbselectarea("STC")
	Dbsetorder(01)
	Set Filter To
	Dbseek(xFILIAL("STC"))
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNT98FTRB   ³ Autor ³Elisangela Costa     ³ Data ³ 26/10/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Inclui no arquivo de trabalho os itens filhos               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA098                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT98FTRB(cPAI,cARQTRB,cNALIAS)
	Local nREC,i := 0
	While !Eof() .And. AllTrim(STC->TC_CODBEM) == AllTrim(cPAI) .And. STC->TC_FILIAL == xFILIAL("STC")
		nREC  := Recno()
		cCOMP := STC->TC_COMPONE

		DbSelectArea(cARQTRB)
		DbAppend()
		For i := 1 To Fcount()-1
			&(cARQTRB)->(FieldPut(i,STC->(FIELDGET(i)) ))
		Next i

		(cARQTRB)->( DBCommit() )

		Dbselectarea("STC")
		If Dbseek(xFILIAL("STC")+cCOMP)
			If cNALIAS <> NIL
				MNTA098FIL(cCOMP,"B",cNALIAS)
			Else
				MNTA098FIL(cCOMP,"B")
			Endif
		EndIf
		DbGoto(nREC)
		DbSkip()

	End
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNT98CONSE  ³ Autor ³Elisangela Costa     ³ Data ³ 16/11/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Consistencia de entrada e saida da estrutura                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA098                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT98CONSE()

	Local cHORAENL,dDTENTLO,xy
	Local lRET    := .T.
	Local nPosBem := GdFieldPos("TZ_CODBEM") // 028257

	For xy := 1 TO Len(aCOLS)
		If !Empty(aCOLS[xy][1]) .And. !Empty(aCOLS[xy][2])
			If !aCOLS[xy][Len(aCOLS[xy])]

				If aCOLS[xy][1] = "E"

					DbSelectArea(cTRBY)
					DbSetOrder(02)
					If DbSeek(aCOLS[xy][2])

						cHORAENL := If(Alltrim(cHORCON1) = ":",cHRTIME1M,MTOH(HTOM(SubStr(cHORCON1,1,5))+1))

						If cHORAENL = "24:00"
							cHORAENL := "00:00"
						EndIf
						dDTENTLO := If(Alltrim(cHORAENL) = "00:00",dDATAMOV1+1,dDATAMOV1) //Data da entrada para outra localizacao

						If !NGCONSTZ(aCOLS[xy][2],dDTENTLO,cHORAENL,"E",aCOLS[xy][3])
							Return .F.
						EndIf

					Else
						cHORAENL := If(Alltrim(cHORCON1) = ":",cHRTIME,cHORCON1)

						If !NGCONSTZ(aCOLS[xy][2],dDATAMOV1,cHORAENL,"E",aCOLS[xy][3])
							Return .F.
						EndIf

					EndIf

				Else
					If !NGCONSTZ(aCOLS[xy][2],dDATAMOV1,If(Alltrim(cHORCON1) = ":",cHRTIME,cHORCON1), ,aCOLS[xy][3])
						Return .F.
					EndIf

					//--inicio--SS 028257 //
					If !NGLANCON(aCols[xy][nPosBem],dDATAMOV1,If(Alltrim(cHORCON1) = ":",cHRTIME,cHORCON1),cBEMPAI)
						Return .F.
					EndIf
					//---fim----SS 028257 //
				EndIf
			EndIf
		EndIf
	Next

	If ExistBlock("MNTA0982")
		lRET := ExecBlock("MNTA0982",.F.,.F.)
		If ValType(lRET) <> "L"
			lRET := .T.
		Endif
	Endif

Return lRET

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098FR ³ Autor ³In cio Luiz Kolling    ³ Data ³19/02/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se usa frota                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTA098FR()

	// A partir do release 12.1.33, o parâmetro MV_NGMNTFR será descontinuado
	// Haverá modulo específico para a gestão de Frotas no padrão do produto
	Local lRetS := IIf( FindFunction('MNTFrotas'), MNTFrotas(), GetNewPar('MV_NGMNTFR','N') == 'S' ) .And. GetNewPar('MV_NGPNEUS','N') == 'S'
	Local vRetS := {}

	If !lRel12133 .And. lRetS

		vRetS := NGCADICBASE('TQS_FILIAL','A','TQS')
		lRetS := If(!vRetS[1],.F.,.T.)

		If lRetS
			vRetS := NGCADICBASE('T9_STATUS','A','ST9')
			lRetS := If(!vRetS[1],.F.,.T.)
		Endif

		If lRetS
			lRetS := If(NGRETORDEM("TQS","TQS_FILIAL + TQS_CODBEM",.T.) = 0,.F.,.T.)
		Endif

	EndIf

Return lRetS

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098STA³ Autor ³In cio Luiz Kolling    ³ Data ³19/02/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Consistencia do status                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA098STA()
	Local cCatSta := ""

	cCatSta := NGSEEK("TQY",M->TQZ_STATUS,1,"TQY_CATBEM")
	If !(Empty(cCatSta) .Or. cCatSta == M->T9_CATBEM)
		MsgStop(STR0028) //"Categoria do Status não corresponde à categoria do Bem."
		Return .F.
	EndIf

	If !ExistCpo('TQY',M->TQZ_STATUS)
		Return .F.
	Else
		If M->TQZ_STATUS = cStatus
			MsgInfo(STR0023,STR0019)
			Return .F.
		EndIf
	Endif

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098TPM³ Autor ³In cio Luiz Kolling    ³ Data ³19/02/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Consistencia do tipo de movimento e/ou com status           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA098TPM()

	MNTA098ENT()

	If !Pertence("ES")
		Return .F.
	Endif
	If lFrota .And. nStatus > 0
		M->TQZ_STATUS := Space(Len(st9->t9_status))
		aCOLS[n][nStatus] := M->TQZ_STATUS
	Endif
	IF !Empty(aCols[n][2])
		M->TZ_CODBEM := Space(Len(STZ->TZ_CODBEM))
		aCols[n][2]  := M->TZ_CODBEM

		M->TZ_LOCALIZ := Space(Len(STZ->TZ_LOCALIZ))
		aCols[n][3]  := M->TZ_LOCALIZ

		M->TZ_CAUSA := Space(Len(STZ->TZ_CAUSA))
		aCols[n][4]  := M->TZ_CAUSA

		aCols[n][5]  := Space(40)

	EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNT098ST ³ Autor ³Thiago Olis Machado    ³ Data ³22/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Consistencia do tipo de movimento e/ou com status           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNT098ST()
	Local aArea := GetArea()

	If lFrota .And. nStatus > 0

		dbSelectArea("ST9")
		dbSetOrder(1)
		dbSeek(xFilial("ST9")+M->TZ_CODBEM)
		M->T9_CATBEM := ST9->T9_CATBEM
	EndIf

	RestArea(aArea)
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098DUP³ Autor ³ Marcos Wagner Junior  ³ Data ³08/09/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Nao permite bem duplicado							              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA098DUP()
	Local nI, _cBemAtual, lRet := .T.
	Local aAreaOld := GetArea()
	Local nTZCODBEM := aSCAN( aHEADER, {|x| Trim( Upper(x[2]) ) == "TZ_CODBEM"})

	If ReadVar() == "M->TZ_CODBEM"
		_cBemAtual := M->TZ_CODBEM
	Else
		_cBemAtual := aCols[n][nTZCODBEM]
	Endif

	If M->TZ_TIPOMOV == 'S'
		If !NGIFDBSEEK("STC",cBEMPAI+_cBemAtual,1)
			MsgStop(STR0007) //"Bem Não Existe na Estrutura"
			lRet := .F.
		Endif
	ElseIf M->TZ_TIPOMOV == 'N'

	Endif

	If lRet
		If !aCols[n][Len(aCols[n])] .AND. !Empty(_cBemAtual)

			For nI := 1 To Len(aCols)
				If !aCols[nI][Len(aCols[nI])] .AND. nI <> n
					If aCols[nI][nTZCODBEM] == _cBemAtual
						MsgStop(STR0027) //"Bem já foi informado!"
						lRet := .F.
						Exit
					Endif
				Endif
			Next

		Endif
	Endif

	RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNT98NPNEU ³ Autor ³ Marcos Wagner Junior  ³ Data ³06/06/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Faz o filtro da consulta "NGESTR"                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Filtro do SXB ("NGESTR")                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNT98NPNEU()
	Local lRET := .F.
	Local aOldArea := GetArea()

	DbSelectArea( "ST9" )
	DbSetOrder( 01 ) // T9_FILIAL+T9_CODBEM
	If NGCADICBASE( "T9_CATBEM","A","ST9",.F. )
		If DbSeek( xFilial( "ST9" ) + STC->TC_COMPONE ) .And. ST9->T9_CATBEM != '3'
			lRet := .T.
		Else
			lRet := .F.
		EndIf
	Else
		lRet := .T.
	EndIf

	RestArea(aOldArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNTA098ENT³ Autor ³Marcos Wagner Junuir   ³ Data ³06/10/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Troca o F3 do campo Bem de acordo com o tipo de movimentacao³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA098ENT()
	Local nTZCODBEM  := aSCAN( aHeader, {|x| Trim( Upper(x[2]) ) == "TZ_CODBEM"})
	Local nTZTIPOMOV := aSCAN( aHeader, {|x| Trim( Upper(x[2]) ) == "TZ_TIPOMOV"})

	If (ReadVar() != 'M->TZ_TIPOMOV' .AND. aCols[n][nTZTIPOMOV] == 'S') .OR. (ReadVar() == 'M->TZ_TIPOMOV' .AND. M->TZ_TIPOMOV == 'S')
		oGet:aInfo[nTZCODBEM][1] := 'NGESTR'
	Else
		oGet:aInfo[nTZCODBEM][1] := 'NGBENS'
	Endif

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ValLocSTZ   ³ Autor ³Jackson Machado      ³ Data ³ 26/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Consistˆncia da localizacao                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTA098                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ValLocSTZ(cLocal,cComp,cCodBem,cTip)
	Local lVeri := .T.
	Local i
	Local nPosMov := aSCAN( aHEADER, {|x| Trim( Upper(x[2]) ) == "TZ_TIPOMOV"})
	Local nPosLoc := aSCAN( aHEADER, {|x| Trim( Upper(x[2]) ) == "TZ_LOCALIZ"})
	Local nPosBem := aSCAN( aHEADER, {|x| Trim( Upper(x[2]) ) == "TZ_CODBEM"})
	Local nPos
	Local cFami   := ""
	Default cTip  := "E"

	If Empty(cLocal)
		cNOMLOCA := SPACE(40)
		Return .T.
	Endif


	If (nPos := aScan(aCols,{|x| x[nPosMov]+AllTrim(x[nPosLoc]) == "S"+AllTrim(cLocal) .and. !x[Len(x)]})) > 0
		lVeri := .F.
	Endif

	If lVeri
		dbSelectArea("ST9")
		dbSetOrder(1)
		If dbSeek(xFilial("ST9")+cComp)

			dbSelectArea("ST6")
			dbSetOrder(1)
			If dbSeek(xFilial("ST6")+ST9->T9_CODFAMI)
				cFami := ST6->T6_CODFAMI
				If ST6->T6_PERLOCA == "2"

					If !TPS->(Dbseek(xFILIAL("TPS")+cLocal))
						HELP(" ",1,"REGNOIS")
						Return .F.
					Endif

					dbSelectArea("STC")
					dbSetOrder(1)
					If dbSeek(xFilial("STC")+cCodBem)
						While !eof() .and. STC->TC_FILIAL+STC->TC_CODBEM == xFilial("STC")+cCodBem
							If Alltrim(cLocal) == Alltrim(STC->TC_LOCALIZ)
								dbSelectArea("ST9")
								dbSetOrder(1)
								If dbSeek(xFilial("ST9")+STC->TC_COMPONE)
									dbSelectArea("ST6")
									dbSetOrder(1)
									If dbSeek(xFilial("ST6")+ST9->T9_CODFAMI)
										If ST6->T6_CODFAMI == cFami
											HELP(" ",1,"LOCALJAEXI")
											Return .F.
										Endif
									Endif
								Endif
							Endif
							dbSelectArea("STC")
							dbSkip()
						End
					Endif
				EndIf
			EndIf
		EndIf
	Endif
	cFami := ""
	For i := 1 To Len(aCols)
		If !aCols[i][Len(aCols[i])] .and. AllTrim(aCols[i][nPosLoc]) == AllTrim(cLocal) .and. ;
		aCols[i][nPosMov] == "E" .and. i <> n .and. cTip == "E" .and. aCols[i][nPosBem] <> cComp
			dbSelectArea("ST9")
			dbSetOrder(1)
			If dbSeek(xFilial("ST9")+aCols[i][nPosBem])
				dbSelectArea("ST6")
				dbSetOrder(1)
				If dbSeek(xFilial("ST6")+ST9->T9_CODFAMI) .and. ST6->T6_PERLOCA == "2"
					cFami := ST6->T6_CODFAMI
				Endif
			Endif
			dbSelectArea("ST9")
			dbSetOrder(1)
			If dbSeek(xFilial("ST9")+cComp)
				dbSelectArea("ST6")
				dbSetOrder(1)
				If dbSeek(xFilial("ST6")+ST9->T9_CODFAMI) .and. ST6->T6_PERLOCA == "2"
					If !Empty(cFami)
						If cFami == ST9->T9_CODFAMI
							HELP(" ",1,"LOCALJAEXI")
							Return .F.
						Endif
					Endif
				Endif
			Endif
		Endif
	Next i

Return .T.

//---------------------------------------------------------- -----------
/*/{Protheus.doc} MNT98VLOC
Valida a localizacao na estrutura

@param

@author Tainã Alberto Cardoso
@since 23/12/13
/*/
//---------------------------------------------------------------------
Function MNT98VLOC()

	If Type("aCols") == "A"
		If aCols[n][1] = "E" .and. !empty(aCols[n][3])
			If !ExistCpo("TPS",M->TZ_LOCALIZ)
				Return .F.
			EndIf
		EndIf
	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNT098ADFL
Função que adiciona todos os componentes filhos ao componente pai na
estrutura da TRB.

@author Elynton Fellipe Bazzo
@since  06/09/14
/*/
//---------------------------------------------------------------------
Static Function MNT098ADFL()

	Local aArea := GetArea() //Salva o ambiente ativo;

	dbSelectArea( "STC" )
	dbSetOrder( 01 )
	dbSeek( xFilial( "STC" )+(cTRB981)->TC_COMPONE )
	While !Eof() .And. STC->TC_FILIAL == xFilial( "STC" ) .And. STC->TC_CODBEM == cBemSTZ

		RecLock((cTRB981),.T. )
		(cTRB981)->TC_FILIAL  := xFilial( "STC" ) //Filial da tabela de Estrutura;
		(cTRB981)->TC_CODBEM  := STC->TC_CODBEM //Componente pai;
		(cTRB981)->TC_COMPONE := STC->TC_COMPONE //Componente filho;
		Mnt090AdFi( (cTRB981)->TC_CODBEM,(cTRB981)->TC_COMPONE ) //Adiciona os componentes filhos no array "aOrdStruct", para controle da árvore ordenada;
		(cTRB981)->TC_SEQUEN  := Mnt090RtSq( (cTRB981)->TC_CODBEM,(cTRB981)->TC_COMPONE ) //Função que retorna o sequencial do componente na estrutura.
		(cTRB981)->(MsUnlock())

		dbSelectArea( "STC" )
		dbSkip()
	End While

	RestArea( aArea ) //Retorna o ambiente anterior;

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA098CCB
Carrega o valor do contador do bem se o campo estiver bloqueado pelo
parâmentro NGLANEX

@param cCobBem: Código do bem
@param dData: Data
@param cHora: Hora
@author Wexlei Silveira
@since 27/09/2016
@version MP11
@return True
/*/
//---------------------------------------------------------------------
Static Function MNTA098CCB(cCobBem, dData, cHora)

	If FindFunction("NGBlCont") .And. !NGBlCont( cCobBem )
		nCONTADOR := NGTpCont(cCobBem, dData, cHora)
	EndIf

Return .T.

//-----------------------------------------------------------------------
/*/{Protheus.doc} NG098FILTRA
Filtro para apresentacao dos pais das estruturas. Função utilizada no F3.

@author Diego de Oliveira
@since  22/03/17
/*/
//-----------------------------------------------------------------------
Function NG098FILTRA()

	Local aArea := GetArea()
	Local lOk

	//Quando encontrar o mesmo bem pai não apresentará novamente o registro
	lOk := UniqueKey({'TC_FILIAL','TC_CODBEM'},'STC') .And.;
			STC->TC_FILIAL == xFilial('STC') .And. STC->TC_TIPOEST == 'B'

	RestArea(aArea)

Return lOk

//-------------------------------------------------------------------
/*/{Protheus.doc} fMontaHea
Monta o aHeader conforme dados do banco de dados.

@author  Maicon André Pinheiro
@since   13/04/2018
/*/
//-------------------------------------------------------------------
Static Function fMontaHea()

	Local cTitle     := ""
	Local cCampo     := ""
	Local cPict      := ""
	Local cValid     := ""
	Local cUso       := ""
	Local cType      := ""
	Local cArq       := ""
	Local cContext   := ""
	Local cF3        := ""
	Local cWhen      := ""
	Local cX3NIV     := ""
	Local nTam       := 0
	Local nDec       := 0
	Local nInd       := 0
	Local aStruct    := {}
	Local aCposAlter := {}

	cTitle   := Posicione("SX3",2,"TZ_TIPOMOV","X3Titulo()")
	cCampo   := "TZ_TIPOMOV"
	cPict    := X3Picture("TZ_TIPOMOV")
	nTam     := TAMSX3("TZ_TIPOMOV")[1]
	nDec     := TAMSX3("TZ_TIPOMOV")[2]
	cValid   := "MNTA098TPM()"
	cUso     := Posicione("SX3",2,"TZ_TIPOMOV","X3_USADO")
	cType    := Posicione("SX3",2,"TZ_TIPOMOV","X3_TIPO")
	cArq     := Posicione("SX3",2,"TZ_TIPOMOV","X3_ARQUIVO")
	cContext := Posicione("SX3",2,"TZ_TIPOMOV","X3_CONTEXT")

	nUSADO := nUSADO + 1
	aAdd(aHEADER,{cTitle,cCampo,cPict,nTam,nDec,cValid,cUso,cType,cArq,cContext})

	cTitle   := Posicione("SX3",2,"TZ_CODBEM","X3Titulo()")
	cCampo   := "TZ_CODBEM"
	cPict    := X3Picture("TZ_CODBEM")
	nTam     := TAMSX3("TZ_CODBEM")[1]
	nDec     := TAMSX3("TZ_CODBEM")[2]
	cValid   := "MNTA098SBE() .AND. MNT098ST() .AND. MNTA098DUP()"
	cUso     := Posicione("SX3",2,"TZ_CODBEM","X3_USADO")
	cType    := Posicione("SX3",2,"TZ_CODBEM","X3_TIPO")
	cArq     := Posicione("SX3",2,"TZ_CODBEM","X3_ARQUIVO")
	cContext := Posicione("SX3",2,"TZ_CODBEM","X3_CONTEXT")

	nUSADO := nUSADO + 1
	aAdd(aHEADER,{cTitle,cCampo,cPict,nTam,nDec,cValid,cUso,cType,cArq,cContext})

	cTitle   := Posicione("SX3",2,"TZ_LOCALIZ","X3Titulo()")
	cCampo   := "TZ_LOCALIZ"
	cPict    := X3Picture("TZ_LOCALIZ")
	nTam     := TAMSX3("TZ_LOCALIZ")[1]
	nDec     := TAMSX3("TZ_LOCALIZ")[2]
	cValid   := "ValLocSTZ(M->TZ_LOCALIZ,aCols[n][2],cBemPai,aCols[n][1])"
	cUso     := Posicione("SX3",2,"TZ_LOCALIZ","X3_USADO")
	cType    := Posicione("SX3",2,"TZ_LOCALIZ","X3_TIPO")
	cArq     := Posicione("SX3",2,"TZ_LOCALIZ","X3_ARQUIVO")
	cContext := Posicione("SX3",2,"TZ_LOCALIZ","X3_CONTEXT")
	cF3      := Posicione("SX3",2,"TZ_LOCALIZ","X3_F3")
	cWhen    := Posicione("SX3",2,"TZ_LOCALIZ","X3_WHEN")

	nUSADO := nUSADO + 1
	aAdd(aHEADER,{cTitle,cCampo,cPict,nTam,nDec,cValid,cUso,cType,cArq,cContext,cF3,cWhen})

	cTitle   := Posicione("SX3",2,"TZ_CAUSA","X3Titulo()")
	cCampo   := "TZ_CAUSA"
	cPict    := X3Picture("TZ_CAUSA")
	nTam     := TAMSX3("TZ_CAUSA")[1]
	nDec     := TAMSX3("TZ_CAUSA")[2]
	cValid   := Posicione("SX3",2,"TZ_CAUSA","X3_VALID")
	cUso     := Posicione("SX3",2,"TZ_CAUSA","X3_USADO")
	cType    := Posicione("SX3",2,"TZ_CAUSA","X3_TIPO")
	cArq     := Posicione("SX3",2,"TZ_CAUSA","X3_ARQUIVO")
	cContext := Posicione("SX3",2,"TZ_CAUSA","X3_CONTEXT")
	cF3      := Posicione("SX3",2,"TZ_CAUSA","X3_F3")
	cWhen    := Posicione("SX3",2,"TZ_CAUSA","X3_WHEN")

	nUSADO := nUSADO + 1
	aAdd(aHEADER,{cTitle,cCampo,cPict,nTam,nDec,cValid,cUso,cType,cArq,cContext,cF3,cWhen})

	cTitle   := Posicione("SX3",2,"TZ_NOMCAUS","X3Titulo()")
	cCampo   := "TZ_NOMCAUS"
	cPict    := X3Picture("TZ_NOMCAUS")
	nTam     := TAMSX3("TZ_NOMCAUS")[1]
	nDec     := TAMSX3("TZ_NOMCAUS")[2]
	cValid   := Posicione("SX3",2,"TZ_NOMCAUS","X3_VALID")
	cUso     := Posicione("SX3",2,"TZ_NOMCAUS","X3_USADO")
	cType    := Posicione("SX3",2,"TZ_NOMCAUS","X3_TIPO")
	cArq     := Posicione("SX3",2,"TZ_NOMCAUS","X3_ARQUIVO")
	cContext := Posicione("SX3",2,"TZ_NOMCAUS","X3_CONTEXT")
	cF3      := Posicione("SX3",2,"TZ_NOMCAUS","X3_F3")
	cWhen    := Posicione("SX3",2,"TZ_NOMCAUS","X3_WHEN")

	nUSADO := nUSADO + 1
	aAdd(aHEADER,{cTitle,cCampo,cPict,nTam,nDec,cValid,cUso,cType,cArq,cContext,cF3,cWhen})

	If lFrota

		cTitle   := Posicione("SX3",2,"TQZ_STATUS","X3Titulo()")
		cCampo   := "TQZ_STATUS"
		cPict    := X3Picture("TQZ_STATUS")
		nTam     := TAMSX3("TQZ_STATUS")[1]
		nDec     := TAMSX3("TQZ_STATUS")[2]
		cValid   := "MNTA098STA()"
		cUso     := Posicione("SX3",2,"TQZ_STATUS","X3_USADO")
		cType    := Posicione("SX3",2,"TQZ_STATUS","X3_TIPO")
		cArq     := Posicione("SX3",2,"TQZ_STATUS","X3_ARQUIVO")
		cContext := Posicione("SX3",2,"TQZ_STATUS","X3_CONTEXT")
		cF3      := Posicione("SX3",2,"TQZ_STATUS","X3_F3")
		cWhen    := Posicione("SX3",2,"TQZ_STATUS","X3_WHEN")

		nUSADO := nUSADO + 1
		aAdd(aHEADER,{cTitle,cCampo,cPict,nTam,nDec,cValid,cUso,cType,cArq,cContext,cF3,cWhen})
	Endif

	//Preenche o array auxiliar aCposAlter...
	If ExistBlock("NG098CPU")
		aCposAlter := ExecBlock("NG098CPU",.F.,.F.)
	EndIf

	//Agrega no array aHeader os campos de Usuarios...
	If Len(aCposAlter) > 0

		dbSelectArea("STZ")
		aStruct := DBSTRUCT()
		nTam    := Len(aStruct)

		For nInd := 1 To nTam

			cCampo := aStruct[nInd,1]
			cUso   := Posicione("SX3",2,cCampo,"X3_USADO")
			cX3NIV := Posicione("SX3",2,cCampo,"X3_NIVEL")
			If X3USO(cUso) .And. cNivel >= cX3NIV .And. (Ascan(aCposAlter,AllTrim(cCampo)) > 0 )

				cTitle   := Posicione("SX3",2,"TQZ_STATUS","X3Titulo()")
				cPict    := X3Picture(cCampo)
				nTam     := TAMSX3(cCampo)[1]
				nDec     := TAMSX3(cCampo)[2]
				cValid   := Posicione("SX3",2,cCampo,"X3_VALID")
				cType    := Posicione("SX3",2,cCampo,"X3_TIPO")
				cArq     := Posicione("SX3",2,cCampo,"X3_ARQUIVO")
				cContext := Posicione("SX3",2,cCampo,"X3_CONTEXT")
				cF3      := Posicione("SX3",2,cCampo,"X3_F3")
				cWhen    := Posicione("SX3",2,cCampo,"X3_WHEN")

				nUsado++
				aAdd(aHeader,{cTitle,cCampo,cPict,nTam,nDec,cValid,cUso,cType,cArq,cContext,cF3,cWhen})
			EndIf

		Next nInd

	EndIf

Return aCposAlter
