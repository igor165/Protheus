#Include "SGAA110.ch"
#Include "Protheus.ch"
#Include "DbTree.ch"

//-------------------------------------------------------------------
/*/{Protheus.doc} SGAA110
Programa para Avaliar Aspectos e Impactos Ambientais

@type    function
@author  Thiago Olis Machado
@since   05/12/2003
@sample  SGAA110()

@return  Lógico, Sempre verdadeiro
/*/
//-------------------------------------------------------------------
Function SGAA110()

	SGAA110A()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Pro
Programa para Avaliar Aspectos e Impactos.

@type    function
@author  Thiago Olis Machado
@since   05/12/2003
@sample  Sg110Pro()
@param   cAlias, Caractere, Alias da tabela
@param   nRecno, Numérico, Recno do registro
@param   nOpcx, Numérico, Opção selecionada

@return  Numérico, Ação a se feita com o registro
/*/
//-------------------------------------------------------------------
Function Sg110Pro( cAlias, nRecno, nOpcx )

	Local aNGBEGINPRM := If(IsInCallStack("SGAA110"),{},NGBEGINPRM())//Armazena Varíaveis para devolução
	Local oMainWnd	 // Objeto para montar a janela de cadastro

	Local Ni,cGet
	Local cTitulo  := If(Type("cCadastro") == "C", cCadastro, STR0081)  // Titulo da janela ## "Desempenho Ambiental dos Aspectos e Impactos"
	Local nControl := 0
	Local nOK      := 0
	Local nOpca    := 0
	Local nCount   := 0
	Local nIdx 	   := 0
	Local aPages   := {}
	Local aTitles  := {}
	Local aVar     := {}
	Local oFont    := TFont():New("Arial",,-13,,.T.)
	Local oTempTRBB, oTempTRBA

	Private lCpy     := IsInCallStack("SG110CPY") .Or. ( Type("lSg110Cpy") == "L" .And. lSg110Cpy )
	Private lVisual := .F.
	Private aTrocaF3 := {}

	Private cLabel := ''
	Private cLabel1 := ''
	Private cLabel2 := ''
	Private cLabel3 := ''
	Private cLabel4 := ''

	Private cOrdem

	Private oGet,aHeader,nItens,oMark,oGet1,oMark1
	Private oTotal1, oTotal2, oTotal3, oTotal4, oTotal5
	Private oDlg, oDES01PNL

	Private nTotal1 := 0
	Private nTotal2 := 0
	Private nTotal3 := 0
	Private nTotal4 := 0
	Private nTotal5 := 0

	Private aColsImp := {}
	Private aCols1   := {}
	Private aMark    := {}
	Private aMark1   := {}
	Private lInverte := .F.
	Private lInverte1:= .F.

	Private cMarca  := GetMark()
	Private cMarca1 := GetMark()

	Private lQuery  := .T.
	Private lQuery1 := .T.

	Private n        := 1
	Private n1       := 1
	Private aLocal2  := {}
	Private aLocal   := {}
	Private cAval    := ""
	Private cAval1   := ""
	Private cDescAsp := ""
	Private cDescImp := ""

	Private oTree,oDesc,oClasse,oDesImp, oMenu, oMenu1
	Private M->TAB_CODIMP := Space( Len( TAE->TAE_CODIMP ) )
	Private cDesc    := Space( Len( TAF->TAF_NOMNIV ) ) //Descricao do pai da estrutura
	Private M->TAB_CODPLA   := Space( Len( TAA->TAA_CODPLA ) ) //Codigo do Plano de acao
	Private cDescPla := Space( Len( TAA->TAA_NOME ) ) //Descricao do Plano de acao
	Private M->TAB_CODEME  := Space( Len( TBB->TBB_CODPLA ) ) //Codigo do Plano Emergencial
	Private cDescEme := Space( Len( TBB->TBB_DESPLA ) ) //Descricao do Plano Emergencial
	Private cRespEme := Space( Len( TBB->TBB_RESPON ) ) //Codigo do Responsavel pelo Plano Emergencial
	Private cClasse  := Space( Len( TA8->TA8_DESCRI ) ) //Descricao da Classificacao
	Private cCodCla  := Space( Len( TA8->TA8_CODCLA ) ) //Codigo da Classificacao
	Private dDtImp   := cToD("  /  /  ")  //Data de Implantacao do Plano
	Private M->TAB_CODOBJ  := "" //Codigo do Objetivo
	Private cDesObj  := "" //Descricao do Objetivo
	Private dDtEmis  := dDataBase
	Private cCodEst  := "001"
	Private lArvore := .T.
	Private lWhen  := .F.
	Private nTotal   := 0
	Private cDocto   := ""
	Private aQDG     := {}
	Private aQdGDoc  := {}
	Private aQdjDoc  := {}
	Private aMarcado := {}

	Private oQDJ, oQDG, bQDGLine1, bQDGLine2, bQDJLine1, bQDJLine2
	Private lSituac := If(Inclui .OR. Altera,.T.,.F.)//Varáivel que verifica When dos campos Plano de Ação e Emergencial
	Private aVETINR := {}
	Private cCargo := ""

	Private M->TA4_CODASP := Space( Len( TA4->TA4_CODASP ) )
	Private M->TAB_DESCRI := If( nOpcx <> 3, TAB->TAB_DESCRI, Space(Len(TAB->TAB_DESCRI)) )
	Private M->TAB_SITUAC := "1"

	asMenu1 := {{STR0007,"Sg110Qdo()"}} // //"Visualizar Documento"

	If NGCADICBASE("TAB_SITUAC","A","TAB",.F.)
		lSituac := If(Inclui .OR. (Altera .And. TAB->TAB_SITUAC == "1" .Or. Empty(TAB->TAB_SITUAC) ),.T.,.F.)
		If nOpcx == 3
			M->TAB_SITUAC := "1"
		Else
			M->TAB_SITUAC := If(Empty(TAB->TAB_SITUAC),"1",TAB->TAB_SITUAC)
		EndIf
	EndIf

	If NGCADICBASE("TAB_CODOBJ","A","TAB",.F.)


		M->TAB_CODOBJ := Space( Len( TAB->TAB_CODOBJ ) )
		cDesObj := Space( TAMSX3("TAB_NOMOBJ")[1])

	EndIf

	dbSelectArea('TA3')
	dbSetOrder(01)
	If !dbSeek(xFilial("TA3"))
		MsgAlert(STR0076) //"É necessário ter pelo menos uma Fórmula cadastrada."
		Return .F.
	EndIf

	If nOpcx <> 3 .Or. lCpy
		M->TA4_CODASP := TAB->TAB_CODASP
		M->TAB_CODIMP := TAB->TAB_CODIMP
		M->TAB_DESCRI := TAB->TAB_DESCRI
		DbSelectArea('TA8')
		DbSetOrder(1)
		If DbSeek(xFilial('TA8')+TAB->TAB_CODCLA)
			cClasse := TA8->TA8_DESCRI
		EndIf

		M->TAB_CODPLA		 := TAB->TAB_CODPLA
		M->TAB_CODEME		 := TAB->TAB_CODEME
		nTotal1		 := TAB->TAB_RESULT
		nTotal2		 := TAB->TAB_RESUL2
		nTotal3		 := TAB->TAB_RESUL3
		nTotal4		 := TAB->TAB_RESUL4
		nTotal5		 := TAB->TAB_RESUL5

		If NGCADICBASE("TAB_CODOBJ","A","TAB",.F.)
			M->TAB_CODOBJ      := TAB->TAB_CODOBJ

			DbSelectArea('TBH')
			TBH->(DbSetOrder(1))
			If TBH->(Dbseek(xFilial('TBH')+M->TAB_CODOBJ))

				cDesObj := TBH->TBH_DESCRI

			EndIf

		EndIf

		If !lCpy
			dDtEmis		 := TAB->TAB_DTRESU
		EndIf

		cOrdem		 := TAB->TAB_ORDEM

		DbSelectArea('TA4')
		DbSetOrder(1)
		If DbSeek(xFilial('TA4')+M->TA4_CODASP)
			cDescAsp := TA4->TA4_DESCRI
		EndIf

		DbSelectArea('TAE')
		DbSetOrder(1)
		If DbSeek(xFilial('TAE')+M->TAB_CODIMP)
			cDescImp := TAE->TAE_DESCRI
		EndIf

		DbSelectArea('TAA')
		DbSetOrder(1)
		If Dbseek(xFilial('TAA')+M->TAB_CODPLA)
			cDescPla := TAA->TAA_NOME
			dDtImp   := TAA->TAA_DTIMPL
		EndIf

		dbSelectArea("TBB")
		dbSetOrder(1)
		If dbSeek(xFilial("TBB")+M->TAB_CODEME)
			cDescEme := TBB->TBB_DESPLA
			cRespEme := IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( TBB->TBB_RESPON, "TBB_RESPON" ), TBB->TBB_RESPON )
		EndIf
	EndIf

	If nOpcx == 3
		If lCpy
			cOrdemOld := Sg110Ordem()
		Else
			cOrdem := Sg110Ordem()
		EndIf
	EndIf

	TAF->(DbSeek(xFilial('TAF')+'001'))
	cDesc   := TAF->TAF_NOMNIV

	If !Sg030Get(nOpcx,.T.)
	Return .F.
	EndIf

	aTRB    := SGATRBEST(.T.)//Define estrutura do TRB
	cTRBSGA := aTRB[3]
	oTempSGA := FWTemporaryTable():New( cTRBSGA, aTRB[1] )
	For nIdx := 1 To Len( aTRB[2] )
		oTempSGA:AddIndex( RETASC( cValToChar( nIdx ) , 1 , .T. ), aTRB[2,nIdx] )
	Next nIdx
	oTempSGA:Create()

	aDbf := {}
	aAdd(aDBF,{ "TRB_CODAVA"   , "C" ,03, 0 })
	aAdd(aDBF,{ "TRB_CODIGO"   , "C" ,03, 0 })
	aAdd(aDBF,{ "TRB_PESO"     , "N" ,03, 0 })
	aAdd(aDBF,{ "TRB_RESULT"   , "N" ,03, 0 })

	oTempTRBB := FWTemporaryTable():New( "TRBB", aDBF )
	oTempTRBB:AddIndex( "1", {"TRB_CODAVA","TRB_CODIGO"} )
	oTempTRBB:Create()

	aDbf := {}
	aAdd(aDBF,{ "TRB_CODAVA"   , "C" ,03, 0 })
	aAdd(aDBF,{ "TRB_CODIGO"   , "C" ,03, 0 })
	aAdd(aDBF,{ "TRB_PESO"     , "N" ,03, 0 })
	aAdd(aDBF,{ "TRB_RESULT"   , "N" ,03, 0 })

	oTempTRBA := FWTemporaryTable():New( "TRBA", aDBF )
	oTempTRBA:AddIndex( "1", {"TRB_CODAVA","TRB_CODIGO"} )
	oTempTRBA:Create()

	Aadd(aTitles,OemToAnsi(STR0008)) // //"Aspecto"
	Aadd(aPages,"Header 1")
	nControl++

	Aadd(aTitles,OemToAnsi(STR0009))   // //"Impacto"
	Aadd(aPages,"Header 2")
	nControl++

	Aadd(aTitles,OemToAnsi(STR0082)) //"Plano de Ação"
	Aadd(aPages,"Header 3")
	nControl++

	Aadd(aTitles,OemToAnsi(STR0083)) //"Plano Emergencial"
	Aadd(aPages,"Header 4")
	nControl++

	If NGCADICBASE("TAB_CODOBJ","A","TAB",.F.)
		Aadd(aTitles,OemToAnsi(STR0121)) //"Objetivo"
		Aadd(aPages,"Header 5")
		nControl++
	EndIf

	Define MsDialog oDlg Title cTitulo From 9,0 To 51,120 Of oMainWnd

	oDES01PNL := TPanel():New(0,0,,oDlg,,,,CLR_BLACK,CLR_WHITE,0,0,.F.,.F.)
	oDES01PNL:Align := CONTROL_ALIGN_ALLCLIENT

	// Header

	@ 007,008 Say OemToAnsi(STR0010) Size 37,7 Of oDES01PNL Pixel Color CLR_HBLUE   //"Num. Ordem"
	If lCpy
		@ 005,047 MsGet cOrdemOld Size 038,08 Of oDES01PNL Pixel When .F.
	Else
		@ 005,047 MsGet cOrdem Size 038,08 Of oDES01PNL Pixel When .F.
	EndIf

	@ 007,100 Say OemToAnsi(STR0120) Size 57,7 Of oDES01PNL Pixel Color CLR_HBLUE //"Data do Desempenho"
	@ 005,155 MsGet dDtEmis Size 48,06 Of oDES01PNL Pixel Picture '99/99/9999' When .F. HASBUTTON

	@ 20,004 TO 21,468 Label '' of oDES01PNL Pixel

	@ 33,025 Say OemToAnsi(STR0012) Size 200,7 Of oDES01PNL Pixel Font oFont //"Estrutura Organizacional"

	oTree := DbTree():New(042, 005, 250, 180, oDES01PNL,,, .T.)
	oTree:bChange   := {|| SG110CTree(2) }

	NgPopUp(AsMenu1,@oMenu)
	oTree:bRClicked:= { |o,x,y| oMenu:Activate(x-175,y-330,oTree)}

	If nOpcx <> 3 .Or. lCpy
		Sg110Tree(.F.)                   // Construcao de componentes da tree
	EndIf

	// Se nao for inclusao, desativa 'action' de duplo clique
	If nOpcx == 3
		oTree:blDblClick := {|| Sg110ChangeBmp() }
	Else
		oTree:BlDblClick := {||  }
	EndIf

	NgPopUp(AsMenu,@oMenu1)
	oDES01PNL:bRClicked:= { |o,x,y| oMenu1:Activate(x,y,oDES01PNL)}

	nTree := aScan(aLocal2,{|x| x[2]})
	If nTree > 0
		cCargo := aLocal2[nTree][1]
	EndIf

	// Verifica item definido como 'Sendo Avaliado', e se o processo for de copia
	If lCpy .And. oTree:TreeSeek(cCargo)

		// Retira marcacao de nivel 'Sendo Avaliado'
		// Altera referencia do item da tree com situacao 'Sendo Avaliado' [ Folder Amarelo], para 'Presenca de Aspecto' [ Folder Vermelho ]
		oTree:ChangeBmp("Folder7","Folder8")
		(oTree:cArqTree)->T_CARGO := SubStr(oTree:getCargo(),1,6)+"2"

		nPos := aScan(aLocal2, {|x| x[1] == SubStr( oTree:GetCargo(), 1, 3 )})
		If nPos > 0
			aLocal2[nPos][2] := .F.
		Else
			aAdd( aLocal2,{ SubStr( oTree:GetCargo(), 1, 3 ),.F. } )
		EndIf
	EndIf
	oTree:TreeSeek("001")

	oFolder := TFolder():New(031,180,aTitles,aPages,oDES01PNL,,,,.T.,.F.,290,240,)
	oFolder:aDialogs[1]:oFont := oDlg:oFont
	oFolder:aDialogs[2]:oFont := oDlg:oFont
	oFolder:aDialogs[3]:oFont := oDlg:oFont
	oFolder:aDialogs[4]:oFont := oDlg:oFont

	@ 260,008 Bitmap oBmp1 Resource "Folder11" Size 8,8 Pixel Of oDES01PNL Noborder When .F.
	@ 262,018 Say OemToAnsi(STR0013) Size 37,7 Of oDES01PNL Pixel  // //"Normal"
	@ 260,052 Bitmap oBmp2 Resource "Folder8" Size 8,8 Pixel Of oDES01PNL Noborder When .F.
	@ 262,062 Say OemToAnsi(STR0014) Size 57,7 Of oDES01PNL Pixel  // //"Presenca de Aspecto"
	@ 260,128 Bitmap oBmp3 Resource "Folder6" Size 8,8 Pixel Of oDES01PNL Noborder When .F.
	@ 262,138 Say OemToAnsi(STR0015) Size 57,7 Of oDES01PNL Pixel  // //"Sendo Avaliado"

	// Folder 01

	@ 007,008 Say OemToAnsi(STR0008) Size 37,7 Of oFolder:aDialogs[1] Pixel Color CLR_HBLUE   // //"Aspecto"
	@ 005,047 MsGet M->TA4_CODASP Size 038,08 Of oFolder:aDialogs[1] Pixel F3 'TA4' Valid Sg110Desc() .And.;
																						Sg110Tree() .And.;
																						Sg110ReMark(nOpcx) When Inclui HasButton

	@ 19,008 Say OemToAnsi(STR0016) Size 37,7 Of oFolder:aDialogs[1] Pixel  // //"Descricao"
	@ 17,047 MsGet oDesc Var cDescAsp Size 240,08 Of oFolder:aDialogs[1] Pixel When .F.

	@ 30,004 TO 198,284 Label '' of oFolder:aDialogs[1] Pixel

	@ 35,008 Say OemToAnsi(STR0017) Size 84,7 Of oFolder:aDialogs[1] Pixel Font oFont   // //"Caracterizacoes"

	@ 45,008 ListBox oGet Fields aCols1[n][1],aCols1[n][2];
			Headers STR0018,STR0016 Of oFolder:aDialogs[1] Size 270,63 Pixel;   //### //"Avaliacao"###"Descricao"
			On Change ( Sg110LiOk(n,nOpcx) )
			oGet:bGotop    := { || n := 1 }
			oGet:bGoBottom := { || n := eval( oGet:bLogicLen ) }
			oGet:bSkip     := { | nwant, nold | nold := n , n += nwant,;
			n := max( 1, min( n, eval( oGet:bLogicLen ))),;
			n - nOld }
			oGet:bLogicLen := { || Len(aCols1) }
			oGet:cAlias    := "Array"

	If Len(aCols1) > 0
		cAval:= aCols1[1][1]
	EndIf
	Sg110Mark1(,,nOpcx,.T.)
	@ 120,008 Say OemToAnsi(STR0019) Size 57,7 Of oFolder:aDialogs[1] Pixel Font oFont   // //"Opcoes"

	oMark := MsSelect():New("TRBX","TRB_OK",,aMark,@lInverte,@cMarca1,{130,8,193,280},,,oFolder:aDialogs[1])
	oMark:oBrowse:lHasMark    := .T.
	oMark:oBrowse:lCanAllMark := .F.
	oMark:bMark := { || Sg110VaMar(cMarca1,oGet) }

	If Str(nOpcx,1) $ "2/5" .Or. M->TAB_SITUAC <> "1"
		oMark:oBrowse:lReadOnly := .T.
	EndIf

	@ 410,220 BTNBMP oBtn02 Resource "sduprop" Size 162,24 OF oFolder:aDialogs[1] Pixel ; //
							Action Sg110Demanda(1)

	oBtn02:cCaption:= PADR(OemToAnsi(STR0084),20) //"Requisito do Aspecto"
	oBtn02:cToolTip:= OemToAnsi(STR0021)          //"Visualiza as Demadas referentes ao aspecto..."

	// Folder 02

	Sg110Get(nOpcx)
	@ 007,008 Say OemToAnsi(STR0009) Size 37,7 Of oFolder:aDialogs[2] Pixel Color CLR_HBLUE   // //"Impacto"
	@ 005,047 MsGet M->TAB_CODIMP Size 038,08 Of oFolder:aDialogs[2] Pixel F3 'TAE' Valid Sg110DesIm() When Inclui HasButton

	@ 19,008 Say OemToAnsi(STR0016) Size 37,7 Of oFolder:aDialogs[2] Pixel  // //"Descricao"
	@ 17,047 MsGet oDesImp Var cDescImp Size 240,08 Of oFolder:aDialogs[2] Pixel When .F.

	@ 30,004 TO 198,284 Label '' of oFolder:aDialogs[2] Pixel

	@ 35,008 Say OemToAnsi(STR0022) Size 57,7 Of oFolder:aDialogs[2] Pixel Font oFont   // //"Avaliacoes"

	@ 45,008 ListBox oGet1 Fields aColsImp[n1][1],aColsImp[n1][2],aColsImp[n1][3],aColsImp[n1][4] ;
			Headers STR0018,STR0016,STR0023,STR0024 Of oFolder:aDialogs[2] Size 270,63 Pixel;   //######### //"Avaliacao"###"Descricao"###"Peso"###"Resultado"
			On Change ( Sg110LinOk(n1,nOpcx) )

			oGet1:bGotop    := { || n1 := 1 }
			oGet1:bGoBottom := { || n1 := eval( oGet1:bLogicLen ) }

			oGet1:bSkip     := { | nwant, nold | nold := n1 , n1 += nwant,;
			n1 := max( 1, min( n1, eval( oGet1:bLogicLen ))),;
			n1 - nOld }
			oGet1:bLogicLen := { || Len(aColsImp) }
			oGet1:cAlias    := "Array"

	Sg110Mark(,,nOpcx,.T.)
	@ 120,008 Say OemToAnsi(STR0019) Size 57,7 Of oFolder:aDialogs[2] Pixel Font oFont   // //"Opcoes"

	oMark1 := MsSelect():New("TRBG","TRB_OK",,aMark1,@lInverte1,@cMarca1,{130,8,193,280},,,oFolder:aDialogs[2])
	oMark1:oBrowse:lHasMark = .F.
	oMark1:oBrowse:lCanAllMark := .F.
	oMark1:bMark := { || Sg110ValMark(cMarca1,oGet1) }
	If Str(nOpcx,1) $ "2/5" .Or. M->TAB_SITUAC <> "1"
		oMark1:oBrowse:lReadOnly := .T.
	EndIf

	@ 410,220 BTNBMP oBtn03 Resource "sduprop" Size 162,24 OF oFolder:aDialogs[2] Pixel ;
							Action Sg110Demanda(2)

	oBtn03:cCaption:= PADR(OemToAnsi(STR0085),20) //"Requisito do Impacto"
	oBtn03:cToolTip:= OemToAnsi(STR0026) // //"Visualiza as Demadas referentes ao impacto..."

	// Folder 03

	@ 007,008 Say OemToAnsi(STR0031) Size 37,7 Of oFolder:aDialogs[3] Pixel  //'Plano Acao'
	@ 005,047 MsGet M->TAB_CODPLA Size 038,08 Of oFolder:aDialogs[3] Pixel F3 'TAA' Valid Sg110Pla() When lSituac HasButton

	@ 020,008 Say OemToAnsi(STR0032) Size 37,7 Of oFolder:aDialogs[3] Pixel  //'Descricao'
	@ 018,047 MsGet cDescPla Size 240,08 Of oFolder:aDialogs[3] Pixel When .F.

	@ 033,008 Say OemToAnsi(STR0033) Size 37,7 Of oFolder:aDialogs[3] Pixel  //'Data Impl.'
	@ 031,047 MsGet dDtImp Size 48,06 Of oFolder:aDialogs[3] Pixel When .F. HASBUTTON

	// Folder 04

	@ 007,008 Say OemToAnsi(STR0086) Size 37,7 Of oFolder:aDialogs[4] Pixel //"Plano Emerg."
	@ 005,047 MsGet M->TAB_CODEME Size 038,08 Of oFolder:aDialogs[4] Pixel F3 'TBB' Valid Sg110Eme() When lSituac HasButton

	@ 020,008 Say OemToAnsi(STR0032) Size 37,7 Of oFolder:aDialogs[4] Pixel  //'Descricao'
	@ 018,047 MsGet cDescEme Size 240,08 Of oFolder:aDialogs[4] Pixel When .F.

	@ 033,008 Say OemToAnsi(STR0087) Size 37,7 Of oFolder:aDialogs[4] Pixel //"Responsável"
	@ 031,047 MsGet cRespEme Size 240,08 Of oFolder:aDialogs[4] Pixel When .F.

	If NGCADICBASE("TAB_CODOBJ","A","TAB",.F.)

		// Folder 05

		@ 007,008 Say OemToAnsi(STR0121) Size 37,7 Of oFolder:aDialogs[5] Pixel //"Plano Emerg."
		@ 005,047 MsGet M->TAB_CODOBJ Size 038,08 Of oFolder:aDialogs[5] Pixel F3 'TBH' Valid Sga110Obj() When lSituac HasButton

		@ 020,008 Say OemToAnsi(STR0032) Size 37,7 Of oFolder:aDialogs[5] Pixel  //'Descricao'
		@ 018,047 MsGet cDesObj Size 240,08 Of oFolder:aDialogs[5] Pixel When .F.
	EndIf

	// Footer

	@ 275,004 TO 300,132 Label STR0027 of oDES01PNL Pixel //'Significancia'
	@ 285,008 MsGet oClasse Var cClasse Size 118,08 Of oDES01PNL Pixel When .F.

	@ 275,135 TO 300,468 Label STR0028 of oDES01PNL Pixel //'Resultado'
	Sg110Resu()

	@ 284.5,137 Button oBtn1 Prompt STR0029 Size 30,10 Of oDES01PNL Pixel Action Sg110Calc() // //"Calcular"
	oBtn1:SetEnable( !(Str(nOpcx,1) $ "2/5") )

	Activate MsDialog oDlg On Init Sg110Bar(oDlg, ;
											{|| lOk := .T., nOpca := 1, (lOk := .F., nOpca := 0) },;	// bOk
											{|| nOk := 0, oDlg:End(), nOpca := 0 },;																			// bCancel
											{|| lGrava := .F., IIf(!Sg110Memo(.T., nOpcx), oDlg:End(), .T.) }, @nOpca, nOpcx) Centered	// bCria


	dbSelectArea("TAB")
	dbSetOrder(1)
	If nOpca == 1
		EvalTrigger()
		confirmSX8()
	Else
		RollBackSX8()
	EndIf

	DbSelectArea('TRBB')
	DbCloseArea()

	DbSelectArea('TRBA')
	DbCloseArea()

	DbSelectArea('TRBG')
	DbCloseArea()

	DbSelectArea('TRBX')
	DbCloseArea()

	//Deleta o arquivo temporario fisicamente
	oTempSGA:Delete()
	oTempTRBB:Delete()
	oTempTRBA:Delete()

	NGRETURNPRM(aNGBEGINPRM)//Devolve Varíaveis armazenadas

Return nOpca

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Ordem
Programa para Avaliar Aspectos e Impactos.

@type    function
@author  Thiago Olis Machado
@since   05/12/2003
@sample  Sg110Ordem()

@return  Caractere, Numero da próxima ordem da TAB
/*/
//-------------------------------------------------------------------
Function Sg110Ordem()

	If lCpy
		cOrdemOld := GetSxENum("TAB", "TAB_ORDEM")
		cRetorno := cOrdemOld
	Else
		cOrdem := GetSxENum("TAB", "TAB_ORDEM")
		cRetorno := cOrdem
	EndIf

Return cRetorno

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Desc
Programa para Avaliar Aspectos e Impactos.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110Desc()

@return  Lógico, Sempre verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Desc()

	If !ExistCpo('TA4',M->TA4_CODASP)
		Return .F.
	EndIf

	TA4->(DbSeek(xFilial('TA4')+M->TA4_CODASP))
	cDescAsp := TA4->TA4_DESCRI
	oDesc:Refresh()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110DesIm
Programa para Avaliar Aspectos e Impactos.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110DesIm()

@return  Lógico, Sempre verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110DesIm()

	If Empty( M->TAB_CODIMP )
		Return .F.
	EndIf

	If !ExistCpo('TAE',M->TAB_CODIMP)
		Return .F.
	EndIf

	TAE->(DbSeek(xFilial('TAE')+M->TAB_CODIMP))
	cDescImp := TAE->TAE_DESCRI
	oDesImp:Refresh()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Get
Programa para Avaliar Aspectos e Impactos.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110Get()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Get(nOpcx)

	Local lFirst := .T.
	Local nPeso  := 0

	DbSelectArea('TA6')
	DbSetOrder(1)
	DbSeek(xFilial('TA6'))
	While TA6->(!Eof()) .And. xFilial('TA6') == TA6->TA6_FILIAL

		nPeso := 0
		If TA6->TA6_TIPO <> '2'
			Dbskip()
			Loop
		EndIf

		If lFirst
			cAval1 := TA6->TA6_CODAVA
			lFirst:= .F.
		EndIf

		DbSelectArea('TAD')
		DbSetOrder(1)
		If DbSeek(xFilial('TAD')+cOrdem+TA6->TA6_CODAVA)
			nPeso := (TA6->TA6_PESO*TAD->TAD_PESO)/100
		EndIf
		aAdd( aColsImp,{TA6->TA6_CODAVA,TA6->TA6_DESCRI,TA6->TA6_PESO,nPeso,.F.} )

		DbSelectArea('TA6')
		DbSkip()

	EndDo

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Mark
Monta um MarkBrowse com as respostas das avaliacoes.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110Mark()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Mark( cCodigo, cCodAva, nOpc, lPrim )

	Local cCheck := ''

	aDbf := {}
	aAdd(aDbf,{ "TRB_OK"       , "C" ,02, 0 })
	aAdd(aDBF,{ "TRB_CODAVA"   , "C" ,03, 0 })
	aAdd(aDBF,{ "TRB_CODIGO"   , "C" ,03, 0 })
	aAdd(aDBF,{ "TRB_DESCRI"   , "C" ,40, 0 })
	aAdd(aDBF,{ "TRB_PESO"     , "N" ,03, 0 })
	oTempTRBG := FWTemporaryTable():New( "TRBG", aDBF )
	oTempTRBG:AddIndex( "1", {"TRB_CODIGO","TRB_CODAVA"} )
	oTempTRBG:Create()

	aAdd(aMark1,{"TRB_OK"       ,NIL," ",})
	aAdd(aMark1,{"TRB_CODIGO"   ,NIL,STR0034 ,})     // //"Codigo"
	aAdd(aMark1,{"TRB_DESCRI"   ,NIL,STR0035 ,})     // //"Respostas"
	aAdd(aMark1,{"TRB_PESO"     ,NIL,STR0036 ,})     // //"Peso %"

	If cCodigo == Nil
		If nOpc <> 3 .OR. lCpy
			dbSelectArea('TAD')
			dbSetOrder(1)
			dbSeek(xFilial('TAD')+cOrdem)
			While !Eof() .And. TAD->TAD_ORDEM == cOrdem
				If TAD->TAD_INDICA == "2"
					dbSelectArea('TRBB')
					dbSetOrder(1)
					If !dbSeek( TAD->TAD_CODAVA + TAD->TAD_CODOPC )
						RecLock('TRBB',.T.)
						TRBB->TRB_CODAVA := TAD->TAD_CODAVA
						TRBB->TRB_CODIGO := TAD->TAD_CODOPC
						TRBB->TRB_PESO   := TAD->TAD_PESO
						TRBB->TRB_RESULT := (aColsImp[n1][3]*TAD->TAD_PESO)/100
						MsUnLock('TRBB')
					EndIf
				EndIf
				dbSelectArea('TAD')
				dbSkip()
			End
		EndIf
	EndIf

	DbSelectArea('TA7')
	DbSetOrder(1)
	DbSeek(xFilial('TA7')+cAval1)
	Do While !Eof() .And. xFilial('TA7') == TA7->TA7_FILIAL .And.;
		TA7->TA7_CODAVA == cAval1

		cCheck := ''

		dbSelectArea("TRBB")
		dbSetOrder(1)
		If dbSeek( cAval1 + TA7->TA7_CODOPC)
			cCheck := cMarca1
		Else
			cCheck := ''
		EndIf
		RecLock('TRBG',.T.)
		TRBG->TRB_OK      := cCheck
		TRBG->TRB_CODAVA  := TA7->TA7_CODAVA
		TRBG->TRB_CODIGO  := TA7->TA7_CODOPC
		TRBG->TRB_DESCRI  := TA7->TA7_OPCAO
		TRBG->TRB_PESO    := TA7->TA7_PESO
		MsUnLock('TRBG')

		DbSelectArea('TA7')
		DbSkip()
	EndDo


	TRBG->(DbGoTop())

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110ValMark
Atualiza o total do resultado de acordo com a opcao escolhida.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110ValMark()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110ValMark( cMarca1, oGet1 )

	Local cFieldMarca := "TRB_OK"
	Local nPos := 0

	nPos := Ascan(aColsImp,{|x| x[1] == cAval1})

	If IsMark(cFieldMarca,cMarca1,lInverte1)

		aColsImp[nPos][5] := .F.
		cCodigo1 := TRBG->TRB_CODIGO
		nPeso1   := TRBG->TRB_PESO
		nRecno1  := Recno()
		nCont1   := 0

		DbSelectArea('TRBG')
		DbGotop()
		Do While !Eof()
			If !Empty( TRBG->TRB_OK )
				nCont1 ++
			EndIf
			Dbskip()
		EndDo

		If nCont1 > 1
			DbSelectArea('TRBG')
			If DbSeek( cCodigo1 )
				RecLock('TRBG',.F.)
				TRBG->TRB_OK := Space(02)
				MsUnLock('TRBG')
			EndIf
		Else

			Sg110GraTrbB()
			oTotal1:Refresh()
			aColsImp[n1][4] := (aColsImp[n1][3]*nPeso1)/100
		EndIf

		DbGoTo(nRecno1)
		oMark1:oBrowse:Refresh()
		oGet1:Refresh()
	Else
		cCodigo1 := TRBG->TRB_CODIGO
		nPeso1   := TRBG->TRB_PESO
		nRecno1  := Recno()
		nCont1   := 0
		aColsImp[n1][4] := 0
		Sg110GraTrbB()
		oTotal1:Refresh()
		DbGoTo(nRecno1)
		oMark1:oBrowse:Refresh()
		oGet1:Refresh()
		aColsImp[nPos][5] := .T.
	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110LinOk
Monta o MarkBrowse de acordo com a selecao do getdados.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110LinOk()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110LinOk( x, nOpcx)

	//Local cCodAva := ''
	Local cCodigo := ''

	Sg110GraTrbB()
	cAval1:= aColsImp[x][1]
	If nOpcx == 3
	DbSelectArea('TRBB')
	DbSetOrder(1)
	If DbSeek( cAval1 )
		cCodigo := TRBB->TRB_CODIGO
	EndIf

	Else
	DbSelectArea('TRBB')
	DbSetOrder(1)
	If DbSeek( cAval1 )
		cCodigo := TRBB->TRB_CODIGO
	Else
		DbSelectArea('TA9')
		DbSetOrder(1)
		If DbSeek(xFilial('TA9')+M->TA4_CODASP+cAval1)
			cCodigo := TA9->TA9_CODOPC
		EndIf
	EndIf
	EndIf

	DbSelectArea('TRBG')
	DbCloseArea()
	Sg110Mark(cCodigo,cAval1)
	oMark1:oBrowse:Refresh()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Tree
Monta o MarkBrowse de acordo com a selecao do getdados.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110Tree()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Tree( lReset )

	Default lReset := .T.

	If Empty( M->TA4_CODASP )
	Return .F.
	EndIf

	If lReset
		aLocal  := {}

		oTree:Reset()

		If !Empty(oTree:cArqTree)
			dbSelectArea(oTree:cArqTree)
			ZAP
		EndIf

		dbSelectArea(cTRBSGA)
		ZAP
	EndIf

	// Definica dos componentes da tree
	SG110CTree(1, aMarcado, "SGA110CSAV")

	oTree:Refresh()
	oTree:SetFocus()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110GraTrbB
Grava TRB com as informacoes do MarkBrowse.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110GraTrbB()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110GraTrbB(nOpcx)

	If nOpcx <> 5
		DbSelectArea('TRBB')
		DbSetOrder(1)
		If dbSeek(TRBG->TRB_CODAVA)
			While !Eof() .And. TRBG->TRB_CODAVA == TRBB->TRB_CODAVA
				RecLock("TRBB",.F.)
				DbDelete()
				MsUnLock("TRBB")
				dbSkip()
			End
		EndIf
		DbSelectArea('TRBG')
		DbGotop()
		Do While !Eof()
			If !Empty( TRBG->TRB_OK )
				DbSelectArea('TRBB')
				DbSetOrder(1)
				If !DbSeek( TRBG->TRB_CODAVA + TRBG->TRB_CODIGO )
					RecLock('TRBB',.T.)
					TRBB->TRB_CODAVA := TRBG->TRB_CODAVA
					TRBB->TRB_CODIGO := TRBG->TRB_CODIGO
					TRBB->TRB_PESO   := TRBG->TRB_PESO
					TRBB->TRB_RESULT := (aColsImp[n1][3]*TRBG->TRB_PESO)/100
					MsUnLock('TRBB')
				EndIf
			EndIf
			DbSelectArea('TRBG')
			DbSkip()
		EndDo
	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Pla
Busca informacoes do Plano de Acao.

@type    function
@author  Thiago Olis Machado
@since   09/12/2003
@sample  Sg110Pla()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Pla()

	DbSelectArea('TAA')
	DbSetOrder(1)
	If Dbseek(xFilial('TAA')+M->TAB_CODPLA)
		If !Empty(TAA->TAA_STATUS) .And. TAA->TAA_STATUS <> "1"
			If !MsgYesNo("O Plano de Ação: "+M->TAB_CODPLA+" se encontra "+If(TAA->TAA_STATUS=="2","Finalizado.","Cancelado.")+Chr(13)+Chr(10);
				+"Deseja selecioná-lo assim mesmo?","Atenção")
				Return .F.
			EndIf
		EndIf
		cDescPla := TAA->TAA_NOME
		dDtImp   := TAA->TAA_DTIMPL
	Else
		cDescPla := Space(TAMSX3("TAA_NOME")[1])
		dDtImp   := Space(TAMSX3("TAA_DTIMPL")[1])
	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Eme
Busca informacoes do Plano Emergencial.

@type    function
@author  Thiago Olis Machado
@since   29/01/2008
@sample  Sg110Eme()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Eme()

	DbSelectArea('TBB')
	DbSetOrder(1)

	If Dbseek(xFilial('TBB')+M->TAB_CODEME)
		cDescEme := TBB->TBB_DESPLA
		cRespEme := IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( TBB->TBB_RESPON, "TBB_RESPON" ), TBB->TBB_RESPON )
	Else
		cDescEme := Space(TAMSX3("TBB_DESPLA")[1])
		cRespEme := IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( Space(TAMSX3("TBB_RESPON")[1]), "TBB_RESPON" ), Space(TAMSX3("TBB_RESPON")[1]) )
	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Resu
Inclui na tela campos de resultado da formula.

@type    function
@author  Thiago Olis Machado
@since   09/12/2003
@sample  Sg110Resu()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Resu()

	Local nColX1 := 410
	Local nColY1 := 420
	Local nColX2 := 350
	Local nColY2 := 360
	Local nColX3 := 290
	Local nColY3 := 300
	Local nColX4 := 230
	Local nColY4 := 240
	Local nColX5 := 170
	Local nColY5 := 180
	Local oLinhas1
	Private nCont  := 0

	DbSelectArea('TA3')
	DbSetOrder(1)
	DbSeek(xFilial('TA3'))
	Do While !Eof() .And. TA3->TA3_FILIAL == xFilial('TA3')
		nCont++
		If nCont == 1
			cLabel := TA3->TA3_CODFOR
			@ 285,nColX1 Say OemToAnsi(cLabel) Size 37,7 Of oDES01PNL Pixel
			@ 283,nColY1 MsGet oTotal1 Var nTotal1 Size 37,06 Of oDES01PNL Pixel When .F.  Hasbutton
			oTotal1:blDblClick := { || Sg110Form(nTotal1)}
		ElseIf nCont	== 2
			cLabel1 := TA3->TA3_CODFOR
			@ 285,nColX2 Say OemToAnsi(cLabel1) Size 37,7 Of oDES01PNL Pixel
			@ 283,nColY2 MsGet oTotal2 Var nTotal2 Size 37,06 Of oDES01PNL Pixel When .F. Hasbutton
			oTotal2:blDblClick := { || Sg110Form(nTotal2)}
		ElseIf nCont == 3
			cLabel2 := TA3->TA3_CODFOR
			@ 285,nColX3 Say OemToAnsi(cLabel2) Size 37,7 Of oDES01PNL Pixel
			@ 283,nColY3 MsGet oTotal3 Var nTotal3 Size 37,06 Of oDES01PNL Pixel When .F. Hasbutton
			oTotal3:blDblClick := { || Sg110Form(nTotal3)}
		ElseIf nCont == 4
			cLabel3 := TA3->TA3_CODFOR
			@ 285,nColX4 Say OemToAnsi(cLabel3) Size 37,7 Of oDES01PNL Pixel
			@ 283,nColY4 MsGet oTotal4 Var nTotal4 Size 37,06 Of oDES01PNL Pixel When .F. Hasbutton
			oTotal4:blDblClick := { || Sg110Form(nTotal4)}
		ElseIf nCont == 5
			cLabel4 := TA3->TA3_CODFOR
			@ 285,nColX5 Say OemToAnsi(cLabel4) Size 37,7 Of oDES01PNL Pixel
			@ 283,nColY5 MsGet oTotal5 Var nTotal5 Size 37,06 Of oDES01PNL Pixel When .F. Hasbutton
			oTotal5:blDblClick := { || Sg110Form(nTotal5)}
		EndIf

		DbSkip()
	EndDo

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110VaMar
Atualiza o total do resultado de acordo com a opcao escolhida.

@type    function
@author  Thiago Olis Machado
@since   27/11/2003
@sample  Sg110VaMar()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110VaMar( cMarca, oGet )

	Local cFieldMarca := "TRB_OK"

	IsMark(cFieldMarca,cMarca,lInverte)
	nRecno := Recno()
	Sg110GrTrb()
	dbGoTo(nRecno)
	oGet:Refresh()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110LiOk
Monta o MarkBrowse de acordo com a selecao do getdados.

@type    function
@author  Thiago Olis Machado
@since   27/11/2003
@sample  Sg110LiOk()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110LiOk( x, nOpcx )

	Local aCodigo := {}

	Sg110GrTrb(nOpcx)
	cAval:= aCols1[x][1]
	//If nOpcx == 3
	DbSelectArea('TRBA')
	DbSetOrder(1)
	If DbSeek( cAval )
		While !Eof() .And. TRBA->TRB_CODAVA == cAval
		Aadd(aCodigo,{TRBA->TRB_CODIGO})
			dbSkip()
		End
	EndIf

	dbSelectArea('TRBX')
	dbCloseArea()
	Sg110Mark1(aCodigo,cAval)
	oMark:oBrowse:Refresh()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110GrTrb
Grava TRB com as informacoes do MarkBrowse.

@type    function
@author  Thiago Olis Machado
@since   27/11/2003
@sample  Sg110GrTrb()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110GrTrb( nOpcx )

	If nOpcx <> 5
		dbSelectArea('TRBX')
		dbGotop()
		While !Eof()
			If !Empty( TRBX->TRB_OK )
				dbSelectArea('TRBA')
				dbSetOrder(1)
				If !dbSeek( TRBX->TRB_CODAVA + TRBX->TRB_CODIGO )
					RecLock('TRBA',.T.)
					TRBA->TRB_CODAVA := TRBX->TRB_CODAVA
					TRBA->TRB_CODIGO := TRBX->TRB_CODIGO
					MsUnLock('TRBA')
				EndIf
			Else
				dbSelectArea('TRBA')
				dbSetOrder(1)
				If dbSeek( TRBX->TRB_CODAVA + TRBX->TRB_CODIGO )
					RecLock('TRBA',.F.)
					dbDelete()
					MsUnLock('TRBA')
				EndIf
			EndIf
			dbSelectArea('TRBX')
			dbSkip()
		End
	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Mark1
Monta um MarkBrowse com as respostas das avaliacoes.

@type    function
@author  Thiago Olis Machado
@since   27/11/2003
@sample  Sg110Mark1()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Mark1( aCodigo, cCodAva, nOpc, lPrim )

	Local cCheck := ''
	Local oTempTRBX

	aDbf := {}
	aAdd(aDbf,{ "TRB_OK"       , "C" ,02, 0 })
	aAdd(aDBF,{ "TRB_CODAVA"   , "C" ,03, 0 })
	aAdd(aDBF,{ "TRB_CODIGO"   , "C" ,03, 0 })
	aAdd(aDBF,{ "TRB_DESCRI"   , "C" ,40, 0 })

	oTempTRBX := FWTemporaryTable():New( "TRBX", aDBF )
	oTempTRBX:AddIndex( "1", {"TRB_CODIGO","TRB_CODAVA"} )
	oTempTRBX:Create()

	aAdd(aMark,{"TRB_OK"       ,NIL," ",})
	aAdd(aMark,{"TRB_CODIGO"   ,NIL,STR0034 ,})  //"Codigo"
	aAdd(aMark,{"TRB_DESCRI"   ,NIL,STR0035 ,})  //"Respostas"

	If aCodigo == Nil
		If nOpc <> 3 .OR. lCpy
			dbSelectArea('TAD')
			dbSetOrder(1)
			dbSeek(xFilial('TAD')+cOrdem)
			While !Eof() .And. TAD->TAD_ORDEM == cOrdem
				If TAD->TAD_INDICA == "1"
					dbSelectArea('TRBA')
					dbSetOrder(1)
					If !dbSeek( TAD->TAD_CODAVA + TAD->TAD_CODOPC )
						RecLock('TRBA',.T.)
						TRBA->TRB_CODAVA := TAD->TAD_CODAVA
						TRBA->TRB_CODIGO := TAD->TAD_CODOPC
						MsUnLock('TRBA')
					EndIf
				EndIf
				dbSelectArea('TAD')
				dbSkip()
			End
		EndIf
	EndIf

	dbSelectArea('TA7')
	dbSetOrder(1)
	dbSeek(xFilial('TA7')+cAval)
	While !Eof() .And. xFilial('TA7') == TA7->TA7_FILIAL .And.;
		TA7->TA7_CODAVA == cAval

		cCheck := ''

		dbSelectArea("TRBA")
		dbSetOrder(1)
		If dbSeek(cAval+TA7->TA7_CODOPC)
			cCheck := cMarca1
		Else
			cCheck := ''
		EndIf
		RecLock('TRBX',.T.)
		TRBX->TRB_OK      := cCheck
		TRBX->TRB_CODAVA  := TA7->TA7_CODAVA
		TRBX->TRB_CODIGO  := TA7->TA7_CODOPC
		TRBX->TRB_DESCRI  := TA7->TA7_OPCAO
		MsUnLock('TRBX')

		dbSelectArea('TA7')
		dbSkip()
	End

	TRBX->(DbGoTop())

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Form
Busca a classe do resultado da formula.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110Form()

@return  Lógico, Verdadeiro se a classe não estiver vazia.
/*/
//-------------------------------------------------------------------
Function Sg110Form( nResultado )

	Local lRet := .T.

	aOldArea := GetArea()
	nResultado := If(valtype(nResultado) <> "N",0,nResultado)

	DbSelectArea('TA8')
	DbSetOrder(1)
	DbSeek(xFilial('TA8'))
	While TA8->(!Eof()) .And. xFilial('TA8') == TA8->TA8_FILIAL
		If nResultado >= TA8->TA8_LIMMIN .And. nResultado <= TA8->TA8_LIMMAX
			cCodCla := TA8->TA8_CODCLA
			cClasse := TA8->TA8_DESCRI
		EndIf
		TA8->(DbSkip())
	End

	If nResultado == 0
		cCodCla := ""
		cClasse := ""
	EndIf

	If Empty(cCodCla) .And. Empty(cClasse)
		ShowHelpDlg(STR0074,{STR0118},2,{STR0119},2)
		lRet := .F.
	EndIf

	oClasse:Refresh()
	RestArea(aOldArea)

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Calc
Calcula o valor das formulas.

@type    function
@author  Thiago Olis Machado
@since   08/12/2003
@sample  Sg110Calc()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Calc()

	Local xResult,cStrForm, cAlias, aAlias := {}, aAval := {}
	Local bBlock:=ErrorBlock(),bErro := ErrorBlock( { |e| ChecErro(e) } )
	Local cArquivo, i, cSavAlias := Alias(),nTotal := 0,nHif:=0,nQtd:=0,lSair:=.F.,cVar := ''
	Local Ind := 1,nCount := 0,lQuit  := .F.,cCampo := '',aCampo := {},nAval := 1,nFor := 1
	Local cFormError := ""
	Local aFormError := {}

	If IsInCallStack("SG110APRO")
		Return Sg110aCalc()
	EndIf

	DbSelectArea('TA3')
	DbSetOrder(1)
	DbSeek(xFilial('TA3'))
	Do While !Eof() .And. TA3->TA3_FILIAL == xFilial('TA3')

		cStrForm := Upper(TA3->TA3_FORMUL)
		aCampo := {}
		aAlias := {}
		cCampo := ''
		lSair  := .F.
		nTotal := 0
		Ind    := 1
		BEGIN SEQUENCE

		Do While !lSair
			nAcha := 0
			nAcha := AT("#",SubStr(cStrForm,nTotal+1,Len(cStrForm)))
			If nAcha > 0
				nTotal += nAcha
				nHif := nAcha
				aAdd( aAlias, { nAcha, nTotal } )
				nQtd ++
			Else
				lSair := .T.
			EndIf
		EndDo
		END SEQUENCE

		BEGIN SEQUENCE
		For i:= 1 to Len( aAlias ) - 1
			If Mod(i,2) <> 0
				aAdd( aAval, { SubStr( cStrForm, aAlias[ i ][ 2 ]+1, aAlias[ i + 1][ 1 ]-1) } )
			EndIf
		Next
		END SEQUENCE

		TexLinha := cStrForm

		BEGIN SEQUENCE
		For i := 1 To Len( TexLinha )
			If SubStr( TexLinha, Ind, 1 ) == '#'
				If nCount > 1
					nCount := 0
					nPos   := 0
					nPos1  := 0
					cAvaliacao := aAval[nAval][1]
					nPos1 := aScan( aColsImp,{|x| AllTrim(x[2]) == AllTrim(cAvaliacao) } )
					If nPos1 > 0
						aAdd( aCampo, { aColsImp[nPos1][4] } )
					EndIf

					If nPos1 == 0
						Help(" ",1,STR0074,,STR0037+cAvaliacao,3,1)  // //"Nao existe a avaliacao " //"ATENÇÃO"
						Return .F.
					EndIf
					Ind++
					nAval++
				EndIf
			EndIf
			If SubStr( TexLinha, Ind, 1 ) <> "#" .And. nCount == 0
				aAdd( aCampo, { SubStr( TexLinha, Ind, 1 ) } )
			Else
				nCount ++
			EndIf
			Ind++
		Next
		END SEQUENCE

		BEGIN SEQUENCE
		For i := 1 To Len( aCampo )
			If ValType( aCampo[i][1] ) == 'N'
				cCampo += Str( aCampo[i][1] )
			Else
				cCampo += aCampo[i][1]
			EndIf
		Next i
		xResult := &cCampo
		END SEQUENCE
		If ValType(xResult) <> "N"
			Aadd(aFormError, TA3->TA3_CODFOR )
		Else
			cResult := xResult
			If ValType(cResult) == "C"
				cResult := Val(cResult)
			EndIf
			lWhen := .T.
			If nFor == 1
				nTotal1 := cResult
				If(ValType(oTotal1) <> Nil , oTotal1:Refresh() , )
			ElseIf nFor == 2
				nTotal2 := cResult
				If(ValType(oTotal2) <> Nil , oTotal2:Refresh() , )
			ElseIf nFor == 3
				nTotal3 := cResult
				If(ValType(oTotal3) <> Nil , oTotal3:Refresh() , )
			ElseIf nFor == 4
				nTotal4 := cResult
				If(ValType(oTotal4) <> Nil , oTotal4:Refresh() , )
			ElseIf nFor == 5
				nTotal5 := cResult
				Exit
				If(ValType(oTotal5) <> Nil , oTotal5:Refresh() , )
			EndIf
		EndIf

		DbSelectArea(cSavAlias)
		ErrorBlock(bBlock)
		nFor++
		DbSelectArea("TA3")
		DbSkip()
	EndDo

	If !Sg110Form(nTotal1)
		Return .F.
	EndIf

	If !Empty(aFormError)
		For i := 1 To Len( aFormError )
			cFormError += CRLF + aFormError[i]
		Next
		ShowHelpDlg( STR0090 , 	{ STR0130 +cFormError} , 2 ,;//"Atenção!" ## "Existem fórmula(s) incorreta(s): "
									{ STR0131 } , 2 )				//"Para a confirmação da Avaliação do Desempenho, corrija a(s) fórmula(s)."
		Return .F.
	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110ChangeBmp
Troca a cor dos folders.

@type    function
@author  Thiago Olis Machado
@since   22/12/2003
@sample  Sg110ChangeBmp()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110ChangeBmp()

	Local nPos := 0
	Local lTAG := .F.
	Local lTAB := .F.
	Local j

	If oTree:nTotal <= 0
		MsgStop(STR0077,STR0078) //"É necessário escolher um Aspecto Ambiental para visualizar a Estrutura."###"Aviso"
		Return .F.
	EndIf

	DbSelectArea("TAG")
	DbSetOrder(1)
	If !DbSeek(xFilial("TAG")+M->TA4_CODASP+"001"+SubStr( oTree:GetCargo(), 1, 3 ))
		MsgStop(STR0091,STR0090) //"Escolha uma localização que esteja marcada como Presença de Aspecto."###"Atenção!"
		Return .F.
	Else
		DbSelectArea(oTree:cArqTree)
		If SubStr( oTree:getCargo(), 7, 1 ) = "2"

			// Verifica se ha um item 'Sendo Avaliado'
			For j := 1 To Len(alocal2)
				If alocal2[j][2]
					DbSelectArea(oTree:cArqTree)
					If alocal2[j][1] <> SubStr(oTree:GetCargo(),1,3)
						Help(" ",1,STR0090,,STR0092,3,1) //"Atenção!"###"Não é possível avaliar mais de uma localização."
						Return .F.
					EndIf
				EndIf
			Next j

			// Verifica se, atualmente, o nivel esta inativo
			If !Sg100NvAtv( Substr( oTree:GetCargo(), 1, 3 ), cCodest, .T. )
					Return .F.
				EndIf

			// Altera referencia do item da tree para a situacao 'Sendo Avaliado' [ Folder Amarelo]
			oTree:ChangeBmp("Folder5","Folder6")
			(oTree:cArqTree)->T_CARGO := SubStr(oTree:getCargo(),1,6)+"3"

			nPos := aScan(alocal2, {|x| x[1] == SubStr( oTree:GetCargo(), 1, 3 )})
			If nPos > 0
				alocal2[nPos][2] := .T.
			Else
				aAdd( alocal2,{ SubStr( oTree:GetCargo(), 1, 3 ),.T. } )
			EndIf

		Else
			// Altera referencia do item da tree para a situacao 'Presenca de Aspecto' [ Folder Vermelho ]
			oTree:ChangeBmp('Folder7','Folder8')
			(oTree:cArqTree)->T_CARGO := SubStr(oTree:getCargo(),1,6)+"2"

			nPos := aScan(alocal2, {|x| x[1] == SubStr( oTree:GetCargo(), 1, 3 )})
			If nPos > 0
				alocal2[nPos][2] := .F.
			Else
				aAdd( alocal2,{ SubStr( oTree:GetCargo(), 1, 3 ),.F. } )
			EndIf
		EndIf
	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110ReMark
Marca a primeira obcao de Caracterizacao se houver.

@type    function
@author  Thiago Olis Machado
@since   07/01/2004
@sample  Sg110ReMark()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110ReMark( nOpcx )

	If nOpcx == 3
		DbSelectArea('TRBA')
		ZAP
	EndIf

	DbSelectArea('TA9')
	DbSetOrder(1)
	DbSeek(xFilial('TA9')+M->TA4_CODASP)
	While !Eof() .And. TA9->TA9_CODASP == M->TA4_CODASP
		DbSelectArea('TRBA')
		DbSetOrder(1)
		If !DbSeek( TA9->TA9_CODAVA + TA9->TA9_CODOPC )
			RecLock('TRBA',.T.)
			TRBA->TRB_CODAVA := TA9->TA9_CODAVA
			TRBA->TRB_CODIGO := TA9->TA9_CODOPC
			MsUnLock('TRBA')
		EndIf
		DbSelectArea('TA9')
		DbSkip()
	End

	dbSelectArea('TRBX')
	dbGoTop()
	While !Eof()
		RecLock('TRBX',.F.)
			TRBX->TRB_OK := ''
		MsUnLock('TRBX')
		dbSelectArea("TRBX")
		dbSkip()
	End

	dbSelectArea('TA9')
	dbSetOrder(1)
	dbSeek(xFilial('TA9')+M->TA4_CODASP)
	While !Eof() .And. TA9->TA9_FILIAL == xFilial('TA9') .And. TA9->TA9_CODASP == M->TA4_CODASP

		dbSelectArea('TRBX')
		dbSetOrder(1)
		If dbSeek(TA9->TA9_CODOPC+TA9->TA9_CODAVA)
				RecLock('TRBX',.F.)
			TRBX->TRB_OK := cMarca1
			MsUnLock('TRBX')
		EndIf
		dbSelectArea('TA9')
		dbSkip()

	End

	TRBX->(DbGoTop())
	oMark:oBrowse:Refresh()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Obrig
Faz validacoes dos campos obrigatorios e grava.

@type    function
@author  Thiago Olis Machado
@since   07/01/2004
@sample  Sg110Obrig()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Obrig( nOpcx, lFinal )

	Local aOldArea := GetArea() // Guarda variaveis de alias e indice

	Default lFinal := .F.//Indica se o desempenho está sendo finalizado

	If Empty( M->TA4_CODASP )
		ShowHelpDlg(STR0074,{STR0114},2,{STR0115},2)
		Return .F.
	EndIf

	If Empty( M->TAB_CODIMP )
		ShowHelpDlg(STR0074,{STR0116},2,{STR0117},2)
		Return .F.
	EndIf

	If nTotal1 == 0
		ShowHelpDlg(STR0074,{STR0038},2,{STR0112},2)//Help(" ",1,STR0074,,STR0038,3,1)  //### //"Avaliacao sem resultado" //"ATENÇÃO"
		Return .F.
	EndIf

	If Len( aLocal2 ) == 0
		Help(" ",1,STR0074,,STR0079,3,1) //"Escolha em que área o Aspecto está sendo avaliado."###"Atenção"
		Return .F.
	Else
		nPos := aScan(aLocal2, {|x| x[2] == .T.})
		If nPos == 0
			Help(" ",1,STR0074,,STR0079,3,1) //"Escolha em que área o Aspecto está sendo avaliado."###"Atenção"
			Return .F.
		EndIf
	EndIf

	If Empty(cCodCla) .And. Empty(cClasse)
		ShowHelpDlg(STR0074,{STR0118},2,{STR0119},2)
		cCodCla := ""
		cClasse := ""
		Return .F.
	EndIf

	If !lFinal

		If nOpcx != 5
			If !Sg110Calc()
				Return .F.
			EndIf
		EndIf

		If !Sg110Grava(nOpcx)
			Return .F.
		EndIf

	EndIf

	RestArea(aOldArea)

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Grava
Grava a avaliacao.

@type    function
@author  Thiago Olis Machado
@since   08/01/2004
@sample  Sg110Grava()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Grava( nOpcx )

	Local nPos, cLocal, cOrd
	Local cCodClasse := ''
	Local lCampSit := NGCADICBASE("TAB_SITUAC","A","TAB",.F.)

	If lCpy
		cOrd := cOrdemOld
	Else
		cOrd := cOrdem
	EndIf

	nPos := aScan(aLocal2, {|x| x[2] == .T.})
	cLocal := aLocal2[nPos][1]

	//Manipula a tabela TAB

	If nOpcx == 3
		//Procura uma avaliacao semelhante
		dbSelectArea("TAB")
		dbSetOrder(6)
		If dbSeek(xFilial("TAB")+"001"+cLocal+M->TA4_CODASP+M->TAB_CODIMP)
			If !MsgYesNo(STR0093+TAB->TAB_ORDEM+STR0094+CHR(13)+CHR(10)+STR0095,STR0090) //"Já existe uma avaliação ("###") com a mesma chave (Nivel+Aspecto+Impacto)."###"Deseja finalizá-la e tornar a avaliação atual como vigente?"###"Atenção!"
				Return .F.
			Else
				//Cancela avaliação antiga gerando histórico
				If !Sg110GraHis(TAB->TAB_ORDEM)
					Return .F.
				EndIf
			EndIf
		EndIf
	EndIf

	DbSelectArea('TAA')
	DbSetOrder(1)
	If Dbseek(xFilial('TAA')+M->TAB_CODPLA)
		If !Empty(TAA->TAA_STATUS) .And. TAA->TAA_STATUS <> "1"
			If !MsgYesNo("O Plano de Ação: "+M->TAB_CODPLA+" se encontra "+If(TAA->TAA_STATUS=="2","Finalizado.","Cancelado.")+Chr(13)+Chr(10)+;
								"Deseja gravá-lo assim mesmo?","Atenção")
				M->TAB_CODPLA := Space( Len( TAA->TAA_CODPLA ) )
			EndIf
		EndIf
	EndIf

	DbSelectArea('TAB')
	DbSetOrder(1)
	If DbSeek(xFilial('TAB')+cOrd+M->TA4_CODASP)
		RecLock('TAB',.F.)
	Else
		RecLock('TAB',.T.)
	EndIf

	If nOpcx <> 5
		TAB->TAB_FILIAL := xFilial('TAB')
		TAB->TAB_CODASP := M->TA4_CODASP
		TAB->TAB_CODIMP := M->TAB_CODIMP
		TAB->TAB_CODPLA := M->TAB_CODPLA
		TAB->TAB_CODEME := M->TAB_CODEME
		TAB->TAB_RESULT := nTotal1
		TAB->TAB_RESUL2 := nTotal2
		TAB->TAB_RESUL3 := nTotal3
		TAB->TAB_RESUL4 := nTotal4
		TAB->TAB_RESUL5 := nTotal5
		TAB->TAB_CODEST := '001'
		TAB->TAB_CODNIV := cLocal
		TAB->TAB_DTRESU := dDtEmis
		TAB->TAB_ORDEM  := cOrd
		TAB->TAB_DESCRI := M->TAB_DESCRI

		If NGCADICBASE("TAB_CODOBJ","A","TAB",.F.)

			TAB->TAB_CODOBJ := M->TAB_CODOBJ

		EndIf

		If lCampSit
			TAB->TAB_SITUAC := M->TAB_SITUAC
		EndIf
		aAreaTAB := TAB->(GetArea())
		DbSelectArea('TA8')
		DbSetOrder(2)
		If DbSeek(xFilial('TA8')+cClasse)
			TAB->TAB_CODCLA := TA8->TA8_CODCLA
		EndIf
		RestArea(aAreaTAB)
	Else
		DbDelete()
	EndIf

	MsUnLock('TAB')

	//Manipula a tabela TAD

	DbSelectArea('TAD')
	DbSetOrder(1)
	dbSeek(xFilial('TAD')+cOrd)
	While !Eof() .And. TAD->TAD_FILIAL == xFilial('TAD') .And. TAD->TAD_ORDEM == cOrd
		RecLock('TAD',.F.)
		DbDelete()
		MsUnLock('TAD')
		TAD->(dbSkip())
	End

	DbSelectArea("TRBA")
	DbGoTop()
	Do While !Eof()

		DbSelectArea('TAD')
		DbSetOrder(1)
		If !DbSeek( xFilial('TAD') + cOrd + TRBA->TRB_CODAVA + TRBA->TRB_CODIGO)
			RecLock('TAD',.T.)
		Else
			RecLock('TAD',.F.)
		EndIf
		If nOpcx == 5
			DbDelete()
		Else
			TAD->TAD_FILIAL := xFilial('TAD')
			TAD->TAD_CODAVA := TRBA->TRB_CODAVA
			TAD->TAD_CODOPC := TRBA->TRB_CODIGO
			TAD->TAD_PESO   := TRBA->TRB_PESO
			TAD->TAD_INDICA := '1'
			TAD->TAD_ORDEM  := cOrd
		EndIf
		MsUnLock('TAD')

		DbSelectArea("TRBA")
		DbSkip()
	EndDo

	DbSelectArea("TRBB")
	DbGoTop()
	Do While !Eof()

		DbSelectArea('TAD')
		DbSetOrder(1)
		If !DbSeek( xFilial('TAD') + cOrd + TRBB->TRB_CODAVA)
			RecLock('TAD',.T.)
		Else
			RecLock('TAD',.F.)
		EndIf
		If nOpcx == 5
			DbDelete()
		Else
			TAD->TAD_FILIAL := xFilial('TAD')
			TAD->TAD_CODAVA := TRBB->TRB_CODAVA
			TAD->TAD_CODOPC := TRBB->TRB_CODIGO
			TAD->TAD_PESO   := TRBB->TRB_PESO
			TAD->TAD_INDICA := '2'
			TAD->TAD_ORDEM  := cOrd
		EndIf
		MsUnLock('TAD')

		DbSelectArea("TRBB")
		DbSkip()
	EndDo
	CursorArrow()
	Sg110ResGra()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Demanda
Visualiza documento relacionado a estrutura.

@type    function
@author  Thiago Olis Machado
@since   12/04/2004
@sample  Sg110Demanda()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Demanda( nTipo )

	Local oDlgDem,oGet
	Local aNoFields := {}
	Private aCols := {},aHeader := {}

	If nTipo = 1

		If Empty( M->TA4_CODASP )
			Return .T.
		EndIf

		aAdd(aNoFields, 'TAJ_CODASP')
		cQuery := "SELECT * FROM "+RetSqlName("TAJ")+" TAJ WHERE TAJ.TAJ_FILIAL = '"+xFilial("TAJ")+"' AND TAJ.TAJ_CODASP = '"+M->TA4_CODASP+"' AND TAJ.D_E_L_E_T_ <> '*'"
		FillGetDados( 4, "TAJ", 1, xFilial("TAJ")+M->TA4_CODASP, {|| "TAJ->TAJ_FILIAL + TAJ->TAJ_CODASP"}, {|| .T.},aNoFields,,,cQuery)

		cTitulo := STR0096 //"Requisitos do Aspecto"

		aTrocaF3 := {}
		AAdd(aTrocaF3,{"TAJ_CODLEG",""})

	Else

		If Empty( M->TAB_CODIMP )
			Return .T.
		EndIf

		aAdd(aNoFields, 'TAI_CODIMP')
		cQuery := "SELECT * FROM "+RetSqlName("TAI")+" TAI WHERE TAI.TAI_FILIAL = '"+xFilial("TAI")+"' AND TAI.TAI_CODIMP = '"+M->TAB_CODIMP+"' AND TAI.D_E_L_E_T_ <> '*'"
		FillGetDados( 4, "TAI", 1, xFilial("TAI")+M->TAB_CODIMP, {|| "TAI->TAI_FILIAL + TAI->TAI_CODIMP"}, {|| .T.},aNoFields,,,cQuery)

		cTitulo := STR0097 //"Requisitos do Impacto"

		aTrocaF3 := {}
		AAdd(aTrocaF3,{"TAI_CODLEG",""})

	EndIf

	Sg110NomDem()

	Define MsDialog oDlgDem Title cTitulo From 9,0 To 28,79 Of oMainWnd

	oPanelPai := TPanel():New(0,0,,oDlgDem,,,,CLR_BLACK,CLR_WHITE,0,0,.F.,.F.)
	oPanelPai:Align := CONTROL_ALIGN_ALLCLIENT

	If Empty(aCols)
	aCols := BlankGetd(aHeader)
	EndIf

	n := Len(aCols)
	oGet:= MsGetDados():New(05,0,125,315,2,"AllwaysTrue","AllwaysTrue",,.F.,,1,,,,,,,oPanelPai)
	oGet:oBrowse:Default()
	oGet:oBrowse:Refresh()

	Activate Dialog oDlgDem On Init (EnchoiceBar(oDlgDem,{|| lOk:=.T.,oDlgDem:End()},{|| nOk:= 0,oDlgDem:End()})) Centered

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Bar
EnchoiceBar especifica do Sgaa110.

@type    function
@author  Thiago Olis Machado
@since   13/04/2004
@sample  Sg110Bar()
/*/
//-------------------------------------------------------------------
Function Sg110Bar( oDlg, bOk, bCancel, bCria, nOpca, nOpcx )

	Local aButtons := { {"PEDIDO",bCria,STR0113 }} //### //"Observacoes"

	If NGCADICBASE("TAB_SITUAC","A","TAB",.F.)
		If M->TAB_SITUAC == "1" .And. !IsInCallStack("SG110CPY")//Verifica se está pendente e não é cópia
			Aadd(aButtons,{"PMSSETABOT",{|| nOpca := 1, If(Sg110Sit(nOpcx), oDlg:End(), (lOk := .F., nOpca := 0)) },STR0098}) //"Aprovar"
		EndIf
	EndIf
	If nOpcx == 5 .or. nOpcx == 2
		aButtons := {}
	EndIf

Return ( EnchoiceBar(oDlg,bOk,bCancel,,aButtons) )

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Memo
Mostra um memo para digitacao das observacoes referentes a Avaliação.

@type    function
@author  Thiago Olis Machado
@since   13/04/2004
@sample  Sg110Memo()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Memo( lEdita, nOpcx )

	Local oDlgMem
	Local oFontMet			:= TFont():New("Courier New",6,0)
	Local oFontDialog		:= TFont():New("Arial",6,15,,.T.)
	Local oTexto
	Local cTexto 			:= M->TAB_DESCRI
	Local nOpcC 			:= 0
	Local cTit  			:= OemtoAnsi(STR0045)  //"OBSERVACAO"
	Local cCab  			:= OemtoAnsi(STR0046)  //"Observacoes referente a Avaliacao"
	Local cCod  			:= STR0047+cOrdem + STR0048 + DtoC(dDtEmis) //### //"Ordem:  "###"        Data da Avaliacao: "

	Private lEdit := Iif(lEdita == NIL, .T., lEdita)

		DEFINE MSDIALOG oDlgMem FROM 62,100 TO 320,610 TITLE cCab PIXEL FONT oFontDialog

		@ 003, 004 TO 027, 250 LABEL cTit OF oDlgMem PIXEL
		@ 040, 004 TO 110, 250	OF oDlgMem PIXEL

		@ 013, 010 MSGET cCod WHEN .F. SIZE 185, 010 OF oDlgMem PIXEL

		If lEdit
		@ 050, 010 GET oTexto VAR cTexto MEMO NO VSCROLL SIZE 238, 051 OF oDlgMem PIXEL
		Else
		@ 050, 010 GET oTexto VAR cTexto MEMO READONLY NO VSCROLL  SIZE 238, 051 OF oDlgMem PIXEL
		EndIf

		oTexto:SetFont(oFontMet)

		DEFINE SBUTTON FROM 115,190 TYPE 1 ACTION (nOpcC := 1,oDlgMem:End()) ENABLE OF oDlgMem
		DEFINE SBUTTON FROM 115,220 TYPE 2 ACTION (nOpcC := 2,oDlgMem:End()) ENABLE OF oDlgMem

		ACTIVATE MSDIALOG oDlgMem CENTERED

	If nOpcC == 1
	M->TAB_DESCRI := cTexto
	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Resp
Tela de participantes do processo.

@type    function
@author  Thiago Olis Machado
@since   13/04/2004
@sample  Sg110Resp()

@return  Nil, Sempe nulo
/*/
//-------------------------------------------------------------------
Function Sg110Resp()

	Local oBtn1
	Local oBtn3
	Local oBtn4
	Local oBtn5
	Local oBtn6
	Local oBtn7
	Local oBtn8
	Local aFuncao  := {}
	Local oOk      := LoadBitmap( GetResources(), "ENABLE" )
	Local oNo      := LoadBitmap( GetResources(), "LBNO" )
	Local oDemt	   := LoadBitmap( GetResources(), "BR_VERMELHO" )  //Demitido durante o processo de Elaboracao

	Private oGet
	Private nOpca    := 0
	Private n        := 1
	Private cCadastro:= ""
	Private cFilDep  := xFilial("QAA")
	Private cCodMat:= Space(Len(QAA->QAA_MAT))

	MsgRun(OemToAnsi(STR0049),OemToAnsi(STR0041),Sg110CarFun(@aFuncao))  //### //"Carregando Funcoes"###"Aguarde..."
	MsgRun(OemToAnsi(STR0050),OemToAnsi(STR0041),Sg110CarQdj(@aQdGDoc))  //### //"Carregando Funcionarios"###"Aguarde..."

	// Parte de Cima da Tela

	@ 015,003 To 100,283 LABEL OemToAnsi(STR0051) Of oFolder:aDialogs[3] Pixel  // //" Funcao "

	@ 021,006 Button oBtn1 Prompt OemToAnsi(STR0052) Size 050,011 Of oFolder:aDialogs[3] Pixel; // //"Funcao"
				Action If(Sg110Usr(@aFuncao),MsgRun(OemToAnsi(STR0053),OemToAnsi(STR0041),; //### //"Atualizando Informacoes..."###"Aguarde..."
							{|| Sg110AlArr(oQdj:nAt)}),)

	@ 033,007 ListBox oQdj Fields;
			Header  STR0066,STR0052,STR0016,; //###### //"Funcao"###"Descricao" //"Filial"
			Size    270,062 Of oFolder:aDialogs[3] Pixel

	bQDJLine1 := { || { aQDJDoc[oQDJ:nAt,1],aQDJDoc[oQDJ:nAt,2],aQDJDoc[oQDJ:nAt,3]}}
	bQDJLine2 := { || { Space( 02 ), Space( 06 ), Space( 40 ) } }
	oQdj:SetArray( aQDJDoc )
	If Len(aQDJDoc) > 0
		oQdj:bLine := bQdjLine1
	Else
		oQdj:bLine := bQdjLine2
	EndIf

	oQdj:SetFocus(.T.)
	oQdj:Refresh()

	// Parte de Baixo da Tela

	@ 105,003 To 190,283 Label OemToAnsi(STR0054) Of oFolder:aDialogs[3] Pixel  // //" Participantes  "

	@ 110,006 Button oBtn5 Prompt OemToAnsi(STR0055) Size 067,011 Of oFolder:aDialogs[3] Pixel ; // //"Marcar/Desmarcar todos"
				Action If(Len(aQDJDoc)>0 ,Sg110MRcbT(@aQDGDoc),oQDG:Refresh())

	@ 110,075 Button oBtn3 PROMPT OemToAnsi(STR0056) Size 062,011 Of oFolder:aDialogs[3] Pixel ; // //"Incluir Participantes"
				Action If(Len(aQDJDoc)>0 ,Sg110AlUsr(@aQdgDoc[oQdg:nAt,5]),oQDG:Refresh())
	//			 Action Sg100AlUsr()

	@ 110,139 Button oBtn6 Prompt OemToAnsi(STR0057) Size 062,011 Of oFolder:aDialogs[3] Pixel;                  // //" Pesquisa "
				Action If(Len(aQDJDoc)>0 ,Sg110PesqPa(aQDGDoc),)

	@ 110,203 Button oBtn8 Prompt OemToAnsi(STR0058) Size 062,011 Of oFolder:aDialogs[3] Pixel; // //"Legenda"
				Action Sg110Legen()

	@ 121,007 ListBox oQdg Fields;
			Header  " ",;
					STR0059,; // //"Matricula"
					STR0060     ,; // //"Nome"
					STR0052   ;                         // //"Funcao"
					Size    270,062 Of oFolder:aDialogs[3] Pixel;
					ON DBLCLICK Sg110MdRcb( aQdgDoc, oQdg:nAt )

	bQDGLine1 := { || { If( aQDgDoc[oQDg:nAt,4] == "S" ,IF( Sg110MRLed(QAA->QAA_FILIAL+aQDGDoc[oQDG:nAt,5]) ,oOk , oDemt ), oNo ),;
								aQDGDoc[oQDg:nAt,5],aQDGDoc[oQDg:nAt,6],aQDGDoc[oQDg:nAt,3]}}

	bQDGLine2 := { || { oNo, Space(Len(QAA->QAA_MAT)), Space( 40 ), Space(Len(QAA->QAA_CODFUNC))} }

	oQDG:SetArray( aQDGDoc )
	IIF(Len(aQDGDoc)>0,oQDG:bLine:= bQDGLine1,oQDG:bLine:= bQDGLine2)

	oQDG:GoTop()
	oQDG:Refresh()
	Sg110AlArr(oQDJ:nAt)
	oQDJ:bChange:={||(oQDG:SetArray(aQDgDoc)),oQDG:bLine:= If(Len(aQDJDoc)>0,bQDGLine1,bQDGLine2),oQDG:GoTop(),oQDG:Refresh()}
	oQDG:cToolTip := OemToAnsi(STR0061)	 // //"Duplo click para Habilitar/Desabilitar destinat rio"

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Legen
Cria uma janela contendo a legenda da mBrowse.

@type    function
@author  Thiago Olis Machado
@since   13/05/2004
@sample  Sg110Legen()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Legen()

	Local aCores2 := { {'ENABLE'     , OemtoAnsi(STR0062) },;  // //"Usuario Marcado"
					{'LBNO'       , OemtoAnsi(STR0063)},;	  // //"Usuario Desmarcado"
					{'BR_VERMELHO', OemtoAnsi(STR0064)} }   // //"Usuario Inativo"

	Local cTitulo := OemToAnsi(STR0065) // //"Participantes"
	Local cMensagem := OemToAnsi(STR0058) 	  // //"Legenda"
	Local ny       := 0
	Local nx       := 0
	Local aBmp[Len(aCores2)]
	Local aSays[Len(aCores2)]
	Local oDlgLeg

	Define MsDialog oDlgLeg From 0,0 To (Len(aCores2)*20)+75,304 Title cTitulo Pixel

	@ 00,00 Bitmap oBmp ResName "PROJETOAP" Of oDlgLeg Size 35,155 Noborder When .F. Pixel
	@ 11,35 To 013,400 Label '' Of oDlgLeg Pixel
	@ 03,37 Say cMensagem Of oDlgLeg Pixel Size 100,009
	For nx := 1 to Len(aCores2)
		@ 19+((nx-1)*10),44 Bitmap aBmp[nx] ResName aCores2[nx][1] Of oDlgLeg Size 20,20 NoBorder When .F. Pixel
		@ 19+((nx-1)*10),54 Say If((ny+=1)==ny,aCores2[ny][2]+If(ny==Len(aCores2),If((ny:=0)==ny,"",""),""),"") Of oDlgLeg Pixel
	Next
	ny := 0

	Define sButton From 25+((nx-1)*10),124 Type 1 Enable Of oDlgLeg Action oDlgLeg:End()

	Activate MsDialog oDlgLeg Centered

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110CarFun
Carrega Funcao para Selecao no Cadastro de Usuarios/Pastas.

@type    function
@author  Thiago Olis Machado
@since   13/05/2004
@sample  Sg110CarFun()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110CarFun( aFuncao )

	Local cNomeFuncao := ''

	DbSelectArea("QAC")
	QAC->(DbSetOrder(1))
	QAC->(DbGotop())
	While QAC->(!Eof())
		Aadd(aFuncao,{"N",QAA->QAA_FILIAL,QAC->QAC_FUNCAO,QAC->QAC_DESC})
		QAC->(DbSkip())
	EndDo

	DbSelectArea("TAN")
	TAN->(DbSetOrder(1))
	DbSeek(xFilial("TAN")+cOrdem)
	While TAN->(!Eof() .And. xFilial("TAN") == TAN->TAN_FILIAL .And. TAN->TAN_ORDEM == cOrdem)
			If aScan( aQdjDoc,{|x| x[2] == TAN->TAN_CODFUN } ) == 0
				If QAC->(DbSeek(xFilial("QAC")+TAN->TAN_CODFUN))
					cNomeFuncao := QAC->QAC_DESC
				EndIf
				Aadd(aQdjDoc,{TAN->TAN_FILIAL,TAN->TAN_CODFUN,cNomeFuncao})
			EndIf
		TAN->(DbSkip())
	End

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Usr
Inclusão de Usuários.

@type    function
@author  Thiago Olis Machado
@since   13/05/2004
@sample  Sg110Usr()
/*/
//-------------------------------------------------------------------
Function Sg110Usr( aFuncao )

	Local oDeptos
	Local oDlg1
	Local oBtn1
	Local oOk       := LoadBitmap( GetResources(), "ENABLE" )
	Local oNo       := LoadBitmap( GetResources(), "LBNO" )
	Local aAuxFuncao:= Aclone(aFuncao)
	Local lRet      := .F.
	Local nPosDep   := 1

	Local bQADLine1
	Local bQADLine2

	If Len(aQDJDoc) > 0
		If (nPosDep:= aScan(aFuncao,{|x| x[2]+x[3] == aQDJDoc[oQDJ:nAt,2]+aQDJDoc[oQDJ:nAt,3]})) == 0
			nPosDep:= 1
		EndIf
	EndIf

	Define MsDialog oDlg1 Title OemToAnsi(STR0052) From 000,000 To 200,425 Of oMainWnd Pixel // //"Funcao"

	@ 015,003 To 086,210 Label OemToAnsi(STR0052) Of oDlg1 Pixel  // //"Funcao"
	@ 023,007 ListBox oDeptos Fields;
				Header  " ", ;
						OemToAnsi(STR0066),;  // //"Filial"
						OemToAnsi(STR0052),; // //"Funcao"
								OemToAnsi(STR0016) ;                      // //"Descricao"
				Size 200,060 Of oDlg1 Pixel;
				On DblClick aFuncao[oDeptos:nAt,1]:=IIf(aFuncao[oDeptos:nAt,1]="S","N","S")

	bQADLine1 := {|| {If(aFuncao[oDeptos:nAt,1] == "S",oOk, oNo),aFuncao[oDeptos:nAt,2],aFuncao[oDeptos:nAt,3],aFuncao[oDeptos:nAt,4]}}
	bQADLine2 := {|| {oNo,Space(18),Space(25) }}

	oDeptos:SetArray(aFuncao)
	oDeptos:bLine:= If(Len(aFuncao)>0,bQADLine1,bQADLine2)
	oDeptos:nAt:= nPosDep
	oDeptos:SetFocus(.T.)
	oDeptos:Refresh()

	@ 088,006 Button oBtn1 Prompt OemToAnsi(STR0055) Size 067,011 Of oDlg1 Pixel;  // //"Marcar/Desmarcar todos"
				Action If(Len(@aFuncao)>0 ,Sg110MKTd(@aFuncao),oDeptos:Refresh())

	@ 088,075 Button oBtn2 Prompt OemToAnsi(STR0067) Size 050,011 Of oDlg1 Pixel;  // //"Pesquisa Funcao"
				Action Sg110PesqFu(@oDeptos,aFuncao)

	Activate MsDialog oDlg1 Centered On Init EnchoiceBar(oDlg1,{|| Sg110GrQdj(@aFuncao),lRet:=.T.,oDlg1:End()},{|| aFuncao:= aAuxFuncao,oDlg1:End()})

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110AlArr
Atualiza os arrays do listbox.

@type    function
@author  Thiago Olis Machado
@since   13/05/2004
@sample  Sg110AlArr()

@return  Nil, Sempe nulo
/*/
//-------------------------------------------------------------------
Function Sg110AlArr( nAt )

	oQdj:SetArray(aQDJDoc)
	oQdj:bLine:= If(Len(aQDJDoc)>0,bQDJLine1,bQDJLine2)
	oQdj:GoTop()
	oQdj:Refresh()
	If Len(aQdjDoc) > 0
		oQdg:SetArray(aQDgDoc)
		oQdg:bLine:= bQdgLine1
	Else
		oQdg:SetArray({})
		oQdg:bLine:= bQdgLine2
	EndIf
	oQdg:GoTop()
	oQdg:Refresh()

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110GrQdj

@type    function
@author  Thiago Olis Machado
@since   13/05/2004
@sample  Sg110GrQdj()

@return  Nil, Sempe nulo
/*/
//-------------------------------------------------------------------
Function Sg110GrQdj( aFuncao )

	Local nCnt   	:= 0
	Local nPos   	:= 0
	Local nPos1  	:= 0
	Local aAuxQDG   := {}

	CursorWait()
	For nCnt:= 1 To Len(aFuncao)

		If aFuncao[nCnt,1] == "S"
			DbSelectArea("QAA")
			DbSetOrder(7)
			DbSeek(xFilial("QAA")+aFuncao[nCnt,3])
			While QAA->(!Eof()) .And. xFilial("QAA") == QAA->QAA_FILIAL .And.;
					QAA->QAA_CODFUN == aFuncao[nCnt,3]

				If (nPos := aScan(aQDGDoc,{|x| x[5] == QAA->QAA_MAT})) == 0 .And. QAA->QAA_STATUS == "1"
				Aadd(aQDGDoc,{"","",aFuncao[nCnt,3],"S",QAA->QAA_MAT,QAA->QAA_NOME})
				EndIf

				DbSkip()
			End
			If (nPos1 := aScan(aQDJDoc,{|x| x[1]+x[2] == aFuncao[nCnt,2]+aFuncao[nCnt,3]})) == 0
				Aadd(aQDJDoc,{aFuncao[nCnt,2],aFuncao[nCnt,3],aFuncao[nCnt,4],"","","" } )
			EndIf
		Else
			If (nPos := aScan(aQDjDoc,{|x| x[2]+x[3] == aFuncao[nCnT,2]+aFuncao[nCnT,3]})) > 0
			aDel(aQdjDoc,nPos)
			aSize(aQdjDoc,Len(aQdgjoc)-1)
			EndIf
		EndIf
	Next nCnt

	If Len(aQdjDoc) > 0
		aQdjDoc:= aSort( aQdjDoc,,,{ |x,y| x[1]+x[2] < y[1]+y[2] } )
	EndIf
	If Len(aQdGDoc) > 0
		aQdGDoc:= aSort( aQdGDoc,,,{ |x,y| x[3] < y[3] } )
	EndIf

	CursorArrow()

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110MdRcb
Atualiza os lancamentos dos destinatarios.

@type    function
@author  Thiago Olis Machado
@since   13/05/2004
@sample  Sg110MdRcb()

@return  Nil, Sempe nulo
/*/
//-------------------------------------------------------------------
Function Sg110MdRcb( aQDG, nPos )

	If Len( aQDG ) > 0
		aQDG[nPos,4]:= If(aQDG[nPos,4] == "N","S","N")
	EndIf
	oQDG:Refresh()

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110MRLed
Marca/Desmarca os destinatarios verificando a situacao na Folha.

@type    function
@author  Thiago Olis Machado
@since   13/05/2004
@sample  Sg110MRLed()
/*/
//-------------------------------------------------------------------
Function Sg110MRLed( cChave )

	Local lDemito:=.F.

	QAA->(dbSetOrder(1))
	IF QAA->(dbSeek(cChave))
		lDemito:=QA_SitFolh()
	EndIf

Return (lDemito)

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110MRcbT
Marca/Desmarca os destinatarios.

@type    function
@author  Thiago Olis Machado
@since   13/05/2004
@sample  Sg110MRcbT()
/*/
//-------------------------------------------------------------------
Function Sg110MRcbT(aQDG)

	Local cChave:= ""
	Local nPos  := ""
	Local nC    := ""

	If Len( aQDG ) > 0
		nC:= Ascan( aQDG, { |X| x[4] == "S" } )
		aEval(aQDG,{|x|x[4]:= If(nC > 0,"N","S") })
	EndIf

Return aQDG

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110AlUsr
Edita o cadastro do funcionario corrente.

@type    function
@author  Thiago Olis Machado
@since   13/05/2004
@sample  Sg110AlUsr()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110AlUsr(cCodUsr)

	Local oDlg3
	Local oCodPar
	Local cCodPar  := IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( Space( Len( QAA->QAA_MAT ) ), "QAA_MAT" ), Space( Len( QAA->QAA_MAT ) ) )
	Local nOpcao1  := 0
	Local nPos     := 0
	Local lAccsPar := IIf( FindFunction( "MDTVldFldAcc" ), MDTVldFldAcc( "QAA_MAT" ), .T. )

	Private oNomePar
	Private cNomePar := IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( Space( Len( QAA->QAA_NOME ) ), "QAA_NOME" ), Space( Len( QAA->QAA_NOME ) ) )

	Define MsDialog oDlg3 Title OemToAnsi(STR0068) From 000,000 To 110,310 OF oMainWnd Pixel // //"Inclui Participante"

	@ 003,003 TO 040,153 LABEL OemToAnsi(STR0069) Of oDlg3 Pixel  // //"Participante"

	@ 010,006 MsGet oCodPar Var cCodPar Picture '@!' F3 "QAA" Size 044,008 Of oDlg3 Pixel;
				Valid (ExistCpo("QAA",cCodPar),Sg110NomPar(cCodPar)) HasButton When lAccsPar

	@ 025,006 MsGet oNomePar Var cNomePar Size 100,008 Of oDlg3 Pixel
	oNome:lReadOnly:= .T.

	Define sButton From 041,095 Type 1 Enable Of oDlg3;
			Action (nOpcao1:= 1,oDlg3:End())

	Define sButton From 041,125 Type 2 Enable Of oDlg3;
			Action oDlg3:End()

	Activate MsDialog oDlg3 Centered

	If nOpcao1 == 1
		If (nPos:= aScan(aQdgDoc,{|x| x[5] == cCodPar} )) > 0
			Help(" ",1,STR0074,,STR0070,3,1) //### //"Esse funcionario ja esta listado como participante" //"ATENÇÃO"
		Else
			If nPos == 0
				QAA->(DbSetOrder(1))
				If QAA->(DbSeek(xFilial("QAA")+cCodPar))
				Aadd(aQDGDoc,{"","",QAA->QAA_CODFUN,"S",QAA->QAA_MAT,QAA->QAA_NOME})
				oQdg:Refresh()
				EndIf
			EndIf
		EndIf
	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110PesqPa
Pesquisa Participantes.

@type    function
@author  Thiago Olis Machado
@since   15/05/2004
@sample  Sg110PesqPa()

@return  Nil, Sempe nulo
/*/
//-------------------------------------------------------------------
Function Sg110PesqPa(aQDGDoc)

	Local oDlg2
	Local oCodFun
	Local cCodFun  := IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( Space( Len( QAA->QAA_MAT ) ), "QAA_MAT" ), Space( Len( QAA->QAA_MAT ) ) )
	Local nOpcao1  := 0
	Local nPos     := 0
	Local lAccsPar := IIf( FindFunction( "MDTVldFldAcc" ), MDTVldFldAcc( "QAA_MAT" ), .T. )

	Private oNomePar
	Private cNomePar := IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( Space( Len( QAA->QAA_NOME ) ), "QAA_NOME" ), Space( Len( QAA->QAA_NOME ) ) )

	Define MsDialog oDlg2 Title OemToAnsi(STR0071) From 000,000 To 110,310 OF oMainWnd Pixel // //"Pesquisa Participante"

	@ 003,003 TO 040,153 LABEL OemToAnsi(STR0069) Of oDlg2 Pixel  // //"Participante"

	@ 010,006 MsGet oCodFun Var cCodFun Picture '@!' F3 "QAA" Size 044,008 Of oDlg2 Pixel;
				Valid (ExistCpo("QAA",cCodFun),Sg110NomPar(cCodFun)) HasButton When lAccsPar

	@ 025,006 MsGet oNomePar Var cNomePar Size 100,008 Of oDlg2 Pixel
	oNome:lReadOnly:= .T.

	Define sButton From 041,095 Type 1 Enable Of oDlg2;
			Action (nOpcao1:= 1,oDlg2:End())

	Define sButton From 041,125 Type 2 Enable Of oDlg2;
			Action oDlg2:End()

	Activate MsDialog oDlg2 Centered

	If nOpcao1 == 1
		If (nPos:= aScan(aQdgDoc,{|x| x[5] == cCodFun} )) > 0
			oQdg:nAt:= nPos
			oQdg:Refresh()
		Else
			If nPos == 0
				Help(" ",1,STR0074,,STR0072,3,1) //### //"Esse funcionario nao esta listado como participante" //"ATENÇÃO"
			EndIf
		EndIf
	EndIf

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110NomPar
Edita o cadastro do funcionario corrente.

@type    function
@author  Thiago Olis Machado
@since   14/05/2004
@sample  Sg110NomPar()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110NomPar( cResp )

	QAA->(dbSeek(xFilial('QAA')+cResp))
	cNomePar:= QAA->QAA_NOME
	oNomePar:Refresh()

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110MKTd
Marca todas as funções.

@type    function
@author  Thiago Olis Machado
@since   14/05/2004
@sample  Sg110MKTd()
/*/
//-------------------------------------------------------------------
Function Sg110MKTd( aQdg )

	Local cChave:= ""
	Local nPos  := ""
	Local nC    := ""

	If Len( aQDG ) > 0
		nC:= Ascan( aQDG, { |X| x[1] == "S" } )
		aEval(aQDG,{|x|x[1]:= If(nC > 0,"N","S") })
	EndIf

Return aQDG

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110PesqFu
Pesquisa função.

@type    function
@author  Thiago Olis Machado
@since   14/05/2004
@sample  Sg110PesqFu()

@return  Nil, Sempe nulo
/*/
//-------------------------------------------------------------------
Function Sg110PesqFu( oDeptos, aFuncao )

	Local oDlg4
	Local oCodFun
	Local cCodFun  := Space( Len( QAC->QAC_FUNCAO ) )
	Local nOpcao1  := 0
	Local nPos     := 0

	Private oNomeFun
	Private cNomeFun := Space( Len( QAC->QAC_DESC ) )

	Define MsDialog oDlg4 Title OemToAnsi(STR0067) From 000,000 To 110,310 OF oMainWnd Pixel // //"Pesquisa Funcao"

	@ 003,003 TO 040,153 LABEL OemToAnsi(STR0052) Of oDlg4 Pixel  // //"Funcao"

	@ 010,006 MsGet oCodFun Var cCodFun Picture '@!' F3 "QAC" Size 044,008 Of oDlg4 Pixel;
				Valid (ExistCpo("QAC",cCodFun),) HasButton

	@ 025,006 MsGet oNomeFun Var cNomeFun Size 100,008 Of oDlg4 Pixel
	oNome:lReadOnly:= .T.

	Define sButton From 041,095 Type 1 Enable Of oDlg4;
			Action (nOpcao1:= 1,oDlg4:End())

	Define sButton From 041,125 Type 2 Enable Of oDlg4;
			Action oDlg4:End()

	Activate MsDialog oDlg4 Centered

	If nOpcao1 == 1
		If (nPos:= aScan(aFuncao,{|x| x[3] == cCodFun} )) > 0
			oDeptos:nAt:= nPos
			oDeptos:Refresh()
		Else
			If nPos == 0
				Help(" ",1,STR0074,,STR0073,3,1) //### //"Esta funcao nao esta cadastrada" //"ATENÇÃO"
			EndIf
		EndIf
	EndIf

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110ResGra
Grava responsáveis.

@type    function
@author  Thiago Olis Machado
@since   31/05/2004
@sample  Sg110ResGra()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110ResGra()

	Local i,lDelete := .F.
	Local cOr

	If lCpy
		cOr := cOrdemOld
	Else
		cOr := cOrdem
	EndIf

	For i:= 1 To Len( aQDGDoc )
		DbSelectArea('TAN')
		DbSetOrder(1)
		If DbSeek( xFilial('TAN')+cOr+aQdgDoc[i][5])
			RecLock('TAN',.F.)
			lDelete := .T.
		Else
			RecLock('TAN',.T.)
		EndIf

		If aQdgDoc[i][4] == 'S'
			TAN->TAN_FILIAL := xFilial('TAN')
			TAN->TAN_ORDEM  := cOr
			TAN->TAN_CODFUN := aQdgDoc[i][3]
			TAN->TAN_MAT    := aQdgDoc[i][5]
		Else
			If lDelete
				DbDelete()
			EndIf
		EndIf
		MsUnLock('TAN')
	Next i

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110CarQdj
Grava responsáveis.

@type    function
@author  Thiago Olis Machado
@since   31/05/2004
@sample  Sg110CarQdj()

@return  Nil, Sempe nulo
/*/
//-------------------------------------------------------------------
Function Sg110CarQdj( aQdGDoc )

	Local cNomeFun := ''

	DbSelectArea("TAN")
	TAN->(DbSetOrder(1))
	DbSeek(xFilial("TAN")+cOrdem)
	While TAN->(!Eof() .And. xFilial("TAN") == TAN->TAN_FILIAL .And. TAN->TAN_ORDEM == cOrdem)

			DbSelectArea("QAA")
			DbSetOrder(1)
			If DbSeek(xFilial("QAA")+TAN->TAN_MAT)
				cNomeFun := QAA->QAA_NOME
			EndIf
			If aScan( aQdgDoc,{|x| x[5] == TAN->TAN_MAT } ) == 0
				Aadd(aQdGDoc,{"","",TAN->TAN_CODFUN,'S',TAN->TAN_MAT,cNomeFun})
			EndIf
		TAN->(DbSkip())
	End

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110GraHis
Grava no Historico a Avaliacao dos Aspectos X Impactos.

@type    function
@author  Thiago Olis Machado
@since   26/07/2004
@sample  Sg110GraHis()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110GraHis( cOrdem2, lRspCls )

	Local Tab,ny,nx,Tap,cCodHis, i
	Local cRet := "2"

	Local lRespCls := If( ValType(lRspCls) == "L", lRspCls, Nil )

	cCodCla := If(Type("cCodCla") == "C", cCodCla, TAB->TAB_CODCLA)
	M->TAB_CODPLA  := If(Type("M->TAB_CODPLA")  == "C", M->TAB_CODPLA, TAB->TAB_CODPLA)
	M->TAB_CODEME := If(Type("M->TAB_CODEME") == "C", M->TAB_CODEME, TAB->TAB_CODEME)

	If NGCADICBASE("TAB_CODOBJ","A","TAB",.F.)
		M->TAB_CODOBJ := If(Type("M->TAB_CODOBJ") == "C", M->TAB_CODOBJ, TAB->TAB_CODOBJ)
	EndIf

	// Se deve verificar as validacoes. [Utilizado para processos automaticos]
	If ( cRet := SG110CHKPL(cCodCla, M->TAB_CODPLA, M->TAB_CODEME,.T., lRespCls) ) == "0" // Verifica a classe da avaliação
		Return .F.
	EndIf

	// Se deve verificar as validacoes. [Utilizado para processos automaticos]
	If NGCADICBASE("TAB_CODOBJ","A","TAB",.F.)
		If ( cRet := SG110CHKOB(cCodCla, M->TAB_CODOBJ,.T., lRespCls) ) == "0" // Verifica se deve ter objetivo de acordo com a classe
			Return .F.
		EndIf
	EndIf

	cCodHis := Sg110CodHi()

	dbSelectArea("TAB")
	RegToMemory("TAB",.F.)

	dbSelectArea("TAO")
	dbSetOrder(3)
	If !DbSeek(xFilial("TAO")+cOrdem2)
		RecLock("TAO",.T.)
	Else
		RecLock("TAO",.F.)
	EndIf

	For i:=1 To FCount()
		If "_SITUAC"$Upper(FieldName(i))
			FieldPut(i, cRet)
		ElseIf "_CODHIS"$Upper(FieldName(i))
			FieldPut(i, cCodHis)
		ElseIf "_DTHIST"$Upper(FieldName(i))
			FieldPut(i, dDataBase)
		ElseIf "_DTFINA"$Upper(FieldName(i))
			FieldPut(i, dDataBase)
		Else
			nx := "TAB_"+Substr(FieldName(i),5)
			If TAB->( ColumnPos( nx ) ) > 0
				FieldPut( i, &( "M->" + nx ) )
			EndIf
		EndIf
	Next
	MsUnlock("TAO")

	dbSelectArea("TAB")
	RecLock("TAB",.F.)
	DbDelete()
	MsUnLock("TAB")

	dbSelectArea("TAD")
	dbSetOrder(1)
	dbSeek(xFilial("TAD")+cOrdem2)
	While !Eof() .And. TAD->TAD_FILIAL == xFilial("TAD") .And. TAD->TAD_ORDEM == cOrdem2
		dbSelectArea("TAD")
		RegToMemory("TAD",.F.)

		dbSelectArea("TAP")
		dbSetOrder(1)
		If !dbSeek(xFilial("TAP")+TAO->TAO_CODHIS+TAD->TAD_ORDEM+TAD->TAD_CODAVA)
			RecLock("TAP",.T.)
			For i:=1 To FCount()
				If "_CODHIS"$Upper(FieldName(i))
					FieldPut(i, TAO->TAO_CODHIS)
				Else
					nx := "TAD_"+Substr(FieldName(i),5)
					If TAD->( ColumnPos( nx ) ) > 0
						FieldPut( i, &( "M->" + nx ) )
					EndIf
				EndIf
			Next
			MsUnlock("TAP")

			DbSelectArea("TAD")
			RecLock("TAD",.F.)
			DbDelete()
			MsUnLock("TAD")

		EndIf

		dbSelectArea("TAD")
		dbSkip()
	End

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110CodHi
Programa para cadastro do Plano Emergencial.

@type    function
@author  Rafael Diogo Richter
@since   07/02/2007
@sample  Sg110CodHi()
/*/
//-------------------------------------------------------------------
Function Sg110CodHi()

	Local cCodHis := '000000'

	dbSelectArea( 'TAO' )
	dbSetOrder( 1 )
	dbGoTop()
	dbSeek( xFilial('TAO') )
	While TAO->( !Eof() ) .And. xFilial( 'TAO' ) == TAO->TAO_FILIAL
		cCodHis := TAO->TAO_CODHIS
		TAO->( dbSkip() )
	End

	If Empty(cCodHis)
		cCodHis := '000000'
	EndIf

Return StrZero( Val( cCodHis ) + 1, 6 )

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110IniBrw

@type    function
@author  Rafael Diogo Richter
@since   07/02/2007
@sample  Sg110IniBrw()
/*/
//-------------------------------------------------------------------
Function Sg110IniBrw()

	Local cValor := ''

	DbSelectArea("TAF")
	DbSetOrder(2)
	If DbSeek(xFilial("TAF")+'001'+TAB->TAB_CODNIV)
		cValor := TAF->TAF_NOMNIV
	EndIf

Return cValor

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110NomDem

@type    function
@author  Rafael Diogo Richter
@since   07/02/2007
@sample  Sg110NomDem()

@return  Nil, Sempe nulo
/*/
//-------------------------------------------------------------------
Function Sg110NomDem()

	Local i

	For i:= 1 To Len( aCols )
		If TA0->( DbSeek( xFilial('TA0')+ aCols[i][1] ) )
			aCols[i][2] := TA0->TA0_EMENTA
		EndIf
	Next i

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Qdo
Grava no Historico a Avaliacao dos Aspectos X Impactos.

@type    function
@author  Rafael Diogo Richter
@since   17/05/2005
@sample  Sg110Qdo()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Qdo()

	Local oFontDialog	:= TFont():New("Arial",6,15,,.T.,,,,.F.)
	Local cDescri		:= ''
	Private cFilDoc		:= Space( Len( TAF->TAF_DOCFIL ) ) // Codigo do Documento Relacionado
	Private cLocal		:= SubStr( oTree:GetCargo(), 1, 3 )
	Private aWord		:= {}
	Private oDlgQdo,oPanel,oWord1,oWord2,oWord3,oWord4,oWord5,oWord6,oBmp
	Private aOldMenu	:= If(Type("aSMenu1")=="A", aClone( aSMenu1 ),{})
	Private oFontMet	:= TFont():New("Courier New",6,0)
	Private oFontIden	:= TFont():New("Courier New",09,09,,.T.,,,,.F.,.F.)
	Private nNumDoc		:= 0
	Private nContWo		:= 0
	Private nDocto		:= 1
	Private cDocto1,cDocto2,cDocto3,cDocto4,cDocto5,cDocto6
	Private nTitX,nTitY,nPicX,nPicY
	Private oMenu1
	Private oLoc1,cLoc1	:= ' '
	Private oLoc2,cLoc2	:= ' '
	Private oDesc1,oDesc2,oDesc3,oDesc4,oDesc5,oDesc6

	DbSelectArea("TAF")
	DbSetOrder(2)
	If DbSeek(xFilial("TAF")+'001'+cLocal)
		cDescri := TAF->TAF_NOMNIV
	EndIf

	Define MsDialog oDlgQdo Title STR0075 From 09,00 To 22,50 //"Documentos Relacionados"

	Define FONT oBold NAME "Courier New" Size 0, -13 BOLD

	@ 000,000 MsPanel oPanel Prompt "" Size __DlgWidth( oDlgQdo ),__DlgHeight( oDlgQdo ) Of oDlgQdo
	@ 000,000 BitMap oBmp ResName "PROJETOAP" oF oPanel Size 45,300 NoBorder When .F. Pixel
	TBitmap():New(000,000,205,015,"TOOLBAR",,.T.,oPanel,,,,.T.,,,,,.T.)

	@ 003,005 Say OemToAnsi('Identificação') Of oPanel Size 37,7 Pixel //Font oFontIden
	@ 002,047 MsGet cDescri Size 130,08 Of oPanel Pixel When .F. Font oFontDialog

	@ 030,005 Say OemToAnsi('Documento') Of oPanel Size 45,15 Pixel Font oFontDialog Color CLR_BLUE
	@ 037,007 Say oLoc1 Var cLoc1 Size 048, 08 Of oPanel Pixel
	@ 045,005 Say OemToAnsi('Revisao') Of oPanel Size 45,15 Pixel Font oFontDialog Color CLR_BLUE
	@ 052,007 Say oLoc2 Var cLoc2 Size 048, 08 Of oPanel Pixel

	SgProcDoc()

	Define sButton From 079,130 Type 1 Enable Of oDlgQdo Action (lGrava := .T.,oDlgQdo:End())
	Define sButton From 079,160 Type 2 Enable Of oDlgQdo Action (lGrava := .F.,oDlgQdo:End())

	Activate MsDialog oDlgQdo Centered

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Cpy
Função para copiar nova avaliação de uma já existente.

@type    function
@author  Rafael Diogo Richter
@since   23/01/2008
@sample  Sg110Cpy()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Cpy()

	Local aOldOpc := { {"Inclui", Inclui}, {"Altera", Altera} }
	Local nInd

	If !MsgYesNo(STR0100+TAB->TAB_ORDEM+" ?",STR0090) //"Deseja realizar uma cópia do desempenho: "###"Atenção!"
		Return .F.
	EndIf

	SetInclui() // Define operacao como inclusao [Incluir := .T.]

	dbSelectArea("TAB")
	dbSetOrder(1)
	Sg110APro("TAB",Recno(),3)

	For nInd := 1 To Len(aOldOpc)
		&(aOldOpc[nInd][1]) := aOldOpc[nInd][2]
	Next nInd

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Sg110Sit
Muda a situação do desempenho.

@type    function
@author  Rafael Diogo Richter
@since   03/07/2009
@sample  Sg110Sit()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function Sg110Sit( nOpcao )

	Local cRet := M->TAB_SITUAC

	//Verifica se é inclusão ou alteração
	If nOpcao == 4 .OR. nOpcao == 3
		M->TAB_SITUAC := "1"
		//Verifica os campos obrigatórios
		If !Sg110Obrig(nOpcao, .T.)
			Return .F.
		EndIf

		//Verifica se as avaliações foram respondidas
		If !SGA110VIMR()
				Return .F.
		EndIf

		//Calcula os totais
		If !Sg110Calc()
			Return .F.
		EndIf

		If NGCADICBASE("TAB_CODOBJ","A","TAB",.F.)
			//valida objetivo de acordo com a classe
			If (cRet := SG110CHKOB(cCodCla, M->TAB_CODOBJ)) <> "0"
				M->TAB_SITUAC := cRet
			Else
				Return .F.
			EndIf
		EndIf

		//Procura Classe do Desempenho
		If (cRet := SG110CHKPL(cCodCla, M->TAB_CODPLA, M->TAB_CODEME)) <> "0"
			If M->TAB_SITUAC == "2" .OR. M->TAB_SITUAC == "1"

				M->TAB_SITUAC := cRet

			ElseIf cRet <> "2"

				M->TAB_SITUAC := "5"

			EndIf
		Else
			Return .F.
		EndIf

		//Grava os dados Finalizando o Plano
		If IsInCallStack("SG110APRO")
			If !Sg110aGrv(nOpcao)
				Return .F.
			EndIf
		Else
			If !Sg110Grava(nOpcao)
				Return .F.
			EndIf
		EndIf

	EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} SG110Lgn
Cria uma janela contendo a legenda da mBrowse.

@type    function
@author  Rafael Diogo Richter
@since   03/07/2009
@sample  SG110Lgn()

@return  Lógico, Sempe verdadeiro
/*/
//-------------------------------------------------------------------
Function SG110Lgn()

	Local aLegenda := {{"BR_AMARELO",STR0102},; //"Parcialmente Respondido"
						{"BR_VERDE",STR0103}} //"Aprovado"
	If NGCADICBASE("TA8_OBJETI","A","TA8",.F.)

		aAdd(aLegenda,{"BR_BRANCO",STR0122}) //"Aprovado Sem Objetivo"

	EndIf

	If NGCADICBASE("TA8_PLANAC","A","TA8",.F.)
		aAdd(aLegenda,{"BR_LARANJA",STR0104}) //"Aprovado Sem Plano de Ação"
		aAdd(aLegenda,{"BR_MARROM" ,STR0105}) //"Aprovado Sem Plano Emergencial"
		aAdd(aLegenda,{"BR_VERMELHO",STR0125}) //"Aprovado com duas ou mais pendências"
	EndIf
	BrwLegenda(cCadastro,STR0058,aLegenda) //"Legenda"

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} SG110CHKPL
Verifica se a avaliação tem os planos de ação e emergencial
preenchidos de acordo com a sua classe.

@type    function
@author  Roger Rodrigues
@since   03/12/2009
@sample  SG110CHKPL()
/*/
//-------------------------------------------------------------------
Function SG110CHKPL( cCodClasse, cPlanoAc, cPlanoEm,lHist, lRspCls )

	Local cRet := "2"//Retorno como Aprovado
	Local aArea := GetArea()//Guarda tabelas e indices

	Local lRspAtm := ValType(lRspCls) == "L"
	//Local aAlias := {}
	Local lPlanAc := .F., lPlanEmerg := .F.
	//Local nI := 1
	Local cAlias := ""

	Default lHist := .F.

	//se avalia por peso
	If NGCADICBASE("TA7_PLANAC","A","TA7",.F.)

		If !lRspAtm //se não vem de aprovacao automatica em lote
			//aAlias := {cAliasASP,cAliasIMP,cAliasLOC}
			DbSelectArea("TA7")
			TA7->(DbSetOrder(1))

			//For nI := 1 to len(aAlias)

				cAlias := If( Type("cTRBB") <> "U", cTRBB, "TRBB")
				DbSelectArea(cAlias)
				(cAlias)->(DbGoTop())

				While (cAlias)->(!Eof())

					If .T. //(cAlias)->TRB_OK == cMarca

						IF TA7->(DbSeek(xFilial("TA7")+(cAlias)->TRB_CODAVA+(cAlias)->TRB_CODIGO))

							If !lPlanAc

								lPlanAc := IIF(TA7->TA7_PLANAC == "1",.T.,.F. )

							EndIf

							If !lPlanEmerg

								lPlanEmerg := IIF(TA7->TA7_PLANEM == "1",.T.,.F. )

							EndIf

						EndIf

					EndIf

					(cAlias)->(DbSkip())
				Enddo

			//Next nI

		EndIf

	EndIf

	dbSelectArea("TA8")
	dbSetOrder(1)
	If dbSeek(xFilial("TA8")+cCodClasse)

		//Verifica se deveria ter plano de ação e emergencial
		If TA8->TA8_PLANAC == "1" .And. TA8->TA8_PLANEM == "1" .And. Empty(cPlanoEm) .And. Empty(cPlanoAc) .OR. ;
					lPlanAc .And. lPlanEmerg .And. Empty(cPlanoEm) .And. Empty(cPlanoAc) .OR. ;
					TA8->TA8_PLANAC == "1" .And. lPlanEmerg .And. Empty(cPlanoEm) .And. Empty(cPlanoAc) .OR. ;
					lPlanAc .And. TA8->TA8_PLANEM == "1" .And. Empty(cPlanoEm) .And. Empty(cPlanoAc)

			If ( lRspAtm .And. lRspCls ) .Or. ( !lRspAtm .And. MsgYesNo(STR0107+If(lHist,STR0108,STR0098)+STR0109,STR0090) ) //"A Significancia pede que sejam relacionados um Plano de Ação e um Emergencial. Deseja "###"Finalizar"###"Aprovar"###" a Avaliação mesmo assim?"####"Atenção!"
				cRet := "5"//Aprovado sem plano de acao e emergencial
			Else
				cRet := "0"
			EndIf
		ElseIf TA8->TA8_PLANAC == "1" .And. Empty(cPlanoAc) .OR. lPlanAc .And. Empty(cPlanoAc) //Verifica se deveria ter plano de ação
			If ( lRspAtm .And. lRspCls ) .Or. ( !lRspAtm .And. MsgYesNo(STR0110+If(lHist,STR0108,STR0098)+STR0109, STR0090) ) //"A Significancia pede que seja relacionado um Plano de Ação. Deseja "###"Finalizar"###"Aprovar"###" a Avaliação mesmo assim?"###"Atenção!"
				cRet := "3"//Aprovado sem plano de acao
			Else
				cRet := "0"
			EndIf
		ElseIf TA8->TA8_PLANEM == "1" .And. Empty(cPlanoEm)  .OR. lPlanEmerg .And. Empty(cPlanoEm) //Verifica se deveria ter plano emergencial
			If ( lRspAtm .And. lRspCls ) .Or. ( !lRspAtm .And. MsgYesNo(STR0111+If(lHist,STR0108,STR0098)+STR0109, STR0090) ) //"A Significancia pede que seja relacionado um Plano Emergencial. Deseja "###"Finalizar"###"Aprovar"###" a Avaliação mesmo assim?"###"Atenção!"
				cRet := "4"//Aprovado sem Plano Emergencial
			Else
				cRet := "0"
			EndIf
		EndIf
	EndIf

	RestArea(aArea)//Retorna tabelas e indices

Return cRet

//---------------------------------------------------------------------
/*/{Protheus.doc} SGA110CSAV
Efetua alteracao do item da tree para estado 'Sendo Avaliado'.

@author Hugo R. Pereira
@since 09/10/2012
@version MP10
@return Nil
/*/
//---------------------------------------------------------------------
Function SGA110CSAV()

	Local nInd

	For nInd := 1 To Len(aLocal2)
		If !Empty(aLocal2[nInd][1])
			dbSelectArea(oTree:cArqTree)
			dbSetOrder(4)
			If dbSeek(aLocal2[nInd][1])
				If SubStr( (oTree:cArqTree)->T_CARGO, 1, 3 ) == aLocal2[nInd][1] .And. SubStr( (oTree:cArqTree)->T_CARGO, 7, 1 ) != "3"

					// Altera referencia do item da tree para 'Sendo Avaliado' [ Folder Amarelo ]
					oTree:TreeSeek(aLocal2[nInd][1])
					oTree:ChangeBmp("Folder5","Folder6")

					(oTree:cArqTree)->T_CARGO := SubStr( oTree:GetCargo(),1,6) + "3"
					oTree:TreeSeek(aLocal2[nInd][1])

				EndIf
			EndIf
		EndIf
	Next nInd

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} SGA110VIMR
Verifica se as avaliações foram respondidas. Criterios de Avaliacao de Impacto.

@param lVrfBase Define se deve verificar a base de dados, ou o processo atual.
@param cOrdem   Define numero da ordem a ser verificada.
@param lShowMsg Define se deve apresentar a mensagem de inconsistencia.

@author Hugo R. Pereira
@since 09/10/2012
@version MP10
@return Nil
/*/
//---------------------------------------------------------------------
Function SGA110VIMR( lVrfBase, cOrdem, lShowMsg )

	Local nLine, nArea
	Local cAlsTRBB:= If( Type("cTRBB") <> "U", cTRBB, "TRBB")
	Local lReturn := .T.
	Local aAreas  := {}

	Default lVrfBase := .F.
	Default lShowMsg  := .T.
	Default cOrdem    := Space( TAMSX3("TAB_ORDEM")[1] )

	If !lVrfBase // Se nao deve realizar a verificacao a partir da base de dados

		For nLine := 1 To Len(aColsImp)
			dbSelectArea(cAlsTRBB)
			dbSetOrder(1)
			If !dbSeek(aColsImp[nLine][1])
				lReturn := .F.
				Exit
			EndIf
		Next nLine

	Else // Se realiza a analise na base de dados

		// Define areas de trabalho atuais
		aAdd(aAreas, GetArea())
		aAdd(aAreas, TA6->(GetArea()) )
		aAdd(aAreas, TAD->(GetArea()) )

		// Verifica todos os criterios de avaliacao do tipo 'Impacto'
		dbSelectArea("TA6")
		dbSetOrder(1)
		dbSeek(xFilial('TA6'))
		While TA6->(!Eof()) .And. xFilial('TA6') == TA6->TA6_FILIAL

			// Se o tipo for diferente de 'Impacto'
			If TA6->TA6_TIPO <> "2"
				dbskip()
				Loop
			EndIf

			// Verifica se ha algum criterio de avaliacao nao respondido
		   dbSelectArea('TAD')
		   dbSetOrder(1)
		   If !dbSeek(xFilial('TAD') + cOrdem + TA6->TA6_CODAVA)
		      lReturn := .F.
		      Exit
		   EndIf

			dbSelectArea('TA6')
			dbSkip()
		End

	EndIf

	// Caso seja requisitada a apresentacao de mensagem de erro
	If lShowMsg .And. !lReturn
		MsgStop(STR0101, STR0090) // "Responda todas as avaliações do Impacto antes de aprovar o Desempenho."###"Atenção!"
	EndIf

	// Retorna areas de trabalho
	If Len(aAreas) > 0
		For nArea := Len(aAreas) To 1 Step -1
			RestArea(aAreas[nArea])
		Next nArea
	EndIf

Return lReturn

//---------------------------------------------------------------------
/*/{Protheus.doc} SGA110Obj
Busca as informacões do Objetivo

@author Thiago Henrique dos Santos
@since 16/01/2013
@version P10
@return .T.
/*/
//---------------------------------------------------------------------
Function SGA110OBJ()

	lRet := .T.

	If !Empty(M->TAB_CODOBJ)

		lRet := SG110VLDOB(M->TAB_CODOBJ)

		If lRet
		cDesObj := TBH->TBH_DESCRI
		Else
		cDesObj := Space(TAMSX3("TBH_DESCRI")[1])
		EndIf

	Else
		cDesObj := Space(TAMSX3("TBH_DESCRI")[1])
		M->TAB_CODOBJ := Space(TAMSX3("TBH_CODOBJ")[1])

	EndIf

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} SG110CHKOB
Verifica a necessidade de objetivo de acordo com a classe e o desempenho

@param  cCodClasse - Codigo da classe
@param  cCodObje   - Codigo do Objetivo
@param  lHist      - .T. quando for gravação de histórico, .F. caso contrário
@param  lRSpCls    - .T. quando for resposta automática, .F. caso contrário
@author Thiago Henrique dos Santos
@since 16/01/2013
@version P10
@return .T.
/*/
//---------------------------------------------------------------------
Function SG110CHKOB(cCodClasse, cCodObje, lHist, lRspCls)

	Local cRet := "2"//Retorno como Aprovado
	Local aArea := GetArea()//Guarda tabelas e indices

	//Local aAlias := {}
	Local lObjetivo := .F.
	//Local nI := 1
	Local cAlias := ""
	Local lRspAtm := ValType(lRspCls) == "L"

	Default lHist := .F.

	//Se avalia por peso
	If NGCADICBASE("TA7_PLANAC","A","TA7",.F.)

		If !lRspAtm //se não vem de aprovacao automatica em lote
			//aAlias := {cAliasASP,cAliasIMP,cAliasLOC}
			DbSelectArea("TA7")
			TA7->(DbSetOrder(1))

			//For nI := 1 to len(aAlias)

				cAlias := If( Type("cTRBB") <> "U", cTRBB, "TRBB") //aAlias[nI]
				DbSelectArea(cAlias)
				(cAlias)->(DbGoTop())

				While (cAlias)->(!Eof()) .And. !lObjetivo

					//If (cAlias)->TRB_OK == cMarca

						IF TA7->(DbSeek(xFilial("TA7")+(cAlias)->TRB_CODAVA+(cAlias)->TRB_CODIGO))

							lObjetivo := IIF(TA7->TA7_OBJETI == "1",.T.,.F. )

						EndIf

					//EndIf

					(cAlias)->(DbSkip())
				Enddo

			//Next nI

		EndIf

	EndIf

	dbSelectArea("TA8")
	dbSetOrder(1)
	If dbSeek(xFilial("TA8")+cCodClasse)

		If TA8->TA8_OBJETI == "1" .And. Empty(cCodObje) .OR. lObjetivo .And. Empty(cCodObje)

			If ( lRspAtm .And. lRspCls ) .Or. ( !lRspAtm .And. MsgYesNo(STR0123+If(lHist,STR0108,STR0098)+STR0109,STR0090) ) //"A Significancia pede que seja relacionado um Objetivo. Deseja "###"Finalizar"###"Aprovar"###" a Avaliação mesmo assim?"####"Atenção!"
				cRet := "6"//Aprovado sem Objetivo
			Else
				cRet := "0"
			EndIf

		EndIf

	EndIf

	RestArea(aArea)//Retorna tabelas e indices

Return cRet

//---------------------------------------------------------------------
/*/{Protheus.doc} SG110VLDOB
Valida somente objetivos abertos e fechados

@param  cCodObjVal - Codigo do Objetivo a ser validado
@author Thiago Henrique dos Santos
@since 16/01/2013
@version P10

@return .T. se objetivo existir e estiver aberto ou fechado, .F. caso
contrário
/*/
//---------------------------------------------------------------------
Function SG110VLDOB(cCodObjVal)

	Local lRet := .T.

	DbSelectArea('TBH')
	TBH->(DbSetOrder(1))
	If TBH->(Dbseek(xFilial('TBH')+cCodObjVal))

		If !TBH->TBH_SITUAC $ "2;3"
			lRet := .F.
			ShowHelpDlg(STR0074, {STR0124},2,{STR0126},2) //"Atenção"###"Objetivo Inválido"###"O objetivo deve existir e possuir situação aberto ou fechado."

		EndIf
	Else

		lRet := .F.
		ShowHelpDlg(STR0074, {STR0124},2,{STR0126},2)//"Atenção"###"Objetivo Inválido"###"O objetivo deve existir e possuir situação aberto ou fechado."

	EndIf

Return lRet
