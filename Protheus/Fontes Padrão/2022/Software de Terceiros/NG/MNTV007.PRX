#INCLUDE "PROTHEUS.CH"
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNTV007    ³ Autor ³ Inacio Luiz Kolling   ³ Data ³14/11/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calcula horas totais de manutencao preventiva conforme para- ³±±
±±³          ³ metros                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ De_Data    - Data inicio                                     ³±±
±±³          ³ Ate_Data   - Ate data                                        ³±±
±±³          ³ De_Bem     - De bem inicio                                   ³±±
±±³          ³ Ate_Bem    - Ate bem fim                                     ³±±
±±³          ³ De_Ccusto  - De centro de custo                              ³±±
±±³          ³ Ate_Ccusto - Ate centro de custo                             ³±±
±±³          ³ De_CenTra  - De centro de trabalho                           ³±±
±±³          ³ Ate_CenTra - Ate sentro de trabalho                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorna   ³ nQtdTR  - Quantidade de horas de reparo                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GENERICO                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTV007(De_Data,Ate_Data,De_Bem,Ate_Bem,De_Ccusto,Ate_Ccusto,;
                 De_CenTra,Ate_CenTra)
Local aAreaOLD   := GetArea(),nQtdTR := 0
Local De_BemL    := If(De_Bem = Nil,Space(NGSEEKDIC("SX3","TJ_CODBEM",2,"X3_TAMANHO")),De_Bem)
Local De_CcustoL := If(De_Ccusto = Nil,Space(NGSEEKDIC("SX3","TJ_CCUSTO",2,"X3_TAMANHO")),De_Ccusto)
Local De_CenTraL := If(De_CenTra = Nil,Space(NGSEEKDIC("SX3","TJ_CENTRAB",2,"X3_TAMANHO")),De_CenTra)

// Variáveis de Histórico de Indicadores
Local lMV_HIST := NGI6MVHIST()
Local aParams := {}
Local cCodIndic := "MNTV007"
Local nResult := 0

// Armazena os Parâmetros
If lMV_HIST
	aParams := {}
	aAdd(aParams, {"DE_DATA"   , De_Data})
	aAdd(aParams, {"ATE_DATA"  , Ate_Data})
	aAdd(aParams, {"DE_BEM"    , De_Bem})
	aAdd(aParams, {"ATE_BEM"   , Ate_Bem})
	aAdd(aParams, {"DE_CCUSTO" , De_Ccusto})
	aAdd(aParams, {"ATE_CCUSTO", Ate_Ccusto})
	aAdd(aParams, {"DE_CENTRA" , De_CenTra})
	aAdd(aParams, {"ATE_CENTRA", Ate_CenTra})
	NGI6PREPPA(aParams, cCodIndic)
EndIf

cAliasQry := GetNextAlias()
// Query
If lMV_HIST
	cQuery := "SELECT * "
Else
	cQuery := "SELECT STL.TL_QUANTID,STL.TL_TIPOHOR "
EndIf
cQuery += " FROM "+RetSqlName("STL")+" STL "
cQuery += " INNER JOIN "+RetSqlName("STJ")+" STJ "
cQuery += " ON STJ.TJ_ORDEM = STL.TL_ORDEM AND STJ.TJ_PLANO = STL.TL_PLANO AND"
cQuery += " STJ.TJ_FILIAL = '"+xFilial("STJ")+"' AND "
cQuery += " STJ.TJ_SITUACA = 'L' AND STJ.TJ_TERMINO = 'S' AND "
cQuery += " STJ.TJ_TIPOOS = 'B' AND STJ.TJ_PLANO <> '000000' AND "
If ValType(De_BemL) == "C" .and. ValType(Ate_Bem) == "C"
	cQuery += " STJ.TJ_CODBEM >= '"+De_BemL+"' AND STJ.TJ_CODBEM <= '"+Ate_Bem+"' AND "
Endif
If ValType(De_CcustoL) == "C" .and. ValType(Ate_Ccusto) == "C"
	cQuery += " STJ.TJ_CCUSTO >= '"+De_CcustoL+"' AND STJ.TJ_CCUSTO <= '"+Ate_Ccusto+"' AND "
Endif
If ValType(De_CenTraL) == "C" .and. ValType(Ate_CenTra) == "C"
	cQuery += " STJ.TJ_CENTRAB >= '"+De_CenTraL+"' AND STJ.TJ_CCUSTO <= '"+Ate_CenTra+"' AND "
Endif
If ValType(De_Data) == "D" .and. ValType(Ate_Data) == "D"
	cQuery += " STJ.TJ_DTMRINI >= '"+Dtos(De_Data)+"' AND STJ.TJ_DTMRFIM <= '"+Dtos(Ate_Data)+"' AND "
Endif
cQuery += " STJ.D_E_L_E_T_ <> '*' "
cQuery += " WHERE STL.TL_FILIAL = '"+xFilial("STL")+"' AND "
cQuery += " STL.TL_SEQRELA <> '0  ' AND (STL.TL_TIPOREG = 'M' OR STL.TL_TIPOREG = 'T') AND "
cQuery += " STL.D_E_L_E_T_ <> '*' "

cQuery := ChangeQuery(cQuery)
dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)
NGI6PREPDA(cAliasQry, cCodIndic)

dbSelectArea(cAliasQry)
dbGoTop()
While !Eof()
   nQtdTR += If((cAliasQry)->TL_TIPOHOR <> "D",NGCONVERHORA((cAliasQry)->TL_QUANTID,;
                 "S","D"),(cAliasQry)->TL_QUANTID)
   DbSkip()
End
(cAliasQry)->(dbCloseArea())

cAliasQry := GetNextAlias()
// Query
If lMV_HIST
	cQuery := "SELECT * "
Else
	cQuery := "SELECT STT.TT_QUANTID,STT.TT_TIPOHOR "
EndIf
cQuery += " FROM "+RetSqlName("STT")+" STT "
cQuery += " INNER JOIN "+RetSqlName("STS")+" STS "
cQuery += " ON STS.TS_ORDEM = STT.TT_ORDEM AND STS.TS_PLANO = STT.TT_PLANO AND"
cQuery += " STS.TS_FILIAL = '"+xFilial("STS")+"' AND "
cQuery += " STS.TS_SITUACA = 'L' AND STS.TS_TERMINO = 'S' AND "
cQuery += " STS.TS_TIPOOS = 'B' AND STS.TS_PLANO <> '000000' AND "
If ValType(De_BemL) == "C" .and. ValType(Ate_Bem) == "C"
	cQuery += " STS.TS_CODBEM >= '"+De_BemL+"' AND STS.TS_CODBEM <= '"+Ate_Bem+"' AND "
Endif
If ValType(De_CcustoL) == "C" .and. ValType(Ate_Ccusto) == "C"
	cQuery += " STS.TS_CCUSTO >= '"+De_CcustoL+"' AND STS.TS_CCUSTO <= '"+Ate_Ccusto+"' AND "
Endif
If ValType(De_CenTraL) == "C" .and. ValType(Ate_CenTra) == "C"
	cQuery += " STS.TS_CENTRAB >= '"+De_CenTraL+"' AND STS.TS_CCUSTO <= '"+Ate_CenTra+"' AND "
Endif
If ValType(De_Data) == "D" .and. ValType(Ate_Data) == "D"
	cQuery += " STS.TS_DTMRINI >= '"+Dtos(De_Data)+"' AND STS.TS_DTMRFIM <= '"+Dtos(Ate_Data)+"' AND "
Endif
cQuery += " STS.D_E_L_E_T_ <> '*' "
cQuery += " WHERE STT.TT_FILIAL = '"+xFilial("STT")+"' AND "
cQuery += " STT.TT_SEQRELA <> '0  ' AND (STT.TT_TIPOREG = 'M' OR STT.TT_TIPOREG = 'T') AND "
cQuery += " STT.D_E_L_E_T_ <> '*' "

cQuery := ChangeQuery(cQuery)
dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),cAliasQry, .F., .T.)
NGI6PREPDA(cAliasQry, cCodIndic)

dbSelectArea(cAliasQry)
dbGoTop()
While !Eof()
   nQtdTR += If((cAliasQry)->TT_TIPOHOR <> "D",NGCONVERHORA((cAliasQry)->TT_QUANTID,;
                 "S","D"),(cAliasQry)->TT_QUANTID)
   DbSkip()
End
(cAliasQry)->(dbCloseArea())

// RESULTADO
nResult := nQtdTR
NGI6PREPVA(cCodIndic, nResult)

RestArea(aAreaOLD)
Return nResult