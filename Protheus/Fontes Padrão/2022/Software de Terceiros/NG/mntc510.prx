#INCLUDE "MNTC510.CH"
#INCLUDE "PROTHEUS.CH"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC510
Consulta Geral do historico do bem - busca pela ST9

MNTC510A - OSHISTORI - ordens - busca pela STF
MNTC510B - MNC510HIS - ordens - busca pela ST9
MNTC510C - MNC510CON - manutenções - busca pela ST9
MNTC510D - OSDETALH  - insumos
MNTC510E - OSHISTOCO - ocorrências
MNTC510F - OSHISTETA - etapas
MNTC510G - OSHISTPRO - problemas
MNTC510H - Motivos de Atraso

@author Inacio Luiz Kolling
@since 02/07/97
@version undefined
@param cBem, characters
@type function
/*/
//---------------------------------------------------------------------
Function MNTC510(cBem)

	Local aNGBEGINPRM := {}

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 19, 95, 35 )

		aNGBEGINPRM := NGBEGINPRM()

		Private aRotina    := MenuDef()
		Private cCadastro  := OemtoAnsi(STR0005) //"Historico do Bem"
		Private conshisto  := .F.
		Private consprogr  := 'MNTC510'
		Private cMEST      := Space(03)
		Private lTLTTIPINS := .F.

		If cBem <> Nil
			DbSelectArea("ST9")
			DbSetOrder(01)
			DbSeek(xFilial("ST9")+ cBem)
			Set Filter To xFilial("ST9") = ST9->T9_FILIAL .And. cBem = ST9->T9_CODBEM
		EndIf

		mBrowse(6,1,22,75,"ST9")

		//---------------------------------------------------------------------
		//| Desativa tecla F12                                             	  |
		//---------------------------------------------------------------------

		Set Key VK_F12 To
		//---------------------------------------------------------------------
		//| Recupera a Ordem Original do arquivo principal               	  |
		//---------------------------------------------------------------------
		DbSelectArea("STI")
		DbSetOrder(01)
		If cBem <> Nil
			Set Filter To
		EndIf

		//---------------------------------------------------------------------
		//| Devolve variaveis armazenadas (NGRIGHTCLICK)                      |
		//---------------------------------------------------------------------
		NGRETURNPRM(aNGBEGINPRM)

	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNC510CON
Manutenções do bem  - busca pela st9

@author Inacio Luiz Kolling
@since 02/07/97
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNC510CON()

	Local OldRot1
	Local OldRot2

	If Findfunction( 'MNTC510C' )

		//-----------------------------------------------------
		// Apresenta menu de forma padrão
		//-----------------------------------------------------
		MNTC510C()

	Else

		If conshisto
			OldRot2 := aCLONE(aROTINA)
		EndIf
		OldRot1 := aCLONE(aROTINA)
		aRotina := {{STR0001,"AXPesqui"  , 0, 1},; //"Pesquisar"
					{STR0002,"MNC600FOLD", 0, 2},; //"Visualizar"
					{STR0004,"OsHistori" , 0, 3}}  //"Historico"

		M->T9_CODBEM := ST9->T9_CODBEM

		DbSelectArea("STF")
		DbSetOrder(01)
		bWHILE := {|| !Eof() .And. STF->TF_CODBEM == M->T9_CODBEM}
		bFOR   := {|| TF_FILIAL == xFILIAL("STF") .And. TF_CODBEM == M->T9_CODBEM}
		NGCONSULTA("TRBF",M->T9_CODBEM,bWHILE,bFOR,aRotina,{})
		DbSelectArea("STF")
		DbSetOrder(01)

		aRotina := If(conshisto,aCLONE(OldRot2),aCLONE(OldRot1))

	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNC510HIS
Ordens de serviço - busca pela st9

@author Inacio Luiz Kolling
@since 02/07/97
@version undefined
@param cAlias, characters
@param nReg, numeric
@param nOpcX, numeric
@param arrayx, array
@param lPerg, logical
@param lPerg1, logical
@param lPerg2, logical
@type function
/*/
//---------------------------------------------------------------------
Function MNC510HIS(cAlias,nReg,nOpcX,arrayx,lPerg,lPerg1,lPerg2)

	Local rothisdet

	If Findfunction( 'MNTC510B' )

		//-----------------------------------------------------
		// Apresenta menu de forma padrão
		//-----------------------------------------------------
		MNTC510B( cAlias, nReg, nOpcX, arrayx, lPerg )

	Else

		Private cCadastro := OemtoAnsi(STR0007) //"Historico de Manutencao"
		Private LCORRET   := .F.

		rothisdet := aCLONE(aROTINA)
		aRotina   := {{STR0008,"MNTC510VIS" , 0, 2},;    //"Visualisar"
					{STR0009,"OSDETALH"   , 0, 2},;    //"Detalhes"
					{STR0010,"OSHISTOCO"  , 0, 4},;    //"Ocorrencia"
					{STR0011,"OshistPro"  , 0, 4},;    //"Problema"
					{STR0013,"NGATRASOS"  , 0, 4,0},;  //"Motivo Atraso"
					{STR0012,"OshistEta"  , 0, 4}}     //"Etapas"

		M->T9_CODBEM := If(lPerg <> Nil,lPerg,ST9->T9_CODBEM)

		cKey     := "B"+M->T9_CODBEM
		bWHILE   := {|| !Eof() .And. STJ->TJ_TIPOOS == "B" .And.;
		STJ->TJ_CODBEM == M->T9_CODBEM}
		bFOR     := {|| STJ->TJ_FILIAL == xFilial("STJ")}
		bWHILE2  := {|| !Eof() .And. STS->TS_TIPOOS == "B" .And.;
		STS->TS_CODBEM == M->T9_CODBEM}
		bFOR2    := {|| STS->TS_FILIAL  == xFilial("STS")}
		bDBFFUNC := {|| NG510PROC("TJ_","TS_","STS",cKey,bWHILE2,bFOR2)}

		DbSelectArea("STS")
		DbSetOrder(02)
		DbSelectArea("STJ")
		DbSetOrder(02)

		NGCONSULTA("TRBJ",cKey,bWHILE,bFOR,aRotina,{},bDBFFUNC)
		DbSelectArea("STS")
		DbSetOrder(01)
		DbSelectArea("STJ")
		DbSetOrder(01)
		aRotina := aCLONE(rothisdet)

	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} OSHISTORI
Ordens de serviço - busca pela stf

@author Inacio Luiz Kolling
@since 02/07/97
@version undefined
@param cAlias, characters
@param nReg, numeric
@param nOpcX, numeric
@param arrayx, array
@param lPerg, logical
@param lPerg1, logical
@param lPerg2, logical
@type function
/*/
//---------------------------------------------------------------------
Function OSHISTORI(cAlias,nReg,nOpcX,arrayx,lPerg,lPerg1,lPerg2)

	Local rothisdet
	Local cAliasTRB := ''
	Local aButtons	:= {}
	Local aColors	:= {}
	Local cFilter	:= ''
	Local nX

	If !FindFunction( 'MNTC510A' )

		cAliasTRB := GetNextAlias()

		Private cCadastro := OemtoAnsi(STR0007) //"Historico de Manutencao"
		Private LCORRET   := .F.

		rothisdet := aCLONE(aROTINA)
		aRotina   := {{STR0008,"MNTC510VIS" , 0, 1},;    //"Visual."
					{STR0009,"Osdetalh"   , 0, 2},;    //"Detalh."
					{STR0010,"Oshistoco"  , 0, 4},;    //"Ocorren."
					{STR0011,"OshistPro"  , 0, 4},;    //"proBlem."
					{STR0013,"NGATRASOS"  , 0, 4,0},;  //"Motivo Atraso"
					{STR0012,"OshistEta"  , 0, 4}}     //"Etapas"
		//Botoes adicionais do aRotina
		If ExistBlock("MNTC5102")
			aButtons := aClone( ExecBlock("MNTC5102",.F.,.F.) )
			For nX := 1 To Len(aButtons)
				aAdd(aRotina, aButtons[nX])
			Next nX
		EndIf

		M->TF_CODBEM  := IIf(lPerg <> Nil, lPerg , (_cTRB)->TF_CODBEM)
		M->TF_SERVICO := IIf(lPerg <> Nil, lPerg1, (_cTRB)->TF_SERVICO)
		M->TF_SEQRELA := IIf(lPerg <> Nil, lPerg2, (_cTRB)->TF_SEQRELA)

		cKey   := "B"+M->TF_CODBEM+M->TF_SERVICO+M->TF_SEQRELA
		bWHILE := {|| !Eof() .And. STJ->TJ_TIPOOS == "B" .And.;
		STJ->TJ_CODBEM  == M->TF_CODBEM    .And.;
		STJ->TJ_SERVICO == M->TF_SERVICO   .And.;
		STJ->TJ_SEQRELA == M->TF_SEQRELA}
		bFOR     := {|| STJ->TJ_FILIAL == xFilial("STJ")}
		bWHILE2  := {|| !Eof() .And. STS->TS_TIPOOS == "B" .And.;
		STS->TS_CODBEM  == M->TF_CODBEM    .And.;
		STS->TS_SERVICO == M->TF_SERVICO   .And.;
		STS->TS_SEQRELA == M->TF_SEQRELA}
		bFOR2    := {|| STS->TS_FILIAL  == xFilial("STS")}
		bDBFFUNC := {|| NG510PROC("TJ_","TS_","STS",cKey,bWHILE2,bFOR2)}

		//Cores do Browse
		aColors := {}
		If ExistBlock("MNTC5101")
			aColors := aClone( ExecBlock("MNTC5101",.F.,.F.) )
		EndIf

		//Filtro inicial do browse
		cFilter := ""
		If ExistBlock("MNTC5103")
			cFilter := ExecBlock("MNTC5103",.F.,.F.)
		EndIf

		If !Empty( cFilter )
			cFilter += ' .And. '
		EndIf

		cFilter += "TJ_SITUACA != 'C' "

		DbSelectArea("STS")
		DbSetOrder(02)
		DbSelectArea("STJ")
		DbSetOrder(02)

		NGCONSULTA(cAliasTRB,cKey,bWHILE,bFOR,aRotina,{},bDBFFUNC,,,,aColors,cFilter)
		DbSelectArea("STS")
		DbSetOrder(01)
		DbSelectArea("STJ")
		DbSetOrder(01)
		aRotina := aCLONE(rothisdet)


	Else
		//-----------------------------------------------------
		// Apresenta menu de forma padrão
		//-----------------------------------------------------
		MNTC510A( lPerg, lPerg1, lPerg2 )
	EndIf

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC510VIS
Visualização genérica das tabelas geradas pelas rotinas do fonte

@author Inacio Luiz Kolling
@since 02/07/97
@version undefined
@param cAlias, characters
@param nRecno, numeric
@param nOpca, numeric
@type function
/*/
//---------------------------------------------------------------------
Function MNTC510VIS(cAlias,nRecno,nOpca)

	Private aNgButton	:= {}

	aAdd(aNgButton,{STR0030, {||MsDocument("STJ",STJ->(Recno()),1) },STR0030,STR0030}) //"Conhecimento"

	lCORRET := Nil
	If cAlias = "STL"
		aTrocaF3    := {}
		M->TL_TIPOREG := STL->TL_TIPOREG
		VERDESTINO(.T.)
		dbSelectArea("STF")
		dbSetOrder(1)
		dbSeek(xFilial("STF")+STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA)
		If Val(STJ->TJ_PLANO) == 0 .And. NGUSATARPAD()
			aAdd(aTrocaF3,{"TL_TAREFA","TT9"})
		EndIf
	EndIf

	RegToMemory(cAlias, (nOpca == 3))
	NGCAD01(cAlias,nRecno,nOpca)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} OSHISTOCO
Ocorrencias da ordem de serviço

@author Inacio Luiz Kolling
@since 02/07/97
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function OSHISTOCO()

	Local aRotinaOld := {}

	If FindFunction( 'MNTC510E' )

		//-----------------------------
		// com Menu padrão
		//-----------------------------
		MNTC510E()

	Else

		Private cCadastro := OemtoAnsi(STR0014) //"Historico das Ocorrencias"

		aRotinaOld        := aClone(aRotina)
		aRotina           := {{STR0002,"MNTC510VIS",0,2}}  //"Visualizar"

		//Verifica se TRB existe.
		If Type( "_cTrb" ) <> "U"
			If Select( _cTrb ) > 0
				dbSelectArea("STJ")
				dbSetOrder(4)
				dbSeek(xFilial("STJ")+(_cTRB)->TJ_SERVICO+(_cTRB)->TJ_TIPOOS+(_cTRB)->TJ_CODBEM+(_cTRB)->TJ_SEQRELA+(_cTRB)->TJ_ORDEM)
			EndIf
		EndIf
		M->TJ_ORDEM := STJ->TJ_ORDEM
		M->TJ_PLANO := STJ->TJ_PLANO
		cKey        := M->TJ_ORDEM+M->TJ_PLANO
		aTrocaF3    := {}

		dbSelectArea("STF")
		dbSetOrder(1)
		dbSeek(xFilial("STF")+STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA)
		If Val(STJ->TJ_PLANO) == 0 .And. NGUSATARPAD()
			aAdd(aTrocaF3,{"TN_TAREFA","TT9"})
		EndIf

		dbSelectArea("STU")
		dbSetOrder(01)
		bWHILE2  := {|| !Eof()                       .And.;
		STU->TU_ORDEM == M->TJ_ORDEM .And.;
		STU->TU_PLANO == M->TJ_PLANO}
		bFOR2    := {|| TU_FILIAL == xFilial("STU")}
		bDBFFUNC := {|| NG510PROC("TN_","TU_","STU",cKey,bWHILE2,bFOR2)}

		dbSelectArea("STN")
		dbSetOrder(01)
		bWHILE := {|| !Eof()                       .And.;
		STN->TN_ORDEM == M->TJ_ORDEM .And.;
		STN->TN_PLANO == M->TJ_PLANO}
		bFOR   := {|| TN_FILIAL  == xFilial("STN")}

		NGCONSULTA("TRBN",cKey,bWHILE,bFOR,aRotina,{},bDBFFUNC)
		dbSelectArea("STN")
		dbSetOrder(01)
		aRotina := aClone(aRotinaOld)
		aTrocaF3:= {}

	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} OSHISTPRO
Problemas da ordem de serviço

@author Inacio Luiz Kolling
@since 02/07/97
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function OSHISTPRO()

	Local rothisprob

	If FindFunction( 'MNTC510G' )

		//--------------------
		// com Menu padrão
		//--------------------
		MNTC510G()

	Else

		Private cCadastro := OemtoAnsi(STR0015) //"Historico dos Problemas "

		rothisprob  := aCLONE(aROTINA)
		aRotina     := {{STR0002,"MNTC510VIS",0,2}}  //"Visualizar"

		M->TJ_ORDEM := STJ->TJ_ORDEM
		M->TJ_PLANO := STJ->TJ_PLANO
		cKey        := M->TJ_ORDEM + M->TJ_PLANO
		aTrocaF3    := {}

		dbSelectArea("STF")
		dbSetOrder(1)
		dbSeek(xFilial("STF")+STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA)
		If Val(STJ->TJ_PLANO) == 0 .And. NGUSATARPAD()
			aAdd(aTrocaF3,{"TL_TAREFA","TT9"})
		EndIf

		DbSelectArea("STV")
		DbSetOrder(01)
		bWHILE2  := {|| !Eof()                       .And.;
		STV->TV_ORDEM == M->TJ_ORDEM .And.;
		STV->TV_PLANO == M->TJ_PLANO}
		bFOR2    := {|| TV_FILIAL == xFilial("STV") .And.;
		TV_ORDEM  == M->TJ_ORDEM    .And.;
		TV_PLANO  == M->TJ_PLANO}
		bDBFFUNC := {|| NG510PROC("TA_","TV_","STV",cKey,bWHILE2,bFOR2)}

		DbSelectArea("STA")
		DbSetOrder(01)
		bWHILE := {|| !Eof()                       .And.;
		STA->TA_ORDEM == M->TJ_ORDEM .and.;
		STA->TA_PLANO == M->TJ_PLANO}
		bFOR   := {|| TA_FILIAL == xFilial("STA") .And.;
		TA_ORDEM  == m->TJ_ORDEM    .And.;
		TA_PLANO  == m->TJ_PLANO}

		NGCONSULTA("TRBA",cKey,bWHILE,bFOR,aRotina,{},bDBFFUNC)
		DbSelectArea("STA")
		DbSetOrder(01)
		aRotina := aCLONE(rothisprob)
		aTrocaF3:= {}

	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} OSDETALH
Insumos da ordem de serviço

@author Inacio Luiz Kolling
@since 02/07/97
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function OSDETALH()

	Local aRotinaOld := {}

	If FindFunction( 'MNTC510D' )

		//----------------------------------
		// Rotina com menu padrão definido
		//----------------------------------
		MNTC510D()

	Else

		aRotinaOld := aCLONE(aROTINA)

		Private cCadastro := OemtoAnsi(STR0016) //"Historico dos Detalhes "

		aRotina := {{STR0002,"MNTC510VIS",0,2}}   //"Visualizar"

		DbSelectArea("STJ")
		DbSetOrder(4)
		DbSeek(xFilial("STJ")+(_cTRB)->TJ_SERVICO+(_cTRB)->TJ_TIPOOS+(_cTRB)->TJ_CODBEM+(_cTRB)->TJ_SEQRELA+(_cTRB)->TJ_ORDEM)
		M->TJ_ORDEM := STJ->TJ_ORDEM
		M->TJ_PLANO := STJ->TJ_PLANO
		cKeyTT      := M->TJ_ORDEM + M->TJ_PLANO
		cKey        := M->TJ_ORDEM + M->TJ_PLANO

		DbSelectArea("STT")
		DbSetOrder(01)
		bWHILE2  := {|| !Eof()                       .And.;
		STT->TT_ORDEM == M->TJ_ORDEM .And.;
		STT->TT_PLANO == M->TJ_PLANO}
		bFOR2    := {|| TT_FILIAL == xFilial("STT")  .And.;
		TT_ORDEM  == M->TJ_ORDEM     .And.;
		TT_PLANO  == M->TJ_PLANO}
		bDBFFUNC := {|| NG510PROC("TL_","TT_","STT",cKeyTT,bWHILE2,bFOR2)}

		DbSelectArea("STL")
		DbSetOrder(01)
		bWHILE := {|| !Eof()                       .And.;
		STL->TL_ORDEM == M->TJ_ORDEM .And.;
		STL->TL_PLANO == M->TJ_PLANO}
		bFOR   := {|| TL_FILIAL == xFilial("STL")  .And.;
		TL_ORDEM  == M->TJ_ORDEM     .And.;
		TL_PLANO  == M->TJ_PLANO}

		NGCONSULTA("TRBL",cKey,bWHILE,bFOR,aRotina,{},bDBFFUNC)
		DbSelectArea("STL")
		DbSetOrder(01)
		aRotina := aCLONE(aRotinaOld)
		aTrocaF3    := {}

	EndIf

Return
//---------------------------------------------------------------------
/*/{Protheus.doc} OSHISTETA
Etapas da ordem de serviço

@author Inacio Luiz Kolling
@since 02/07/97
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function OSHISTETA()
	
	Local aRotinaOld

	If FindFunction( 'MNTC510G' )

		//--------------------------
		// Com menu padrão
		//--------------------------
		MNTC510F()

	Else

		Private cCadastro := OemtoAnsi(STR0021) //"Historico das Etapas "

		//Verifica se TRB existe.
		If Type( "_cTrb" ) <> "U"
			If Select( _cTrb ) > 0
				//Deverá posicionar a STJ para buscar as etapas corretas.
				DbSelectArea("STJ")
				DbSetOrder(1) //TJ_FILIAL+TJ_ORDEM+TJ_PLANO+TJ_TIPOOS+TJ_CODBEM+TJ_SERVICO+TJ_SEQRELA
				DbSeek( xFilial("STJ") + (_cTrb)->TJ_ORDEM + (_cTrb)->TJ_PLANO + (_cTrb)->TJ_TIPOOS + (_cTrb)->TJ_CODBEM )
			EndIf
		EndIf

		aRotinaOld   := aCLONE(aROTINA)
		aRotina     := {{STR0002,"MNTC510VIS"  , 0 , 2},; //"Visualizar"
						{STR0022,"TPQRespos"   , 0 , 4}}  //"Resposta Etapa" // Função da rotina MNTC550.PRX
		M->TJ_ORDEM := STJ->TJ_ORDEM
		M->TJ_PLANO := STJ->TJ_PLANO
		cKeyTX      := M->TJ_ORDEM+M->TJ_PLANO
		cKey        := M->TJ_ORDEM+M->TJ_PLANO
		aTrocaF3    := {}

		If Val(STJ->TJ_PLANO) == 0 .And. NGUSATARPAD()
			aAdd(aTrocaF3,{"TL_TAREFA","TT9"})
		EndIf

		DbSelectArea("STX")
		DbSetOrder(01)
		bWHILE2  := {|| !Eof()                       .And.;
		STX->TX_ORDEM == M->TJ_ORDEM .And.;
		STX->TX_PLANO == M->TJ_PLANO}
		bFOR2    := {|| TX_FILIAL  == xFilial("STX") .And.;
		TX_ORDEM   == M->TJ_ORDEM    .And.;
		TX_PLANO   == M->TJ_PLANO}
		bDBFFUNC := {|| NG510PROC("TQ_","TX_","STX",cKeyTX,bWHILE2,bFOR2)}

		DbSelectArea("STQ")
		DbSetOrder(01)
		bWHILE := {|| !Eof()                       .And.;
		STQ->TQ_ORDEM == M->TJ_ORDEM .And.;
		STQ->TQ_PLANO == M->TJ_PLANO}
		bFOR   := {|| TQ_FILIAL  == xFilial("STQ") .And.;
		TQ_ORDEM   == M->TJ_ORDEM    .And.;
		TQ_PLANO   == M->TJ_PLANO}

		NGCONSULTA("TRBQ",cKey,bWHILE,bFOR,aRotina,{},bDBFFUNC)
		DbSelectArea("STQ")
		DbSetOrder(01)
		aRotina := aCLONE(aRotinaOld)
		aTrocaF3:= {}

	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} INIBRW2
Retorna o valor de um campo apos pesquisa da chave
@author Paulo Pego
@since 02/08/97
@version undefined
@param cArq, characters, Arquivo de acesso do codbem,servico e sequencia
@param cTarefa, characters, Código da tarefa
@type function
/*/
//---------------------------------------------------------------------
Function INIBRW2(cArq,cTarefa)

	Local cKey := Space(15), cRet := Space(20)
	Local cALI := Alias()
	Local lUSATARW := If(FindFunction("NGUSATARPAD"),NGUSATARPAD(),.f.)

	If Upper(cARQ) == "STS"
		cKey := STS->TS_CODBEM+STS->TS_SERVICO+STS->TS_SEQRELA
		lCORRET := If(Val(STS->TS_PLANO) = 0,.T.,.F.)
	ElseIf Upper(cARQ) == "STJ"
		cKey := STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA
		lCORRET := If(Val(STJ->TJ_PLANO) = 0,.T.,.F.)
	Endif

	If lUSATARW
		cRet := NGNOMETAR(cKey,cTarefa)
	Else
		If Trim(cTarefa) == "0"
			cRet := STR0018 //"SEM ESPECIFICACAO   "
		Else
			cRet := NGSEEK("ST5",cKEY+cTarefa,1,"SubStr(ST5->T5_DESCRIC,1,20)")
		Endif
	Endif
	DbSelectArea(cALI)

Return cRet
//---------------------------------------------------------------------
/*/{Protheus.doc} NG510PROC
Processa o arquivo de historico
@author Paulo Pego
@since 02/08/97
@version undefined
@param cOLD, characters
@param cNEW, characters
@param cALI, characters
@param cKey02, characters
@param bWHILE2, block
@param bFOR2, block
@type function
/*/
//---------------------------------------------------------------------
Function NG510PROC(cOLD,cNEW,cALI,cKey02,bWHILE2,bFOR2)
	Local cMestre := Alias()

	DbSelectArea(cALI)
	Dbseek(If(Empty(cKey02),xFilial(cALI),xFilial(cALI)+cKEY02))

	DbEval( {|| NG510GRAVA(cMestre,cALI,cOLD,cNEW)},bFOR2,bWHILE2)
	DbSelectArea(cMESTRE)
Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} NG510GRAVA
GRAVA
@author Paulo Pego
@since 02/08/97
@version undefined
@param cMestre, characters
@param cALI, characters
@param cOLD, characters
@param cNEW, characters
@type function
/*/
//---------------------------------------------------------------------
Static Function NG510GRAVA(cMestre,cALI,cOLD,cNEW)
	Local I := 0
	DbSelectArea(cMESTRE)
	DbAppend()

	For i := 1 To FCount()
		nTamY := Len(cOLD)+1
		nTamX := Len(cNEW)+1
		ny    := cOLD + SubStr(FieldName(i),nTamY)
		nx    := cNEW + SubSTr(FieldName(i),nTamX)
		If FieldName(i) == "RECORIG"
			dbSelectArea(cALI)
			ny   := cMESTRE + "->RECORIG"
			&ny. := RecNo()

			dbSelectArea(cMESTRE)
			Loop
		EndIf
		If FieldName(i) == "TBLORIG"
			dbSelectArea(cALI)
			ny   := cMESTRE + "->TBLORIG"
			&ny. := cALI

			dbSelectArea(cMESTRE)
			Loop
		EndIf
		If FieldPos( ny ) == 0
			Loop
		EndIf
		DbSelectArea(cALI)
		If FieldPos( nx ) == 0
			DbSelectArea(cMESTRE)
			Loop
		EndIf
		DbSelectArea(cMESTRE)
		ny := cMESTRE + "->" + ny
		nx := cALI + "->" + nx
		&ny. := &nx.
	Next

	DbSelectArea(cALI)
Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Utilizacao de menu Funcional
@author Ricardo Dal Ponte
@since 29/11/2006
@version undefined
@Return Array com opcoes da rotina.
@type function
/*/
//---------------------------------------------------------------------
Static Function MenuDef()

	Local lPyme   := Iif(Type("__lPyme") <> "U",__lPyme,.F.)
	Local aRotina := {}

	//------------------------------------------------------------
	//| Parametros do array a Rotina:                 	     	 |
	//| 1. Nome a aparecer no cabecalho                          |
	//| 2. Nome da Rotina associada                              |
	//| 3. Reservado                                             |
	//| 4. Tipo de Transação a ser efetuada:                     |
	//|    1 - Pesquisa e Posiciona em um Banco de Dados         |
	//|    2 - Simplesmente Mostra os Campos                     |
	//|    3 - Inclui registros no Bancos de Dados               |
	//|    4 - Altera o registro corrente                        |
	//|    5 - Remove o registro corrente do Banco de Dados      |
	//| 5. Nivel de acesso                                       |
	//| 6. Habilita Menu Funcional                 		     	 |
	//------------------------------------------------------------

	aRotina := {{STR0001,"AxPesqui" , 0, 1},; //"Pesquisar"
				{STR0002,"NG080FOLD", 0, 2},; //"Visualizar"
				{STR0003,"MNC510CON", 0, 3},; //"Manutencao"
				{STR0004,"MNC510HIS", 0, 4}}  //"Historico"
	If !lPyme
		AAdd( aRotina, {STR0030,"MsDocument",0,4}) //"Conhecimento"
	EndIf
Return(aRotina)

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC510GE
Aciona visualização genérica para tabelas temporárias

@author Maria Elisandra de Paula
@since 26/03/21
@param cAlias, string, tabelas
@param nRecno, numeric, registro posicionado
@param nOpca, numeric, operação 
@type function
/*/
//---------------------------------------------------------------------
Function MNTC510GE( cAlias, nReg, nOpcx )

	Local aArea    := GetArea()
	Local nRecOrig := &(cAlias + "->RECORIG")
	Local cTblOrig := &(cAlias + "->TBLORIG")

	CHKFILE( cTblOrig, .F. )

	dbSelectArea(cTblOrig)
	dbGoTo(nRecOrig)

    MNTC510VIS( cTblOrig, nRecOrig, nOpcx )

	dbSelectArea(cTblOrig)
	Use

	dbSelectArea(cAlias)
	Set Filter To //Retorna as condicoes de filtro

	RestArea( aArea )

Return
