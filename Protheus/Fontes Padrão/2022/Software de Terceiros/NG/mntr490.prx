#INCLUDE "MNTR490.CH"
#INCLUDE "PROTHEUS.CH"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR490
Controle de Equipamento Por Obra.    
@author Rafael Diogo Richter
@since 26/01/2007
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTR490()
	
	Local oReport
	Local aArea := GetArea()
	
	Private cTRB := GetNextAlias()

	If FindFunction("TRepInUse") .And. TRepInUse()

		//-- Interface de impressao
		oReport := ReportDef()
		//   oReport:SetLandscape() //Default paisagem
		oReport:PrintDialog()
	Else
		MNTR490R3()
	EndIf

	RestArea(aArea)

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} ReportDef
Define as secoes impressas no relatorio  
@author Rafael Diogo Richter
@since 25/01/2007
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Static Function ReportDef()
	
	Local oReport
	Local oSection1
	Local oSection2
	Local oSection3
	Local oCell
	Local oCell2
	
	//+------------------------------------------------------------------------+
	//| Criacao do componente de impressao                                     |
	//|                                                                        |
	//| TReport():New                                                          |
	//| ExpC1 : Nome do relatorio                                              |
	//| ExpC2 : Titulo                                                         |
	//| ExpC3 : Pergunte                                                       |
	//| ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao |
	//| ExpC5 : Descricao                                                      |
	//|                                                                        |
	//+------------------------------------------------------------------------+
	oReport := TReport():New("MNTR490",OemToAnsi(STR0006),"MNT490",{|oReport| ReportPrint(oReport)},STR0001+" "+STR0002+" "+STR0003)

	Pergunte(oReport:uParam,.F.)

	//+------------------------------------------------------------------------+
	//| Criacao da secao utilizada pelo relatorio                              |
	//|                                                                        |
	//| TRSection():New                                                        |
	//| ExpO1 : Objeto TReport que a secao pertence                            |
	//| ExpC2 : Descricao da seçao                                             |
	//| ExpA3 : Array com as tabelas utilizadas pela secao. A primeira tabela  |
	//|         sera considerada como principal para a seção.                  |
	//| ExpA4 : Array com as Ordens do relatório                               |
	//| ExpL5 : Carrega campos do SX3 como celulas                             |
	//|         Default : False                                                |
	//| ExpL6 : Carrega ordens do Sindex                                       |
	//|         Default : False                                                |
	//|                                                                        |
	//+------------------------------------------------------------------------+
	
	//+------------------------------------------------------------------------+
	//| Criacao da celulas da secao do relatorio                               |
	//|                                                                        |
	//| TRCell():New                                                           |
	//| ExpO1 : Objeto TSection que a secao pertence                           |
	//| ExpC2 : Nome da celula do relatório. O SX3 será consultado             |
	//| ExpC3 : Nome da tabela de referencia da celula                         |
	//| ExpC4 : Titulo da celula                                               |
	//|         Default : X3Titulo()                                           |
	//| ExpC5 : Picture                                                        |
	//|         Default : X3_PICTURE                                           |
	//| ExpC6 : Tamanho                                                        |
	//|         Default : X3_TAMANHO                                           |
	//| ExpL7 : Informe se o tamanho esta em pixel                             |
	//|         Default : False                                                |
	//| ExpB8 : Bloco de código para impressao.                                |
	//|         Default : ExpC2                                                |
	//|                                                                        |
	//+------------------------------------------------------------------------+
	oSection1 := TRSection():New(oReport,"Obra",{(cTRB)})
	TRCell():New(oSection1,"(cTRB)->OBRA"	,(cTRB)	,"Obra"	,"@!" ,MV_PAR09,/*lPixel*/,/*{|| code-block de impressao }*/)

	oSection2 := TRSection():New(oReport,"Bem",{(cTRB),"ST9"})
	oCell  :=  TRCell():New(oSection2,"(cTRB)->CODBEM"	,(cTRB)	,"Bem"			,"@!" ,16,/*lPixel*/,/*{|| code-block de impressao }*/)
	oCell  :=  TRCell():New(oSection2,"T9_NOME" 		,"ST9"	,"Descrição"	,"@!" ,40,/*lPixel*/)
	oCell  :=  TRPosition():New(oSection2,"ST9",1,{|| xFilial("ST9") + (cTRB)->CODBEM})

	oSection3 := TRSection():New(oReport,"C.Custo",{(cTRB),"CTT","ST9","TPE"})
	oCell2 := TRCell():New(oSection3,"(cTRB)->CCUSTO"  	,(cTRB) ,"C.Custo"			,"@!"		,Len(TPN->TPN_CCUSTO),/*lPixel*/,/*{|| code-block de impressao }*/)
	oCell2 := TRCell():New(oSection3,"CTT_DESC01"	    ,"CTT" ,"Nome C.Custo"	,"@!"		,40,/*lPixel*/,/*{|| code-block de impressao }*/)
	oCell2 := TRCell():New(oSection3,'Status'," ","Status",,20,/*lPixel*/,  {|| MNT490Stat() } )
	
	oCell2 := TRCell():New(oSection3,"(cTRB)->DTINIC"		,(cTRB) ,"Dt.Inic."		,"99/99/9999" ,10,/*lPixel*/)
	oCell2 := TRCell():New(oSection3,"(cTRB)->HRINIC"		,(cTRB) ,"Hr.Inic."		,"99:99" ,10,/*lPixel*/)
	oCell2 := TRCell():New(oSection3,"(cTRB)->POSCON"		,(cTRB) ,"Contador 1"		,"@E 999,999,999" ,10,/*lPixel*/)
	oCell2 := TRCell():New(oSection3,"(cTRB)->POSCO2"		,(cTRB) ,"Contador 2"		,"@E 999,999,999" ,10,/*lPixel*/)
	oCell2 := TRCell():New(oSection3,"T9_CONTACU"		,"ST9" ,"Cont.Acum. 1"	,"@E 999,999,999,999" ,12,/*lPixel*/)
	oCell2 := TRCell():New(oSection3,"TPE_CONTAC"		,"TPE" ,"Cont.Acum. 2"	,"@E 999,999,999,999" ,12,/*lPixel*/)
	oCell2 := TRPosition():New(oSection1,"CTT",1,{|| xFilial("CTT")+(cTRB)->CCUSTO})
	oCell2 := TRPosition():New(oSection3,"ST9",1,{|| xFilial("ST9") + (cTRB)->CODBEM })
	oCell2 := TRPosition():New(oSection3,"TPE",1,{|| xFilial("TPE") + (cTRB)->CODBEM })

Return oReport

//---------------------------------------------------------------------
/*/{Protheus.doc} ReportPrint
Chamada do Relatório  
@author Rafael Diogo Richter
@since 26/01/2007
@version undefined
@param oReport, object, descricao
@type function
/*/
//---------------------------------------------------------------------
Static Function ReportPrint(oReport)
	
	Local oSection1 := oReport:Section(1)
	Local oSection2 := oReport:Section(2)
	Local oSection3 := oReport:Section(3)
	Local lPrim     := .T.
	
	Local oTmpTbl1	//Tabela Temporaria
	
	If Empty(MV_PAR09)
		Help(" ",1,"NGMVERPARA")
		Return .F.
	EndIf

	aCAMPOS  := {}
		AADD(aCAMPOS,{"OBRA"   ,"C",MV_PAR09,0})
		AADD(aCAMPOS,{"CCUSTO" ,"C",Len(TPN->TPN_CCUSTO),0})
		AADD(aCAMPOS,{"CODBEM" ,"C",16,0})
		AADD(aCAMPOS,{"SITUAC" ,"C",01,0})
		AADD(aCAMPOS,{"DTINIC" ,"D",08,0})
		AADD(aCAMPOS,{"HRINIC" ,"C",05,0})
		AADD(aCAMPOS,{"POSCON" ,"N",09,0})
		AADD(aCAMPOS,{"POSCO2" ,"N",09,0})

	//Intancia classe FWTemporaryTable
	oTmpTbl1:= FWTemporaryTable():New( cTRB, aCAMPOS )
	//Cria indices
	oTmpTbl1:AddIndex( "Ind01" , {"OBRA","CODBEM","CCUSTO","DTINIC"})
	//Cria a tabela temporaria
	oTmpTbl1:Create()
	
	DbSelectArea("TPN")
	DbSetOrder(01)
	DbSeek(xFILIAL("TPN")+MV_PAR07,.T.)
	oReport:SetMeter(LastRec())
	
	While !Eof() .And. TPN-> TPN_FILIAL == xFILIAL("TPN") .And.;
					   TPN-> TPN_CODBEM <= MV_PAR08
		oReport:IncMeter()
		If TPN->TPN_DTINIC < MV_PAR03 .Or. TPN->TPN_DTINIC > MV_PAR04
			DbSelectArea("TPN")
			DbSkip()
			Loop
		EndIf

		If TPN->TPN_CCUSTO < MV_PAR01 .Or. TPN->TPN_CCUSTO > MV_PAR02
			DbSelectArea("TPN")
			DbSkip()
			Loop
		EndIf

		DbSelectArea("ST9")
		DbSetOrder(01)
		If DbSeek(xFILIAL("ST9")+TPN->TPN_CODBEM)
			If ST9->T9_CODFAMI < MV_PAR05 .Or. ST9->T9_CODFAMI > MV_PAR06
				DbSelectArea("TPN")
				DbSkip()
				Loop
			EndIf
		Else
			DbSelectArea("TPN")
			DbSkip()
			Loop
		EndIf   

		DbSelectArea(cTRB)
		DbAppend()
		(cTRB)->OBRA   := SubStr(TPN->TPN_CCUSTO,1,MV_PAR09)
		(cTRB)->CCUSTO := TPN->TPN_CCUSTO
		(cTRB)->CODBEM := TPN->TPN_CODBEM
		(cTRB)->SITUAC := TPN->TPN_UTILIZ
		(cTRB)->DTINIC := TPN->TPN_DTINIC
		(cTRB)->HRINIC := TPN->TPN_HRINIC
		(cTRB)->POSCON := TPN->TPN_POSCON 
		(cTRB)->POSCO2 := TPN->TPN_POSCO2

		DbSelectArea("TPN")
		DbSkip()
	End

	DbSelectArea(cTRB)
	DbGotop()
	oReport:SetMeter(LastRec())
	
	While !Eof()
		cCODOBRA := (cTRB)->OBRA
		oReport  :SkipLine()
		oSection1:Init()
		oSection1:PrintLine()
		oSection2:Init()

		DbSelectArea(cTRB)
		While !Eof() .And. (cTRB)->OBRA == cCODOBRA
			cCODBEM := (cTRB)->CODBEM
			oSection2:PrintLine()
			
			DbSelectArea(cTRB)
			While !Eof() .And. (cTRB)->OBRA == cCODOBRA .And.;
							   (cTRB)->CODBEM == cCODBEM
				lPRIM    := .T.
				cCODCUST := (cTRB)->CCUSTO
				oSection3:Init()   
				DbSelectArea(cTRB)
				While !Eof() .And. (cTRB)->OBRA   == cCODOBRA  .And.;
								   (cTRB)->CODBEM == cCODBEM   .And.;
 								   (cTRB)->CCUSTO == cCODCUST

					oReport:IncMeter()
					If !lPRIM
						oReport:SkipLine()
					Else
						lPRIM := .F.
					EndIf

					oSection3:PrintLine()
					DbSelectArea(cTRB)
					DbSkip()
				End
				oSection3:Finish()
			End
			oSection1:Finish()
			oSection2:Finish()
		End
	End
	
	//Deleta arquivo temporario 1
	oTmpTbl1:Delete() 
	
	RetIndex("ST9")
	Set Filter To

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTR490R3
Controle de Equipamento Por Obra   
@author Inacio Luiz Kolling 
@since 01/03/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTR490R3()

	Local cSTRING    := "CTT"
	Local cDESC1     := STR0001   //"Relatorio de Controle de Equipamento Por Obra."
	Local cDESC2     := STR0002   //"E permitido selecionar tipo de informacao a ser"
	Local cDESC3     := STR0003   //"apresentada, atraves dos parametros do relatorio."
	Local WNREL      := "MNTR490"

	Private aRETURN  := {STR0004,1,STR0005,1,2,1,"",1} //"Zebrado"###"Administracao"
	Private nLASTKEY := 0
	Private nTIPO    := 0
	Private NOMEPROG := "MNTR490"
	Private TITULO   := STR0006   //"Relatorio de Controle de Equipamento Por Obra"
	Private TAMANHO  := "M"

	//+--------------------------------------------------------------+
	//| Variaveis utilizadas para Parametros!                        |
	//| MV_PAR01     -  De C.Custo (Obra)                            |
	//| MV_PAR02     -  Ate C.Custo                                  |
	//| MV_PAR03     -  De Data Inicio                               |
	//| MV_PAR04     -  Ate Data Fim                                 |
	//| MV_PAR05     -  De Familia                                   |
	//| MV_PAR06     -  Ate Familia                                  |
	//| MV_PAR07     -  De Bem                                       |
	//| MV_PAR08     -  Ate Bem                                      |
	//| MV_PAR09     -  QTD. Caracter Obra                           |
	//+--------------------------------------------------------------+
	Private cPERG := "MNT490"
	Pergunte(cPERG,.F.)

	//+--------------------------------------------------------------+
	//| Envia controle para a funcao SETPRINT                        |
	//+--------------------------------------------------------------+
	WNREL := SetPrint(cSTRING,WNREL,cPERG,TITULO,cDESC1,cDESC2,cDESC3,.F.,"")
	
	If nLASTKEY = 27
		Set Filter To
		Return
	EndIf
	
	SetDefault(aRETURN,cSTRING)
	RptStatus({|lEND| R490IMP(@lEND,WNREL,TITULO,TAMANHO)},TITULO)

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} R490IMP
Chamada do Relatório   
@author Inacio Luiz Kolling 
@since 01/03/2001
@version undefined
@param lEND, logical, descricao
@param WNREL, , descricao
@param TITULO, , descricao
@param TAMANHO, , descricao
@type function
/*/
//---------------------------------------------------------------------
Static Function R490IMP(lEND,WNREL,TITULO,TAMANHO)
	
	Local cRODATXT := ""
	Local nCNTIMPR := 0

	//+--------------------------------------------------------------+
	//| Tabela Temporaria 										     |	
	//+--------------------------------------------------------------+
	Local oTmpTbl2		

	//+--------------------------------------------------------------+
	//| Contadores de linha e pagina                                 |
	//+--------------------------------------------------------------+
	Private li := 80 ,m_pag := 1
	
	//+--------------------------------------------------------------+
	//| Verifica se deve comprimir ou nao                            |
	//+--------------------------------------------------------------+
	nTIPO := IIF(aRETURN[4]==1,15,18)	
	
	//+--------------------------------------------------------------+
	//| Monta os Cabecalhos                                          |
	//+--------------------------------------------------------------+	
	Private CABEC1 := STR0022 //"    C.Custo              Nome C. Custo         Situacao  Dt.Inic.   Hr.Inic.   Contador1   Contador2     Cont.Acum 1     Cont.Acum 2"					    
	Private CABEC2 := " "
	/*
	1         2         3         4         5         6         7        8        9          100    110       120    130
	012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012346789012
	************************************************************************************************************************************
	C.Custo              Nome C. Custo       Situacao  Dt.Inic.   Hr.Inic.   Contador1   Contador2     Cont.Acum 1     Cont.Acum 2
	************************************************************************************************************************************
	Obra..: xxxxxxxxx
	Bem..: xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	xxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx xxxxxxxxx 99/99/9999 99:99    999.999.999 999.999.999 999.999.999.999 999.999.999.999
	*/

	If Empty(MV_PAR09)
		Help(" ",1,"NGMVERPARA")
		Return .F.
	EndIf

	aCAMPOS  := {}
		AADD(aCAMPOS,{"OBRA"   ,"C",MV_PAR09,0})
		AADD(aCAMPOS,{"CCUSTO" ,"C",Len(TPN->TPN_CCUSTO),0})
		AADD(aCAMPOS,{"CODBEM" ,"C",16,0})
		AADD(aCAMPOS,{"SITUAC" ,"C",01,0})
		AADD(aCAMPOS,{"DTINIC" ,"D",08,0})
		AADD(aCAMPOS,{"HRINIC" ,"C",05,0})
		AADD(aCAMPOS,{"POSCON" ,"N",09,0})
		AADD(aCAMPOS,{"POSCO2" ,"N",09,0})
		
	//Intancia classe FWTemporaryTable
	oTmpTbl2:= FWTemporaryTable():New( cTRB, aCAMPOS )
	//Cria indices
	oTmpTbl2:AddIndex( "Ind01" , {"OBRA","CODBEM","CCUSTO","DTINIC"}  )
	//Cria a tabela temporaria
	oTmpTbl2:Create()

	DbSelectArea("TPN")
	DbSetOrder(01)
	DbSeek(xFILIAL("TPN")+MV_PAR07,.T.)
	SetRegua(LastRec())
	While !Eof() .And. TPN->TPN_FILIAL == xFILIAL("TPN") .And.;
	TPN->TPN_CODBEM <= MV_PAR08

		IncRegua()
		If TPN->TPN_DTINIC < MV_PAR03 .Or. TPN->TPN_DTINIC > MV_PAR04
			DbSelectArea("TPN")
			DbSkip()
			Loop
		EndIf

		If TPN->TPN_CCUSTO < MV_PAR01 .Or. TPN->TPN_CCUSTO > MV_PAR02
			DbSelectArea("TPN")
			DbSkip()
			Loop
		EndIf

		DbSelectArea("ST9")
		DbSetOrder(01)
		If DbSeek(xFILIAL("ST9")+TPN->TPN_CODBEM)
			If ST9->T9_CODFAMI < MV_PAR05 .Or. ST9->T9_CODFAMI > MV_PAR06
				DbSelectArea("TPN")
				DbSkip()
				Loop
			EndIf
		Else
			DbSelectArea("TPN")
			DbSkip()
			Loop
		EndIf   

		DbSelectArea(cTRB)
		DbAppend()
		(cTRB)->OBRA   := SubStr(TPN->TPN_CCUSTO,1,MV_PAR09)
		(cTRB)->CCUSTO := TPN->TPN_CCUSTO
		(cTRB)->CODBEM := TPN->TPN_CODBEM
		(cTRB)->SITUAC := TPN->TPN_UTILIZ
		(cTRB)->DTINIC := TPN->TPN_DTINIC
		(cTRB)->HRINIC := TPN->TPN_HRINIC
		(cTRB)->POSCON := TPN->TPN_POSCON 
		(cTRB)->POSCO2 := TPN->TPN_POSCO2
		
		DbSelectArea("TPN")
		DbSkip()
	End

	DbSelectArea(cTRB)
	DbGotop()
	SetRegua(LastRec())
	While !Eof()

		cCODOBRA := (cTRB)->OBRA
		NGSOMALI(58)
		@ Li,000 Psay STR0023 + cCODOBRA
		NGSOMALI(58)
		DbSelectArea(cTRB)

		While !Eof() .And. (cTRB)->OBRA == cCODOBRA
			cCODBEM := (cTRB)->CODBEM
			DbSelectArea("ST9")
			DbSetOrder(01)
			DbSeek(xFILIAL("ST9")+cCODBEM)
			NGSOMALI(58)
			@ Li,002 Psay STR0025
			@ Li,009 Psay cCODBEM Picture "@!"
			@ Li,025 Psay ST9->T9_NOME
			DbSelectArea(cTRB)

			While !Eof() .And. (cTRB)->OBRA == cCODOBRA .And.;
			(cTRB)->CODBEM == cCODBEM
				cCODCUST := (cTRB)->CCUSTO
				@ Li,004 Psay cCODCUST
				@ Li,025 Psay NGSEEK("CTT",cCODCUST , 1, "CTT_DESC01")
				
				lPRIM := .T.

				DbSelectArea(cTRB)
				While !Eof() .And. (cTRB)-> OBRA   == cCODOBRA  .And.;
								   (cTRB)-> CODBEM == cCODBEM   .And.;
								   (cTRB)-> CCUSTO == cCODCUST

					IncRegua()
					If !lPRIM
						NGSOMALI(58)
					Else
						lPRIM := .F.
					EndIf

					If (cTRB)->SITUAC = 'P'
						@ Li,047 Psay STR0028
					Else
						@ Li,047 Psay STR0027
					EndIf
					@ Li,057 Psay (cTRB)->DTINIC  Picture "99/99/9999"
					@ Li,068 Psay (cTRB)->HRINIC  Picture "99:99"
					@ Li,077 Psay (cTRB)->POSCON  Picture "@E 999,999,999"
					@ Li,089 Psay (cTRB)->POSCO2  Picture "@E 999,999,999"

					DbSelectArea("ST9") 
					DbSetOrder(01)
					DbSeek(xFilial("ST9")+cCodBem)
					@ Li,101 Psay ST9->T9_CONTACU Picture "@E 999,999,999,999"

					DbSelectArea("TPE") 
					DbSetOrder(01)
					DbSeek(xFilial("TPE")+cCodBem)
					@ Li,117 Psay TPE->TPE_CONTAC Picture "@E 999,999,999,999"
					DbSelectArea(cTRB)
					DbSkip()
				End
			End
		End
		NGSOMALI(58)
	End
	RODA(nCNTIMPR,cRODATXT,TAMANHO)

	//Deleta Arquivo temporario 2
	oTmpTbl2:Delete() 
	
	//+--------------------------------------------------------------+
	//| Devolve a condicao original do arquivo principam             |
	//+--------------------------------------------------------------+
	RetIndex("ST9")
	Set Filter To
	Set Device To Screen
	
	If aRETURN[5] = 1
		Set Printer To
		DbCommitAll()
		OurSpool(WNREL)
	EndIf
	
	MS_FLUSH()
	
Return Nil


//-------------------------------------------------------------------
/*/{Protheus.doc} MNT490Stat
Carrega a descrição do status

@author Tainã Alberto Cardoso
@since  22/05/2020

@return cStatus, caracter
/*/
//-------------------------------------------------------------------
Static Function MNT490Stat()
	
	Local cStatus := ""

	If (cTRB)->SITUAC == "P"
		cStatus := STR0028 //"Parado"
	Else
		cStatus := STR0027 //"Utilizado"
	EndIf

Return cStatus