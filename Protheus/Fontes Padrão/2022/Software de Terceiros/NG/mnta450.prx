#INCLUDE "mnta450.ch"
#INCLUDE "PROTHEUS.CH"

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450
Ordem de Servico de Reforma
@author NG INFORMATICA
@since 21/11/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450(cBemPai)

	//+-------------------------------------------------------------------+
	//| Guarda conteudo e declara variaveis padroes 					  |
	//+-------------------------------------------------------------------+

	Local aNGBEGINPRM := NGBEGINPRM()
	Local oTmpTbl1 //Obj. Tab. Temporária 1

	Default cBemPai := Space(TamSx3("TJ_BEMPAI")[1])

	Private cBemClick := cBemPai
	Private lUSATARG  := If(FindFunction("NGUSATARPAD"),NGUSATARPAD(),.f.)
	Private lSEQTAR   := NGCADICBASE("TL_SEQTARE","A","STL",.F.)
	Private lRegVir   := .f.,nDifVir := 0,lGravaSCP := .f.
	Private aRotina   := MenuDef()
	Private cCadastro := OemtoAnsi(STR0008),cPrograma := "MNTA450"
	Private aTrocaF3  := {},aARRSTJDE := {}
	Private lSITUACA,lRETORNO,lINCREFO,lFILBRW,lSH1,lCONTP,lCORRET,TIPOACOM
	Private TIPOACOM2,lTEMEST,lCHKCON1,lCHKCON2
	Private nOpcai,nOpcae,nCONTADOR,nCONTADOR2,nOpcon
	Private cHORCON1,cHORCON2
	Private lChkPR  := SuperGetMv("MV_NGCOQPR",.F.,"N") == "S" //checa qtd pecas de reposicao
	Private cPar01  := Space(6), cPar02 := Space(6), cPar05 := Space(3)
	Private lPREVIS := .T. // UTILIZADO NA FUNCAO NGCALDTHO
	Private nINDSTQ := 1, cINSPREV := "P"
	Private lMMoeda := NGCADICBASE("TL_MOEDA","A","STL",.F.) // Multi-Moeda

	Private cTRBJ450 := GetNextAlias()//Alias Tab. 1

	//Variaveis necessárias para a validacao do campo TL_TAREFA
	Private MV_PAR01  := Space(16)
	Private MV_PAR02  := Space(6)
	Private MV_PAR05  := "0"//Informado zero pois O.S.'s de reforma só podem ser corretivas

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 19, 95 )
		
		If FindFunction("NGSEQETA")
			nINDSTQ := NGSEQETA("STQ",nINDSTQ)
		EndIf
		
		Store 0   To nOpcai,nOpcae,nCONTADOR,nCONTADOR2
		Store .F. To lSITUACA,lRETORNO,lINCREFO,lFILBRW,lSH1,lCONTP,TIPOACOM,TIPOACOM2
		Store .F. To lCHKCON1,lCHKCON2

		cUsaIntAL := Alltrim(GETMV("MV_NGALCAD"))
		cUsaIntPc := Alltrim(GETMV("MV_NGMNTPC"))
		cUsaIntCm := Alltrim(GETMV("MV_NGMNTCM"))
		cUsaIntEs := Alltrim(GETMV("MV_NGMNTES"))
		lCORRET   := .T.
		aPos1     := {15,1,95,315 }
		
		aDBFJ := {}
		aAdd(aDBFJ,{"TJ_ORDEM"   , "C", 06,0})
		aAdd(aDBFJ,{"TJ_PLANO"   , "C", 06,0})
		aAdd(aDBFJ,{"TJ_BEMPAI"  , "C", 16,0})
		aAdd(aDBFJ,{"TJ_NOMPAI"  , "C", 30,0})
		aAdd(aDBFJ,{"TJ_CODBEM"  , "C", 16,0})
		aAdd(aDBFJ,{"TJ_NOMEBEM" , "C", 30,0})
		aAdd(aDBFJ,{"TJ_SERVICO" , "C", 06,0})
		aAdd(aDBFJ,{"TJ_NOMESER" , "C", 30,0})
		aAdd(aDBFJ,{"TJ_SEQRELA" , "C", 03,0})
		aAdd(aDBFJ,{"TJ_DTORIGI" , "D", 08,0})
		aAdd(aDBFJ,{"TJ_DTMPINI" , "D", 08,0})
		aAdd(aDBFJ,{"TJ_POSCONT" , "N", 09,0})
		aAdd(aDBFJ,{"TJ_HORACO1" , "C", 05,0})
		aAdd(aDBFJ,{"TJ_POSCON2" , "N", 09,0})
		aAdd(aDBFJ,{"TJ_HORACO2" , "C", 05,0})

		//Criação Tabela Temporária
		oTmpTbl1:= NGFwTmpTbl(cTRBJ450,aDBFJ,{{"TJ_ORDEM","TJ_BEMPAI"}})

		aTRBJ := {{STR0009 ,"TJ_ORDEM"   ,"C",16,0,"@!"      },; //"Ordem Pai"
				{STR0010 ,"TJ_BEMPAI"  ,"C",16,0,"@!"      },; //"Bem Pai"
				{STR0011 ,"TJ_NOMPAI"  ,"C",30,0,"@!"      },; //"Nome do Bem Pai"
				{STR0014 ,"TJ_SERVICO" ,"C",06,0,"@!"      },; //"Servico"
				{STR0015 ,"TJ_NOMESER" ,"C",30,0,"@!"      },; //"Nome do Servico"
				{STR0016 ,"TJ_SEQRELA" ,"C",03,0,"@!"      },; //"Sequencia"
				{STR0017 ,"TJ_DTORIGI" ,"D",09,0,"99/99/99"},; //"Dt.Origem"
				{STR0018 ,"TJ_DTMPINI" ,"D",09,0,"99/99/99"}}  //"Dt.Prevista"

		Processa({ |lEnd| MNTA450OS() }, STR0019 ) //"Aguarde ..Processanto Arquivo de O.S."

		dbSelectArea(cTRBJ450)
		dbGoTop()
		mBrowse(6,1,22,75,cTRBJ450,aTRBJ)

		oTmpTbl1:Delete() // Deleta Tabela Temporária 1

		Set Key VK_F9 To
		dbSelectArea("STJ")
		dbSetOrder(1)
		dbSeek(xFilial("STJ"))
		
	EndIf

	//+-------------------------------------------------------------------+
	//| Retorna conteudo de variaveis padroes       					  |
	//+-------------------------------------------------------------------+
	NGRETURNPRM(aNGBEGINPRM)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450PE
Pesquisa especifica para ordem de reforma
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450PE()

	Local oMenu

	cREFORDEM := Space(LEN(STJ->TJ_ORDEM))
	cREFCODBE := Space(LEN(STJ->TJ_BEMPAI))

	Define MsDialog oDlg5 From 300,120 To 400,363 Title OemToAnsi(STR0001) Pixel

	@ 0.5,1 say OemtoAnsi(STR0009)
	@ 0.5,5 Msget cREFORDEM  Picture '@!' SIZE 20,10

	@ 1.5,1 say OemtoAnsi(STR0010)
	@ 1.5,5 Msget cREFCODBE  Picture '@!' SIZE 60,10 F3 "ST9" HASBUTTON

	@ 3.7,20 BUTTON "_OK" SIZE 30,10 ACTION MNTA450POS()

	NgPopUp(@AsMenu,@oMenu)
	oDlg5:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg5)}
	Activate MsDialog oDlg5 Centered

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450POS
Posiciona no registro
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Static Function MNTA450POS()

	DbSelectArea(cTRBJ450)
	DbSeek(cREFORDEM+cREFCODBE)
	oDlg5:End()

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450VJ
Posiciona e visualiza a ordem Pai
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450VJ()

	Local cALISOLD := alias(), nINDIOLD := Indexord()

	DbSelectArea("STJ")
	DbSetOrder(1)
	Dbseek(xfilial("STJ")+(cTRBJ450)->TJ_ORDEM+(cTRBJ450)->TJ_PLANO)
	NGCAD01("STJ",Recno(),2)
	DbSelectArea(cALISOLD)
	DbSetOrder(nINDIOLD)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450E
Posiciona e visualiza a ordem Pai exclui todas as relacionadas
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450E()

	Local cALISOLD := alias(),nINDIOLD := Indexord(),nOSRECN := 0,cCadold := cCadastro
	Local lRet := .T.
	
	If !MNTA450VOS()
		lRet := .F.
	EndIf

	If lRet
		DbSelectArea("STJ")
		DbSetOrder(1)
		If Dbseek(xfilial("STJ")+(cTRBJ450)->TJ_ORDEM+(cTRBJ450)->TJ_PLANO)

			nOSRECN := Recno()

			//ESTA FUNCAO ESTA NO MNTA400

			NG400EXC("STJ",Recno(),5)

			DbSelectArea("STJ")
			DbGoto(nOSRECN)
			If STJ->TJ_SITUACA == "C"
				DbSelectArea("STJ")
				DbSetOrder(11)
				If Dbseek(xfilial("STJ")+(cTRBJ450)->TJ_ORDEM)

					While !Eof() .And. STJ->TJ_FILIAL == xFILIAL("STJ") .And. STJ->TJ_ORDEPAI == (cTRBJ450)->TJ_ORDEM

						If AllTrim(GetNewPar("MV_NGINTER","N")) == "M"  //Mensagem Unica
							If !NGMUCanMnO(STJ->(RecNo()))
								DbSelectArea("STJ")
								Dbskip()
								Loop
							EndIf
						EndIf

						RecLock("STJ",.F.)
						STJ->TJ_SITUACA := "C"
						MsUnLock("STJ")

						DbSelectArea("STL")
						DbSetOrder(1)
						If Dbseek(xfilial("STL")+STJ->TJ_ORDEM+STJ->TJ_PLANO)
							While !Eof() .And. STL->TL_FILIAL == xFILIAL("STL");
							.And. STL->TL_ORDEM == STJ->TJ_ORDEM;
							.And. STL->TL_PLANO == STJ->TJ_PLANO
								RecLock("STL",.F.)
								Dbdelete()
								MsUnLock("STL")
								DbSkip()
							End
						EndIf

						DbSelectArea("STQ")
						DbSetOrder(1)
						If Dbseek(xfilial("STQ")+STJ->TJ_ORDEM+STJ->TJ_PLANO)
							While !Eof() .And. STQ->TQ_FILIAL == xFILIAL("STQ");
							.And. STQ->TQ_ORDEM == STJ->TJ_ORDEM;
							.And. STQ->TQ_PLANO == STJ->TJ_PLANO
								RecLock("STQ",.F.)
								Dbdelete()
								MsUnLock("STQ")
								DbSkip()
							End
						EndIf

						DbSelectArea("STJ")
						Dbskip()
					End
				EndIf

				DbSelectArea(cTRBJ450)
				RecLock((cTRBJ450),.F.)
				Dbdelete()
				MsUnLock(cTRBJ450)
				DbGotop()
			EndIf

		EndIf

		DbSelectArea(cALISOLD)
		DbSetOrder(nINDIOLD)
		cCadastro := cCadold
		DbSelectArea(cTRBJ450)
	EndIf	

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450C
Confirmacao da Ordem de Reforma ( Pai e Filhos)
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450C()

	Local oMenu
	Local cGERAPREV := AllTrim(GETMv("MV_NGGERPR"))
	Local lRet := .T.
	
	Store .f.     To TIPOACOM,TIPOACOM2
	Store 0       To nCONTADOR,nCONTADOR2
	Store '  :  ' To cHORCON1,cHORCON2
	lGravaSCP := .T.
	dDATACON2 := Ctod(' /  /  ')
	Private dDTORIGI := Ctod(' /  /  ')
	Private aNewSc   := {} // Utilizado no processo de produto alternativo

	IF !MNTA450VOS()
		lRet := .F.
	EndIF

	If lRet
		cBEM450 := (cTRBJ450)->TJ_BEMPAI
		DbSelectArea("ST9")
		DbSetOrder(1)
		If Dbseek(xfilial("ST9")+cBEM450)
			If ST9->T9_TEMCONT <> "N"
				TIPOACOM  := .T.
				nCONTADOR := (cTRBJ450)->TJ_POSCONT
				cHORCON1  := (cTRBJ450)->TJ_HORACO1
				dDTORIGI  := (cTRBJ450)->TJ_DTORIGI
			EndIf
		EndIf
		//FindFunction remover na release GetRPORelease() >= '12.1.027'
		If FindFunction("MNTCont2")
			TIPOACOM2 := MNTCont2(xFILIAL("TPE"), cBEM450)
		Else
			DbSelectArea("TPE")
			DbSetOrder(1)
			TIPOACOM2 := Dbseek(xfilial("TPE")+cBEM450)
		EndIf

		If TIPOACOM2
			nCONTADOR2 := (cTRBJ450)->TJ_POSCON2
			cHORCON2   := (cTRBJ450)->TJ_HORACO1
			dDATACON2  := (cTRBJ450)->TJ_DTORIGI
		EndIf

		DbSelectArea(cTRBJ450)
		nOpbem := 2
		Define MsDialog oDlg7 From 300,120 To 475,642 Title OemToAnsi(STR0020+(cTRBJ450)->TJ_ORDEM) Pixel //"Confirmacao Ordem De Reforma Pai  "
		@ 0.5,1    Say OemToAnsi(STR0010) //"Bem Pai"
		@ 0.5,4    MsGet (cTRBJ450)->TJ_BEMPAI    Picture "@!" Size 60,7   When .f.
		@ 0.5,13   MsGet (cTRBJ450)->TJ_NOMPAI    Picture "@!" Size 150,7  When .f.

		@ 1.7,1    Say OemtoAnsi(STR0014) //"Servico"
		@ 1.7,4    MsGet (cTRBJ450)->TJ_SERVICO   Picture "@!" Size 38,10  When .f.
		@ 1.7,13   MsGet (cTRBJ450)->TJ_NOMESER   Picture "@!" Size 150,10 When .f.

		@ 2.9,1    Say OemtoAnsi(STR0125+' 1') //"Dt. Leitura Contador 1"
		@ 2.9,8    MsGet dDTORIGI   Picture "99/99/99" Size 45,10 Valid Naovazio() When TIPOACOM HASBUTTON

		@ 2.9,14   Say OemtoAnsi(STR0126) //"Hora Leitura"
		@ 2.9,18 MsGet cHORCON1   Picture "99:99" Size 10,10;
				Valid MNTA450CCB((cTRBJ450)->TJ_NOMPAI, dDTORIGI, cHORCON1) .And. MNTA450HIS(nCONTADOR,dDTORIGI,cHORCON1,1,.T.) When TIPOACOM

		@ 2.9,23   Say OemtoAnsi(STR0021) //"Contador 1"
		@ 2.9,26.8   MsGet nCONTADOR  Picture "999999999" Size 40,10;
				Valid MNTA450VCO(nCONTADOR,1) When TIPOACOM .And. (!FindFunction("NGBlCont") .Or. NGBlCont( cBEM450 ))

		@ 4.0,1    Say OemtoAnsi(STR0125+' 2') //"Dt. Leitura Contador 2"
		@ 4.0,8    MsGet dDATACON2  Picture "99/99/99" Size 45,10 Valid Naovazio();
		When TIPOACOM2 HASBUTTON

		@ 4.0,23   Say OemtoAnsi(STR0022) //"Contador 2"
		@ 4.0,26.8   MsGet nCONTADOR2 Picture "999999999" Size 40,10;
		Valid MNTA450VCO(nCONTADOR2,2) When TIPOACOM2

		@ 4.0,14   Say OemtoAnsi(STR0126) //"Hora Leitura"
		@ 4.0,18 MsGet cHORCON2   Picture "99:99" Size 10,10;
		Valid MNTA450HIS(nCONTADOR2,dDATACON2,cHORCON2,2,.T.) When TIPOACOM2

		Define SButton From 70,185.5 Type 1 Enable Of oDlg7 Action MNTA450EFI()
		Define SButton From 70,225.5 Type 2 Enable Of oDlg7 Action ( nOpbem:=2,oDlg7:End() )

		NgPopUp(@AsMenu,@oMenu)
		oDlg7:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg7)}
		Activate MsDialog oDlg7 Centered

		If nOpbem == 1

			If TIPOACOM .And. nCONTADOR > 0
				NGTRETCON(cBEM450,dDTORIGI,nCONTADOR,cHORCON1,1,,.T.)
			EndIf

			If TIPOACOM2 .And. nCONTADOR2 > 0
				NGTRETCON(cBEM450,dDATACON2,nCONTADOR2,cHORCON2,2,,.F.)
			EndIf

			//GERA O.S AUTOMATICA POR CONTADOR
			If (cGERAPREV = "S" .Or. cGERAPREV = "C") .And. (!Empty(nCONTADOR) .Or. !Empty(nCONTADOR2))
				If NGCONFOSAUT(cGERAPREV)
					NGGEROSAUT(cBEM450,If(!Empty(nCONTADOR),nCONTADOR,nCONTADOR2))
				EndIf
			EndIf

			DbSelectArea("STJ")
			DbSetOrder(11)
			Dbseek(xfilial("STJ")+(cTRBJ450)->TJ_ORDEM)
			While !Eof() .And. STJ->TJ_FILIAL == xFILIAL("STJ") .And. STJ->TJ_ORDEPAI == (cTRBJ450)->TJ_ORDEM

				caVETLIB := NGLIBERAOS(STJ->TJ_ORDEM,STJ->TJ_PLANO)
				
				DbSelectArea("STJ")
				Reclock("STJ",.F.)
				If TIPOACOM .And. nCONTADOR > 0
					STJ->TJ_POSCONT := nCONTADOR
					STJ->TJ_HORACO1 := cHORCON1
				EndIf
				If TIPOACOM2 .And. nCONTADOR2 > 0
					STJ->TJ_POSCON2 := nCONTADOR2
					STJ->TJ_HORACO2 := cHORCON2
				EndIf
				MsUnlock("STJ")

				//Verifica se possui interface com usuário
				If !IsBlind()
					ApMsgInfo( caVETLIB[ 2 ] )
				EndIf	
				DbSkip()
			End

			DbSelectArea(cTRBJ450)
			Dbdelete()
			DbGotop()
		EndIf
	EndIf	

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450OS
Filtra as O.S.
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450OS()

	ccXORDEPAI := Replicate("0",Len(STJ->TJ_ORDEPAI))

	DbSelectArea("STJ")
	DbSetOrder(11)
	Dbseek(xfilial("STJ")+ccXORDEPAI,.T.)
	ProcRegua(LastRec())
	While !Eof() .And. STJ->TJ_FILIAL == xFILIAL("STJ") .And. !Empty(STJ->TJ_ORDEM)

		IncProc()
		If STJ->TJ_SITUACA == "P" .And. STJ->TJ_ORDEM == STJ->TJ_ORDEPAI;
			.And. If(!Empty(cBemClick), STJ->TJ_BEMPAI == cBemClick, .T.)
			DbSelectArea(cTRBJ450)
			If !Dbseek(STJ->TJ_ORDEM+STJ->TJ_BEMPAI)
				Reclock(cTRBJ450, .T.)
				(cTRBJ450)->TJ_ORDEM   := STJ->TJ_ORDEM
				(cTRBJ450)->TJ_PLANO   := STJ->TJ_PLANO
				(cTRBJ450)->TJ_BEMPAI  := STJ->TJ_BEMPAI
				(cTRBJ450)->TJ_NOMPAI  := NGSEEK('ST9',STJ->TJ_BEMPAI,1,"ST9->T9_NOME")
				(cTRBJ450)->TJ_CODBEM  := STJ->TJ_CODBEM
				(cTRBJ450)->TJ_NOMEBEM := NGSEEK('ST9',STJ->TJ_CODBEM,1,"ST9->T9_NOME")
				(cTRBJ450)->TJ_SERVICO := STJ->TJ_SERVICO
				(cTRBJ450)->TJ_NOMESER := NGSEEK('ST4',STJ->TJ_SERVICO,1,"ST4->T4_NOME")
				(cTRBJ450)->TJ_SEQRELA := STJ->TJ_SEQRELA
				(cTRBJ450)->TJ_DTORIGI := STJ->TJ_DTORIGI
				(cTRBJ450)->TJ_DTORIGI := STJ->TJ_DTMPINI
				(cTRBJ450)->TJ_POSCONT := STJ->TJ_POSCONT
				(cTRBJ450)->TJ_HORACO1 := STJ->TJ_HORACO1
				(cTRBJ450)->TJ_POSCON2 := STJ->TJ_POSCON2
				(cTRBJ450)->TJ_HORACO2 := STJ->TJ_HORACO2
				MsUnlock(cTRBJ450)
			EndIf
		EndIf
		DbSelectArea("STJ")
		DbSkip()
	End
Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450I
Solicita o código do bem pai
@author NG INFORMATICA
@since 21/11/2001
@version undefined
@param cALIAS, characters
@param nREG, numeric
@param nOPCX, numeric
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450I(cALIAS,nREG,nOPCX)

	Local oMenu

	nOP450I       := 2
	cBEM450       := cBemClick
	cNOMBEM       := If(Empty(cBemClick), Space(TamSx3("T9_NOME")[1]), Posicione("ST9", 1, xFilial('ST9')+cBemClick, "T9_NOME"))
	m->TJ_SERVICO := Space(Len(STJ->TJ_SERVICO))
	cNOMSER       := Space(30)
	dDTORIGI      := dDataBase
	dDATACON2     := Ctod(' /  /  ')
	Store 0      To nCONTADOR,nCONTADOR2
	Store .f.    To TIPOACOM,TIPOACOM2,lTEMEST
	Store ' :  ' To cHORCON1,cHORCON2

	nOpbem := 0
	Define MsDialog oDlg7 From 300,120 To 475,700 Title OemToAnsi(STR0023) COLOR CLR_BLACK,CLR_WHITE Pixel //"Estrutura Do Bem"
	@ 0.5,1    Say OemToAnsi(STR0010) //"Bem Pai"
	@ 0.5,4    MsGet cBEM450       Picture "@!" Size 95,7 F3 "ST9";
					Valid MNTA450BE(cBEM450) When Empty(cBemClick) HASBUTTON
	@ 0.5,17   MsGet cNOMBEM  When .F. Size 150,7

	@ 1.7,1    Say OemtoAnsi(STR0014) //"Servico"
	@ 1.7,4    MsGet M->TJ_SERVICO Picture "@!" ;
	Valid CHKSER450() .And. MNTA450MOS() F3 "ST4" Size 38,10 HASBUTTON
	@ 1.7,17   MsGet cNOMSER   Picture "@!" Size 150,10 When .F.

	@ 2.9,1    Say OemtoAnsi(STR0024) //"Dt. Original"
	@ 2.9,5    MsGet dDTORIGI   Picture "99/99/99" Size 45,10 Valid Naovazio() HASBUTTON

	@ 2.9,14   Say OemtoAnsi(STR0126) //"Hora Leitura"
	@ 2.9,18 MsGet cHORCON1   Picture "99:99" Size 10,10;
	Valid MNTA450CCB(cBEM450, dDTORIGI, cHORCON1) .And. MNTA450HIS(nCONTADOR,dDTORIGI,cHORCON1,1,.T.) When TIPOACOM

	@ 2.9,25   Say OemtoAnsi(STR0021) //"Contador 1"
	@ 2.9,29.5   MsGet nCONTADOR  Picture "999999999" Size 40,10;
	Valid MNTA450VCO(nCONTADOR,1) When TIPOACOM .And. (!FindFunction("NGBlCont") .Or. NGBlCont( cBEM450 ))

	@ 4.0,1    Say OemtoAnsi(STR0125+' 2') //"Dt. Leitura Contador 2"
	@ 4.0,8    MsGet dDATACON2  Picture "99/99/99" Size 45,10 Valid Naovazio();
	When TIPOACOM2 HASBUTTON

	@ 4.0,14   Say OemtoAnsi(STR0022) //"Contador 2"
	@ 4.0,18   MsGet nCONTADOR2 Picture "999999999" Size 40,10;
	Valid MNTA450VCO(nCONTADOR2,2) When TIPOACOM2

	@ 4.0,25   Say OemtoAnsi(STR0126) //"Hora Leitura"
	@ 4.0,29.5 MsGet cHORCON2   Picture "99:99" Size 10,10;
	Valid MNTA450HIS(nCONTADOR2,dDATACON2,cHORCON2,2,.T.) When TIPOACOM2

	Define SButton From 70,180 Type 1 Enable Of oDlg7 Action MNTA450EFI()
	Define SButton From 70,220 Type 2 Enable Of oDlg7 Action ( nOpbem:=2,oDlg7:End() )

	NgPopUp(@AsMenu,@oMenu)
	oDlg7:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg7)}
	Activate MsDialog oDlg7 Centered

	If nOpbem == 1
		//Caso seja chamado pelo click da direita executa o valid do campo para as devidas tratativas
		If !Empty(cBemClick)
			MNTA450BE(cBEM450)
		EndIf
		If lTEMEST
			MNTA450FI(cBEM450,Space(6),nOpbem,3)
		EndIf
		cBEMEST := Space(Len(ST9->T9_CODBEM))
		cNOMBEM := Space(Len(ST9->T9_NOME))
		nOpbem := 0
	EndIf
	nOPCX := 5

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450VCO
Consistencia dos contadores ( GET )
@author Inacio Luiz Kolling
@since 27/09/2003
@version undefined
@param nCONTG, numeric
@param nTIPG, numeric
@type function
/*/
//---------------------------------------------------------------------
Static Function MNTA450VCO(nCONTG,nTIPG)

	lCHKCON1 := If(nTIPG = 1,.F.,lCHKCON1)
	lCHKCON2 := If(nTIPG = 2,.F.,lCHKCON2)

	If !Positivo(nCONTG) .Or. !Naovazio(nCONTG) .Or. !CHKPOSLIM(cBEM450,nCONTG,nTIPG)
		Return .F.
	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450HIS
Consistencia dos contadores ( gets / final )
@author Inacio Luiz Kolling
@since 27/09/2003
@version undefined
@param nCONTAD, numeric
@param dDATACON, date
@param cVHORCON, characters
@param nTIP, numeric
@param lCHKTIP, logical
@type function
/*/
//---------------------------------------------------------------------
Static Function MNTA450HIS(nCONTAD,dDATACON,cVHORCON,nTIP,lCHKTIP)

	If !NGVALHORA(cVHORCON,.T.)
		Return .f.
	EndIf
	If !NGCHKHISTO(cBEM450,dDATACON,nCONTAD,cVHORCON,nTIP,,.T.)
		Return .f.
	EndIf
	If !NGVALIVARD(cBEM450,nCONTAD,dDATACON,cVHORCON,nTIP,.t.)
		Return .f.
	EndIf
	If lCHKTIP
		If nTIP = 1
			lCHKCON1 := .T.
		ElseIf nTIP = 2
			lCHKCON2 := .T.
		EndIf
	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450TOK
Consistencia dos contadores ( final )
@author Inacio Luiz Kolling
@since 27/08/2003
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Static Function MNTA450TOK()

	If TIPOACOM .And. !lCHKCON1
		If !MNTA450HIS(nCONTADOR,dDTORIGI,cHORCON1,1,.f.)
			Return .f.
		EndIf
	EndIf
	If TIPOACOM2 .And. !lCHKCON2
		If !MNTA450HIS(nCONTADOR2,dDATACON2,cHORCON2,2,.f.)
			Return .f.
		EndIf
	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450EFI
Consistencia final
@author NG INFORMATICA
@since 21/11/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Static Function MNTA450EFI()

	If MNTA450TOK()
		If ExistBlock("MNTA4501")
			If !ExecBlock("MNTA4501",.F.,.F.)
				Return .F.
			EndIf
		EndIf
		oDlg7:End()
		nOpbem := 1
	Else
		Return .f.
	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450BE
Consistencia se o bem tem estrutura
@author NG INFORMATICA
@since 21/11/2001
@version undefined
@param cVBEM, characters
@type function
/*/
//---------------------------------------------------------------------
Static Function MNTA450BE(cVBEM)

	Local xw

	Store .f.To TIPOACOM,TIPOACOM2,lCHKCON1,lCHKCON2,lTEMEST
	Store 0  To nCONTADOR,nCONTADOR2
	cNOMBEM := Space(len(ST9->T9_NOME))

	If !EXISTCPO("ST9",cVBEM)
		Return .F.
	EndIf

	// VERIFICA SE HA ORDEM DE SERVICO PARA A ESTRUTURA
	// LE O ARQUIVO TEMPORARIO DAS ORDEM DE REFORMAS PENDENTES

	DbSelectArea(cTRBJ450)
	Dbgotop()
	While !Eof()

		If (cTRBJ450)->TJ_BEMPAI == cVBEM
			MSGINFO(STR0027+chr(13)+chr(13); //"Ja Existe Ordem de Reforma Pendente"
			+STR0028+cVBEM+chr(13)+chr(13); //"Para O Bem/Componente  "
			+STR0029+(cTRBJ450)->TJ_ORDEM+STR0030+(cTRBJ450)->TJ_BEMPAI,STR0031) //"Ordem Pai -> "###"   Bem Pai -> "###"ATENCAO"
			Return .F.
		EndIf

		aARESTRU := {}
		aARESTRU := NGCOMPEST((cTRBJ450)->TJ_BEMPAI,'B',.T.,.T.)
		For xw := 1 To len(aARESTRU)
			If aARESTRU[xw] == cVBEM
				MSGINFO(STR0027+chr(13)+chr(13); //"Ja Existe Ordem de Reforma Pendente"
				+STR0028+cVBEM+chr(13)+chr(13); //"Para O Bem/Componente  "
				+STR0029+(cTRBJ450)->TJ_ORDEM+STR0030+(cTRBJ450)->TJ_BEMPAI,STR0031) //"Ordem Pai -> "###"   Bem Pai -> "###"ATENCAO"
				Return .F.
			EndIf
		Next xw
		DbSelectArea(cTRBJ450)
		Dbskip()
	End

	DbSelectArea("ST9")
	DbSetOrder(1)
	Dbseek(XFILIAL("ST9")+cVBEM)
	TIPOACOM := If(st9->t9_temcont = 'S',.T.,.F.)

	//FindFunction remover na release GetRPORelease() >= '12.1.027'
	If FindFunction("MNTCont2")
		TIPOACOM2 := MNTCont2(xFILIAL("TPE"), cVBEM)
	Else
		DbSelectArea("TPE")
		Dbsetorder(1)
		TIPOACOM2 := Dbseek(xFILIAL('TPE')+cVBEM)
	EndIf

	cNOMBEM    := ST9->T9_NOME
	nCONTADOR  := If(TIPOACOM,st9->t9_poscont,0)
	nCONTADOR2 := If(TIPOACOM2,tpe->tpe_poscon,0)
	dDATACON2  := If(TIPOACOM2,tpe->tpe_dtulta,Ctod('  /  /  '))
	cHORCON1   := If(!TIPOACOM, '  :  ',If(Alltrim(cHORCON1) = ':',Time(),cHORCON1))
	cHORCON2   := If(!TIPOACOM2,'  :  ',If(Alltrim(cHORCON2) = ':',Time(),cHORCON2))
	lTEMEST    := .T.
	lRefresh   := .t.

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450FI
Monta um browse com os bens filhos e atualizao informacoes
@author NG INFORMATICA
@since 21/11/2001
@version undefined
@param cVBEM, characters
@param cORDEPAI, characters
@param nVINCR, numeric
@param nINCAL, numeric
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450FI(cVBEM,cORDEPAI,nVINCR,nINCAL)

	Local xx := 0,i,xz
	Local oMenu
	Local lRet := .T.

	Local oTmpTbl2 //Obj. Tab. Temporária 2
	Local oTmpTbl3 //Obj. Tab. Temporária 3
	Local oTmpTbl4 //Obj. Tab. Temporária 4
	Local oTmpTbl5 //Obj. Tab. Temporária 5
	Local oTmpTbl6 //Obj. Tab. Temporária 6
	Local oTmpTbl7 //Obj. Tab. Temporária 7
	Local oTmpTbl8 //Obj. Tab. Temporária 8

	Private cTRBI450 := GetNextAlias()//Alias Tab. 2
	Private cTRBE450 := GetNextAlias()//Alias Tab. 3
	Private cTRBY450 := GetNextAlias()//Alias Tab. 4
	Private cTRBX450 := GetNextAlias()//Alias Tab. 5
	Private cTRBC450 := GetNextAlias()//Alias Tab. 6
	Private cTRBL450 := GetNextAlias()//Alias Tab. 7
	Private cTRBQ450 := GetNextAlias()//Alias Tab. 8


	Private aBem  := {}
	Private aSize := MsAdvSize(), aObjects := {}
	lINCREFO := If(nVINCR == 1,.T.,.F.)
	cBEMEST  := cVBEM
	lCONTP   := .F.
	lInverte := .F.
	cMARCA   := GetMark()
	lQuery   := .T.
	cSERV450 := If(nINCAL = 3 ,M->TJ_SERVICO,(cTRBJ450)->TJ_SERVICO)

	//Só verifica a OS se for alteração
	If nVINCR == 2 .And. nINCAL == 4 .And. !MNTA450VOS()
		lRet := .F.
	Endif

	If lRet
		// ARQUIVO TEMPORARIO PARA ARMAZENAR OS INSUMOS MODIFICADOS

		aDBFI := {}
			Aadd(aDBFI,{"TL_TIPOREG" , "C", 01,0})
			Aadd(aDBFI,{"TL_TAREFA"  , "C", 06,0})
			Aadd(aDBFI,{"TL_CODIGO"  , "C", TamSX3("TL_CODIGO")[1],0})
			Aadd(aDBFI,{"TL_QUANTID" , "N", 09,2})
			Aadd(aDBFI,{"TL_UNIDADE" , "C", 03,0})
			Aadd(aDBFI,{"TL_DTINICI" , "D", 08,0})
			Aadd(aDBFI,{"TL_DTFIM"   , "D", 08,0})
			Aadd(aDBFI,{"TR_TIPOREG" , "C", 01,0})
			Aadd(aDBFI,{"TR_TAREFA"  , "C", 06,0})
			Aadd(aDBFI,{"TR_CODIGO"  , "C", TamSX3("TL_CODIGO")[1],0})
			Aadd(aDBFI,{"TR_QUANTID" , "N", 09,2})
			Aadd(aDBFI,{"TR_UNIDADE" , "C", 03,0})
			Aadd(aDBFI,{"TR_DTINICI" , "D", 08,0})
			Aadd(aDBFI,{"TR_DTFIM"   , "D", 08,0})

		If lMMoeda
			Aadd(aDBFI,{"TL_MOEDA"   , "C", 01,0})
		Endif

		//Criação Tabela Temporária
		oTmpTbl2:= NGFwTmpTbl(cTRBI450,aDBFI,{{"TL_TIPOREG","TL_CODIGO"}})

		// ARQUIVO TEMPORARIO PARA ARMAZENAR AS ETAPAS MODIFICADOS
		aDBFE := {}
			Aadd(aDBFE,{"TQ_ETAPA"  , "C", 06,0})
			Aadd(aDBFE,{"TQ_NOMETA" , "C", 40,0})
			Aadd(aDBFE,{"TY_ETAPA"  , "C", 06,0})
			Aadd(aDBFE,{"TY_NOMETA" , "C", 40,2})

		//Criação Tabela Temporária
		oTmpTbl3:= NGFwTmpTbl(cTRBE450,aDBFE,{{"TQ_ETAPA"}})

		// ARMAZENA OS ITENS DOS INSUMOS PARA MOSTRA O CUSTO TOTAL DOS COMPONENTE DA ESTRUTURA
		aDBFY := {}
			Aadd(aDBFY,{"TL_BEMCOMP" , "C", 16,0})
			Aadd(aDBFY,{"TL_TIPOREG" , "C", 01,0})
			Aadd(aDBFY,{"TL_NOMTIP"  , "C", 13,0})
			Aadd(aDBFY,{"TL_TAREFA"  , "C", 06,0})
			Aadd(aDBFY,{"TL_CODIGO"  , "C", TamSX3("TL_CODIGO")[1],0})
			Aadd(aDBFY,{"TL_NOME"    , "C", 30,0})
			Aadd(aDBFY,{"TL_SEQRELA" , "C", 03,0})
			Aadd(aDBFY,{"TL_QUANTID" , "N", 09,2})
			Aadd(aDBFY,{"TL_UNIDADE" , "C", 03,0})
			Aadd(aDBFY,{"TL_DTINICI" , "D", 08,0})
			Aadd(aDBFY,{"TL_DTFIM"   , "D", 08,0})
			Aadd(aDBFY,{"TL_CUSTO"   , "N", 12,2})
		If lMMoeda
			Aadd(aDBFY,{"TL_MOEDA"   , "C", 01,0})
		Endif

		//Criação Tabela Temporária
		oTmpTbl4:= NGFwTmpTbl(cTRBY450,aDBFY,{{"TL_BEMCOMP","TL_NOMTIP","TL_CODIGO"}})

		// ARMAZENA OS ITENS DOS INSUMOS PARA MOSTRA O CUSTO DO COMPONENTE
		aDBFX := {}
			Aadd(aDBFX,{"TL_TIPOREG" , "C", 01,0})
			Aadd(aDBFX,{"TL_NOMTIP"  , "C", 13,0})
			Aadd(aDBFX,{"TL_TAREFA"  , "C", 06,0})
			Aadd(aDBFX,{"TL_CODIGO"  , "C", TamSX3("TL_CODIGO")[1],0})
			Aadd(aDBFX,{"TL_NOME"    , "C", 30,0})
			Aadd(aDBFX,{"TL_SEQRELA" , "C", 03,0})
			Aadd(aDBFX,{"TL_QUANTID" , "N", 09,2})
			Aadd(aDBFX,{"TL_UNIDADE" , "C", 03,0})
			Aadd(aDBFX,{"TL_DTINICI" , "D", 08,0})
			Aadd(aDBFX,{"TL_DTFIM"   , "D", 08,0})
			Aadd(aDBFX,{"TL_CUSTO"   , "N", 12,2})
		If lMMoeda
			Aadd(aDBFX,{"TL_MOEDA"   , "C", 01,0})
		Endif

		//Criação Tabela Temporária
		oTmpTbl5:= NGFwTmpTbl(cTRBX450,aDBFX,{{"TL_NOMTIP","TL_CODIGO"}})

		// ARMAZENA OS COMPONENTES DA ESTRUTURA PARA SEREM MARCADOS PARA GERAR A ORDEM DE REFORMA
		aDBFC := {}
			Aadd(aDBFC,{"TC_OK"      , "C", 02,0})
			Aadd(aDBFC,{"TC_BEMCOMP" , "C", 16,0})
			Aadd(aDBFC,{"TC_NOMCOMP" , "C", 40,0})
			Aadd(aDBFC,{"TC_LOCALIZ" , "C", 06,0})
			Aadd(aDBFC,{"TC_NOMLOCA" , "C", 30,0})
			Aadd(aDBFC,{"TC_ORDEM"   , "C", 06,0})
			Aadd(aDBFC,{"TC_PLANO"   , "C", 06,0})
			Aadd(aDBFC,{"TC_ORDEMB"  , "C", 06,0})
			Aadd(aDBFC,{"TC_PLANOB"  , "C", 06,0})

		//Criação Tabela Temporária
		oTmpTbl6:= NGFwTmpTbl(cTRBC450,aDBFC,{ {"TC_ORDEM"}})

		aTRBC := {}
			Aadd(aTRBC,{"TC_OK"      , Nil , " "    ,})
			Aadd(aTRBC,{"TC_BEMCOMP" , Nil , STR0032,}) //"Pai/Componente"
			Aadd(aTRBC,{"TC_NOMCOMP" , Nil , STR0033,}) //"Nome do Bem Componente"
			Aadd(aTRBC,{"TC_LOCALIZ" , Nil , STR0034,}) //"Localiz."
			Aadd(aTRBC,{"TC_NOMLOCA" , Nil , STR0035,}) //"Nome Localizacao"
			Aadd(aTRBC,{"TC_ORDEM"   , Nil , STR0036,}) //"Ordem"

		// ARMAZEMA OS INSUMOS INFORMADOS PARA O COMPONENTE DE ESTRUTURA
		aDBF1 := STL->(DbStruct())
			Aadd(aDBF1,{"TL_BEMCOMP" , "C", 16,0})
			Aadd(aDBF1,{"TL_NOMECOD" , "C", 20,0})

		//Instancia classe FWTemporaryTable
		oTmpTbl7:= FWTemporaryTable():New( cTRBL450, aDBF1 )
		//Adiciona os Indices
		If lSEQTAR
			oTmpTbl7:AddIndex( "Ind01" , {"TL_BEMCOMP","TL_CODIGO","TL_TIPOREG","TL_TAREFA","TL_SEQTARE"} )
		Else
			oTmpTbl7:AddIndex( "Ind01" , {"TL_BEMCOMP","TL_CODIGO","TL_TIPOREG"} )
		Endif
		//Cria a tabela temporaria
		oTmpTbl7:Create()

		// ARMAZEMA AS ETAPAS INFORMADAS PARA O COMPONENTE DE ESTRUTURA
		aDBF2 := {}
			Aadd(aDBF2,{"TX_BEMCOMP" , "C", 16,0})
			Aadd(aDBF2,{"TX_ETAPA"   , "C", 06,0})
			Aadd(aDBF2,{"TX_NOMETAP" , "C", 20,0})
			Aadd(aDBF2,{"TX_SEQETA"  , "C", 03,0})

		If lSEQTAR
			Aadd(aDBF2,{"TX_TAREFA"  , "C", 06,0})
			Aadd(aDBF2,{"TX_SEQTARE" , "C", 03,0})
		Endif

		//Instancia classe FWTemporaryTable
		oTmpTbl8:= FWTemporaryTable():New( cTRBQ450, aDBF2 )
		//Adiciona os Indices
		If lSEQTAR
			oTmpTbl8:AddIndex( "Ind01" , {"TX_BEMCOMP","TX_SEQETA","TX_ETAPA","TX_TAREFA","TX_SEQTARE"} )
		Else
			oTmpTbl8:AddIndex( "Ind01" , {"TX_BEMCOMP","TX_SEQETA","TX_ETAPA"})
		Endif
		//Cria a tabela temporaria
		oTmpTbl8:Create()

		If ALTERA
			cBEMEST := cVBEM
			cNOMBEM := NGSEEK('ST9',cVBEM,1,"T9_NOME")
		EndIf

		//+-------------------------------------------------------------------+
		//| Cria uma array com os bem filhos                                  |
		//+-------------------------------------------------------------------+
		DbSelectArea("STC")
		DbSetOrder(1)

		aBEM := NGCOMPEST(cBEMEST,'B',.T.,.T.)
		If Empty(aBEM)
			AAdd(aBem,cVBEM)
		Endif

		If Len(aBEM) > 0
			For i := 1 To Len(aBEM)
				cCODBEM  := aBEM[i]
				ccORDSTJ := Space(Len(STJ->TJ_ORDEM))
				ccPLASTJ := Space(Len(STJ->TJ_PLANO))
				lOKSTJ   := .F.

				// PROCURA NO STJ AS ORDENS DOS COMPONENTES

				If ALTERA
					DbSelectArea("STJ")
					DbSetOrder(11)
					If Dbseek(xfilial("STJ")+cORDEPAI+"B"+cCODBEM)
						If STJ->TJ_SITUACA == "P" .And. STJ->TJ_TERMINO == "N"
							ccORDSTJ := STJ->TJ_ORDEM
							ccPLASTJ := STJ->TJ_PLANO
							lOKSTJ   := .T.

							// ALIMENTA O ARQUIVO TEMPORARIO TRBL -> STL

							DbSelectArea("STL")
							DbSetOrder(1)
							Dbseek(xfilial("STL")+ccORDSTJ+ccPLASTJ)
							While !Eof() .And. xfilial("STL") == STL->TL_FILIAL;
							.And. STL->TL_ORDEM == ccORDSTJ .And. STL->TL_PLANO == ccPLASTJ

								If Val(STL->TL_SEQRELA) == 0
									DbSelectArea(cTRBL450)
									Reclock((cTRBL450), .T.)
									DbSelectArea("STL")
									For XX := 1 to Fcount()
										ny := (cTRBL450)+"->TL_" + Substr(FieldName(XX),4,Len(FieldName(XX)))
										nx := "STL->TL_"  + Substr(FieldName(XX),4,Len(FieldName(XX)))
										&ny. := &nx.
									Next
									(cTRBL450)->TL_BEMCOMP := cCODBEM
									MsUnlock(cTRBL450)
								EndIf
								DbSelectArea("STL")
								Dbskip()
							End

							// ALIMENTA O ARQUIVO TEMPORARIO TRBQ -> STQ

							DbSelectArea("STQ")
							DbSetOrder(1)
							Dbseek(xfilial("STQ")+ccORDSTJ+ccPLASTJ)
							While !Eof() .And. xfilial("STQ") == STQ->TQ_FILIAL;
										.And. STQ->TQ_ORDEM == ccORDSTJ .And. STQ->TQ_PLANO == ccPLASTJ

								DbSelectArea(cTRBQ450)
								Reclock((cTRBQ450), .T.)
								(cTRBQ450)->TX_BEMCOMP := cCODBEM
								(cTRBQ450)->TX_ETAPA   := STQ->TQ_ETAPA
								(cTRBQ450)->TX_SEQETA  := STQ->TQ_SEQETA

								If lSEQTAR
									(cTRBQ450)->TX_TAREFA  := STQ->TQ_TAREFA
									(cTRBQ450)->TX_SEQTARE := STQ->TQ_SEQTARE
								EndIf

								MsUnlock(cTRBQ450)
								DbSelectArea("STQ")
								Dbskip()
							End
						EndIf
					EndIf
				EndIf

				DbSelectArea(cTRBC450)
				Reclock(cTRBC450, .T.)
				If aBEM[I] == aBEM[1]
					(cTRBC450)->TC_OK := cMARCA
				Else
					(cTRBC450)->TC_OK := If(lOKSTJ,cMARCA,"  ")
				EndIf
				(cTRBC450)->TC_BEMCOMP  := aBEM[I]
				(cTRBC450)->TC_NOMCOMP  := NGSEEK('ST9',cCODBEM,1,"T9_NOME")
				(cTRBC450)->TC_LOCALIZ  := NGSEEK('STC',cBEMEST+cCODBEM,1,"TC_LOCALIZ")
				(cTRBC450)->TC_NOMLOCA  := NGSEEK('TPS',(cTRBC450)->TC_LOCALIZ,1,"TPS_NOME")
				(cTRBC450)->TC_ORDEM    := ccORDSTJ
				(cTRBC450)->TC_PLANO    := ccPLASTJ
				(cTRBC450)->TC_ORDEMB   := ccORDSTJ
				(cTRBC450)->TC_PLANOB   := ccPLASTJ
				MsUnlock(cTRBC450)
			Next
		EndIf

		DbSelectArea(cTRBC450)
		Dbgotop()
		nOpca := 0
		Aadd(aObjects,{015,020,.t.,.t.})
		Aadd(aObjects,{100,100,.t.,.t.})
		aInfo   := {aSize[1],aSize[2],aSize[3],aSize[4],0,0}
		aPosObj := MsObjSize(aInfo, aObjects,.t.)

		//Alimenta as variaveis de mv_par para validacao do campo TL_TAREFA
		mv_par01 := cVBEM
		mv_par02 := cSERV450
		Define MsDialog oDlg3 Title STR0037+Alltrim(cBEMEST) +" - "+Alltrim(Substr(cNOMBEM,1,30)) From aSize[7],0 To aSize[6],aSize[5]  COLOR CLR_BLACK,CLR_WHITE Pixel//"Estrutura do Bem "

		@ 36,001 Button STR0038 Size 38,12 Pixel Action MNTA450INS() //"&Insumos"
		@ 36,048 Button STR0039 Size 38,12 Pixel Action MNTA450APA() //"&Etapas"
		@ 36,095 Button STR0040 Size 52,12 Pixel Action MNTA450CUS() //"&Custo Componente"
		@ 36,157 Button STR0041 Size 42,12 Pixel Action MNTA450TOT() //"&Total Custo"

		@ 36,209 Button STR0042 Size 43,12 Pixel Action MNTA450MOI() //"&Insumos Mod."
		@ 36,262 Button STR0043 Size 43,12 Pixel Action MNTA450MOE() //"&Etapas Mod."
		@ 36,314 Button STR0044 Size 43,12 Pixel Action MNTA450REI() //"&Resumo Imp."

		NgPopUp(@AsMenu,@oMenu)
		oMark := MsSelect():New(cTRBC450,"TC_OK",,aTRBC,@lInverte,@cMarca,{C(45),aPosObj[2,2],aPosObj[2,3],aPosObj[2,4]})
		oMark:bMark := {|| MNTA450MAQ(cMarca,lInverte)}
		oMark:oBrowse:lhasMark = .t.
		oMark:oBrowse:lCanAllmark := .t.
		oMark:oBrowse:bAllMark := { || MNTA450INV(cMarca) }
		oMark:oBrowse:bRClicked:= { |o,x,y| oMenu:Activate(x,y+80,oDlg3)}
		oDlg3:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg3)}

		Activate MsDialog oDlg3 On Init EnchoiceBar(oDlg3,{|| nOpca := 1,oDlg3:End()},{|| nOpca := 2,oDlg3:End()})

		If nOpca == 1
			M->TI_PLANO := "000000"
			Processa({ |lEnd| MNTA450PRO() }, STR0045) //"Gerando Ordem de Servico de Reforma.."
			EvalTrigger()  // Processa Gatilhos
		Else
			For xx := 1 to len(aARRSTJDE)
				DbSelectArea("STJ")
				DbSetOrder(1)
				If Dbseek(xfilial("STJ")+aARRSTJDE[xx][1]+aARRSTJDE[xx][2])
					Reclock("STJ",.F.)
					STJ->TJ_SITUACA := "P"
					MSUNLOCK("STJ")
				EndIf
			Next
		EndIf

		oTmpTbl2:Delete() // Deleta Tab. Temporária 2
		oTmpTbl3:Delete() // Deleta Tab. Temporária 3
		oTmpTbl4:Delete() // Deleta Tab. Temporária 4
		oTmpTbl5:Delete() // Deleta Tab. Temporária 5
		oTmpTbl6:Delete() // Deleta Tab. Temporária 6
		oTmpTbl7:Delete() // Deleta Tab. Temporária 7
		oTmpTbl8:Delete() // Deleta Tab. Temporária 8

		DbSelectArea("ST9")
		DbSetOrder(1)
	EndIf	

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450MAQ
Inverte marcacoes - Windows
@author Inacio Luiz Kolling
@since 04/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450MAQ()

	DbSelectArea(cTRBC450)
	IF ALTERA
		If !Empty((cTRBC450)->TC_ORDEM)
			If (cTRBC450)->TC_ORDEM == (cTRBJ450)->TJ_ORDEM
				MSGINFO(STR0046+(cTRBC450)->TC_ORDEM+STR0047+chr(13)+chr(13); //"A Ordem de Servico "###"  Pai Nao Podera Ser Desmarcada"
				+STR0048+chr(13)+chr(13); //"Caso Seja Necessario Desmarcar, Devera Ser Excluida"
				+STR0049,STR0031) //"a ordem de reforma no browse inicial e incluída novamente."###"ATENCAO"

				(cTRBC450)->TC_OK := cMARCA
				Return
			EndIf

			If MSGYESNO(STR0050+(cTRBC450)->TC_ORDEM+STR0051+chr(13)+chr(13); //"Ja Existe Ordem de Servico ( "###" ) Gerado Anteriormente."
			+STR0052,STR0031) //"Desmarcar e Excluir a Ordem ?"###"ATENCAO"

				DbSelectArea(cTRBL450)
				Dbseek((cTRBC450)->TC_BEMCOMP)
				While !Eof() .And. (cTRBL450)->TL_BEMCOMP == (cTRBC450)->TC_BEMCOMP
					Reclock((cTRBL450),.F.)
					Dbdelete()
					MsUnlock(cTRBL450)
					DbSkip()
				End

				DbSelectArea(cTRBQ450)
				Dbseek((cTRBC450)->TC_BEMCOMP)
				While !Eof() .And. (cTRBQ450)->TX_BEMCOMP == (cTRBC450)->TC_BEMCOMP
					Reclock((cTRBQ450),.F.)
					Dbdelete()
					MsUnlock(cTRBQ450)
					Dbskip()
				End

				DbSelectArea("STJ")
				DbSetOrder(1)
				If Dbseek(xfilial("STJ")+(cTRBC450)->TC_ORDEM+(cTRBC450)->TC_PLANO)
					If STJ->TJ_SITUACA <> "C"
						Reclock("STJ",.F.)
						STJ->TJ_SITUACA := "C"
						MsUnlock("STJ")

						If AllTrim(GetNewPar("MV_NGINTER","N")) == "M"  //Mensagem Unica
							NGMUCanMnO(STJ->(RecNo()))
						EndIf

						If aScan(aARRSTJDE, {|x| x[1] == (cTRBC450)->TC_ORDEM}) == 0
							Aadd(aARRSTJDE,{(cTRBC450)->TC_ORDEM,(cTRBC450)->TC_PLANO})
						EndIf
					EndIf
				EndIf

				DbSelectArea(cTRBC450)
				Reclock(cTRBC450,.F.)
				(cTRBC450)->TC_ORDEM := Space(Len((cTRBC450)->TC_ORDEM))
				(cTRBC450)->TC_OK    := Space(2)
				MsUnlock(cTRBC450)
			Else
				(cTRBC450)->TC_OK := cMARCA
				Return
			EndIf
		EndIf
	EndIf

	If Empty((cTRBC450)->TC_OK)
		DbSelectArea(cTRBL450)
		Dbseek((cTRBC450)->TC_BEMCOMP)
		While !Eof() .And. (cTRBL450)->TL_BEMCOMP == (cTRBC450)->TC_BEMCOMP
			Reclock(cTRBL450,.F.)
			Dbdelete()
			MsUnlock(cTRBL450)
			Dbskip()
		End
		DbSelectArea(cTRBQ450)
		Dbseek((cTRBC450)->TC_BEMCOMP)
		While !Eof() .And. (cTRBQ450)->TX_BEMCOMP == (cTRBC450)->TC_BEMCOMP
			Reclock(cTRBQ450,.F.)
			Dbdelete()
			MsUnlock(cTRBQ450)
			Dbskip()
		End
		DbSelectArea(cTRBC450)
		If AllTrim( ( cTRBC450 )->TC_BEMCOMP ) == AllTrim( aBem[1] ) // Verifica se o é Bem Pai na estrtura de bens.
			MsgAlert( STR0132 + Alltrim( ( cTRBC450 )->TC_BEMCOMP ) + STR0133 )
			(cTRBC450)->TC_OK := cMARCA
		Else
			(cTRBC450)->TC_OK := Space(2)
		EndIf
	EndIf

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450CUS
Calcula o custo da O.S.
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450CUS()

	Local oMenu
	Local nopins 	:= 1
	Local cDesMoeda := SubStr( GetNewPar("MV_MOEDA1",STR0131), 1, 10 ) // Retorna o nome da moeda, conforme parametro repassado
	Local aCstMoeda := {}
	Local cMoedaCst := ""

	DbSelectArea(cTRBX450)
	Zap

	nPRE := 0.00
	DbSelectArea(cTRBL450)
	If Dbseek((cTRBC450)->TC_BEMCOMP)
		While !Eof() .And. (cTRBL450)->TL_BEMCOMP == (cTRBC450)->TC_BEMCOMP

			If Empty((cTRBL450)->tl_custo)
				If lMMoeda .And. FindFunction("NGCALCUSMD")
					aCstMoeda := NGCALCUSMD((cTRBL450)->tl_codigo,(cTRBL450)->tl_tiporeg,(cTRBL450)->tl_quantid,;
					(cTRBL450)->tl_local,(cTRBL450)->tl_tipohor,,,(cTRBL450)->tl_quanrec)
					nCUSTO    := aCstMoeda[1]
					cMoedaCst := aCstMoeda[2]
				Else
					nCUSTO   := NGCALCUSTI((cTRBL450)->tl_codigo,(cTRBL450)->tl_tiporeg,(cTRBL450)->tl_quantid,;
					(cTRBL450)->tl_local,(cTRBL450)->tl_tipohor,,,(cTRBL450)->tl_quanrec)
					If lMMoeda
						cMoedaCst := "1"
					Endif
				Endif
			Else
				nCusto    := (cTRBL450)->TL_CUSTO
				If lMMoeda
					cMoedaCst := (cTRBL450)->TL_MOEDA
				Endif
			Endif

			nPRE     := nPRE + If(lMMoeda,xMoeda(nCUSTO,Val(cMoedaCst),1,(cTRBL450)->TL_DTINICI,TAMSX3("TL_CUSTO")[2]),nCUSTO)
			aCARRAY  := NGNOMINSUM((cTRBL450)->TL_TIPOREG,(cTRBL450)->TL_CODIGO,30)
			cNOMEINS := Substr(aCARRAY[1][1],1,13)

			DbSelectArea(cTRBX450)
			If !Dbseek(cNOMEINS+(cTRBL450)->TL_CODIGO)
				Reclock(cTRBX450, .T.)
				(cTRBX450)->TL_TIPOREG := (cTRBL450)->TL_TIPOREG
				(cTRBX450)->TL_NOMTIP  := cNOMEINS
				(cTRBX450)->TL_TAREFA  := (cTRBL450)->TL_TAREFA
				(cTRBX450)->TL_CODIGO  := (cTRBL450)->TL_CODIGO
				(cTRBX450)->TL_NOME    := aCARRAY[1][2]
				(cTRBX450)->TL_SEQRELA := (cTRBL450)->TL_SEQRELA
				(cTRBX450)->TL_QUANTID := (cTRBL450)->TL_QUANTID
				(cTRBX450)->TL_UNIDADE := (cTRBL450)->TL_UNIDADE
				(cTRBX450)->TL_DTINICI := (cTRBL450)->TL_DTINICI
				(cTRBX450)->TL_DTFIM   := (cTRBL450)->TL_DTFIM
				(cTRBX450)->TL_CUSTO   := nCUSTO
				If lMMoeda
					(cTRBX450)->TL_MOEDA := cMoedaCst
				Endif
				MsUnlock(cTRBX450)
			EndIf
			DbSelectArea(cTRBL450)
			DbSkip()
		End
	EndIf

	DbSelectArea(cTRBX450)
	DbGotop()

	If Reccount() = 0
		MSGINFO(STR0053+chr(13)+chr(13); //"Nao Ha Insumos Previsto Para Calcular"
		+STR0054+(cTRBC450)->TC_BEMCOMP,STR0031) //"o Custo Para o Componente "###"ATENCAO"
		DbSelectArea(cTRBC450)
		Return
	EndIf


	Define MsDialog odlg4 Title STR0055+(cTRBC450)->TC_BEMCOMP From 9,0 To 30,90 Of oMainWnd //"Custo Previsto Para o Componente "

	NgPopUp(@AsMenu,@oMenu)
	oDlg4:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg4)}

	@ 16,001 Button STR0056 Of odlg4 Size 40,12 Pixel Action (MNTA450VIN()) //"&Visualizar"
	@ 16,046 Button STR0057 Of odlg4 Size 40,12 Pixel Action (MNTA450CIM()) //"&Imprimir"

	@ 02.2,00 Listbox Fields TL_NOMTIP             ,;
	TL_CODIGO                                      ,;
	TL_NOME                                        ,;
	PADL(Transform(TL_QUANTID,"@E 99,999.99"),9)   ,;
	TL_UNIDADE                                     ,;
	PADL(Transform(TL_CUSTO,"@E 9,999,999.99"),12) ,;
	DTOC(TL_DTINICI)                               ,;
	DTOC(TL_DTFIM)                                  ;
	FieldSizes 50,50,100,40,15,70,40,40             ;
	Size 350,95                                     ;
	HEADERS  STR0058                          ,; //"Tipo"
	STR0059                                   ,; //"Codigo"
	STR0060                                   ,; //"Nome"
	STR0061                                   ,; //"Quantidade"
	STR0062                                   ,; //"Und"
	STR0063                                   ,; //"Custo Previsto"
	STR0064                                   ,; //"Dt Inicio"
	STR0065                                      //"Dt Fim"

	@ 135,160 Say STR0066 + "  (" + cDesMoeda + ")" Size 140,15 Of odlg4  Pixel //"CUSTO TOTAL PREVISTO.:"
	@ 135,285 Say nPRE Picture "@E 9,999,999.99" Size 70,15 Of odlg4  Pixel

	Activate MsDialog odlg4 On Init EnchoiceBar(odlg4,{||nopins:=1,odlg4:End()},{||odlg4:End()})

	DbSelectArea(cTRBC450)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450VIN
Visualiza a O.S.
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450VIN()

	Local cCadoldI := cCadastro

	cCadastro      := STR0067 //"Insumo  -  Visualizar"
	DbSelectArea("STL")
	DbSetOrder(1)
	If Dbseek(xfilial("STL")+(cTRBJ450)->TJ_ORDEM+(cTRBJ450)->TJ_PLANO+(cTRBX450)->TL_TAREFA+(cTRBX450)->TL_TIPOREG+(cTRBX450)->TL_CODIGO+(cTRBX450)->TL_SEQRELA)

		aTrocaF3    := {}
		M->TL_TIPOREG := STL->TL_TIPOREG
		VERDESTINO(.T.)
		dbSelectArea("STF")
		dbSetOrder(1)
		dbSeek(xFilial("STF")+STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA)
		If Val(STJ->TJ_PLANO) == 0 .And. NGUSATARPAD()
			aAdd(aTrocaF3,{"TL_TAREFA","TT9"})
		EndIf
		NGCAD01("STL",Recno(),2)
	Else
		Help(" ",1,"NGMINSNPAR") //"Este Insumo Ainda Nao Faz Parte Efetivamente"
		//"da Ordem de Servico. Sendo Assim, Somente Apos"
		//"a Confirmacao da Ordem de Reforma o Mesmo"
		//"Podera Ser Visualizado"###"ATENCAO"
	EndIf
	cCadastro := cCadoldI
	DbSelectArea(cTRBX450)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450INS
Rotina de Inclusao de OS de Reforma bem, servico corretivas
@author Inacio Luiz Kolling
@since 09/02/2001
@version undefined
@param cAlias, characters
@param nReg, numeric
@param nOpcx, numeric
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450INS(cAlias,nReg,nOpcx)

	Local oMenu, i, ng9, nPosRec
	Local aCstMoeda := {}
	Local cNGUNIDT	:= AllTrim(GetMv("MV_NGUNIDT"))
	Local nInd := 0

	Store 0 To i, ng9, nPosRec

	Private aCHKDEL := {}
	Private aTELA[0][0],aGETS[0],aHeader[0],Continua,nUsado:=0
	Private nTPR,nCOD,nQTR,nQTL,nDES,nUND,nLOC,nTAR
	Private cPxSeq := Space(3), nQTARE := 0

	Store 0 To nTPR,nCOD,nQTR,nQTL,nDES,nUND,nLOC,nTAR

	If Empty((cTRBC450)->TC_OK)
		Help(" ",1,"NGMNITESIN") //"Nao Foi Marcado o Itens da Estrutura Para Gerar Insumos.."
		Return
	EndIf

	DbSelectArea("ST9")
	DbSetOrder(1)
	Dbseek(xfilial('ST9')+(cTRBC450)->TC_BEMCOMP)

	lINCLUI := INCLUI
	bCampo  := {|nCPO| Field(nCPO) }

	DbSelectArea("STL")
	NGSETIFARQUI("STL","F",1)
	For i := 1 TO FCount()
		M->&(EVAL(bCampo,i)) := &(EVAL(bCampo,i))

		If nOPCX == 3    //INCLUIR
			If ValType(M->&(EVAL(bCampo,i))) == "C"
				M->&(EVAL(bCampo,i)) := Space(Len(M->&(EVAL(bCampo,i))))
			Elseif ValType(M->&(EVAL(bCampo,i))) == "N"
				M->&(EVAL(bCampo,i)) := 0
			Elseif ValType(M->&(EVAL(bCampo,i))) == "D"
				M->&(EVAL(bCampo,i)) := cTod("  /  /  ")
			Elseif ValType(M->&(EVAL(bCampo,i))) == "L"
				M->&(EVAL(bCampo,i)) := .F.
			EndIf
		EndIf
	Next i

	M->TJ_ORDEM   := Space(Len(STJ->TJ_ORDEM))
	M->TJ_PLANO   := "000000"
	M->TJ_TAREFA  := "0"
	M->TL_SEQRELA := "0  "
	nSEQUENC      := M->TL_SEQRELA

	aHEAINS       := {}
	aGETINS       := {}

	MNTA450IN(nOPCX)

	aHeader := aCLONE(aHEAINS)
	aCOLS   := aCLONE(aGETINS)

	nTPR := aSCAN(aHEADER, {|x| Alltrim(Upper(X[2])) == "TL_TIPOREG"})
	nCOD := aSCAN(aHEADER, {|x| Alltrim(Upper(X[2])) == "TL_CODIGO" })
	nQTR := aSCAN(aHEADER, {|x| Alltrim(Upper(X[2])) == "TL_QUANREC"})
	nQTL := aSCAN(aHEADER, {|x| Alltrim(Upper(X[2])) == "TL_QUANTID"})
	nDES := aSCAN(aHEADER, {|x| Alltrim(Upper(X[2])) == "TL_DESTINO"})
	nUND := aSCAN(aHEADER, {|x| Alltrim(Upper(X[2])) == "TL_UNIDADE"})
	nLOC := aSCAN(aHEADER, {|x| Alltrim(Upper(X[2])) == "TL_LOCAL"  })
	nDTI := aSCAN(aHEADER, {|x| AllTrim(Upper(X[2])) == "TL_DTINICI" })
	nHOI := aSCAN(aHEADER, {|x| AllTrim(Upper(X[2])) == "TL_HOINICI" })
	nDTF := aSCAN(aHEADER, {|x| AllTrim(Upper(X[2])) == "TL_DTFIM" })
	nHOF := aSCAN(aHEADER, {|x| AllTrim(Upper(X[2])) == "TL_HOFIM" })
	nCAL := aSCAN(aHEADER, {|x| AllTrim(Upper(X[2])) == "TL_USACALE" })
	nSEE := aSCAN(aHEADER, {|x| AllTrim(Upper(X[2])) == "TL_SEQTARE"})
	nTAR := aSCAN(aHEADER, {|x| AllTrim(Upper(X[2])) == "TL_TAREFA" })

	If lSEQTAR
		If nSEE > 0
			For i := 1 To Len(aCOLS)
				If i = 1
					cPxSeq := aCOLS[i,nSEE]
				Else
					If aCOLS[i,nSEE] > cPxSeq
						cPxSeq := aCOLS[i,nSEE]
					Endif
				Endif
				nQTARE ++
			Next i
		Endif
	Endif

	cTUDOOK := "NG450TUDOK"
	cLINOK  := "NG450LINOK"
	INCLUI  := .T.
	nOPCA   := 0

	SetKey(VK_F12,{||NGINSUF12("M->TL_CODIGO",(cTRBC450)->TC_BEMCOMP,aCOLS[n,nTPR],.T.,,"TL_NOMCODI")})

	Define MsDialog oDlg5 Title STR0073+(cTRBC450)->TC_BEMCOMP From 163,0 To 463,If(GetScreenRes()[1] <= 800,750,GetScreenRes()[1]*0.73) Pixel Of oMainWnd //"Insumos Para Bem/Componente  "
	oGet := MsGetDados():New(13,1,157,397,3,cLINOK,cTUDOOK,"",.T.,,,,300)

	NgPopUp(@AsMenu,@oMenu)
	oDlg5:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg5)}
	Activate MsDialog oDLG5 On Init (EnchoiceBar(oDLG5,{||nOpca:=1,IIf(oGet:tudook(),oDLG5:End(),nOpca := 2)},{||oDLG5:End()}),AlignObject(oDlg5,{oGet:oBrowse},1))

	Set Key VK_F12 To

	If nOPCA == 1
		DbSelectArea("STJ")
		DbSetOrder(1)
		DbSeek(xFILIAL("STJ")+(cTRBC450)->TC_ORDEM+(cTRBC450)->TC_PLANO)

		dINI := STJ->TJ_DTORIGI
		hINI := If(!Empty(STJ->TJ_HOMPINI),STJ->TJ_HOMPINI,SubStr( Time(),1,5))
		dFIM := STJ->TJ_DTORIGI
		hFIM := If(!Empty(STJ->TJ_HOMPINI),STJ->TJ_HOMPINI,SubStr( Time(),1,5))
		dMAX := STJ->TJ_DTORIGI
		hMAX := If(!Empty(STJ->TJ_HOMPINI),STJ->TJ_HOMPINI,SubStr( Time(),1,5))

		hINA := hINI
		nTEMPO := HTOM(hINI)

		For I := 1 to Len(aCOLS)

			DbSelectArea(cTRBL450)

			cChavSTL := (cTRBC450)->TC_BEMCOMP+aCols[I][nCOD]+aCols[I][nTPR]

			If lSEQTAR .And. nSEE <> 0
				If nTAR > 0
					cChavSTL += aCOLS[I,nTAR]+aCOLS[I,nSEE]
				Else
					cChavSTl += "0     "+aCOLS[I,nSEE]
				EndIf
			Endif

			DbSeek(cChavSTL)
			If aCols[I][Len(aCols[I])]
				If Found()
					Reclock((cTRBL450),.F.)
					Dbdelete()
					MsUnlock(cTRBL450)
				EndIf
				loop
			Else
				If !Found()
					Reclock((cTRBL450),.t.)
				Else
					Reclock((cTRBL450),.f.)
				EndIf

				If lSEQTAR .And. nSEE > 0
					If Empty(aCOLS[I,nSEE])
						cSEQTARE := If(FindFunction("Soma1Old"),PADR(Soma1Old(cPxSeq),3),;
						PADR(Soma1(cPxSeq),3))
						cPxSeq := cSEQTARE
						aCOLS[I,nSEE] := cPxSeq
					Endif
				EndIf

				cUNIDAD := Alltrim(aCOLS[I][nUND])

				(cTRBL450)->TL_BEMCOMP := (cTRBC450)->TC_BEMCOMP
				(cTRBL450)->TL_TIPOREG := aCols[I][nTPR]
				(cTRBL450)->TL_CODIGO  := aCols[I][nCOD]

				If lSEQTAR .And. nTAR > 0
					(cTRBL450)->TL_TAREFA  := aCols[I][nTAR]
				Else
					(cTRBL450)->TL_TAREFA  := '0'
				Endif

				If nSEE > 0
					(cTRBL450)->TL_SEQTARE := aCols[I][nSEE]
				EndIf

				(cTRBL450)->TL_QUANREC := aCols[I][nQTR]
				(cTRBL450)->TL_QUANTID := aCols[I][nQTL]
				(cTRBL450)->TL_UNIDADE := aCols[I][nUND]
				(cTRBL450)->TL_DESTINO := aCols[I][nDES]
				(cTRBL450)->TL_LOCAL   := aCols[I][nLOC]
				(cTRBL450)->TL_DTINICI := If(Empty(dINI),dDataBase,dini)
				(cTRBL450)->TL_HOINICI := If(Empty(hINI) .Or. Alltrim(hINI) = ":",Time(),hINI)
				(cTRBL450)->TL_USACALE := If(aCols[I,nCAL] = "S","S","N")
				(cTRBL450)->TL_TIPOHOR := cNGUNIDT

				If STL->TL_TIPOREG = "P"
					(cTRBL450)->TL_DTFIM := (cTRBL450)->TL_DTINICI
					(cTRBL450)->TL_HOFIM := (cTRBL450)->TL_HOINICI
				Else
					If (cTRBL450)->TL_USACALE = "S"
						vDTAHOR := NGDTHORFCALE((cTRBL450)->TL_DTINICI,(cTRBL450)->TL_HOINICI,;
						(cTRBL450)->TL_QUANTID,NGSEEK("ST1",SubStr((cTRBL450)->TL_CODIGO,1,6),1,"T1_TURNO"))
						(cTRBL450)->TL_TIPOHOR := "S"
					Else
						vDTAHOR := NGDTHORFIM((cTRBL450)->TL_DTINICI,(cTRBL450)->TL_HOINICI,(cTRBL450)->TL_QUANTID)
					Endif
					(cTRBL450)->TL_DTFIM := vDTAHOR[1]
					(cTRBL450)->TL_HOFIM := vDTAHOR[2]
				Endif

				(cTRBL450)->TL_SEQRELA := "0  "

				If lMMoeda .And. FindFunction("NGCALCUSMD")
					aCstMoeda := NGCALCUSMD((cTRBL450)->tl_codigo,(cTRBL450)->tl_tiporeg,;
					(cTRBL450)->tl_quantid,(cTRBL450)->tl_local,(cTRBL450)->tl_tipohor,,,(cTRBL450)->tl_quanrec)
					(cTRBL450)->tl_custo  := aCstMoeda[1]
					(cTRBL450)->TL_MOEDA  := aCstMoeda[2]
				Else
					(cTRBL450)->tl_custo := NGCALCUSTI((cTRBL450)->tl_codigo,(cTRBL450)->tl_tiporeg,;
					(cTRBL450)->tl_quantid,(cTRBL450)->tl_local,(cTRBL450)->tl_tipohor,,,(cTRBL450)->tl_quanrec)
					If lMMoeda
						(cTRBL450)->TL_MOEDA := "1"
					Endif
				Endif

				For nInd := 1 To Len(aHeader)
					cCampo 		:= aHeader[nInd,2]
					cPropri 	:= Posicione("SX3",2,cCampo,"X3_PROPRI")

					If cPropri == "U" // Verifica se e campo de usuario
						(cTRBL450)->&(cCampo) := aCols[i][nInd]
					EndIf

				Next nInd

				MsUnlock(cTRBL450)
			EndIf
		Next I

		dbSelectArea(cTRBL450)
		dbSeek((cTRBC450)->TC_BEMCOMP)
		While !Eof() .And. (cTRBL450)->TL_BEMCOMP == (cTRBC450)->TC_BEMCOMP

			nPos  := aSCAN(aCols,{|x| x[nTPR]+x[nCOD] = (cTRBL450)->TL_TIPOREG+(cTRBL450)->TL_CODIGO})
			If nPos == 0
				Reclock((cTRBL450),.F.)
				dbdelete()
				MsUnlock(cTRBL450)
			EndIf
			(cTRBL450)->(dbSkip())
		End

	EndIf

	DbSelectArea(cTRBC450)
	INCLUI := lINCLUI
Return NIL

//----------------------------------------------------------
/*/{Protheus.doc} MNTA450IN
@since XX/XX/XXXX
@version undefined
@param nOPCX, numeric, descricao
@type function
/*/
//----------------------------------------------------------
Function MNTA450IN(nOPCX)

	Local aNAO := {}, cKEY, cGETWHILE, nG

	cKEY       := (cTRBC450)->TC_BEMCOMP
	cGETWHILE  := "TL_BEMCOMP == (cTRBC450)->TC_BEMCOMP"

	Aadd(aNAO,"TL_ORDEM")
	Aadd(aNAO,"TL_PLANO")
	Aadd(aNAO,"TL_SEQRELA")
	Aadd(aNAO,"TL_SEQUENC")
	Aadd(aNAO,"TL_NOMSEQ")

	If !lUSATARG
		Aadd(aNAO,"TL_TAREFA")
		Aadd(aNAO,"TL_NOMTAR")
	Endif

	Aadd(aNAO,"TL_NOMTREG")
	Aadd(aNAO,"TL_CUSTO")

	If lMMoeda
		Aadd(aNAO,"TL_MOEDA")
	Endif

	Aadd(aNAO,"TL_CUSTO2")
	Aadd(aNAO,"TL_CUSTO3")
	Aadd(aNAO,"TL_CUSTO4")
	Aadd(aNAO,"TL_CUSTO5")
	Aadd(aNAO,"TL_CUSENT1")
	Aadd(aNAO,"TL_CUSENT2")
	Aadd(aNAO,"TL_CUSENT3")
	Aadd(aNAO,"TL_CUSENT4")
	Aadd(aNAO,"TL_CUSENT5")
	Aadd(aNAO,"TL_OBSERVA")
	Aadd(aNAO,"TL_OCORREN")
	Aadd(aNAO,"TL_REPFIM")
	Aadd(aNAO,"TL_NUMSEQ")
	Aadd(aNAO,"TL_CODOBS")
	AAdd(aNAO,If(NGCADICBASE('TL_PCTHREX','A','STL',.F.),"TL_PCTHREX","TL_HREXTRA"))
	Aadd(aNAO,"TL_CONTROL")
	Aadd(aNAO,"TL_ETAPA")
	Aadd(aNAO,"TL_NOMETAP")
	Aadd(aNAO,"TL_GARANTI")
	Aadd(aNAO,"TL_LOCAPLI")
	Aadd(aNAO,"TL_NOMLOCA")
	Aadd(aNAO,"TL_LOTECTL")
	Aadd(aNAO,"TL_NUMLOTE")
	Aadd(aNAO,"TL_NUMSERI")
	Aadd(aNAO,"TL_LOCALIZ")
	Aadd(aNAO,"TL_NOMLOCA")
	Aadd(aNAO,"TL_POSCONT")
	Aadd(aNAO,"TL_POSCON2")
	Aadd(aNAO,"TL_DTINICI")
	Aadd(aNAO,"TL_HOINICI")
	Aadd(aNAO,"TL_DTFIM")
	Aadd(aNAO,"TL_HOFIM")
	Aadd(aNAO,"TL_DTVALID")

	DbSelectArea("STL")
	DbSetOrder(1)

	aHEAINS := CABECGETD("STL", aNAO)

	//Inclui coluna de registro atraves de funcao generica
	ADHeadRec("STL",aHEAINS)
	//Posicao do registro
	nPosRec := Len(aHEAINS)

	If nOPCX == 3
		aGETINS := BLANKGETD(aHeaIns)
	Else
		aGETINS := MAKEGETR((cTRBL450), cKEY,aHeaIns, cGETWHILE,"TL")
		If Empty(aGETINS)
			aGETINS := BLANKGETD(aHeaIns)
		Else
			M->TJ_ORDEM := (cTRBC450)->TC_ORDEM
		EndIf
	EndIf

	nETAETI := aScan(aHEAINS,{|x| Trim(upper(x[2])) == "TL_TAREFA"})
	nNOMTAR := aScan(aHEAINS,{|x| Trim(Upper(x[2])) == "TL_NOMTAR"})

	For NG := 1 To Len(aGETINS)
		xx := aScan(aHeaIns,{|x| Trim(upper(x[2])) == "TL_TIPOREG"})
		M->TL_TIPOREG := If(xx > 0, aGETINS[nG][xx], " ")

		xx := aScan(aHeaIns,{|x| Trim(upper(x[2])) == "TL_CODIGO"})
		M->TL_CODIGO := If(xx > 0, aGETINS[nG][xx], Space(15))

		xx := aScan(aHeaIns,{|x| Trim(upper(x[2])) == "TL_NOMCODI"})
		If xx > 0
			aGetIns[nG][xx] := VirtInsumo(M->TL_TIPOREG, M->TL_CODIGO)
		EndIf

		If nNOMTAR > 0 .And. nETAETI > 0
			aGetIns[nG][nNOMTAR] := NGNOMETAR("",aGetIns[nG][nETAETI])
		EndIf
	Next

	DbSelectArea( "STL" )
	DbSetOrder(1)

Return NIL

//---------------------------------------------------------------------
/*/{Protheus.doc} NG450LINOK
Consiste a Linha da GETDADOS
@author Inacio Luiz Kolling
@since XX/XX/XXXX
@version undefined
@param o, object
@type function
/*/
//---------------------------------------------------------------------
Function NG450LINOK(o)

	Local nx,lRet := .T.,lDeleted := .F., cSavOrd, cTAR, qtd := 0
	Local nMAX, lDel := aCOLS[n][Len(aCOLS[n])]

	If lDel
		Return .T.
	EndIf
	If nTPR == 0 .Or. nCOD == 0 .Or. nQTR == 0 .Or. nDES == 0
		Return .t.
	EndIf

	cTAR := If(nTAR > 0,aCOLS[n][nTAR],Space(Len(STL->TL_TAREFA)))
	cCOD := aCols[n][nCOD]
	cQTD := aCols[n][nQTL]
	cTIP := aCols[n][nTPR]
	cQTR := aCols[n][nQTR]
	cDES := aCols[n][nDES]
	cLOC := aCols[n][nLOC]
	cUND := aCols[n][nUND]
	cLOC := aCols[n][nLOC]

	nMax := Len(aCols[n])

	If (nTAR = 0,aEval(aCOLS, {|x| If( (x[nTPR] == cTIP .and. cCOD == x[nCOD] .and. !x[nMax]), qtd++, NIL ) }),;
	aEval(aCOLS, {|x| If( (x[nTAR] == cTAR .and. x[nTPR] == cTIP .and. cCOD == x[nCOD] .and. !x[nMax]), qtd++, NIL ) }))

	If lUSATARG
		If qtd > 1 .And. !Empty(cCOD)
			Help(" ",1,"TARJAEXIST")
			lRet := .F.
		EndIf
	EndIf

	If lRet
		lRet := NG450CHKLIN(n,,cTAR)
	EndIf

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} NG450TUDOK
Consiste a GETDADOS
@author Inacio Luiz Kolling
@since XX/XX/XXXX
@version undefined
@param o, object
@type function
/*/
//---------------------------------------------------------------------
Function NG450TUDOK(o)

	Local lRet := .T.,i

	If len(aCOLS) == 1
		If !aCols[1][Len(aCols[1])]
			cCOD := aCols[1][nCOD]
			cTIP := aCols[1][nTPR]
			cQTR := aCols[1][nQTR]
			cQTD := aCols[1][nQTL]
			cDES := aCols[1][nDES]
			cUND := aCols[1][nUND]
			cLOC := aCols[1][nLOC]
			If Empty(cCOD) .And. Empty(cTIP) .And. Empty(cQTR) .And. Empty(cQTD);
						   .And. Empty(cDES) .And. Empty(cUND) //.And. Empty(dDTI) .And. Empty(cHOI)
				Return .T.
			EndIf
		EndIf
	EndIf

	For i := 1 To Len(aCOLS)
		If !aCols[i][Len(aCols[i])]
			cCOD := aCols[i][nCOD]
			cTIP := aCols[i][nTPR]
			cQTR := aCols[i][nQTR]
			cQTD := aCols[i][nQTL]
			cDES := aCols[i][nDES]
			cUND := aCols[i][nUND]
			cLOC := aCols[i][nLOC]
			lRet := NG450CHKLIN(I,.F.)

			If !lRet
				Exit
			Endif
		EndIf
	Next

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} NG450CHKLIN
Consiste a GETDADOS
@author Inacio Luiz Kolling
@since 28/04/2004
@version undefined
@param nVLIN, numeric
@param lVdlLinha, logical
@param cTAR, characters
@type function
@obs uso NG450LINOK e NG450TUDOK
/*/
//---------------------------------------------------------------------
Function NG450CHKLIN(nVLIN,lVdlLinha,cTAR)

	Local lRETCHK := .T.
	Local vDatsMdo
	Local cUSC := ''

	Default lVdlLinha := .T.
	Default cTAR := '0'

	Private nVLINPE  := nVLIN // nao retirar,usado no P.E. MNTA420K
	Private lChkPR   := GetNewPar("MV_NGCOQPR","N") == "S" //checa qtd pecas de reposicao
	Private lUSATARG := NGUSATARPAD()

	If !Positivo(cQTD)
		Return .f.
	Endif

	If Empty(cTIP) .Or. Empty(cCOD) .Or. (lUSATARG .And. Empty(cTAR))
		Help(" ",1,"NGPROBINSU")
		lRETCHK := .F.
	EndIf

	If lRETCHK

		DbSelectArea("STJ")
		DbSetOrder(1)
		DbSeek(xFILIAL("STJ")+(cTRBC450)->TC_ORDEM+(cTRBC450)->TC_PLANO)
		dINI := If(!Empty(STJ->TJ_DTORIGI),STJ->TJ_DTORIGI,dDataBase)
		hINI := If(!Empty(STJ->TJ_HOMPINI),STJ->TJ_HOMPINI,SubStr( Time(),1,5))


		M->TL_TIPOREG := cTIP
		M->TL_CODIGO  := cCOD
		M->TL_QUANTID := cQTD
		M->TL_USACALE := cUSC
		M->TL_DTINICI := dINI
		M->TL_HOINICI := hINI
		M->TL_UNIDADE := cUND
		M->TL_TAREFA  := If(!Empty(cTAR),cTAR,"0     ")

		If cTIP <> "P"
			aCOLS[nVLIN,nUND] := "H"+Space(Len(aCOLS[nVLIN,nUND])-1)

			If Empty(cQTD)
				Help(" ",1,"NGATENCAO",,STR0067,3,1) //"Campo quantidade obrigatorio."
				lRETCHK := .F.
			EndIf

			If cTIP == "M" .And.  cUSC == "S"  .And. lRETCHK
				If Empty(dINI) .Or. Empty(hINI)
					Help(" ",1,"NGATENCAO",,STR0068+" "+Alltrim(Str(nVLIN,3))+".",3,1)  //"Data/Hora obrigatorio quando o campo Usa calend. = 'S'. Item"
					lRETCHK := .F.
				EndIf

				If lRETCHK
					M->TL_TIPOREG := cTIP
					M->TL_USACALE := cUSC
					M->TL_CODIGO  := cCOD
					M->TL_DTINICI := dINI
					M->TL_HOINICI := hINI

					If !NGSTLHORIN()
						lRETCHK := .F.
					EndIf
				EndIf
			EndIf

			If lRETCHK
				lRETCHK := NGQUANTCHK(M->TL_TIPOREG,M->TL_UNIDADE,M->TL_QUANTID)
			EndIf

			If cTIP == "M" .And. lRETCHK

				vDatsMdo := M420RETDAT(cCOD,If(cUSC == "S",dINI,dINI),If(cUSC == "S",cHOI,hINI),cQTD,cUSC)

				//Verifica Afastamentos da mao de obra
				If !NGFRHAFAST(cCOD,vDatsMdo[1],vDatsMdo[3],.T.)
					lRETCHK := .F.
				EndIf

				//Verifica bloqueios da mao de obra
				If lRETCHK
					If !NG420VBLOF(cUSC,cCOD,dINI,hINI,cQTD,nVLIN,If(!Empty(cTAR),cTAR,"0     "))
						lRETCHK := .F.
					EndIf
				EndIf
			ElseIf cTIP == "E" .And. lRETCHK .and. !Empty(cQTR)
				//Verifica bloqueios da especialidade
				If lVdlLinha //Somente no LinOK
					If !NGTTYBLOQ( cCOD, dINI, hINI, cQTD, cQTR, nVLIN, M->TJ_ORDEM, 1, M->TJ_PLANO )
						lRETCHK := .F.
					EndIf
				Endif
			EndIf
		Else
			If Empty(cQTD) .Or. Empty(cUND)
				Help(" ",1,"NGPROBINSU")
				lRETCHK := .F.
			EndIf
			If lRETCHK
				If cTIP == "P"
					If Empty(cDES)
						Help(" ",1,"DESTINO")
						lRETCHK := .F.
					EndIf
					If lRETCHK .and. cUsaIntEs == "S"  //INTEGRACAO COM ESTOQUE
						If !NGEMPALM(cLOC,nVLIN)
							lRETCHK := .F.
						Else
							If !NGPROALM(cCOD,cLOC,nVLIN)
								lRETCHK := .F.
							EndIf
						EndIf
					EndIf
					If lRETCHK .And. lChkPR		//checa qtd de pecas de reposicao do bem
						lRETCHK := NGCHKLIMP(ST9->T9_CODBEM,M->TL_CODIGO,M->TL_QUANTID)
					EndIf
				EndIf
			EndIf
		EndIf
	Endif

	If lRETCHK
		If cTIP $ "F/E" .and. Empty(cQTR)
			Help(" ",1,"QUANTIDADE")
			lRETCHK := .F.
		EndIf
	EndIf

	If lRETCHK
		If lUSATARG
			nTARL := aSCAN(aHEADER, {|x| AllTrim(Upper(X[2])) == "TL_TAREFA"})
			If nTARL > 0
				If !Atail(aCOLS[n])
					If Empty(aCOLS[n,nTARL])
						MsgInfo(STR0106+" "+STR0109,STR0047)
						lRETCHK := .F.
					Endif
				Endif
			Endif
		Endif
	Endif

Return lRETCHK

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450PRO
Inverte marcacoes - Windows
@author Inacio Luiz Kolling
@since 04/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450PRO()

	Local xx := 0

	lOSPRIM   := .T.
	cOSPAI    := Space(Len(STJ->TJ_ORDEM))
	cSTLPLANO := Replicate("0",Len(STJ->TJ_PLANO))

	For xx := 1 to len(aARRSTJDE)
		DbSelectArea("STJ")
		DbSetOrder(1)
		If Dbseek(xfilial("STJ")+aARRSTJDE[xx][1]+aARRSTJDE[xx][2])

			//+-------------------------------------------------------------------+
			//| Integração mensagem única para inclusão e alteração de O.S.		  |
			//+-------------------------------------------------------------------+
			If AllTrim(GetNewPar("MV_NGINTER","N")) == "M"
				NGMUMntOrd(STJ->(RecNo()),5)
			EndIf

			Reclock("STJ",.F.)
			Dbdelete()
			MSUNLOCK("STJ")

			// DELETA O STL E STQ DA BASE
			MNTA450DSQ(aARRSTJDE[xx][1],aARRSTJDE[xx][2])

		EndIf
	Next

	DbSelectArea(cTRBC450)
	Dbgotop()
	ProcRegua(LastRec())
	While !Eof()

		IncProc()
		M->TJ_ORDEM := Space(Len(STJ->TJ_ORDEM))
		If INCLUI
			cSERVICO := M->TJ_SERVICO
			M->TJ_DTORIGI := dDTORIGI

			If !Empty((cTRBC450)->TC_OK)
				DbSelectArea("ST9")
				DbSetOrder(1)
				Dbseek(xfilial("ST9")+(cTRBC450)->TC_BEMCOMP)

				nPOSCONT := nCONTADOR
				dINI     := dDTORIGI
				hINI     := Substr( Time(),1,5)
				dFIM     := dDTORIGI
				hFIM     := Substr( Time(),1,5)
				dMAX     := dDTORIGI
				hMAX     := Substr( Time(),1,5)

				aDATINS := {}
				MNTA450FIM()

				// GRAVA STJ

				MNTA450GTJ()

				If lOSPRIM
					lOSPRIM := .F.
					cOSPAI  := M->TJ_ORDEM
					DbSelectArea(cTRBJ450)
					Reclock(cTRBJ450,.T.)
					(cTRBJ450)->TJ_ORDEM   := M->TJ_ORDEM
					(cTRBJ450)->TJ_PLANO   := Replicate("0",Len(STJ->TJ_PLANO))
					(cTRBJ450)->TJ_BEMPAI  := cBEMEST
					(cTRBJ450)->TJ_NOMPAI  := cNOMBEM
					(cTRBJ450)->TJ_CODBEM  := (cTRBC450)->TC_BEMCOMP
					(cTRBJ450)->TJ_NOMEBEM  := ST9->T9_NOME
					(cTRBJ450)->TJ_SERVICO := cSERVICO
					(cTRBJ450)->TJ_NOMESER  := cNOMSER
					(cTRBJ450)->TJ_SEQRELA := "0"
					(cTRBJ450)->TJ_DTORIGI := dDTORIGI
					(cTRBJ450)->TJ_DTMPINI := dINI
					(cTRBJ450)->TJ_POSCONT := STJ->TJ_POSCONT
					(cTRBJ450)->TJ_HORACO1 := STJ->TJ_HORACO1
					(cTRBJ450)->TJ_POSCON2 := STJ->TJ_POSCON2
					(cTRBJ450)->TJ_HORACO2 := STJ->TJ_HORACO2
					MSUNLOCK(cTRBJ450)
				EndIf

				DbSelectArea("STJ")
				Reclock("STJ",.F.)
				STJ->TJ_ORDEPAI := cOSPAI
				MSUNLOCK("STJ")

				M->TJ_ORDEM := STJ->TJ_ORDEM

				// GRAVA OS INSUMOS E ETAPAS

				MNTA450GSQ((cTRBC450)->TC_BEMCOMP)
			EndIf
		Else
			cSERVICO := (cTRBJ450)->TJ_SERVICO
			cBEMEST  := (cTRBJ450)->TJ_BEMPAI
			cOSPAI   := (cTRBJ450)->TJ_ORDEM

			// CONTADOR DO BEM PAI

			DbSelectArea("ST9")
			DbSetOrder(1)
			Dbseek(xfilial("ST9")+(cTRBJ450)->TJ_BEMPAI)
			nPOSCONT := ST9->T9_POSCONT
			dINI     := (cTRBJ450)->TJ_DTORIGI
			hINI     := Substr( Time(),1,5)
			dFIM     := (cTRBJ450)->TJ_DTORIGI
			hFIM     := Substr( Time(),1,5)
			dMAX     := (cTRBJ450)->TJ_DTORIGI
			hMAX     := Substr( Time(),1,5)

			M->TJ_DTORIGI := (cTRBJ450)->TJ_DTORIGI

			If !Empty((cTRBC450)->TC_OK)

				If Empty((cTRBC450)->TC_ORDEM)
					DbSelectArea("ST9")
					DbSetOrder(1)
					Dbseek(xfilial("ST9")+(cTRBC450)->TC_BEMCOMP)

					aDATINS := {}

					MNTA450FIM()

					// GRAVA STJ

					MNTA450GTJ()

					DbSelectArea("STJ")
					Reclock("STJ",.F.)
					STJ->TJ_ORDEPAI := cOSPAI
					MSUNLOCK("STJ")
					M->TJ_ORDEM := STJ->TJ_ORDEM
				Else
					M->TJ_ORDEM := (cTRBC450)->TC_ORDEM

					// DELETA OS INSUMOS E ETAPAS

					MNTA450DSQ((cTRBC450)->TC_ORDEM,(cTRBC450)->TC_PLANO)
				EndIf

				// GRAVA OS INSUMOS E ETAPAS

				MNTA450GSQ((cTRBC450)->TC_BEMCOMP)
			EndIf
		EndIf
		DbSelectArea(cTRBC450)
		Dbskip()
	End

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450GTJ
Grava o STJ
@author Inacio Luiz Kolling
@since 16/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450GTJ()

	Local ny := 0

	aDATINS := {}
	For ny := 1 To Len(aDATINS)
		dMAX := MAX(dMAX, aDATINS[ny][1])
		hMAX := MTOH( MAX( HtoM(hMAX), HtoM(aDATINS[ny][2]) ) )
	Next

	If dFIM == dMAX
		hFIM := hMAX
	Else
		dFIM := dMAX
	EndIf

	// GERA O.S. DE REFORMA
	M->TJ_CODBEM := (cTRBC450)->TC_BEMCOMP

	DbSelectArea("ST4")
	DbSetorder(1)
	Dbseek(xFilial("ST4")+cSERVICO)

	M->TJ_ORDEM := GetSXENum("STJ","TJ_ORDEM")
	ConfirmSx8()

	//Tratamento para evitar duplicação de número de O.S. em base
	DbSelectArea("STJ")
	DbSetOrder(1)

	If DbSeek(xFilial("STJ") + M->TJ_ORDEM)
		M->TJ_ORDEM := GETSXENUM("STJ","TJ_ORDEM")
		ConfirmSX8()
	EndIf

	DbSelectArea("STJ")
	Reclock("STJ",.T.)
	STJ->TJ_FILIAL  := xFILIAL("STJ")
	STJ->TJ_ORDEM   := M->TJ_ORDEM
	STJ->TJ_PLANO   := cSTLPLANO
	STJ->TJ_CODBEM  := (cTRBC450)->TC_BEMCOMP
	STJ->TJ_TIPOOS  := "B"
	STJ->TJ_SERVICO := cSERVICO
	STJ->TJ_SEQRELA := "0"
	STJ->TJ_DTORIGI := M->TJ_DTORIGI
	STJ->TJ_TIPO    := ST4->T4_TIPOMAN
	STJ->TJ_CODAREA := ST4->T4_CODAREA
	STJ->TJ_CCUSTO  := ST9->T9_CCUSTO
	STJ->TJ_CENTRAB := ST9->T9_CENTRAB
	STJ->TJ_POSCONT := nPOSCONT
	STJ->TJ_HORACO1 := cHORCON1
	STJ->TJ_POSCON2 := nCONTADOR2
	STJ->TJ_HORACO2 := cHORCON2
	STJ->TJ_SITUACA := "P"
	STJ->TJ_TERMINO := "N"
	STJ->TJ_DTMPINI := dINI
	STJ->TJ_HOMPINI := hINI
	STJ->TJ_DTMPFIM := dFIM
	STJ->TJ_HOMPFIM := hFIM
	STJ->TJ_BEMPAI  := cBEMEST
	STJ->TJ_LUBRIFI := "N"
	STJ->TJ_PRIORID := ST9->T9_PRIORID
	STJ->TJ_USUARIO := If(Len(STJ->TJ_USUARIO) > 15,cUsername,Substr(cUsuario,7,15))
	STJ->TJ_TERCEIR := '1'
	MSUNLOCK("STJ")

	//gera nao-conformidade
	If Val(STJ->TJ_PLANO) == 0 .And. FindFunction("NGGERAFNC")
		NGGERAFNC(STJ->TJ_ORDEM,STJ->TJ_CODBEM,STJ->TJ_SERVICO,STJ->TJ_DTORIGI)
	EndIf

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450DSQ
Deleta os insumos e etapas da Base
@author Inacio Luiz Kolling
@since 16/01/2001
@version undefined
@param cVORDEM, characters
@param cVPLANO, characters
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450DSQ(cVORDEM,cVPLANO)

	DbSelectArea("STL")
	DbSetOrder(1)
	Dbseek(xfilial("STL")+cVORDEM+cVPLANO)
	While !Eof() .And. STL->TL_FILIAL = Xfilial("STL") .And.;
	STL->TL_ORDEM == cVORDEM .And. STL->TL_PLANO == cVPLANO
		If Val(STL->TL_SEQRELA) == 0
			RecLock("STL",.F.)
			Dbdelete()
			MsUnlock("STL")
		EndIf
		Dbskip()
	End

	// DELETA O STQ

	DbSelectArea("STQ")
	DbSetOrder(1)
	Dbseek(xfilial("STQ")+cVORDEM+cVPLANO)
	While !Eof() .And. STQ->TQ_FILIAL = Xfilial("STQ") .And.;
	STQ->TQ_ORDEM == cVORDEM .And. STQ->TQ_PLANO == cVPLANO
		RecLock("STQ",.F.)
		Dbdelete()
		MsUnlock("STQ")
		Dbskip()
	End
Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450GSQ
Grava os insumos e etapas
@author Inacio Luiz Kolling
@since 16/01/2001
@version undefined
@param cBEMCOMP, characters
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450GSQ(cBEMCOMP)

	Local xx := 0

	DbSelectArea(cTRBL450)
	Dbseek(cBEMCOMP)
	While !Eof() .And. (cTRBL450)->TL_BEMCOMP == cBEMCOMP
		DbSelectArea("STL")
		RecLock("STL",.T.)
		DbSelectArea(cTRBL450)
		For XX := 1 to FCOUNT()
			ny := "STL->TL_"  + Substr(FieldName(XX),4,Len(FieldName(XX)))
			nx := (cTRBL450)+"->TL_" + Substr(FieldName(XX),4,Len(FieldName(XX)))
			If Alltrim(nx) == (cTRBL450)+"->TL_BEMCOMP" .Or. Alltrim(nx) == (cTRBL450)+"->TL_NOMECOD"
			Else
				&ny. := &nx.
			EndIf
		Next

		STL->TL_FILIAL  := xFilial("STL")
		STL->TL_ORDEM   := M->TJ_ORDEM
		STL->TL_PLANO   := cSTLPLANO

		If !lUSATARG
			STL->TL_TAREFA  := "0     "
		Endif
		MsUnlock("STL")

		DbSelectArea(cTRBL450)
		Dbskip()
	End

	// GERA AS ETAPAS

	DbSelectArea(cTRBQ450)
	Dbseek(cBEMCOMP)
	While !Eof() .And. (cTRBQ450)->TX_BEMCOMP == cBEMCOMP
		DbSelectArea("STQ")
		RecLock("STQ",.T.)
		DbSelectArea(cTRBQ450)
		For XX := 1 To Fcount()
			ny := "STQ->TQ_"  + Substr(FieldName(XX),4,Len(FieldName(XX)))
			nx := (cTRBQ450)+"->TX_" + Substr(FieldName(XX),4,Len(FieldName(XX)))
			If Alltrim(nx) == (cTRBQ450)+"->TX_BEMCOMP" .Or. Alltrim(nx) == (cTRBQ450)+"->TX_NOMETAP"
			Else
				&ny. := &nx.
			EndIf
		Next

		STQ->TQ_FILIAL := xFilial("STQ")
		STQ->TQ_ORDEM  := M->TJ_ORDEM
		STQ->TQ_PLANO  := cSTLPLANO

		If !lUSATARG
			STQ->TQ_TAREFA := "0     "
		Endif

		MsUnlock("STQ")

		DbSelectArea(cTRBQ450)
		Dbskip()
	End

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450MOS
Mostra o nome do servico
@author Inacio Luiz Kolling
@since 16/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450MOS()
	cNOMSER := Substr(ST4->T4_NOME,1,30)
Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450INV
Inverte marcacoes - Windows
@author Inacio Luiz Kolling
@since 04/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450INV()

	Local nREC450 := 0

	DbSelectArea(cTRBC450)
	nREC450 := Recno()
	DbGoTop()

	While !Eof()
		(cTRBC450)->TC_OK := IIF(!Empty(TC_OK) ," ",cMARCA)
		DbSkip()
	End
	DbSelectArea(cTRBL450)
	Zap
	DbSelectArea(cTRBQ450)
	Zap
	DbSelectArea(cTRBC450)
	DbGoTo(nREC450)
	lREFRESH := .T.

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450APA
Rotina de Inclusao de ETAPAS
@author Inacio Luiz Kolling
@since 09/02/2001
@version undefined
@param cAlias, characters
@param nReg, numeric
@param nOpcx, numeric
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450APA(cAlias,nReg,nOpcx)

	Local i := 0
	Local oMenu
	Local cETAOK

	Private aCHKDEL := {}
	Private aTELA[0][0],aGETS[0],aHeader[0],Continua,nUsado:=0
	Private cPxQSeq := Space(3)

	If Empty((cTRBC450)->TC_OK)
		Help(" ",1,"NGMNITESET") //"Nao Foi Marcado o Itens da Estrutura Para Gerar Etapas.."
		Return
	EndIf

	bCampo := {|nCPO| Field(nCPO) }
	NGSETIFARQUI("STQ","F",1)
	DbSelectArea("STQ")
	For i := 1 To FCount()
		M->&(EVAL(bCampo,i)) := &(EVAL(bCampo,i))
		If nOPCX == 3    //INCLUIR
			If ValType(M->&(EVAL(bCampo,i))) == "C"
				M->&(EVAL(bCampo,i)) := Space(Len(M->&(EVAL(bCampo,i))))
			Elseif ValType(M->&(EVAL(bCampo,i))) == "N"
				M->&(EVAL(bCampo,i)) := 0
			Elseif ValType(M->&(EVAL(bCampo,i))) == "D"
				M->&(EVAL(bCampo,i)) := cTod("  /  /  ")
			Elseif ValType(M->&(EVAL(bCampo,i))) == "L"
				M->&(EVAL(bCampo,i)) := .F.
			EndIf
		EndIf
	Next i

	aHEAETA := {}
	aGETETA := {}

	MNTA450ET(nOPCX)

	aHeader := aCLONE(aHEAETA)
	aCOLS   := aCLONE(aGETETA)
	cLINOK  := "NG420ETALI()"
	cTUDOOK := "NG420ETALI(.T.)"
	nOPCA   := 0

	nETAPA  := aSCAN(aHEADER,{|x| Trim(Upper(x[2]))    == "TQ_ETAPA" })
	nSEQETA := aSCAN(aHEADER,{|x| Trim(Upper(x[2]))    == "TQ_SEQETA" })
	nETAETA := aScan(aHEADER,{|x| Trim(upper(x[2]))    == "TQ_TAREFA"})
	nNOMTAR := aScan(aHEADER,{|x| Trim(upper(x[2]))    == "TQ_NOMTARE"})
	nSETETA := aSCAN(aHEADER,{|x| AllTrim(Upper(X[2])) == "TQ_SEQTARE" })

	Define MsDialog oDlg6 Title STR0075+(cTRBC450)->TC_BEMCOMP From 163,0 To 463,If(GetScreenRes()[1] <= 800,750,GetScreenRes()[1]*0.73) Pixel Of oMainWnd //"Etapas Para Bem/Componente  "
	oGet := MsGetDados():New(13,1,157,397,3,cLINOK,cTUDOOK,"",.T.,,,,300)
	oGet:oBrowse:SetFocus()
	NgPopUp(@AsMenu,@oMenu)
	oDlg6:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg6)}
	Activate MsDialog oDlg6 On Init (EnchoiceBar(oDlg6,{||nOpca:=1,If(oGet:TudoOk(),oDlg6:End(),nOpca:=0)},{||oDlg6:End()}),AlignObject(oDlg6,{oGet:oBrowse},1))

	If nOPCA == 1
		For I := 1 to Len(aCOLS)

			cChavSTQ := (cTRBC450)->TC_BEMCOMP+aCols[I][nSEQETA]+aCols[I][nETAPA]

			If lUSATARG .And. nSETETA <> 0
				cChavSTQ += aCols[I][nETAETA]+aCols[I][nSETETA]
			Endif

			DbSelectArea(cTRBQ450)
			Dbseek(cChavSTQ)
			If aCols[I][Len(aCols[I])]
				If Found()
					Reclock((cTRBQ450),.F.)
					Dbdelete()
					MsUnlock(cTRBQ450)
				EndIf
			Else
				If !Found()
					If lSEQTAR
						If Empty(aCols[I][nSETETA])
							cSEQTARE := If(FindFunction("Soma1Old"),PADR(Soma1Old(cPxQSeq),3),;
							PADR(Soma1(cPxQSeq),3))
							cPxQSeq := cSEQTARE
							aCols[I][nSETETA] := cPxQSeq
						Endif
					EndIf

					Reclock((cTRBQ450),.t.)
					(cTRBQ450)->TX_BEMCOMP := (cTRBC450)->TC_BEMCOMP
					(cTRBQ450)->TX_ETAPA   := aCols[I][nETAPA]
					(cTRBQ450)->TX_SEQETA  := aCols[I][nSEQETA]

					If lSEQTAR
						(cTRBQ450)->TX_TAREFA  := aCols[I][nETAETA]
						(cTRBQ450)->TX_SEQTARE := aCols[I][nSETETA]
					Endif

					MsUnlock(cTRBQ450)
				EndIf
			EndIf
		Next I
	EndIf

	DbSelectArea(cTRBC450)

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450ET
Rotina de Inclusao de ETAPAS
@author Inacio Luiz Kolling
@since 09/02/2001
@version undefined
@param nOPCX, numeric
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450ET(nOPCX)

	Local aNAO := {}, cKEY, cGETWHILE,ng

	cKEY       := (cTRBC450)->TC_BEMCOMP
	cGETWHILE  := "TX_BEMCOMP == (cTRBC450)->TC_BEMCOMP"

	aAdd(aNAO,"TQ_ORDEM")
	aAdd(aNAO,"TQ_PLANO")

	If !lSEQTAR
		aAdd(aNAO,"TQ_TAREFA")
		aAdd(aNAO,"TQ_NOMTARE")
		aAdd(aNAO,"TQ_SEQTARE")
	EndIf

	aAdd(aNAO,"TQ_TIPRES")
	aAdd(aNAO,"TQ_OPCAO")
	aAdd(aNAO,"TQ_NOMSITU")
	aAdd(aNAO,"TQ_OK")
	aAdd(aNAO,"TQ_TIPORES")
	aAdd(aNAO,"TQ_OPCAO")
	aAdd(aNAO,"TQ_CODFUNC")
	aAdd(aNAO,"TQ_OBSERVA")

	aHEAETA := CABECGETD("STQ", aNAO)

	//Inclui coluna de registro atraves de funcao generica
	ADHeadRec("STQ",aHEAETA)

	If nOPCX == 3
		aGETETA := BLANKGETD(aHeaEta)
	Else
		aGETETA := MAKEGETR((cTRBQ450), cKEY,aHeaEta, cGETWHILE,"TX")
		If Empty(aGETETA)
			aGETETA := BLANKGETD(aHeaEta)
		EndIf
	EndIf

	cOLDA := Alias()

	nETAPAI := aScan(aHeaEta,{|x| Trim(upper(x[2])) == "TQ_ETAPA"})
	nETAETI := aScan(aHeaEta,{|x| Trim(upper(x[2])) == "TQ_TAREFA"})
	nSETETI := aScan(aHeaEta,{|x| AllTrim(Upper(X[2])) == "TQ_SEQTARE" })
	nNOMETA := aScan(aHeaEta,{|x| Trim(Upper(x[2])) == "TQ_NOMETAP"})
	nNOMTAR := aScan(aHeaEta,{|x| Trim(Upper(x[2])) == "TQ_NOMTARE"})
	For NG := 1 To Len(aGETETA)
		If nNOMETA > 0
			aGetEta[nG][nNOMETA] := NGSEEK("TPA",aGetEta[ng,nETAPAI],1,"Substr(TPA->TPA_DESCRI,1,30)")
		EndIf
		If nNOMTAR > 0 .And. nETAETI > 0
			aGetEta[nG][nNOMTAR] := NGNOMETAR("",aGetEta[nG][nETAETI])
		EndIf
		If nSETETI > 0
			If NG = 1
				cPxQSeq := aGETETA[ng,nSETETI]
			Else
				If aGETETA[ng,nSETETI] > cPxQSeq
					cPxQSeq := aGETETA[ng,nSETETI]
				EndIf
			EndIf
		EndIf
	Next

	dbSelectArea(cOLDA)

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450FIM
Rotina que armazena as datas dos insumos
@author Inacio Luiz Kolling
@since 09/02/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450FIM()

	DbSelectArea(cTRBL450)
	Dbseek((cTRBC450)->TC_BEMCOMP)
	While !Eof()
		If (cTRBL450)->TL_TIPOREG == "P"
			Aadd(aDATINS, {dINI, hINI})
			DbSelectArea(cTRBL450)
			Dbskip()
			Loop
		EndIf

		cUNIDA := Alltrim((cTRBL450)->TL_UNIDADE)

		If cUNIDA == "D"
			dFIM := dINI + (cTRBL450)->TL_QUANTID
		ElseIf cUNIDA == "S"
			dFIM := dINI + ((cTRBL450)->TL_QUANTID * 7)
		ElseIf cUNIDA == "M"
			nAno := Year(dINI)
			nMES := Month(dINI)
			nDIA := Day(dINI)

			nMES := nMES + (cTRBL450)->TL_QUANTID

			While nMES > 12
				nMES := nMES - 12
				nANO := nANO + 01
			End

			nDIA := Strzero(nDIA,2)
			nMES := Strzero(nMES,2)
			nANO := Alltrim( Strzero(nANO,4) )
			dFIM := CtoD(nDIA + "/" + nMES + "/" + nANO)

			While Empty(dFIM)
				nDIA := Val(nDIA)-1
				nDIA := Strzero(nDIA,2)
				dFIM := CtoD(nDIA + "/" + nMES + "/" + nANO)
			End
		Else
			If (cTRBL450)->TL_USACALE = "S"
				vDTAHOR := NGDTHORFCALE((cTRBL450)->TL_DTINICI,(cTRBL450)->TL_HOINICI,;
				(cTRBL450)->TL_QUANTID,NGSEEK("ST1",SubStr((cTRBL450)->TL_CODIGO,1,6),1,"T1_TURNO"))
			Else
				vDTAHOR := NGDTHORFIM((cTRBL450)->TL_DTINICI,(cTRBL450)->TL_HOINICI,(cTRBL450)->TL_QUANTID)
			Endif
			dFIM := vDTAHOR[1]
			hFIM := vDTAHOR[2]
		EndIf

		Aadd(aDATINS, {dFIM, hFIM} )

		DbSelectArea(cTRBL450)
		(cTRBL450)->TL_DTFIM := dFIM
		(cTRBL450)->TL_HOFIM := hFIM
		Dbskip()
	End

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450R
Programa O.S. Pai e Filhos
@author Inacio Luiz Kolling
@since 13/02/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450R()

	Local aROTOLD := ACLONE(aROTINA), cOLDCADO := cCadastro
	Local lRet 	  := .T.

	Private cORDEMPAI  := (cTRBJ450)->TJ_ORDEM
	Private cBemAl     := (cTRBJ450)->TJ_CODBEM // Utilizado MNTA420
	Private lTLTTIPINS := .T.
	Private aRotina := {{STR0001 , "AxPesqui"     ,  0 , 1},; //"Pesquisar"
						{STR0002 , "NGCAD01"      ,  0 , 2},; //"Visualizar"
						{STR0004 , "MNTA450A(4)"  ,  0 , 4, 0},; //"Alterar"
						{STR0005 , "MNTA450A(5)"  ,  0 , 5, 3}} //"Cancelar"

	If !MNTA450VOS()
		lRet := .F.
	EndIf

	If lRet
		DbSelectArea("ST9")
		DbSetOrder(1)
		Dbseek(XFILIAL("ST9")+(cTRBJ450)->TJ_BEMPAI)

		cCOMPLEM  := STR0076 + Alltrim((cTRBJ450)->TJ_BEMPAI)+" - "+ Alltrim(Substr(ST9->T9_NOME,1,30)) //" - Bem Pai "
		cCadastro := OemtoAnsi(cCadastro + cCOMPLEM)
		aPos1     := {15,1,95,315 }
		aAROSPAI  := {}

		DbSelectArea("STJ")
		Set Filter To
		Dbgotop()

		DbSetOrder(11)
		Dbseek(XFILIAL("STJ")+cORDEMPAI)
		While !Eof() .And. stj->tj_filial = Xfilial("STJ") .And.;
		stj->tj_ordepai == cORDEMPAI
			If STJ->TJ_SITUACA == "P" .And. STJ->TJ_TERMINO == "N"
				Aadd(aAROSPAI,{STJ->TJ_ORDEPAI,STJ->TJ_ORDEM,})
			EndIf
			Dbskip()
		End

		DbSelectArea( "STJ" )
		Set Filter To TJ_FILIAL == xFilial("STJ") .And. TJ_SITUACA == "P" .And. TJ_TERMINO == "N";
		.And. TJ_ORDEPAI == cORDEMPAI
		Dbgotop()
		aFIELD := {{STR0036 ,{|| STJ->TJ_ORDEM                                   }, "@!"},;      //"Ordem"
				{STR0012 ,{|| STJ->TJ_CODBEM                                  }, "@!"},;      //"Bem"
				{STR0013 ,{|| ST9->(BSEEK(STJ->TJ_CODBEM,"Left(T9_NOME,30)")) }, "@!"},;      //"Nome do Bem"
				{STR0014 ,{|| STJ->TJ_SERVICO                                 }, "@!"},;      //"Servico"
				{STR0015 ,{|| ST4->(BSEEK(STJ->TJ_SERVICO,"Left(T4_NOME,30)"))}, "@!"},;      //"Nome do Servico"
				{STR0016 ,{|| ST4->(BSEEK(STJ->TJ_SERVICO,"Left(T4_NOME,30)"))}, "@!"},;      //"Sequencia"
				{STR0017 ,{|| STJ->TJ_DTORIGI                                 },"99/99/99"},; //"Dt.Origem"
				{STR0077 ,{|| STJ->TJ_DTMPINI                                 },"99/99/99"}}  //"Dt.Man.Pr.I"

		mBrowse(6,1,22,75,"STJ",aField,,2)

		DbSelectArea("STJ")
		Set Filter To

		cCadastro := cOLDCADO
		aRotina   := ACLONE(aROTOLD)
		DbSelectArea(cTRBJ450)
	EndIf	

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450A
Programa Alteracao/Exclusao de O.S.
@author Inacio Luiz Kolling
@since 13/02/2001
@version undefined
@param nROT, numeric
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450A(nROT)

	Local cALISOLDE := alias()
	Local nINDIOLDE := Indexord()
	Local aOLDROT 	:= ACLONE(aRotina)
	Local cORDEMPAI := (cTRBJ450)->TJ_ORDEM

	Private nOpcas  := 0

	//Verifica se Gera Solicit. ao Armazem em vez de Solic. Compras
	Private lGeraSA := .F.
	Private aRetSA :={}
	If NGCADICBASE('TL_NUMSA','A','STL',.F.) .And. FindFunction("NGGERASA")
		If GetNewPar("MV_NGGERSA","N") == "S" .And. cUsaIntEs == "S"
			lGeraSA := .T.
		EndIf
	EndIf

	// CRIADA PARA ENGANAR NA FUNCAO NG420INC QUE E USADO
	// OBS Private aRotina nao devera ser deletada

	Private aRotina := {{STR0001 , "AxPesqui"  ,  0 , 1}  ,;  //"Pesquisar"
						{STR0002 , "NGCAD01"   ,  0 , 2}  ,;  //"Visualizar"
						{STR0003 , "NG420INC"  ,  0 , 3}  ,;  //"Incluir"
						{STR0004 , "NG420INC"  ,  0 , 4, 0},; //"Alterar"
						{STR0005 , "NG420INC"  ,  0 , 5, 3}}  //"Cancelar"
	lINCLUI := INCLUI

	If nROT = 5
		If STJ->TJ_ORDEPAI == aAROSPAI[1][1] .And.;
		STJ->TJ_ORDEM == aAROSPAI[1][2] .And. Len(aAROSPAI) > 1
			Help(" ",1,"NGMREPAISO") //"O.S. De Reforma Pai"###" Somente Podera Ser Excluidas"
			//"Quando Nao Tiver Mais O.S. de Reforma Relacionadas ( O.S. dos Filhos )"###"ATENCAO"
			Return
		EndIf
	Else
		// USADO NA FUNCAO CHEKCOD DO STL - SX3
		INCLUI := .T.
	EndIf

	nOSRECNE := Recno()

	// ESTA FUNCAO ESTµ NO MNTA420
	NG420INC("STJ",Recno(),nROT)

	If nROT = 5
		DbSelectArea("STJ")
		Dbgoto(nOSRECNE)

		If STJ->TJ_SITUACA == "C"
			If STJ->TJ_ORDEPAI == aAROSPAI[1][1] .And.;
			STJ->TJ_ORDEM   == aAROSPAI[1][2] .And. Len(aAROSPAI) == 1
				DbSelectArea(cTRBJ450)
				RecLock(cTRBJ450,.F.)
				Dbdelete()
				MsUnLock(cTRBJ450)
				Dbgotop()
			EndIf
		EndIf
	EndIf

	INCLUI  := lINCLUI
	aRotina := ACLONE(aOLDROT)

	DbSelectArea(cALISOLDE)
	DbSetOrder(nINDIOLDE)

	DbSelectArea("STJ")
	Set Filter To
	DbGotop()
	Set Filter To TJ_FILIAL == xFilial("STJ") .And. TJ_SITUACA == "P" .And. TJ_TERMINO == "N";
	.And. TJ_ORDEPAI == cORDEMPAI

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450TOT
Calcula o custo da O.S.
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450TOT()

	Local nRECNOTRBC := 0
	Local oMenu

	Local aCstMoeda := {}
	Local cMoedaCst  := "1"

	// Multi-Moeda
	Local cDesMoeda := SubStr( GetNewPar("MV_MOEDA1",STR0131), 1, 10 ) // Retorna o nome da moeda, conforme parametro repassado

	dbSelectArea(cTRBC450)
	nRECNOTRBC := Recno()

	dbSelectArea(cTRBY450)
	Zap

	nPRETOT := 0.00

	dbSelectArea(cTRBC450)
	dbGoTop()
	While !Eof()
		dbSelectArea(cTRBL450)
		If dbSeek((cTRBC450)->TC_BEMCOMP)
			While !Eof() .And. (cTRBL450)->TL_BEMCOMP == (cTRBC450)->TC_BEMCOMP

				If Empty((cTRBL450)->tl_custo)
					If lMMoeda .And. FindFunction("NGCALCUSMD")
						aCstMoeda := NGCALCUSMD((cTRBL450)->tl_codigo,(cTRBL450)->tl_tiporeg,;
						(cTRBL450)->tl_quantid,(cTRBL450)->tl_local,(cTRBL450)->tl_tipohor,,,(cTRBL450)->tl_quanrec)
						nCUSTO    := aCstMoeda[1]
						cMoedaCst := aCstMoeda[2]
					Else
						nCUSTO := NGCALCUSTI((cTRBL450)->tl_codigo,(cTRBL450)->tl_tiporeg,;
						(cTRBL450)->tl_quantid,(cTRBL450)->tl_local,(cTRBL450)->tl_tipohor,,,(cTRBL450)->tl_quanrec)
						If lMMoeda
							cMoedaCst := "1"
						EndIf
					EndIf
				Else
					nCUSTO := (cTRBL450)->tl_custo
					If lMMoeda
						cMoedaCst := (cTRBL450)->TL_MOEDA
					EndIf
				EndIf

				nPRETOT  := nPRETOT + If(lMMoeda,xMoeda(nCUSTO,Val(cMoedaCst),1,(cTRBL450)->TL_DTINICI,TAMSX3("TL_CUSTO")[2]),nCUSTO)
				aCARRAY  := NGNOMINSUM((cTRBL450)->TL_TIPOREG,(cTRBL450)->TL_CODIGO,30)
				cNOMEINS := Substr(aCARRAY[1][1],1,13)

				dbSelectArea(cTRBY450)
				If !dbSeek((cTRBC450)->TC_BEMCOMP+cNOMEINS+(cTRBL450)->TL_CODIGO)
					Reclock(cTRBY450, .T.)
					(cTRBY450)->TL_BEMCOMP := (cTRBC450)->TC_BEMCOMP
					(cTRBY450)->TL_TIPOREG := (cTRBL450)->TL_TIPOREG
					(cTRBY450)->TL_NOMTIP  := cNOMEINS
					(cTRBY450)->TL_TAREFA  := (cTRBL450)->TL_TAREFA
					(cTRBY450)->TL_CODIGO  := (cTRBL450)->TL_CODIGO
					(cTRBY450)->TL_NOME    := aCARRAY[1][2]
					(cTRBY450)->TL_SEQRELA := (cTRBL450)->TL_SEQRELA
					(cTRBY450)->TL_QUANTID := (cTRBL450)->TL_QUANTID
					(cTRBY450)->TL_UNIDADE := (cTRBL450)->TL_UNIDADE
					(cTRBY450)->TL_DTINICI := (cTRBL450)->TL_DTINICI
					(cTRBY450)->TL_DTFIM   := (cTRBL450)->TL_DTFIM
					(cTRBY450)->TL_CUSTO   := nCUSTO
					If lMMoeda
						(cTRBY450)->TL_MOEDA := cMoedaCst
					EndIf
					MsUnlock(cTRBY450)
				EndIf

				dbSelectArea(cTRBL450)
				dbskip()
			End
		EndIf

		dbSelectArea(cTRBC450)
		dbSkip()
	End

	dbSelectArea(cTRBY450)
	dbGoTop()

	If RecCount() == 0
		Help(' ',1,STR0031,,STR0134,2,0,,,,,,{STR0135}) //"ATENCAO"##
								//#"Não há insumo Previsto para calcular o Custo Total da ordem de reforma."
								//#"Inclua um insumo para que seja atribuído um valor de Custo Total para Ordem de Reforma"
		dbSelectArea(cTRBC450)
		dbGoTo(nRECNOTRBC)
		Return
	EndIf

	Define MsDialog odlg5 Title STR0081 From 9,0 To 30,98 Of oMainWnd //"Custo Total da Ordem de Reforma"

	@ 16,001 Button STR0057   Of odlg5 Size 40,12 Pixel Action (MNTA450TOI()) //"&Imprimir"

	@ 02.2,00 Listbox Fields TL_BEMCOMP                                     ,;
							TL_NOMTIP                                      ,;
							TL_CODIGO                                      ,;
							TL_NOME                                        ,;
							PADL(Transform(TL_QUANTID,"@E 99,999.99"),9)   ,;
							TL_UNIDADE                                     ,;
							PADL(Transform(TL_CUSTO,"@E 9,999,999.99"),12) ,;
							DTOC(TL_DTINICI)                               ,;
							DTOC(TL_DTFIM)                                  ;
						FieldSizes 60,50,50,100,40,15,70,40,40              ;
						Size 385,95                                         ;
						HEADERS  STR0082                                   ,; //"Componente"
								STR0058                                   ,; //"Tipo"
								STR0059                                   ,; //"Codigo"
								STR0060                                   ,; //"Nome"
								STR0061                                   ,; //"Quantidade"
								STR0062                                   ,; //"Und"
								STR0063                                   ,; //"Custo Previsto"
								STR0064                                   ,; //"Dt Inicio"
								STR0065                                       //"Dt Fim"

	@ 135,200 Say STR0083 + "  (" + cDesMoeda + ")" Size 140,15 OF odlg5  Pixel //"CUSTO TOTAL O.S. DE REFORMA..:"
	@ 135,325 Say nPRETOT Picture "@E 99,999,999.99" Size 75,15 OF odlg5  Pixel

	NgPopUp(@AsMenu,@oMenu)
	oDlg5:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg5)}
	Activate MsDialog odlg5 On Init EnchoiceBar(odlg5,{||nopins:=1,odlg5:End()},{||odlg5:End()})

	dbSelectArea(cTRBC450)
	dbGoTo(nRECNOTRBC)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450MOI
Mostra os Insumos Alterados
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450MOI()

	Local oMenu

	dbSelectArea("ST9")
	dbSetOrder(1)
	dbSeek(xFilial("ST9")+(cTRBC450)->TC_BEMCOMP)

	dbSelectArea(cTRBL450)
	If dbSeek((cTRBC450)->TC_OK)
		MSGINFO(STR0084+chr(13)+chr(13); //"Nao Foram Feitas Modificaoes Nos Insumos Para o"
		+ STR0085+Alltrim((cTRBC450)->TC_BEMCOMP)+" - "+Substr(ST9->T9_NOME,1,30),STR0031) //"Componente "###"ATENCAO"
		DbSelectArea(cTRBC450)
		Return
	EndIf

	MNTA450CST((cTRBC450)->TC_ORDEM,(cTRBC450)->TC_PLANO,(cTRBC450)->TC_BEMCOMP)

	dbSelectArea(cTRBI450)
	dbGoTop()
	If RECCOUNT() == 0
		MSGINFO(STR0084+chr(13)+chr(13); //"Nao Foram Feitas Modificaoes Nos Insumos Para o"
		+ STR0085+Alltrim((cTRBC450)->TC_BEMCOMP)+" - "+Substr(ST9->T9_NOME,1,30),STR0031) //"Componente "###"ATENCAO"
		DbSelectArea(cTRBC450)
		Return
	EndIf

	Define MsDialog odlg7 Title STR0086+Alltrim((cTRBC450)->TC_BEMCOMP)+; //"Insumos do Componente "
	" - "+Substr(ST9->T9_NOME,1,30) From 9,0 To 34.2,120 Of oMainWnd

	@ 034,007 Say STR0087 Size 80,15  Of odlg7  Pixel //"PREVISTO INICIAL"
	@ 034,232 Say STR0088 Size 130,15 Of odlg7  Pixel //"PREVISTO INICIAL E/OU MODIFICADOS"

	@ 03.1,01 Listbox Fields (cTRBI450)->TL_TIPOREG         ,;
	(cTRBI450)->TL_TAREFA                                   ,;
	(cTRBI450)->TL_CODIGO                                   ,;
	PADL(Transform((cTRBI450)->TL_QUANTID,"@E 99,999.99"),9),;
	(cTRBI450)->TL_UNIDADE                                  ,;
	DTOC((cTRBI450)->TL_DTINICI)                            ,;
	DTOC((cTRBI450)->TL_DTFIM)                               ;
	FieldSizes 10,20,50,40,15,40,40                  ;
	Size 225,140                                     ;
	HEADERS  STR0058                                ,; //"Tipo"
	STR0089                                ,; //"Tarefa"
	STR0059                                ,; //"Codigo"
	STR0061                                ,; //"Quantidade"
	STR0062                                ,; //"Und"
	STR0064                                ,; //"Dt Inicio"
	STR0065                                   //"Dt Fim"

	@ 03.1,29 Listbox FIELDS (cTRBI450)->TR_TIPOREG         ,;
	(cTRBI450)->TR_TAREFA                                   ,;
	(cTRBI450)->TR_CODIGO                                   ,;
	PADL(Transform((cTRBI450)->TR_QUANTID,"@E 99,999.99"),9),;
	(cTRBI450)->TR_UNIDADE                                  ,;
	DTOC((cTRBI450)->TR_DTINICI)                            ,;
	DTOC((cTRBI450)->TR_DTFIM)                               ;
	FieldSizes 10,20,50,40,15,40,40                  ;
	Size 238,140                                     ;
	HEADERS  STR0058                                ,; //"Tipo"
	STR0089                                ,; //"Tarefa"
	STR0059                                ,; //"Codigo"
	STR0061                                ,; //"Quantidade"
	STR0062                                ,; //"Und"
	STR0064                                ,; //"Dt Inicio"
	STR0065                                   //"Dt Fim"

	NgPopUp(@AsMenu,@oMenu)
	oDlg7:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg7)}
	Activate MsDialog odlg7 On Init EnchoiceBar(odlg7,{||nopins:=1,odlg7:End()},{||odlg7:End()})

	dbSelectArea(cTRBC450)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450CST
Monta o arquivo temporarios com os insumos ( STL - cTRBL )
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@param cXORDEM, characters
@param cXPLANO, characters
@param cXBEMCOMP, characters
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450CST(cXORDEM,cXPLANO,cXBEMCOMP)

	// LE O STL DA BASE

	DbSelectArea(cTRBI450)
	Zap

	DbSelectArea("STL")
	DbSetOrder(1)
	Dbseek(xFilial("STL")+cXORDEM+cXPLANO)
	While !Eof() .And. STL->TL_FILIAL = Xfilial("STL") .And.;
	STL->TL_ORDEM == cXORDEM .And. STL->TL_PLANO == cXPLANO
		If Val(STL->TL_SEQRELA) == 0
			DbSelectArea(cTRBI450)
			If !Dbseek(STL->TL_TIPOREG+STL->TL_CODIGO)
				Reclock((cTRBI450), .T.)
				(cTRBI450)->TL_TIPOREG := STL->TL_TIPOREG
				(cTRBI450)->TL_TAREFA  := STL->TL_TAREFA
				(cTRBI450)->TL_CODIGO  := STL->TL_CODIGO
				(cTRBI450)->TL_QUANTID := STL->TL_QUANTID
				(cTRBI450)->TL_UNIDADE := STL->TL_UNIDADE
				(cTRBI450)->TL_DTINICI := STL->TL_DTINICI
				(cTRBI450)->TL_DTFIM   := STL->TL_DTFIM
				MsUnlock(cTRBI450)
			EndIf
		EndIf
		DbSelectArea("STL")
		Dbskip()
	End

	// CARREGA O TRBL

	DbSelectArea(cTRBL450)
	Dbseek(cXBEMCOMP)

	While !Eof() .And. (cTRBL450)->TL_BEMCOMP == cXBEMCOMP
		DbSelectArea(cTRBI450)
		If !Dbseek((cTRBL450)->TL_TIPOREG+(cTRBL450)->TL_CODIGO)
			Reclock((cTRBI450), .T.)
		Else
			Reclock((cTRBI450), .f.)
		EndIf
		(cTRBI450)->TR_TIPOREG := (cTRBL450)->TL_TIPOREG
		(cTRBI450)->TR_TAREFA  := (cTRBL450)->TL_TAREFA
		(cTRBI450)->TR_CODIGO  := (cTRBL450)->TL_CODIGO
		(cTRBI450)->TR_QUANTID := (cTRBL450)->TL_QUANTID
		(cTRBI450)->TR_UNIDADE := (cTRBL450)->TL_UNIDADE
		(cTRBI450)->TR_DTINICI := (cTRBL450)->TL_DTINICI
		(cTRBI450)->TR_DTFIM   := (cTRBL450)->TL_DTFIM
		MsUnlock(cTRBI450)

		DbSelectArea(cTRBL450)
		Dbskip()
	End

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450MOE
Mostra as Etapas Alteradas
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450MOE()

	Local oMenu

	dbSelectArea("ST9")
	dbSetOrder(1)
	dbseek(xFilial("ST9")+(cTRBC450)->TC_BEMCOMP)
	dbSelectArea(cTRBX450)
	If dbSeek((cTRBC450)->TC_OK)
		MSGINFO(STR0090+chr(13)+chr(13); //"Não foram feitas modificações nas etapas para o"
		+ STR0085+Alltrim((cTRBC450)->TC_BEMCOMP)+" - "+Substr(ST9->T9_NOME,1,30),STR0031) //"Componente "###"Atenção"
		dbSelectArea(cTRBC450)
		Return
	EndIf

	MNTA450CSQ((cTRBC450)->TC_ORDEM,(cTRBC450)->TC_PLANO,(cTRBC450)->TC_BEMCOMP)

	dbSelectArea(cTRBE450)
	dbGotop()
	If RecCount() = 0
		MSGINFO(STR0090+chr(13)+chr(13); //"Não foram feitas modificações nas etapas para o"
		+ STR0085+Alltrim((cTRBC450)->TC_BEMCOMP)+" - "+Substr(ST9->T9_NOME,1,30),STR0031) //"Componente "###"Atenção"
		DbSelectArea(cTRBC450)
		Return
	EndIf

	Define MsDialog odlg8 Title STR0091+Alltrim((cTRBC450)->TC_BEMCOMP)+; //"Etapas do Componente "
	" - "+Substr(ST9->T9_NOME,1,30) From 9,0 To 32,94 Of oMainWnd

	@ 036,009 Say STR0087 Size 80,15  Of odlg8  Pixel //"PREVISTO INICIAL"
	@ 036,189 Say STR0088 Size 100,15 Of odlg8  Pixel //"PREVISTO INICIAL E/OU MODIFICADOS"

	@ 03.2,01 Listbox Fields TQ_ETAPA     ,;
	TQ_NOMETA     ;
	FieldSizes 20,140  ;
	Size 180,120       ;
	HEADERS  STR0092  ,; //"Etapa"
	STR0093     //"Nome da Etapa"

	@ 03.2,23.5 Listbox Fields TY_ETAPA     ,;
	TY_NOMETA     ;
	FieldSizes 20,140  ;
	Size 180.5,120       ;
	HEADERS  STR0092  ,; //"Etapa"
	STR0093     //"Nome da Etapa"

	NgPopUp(@AsMenu,@oMenu)
	oDlg8:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg8)}
	Activate MsDialog odlg8 On Init EnchoiceBar(odlg8,{||nopins:=1,odlg8:End()},{||odlg8:End()})

	dbSelectArea(cTRBC450)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450CSQ
Monta o arquivo temporarios com os insumos ( STQ - cTRBQ )
@author Inacio Luiz Kolling
@since 12/07/2001
@version undefined
@param cXORDEM, characters
@param cXPLANO, characters
@param cXBEMCOMP, characters
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450CSQ(cXORDEM,cXPLANO,cXBEMCOMP)
	// LE O STQ DA BASE

	DbSelectArea(cTRBE450)
	Zap

	DbSelectArea("STQ")
	dbSetOrder(1)
	Dbseek(xFilial("STQ")+cXORDEM+cXPLANO)
	While !Eof() .And. STQ->TQ_FILIAL = Xfilial("STQ") .And.;
	STQ->TQ_ORDEM == cXORDEM .And. STQ->TQ_PLANO == cXPLANO
		DbSelectArea(cTRBE450)
		If !Dbseek(STQ->TQ_ETAPA)
			Reclock(cTRBE450, .T.)
			(cTRBE450)->TQ_ETAPA  := STQ->TQ_ETAPA
			(cTRBE450)->TQ_NOMETA := NGSEEK('TPA',STQ->TQ_ETAPA,1,"TPA_DESCRI")
			MsUnlock(cTRBE450)
		EndIf

		DbSelectArea("STQ")
		Dbskip()
	End

	// CARREGA O TRBL

	DbSelectArea(cTRBQ450)
	Dbseek(cXBEMCOMP)
	While !Eof() .And. (cTRBQ450)->TX_BEMCOMP == cXBEMCOMP
		DbSelectArea(cTRBE450)
		If !Dbseek((cTRBQ450)->TX_ETAPA)
			Reclock(cTRBE450, .T.)
		Else
			Reclock(cTRBE450, .f.)
		EndIf
		(cTRBE450)->TY_ETAPA  := (cTRBQ450)->TX_ETAPA
		(cTRBE450)->TY_NOMETA := NGSEEK('TPA',(cTRBQ450)->TX_ETAPA,1,"TPA_DESCRI")
		MsUnlock(cTRBE450)

		DbSelectArea(cTRBQ450)
		Dbskip()
	End

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450CIM
Impressao Do Custo da Ordem de Servico
@author Inacio Luiz Kolling
@since 17/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450CIM()

	Local cALICIM := Alias()
	Dbselectarea(cALICIM)
	nTRBACIM := RECNO()
	cString  := "ST9"
	cdesc1   := STR0094 //"Relatorio de Custo Previsto do Componente da Ordem de Reforma"
	cdesc2   := " "
	cdesc3   := " "
	wnrel    := "MNTA450"
	aReturn  := { STR0095,1,STR0096, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
	nLastKey := 0
	Tamanho  := "G"
	nomeprog := "MNTA450"
	Titulo   := cdesc1

	//+-------------------------------------------------------------------+
	//| Envia controle para a funcao SETPRINT                        	  |
	//+-------------------------------------------------------------------+
	wnrel:=SetPrint(cString,wnrel,,titulo,cDesc1,cDesc2,cDesc3,.F.,"")
	If nLastKey == 27
		Set Filter To
		Return
	EndIf

	SetDefault(aReturn,cString)
	RptStatus({|lEnd| MNTA450CRE(@lEnd,wnRel,titulo,tamanho)},titulo)
	Dbselectarea(cALICIM)
	Dbgoto(nTRBACIM)

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450CRE
Chamada do Relat¢rio De Custo da Ordem de Servico
@author Inacio Luiz Kolling
@since 17/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450CRE()

	cRodaTxt := ""
	nCntImpr := 0
	li       := 80
	m_pag    := 1
	CABEC1   := STR0097 //"Tipo           Codigo          Descricao                         Quantid.  Und  Dt.inic.  Dt. Fim   Custo Previsto"
	CABEC2   := " "
	nTipo    := IIF(aReturn[4]==1,15,18)

	/*
	************************************************************************************************************************************
	*<empresa>                                                                                                        Folha..: xxxxx   *
	*SIGA /<nome .04                                 <     titulo do relatorio    >                                   DT.Ref.: dd/mm/aa*
	*Hora...: xx:xx:xx                                                                                                Emissao: dd/mm/aa*
	************************************************************************************************************************************
	012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	1         2         3         4         5         6         7         8         9         0         1         2         3
	************************************************************************************************************************************
	Tipo           Codigo          Descricao                         Quantid.  Und  Dt.inic.  Dt. Fim   Custo Previsto
	************************************************************************************************************************************
	Ordem..: XXXXXX   Plano..: XXXXXX
	XXXXXXXXXXXXX  XXXXXXXXXXXXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   99.999,99  XXX  99/99/99  99/99/99   99.999.999,99
	--------------
	CUSTO TOTAL DA ORDEM..:   999.999.999,99
	*/
	DbSelectArea(cTRBC450)
	nTRBAREC := Recno()
	DbSelectArea(cTRBX450)
	Dbgotop()
	SetRegua(LastRec())
	lPRIN := .T.

	While !Eof()

		IncRegua()
		If lPRIN
			NGSOMALI(58)
			@li,000 Psay STR0098+Alltrim((cTRBC450)->TC_BEMCOMP) +" - "+(cTRBC450)->TC_NOMCOMP //"Componente..: "
			NGSOMALI(58)
			lPRIN := .F.
		EndIf
		NGSOMALI(58)

		@li,000 Psay (cTRBX450)->TL_NOMTIP  Picture "@!"
		@li,015 Psay (cTRBX450)->TL_CODIGO  Picture "@!"
		@li,046 Psay (cTRBX450)->TL_NOME    Picture "@!"
		@li,079 Psay (cTRBX450)->TL_QUANTID Picture "@E 99,999.99"
		@li,090 Psay (cTRBX450)->TL_UNIDADE Picture "@!"
		@li,095 Psay (cTRBX450)->TL_DTINICI Picture "99/99/99"
		@li,107 Psay (cTRBX450)->TL_DTFIM   Picture "99/99/99"
		@li,123 Psay (cTRBX450)->TL_CUSTO   Picture "@E 9,999,999.99"
		DbSelectArea(cTRBX450)
		Dbskip()
	End

	If nPRE > 0
		NGSOMALI(58)
		@li,105 Psay "-----------"
		NGSOMALI(58)
		@li,064 Psay STR0100 //"CUSTO TOTAL DO COMPONENTE..:"
		@li,100 Psay nPRE Picture "@E 999,999,999.99"
	EndIf

	DbSelectArea(cTRBC450)
	Dbgoto(nTRBAREC)

	Eject
	RetIndex("ST9")
	Set Filter To

	Set device to Screen
	If aReturn[5] == 1
		Set Printer To
		dbCommitAll()
		OurSpool(wnrel)
	EndIf

	MS_FLUSH()

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450TOI
Impressao Do Custo Total da Ordem de Reforma
@author Inacio Luiz Kolling
@since 17/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450TOI()

	Local cALITOI := Alias()

	DbSelectArea(cTRBC450)
	nTRBAREC := Recno()
	cString  := "ST9"
	cdesc1   := STR0101 //"Relatorio de Custo Total Previsto da Ordem de Reforma"
	cdesc2   := " "
	cdesc3   := " "
	wnrel    := "MNTA450"
	aReturn  := { STR0095,1,STR0096, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
	nLastKey := 0
	Tamanho  := "M"
	nomeprog := "MNTA450"
	Titulo   := cdesc1

	//+-------------------------------------------------------------------+
	//| Envia controle para a funcao SETPRINT                        	  |
	//+-------------------------------------------------------------------+

	wnrel:=SetPrint(cString,wnrel,,titulo,cDesc1,cDesc2,cDesc3,.F.,"")
	If nLastKey == 27
		Set Filter To
		Return
	EndIf

	SetDefault(aReturn,cString)

	RptStatus({|lEnd| MNTA450TOE(@lEnd,wnRel,titulo,tamanho)},titulo)
	DbSelectArea(cTRBC450)
	DbGoto(nTRBAREC)
	Dbselectarea(cALITOI)

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450TOE
Chamada do Relat¢rio De Custo da Total Ordem de Reforma
@author Inacio Luiz Kolling
@since 17/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450TOE

	cRodaTxt := ""
	nCntImpr := 0
	li       := 80
	m_pag    := 1
	CABEC1   := STR0097 //"Tipo           Codigo          Descricao                         Quantid.  Und  Dt.inic.  Dt. Fim   Custo Previsto"
	CABEC2   := " "
	nTipo    := IIF(aReturn[4]==1,15,18)

	/*
	************************************************************************************************************************************
	*<empresa>                                                                                                        Folha..: xxxxx   *
	*SIGA /<nome .04                                 <     titulo do relatorio    >                                   DT.Ref.: dd/mm/aa*
	*Hora...: xx:xx:xx                                                                                                Emissao: dd/mm/aa*
	************************************************************************************************************************************
	012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	1         2         3         4         5         6         7         8         9         0         1         2         3
	************************************************************************************************************************************
	Tipo           Codigo          Descricao                         Quantid.  Und  Dt.inic.  Dt. Fim   Custo Previsto
	************************************************************************************************************************************
	Componente...: XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	XXXXXXXXXXXXX  XXXXXXXXXXXXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   99.999,99  XXX  99/99/99  99/99/99   99.999.999,99
	--------------
	CUSTO TOTAL DO COMPONENTE..: 999.999.999,99

	CUSTO TOTAL DA O.S. REFORMA..: 99.999.999.999,99
	*/

	DbSelectArea(cTRBY450)
	nTRBYREC := Recno()
	Dbgotop()
	SetRegua(LastRec())
	While !Eof()

		cCOMPONEN := (cTRBY450)->TL_BEMCOMP
		NGSOMALI(58)
		@li,000 Psay STR0098+Alltrim((cTRBY450)->TL_BEMCOMP) +" - "+NGSEEK('ST9',(cTRBY450)->TL_BEMCOMP,1,"T9_NOME") //"Componente..: "
		NGSOMALI(58)

		nCOMPON := 0.0
		DbSelectArea(cTRBY450)
		While !Eof() .And. (cTRBY450)->TL_BEMCOMP == cCOMPONEN

			IncRegua()
			NGSOMALI(58)
			nCOMPON := nCOMPON + (cTRBY450)->TL_CUSTO

			@li,000 Psay (cTRBY450)->TL_NOMTIP  Picture "@!"
			@li,015 Psay (cTRBY450)->TL_CODIGO  Picture "@!"
			@li,031 Psay (cTRBY450)->TL_NOME    Picture "@!"
			@li,064 Psay (cTRBY450)->TL_QUANTID Picture "@E 99,999.99"
			@li,075 Psay (cTRBY450)->TL_UNIDADE Picture "@!"
			@li,080 Psay (cTRBY450)->TL_DTINICI Picture "99/99/99"
			@li,092 Psay (cTRBY450)->TL_DTFIM   Picture "99/99/99"
			@li,104 Psay (cTRBY450)->TL_CUSTO   Picture "@E 9,999,999.99"
			DbSelectArea(cTRBY450)
			Dbskip()
		End

		If nCOMPON > 0
			NGSOMALI(58)
			@li,105 Psay "-----------"
			NGSOMALI(58)
			@li,064 Psay STR0100 //"CUSTO TOTAL DO COMPONENTE..:"
			@li,102 Psay nCOMPON Picture "@E 999,999,999.99"
			NGSOMALI(58)
			@li,000 Psay Replicate("-",132)
		EndIf
	End
	If nPRETOT > 0
		NGSOMALI(58)
		NGSOMALI(58)
		@li,062 Psay STR0102 //"CUSTO TOTAL DA O.S. REFORMA..:"
		@li,099 Psay nPRETOT Picture "@E 99,999,999,999.99"
	EndIf

	DbSelectArea(cTRBY450)
	Dbgoto(nTRBYREC)
	DbSelectArea(cTRBL450)

	Eject
	RetIndex("ST9")
	Set Filter To

	Set device to Screen
	If aReturn[5] == 1
		Set Printer To
		dbCommitAll()
		OurSpool(wnrel)
	EndIf

	MS_FLUSH()

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450REI
Impressao Do Resumo da Ordem de Reforma
@author Inacio Luiz Kolling
@since 17/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450REI()

	Local lTEMMOD := .F.
	Local nTRBCRE := 0

	DbSelectArea(cTRBC450)
	nTRBCRE := Recno()
	DbGotop()

	While !Eof()
		If !Empty((cTRBC450)->TC_OK)
			lTEMMOD := .T.
			Exit
		EndIf
		If !lTEMMOD
			If !Empty((cTRBC450)->TC_ORDEMB)
				lTEMMOD := .T.
				Exit
			EndIf
		EndIf
		DbSkip()
	End

	If !lTEMMOD
		Help(" ",1,"NGMSMOOSRE") //"Ate o Momento Nao Faram Feitas Modificacoes Na Ordem de Reforma"
		DbSelectArea(cTRBC450)
		DbGoto(nTRBCRE)
		Return
	EndIf

	cString  := "ST9"
	cdesc1   := STR0104 //"Relatorio Resumo da Ordem de Reforma"
	cdesc2   := " "
	cdesc3   := " "
	wnrel    := "MNTA450"
	aReturn  := { STR0095,1,STR0096, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
	nLastKey := 0
	Tamanho  := "G" //If(TamSX3("TL_CODIGO")[1]>15,"G","M")
	nomeprog := "MNTA450"

	Titulo   := cdesc1

	//+-------------------------------------------------------------------+
	//| Envia controle para a funcao SETPRINT                        	  |
	//+-------------------------------------------------------------------+

	wnrel:=SetPrint(cString,wnrel,,titulo,cDesc1,cDesc2,cDesc3,.F.,"")
	If nLastKey == 27
		Set Filter To
		Return
	EndIf

	SetDefault(aReturn,cString)
	RptStatus({|lEnd| MNTA450REU(@lEnd,wnRel,titulo,tamanho)},titulo)

	DbSelectArea(cTRBC450)
	DbGoto(nTRBCRE)

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450REU
Chamada do Relat¢rio De Resumo
@author Inacio Luiz Kolling
@since 17/01/2001
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTA450REU()

	Local aTIPOREG := {{"P",STR0116},{"M",STR0117},{"E",STR0118},{"F",STR0119},;
					   {"T",STR0120}}
	Local nTamPro	  := TamSX3("TL_CODIGO")[1] - 15

	cRodaTxt := ""
	nCntImpr := 0
	li       := 80
	m_pag    := 1
	CABEC1   := " "
	CABEC2   := " "
	nTipo    := IIF(aReturn[4]==1,15,18)

	/*
	************************************************************************************************************************************
	*<empresa>                                                                                                        Folha..: xxxxx   *
	*SIGA /<nome .04                                 <     titulo do relatorio    >                                   DT.Ref.: dd/mm/aa*
	*Hora...: xx:xx:xx                                                                                                Emissao: dd/mm/aa*
	************************************************************************************************************************************
	012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	1         2         3         4         5         6         7         8         9         0         1         2         3
	************************************************************************************************************************************
	O.S. Pai.: XXXXXX Servico.: XXXXXX - XXXXXXXXXXXXXXXXXXXXXXXXXXXXX Bem Pai.: XXXXXXXXXXXXXXXX - XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

	Componente/Pai..: XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  Ordem Atual..: XXXXXX   Ordem Anterior..: XXXXXX

	----------------------------------------------------------  I N S U M O S ----------------------------------------------------------
	| PREVISTOS INICIAL                                               |   PREVISTOS INICIAL /E OU ALTERADOS                            |
	------------------------------------------------------------------------------------------------------------------------------------
	Tipo       Tarefa Codigo           Quantid. Und Dt.inic Dt. Fim  | Tipo       Tarefa Codigo           Quantid. Und Dt.inic  Dt. Fim
	------------------------------------------------------------------------------------------------------------------------------------
	XXXXXXXXXX XXXXXX XXXXXXXXXXXXXXX 99.999,99 XXX 99/99/99 99/99/99  XXXXXXXXXX XXXXXX XXXXXXXXXXXXXXX 99.999,99 XXX 99/99/99 99/99/99

	----------------------------------------------------------  E T A P A S ------------------------------------------------------------
	| PREVISTOS INICIAL                                               |   PREVISTOS INICIAL /E OU ALTERADOS                            |
	------------------------------------------------------------------------------------------------------------------------------------
	Etapa   Descricoa da Etapa                                       | Etapa   Descricao da Etapa
	------------------------------------------------------------------------------------------------------------------------------------
	XXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                   | XXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

	------------------------------------------------------------------------------------------------------------------------------------
	*/

	DbSelectArea(cTRBC450)
	nTRBCRE := Recno()
	Dbgotop()

	NGSOMALI(58)

	If lINCREFO
		@li,060 Psay STR0105 //"Servico.:"
		@li,070 Psay Alltrim(M->TJ_SERVICO)+" - "+ cNOMSER
		@li,000 Psay STR0106 //"Bem Pai.:"
		@li,010 Psay Alltrim(cBEM450)+" - "+cNOMBEM
	Else
		@li,000 Psay STR0107 //"O.S. Pai.:"
		@li,011 Psay (cTRBJ450)->TJ_ORDEM   Picture "@!"
		@li,018 Psay STR0105 //"Servico.:"
		@li,028 Psay Alltrim((cTRBJ450)->TJ_SERVICO)+" - "+ (cTRBJ450)->TJ_NOMESER
		@li,067 Psay STR0106 //"Bem Pai.:"
		@li,077 Psay Alltrim((cTRBJ450)->TJ_BEMPAI)+" - "+(cTRBJ450)->TJ_NOMPAI
	EndIf

	NGSOMALI(58)

	SetRegua(LastRec())
	While !Eof()
		IncRegua()
		lINSUETA := .F.

		If !Empty((cTRBC450)->TC_OK) .Or. (Empty((cTRBC450)->TC_OK) .And. !Empty((cTRBC450)->TC_ORDEMB))
			If Empty((cTRBC450)->TC_OK) .And. !Empty((cTRBC450)->TC_ORDEMB)
				NGSOMALI(58)
				@li,000 Psay STR0108 //"OBSERVACAO: Componente Abaixo Foi DESMARCADO. Existe O.S. Gerada Anteriormente"
			EndIf

			NGSOMALI(58)
			@li,000 Psay STR0109 //"Componente/Pai..:"
			@li,018 Psay Alltrim((cTRBC450)->TC_BEMCOMP)+" - "+NGSEEK('ST9',(cTRBC450)->TC_BEMCOMP,1,"T9_NOME")

			If !Empty((cTRBC450)->TC_ORDEM)
				@li,077 Psay STR0110 //"Ordem Atual..:"
				@li,092 Psay (cTRBC450)->TC_ORDEM Picture "@!"
			EndIf

			If !Empty((cTRBC450)->TC_ORDEMB)
				@li,107 Psay STR0111 //"Ordem Anterior..:"
				@li,126 Psay (cTRBC450)->TC_ORDEMB Picture "@!"
			EndIf

			DbSelectArea(cTRBI450)
			ZAP

			DbSelectArea(cTRBE450)
			ZAP

			// CARREGA O STL
			// CARREGA O STQ

			If Empty((cTRBC450)->TC_OK) .And. !Empty((cTRBC450)->TC_ORDEMB)
				MNTA450CST((cTRBC450)->TC_ORDEMB,(cTRBC450)->TC_PLANO,(cTRBC450)->TC_BEMCOMP)
				MNTA450CSQ((cTRBC450)->TC_ORDEMB,(cTRBC450)->TC_PLANO,(cTRBC450)->TC_BEMCOMP)
			Else
				MNTA450CST((cTRBC450)->TC_ORDEM,(cTRBC450)->TC_PLANO,(cTRBC450)->TC_BEMCOMP)
				MNTA450CSQ((cTRBC450)->TC_ORDEM,(cTRBC450)->TC_PLANO,(cTRBC450)->TC_BEMCOMP)
			EndIf

			// IMPRIME O TEMPORARIO DOS INSUMOS

			DbSelectArea(cTRBI450)
			DbGotop()
			If Reccount() > 0
				lINSUETA := .T.
				NGSOMALI(58)
				@li,000 Psay Replicate("-",64+nTamPro)
				@li,066+nTamPro Psay STR0112 //"I N S U M O S"
				@li,081+nTamPro Psay Replicate("-",62+nTamPro)
				NGSOMALI(58)
				@li,000 Psay "|"
				@li,014 Psay STR0113 //"INSUMOS PREVISTO INICIAL"
				@li,072+nTamPro Psay "|"
				@li,086+nTamPro Psay STR0114 //"INSUMOS PREVISTO INICIAL ALTERADOS"
				@li,143+(nTamPro*2) Psay "|"
				NGSOMALI(58)
				@li,000 Psay Replicate("-",143+(nTamPro*2))
				NGSOMALI(58)
				@li,000 Psay "Tipo       Tarefa Codigo           "+Space(nTamPro)+"Quantid. Und Dt.inic    Dt. Fim      | Tipo     Tarefa  Codigo           "+Space(nTamPro)+"Quantid. Und Dt.inic    Dt. Fim"
				NGSOMALI(58)
				@li,000 Psay Replicate("-",143+(nTamPro*2))

				While !Eof()
					NGSOMALI(58)

					nPOSREG  := aSCAN(aTIPOREG,{|x| x[1] = (cTRBI450)->TL_TIPOREG})
					cTIPOREG := If(nPOSREG > 0,aTIPOREG[nPOSREG,2],Space(10))
					If !Empty(cTIPOREG)
						@li,000 Psay cTIPOREG         Picture "@!"
						@li,011 Psay (cTRBI450)->TL_TAREFA  Picture "@!"
						@li,018 Psay (cTRBI450)->TL_CODIGO  Picture "@!"
						@li,034+nTamPro Psay (cTRBI450)->TL_QUANTID Picture "@E 99,999.99"
						@li,044+nTamPro Psay (cTRBI450)->TL_UNIDADE Picture "@!"
						@li,048+nTamPro Psay (cTRBI450)->TL_DTINICI Picture "99/99/99"
						@li,059+nTamPro Psay (cTRBI450)->TL_DTFIM   Picture "99/99/99"
					EndIf

					@li,072+nTamPro Psay "|"

					nPOSREG  := aSCAN(aTIPOREG,{|x| x[1] = (cTRBI450)->TR_TIPOREG})
					cTIPOREG := If(nPOSREG > 0,aTIPOREG[nPOSREG,2],Space(10))
					If !Empty(cTIPOREG)
						@li,074+nTamPro Psay cTIPOREG         Picture "@!"
						@li,083+nTamPro Psay (cTRBI450)->TR_TAREFA  Picture "@!"
						@li,091+nTamPro Psay (cTRBI450)->TR_CODIGO  Picture "@!"
						@li,107+(nTamPro*2) Psay (cTRBI450)->TR_QUANTID Picture "@E 99,999.99"
						@li,117+(nTamPro*2) Psay (cTRBI450)->TR_UNIDADE Picture "@!"
						@li,121+(nTamPro*2) Psay (cTRBI450)->TR_DTINICI Picture "99/99/99"
						@li,132+(nTamPro*2) Psay (cTRBI450)->TR_DTFIM   Picture "99/99/99"
					EndIf

					Dbskip()
				End
			EndIf

			// IMPRIME O TEMPORARIO DAS ETAPAS

			DbSelectArea(cTRBE450)
			Dbgotop()
			If reccount() > 0
				lINSUETA := .T.
				NGSOMALI(58)
				NGSOMALI(58)
				@li,000 Psay Replicate("-",64+nTamPro)
				@li,066+nTamPro Psay STR0121 //"E T A P A S"
				@li,082+nTamPro Psay Replicate("-",59+nTamPro)
				NGSOMALI(58)
				@li,000 Psay "|"
				@li,014 Psay STR0122 //"ETAPAS PREVISTO INICIAL"
				@li,072+nTamPro Psay "|"
				@li,080+nTamPro Psay STR0123 //"ETAPAS PREVISTO INICIAL ALTERADOS"
				@li,142+(nTamPro*2) Psay "|"
				NGSOMALI(58)
				@li,000 Psay Replicate("-",143+(nTamPro*2))
				NGSOMALI(58)
				@li,000 Psay "Etapa   Descricoa da Etapa                                        "+Space(nTamPro)+"      | Etapa   Descricao da Etapa"
				NGSOMALI(58)
				@li,000 Psay Replicate("-",143+(nTamPro*2))

				While !Eof()
					NGSOMALI(58)
					@li,000 Psay (cTRBE450)->TQ_ETAPA  Picture "@!"
					@li,008 Psay (cTRBE450)->TQ_NOMETA Picture "@!"
					@li,072+nTamPro Psay "|"
					@li,074+nTamPro Psay (cTRBE450)->TY_ETAPA  Picture "@!"
					@li,082+nTamPro Psay (cTRBE450)->TY_NOMETA Picture "@!"
					DbSelectArea(cTRBE450)
					Dbskip()
				End
			EndIf
			If lINSUETA
				NGSOMALI(58)
				@li,000 Psay Replicate("-",143+(nTamPro*2))
			EndIf
			NGSOMALI(58)
		EndIf
		DbSelectArea(cTRBC450)
		Dbskip()
	End

	DbSelectArea(cTRBC450)
	DbGoto(nTRBCRE)

	Eject
	RetIndex("ST9")
	Set Filter To

	Set device to Screen
	If aReturn[5] == 1
		Set Printer To
		dbCommitAll()
		OurSpool(wnrel)
	EndIf

	MS_FLUSH()

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Utilizacao de menu Funcional
@author Ricardo Dal Ponte
@since 29/11/2006
@version undefined
@return array com opcoes da rotina.
@type function
/*/
//---------------------------------------------------------------------
Static Function MenuDef()

	Local aRotina := {{STR0001,"MNTA450PE", 0, 1},;
					  {STR0002,"MNTA450VJ", 0, 2},;//"Visualizar"
					  {STR0003,"MNTA450I" , 0, 3},;//"Incluir"
					  {STR0004,"MNTA450FI((cTRBJ450)->TJ_BEMPAI,(cTRBJ450)->TJ_ORDEM,2,4)", 0, 4},; //"Alterar"
					  {STR0005,"MNTA450E" , 0, 5, 3},;//"Cancelar"
					  {STR0006,"MNTA450R" , 0, 6},;//"O.S. Reforma"
					  {STR0007,"MNTA450C" , 0, 7}} //"Confirmacao"

	//------------------------------------------------------------
	//	Parametros do array a Rotina:                 	     	 |
	//| 1. Nome a aparecer no cabecalho                          |
	//| 2. Nome da Rotina associada                              |
	//| 3. Reservado                                             |
	//| 4. Tipo de Transação a ser efetuada:                     |
	//|    1 - Pesquisa e Posiciona em um Banco de Dados         |
	//|    2 - Simplesmente Mostra os Campos                     |
	//|    3 - Inclui registros no Bancos de Dados               |
	//|    4 - Altera o registro corrente                        |
	//|    5 - Remove o registro corrente do Banco de Dados      |
	//| 5. Nivel de acesso                                       |
	//| 6. Habilita Menu Funcional                 		     	 |
	//------------------------------------------------------------

Return(aRotina)

//---------------------------------------------------------------------
/*/{Protheus.doc} CHKSER450
Consite o campo servico
@author Marcos Wagner Junior
@since 28/02/08
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function CHKSER450()

	If !ST4->(DbSeek(xFilial('ST4') + m->TJ_SERVICO))
  		Help(" ",1,"SERVNAOEXI")
   		Return .F.
	EndIf

	If NGFUNCRPO("NGSERVBLOQ",.F.)  .And.  !NGSERVBLOQ(M->TJ_SERVICO)
		Return .F.
	EndIf

	If !STE->(DbSeek(xFilial('STE') + ST4->T4_TIPOMAN))
		Help(" ",1,"TIPONAOEXI")
		Return .F.
	EndIf

	If STE->TE_CARACTE == "P"
		MsgStop(STR0130) //"Serviço informado não poderá ser do tipo preventivo."
		Return .F.
	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} C
Verifica a resolucao do monitor e o tema p/ montar tela
@author Evaldo Cecinscki Jr.
@since 22/10/08
@version undefined
@param nTam, numeric
@type function
/*/
//---------------------------------------------------------------------
Static Function C(nTam)

	Local nHRes	:=	oMainWnd:nClientWidth	// Resolucao horizontal do monitor
	nTamRet := nTam

	If nHRes == 640	// Resolucao 640x480 (soh o Ocean e o Classic aceitam 640)
		nTamRet := nTam * 0.8
	ElseIf (nHRes == 798).Or.(nHRes == 800)	// Resolucao 800x600
		nTamRet := nTam * 1
	Else	//Resolucao 1024x768 e acima
		nTamRet := nTam * 1.28
	EndIf

	//+-------------------------------------------------------------------+
	//| Tratamento para tema "Flat"										  |
	//+-------------------------------------------------------------------+
	If "P10" $ oApp:cVersion
		If (Alltrim(GetTheme()) == "FLAT") .Or. SetMdiChild()
			nTamRet := nTam * 0.9
		EndIf
	EndIf

Return Int(nTamRet)
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450CCB
Carrega o valor do contador do bem se o campo estiver bloqueado

@param cCobBem: Código do bem
@param dData: Data
@param cHora: Hora
@author Wexlei Silveira
@since 27/09/2016
@version MP11
@return True
/*/
//---------------------------------------------------------------------
Static Function MNTA450CCB(cCobBem, dData, cHora)

	If FindFunction("NGBlCont") .And. !NGBlCont( cCobBem )
		nCONTADOR := NGTpCont(cCobBem, dData, cHora)
	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTA450VOS
Validação para a Ordem de serviço, se a OS possuir algum problema será apresentado mensagem.

@type function

@source MNTA450.prx

@author Jean Pytter da costa
@since 11/11/2020

@sample MNTA450VOS()

@obs Validações dos problemas foram replicadas da função NGLIBERAOS da rotina MNTA490

@return Logico, Indica se todas validações estão corretas.
/*/
//---------------------------------------------------------------------
Function MNTA450VOS()

	Local lRet 		:= .T.
	Local lMensag 	:= .F.
	Local lOk		:= .T.
	Local cMensag	:= ""
	Local cOldSit	:= ""

	DbSelectArea("STJ")
	DbSetOrder(1) //TJ_FILIAL+TJ_ORDEM+TJ_PLANO+TJ_TIPOOS+TJ_CODBEM+TJ_SERVICO+TJ_SEQRELA                                                                                           
	If DbSeek( xFilial( "STJ" ) + ( cTRBJ450 )->TJ_ORDEM )

		If STJ->TJ_SITUACA == "C"
			cMensag := STR0136 + ( cTRBJ450 )->TJ_ORDEM + STR0137 //"Ordem de Serviço "###  ###" foi cancelada."
			lMensag 	:= .T.
		ElseIf STJ->TJ_SITUACA == "L"
			cMensag := STR0136 + ( cTRBJ450 )->TJ_ORDEM + STR0138 //"Ordem de Serviço "###  ###" foi liberada."
			lMensag 	:= .T.
		Endif

	Else
		
		cMensag := STR0136 + ( cTRBJ450 )->TJ_ORDEM + STR0139 //"Ordem de Serviço "###  ###" não cadastrada."
		lMensag 	:= .T.	
		
	EndIf

	//Apresenta mensagem com o problema
	If lMensag
		
		Help( NIL, NIL, STR0031 , NIL, cMENSAG , 2, 0 ) //"Atenção"
		lRet := .F.

		DbSelectArea(cTRBJ450)
		Dbdelete()
		DbGotop()

	EndIf

Return lRet
