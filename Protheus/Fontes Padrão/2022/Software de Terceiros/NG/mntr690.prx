#INCLUDE "MNTR690.ch"
#INCLUDE "PROTHEUS.CH"
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNTR690  ³ Autor ³ Inacio Luiz Kolling   ³ Data ³ 26/06/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Desvio de Consumo de insumos                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function MNTR690()
Local vVETHORAS := {}
Local cString    := "ST9"
Local cDesc1     := STR0001 //"Relatorio de apresentacao dos desvios de consumo de insumos na execucao do Plano de"
Local cDesc2     := STR0002 //"de Manutencao. O usuario podera selecionar qual o tipo de insumo deseja analisar, "
Local cDesc3     := STR0003 //"bem como estabelecer um filtro das Ordens de Servico do Plano."
Local wnrel      := "MNTR690"

SetKey( VK_F9, { | | NGVersao( "MNTR690" , 1 ) } )

Private aReturn  := { STR0005, 1,STR0006, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
Private nLastKey := 0
Private cPerg    := "MNT690"
Private Titulo
Private Tamanho  := "M"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros!                        ³
//³ MV_PAR01     // Plano de Manutencao                          ³
//³ MV_PAR02     // De  Ordem de Servico                         ³
//³ MV_PAR03     // Ate Ordem de Servico                         ³
//³ MV_PAR04     // Produtos                 Sim/Nao             ³
//³ MV_PAR05     // Funcionarios             Sim/Nao             ³
//³ MV_PAR06     // Ferramentas              Sim/Nao             ³
//³ MV_PAR07     // Terceiros                Sim/Nao             ³
//³ MV_PAR08     // Tipo de Preco     !      Standard/Medio/     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Pergunte(cPerg,.F.)

Titulo := STR0007+MV_PAR01 //"Desvios do Plano  "

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel:=SetPrint(cString,wnrel,cPerg,titulo,cDesc1,cDesc2,cDesc3,.F.,"")
If nLastKey = 27
   Set Filter To
   Return
EndIf

SetDefault(aReturn,cString)
RptStatus({|lEnd| R690Imp(@lEnd,wnRel,titulo,tamanho)},titulo)

Set Key VK_F9 To

Return NIL

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ R690Imp  ³ Autor ³ Inacio Luiz Kolling   ³ Data ³ 26/06/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Chamada do Relat¢rio                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTR690                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function R690Imp(lEnd,wnRel,titulo,tamanho)
Local cRodaTxt := ""
Local nCntImpr := 0

Private li := 80 ,m_pag := 1
Private Cabec1          := " "
Private Cabec2          := " "
Private NomeProg        := "MNTR690"
Private nTipo           := 0
Private nOrdem
Private lQuebra         := .f.
Private cTipoReg
Private nConsumoReal
Private nConsuPrevisto
Private cProduto
Private nTtOrdemPre     := 0.00
Private nTtOrdemReal    := 0.00
Private nTtPlanoPre     := 0.00
Private nTtPlanoReal    := 0.00
Private nPreco          := 0.00
Private cTipo
Private lAchouos        := .f.
Private lNovaOrdem      := .t.
Private lTotaliza       := .f.
Private nQuanRecPre
Private nQuanRecReal
Private nCustoPre       := 0.00
Private nCustoRea       := 0.00

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se deve comprimir ou nao                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTIPO := IIF(aReturn[4]==1,15,18)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta os Cabecalhos                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

/*
************************************************************************************************************************************
*<empresa>                                                                                                        Folha..: xxxxx   *
*SIGA /<nome .04                                 <     titulo do relatorio    >                                   DT.Ref.: dd/mm/aa*
*Hora...: xx:xx:xx                                                                                                Emissao: dd/mm/aa*
************************************************************************************************************************************

|Tipo - Código - Unid.       ..........Previsto.......... ...........Real........... .........Variacao.........   
|Nome do Insumo              Quant.    Consumo      Preco Quant.  Consumo      Preco Quant.  Consumo      Preco    % Cons.   % Valor
************************************************************************************************************************************
         1         2         3         4         5         6         7         8         9         0         1         2         3
123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
 Ordem..: xxxxxx  Bem: xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxx Servico: xxxxxx xxxxxxxxxxxxxxxxxxxx Seq: xxx xxxxxxxxxxxxxxxxxxxx
 
 Func - CA001  - H
 Fun xxxxxxxxxxxxxxxiiiiiiiiiiiiiii - xxxxxx
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxx xxx.xxx,xx xxx.xxx,xx xxx xxx.xxx,xx xxx.xxx,xx xxx xxx.xxx,xx xxx.xxx,xx -xxx,xx -xxx,xx

 Total da Ordem de Servico                        xx.xxx.xxx,xx             xx.xxx.xxx,xx             xx.xxx.xxx,xx         -xxx,xx
 Total do Plano de Manutencao                     xx.xxx.xxx,xx             xx.xxx.xxx,xx             xx.xxx.xxx,xx         -xxx,xx
*/

If MV_PAR04 = 1 .Or. MV_PAR05 = 1 .Or. MV_PAR06 = 1 .Or. MV_PAR07 = 1
   DbSelectArea("STJ")
   DbSetOrder(03)
   DbSeek(xFILIAL('STJ')+MV_PAR01+MV_PAR02,.T.)
   SetRegua(LastRec())

   While !Eof() .And. STJ->TJ_FILIAL == xFILIAL('STJ') .And.;
      STJ->TJ_ORDEM >= MV_PAR02 .And. STJ->TJ_ORDEM <= MV_PAR03

      IncRegua()

      If STJ->TJ_SITUACA = 'L' .or. STJ->TJ_TERMINO = 'S';
         .Or. stj->tj_tipoos = "B"

         lTotaliza := .f.
         nOrdem    := STJ->TJ_ORDEM

         Store 0.00 To nTtOrdemPre,nTtOrdemReal

         // PROCURA OS DETALHES DO PLANO E ORDEM NO STL

         DbSelectArea("STL")
         DbSetOrder(04)
         If DbSeek(xFILIAL("STL")+nOrdem+STJ->TJ_PLANO)
            ntiporeg := STL->TL_TIPOREG
            While !Eof() .And. STL->TL_FILIAL == xFILIAL("STL") .And.;
               STL->TL_ORDEM == nOrdem .And. STL->TL_PLANO == STJ->TJ_PLANO

               If STL->TL_TIPOREG == "E"  // ESPECIALISTAS
                  DbSkip()
                  Loop
               EndIf

               //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
               //³ Selecao dos registros conforme os parametros                 ³
               //³ MV_PAR04     // Produtos                 Sim/Nao             ³
               //³ MV_PAR05     // Funcionarios             Sim/Nao             ³
               //³ MV_PAR06     // Ferramentas              Sim/Nao             ³
               //³ MV_PAR07     // Terceiros                Sim/Nao             ³
               //³ MV_PAR08     // Tipo de Preco            StAndard/Medio/     ³
               //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

               cNome  := space(36)
               nPreco := 0.00

               // Seleciona as Ferramentas

               If MV_PAR06 = 1 .And.  STL->TL_TIPOREG == 'F'
                  cTipo := 'Ferr'
                  Store .T. To  lQuebra,lAchouos,lTotaliza

                  While !Eof() .And. STL->TL_FILIAL == xFILIAL('STL')  .And.;
                     STL->TL_ORDEM == nOrdem .And. STL->TL_PLANO == STJ->TJ_PLANO;
                     .And. STL->TL_TIPOREG == "F"

                     cProduto := STL->TL_CODIGO
                     cUnidade := STL->TL_UNIDADE
                     Store 0 To nConsumoReal,nQuanRecReal,nConsuPrevisto,nQuanRecPre
                     Store 0.00 To nCustoPre,nCustoRea

                     While !Eof() .And. STL->TL_FILIAL == xFILIAL("STL") .And.;
                        STL->TL_ORDEM == nOrdem .And. STL->TL_PLANO == STJ->TJ_PLANO;
                        .And. STL->TL_TIPOREG == "F" .And. STL->TL_CODIGO == cProduto

								vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
   															STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
                  										STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
								nQTDHORAS := vVETHORAS[1]

                        If Alltrim(STL->TL_SEQRELA) = "0"
                           If MV_PAR08 = 2 //SE MV_PAR08(TIPO DE CUSTO = MEDIO)
                              nCustoPre := nCustoPre + STL->TL_CUSTO
                           EndIf
                           nConsuPrevisto   := nQTDHORAS
                           nQuanRecPre      := STL->TL_QUANREC
                        Else
                           If MV_PAR08 = 2
                              nCustoRea := nCustoRea + STL->TL_CUSTO
                           EndIf
                           nConsumoReal := nConsumoReal + nQTDHORAS
                           nQuanRecReal := nQuanRecReal + STL->TL_QUANREC
                        EndIf
                        DbSkip()
                     End
                     /*
                     DbSelectArea("SH4")
                     DbSetOrder(01)
                     DbSeek(xFILIAL('SH4')+SUBSTR(cProduto,1,6))
                     If Found()
                        cNome := Left(SH4->H4_DESCRI,36)
                        If MV_PAR08 = 1
                           nPreco := SH4->H4_CUSTOH
                        EndIf
                     EndIf
                     */ 
                     aVETCUST := NGCUSTSTAN(cProduto,"F")
	                 nPreco   := aVETCUST[1] //Custo standard 
	                 cNome    := Left(aVETCUST[4],36)//Nome do insumo
	                      
                     LINHADETALHES()

                     DbSelectArea("STL")
                  End

                  // Seleciona os Funcionario

               ElseIf MV_PAR05 = 1 .And.  STL->TL_TIPOREG == 'M'

                  cTipo := 'Func'
                  Store .T. To  lQuebra,lAchouos,lTotaliza

                  While !Eof() .And. STL->TL_FILIAL == xFILIAL('STL') .And.;
                     STL->TL_ORDEM == nOrdem .And. STL->TL_PLANO == STJ->TJ_PLANO;
                     .And. STL->TL_TIPOREG == "M"

                     cProduto := STL->TL_CODIGO
                     cUnidade := STL->TL_UNIDADE
                     Store 0 To nConsumoReal,nQuanRecReal,nConsuPrevisto,nQuanRecPre
                     Store 0.00 To nCustoPre,nCustoRea

                     While !Eof() .And. STL->TL_FILIAL == xFILIAL('STL') .And.;
                        STL->TL_ORDEM == nOrdem .And. STL->TL_PLANO == STJ->TJ_PLANO;
                        .And. STL->TL_TIPOREG == "M" .And. STL->TL_CODIGO == cProduto
                                              
								vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
   															STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
                  										STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
								nQTDHORAS := vVETHORAS[2]

                        If Alltrim(STL->TL_SEQRELA) = "0"
                           If MV_PAR08 = 2
                              nCustoPre := nCustoPre + STL->TL_CUSTO
                           EndIf
                           nConsuPrevisto   := nQTDHORAS
                           nQuanRecPre      := STL->TL_QUANREC
                        Else
                           If MV_PAR08 = 2
                              nCustoRea := nCustoRea + STL->TL_CUSTO
                           EndIf
                           nConsumoReal := nConsumoReal + nQTDHORAS
                           nQuanRecReal := nQuanRecReal + STL->TL_QUANREC
                        EndIf
                        DbSkip()
                     End
                     /*
                     DbSelectArea("ST1")
                     DbSetOrder(01)
                     DbSeek(xFILIAL('ST1')+SUBSTR(cProduto,1,6))
                     If Found()
                        cNome := Left(ST1->T1_NOME,36)
                        If MV_PAR08 = 1
                           nPreco := ST1->T1_SALARIO
                        EndIf
                     EndIf
                     */
                     aVETCUST := NGCUSTSTAN(cProduto,"M")
	                 nPreco   := aVETCUST[1] //Custo standard 
	                 cNome    := Left(aVETCUST[4],36)//Nome do insumo
	                 
                     LINHADETALHES()
                     DbSelectArea("STL")
                  End

               ElseIf MV_PAR04 = 1 .And.  STL->TL_TIPOREG == 'P'

                  cTipo := 'Prod'
                  Store .T. To  lQuebra,lAchouos,lTotaliza

                  While !Eof() .And. STL->TL_FILIAL == xFILIAL('STL') .And.;
                     STL->TL_ORDEM == nOrdem .And. STL->TL_PLANO == STJ->TJ_PLANO;
                     .And. STL->TL_TIPOREG == "P"

                     cProduto := STL->TL_CODIGO
                     cUnidade := STL->TL_UNIDADE
                     Store 0 To nConsumoReal,nQuanRecReal,nConsuPrevisto,nQuanRecPre
                     Store 0.00 To nCustoPre,nCustoRea //CUSTO MEDIO

                     While !Eof() .And. STL->TL_FILIAL == xFILIAL('STL') .And.;
                        STL->TL_ORDEM == nOrdem .And. STL->TL_PLANO == STJ->TJ_PLANO;
                        .And. STL->TL_TIPOREG == "P" .And. STL->TL_CODIGO == cProduto
                        
								vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
   															STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
                  										STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
								nQTDHORAS := vVETHORAS[1]

                        If Alltrim(STL->TL_SEQRELA) = "0"
                           If MV_PAR08 = 2 //SE MV_PAR08(TIPO DE CUSTO = MEDIO)
                             nCustoPre := nCustoPre + STL->TL_CUSTO
                           EndIf
                           nConsuPrevisto := nQTDHORAS
                           nQuanRecPre    := STL->TL_QUANREC
                        Else
                           If MV_PAR08 = 2 //SE MV_PAR08(TIPO DE CUSTO = MEDIO)
                             nCustoRea := nCustoRea + STL->TL_CUSTO
                           EndIf
                           nConsumoReal := nConsumoReal + nQTDHORAS
                           nQuanRecReal := nQuanRecReal + STL->TL_QUANREC
                        EndIf
                        DbSkip()
                     End
                     /*
                     DbSelectArea("SB1")
                     DbSetOrder(01)
                     DbSeek(xFILIAL('SB1')+cProduto)
                     If Found()
                        cNome  := Left(SB1->B1_DESC,36)
                        If MV_PAR08 = 1
                           nPreco := SB1->B1_CUSTD
                        EndIf
                     EndIf
                     */
                     aVETCUST := NGCUSTSTAN(cProduto,"P")
	                 nPreco   := aVETCUST[1] //Custo standard 
	                 cNome    := Left(aVETCUST[4],36)//Nome do insumo
	               
                     LINHADETALHES()
                     DbSelectArea("STL")
                  End

                   // Seleciona os Terceiras

               ElseIf MV_PAR07 = 1 .And. STL->TL_TIPOREG == 'T'
                  cTipo := 'Terc'
                  store .t. To  lQuebra,lAchouos,lTotaliza

                  While !Eof() .And. STL->TL_FILIAL == xFILIAL('STL') .And.;
                     STL->TL_ORDEM == nOrdem .And. STL->TL_PLANO == STJ->TJ_PLANO;
                     .And. STL->TL_TIPOREG == "T"

                     cProduto := STL->TL_CODIGO
                     cUnidade := STL->TL_UNIDADE
                     Store 0 To nConsumoReal,nQuanRecReal,nConsuPrevisto,nQuanRecPre
                     Store 0.00 To nCustoPre,nCustoRea

                     While !Eof() .And. STL->TL_FILIAL == xFILIAL('STL') .And.;
                        STL->TL_ORDEM == nOrdem .And. STL->TL_PLANO == STJ->TJ_PLANO;
                        .And. STL->TL_TIPOREG == "T" .And. STL->TL_CODIGO == cProduto

								vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
   															STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
                  										STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
								nQTDHORAS := vVETHORAS[1]
					    		
					    		If Alltrim(STL->TL_SEQRELA) = "0"
                           If MV_PAR08 = 2 //SE MV_PAR08(TIPO DE CUSTO = MEDIO)
                              nCustoPre := nCustoPre + STL->TL_CUSTO
                           EndIf
                           nConsuPrevisto := nQTDHORAS
                           nQuanRecPre    := STL->TL_QUANREC
                        Else
                           If MV_PAR08 = 2 //SE MV_PAR08(TIPO DE CUSTO = MEDIO)
                              nCustoRea := nCustoRea + STL->TL_CUSTO
                           EndIf
                           nConsumoReal := nConsumoReal + nQTDHORAS
                           nQuanRecReal := nQuanRecReal + STL->TL_QUANREC
                        EndIf
                        Dbskip()
                     End
                     
                     /*
                     DbSelectArea("SA2")
                     DbSetOrder(01)
                     DbSeek(xFILIAL('SA2')+SUBSTR(cProduto,1,6))
                     If Found()
                        cNome := Left(SA2->A2_NOME,36)
                        If MV_PAR08 = 1 
                           DbSelectArea("TPO")
                           DbSetOrder(01)
                           If DbSeek(xFilial("TPO")+SUBSTR(cProduto,1,6))
                              nPreco := TPO->TPO_CUSTO
                           EndIf    
                        EndIf
                     EndIf
                     */
                     aVETCUST := NGCUSTSTAN(cProduto,"T")
	                 nPreco   := aVETCUST[1] //Custo standard 
	                 cNome    := Left(aVETCUST[4],36)//Nome do insumo
	               
                     LINHADETALHES()
                     DbSelectArea("STL")
                  EndDo
               Else
                  DbSelectArea("STL")
                  DbSkip()

               EndIf
            End
            If lTotaliza
               QUEBRAORDEM()
            EndIf
            lNovaOrdem := .t.
         EndIf
      EndIf
      DbSelectArea("STJ")
      DbSkip()
   Enddo

   If lAchouos
      //TOTAL DO PLANO
      SomaLinha()
      @li,000   Psay STR0009 //"Total do Plano de Manutencao"
      @li,043   Psay nTtPlanoPre                                       Picture '@E 99,999,999.99'
      @li,070   Psay nTtPlanoReal                                      Picture '@E 99,999,999.99'
      @li,097   Psay nTtPlanoReal - nTtPlanoPre                        Picture '@E 99,999,999.99'
      @li,124   Psay ((nTtPlanoReal - nTtPlanoPre) *100 /nTtPlanoPre) Picture "@E 9999.99"
      @li+1,000 Psay replicate("*",132)
   EndIf

   Roda(nCntImpr,cRodaTxt,Tamanho)

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Devolve a condicao original do arquivo principam             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RetIndex("STJ")
RetIndex("STL")

Set Filter To
Set device to Screen

If aReturn[5] = 1
   Set Printer To
   DbCommitAll()
   OurSpool(wnrel)
EndIf
MS_FLUSH()
Return NIL


Static Function LINHADETALHES()

Local nPrecoReal,nPrecoPrevisto
Store 0.00 To nPrecoReal,nPrecoPrevisto
   
nPrecoReal     := If(MV_PAR08 = 1,nPreco*nConsumoReal,nCustoRea)
nPrecoPrevisto := If(MV_PAR08 = 1,nPreco*nConsuPrevisto,nCustoPre)

SomaLinha()
If lNovaOrdem
   @li,000 Psay STR0010+nOrdem //"Ordem..:"
   lNovaOrdem := .f.
EndIf

SomaLinha()
If lQuebra
   @li,000 Psay cTipo
   lQuebra := .f.
EndIf
@li,005 Psay " - "+AllTrim(cProduto)
@li,018 Psay " - "+cUnidade
SomaLinha()

// PREVISTO
@li,000 Psay SUBSTR(cNome,1,20)
@li,031 Psay nQuanRecPre                     Picture "999"           // quantidade de recurso

//!PRECOS
@li,035 Psay nConsuPrevisto                  Picture "@E 999,999.99" // consumo previsto

@li,046 Psay nPrecoPrevisto                  Picture "@E 999,999.99" // preco prvisto

// REALIZADO
@li,059 Psay nQuanRecReal                    Picture "999"           // quantidade previsto para consumo
@li,062 Psay nConsumoReal                    Picture "@E 999,999.99" // consumo utilizado
@li,073 Psay nPrecoReal                      Picture "@E 999,999.99" // preco final do consumo

// VARIACAO
@li,087 Psay nQuanRecReal - nQuanRecPre      Picture "999"           // diferenca quantidade
@li,096 Psay nConsumoReal - nConsuPrevisto   Picture "@E 999"        // diferenca consumo
@li,100 Psay nPrecoReal - nPrecoPrevisto     Picture "@E 999,999.99" // diferenca preco

// ((Previsto-realizado)*100/Previsto)RF
//  % de Consumo

@li,114 Psay ((nConsumoReal - nConsuPrevisto)*100 / nConsuPrevisto) Picture "@E 9999.99"

   //  % de Preco
@li,124 Psay ((nPrecoReal - nPrecoPrevisto) * 100 / nPrecoPrevisto )Picture "@E 9999.99"
If MV_PAR08 = 1
   nTtOrdemReal += nPreco * nConsumoReal
   nTtOrdemPre  += nPreco * nConsuPrevisto
   nPreco       := 0.00
Else
   nTtOrdemReal += nPrecoReal
   nTtOrdemPre  += nPrecoPrevisto
EndIf
Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡…o   ³ SomaLinha³ Autor ³ Inacio Luiz Kolling   ³ Data ³   /06/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡…o³ Incrementa Linha e Controla Salto de Pagina                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe  ³ SomaLinha()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MNTR690                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
static Function SomaLinha()
Li++
If Li > 58
   Cabec(titulo,cabec1,cabec2,nomeprog,tamanho,nTipo)
   cabece1()
   SomaLinha()
EndIf
Return

Static Function cabece1()
@prow()+1,000 Psay STR0011 //+Space(17+21-Len(STR0011))+STR0014//"*Tip Codigo - Unidade"##".........Previsto........ ...........Real.........  .........Variacao.......                 *"
@prow()+1,000 Psay STR0012 //"*Nome do Insumo              Quant.    Consumo      Preco Quant.  Consumo      Preco Quant.  Consumo      Preco    % Cons.   % Valor*"
@prow()+1,000 Psay replicate("*",132)
li := prow() + 1
Return

Static Function QUEBRAORDEM()
SomaLinha()
SomaLinha()
@li,000 Psay  STR0013 //"Total da Ordem de Servico"
@li,043 Psay  nTtOrdemPre                                        Picture '@E 99,999,999.99'
@li,070 Psay  nTtOrdemReal                                       Picture '@E 99,999,999.99'
@li,097 Psay  nTtOrdemReal - nTtOrdemPre                         Picture "@E 99,999,999.99"
@li,124 Psay  ((nTtOrdemReal - nTtOrdemPre)* 100 / nTtOrdemPre) Picture "@E 9999.99"
SomaLinha()
@li,000 Psay " "
nTtPlanoReal += nTtOrdemReal
nTtPlanoPre  += nTtOrdemPre
Store 0.00 To  nTtOrdemPre,nTtOrdemReal
Return