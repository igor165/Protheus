#INCLUDE "PROTHEUS.CH"
#INCLUDE "MNTR676.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "FWPrintSetup.ch"
#INCLUDE "RPTDEF.CH"

//----------------------------------------------------------------------------------------
/*/{Protheus.doc} MNTR676
Impressão da ordem de serviço.
@type function

@author Inácio Luiz Kolling
@since 01/09/2008

@param lVPERG    , boolean, Define se será apresentado o pergunte ao usuário.
@param cDEPLANO  , string , Indica código inicio do filtro de plano de manutenção.
@param cATEPLANO , string , Indica código final do filtro de plano de manutenção.
@param aMATOS    , array  , Matriz de O.S.
@param avMatSX1  , array  , Não utilizado, mantido por compatibilidade.
@param [aMNT676] , array  , Contém as definições do MV_PAR dos MNTR676 para quando o programa não for chamado via menu
@param [aMNT675] , array  , Contém as definições do MV_PAR dos MNTR675 para quando o programa não for chamado via menu
@param [cAls990] , string , Alias temporário para insumos da rotina MNTA990.

@return
/*/
//----------------------------------------------------------------------------------------
Function MNTR676(lVPERG, cDEPLANO, cATEPLANO, aMATOS, aMATSX1B, aMNT676, aMNT675, cAls990 )

	//Guarda conteudo e declara variaveis padroes
	Local aNGBEGINPRM := NGBEGINPRM()
	Local lTemPerg    := !Empty( Posicione( 'SX1', 1, 'MNTR422B', 'X1_GRUPO' ) )

	Private oDlgC
	Private nOpRe   := 1
	Private nOpca   := 0
	Private lPERGUN := IIf(ValType(lVPERG) != "L",.T.,lVPERG)
	Private cNomFil := SM0->M0_FILIAL
	Private nHorz   := 100

	Default aMNT676 := {}
	Default aMNT675 := {}
	Default cAls990 := ''

	DEFINE MSDIALOG oDlgC FROM 00,00 TO 240,350 TITLE STR0051 PIXEL

		oPnlPai       := TPanel():New(00,00,,oDlgC,,,,,,350,300,.F.,.F.)
		oPnlPai:Align := CONTROL_ALIGN_ALLCLIENT

		@ 005,007 TO 80,170 LABEL STR0052 of oPnlPai Pixel
		If lTemPerg
			@ 045,012 RADIO oRad VAR nOpRe ITEMS STR0047,STR0002,STR0049+" "+STR0053,STR0049+" "+STR0054,STR0050+" "+STR0053,STR0050+" "+STR0054,STR0082 of SIZE 60,10 of oPnlPai Pixel
		Else
			@ 045,012 RADIO oRad VAR nOpRe ITEMS STR0047,STR0002,STR0049+" "+STR0053,STR0049+" "+STR0054,STR0050+" "+STR0053,STR0050+" "+STR0054 of SIZE 60,10 of oPnlPai Pixel
		EndIf

	Activate MsDialog oDlgC On Init EnchoiceBar(oDlgC,{|| nOPCA := 1,oDlgC:End()},{||oDlgC:End()}) Centered

	If nOpca == 0
		Return
	EndIf

	If nOpRe == 1
		MNTBA676( lPERGUN, , aMATOS, aMNT676, cAls990 )
	ElseIf nOpRe == 2
		MNTSI676( lPERGUN, , aMATOS, aMNT676, cAls990 )
	ElseIf nOpRe == 3
		MNTR675( lPERGUN, cDEPLANO, cATEPLANO, aMATOS, 1, aMNT675, , cAls990 )
	ElseIf nOpRe == 4
		MNTR675( lPERGUN, cDEPLANO, cATEPLANO, aMATOS, 2, aMNT675, , cAls990 )
	ElseIf nOpRe == 5
		MNTR675( lPERGUN, cDEPLANO, cATEPLANO, aMATOS, 3, aMNT675, , cAls990 )
	ElseIf nOpRe == 6
		MNTR675( lPERGUN, cDEPLANO, cATEPLANO, aMATOS, 4, aMNT675, , cAls990 )
	ElseIf nOpRe == 7
		MNTR422(STJ->TJ_ORDEM)
	EndIf

	//+--------------------------------------------+
	//| Retorna conteudo de variaveis padroes      |
	//+--------------------------------------------+
	NGRETURNPRM(aNGBEGINPRM)

Return

//----------------------------------------------------------------------------------------
/*/{Protheus.doc} MNTSI676
Impressão da ordem de serviço simplificada.
@type function

@author Inácio Luiz Kolling
@since 02/09/2008

@param [lVPERG] , boolean, Define se será apresentado o pergunte ao usuário.
@param [nRecOs] , numeric, RECNO para posicionamento na ordem de serviço.
@param aMATOS   , array  , Matriz de O.S.
@param aMNT676  , array  , Definições do MV_PAR do MNTR676.
@param [cAls990], string , Alias temporário para insumos da rotina MNTA990.

@return
/*/
//----------------------------------------------------------------------------------------
Function MNTSI676( _lPerg, nRecOs, aMATOS, aMNT676, cAls990 )

	Local lImp     := .F.

	Private cPerg  := "MNT676"
	Private Titulo := STR0001+" "+STR0002
	Private oPrint

	Default _lPerg  := .T.
	Default nRecOs  := 0
	Default cAls990 := ''

	oFontMM := TFont():New("Courier New",10,10,,.T.,,,,.F.,.F.)
	oFontPN := TFont():New("Courier New",10,10,,.F.,,,,.F.,.F.)
	oFontMN := TFont():New("Courier New",10,10,,.T.,,,,.F.,.F.)
	oFontGN := TFont():New("Courier New",20,20,,.T.,,,,.F.,.F.)

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Variaveis utilizadas para parametros                         ³
	³ mv_par01     // De Plano de Manutenção ?                     ³
	³ mv_par02     // Até Plano de Manutenção ?                    ³
	³ mv_par03     // Do Bem                                       ³
	³ mv_par04     // Até o Bem                                    ³
	³ mv_par05     // Da Ordem                                     ³
	³ mv_par06     // Ate a Ordem                                  ³
	³ mv_par07     // Da Data                                      ³
	³ mv_par08     // Ate a Data                                   ³
	³ mv_par09     // Imprimir Localização ?                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/

	Pergunte(cPerg,_lPerg)

	If !_lPerg .And. Len(aMNT676) > 0
		fModParSX1(cPerg,aMNT676)
	EndIf

	//+--------------------------------------------------------------+
	//| Cria o Objeto oPrint do FWMSPrinter                          |
	//+--------------------------------------------------------------+
	oPrint := FWMSPrinter():New(OemToAnsi(STR0001),,.T.,,.T.)
	oPrint:Setup()

	if oPrint:nModalResult != PD_OK
		Return
	endif

	oPrint:SetPortrait()
	oPrint:setPaperSize(1)
	oPrint:nFactorHor	:= 3.76766091
	oPrint:nFactorVert	:= 3.84933171
	oPrint:nPageHeight	:= 3168
	oPrint:nPageWidth	:= 2400

	// Inicia a Impressao do Relatorio
	Processa( { |lEnd| MNTRSIMImp( oPrint, nRecOs, aMATOS, cAls990 ) }, STR0055 )

Return

//----------------------------------------------------------------------------------------
/*/{Protheus.doc} MNTRSIMImp
Impressão da ordem de serviço simplificada.
@type function

@author Inácio Luiz Kolling
@since 05/09/2008

@param oPrint  , object , Objeto de impressão.
@param [nRecOs], numeric, RECNO para posicionamento na ordem de serviço.
@param aMATOS  , array  , Matriz de O.S.
@param cAls990 , string , Alias temporário para insumos da rotina MNTA990.

@return
/*/
//----------------------------------------------------------------------------------------
Static Function MNTRSIMImp( oPrint, nRecOs, aMATOS, cAls990 )

	Local xQuery    := ""
	Local nFo       := 0
	Local aArInsu   := {}
	Local aArInsR   := {}
	Local aArEtap   := {}
	Local aArOpEt   := {}
	Local lMNTR675G	:= ExistBlock("MNTR675G")
	Local cT5Sequen := Space( TAMSX3("T5_SEQUENC")[1] )
	Local cT5Tarefa	:= Space(TAMSX3("T5_TAREFA")[1])
	Local oTmpTbl //Tabela Temporaria
	Local cAlsSTL   := 'STL'
	Local cOrdSTL   := 1
	Local cSeekTL   := ''
	Local cWhileTL  := ''
	Local cLoopSTL  := '.F.'

	Private m_pag    := 0
	Private nLin     := 0
	Private nHorz    := If( Type( "nHorz" ) <> "N", 100,nHorz)
	Private nDiff676 := 0 // Recebe diferenca de dias mediante a programacao de O.S.
	//Tabela Temporaria 1
	Private cTRBSTJ  := GetNextAlias()

	Default nRecOs   := 0

	If nRecOs == 0
		xQuery += "SELECT TJ_FILIAL,TJ_ORDEM,TJ_PLANO,TJ_TIPOOS,TJ_CODBEM,TJ_SERVICO,TJ_SEQRELA "
		xQuery += "FROM "+RetSqlName("STJ")+" TJ "
		xQuery += "WHERE TJ_ORDEM   >= '"+MV_PAR05+"' "
		xQuery += "  AND TJ_ORDEM   <= '"+MV_PAR06+"' "
		xQuery += "  AND TJ_CODBEM  >= '"+MV_PAR03+"' "
		xQuery += "  AND TJ_CODBEM  <= '"+MV_PAR04+"' "
		xQuery += "  AND TJ_PLANO   >= '"+MV_PAR01+"' "
		xQuery += "  AND TJ_PLANO   <= '"+MV_PAR02+"' "
		If !IsInCallStack("MNTA990")
			xQuery += "  AND TJ_DTMPINI >= '"+Dtos(MV_PAR07)+"' "
			xQuery += "  AND TJ_DTMPINI <= '"+Dtos(MV_PAR08)+"' "
		EndIf
		xQuery += "  AND (TJ_TIPOOS   = 'B' OR TJ_TIPOOS = 'L') "
		xQuery += "  AND TJ_TERMINO  = 'N' "
		If MV_PAR10 == 1
			xQuery += "  AND TJ_SITUACA  = 'L' "
		EndIf
		If MV_PAR10 == 2
			xQuery += "  AND TJ_SITUACA  = 'P' "
		EndIf
		If MV_PAR10 == 3
			xQuery += "  AND TJ_SITUACA  <> 'C' "
		EndIf
		xQuery += "  AND TJ_FILIAL   = '"+STJ->(xFilial("STJ"))+"' "
		xQuery += "  AND TJ.D_E_L_E_T_ <> '*' "
		xQuery += "ORDER BY TJ_ORDEM "
	EndIf

	If (Select(cTRBSTJ) <> 0)
		(cTRBSTJ)->(dbSelectArea(cTRBSTJ))
		(cTRBSTJ)->(dbCloseArea())
	EndIf


	If nRecOs == 0
		xQuery := ChangeQuery(xQuery)
		TCQuery xQuery NEW ALIAS (cTRBSTJ)
	Else
		dbSelectArea("STJ")
		dbGoTo(nRecOS)
		aCampos  := {}
		aAdd(aCAMPOS,{"TJ_FILIAL" ,"C",02,0})
		aAdd(aCAMPOS,{"TJ_ORDEM"  ,"C",06,0})
		aAdd(aCAMPOS,{"TJ_PLANO"  ,"C",06,0})
		aAdd(aCAMPOS,{"TJ_TIPOOS" ,"C",01,0})
		aAdd(aCAMPOS,{"TJ_CODBEM" ,"C",06,0})
		aAdd(aCAMPOS,{"TJ_SERVICO","C",06,0})
		aAdd(aCAMPOS,{"TJ_SEQRELA","C",03,0})

		//Intancia classe FWTemporaryTable (TABELA 1)
		oTmpTbl  := FWTemporaryTable():New( cTRBSTJ, aCampos )
		//Cria indices
		oTmpTbl:AddIndex( "Ind01" , {"TJ_ORDEM"}  )
		//Cria a tabela temporaria
		oTmpTbl:Create()

		dbSelectArea(cTRBSTJ)
		(cTRBSTJ)->(DbAppend())
		(cTRBSTJ)->TJ_FILIAL  := STJ->TJ_FILIAL
		(cTRBSTJ)->TJ_ORDEM   := STJ->TJ_ORDEM
		(cTRBSTJ)->TJ_PLANO   := STJ->TJ_PLANO
		(cTRBSTJ)->TJ_TIPOOS  := STJ->TJ_TIPOOS
		(cTRBSTJ)->TJ_CODBEM  := STJ->TJ_CODBEM
		(cTRBSTJ)->TJ_SERVICO := STJ->TJ_SERVICO
		(cTRBSTJ)->TJ_SEQRELA := STJ->TJ_SEQRELA
	EndIf

	(cTRBSTJ)->( dbGotop() )
	ProcRegua( LastRec() )
	While !(cTRBSTJ)->( EoF() )
		IncProc()
		dbSelectArea("STJ")
		dbSetOrder(1)
		If dbSeek(xFilial("STJ")+(cTRBSTJ)->TJ_ORDEM+(cTRBSTJ)->TJ_PLANO)
			m_pag   := 0
			Lin     := 4000
			aArInsu := {}
			aArInsR := {}
			If aMATOS <> Nil
				
				nPosOs := aSCAN(aMATOS, {|x| x[1]+x[2] == (cTRBSTJ)->TJ_PLANO+(cTRBSTJ)->TJ_ORDEM})

				If nPosOs > 0

					If IsInCallStack("MNTA990") .And. Len(aMATOS[nPosOs]) >= 3
						nDiff676 := aMATOS[nPosOs,3] //Indica a quantidade de dias que as datas da OS serao deslocadas
					EndIf
					
					MNTRSIMCAB() // CABECALHO
					
					If !Empty(ST9->T9_LOCAL)
						Lin += 90
					EndIf

					// "Observação"
					oPrint:Say(Lin+85,nHorz+20,STR0019+"..: ",oFontMN)

					MNTRSIMMEM()
					MNTRSIMCAB()
					oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

					If !Empty( cAls990 )

						cAlsSTL  := cAls990
						cOrdSTL  := 7
						cSeekTL  := STJ->TJ_ORDEM + STJ->TJ_PLANO
						cWhileTL := "(cAlsSTL)->( !EoF() ) .And. (cAlsSTL)->TL_ORDEM == STJ->TJ_ORDEM .And. (cAlsSTL)->TL_PLANO == STJ->TJ_PLANO"
						cLoopSTL := "(cAlsSTL)->STATUS == 3"

					Else

						cSeekTL  := xFilial( 'STL' ) + STJ->TJ_ORDEM + STJ->TJ_PLANO
						cWhileTL := "STL->( !EoF() ) .And. xFilial( 'STL' ) == STL->TL_FILIAL .And. STL->TL_ORDEM == STJ->TJ_ORDEM .And. STL->TL_PLANO == STJ->TJ_PLANO"

					EndIf

					dbSelectArea( cAlsSTL )
					dbSetOrder( cOrdSTL )
					If dbSeek( cSeekTL )

						While &( cWhileTL )

							If &( cLoopSTL )
								(cAlsSTL)->( dbSkip() )
								Loop
							EndIf

							dbSelectArea("ST5")
							dbSetOrder(1)
							If dbSeek( xFilial( 'ST5' ) + STJ->TJ_CODBEM + STJ->TJ_SERVICO + STJ->TJ_SEQRELA + (cAlsSTL)->TL_TAREFA )
								cT5Sequen := cValToChar(STRZERO(T5_SEQUENC,TAMSX3("T5_SEQUENC")[1]))
							EndIf

							If (cAlsSTL)->TL_TIPOREG != 'P'
								
								/*----------------------------------------------------------------+
								| Converte a quantidade do insumo conforme o parâmetro MV_NGUNIDT |
								+----------------------------------------------------------------*/
								nQTDIns   := MNT675CONV( (cAlsSTL)->TL_QUANTID, IIf( Empty( (cAlsSTL)->TL_TIPOHOR ), Nil, (cAlsSTL)->TL_TIPOHOR ) )

							Else
								
								nQTDIns   := (cAlsSTL)->TL_QUANTID

							EndIf

							If Alltrim( (cAlsSTL)->TL_SEQRELA ) == '0'
								
								aAdd( aArInsu, { (cAlsSTL)->TL_TAREFA, (cAlsSTL)->TL_TIPOREG, (cAlsSTL)->TL_CODIGO, (cAlsSTL)->TL_QUANREC, nQTDIns, (cAlsSTL)->TL_UNIDADE,;
									(cAlsSTL)->TL_DTINICI, (cAlsSTL)->TL_HOINICI, (cAlsSTL)->TL_DTFIM, (cAlsSTL)->TL_HOFIM, cT5Sequen } )

							Else
								
								aAdd( aArInsR, { (cAlsSTL)->TL_TAREFA, (cAlsSTL)->TL_TIPOREG, (cAlsSTL)->TL_CODIGO, (cAlsSTL)->TL_QUANREC, nQTDIns, (cAlsSTL)->TL_UNIDADE,;
									(cAlsSTL)->TL_DTINICI, (cAlsSTL)->TL_HOINICI, (cAlsSTL)->TL_DTFIM, (cAlsSTL)->TL_HOFIM, cT5Sequen } )

							EndIf

							(cAlsSTL)->( dbSkip() )

						End

					EndIf

					nReal := 2

					If Len(aArInsu) >=  Len(aArInsR)
						nReal := Len(aArInsu) + 2
					Else
						nReal := Len(aArInsR) + 2
					EndIf

					/*------------------+
					| Insumos Previstos |
					+------------------*/
					MNTRSIMITL( STR0020, IIf( Len( aArInsu ) == 0, 1, Len( aArInsu ) ), aArInsu )
					
					/*-------------------+
					| Insumos Realizados |
					+-------------------*/
					MNTRSIMITL( STR0021, nReal, aArInsR ) 

					aArEtap := {}

					dbSelectArea("STQ")
					dbSetOrder(3)
					If dbSeek(xFilial("STQ")+(cTRBSTJ)->TJ_ORDEM+(cTRBSTJ)->TJ_PLANO)
						While !EoF() .And. STQ->TQ_FILIAL = xFILIAL('STQ') .And. STQ->TQ_ORDEM = STJ->TJ_ORDEM .And. STQ->TQ_PLANO = STJ->TJ_PLANO

							Aadd(aArEtap,{STQ->TQ_TAREFA,STQ->TQ_ETAPA,STQ->TQ_OK,STQ->TQ_SEQETA,STQ->TQ_SEQTARE,STQ->TQ_TAREFA})
							dbSelectArea("STQ")
							dbSkip()
						EndDo
					EndIf

					MNTRSIMCAB()

					MNTRSIMIET(aArEtap)

					If Len(aArEtap) > 0
						aArOpEt := {}
						For nFo := 1 To Len(aArEtap)
							dbSelectArea("TPC")
							dbSetOrder(1)
							If dbSeek(xFilial("TPC")+aArEtap[nFo,2])
								While !EoF() .And. TPC->TPC_FILIAL = xFILIAL('TPC') .And. TPC->TPC_ETAPA = aArEtap[nFo,2]

									dbSelectArea("TPQ")
									dbSetOrder(1)
									dbSeek( xFilial("TPQ") + STJ->TJ_ORDEM + STJ->TJ_PLANO + aArEtap[nFo,1] + aArEtap[nFo,2] + TPC->TPC_OPCAO)

									aAdd(aArOpEt,{aArEtap[nFo,1],aArEtap[nFo,2],TPC->TPC_OPCAO,TPC->TPC_TIPRES,TPC->TPC_FORMUL,TPQ->TPQ_RESPOS,TPQ->TPQ_OK})

									dbSelectArea("TPC")
									dbSkip()
								EndDo
							EndIf
						Next nFo
						If Len(aArOpEt) > 0
							MNTRSIMOPC(aArOpEt)
						EndIf
					EndIf

					MNTRSIMCAB(45)

					MNTRMOTATR() // imprime os motivos de atraso
					If STJ->TJ_PLANO == "000000"
						MNTROCOR() // imprime ocorrencias x causa x solucao
					EndIf
					MNTRSIMCAB()
					oPrint:Say(Lin-5,nHorz+100,STR0039,oFontMN)
					MNTRSIMCAB()
					oPrint:Say(Lin-5,nHorz+100,STR0040,oFontMN)
					oPrint:EndPage()
				EndIf
			Else
				MNTRSIMCAB() // CABECALHO

				If !Empty(ST9->T9_LOCAL)
					Lin += 90
				EndIf

				// "Observação"
				oPrint:Say(Lin+85,nHorz+20,STR0019+"..: ",oFontMN)

				MNTRSIMMEM()
				MNTRSIMCAB()

				oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

				dbSelectArea("STL")
				dbSetOrder(1)
				If dbSeek(xFilial("STL")+(cTRBSTJ)->TJ_ORDEM+(cTRBSTJ)->TJ_PLANO)
					While !EoF() .And. STL->TL_FILIAL = xFILIAL('STL') .And. STL->TL_ORDEM = STJ->TJ_ORDEM .And. STL->TL_PLANO = STJ->TJ_PLANO

						dbSelectArea("ST5")
						dbSetOrder(1)
						If dbSeek(xFilial("ST5")+STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA+STL->TL_TAREFA)
							cT5Sequen := cValToChar(STRZERO(T5_SEQUENC,TAMSX3("T5_SEQUENC")[1]))
							cT5Tarefa := ST5->T5_TAREFA
						EndIf

						//TESTE
						If STL->TL_TIPOREG <> "P"
							vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,STL->TL_HOINICI,;
							STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
							nQTDIns   := NGRHODSEXN(vVETHORAS[1],"D")
						Else
							nQTDIns   := STL->TL_QUANTID
						EndIf
						//FIM TESTE

						If Alltrim(STL->TL_SEQRELA) = '0'
							aAdd(aArInsu,{STL->TL_TAREFA,STL->TL_TIPOREG,STL->TL_CODIGO,STL->TL_QUANREC,nQTDIns,STL->TL_UNIDADE,STL->TL_DTINICI,STL->TL_HOINICI,;
							STL->TL_DTFIM,STL->TL_HOFIM,cT5Sequen})
						Else
							aAdd(aArInsR,{STL->TL_TAREFA,STL->TL_TIPOREG,STL->TL_CODIGO,STL->TL_QUANREC,nQTDIns,STL->TL_UNIDADE,STL->TL_DTINICI,STL->TL_HOINICI,;
							STL->TL_DTFIM,STL->TL_HOFIM,cT5Sequen})
						EndIf

						dbSelectArea("STL")
						dbSkip()
					End
				EndIf
				nReal := 2
				If Len(aArInsu) >=  Len(aArInsR)
					nReal := Len(aArInsu) + 2
				Else
					nReal := Len(aArInsR) + 2
				EndIf

				MNTRSIMITL(STR0020,If(Len(aArInsu) == 0,1,Len(aArInsu)),aArInsu)
				MNTRSIMITL(STR0021,nReal,aArInsR)

				aArEtap := {}
				dbSelectArea("STQ")
				dbSetOrder(3)
				If dbSeek(xFilial("STQ")+(cTRBSTJ)->TJ_ORDEM+(cTRBSTJ)->TJ_PLANO)
					While !EoF() .And. STQ->TQ_FILIAL = xFILIAL('STQ') .And. STQ->TQ_ORDEM = STJ->TJ_ORDEM .And. STQ->TQ_PLANO = STJ->TJ_PLANO

						dbSelectArea("ST5")
						dbSetOrder(1)
						If dbSeek(xFilial("ST5")+STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA+STQ->TQ_TAREFA)
							cT5Sequen := cValToChar(STRZERO(T5_SEQUENC,TAMSX3("T5_SEQUENC")[1]))
							cT5Tarefa := ST5->T5_TAREFA
						EndIf

						Aadd(aArEtap,{STQ->TQ_TAREFA,STQ->TQ_ETAPA,STQ->TQ_OK,STQ->TQ_SEQETA,STQ->TQ_SEQTARE,STQ->TQ_TAREFA})

						dbSelectArea("STQ")
						dbSkip()
					End
				EndIf

				If !Empty(aArEtap)
					If Len(aArEtap[1]) >= 4
						aSort(aArEtap,,,{|x,y| x[5]+x[6]+x[4]+x[1]+x[2] < y[5]+y[6]+y[4]+y[1]+y[2]})
					EndIf
				EndIf

				MNTRSIMCAB()

				MNTRSIMIET(aArEtap)

				If Len(aArEtap) > 0
					aArOpEt := {}
					For nFo := 1 To Len(aArEtap)
						dbSelectArea("TPC")
						dbSetOrder(1)
						If dbSeek(xFilial("TPC")+aArEtap[nFo,2])
							While !EoF() .And. TPC->TPC_FILIAL = xFILIAL('TPC') .And. TPC->TPC_ETAPA == aArEtap[nFo,2]

								dbSelectArea("TPQ")
								dbSetOrder(1)
								dbSeek(xFilial("TPQ") + STJ->TJ_ORDEM + STJ->TJ_PLANO + aArEtap[nFo,1] + aArEtap[nFo,2] + TPC->TPC_OPCAO )

								aAdd(aArOpEt,{aArEtap[nFo,1],aArEtap[nFo,2],TPC->TPC_OPCAO,TPC->TPC_TIPRES,TPC->TPC_FORMUL,TPQ->TPQ_RESPOS,TPQ->TPQ_OK})

								dbSelectArea("TPC")
								dbSkip()
							EndDo
						EndIf
					Next nFo

					If Len(aArOpEt) > 0
						MNTRSIMOPC(aArOpEt)
					EndIf
				EndIf

				MNTRSIMCAB()

				MNTRMOTATR() // imprime os motivos de atraso
				If STJ->TJ_PLANO == "000000"
					MNTROCOR() // imprime ocorrencias x causa x solucao
				EndIf
				MNTRSIMCAB()
				oPrint:Say(Lin-5,nHorz+100,STR0039,oFontMN)
				MNTRSIMCAB()
				oPrint:Say(Lin-5,nHorz+100,STR0040,oFontMN)

				If lMNTR675G //Parâmetro {2} indica que o relatório é do MNTR676
					ExecBlock("MNTR675G",.F.,.F.,{2})
				EndIf

				oPrint:EndPage()
			EndIf
		EndIf

		dbSelectArea(cTRBSTJ)
		dbSkip()

	EndDo

	oPrint:Preview()
	dbSelectArea(cTRBSTJ)
	dbCloseArea()

	If nRecOs <> 0
		oTmpTbl:Delete()
	EndIf

	dbSelectArea("STJ")

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMMEM ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Impressao do campo memo                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMMEM()

	Local xInc   := 0
	Local i      := 0
	Local xLMemo := 0
	Local lTeme  := .F.

	If NGCADICBASE("TJ_MMSYP","A","STJ",.F.)
		cObs := Alltrim(NGMEMOSYP(STJ->TJ_MMSYP))
	Else
		cObs := Alltrim(STJ->TJ_OBSERVA)
	EndIf

	xLMemo := MlCount(cObs,115)

	For xInc := 1 To xLMemo
		If Lin == 460
			Lin-=5
		EndIf

		oPrint:Say(Lin+70,nHorz+300,MemoLine(cObs,115,xInc),oFontPN)
		MNTRSIMCAB(40)
		oPrint:Line(Lin+40,nHorz+300,Lin+40,nHorz+2000)
		lTeme := .T.
	Next xInc

	For i := 1 to 5
		oPrint:Line(Lin+40,nHorz+300,Lin+40,nHorz+2000)
		MNTRSIMCAB()
	Next i

Return lTeme

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMITL ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Impressao dos insumos                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMITL(cTIn,nVf,aVArI,nDiff)

	Local nF1   := 0
	Local nQtdI := 0

	Private cTpInsu := cTin

	Default nDiff := ""

	MNTRSIM1CA()

	If Len(aVArI) > 0

		If !Empty(aVArI)
			If Len(aVArI[1]) >= 11
				aAOrdIR := aSort(aVArI,,,{|x,y| x[11]+x[1]+x[2]+x[3] < y[11]+y[1]+y[2]+y[3]})
			Else
				aAOrdIR := aSort(aVArI,,,{|x,y| x[1]+x[2]+x[3] < y[1]+y[2]+y[3]})
			EndIf
		EndIf

		For nQtdI := 1 To  Len(aAOrdIR)
			cTarefa := aAOrdIR[nQtdI,1]
			oPrint:Say(Lin-5,nHorz+20,cTarefa,oFontPN)

			cTipoI  := aAOrdIR[nQtdI,2]
			oPrint:Say(Lin-5,nHorz+210,Substr(NGRETSX3BOX("TL_TIPOREG",cTipoI),1,3)+".",oFontPN)

			MNTRSIMVER()

			oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

			oPrint:Say(Lin-5,nHorz+0340,aAOrdIR[nQtdI,3],oFontPN)       // produto
			oPrint:Say(Lin-5,nHorz+0830,TransForm(aAOrdIR[nQtdI,4],"@E 999"),oFontPN)  // quandidade
			oPrint:Say(Lin-5,nHorz+0910,TransForm(aAOrdIR[nQtdI,5],"@E 999,999.99"),oFontPN)  // Consumo
			oPrint:Say(Lin-5,nHorz+1150,aAOrdIR[nQtdI,6],oFontPN)       // unidade
			oPrint:Say(Lin-5,nHorz+1250,If(ValType(nDiff) == "N",Dtoc(aAOrdIR[nQtdI,7]+nDiff),Dtoc(aAOrdIR[nQtdI,7])),oFontPN) // data inicio
			oPrint:Say(Lin-5,nHorz+1480,aAOrdIR[nQtdI,8],oFontPN)       // hora inicio
			oPrint:Say(Lin-5,nHorz+1700,If(ValType(nDiff) == "N",Dtoc(aAOrdIR[nQtdI,9]+nDiff),Dtoc(aAOrdIR[nQtdI,9])),oFontPN) // data fim
			oPrint:Say(Lin-5,nHorz+1940,aAOrdIR[nQtdI,10],oFontPN)      // hora fim
			MNTRSIMCAB(,'I',.T.)
		Next
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
	EndIf

	If Len(aVArI) == 0
		For nF1 := 1 To nVf
			MNTRSIMVER()
			MNTRSIMCAB(,'I',.T.)
			oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
		Next nF1 
	Else
		For nF1 := 1 to (nVf-Len(aVArI))
			MNTRSIMVER()
			MNTRSIMCAB(,'I',.T.)
			oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
		Next nF1
	EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMIET ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Impressao das etapas                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMIET(aVArI)

	Local nFv       := 0
	Local nQtdI     := 0
	Local cEtpDesc  := ""
	Local cEtpDesc2 := ""
	Local nPosi     := 0
	Local nPosi2    := 0

	MNTRSIM2CA()
	If Len(aVArI) > 0

		/* REFEITA A ATRIBUIÇÃO ABAIXO, SEM 'ASORT', PARA QUE RESPEITASSE O NOVO ÍNDICE (3) DA STQ*/
		aAOrdIR := aClone(aVArI)
		For nQtdI := 1 To Len(aAOrdIR)

			cTarefa := aAOrdIR[nQtdI,1]
			oPrint:Say(Lin+40,nHorz+020,cTarefa,oFontPN)

			cEtapa := aAOrdIR[nQtdI,2]
			oPrint:Say(Lin+40,nHorz+0220,cEtapa,oFontPN)

			MNTRSIMVE2()

			oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

			cEtpDesc := NGSEEK("TPA",cEtapa,1,"TPA->TPA_DESCRI")
			cEtpDesc := AllTrim(cEtpDesc)

			If Len(cEtpDesc) > 130  //quebra de duas linhas

				cEtpDesc2 := SubStr(cEtpDesc,50,15)
				nPosi     := At(" ",cEtpDesc2)

				If nPosi <> 0 .And. nPosi <= 15
					nPosi += 50
				Else
					nPosi :=	65
				EndIf

				cEtpDesc2 := ""
				cEtpDesc2 := SubStr(cEtpDesc,nPosi+50,30)
				nPosi2    += At(" ",cEtpDesc2)

				If nPosi2 <> 0 .And. nPosi <= 30
					nPosi2 += 50
				Else
					nPosi2 := 65
				EndIf

				oPrint:Say(Lin+40,nHorz+0430,SubStr(cEtpDesc,1,nPosi-1),oFontPN)
				MNTRSIMCAB(,'E',.T.)
				MNTRSIMVE2()

				oPrint:Say(Lin+40,nHorz+0430,SubStr(cEtpDesc,nPosi,nPosi2),oFontPN)
				MNTRSIMCAB(,'E',.T.)
				MNTRSIMVE2()

				oPrint:Say(Lin+40,nHorz+0430,SubStr(cEtpDesc,nPosi+nPosi2+1,Len(cEtpDesc)),oFontPN)

			ElseIf Len(cEtpDesc) > 65 .And. Len(cEtpDesc) <= 130  //quebra de uma linha

				cEtpDesc2 := SubStr(cEtpDesc,50,Len(cEtpDesc))
				nPosi     := At(" ",cEtpDesc2)

				If nPosi <> 0 .And. nPosi <= 15
					nPosi += 50
				Else
					nPosi :=	65
				EndIf

				oPrint:Say(Lin+40,nHorz+0430,SubStr(cEtpDesc,1,nPosi-1),oFontPN)
				MNTRSIMCAB(,'E',.T.)
				MNTRSIMVE2()

				oPrint:Say(Lin+40,nHorz+0430,SubStr(cEtpDesc,nPosi,Len(cEtpDesc)),oFontPN)

			Else   //etapa com apenas uma linha
				oPrint:Say(Lin+40,nHorz+0430,cEtpDesc,oFontPN)
			EndIf

			If !Empty(aAOrdIR[nQtdI,3])
				oPrint:Say(Lin+40,nHorz+1880,STR0035,oFontPN) //"Reportada"
			EndIf

			MNTRSIMCAB(,'E',.T.)
		Next
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
	EndIf

	For nFv := 1 To 5
		MNTRSIMVE2()
		MNTRSIMCAB(,'E',.T.)
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
	Next nF1

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMTLD ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Cabecalho dos insumos                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMTLD()

	oPrint:Say(Lin,nHorz+0020,STR0022,oFontMN)
	oPrint:Say(Lin,nHorz+0210,STR0023,oFontMN)
	oPrint:Say(Lin,nHorz+0340,STR0024,oFontMN)// produto
	oPrint:Say(Lin,nHorz+0680,STR0025,oFontMN)// quandidade
	oPrint:Say(Lin,nHorz+0910,STR0080,oFontMN)// Consumo
	oPrint:Say(Lin,nHorz+1150,STR0026,oFontMN)// unidade
	oPrint:Say(Lin,nHorz+1250,STR0027,oFontMN)// data inicio
	oPrint:Say(Lin,nHorz+1480,STR0028,oFontMN)// hora inicio
	oPrint:Say(Lin,nHorz+1700,STR0029,oFontMN)// data fim
	oPrint:Say(Lin,nHorz+1940,STR0030,oFontMN)// hora fim

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMVER ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Impressao das linhas verticais para insumos                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMVER()

	oPrint:Line(Lin,nHorz+0200,Lin+45,nHorz+0200)
	oPrint:Line(Lin,nHorz+0330,Lin+45,nHorz+0330)// produto
	oPrint:Line(Lin,nHorz+0670,Lin+45,nHorz+0670)// quandidade
	oPrint:Line(Lin,nHorz+0900,Lin+45,nHorz+0900)// Consumo
	oPrint:Line(Lin,nHorz+1140,Lin+45,nHorz+1140)// unidade
	oPrint:Line(Lin,nHorz+1240,Lin+45,nHorz+1240)// data inicio
	oPrint:Line(Lin,nHorz+1470,Lin+45,nHorz+1470)// hora inicio
	oPrint:Line(Lin,nHorz+1690,Lin+45,nHorz+1690)// data fim
	oPrint:Line(Lin,nHorz+1930,Lin+45,nHorz+1930)// hora fim

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMTQD ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Cabecalho das etapas                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMTQD()

	oPrint:Say(Lin,nHorz+0020,STR0022,oFontMN)
	oPrint:Say(Lin,nHorz+0220,STR0032,oFontMN)
	oPrint:Say(Lin,nHorz+0430,STR0033,oFontMN)
	oPrint:Say(Lin,nHorz+1880,STR0034,oFontMN)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMVE2 ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Impressao das linhas verticais para etapas                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMVE2()

	oPrint:Line(Lin-20,nHorz+0200,Lin+45,nHorz+0200)
	oPrint:Line(Lin-20,nHorz+0405,Lin+45,nHorz+0405)
	oPrint:Line(Lin-20,nHorz+1860,Lin+45,nHorz+1860)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMOPC ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Impressao das opcoes das etapas                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMOPC( aVArOp )

	Local nQtdI := 0

	MNTRSIM3CA()

	//aAOrdIR := aSort(aVArOp,,,{|x,y| x[1]+x[2] < y[1]+y[2]})
	aAOrdIR := aVArOp

	For nQtdI := 1 To Len( aAOrdIR )
		cTarefa := aAOrdIR[nQtdI,1]
		oPrint:Say(Lin+40,nHorz+020,cTarefa,oFontPN)
		cEtapa := aAOrdIR[nQtdI,2]
		oPrint:Say(Lin+40,nHorz+0210,cEtapa,oFontPN)

		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

		MNTRSIMVPC()

		oPrint:Say(Lin+40,nHorz+0430,aAOrdIR[nQtdI,3],oFontPN)

		oPrint:Say(Lin+40,nHorz+0800,NGRETSX3BOX("TPC_TIPRES",aAOrdIR[nQtdI,4]),oFontPN)

		oPrint:Say(Lin+40,nHorz+1330,aAOrdIR[nQtdI,5],oFontPN)

		oPrint:Say(Lin+40,nHorz+1800,aAOrdIR[nQtdI,6],oFontPN)

		If !Empty(aAOrdIR[nQtdI,7])
			oPrint:Say(Lin+40,nHorz+2050,STR0046,oFontPN)
		EndIf

		MNTRSIMCAB(,'O')
	Next

	oPrint:Line(Lin+15,nHorz+0010,Lin+15,nHorz+2335)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMTPC ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Cabecalho das opcoes                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTRSIMTPC()
	oPrint:Say(Lin,nHorz+020 ,STR0022,oFontMN) //TARE
	oPrint:Say(Lin,nHorz+210 ,STR0032,oFontMN) //ETA
	oPrint:Say(Lin,nHorz+430 ,STR0042,oFontMN) //OP

	oPrint:Say(Lin,nHorz+790 ,STR0023,oFontMN) //TIP

	oPrint:Say(Lin,nHorz+1060,STR0043,oFontMN) //CONT
	oPrint:Say(Lin,nHorz+1500,STR0044,oFontMN) //RESP
	oPrint:Say(Lin,nHorz+2030,STR0045,oFontMN) //MARC
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³MNTRSIMVPC ³ Autor ³In cio Luiz Kolling    ³ Data ³05/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³Verticais das opcoes                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMVPC()

	oPrint:Line(Lin-20,nHorz+200 ,Lin+60,nHorz+200)
	oPrint:Line(Lin-20,nHorz+405 ,Lin+60,nHorz+405)
	oPrint:Line(Lin-20,nHorz+760 ,Lin+60,nHorz+760)

	oPrint:Line(Lin-20,nHorz+990,Lin+60,nHorz+990)

	oPrint:Line(Lin-20,nHorz+1300,Lin+60,nHorz+1300)
	oPrint:Line(Lin-20,nHorz+2000,Lin+60,nHorz+2000)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funao     ³MNTRSIMCAB³ Autor ³ Equipe NG             ³ Data ³ 08/07/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio  ³ Inicializa a Impressao de uma nova pagina                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIMCAB(nLSoma,cTiCa,lPrintVer)

	Local cLoc
	Local cLogo
	Local nSoma      := If(nLSoma = Nil,45,nLSoma)
	Local xLLoc		 := 1
	Local xInc		 := 1

	Default lPrintVer := .F.

	cLogo := NGLOCLOGO()
	Lin   += nSoma

	If Lin >= 2970
		nSoma := 45
		If lPrintVer
			oPrint:Line(Lin-150,nHorz+0010,Lin,nHorz+2335)
		EndIf
		Lin := 60
		m_pag ++
		oPrint:EndPage()
		oPrint:StartPage()
		oPrint:Box(Lin+90,110,3010,nHorz+2170)

		Lin += 20
		If File(cLogo)
			oPrint:SayBitMap(Lin,nHorz+40,cLogo,250,73)
		EndIf
		oPrint:Say(Lin,nHorz+0600,STR0001+"  "+STJ->TJ_ORDEM,oFontGN)
		oPrint:Say(Lin-1,nHorz+2000,STR0009+" "+Alltrim(Str(m_pag,3)),oFontMM)
		oPrint:Say(Lin+20,nHorz+2000,If(nOpRe = 1,STR0047,STR0002),oFontMM)

		Lin += 70
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

		Lin += 40
		If STJ->TJ_TIPOOS == "B"
			cLoc := NGLocComp(STJ->TJ_CODBEM,'1') //Bem
		Else
			cLoc := NGLocComp(STJ->TJ_CODBEM,'2') //Localização
		EndIf

		If cLoc <> AllTrim(STJ->TJ_CODBEM)  .And. ( Type("MV_PAR09") == "N" .And. MV_PAR09 == 1) //Para tratar caso o mv_par09 seja nulo
			//Quebra de Linha para não ultrapassar o limite da página
			If Len(cLoc) > 110 .And. STJ->TJ_TIPOOS <> "B" //quebra de linha
				xLLoc := MlCount(cLoc,80)
				oPrint:Say(Lin,nHorz+020,STR0056,oFontMM) //"Localização.:"
				For xInc := 1 To xLLoc
					oPrint:Say(Lin,nHorz+020,Space(Len(STR0056)) + Space(1) + MemoLine(cLoc,80,xInc),oFontPN)
					Lin += nSoma
				Next xInc
			ElseIf Len(cLoc) > 85 .And. STJ->TJ_TIPOOS == "B" //quebra de linha
				xLLoc := MlCount(cLoc,75)
				oPrint:Say(Lin,nHorz+020,STR0056,oFontMM) //"Localização.:"
				For xInc := 1 To xLLoc
					oPrint:Say(Lin,nHorz+020,Space(Len(STR0056)) + Space(1) + MemoLine(cLoc,75,xInc),oFontPN)
					Lin += nSoma
				Next xInc
			Else   //etapa com apenas uma linha
				oPrint:Say(Lin,nHorz+020,STR0056,oFontMM) //"Localização.:"
				oPrint:Say(Lin,nHorz+020,Space(Len(STR0056)) + Space(1) + cLoc,oFontPN)
				Lin += nSoma
			EndIf
		EndIf

		If STJ->TJ_TIPOOS == "B"
			oPrint:Say(Lin,nHorz+020,STR0010+".........:",oFontMN)
			oPrint:Say(lin,nHorz+020,Space(Len(STR0010+".........:"))+Space(1) + Alltrim(STJ->TJ_CODBEM)+' - '+ SubStr(NGSEEK('ST9',STJ->TJ_CODBEM,1,'ST9->T9_NOME'),1,50),oFontPN)
		Else
			oPrint:Say(Lin,nHorz+020,STR0024+"......:",oFontMN)
			oPrint:Say(lin,nHorz+020,Space(Len(STR0024+"......:"))+Space(1) + Alltrim(STJ->TJ_CODBEM)+' - '+NGSEEK("TAF","X2"+Substr(STJ->TJ_CODBEM,1,3),7,"SUBSTR(TAF_NOMNIV,1,40)"),oFontPN)
		EndIf

		oPrint:Say(Lin,nHorz+1650,STR0036+"...:",oFontMN)
		oPrint:Say(lin,nHorz+1650,Space(Len(STR0036+"...:"))+Space(1) + Dtoc(DdataBase)+" "+SubStr(Time(),1,5),oFontPN)

		Lin += nSoma
		oPrint:Say(Lin,nHorz+020,STR0011+".....:",oFontMN)

		oPrint:Say(Lin,nHorz+020,Space(Len(STR0011+".....:"))+Space(1) + Alltrim(STJ->TJ_SERVICO)+' - '+NGSEEK('ST4',STJ->TJ_SERVICO,1,'ST4->T4_NOME'),oFontPN)

		oPrint:Say(Lin,nHorz+1650,STR0012+".: ",oFontMN)
		oPrint:Say(Lin,nHorz+1650,Space(Len(STR0012+".: "))+Space(1) + STJ->TJ_SEQRELA,oFontPN)

		Lin += nSoma
		oPrint:Say(Lin,nHorz+020,STR0018+"........:",oFontMN)
		oPrint:Say(Lin,nHorz+020,Space(Len(STR0018+"........:"))+Space(1) + Alltrim(STJ->TJ_CODAREA)+' - '+NGSEEK('STD',STJ->TJ_CODAREA,1,'STD->TD_NOME'),oFontPN)

		oPrint:Say(Lin,nHorz+1650,STR0014+":",oFontMN)
		oPrint:Say(Lin,nHorz+1650,Space(Len(STR0014+":"))+Space(1) + Dtoc(STJ->TJ_DTMPINI+nDiff676),oFontPN)

		Lin += nSoma

		oPrint:Say(Lin,nHorz+1650,STR0015+"......:",oFontMN)
		oPrint:Say(Lin,nHorz+1650,Space(Len(STR0015+"......:"))+Space(1) + STJ->TJ_HOMPINI,oFontPN)

		oPrint:Say(Lin,nHorz+020,STR0013+"..:",oFontMN)
		oPrint:Say(Lin,nHorz+020,Space(Len(STR0013+"..:"))+Space(1) + If(STJ->TJ_PLANO <> "000000",NGSEEK('STF',STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA,1,'STF->TF_NOMEMAN'),STR0017),oFontPN)

		If !Empty(ST9->T9_LOCAL)
			Lin += nSoma
			oPrint:Say(Lin,nHorz+015,STR0057,oFontPN) //"Local.......:"
			oPrint:Say(lin,nHorz+015,Space(Len(STR0057))+Space(1) + ST9->T9_LOCAL,oFonTPN)
		EndIf

		Lin += nSoma
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

		If cTiCa <> Nil
			If cTiCa == 'I'
				MNTRSIM1CA()
			ElseIf cTiCa == 'E'
				MNTRSIM2CA()
			ElseIf cTiCa == 'O'
				MNTRSIM3CA()
			EndIf
		EndIf
	EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funao     ³MNTRSIM1CA³ Autor ³In cio Luiz Kolling    ³ Data ³ 08/07/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio  ³ Cabecalho dos insumos                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIM1CA()
	MNTRSIMCAB()
	oPrint:Say(Lin,nHorz+0010,STR0016+" "+cTpInsu,oFontGN)
	MNTRSIMCAB(80)
	oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

	MNTRSIMCAB(20)
	MNTRSIMVER()

	MNTRSIMTLD()

	MNTRSIMCAB()
	oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funao     ³MNTRSIM2CA³ Autor ³In cio Luiz Kolling    ³ Data ³ 08/07/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio  ³ Cabecalho das etapas                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIM2CA()
	MNTRSIMCAB()
	oPrint:Say(Lin,nHorz+0010,STR0031+" "+STR0037+'/'+STR0038,oFontGN)
	MNTRSIMCAB(80)
	oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

	MNTRSIMCAB(20)
	MNTRSIMVE2()

	MNTRSIMTQD()

	MNTRSIMCAB()
	oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funao     ³MNTRSIM3CA³ Autor ³In cio Luiz Kolling    ³ Data ³ 08/07/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio  ³ Cabecalho das opcoes da etapa                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNTRSIM3CA()
	MNTRSIMCAB(80)
	oPrint:Say(Lin,nHorz+0010,STR0041,oFontGN)
	MNTRSIMCAB(80)
	oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

	MNTRSIMCAB(20)
	MNTRSIMVPC()

	MNTRSIMTPC()
	MNTRSIMCAB()
	oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
Return

//----------------------------------------------------------------------------------------
/*/{Protheus.doc} MNTBA676
Impressão da ordem de serviço básica.
@type function

@author Inácio Luiz Kolling
@since 04/09/2008

@param [lVPERG] , boolean, Define se será apresentado o pergunte ao usuário.
@param [nRecOs] , numeric, RECNO para posicionamento na ordem de serviço.
@param aMATOS   , array  , Matriz de O.S.
@param aMNT676  , array  , Definições do MV_PAR do MNTR676.
@param [cAls990], string , Alias temporário para insumos da rotina MNTA990.

@return
/*/
//----------------------------------------------------------------------------------------
Function MNTBA676( _lPerg, nRecOs, aMATOS, aMNT676, cAls990 )

	Local lImp      := .F.

	Private cPerg   := "MNT676"
	Private Titulo  := STR0001+" "+STR0047
	Private oPrint

	Default _lPerg  := .T.
	Default nRecOs  := 0
	Default cAls990 := ''

	oFontMM := TFont():New("Courier New",10,10,,.T.,,,,.F.,.F.)
	oFontPN := TFont():New("Courier New",10,10,,.F.,,,,.F.,.F.)
	oFontMN := TFont():New("Courier New",10,10,,.T.,,,,.F.,.F.)
	oFontGN := TFont():New("Courier New",20,20,,.T.,,,,.F.,.F.)

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Variaveis utilizadas para parametros                         ³
	³ mv_par01     // De Plano de Manutenção ?                     ³
	³ mv_par02     // Até Plano de Manutenção ?                    ³
	³ mv_par03     // Do Bem                                       ³
	³ mv_par04     // Até o Bem                                    ³
	³ mv_par05     // Da Ordem                                     ³
	³ mv_par06     // Ate a Ordem                                  ³
	³ mv_par07     // Da Data                                      ³
	³ mv_par08     // Ate a Data                                   ³
	³ mv_par09     // Imprimir Localização ?                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/

	Pergunte(cPerg,_lPerg)

	If !_lPerg .And. Len(aMNT676) > 0
		fModParSX1(cPerg,aMNT676)
	EndIf

	//+--------------------------------------------------------------+
	//| Cria o Objeto oPrint do FWMSPrinter                          |
	//+--------------------------------------------------------------+
	oPrint := FWMSPrinter():New(OemToAnsi(STR0001),,,,.T.)
	oPrint:Setup()

	if oPrint:nModalResult != PD_OK
		Return
	endif

	oPrint:SetPortrait()
	oPrint:setPaperSize(1)
	oPrint:nFactorHor	:= 3.76766091
	oPrint:nFactorVert	:= 3.84933171
	oPrint:nPageHeight	:= 3168
	oPrint:nPageWidth	:= 2400

	// Inicia a Impressao do Relatorio
	Processa( { |lEnd| MNTRBASImp( oPrint, nRecOs, aMATOS, cAls990 ) }, STR0055 )

Return

//----------------------------------------------------------------------------------------
/*/{Protheus.doc} MNTRBASImp
Impressão da ordem de serviço básica.
@type function

@author Inácio Luiz Kolling
@since 05/09/2008

@param oPrint  , object , Objeto de impressão.
@param [nRecOs], numeric, RECNO para posicionamento na ordem de serviço.
@param aMATOS  , array  , Matriz de O.S.
@param cAls990 , string , Alias temporário para insumos da rotina MNTA990.

@return
/*/
//----------------------------------------------------------------------------------------
Static Function MNTRBASImp( oPrint, nRecOs, aMATOS, cAls990 )

	Local xQuery  := ""
	Local aArInsu := {}, aArInsR := {}
	Local aCampos
	Local cT5Sequen	:= Space(TAMSX3("T5_SEQUENC")[1])
	Local oTmpTbl
	Local lMNTR675G	:= ExistBlock("MNTR675G")
	Local cAlsSTL   := 'STL'
	Local cOrdSTL   := 1
	Local cSeekTL   := ''
	Local cWhileTL  := ''
	Local cLoopSTL  := '.F.'

	Private m_pag    := 0,nLin := 0
	Private nDiff676 := 0 // Recebe diferenca de dias mediante a programacao de O.S.
	//Tabela Temporaria
	Private cTRBSTJ  := GetNextAlias()

	Default nRecOs   := 0

	If nRecOs == 0
		xQuery += "SELECT TJ_FILIAL,TJ_ORDEM,TJ_PLANO,TJ_TIPOOS,TJ_CODBEM,TJ_SERVICO,TJ_SEQRELA "
		xQuery += "FROM "+RetSqlName("STJ")+" TJ "
		xQuery += "WHERE TJ_ORDEM   >= '"+MV_PAR05+"' "
		xQuery += "  AND TJ_ORDEM   <= '"+MV_PAR06+"' "
		xQuery += "  AND TJ_CODBEM  >= '"+MV_PAR03+"' "
		xQuery += "  AND TJ_CODBEM  <= '"+MV_PAR04+"' "
		xQuery += "  AND TJ_PLANO   >= '"+MV_PAR01+"' "
		xQuery += "  AND TJ_PLANO   <= '"+MV_PAR02+"' "
		If !IsInCallStack("MNTA990")
			xQuery += "  AND TJ_DTMPINI >= '"+Dtos(MV_PAR07)+"' "
			xQuery += "  AND TJ_DTMPINI <= '"+Dtos(MV_PAR08)+"' "
		EndIf
		xQuery += "  AND (TJ_TIPOOS   = 'B' OR TJ_TIPOOS = 'L')"
		xQuery += "  AND TJ_TERMINO  = 'N' "
		If MV_PAR10 == 1
			xQuery += "  AND TJ_SITUACA  = 'L' "
		EndIf
		If MV_PAR10 == 2
			xQuery += "  AND TJ_SITUACA  = 'P' "
		EndIf
		If MV_PAR10 == 3
			xQuery += "  AND TJ_SITUACA  <> 'C' "
		EndIf
		xQuery += "  AND TJ_FILIAL   = '"+STJ->(xFilial("STJ"))+"' "
		xQuery += "  AND TJ.D_E_L_E_T_ <> '*' "
		xQuery += "ORDER BY TJ_ORDEM "
	EndIf

	If (Select(cTRBSTJ) <> 0)
		(cTRBSTJ)->(dbSelectArea(cTRBSTJ))
		(cTRBSTJ)->(dbCloseArea())
	EndIf

	If nRecOs == 0
		xQuery := ChangeQuery(xQuery)
		TCQuery xQuery NEW ALIAS (cTRBSTJ)
	Else
		dbSelectArea("STJ")
		dbGoTo(nRecOS)
		aCampos  := {}
		aAdd(aCAMPOS,{"TJ_FILIAL" ,"C",02,0})
		aAdd(aCAMPOS,{"TJ_ORDEM"  ,"C",06,0})
		aAdd(aCAMPOS,{"TJ_PLANO"  ,"C",06,0})
		aAdd(aCAMPOS,{"TJ_TIPOOS" ,"C",01,0})
		aAdd(aCAMPOS,{"TJ_CODBEM" ,"C",06,0})
		aAdd(aCAMPOS,{"TJ_SERVICO","C",06,0})
		aAdd(aCAMPOS,{"TJ_SEQRELA","C",03,0})

		//Instancia classe FWTemporaryTable (TABELA 2)
		oTmpTbl  := FWTemporaryTable():New( cTRBSTJ, aCampos )
		//Cria indices
		oTmpTbl:AddIndex( "Ind01" , {"TJ_ORDEM"}  )
		//Cria a tabela temporaria
		oTmpTbl:Create()

		dbSelectArea(cTRBSTJ)
		(cTRBSTJ)->(DbAppend())
		(cTRBSTJ)->TJ_FILIAL  := STJ->TJ_FILIAL
		(cTRBSTJ)->TJ_ORDEM   := STJ->TJ_ORDEM
		(cTRBSTJ)->TJ_PLANO   := STJ->TJ_PLANO
		(cTRBSTJ)->TJ_TIPOOS  := STJ->TJ_TIPOOS
		(cTRBSTJ)->TJ_CODBEM  := STJ->TJ_CODBEM
		(cTRBSTJ)->TJ_SERVICO := STJ->TJ_SERVICO
		(cTRBSTJ)->TJ_SEQRELA := STJ->TJ_SEQRELA
	EndIf

	(cTRBSTJ)->(dbGotop())
	ProcRegua(LastRec())
	While !(cTRBSTJ)->(EoF())
		IncProc()
		dbSelectArea("STJ")
		dbSetOrder(1)
		If dbSeek(xFilial("STJ")+(cTRBSTJ)->TJ_ORDEM+(cTRBSTJ)->TJ_PLANO)
			If aMATOS <> Nil
				nPosOs := aSCAN(aMATOS, {|x| x[1]+x[2] == (cTRBSTJ)->TJ_PLANO+(cTRBSTJ)->TJ_ORDEM})

				If nPosOs > 0
					m_pag   := 0
					Lin     := 4000
					aArInsu := {}
					aArInsR := {}

					If IsInCallStack("MNTA990") .And. Len(aMATOS[nPosOs]) >= 3
						nDiff676 := aMATOS[nPosOs,3] //Indica a quantidade de dias que as datas da OS serão deslocadas
					EndIf

					MNTRSIMCAB() // CABECALHO

					If !Empty(ST9->T9_LOCAL)
						Lin += 90
					EndIf

					// "Observação"
					oPrint:Say(Lin+85,nHorz+20,STR0019+"..: ",oFontMN)

					MNTRSIMMEM()
					MNTRSIMCAB()

					oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

					If !Empty( cAls990 )

						cAlsSTL  := cAls990
						cOrdSTL  := 7
						cSeekTL  := STJ->TJ_ORDEM + STJ->TJ_PLANO
						cWhileTL := '(cAlsSTL)->( !EoF() ) .And. (cAls990)->TL_ORDEM == STJ->TJ_ORDEM .And. (cAls990)->TL_PLANO == STJ->TJ_PLANO '
						cLoopSTL := '(cAlsSTL)->STATUS == 3'

					Else

						cSeekTL  := xFilial( 'STL' ) + STJ->TJ_ORDEM + STJ->TJ_PLANO
						cWhileTL := "STL->( !EoF() ) .And. xFilial( 'STL' ) == STL->TL_FILIAL .And. STL->TL_ORDEM == STJ->TJ_ORDEM .And. STL->TL_PLANO == STJ->TJ_PLANO"

					EndIf

					dbSelectArea( cAlsSTL )
					dbSetOrder( cOrdSTL )
					If dbSeek( cSeekTL )
						
						While &( cWhileTL )

							If &( cLoopSTL )
								(cAlsSTL)->( dbSkip() )
								Loop
							EndIf

							If (cAlsSTL)->TL_TIPOREG != 'P'

								/*----------------------------------------------------------------+
								| Converte a quantidade do insumo conforme o parâmetro MV_NGUNIDT |
								+----------------------------------------------------------------*/
								nQTDIns := MNT675CONV( (cAlsSTL)->TL_QUANTID, IIf( Empty( (cAlsSTL)->TL_TIPOHOR ), Nil, (cAlsSTL)->TL_TIPOHOR ) )

							Else
								
								nQTDIns := (cAlsSTL)->TL_QUANTID

							EndIf

							If Alltrim( (cAlsSTL)->TL_SEQRELA ) == '0'
								
								aAdd( aArInsu, { (cAlsSTL)->TL_TAREFA, (cAlsSTL)->TL_TIPOREG, (cAlsSTL)->TL_CODIGO, (cAlsSTL)->TL_QUANREC, nQTDIns,;
									(cAlsSTL)->TL_UNIDADE, (cAlsSTL)->TL_DTINICI, (cAlsSTL)->TL_HOINICI, (cAlsSTL)->TL_DTFIM, (cAlsSTL)->TL_HOFIM } )

							Else
								
								aAdd( aArInsR, { (cAlsSTL)->TL_TAREFA, (cAlsSTL)->TL_TIPOREG, (cAlsSTL)->TL_CODIGO, (cAlsSTL)->TL_QUANREC, nQTDIns,;
									(cAlsSTL)->TL_UNIDADE, (cAlsSTL)->TL_DTINICI, (cAlsSTL)->TL_HOINICI, (cAlsSTL)->TL_DTFIM, (cAlsSTL)->TL_HOFIM } )
								
							EndIf

							(cAlsSTL)->( dbSkip() )

						End
						
					EndIf

					nReal := 2
					If Len(aArInsu) >=  Len(aArInsR)
						nReal := Len(aArInsu) + 2
					Else
						nReal := Len(aArInsR) + 2
					EndIf

					/*------------------+
					| Insumos Previstos |
					+------------------*/
					MNTRSIMITL( STR0020, IIf( Len( aArInsu ) == 0, 1, Len( aArInsu ) ), aArInsu )

					/*-------------------+
					| Insumos Realizados |
					+-------------------*/
					MNTRSIMITL( STR0021, nReal, aArInsR )

					MNTRSIMCAB(100)

					oPrint:Say(Lin-5,nHorz+100,STR0039,oFontMN)
					MNTRSIMCAB()
					oPrint:Say(Lin-5,nHorz+100,STR0040,oFontMN)
				EndIf
			Else
				Lin     := 4000
				aArInsu := {}
				aArInsR := {}

				MNTRSIMCAB() // CABECALHO

				If !Empty(ST9->T9_LOCAL)
					Lin += 45
				EndIf
				// "Observação"
				oPrint:Say(Lin+85,nHorz+20,STR0019+"..: ",oFontMN)

				MNTRSIMMEM()
				MNTRSIMCAB()

				oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

				dbSelectArea("STL")
				dbSetOrder(1)
				If dbSeek(xFilial("STL")+(cTRBSTJ)->TJ_ORDEM+(cTRBSTJ)->TJ_PLANO)
					While !EoF() .And. STL->TL_FILIAL = xFILIAL('STL') .And. STL->TL_ORDEM = STJ->TJ_ORDEM;
					.And. STL->TL_PLANO = STJ->TJ_PLANO

						dbSelectArea("ST5")
						dbSetOrder(1)
						If dbSeek(xFilial("ST5")+STJ->TJ_CODBEM+STJ->TJ_SERVICO+STJ->TJ_SEQRELA+STL->TL_TAREFA)
							cT5Sequen := cValToChar(STRZERO(T5_SEQUENC,TAMSX3("T5_SEQUENC")[1]))
						EndIf

						//TESTE
						If STL->TL_TIPOREG <> "P"
							vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
							STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
							STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
							nQTDIns := NGRHODSEXN(vVETHORAS[1],"D")
						Else
							nQTDIns := STL->TL_QUANTID
						EndIf
						//FIM TESTE

						If Alltrim(STL->TL_SEQRELA) = '0'
							aAdd(aArInsu,{stl->tl_tarefa,stl->tl_tiporeg,stl->tl_codigo,;
							stl->tl_quanrec,nQTDIns,stl->tl_unidade,;
							stl->tl_dtinici,stl->tl_hoinici,stl->tl_dtfim,;
							stl->tl_hofim,cT5Sequen})
						Else
							aAdd(aArInsR,{stl->tl_tarefa,stl->tl_tiporeg,stl->tl_codigo,;
							stl->tl_quanrec,nQTDIns,stl->tl_unidade,;
							stl->tl_dtinici,stl->tl_hoinici,stl->tl_dtfim,;
							stl->tl_hofim,cT5Sequen})
						EndIf

						dbSelectArea("STL")
						dbSkip()
					EndDo
				EndIf

				nReal := 2
				If Len(aArInsu) >=  Len(aArInsR)
					nReal := Len(aArInsu) + 2
				Else
					nReal := Len(aArInsR) + 2
				EndIf

				MNTRSIMITL(STR0020,If(Len(aArInsu) == 0,1,Len(aArInsu)),aArInsu)
				MNTRSIMITL(STR0021,nReal,aArInsR)

				MNTRSIMCAB(100)

				oPrint:Say(Lin-5,nHorz+100,STR0039,oFontMN)
				MNTRSIMCAB()
				oPrint:Say(Lin-5,nHorz+100,STR0040,oFontMN)

				If lMNTR675G //Parâmetro {2} indica que o relatório é do MNTR676
					ExecBlock("MNTR675G",.F.,.F.,{2})
				EndIf

			EndIf
		EndIf

		oPrint:EndPage()
		dbSelectArea(cTRBSTJ)
		dbSkip()

	End
	oPrint:Preview()
	dbSelectArea(cTRBSTJ)
	dbCloseArea()

	If nRecOs <> 0
		oTmpTbl:Delete()
	EndIf

	dbSelectArea("STJ")

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTRMOTATR
Impressao Motivos de Atrasos
@author Hamilton Soldati
@since 15/01/2015
@version MP11
@parametros Nenhum
@return Nil
/*/
//---------------------------------------------------------------------
Static Function MNTRMOTATR()
	Local nF1 := 1

	MNTRSIM4CA()
	MNTRMTVER()

	MNTRMTVER()
	MNTRSIMCAB()
	oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

	dbSelectArea("TPL")
	dbSetOrder(1)
	If dbSeek(xFilial("TPL")+(cTRBSTJ)->TJ_ORDEM)
		While !EoF() .And. TPL->TPL_FILIAL = xFILIAL('TPL') .And. TPL->TPL_ORDEM = STJ->TJ_ORDEM

			cDescAtr := MNTRDSCATR(TPL->TPL_CODMOT)

			oPrint:Say(Lin,nHorz+0010,TPL->TPL_CODMOT,oFontPN)       // Código
			oPrint:Say(Lin,nHorz+0180,cDescAtr,oFontPN)              // Descrição
			oPrint:Say(Lin,nHorz+1060,dToC(TPL->TPL_DTINIC),oFontPN) // data inicio
			oPrint:Say(Lin,nHorz+1330,TPL->TPL_HOINIC,oFontPN)       // hora inicio
			oPrint:Say(Lin,nHorz+1610,dToC(TPL->TPL_DTFIM),oFontPN)  // data fim
			oPrint:Say(Lin,nHorz+1840,TPL->TPL_HOFIM,oFontPN)        // hora fim
			MNTRMTVER()
			MNTRSIMCAB()
			oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

			dbSkip()
		EndDo
	EndIf

	For nF1 := 1 to 3
		MNTRMTVER()
		MNTRSIMCAB()
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
	Next nF1

Return
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTRSIM4CA
Cabecalho dos motivos de atraso
@author Hamilton Soldati
@since 15/01/2015
@version MP11
@parametros Nenhum
@return Nil
/*/
//---------------------------------------------------------------------
Static Function MNTRSIM4CA()

	MNTRSIMCAB()
	oPrint:Say(Lin,nHorz+0010,STR0075,oFontGN)
	MNTRSIMCAB(80)
	oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
	MNTRSIMCAB(20)
	oPrint:Say(Lin,nHorz+0010,FWX3Titulo( 'TPL_CODMOT' ),oFontMN)
	oPrint:Say(Lin,nHorz+0180,FWX3Titulo( 'TPL_DESMOT' ),oFontMN)
	oPrint:Say(Lin,nHorz+1060,STR0027,oFontMN)
	oPrint:Say(Lin,nHorz+1330,STR0028,oFontMN)
	oPrint:Say(Lin,nHorz+1610,STR0029,oFontMN)
	oPrint:Say(Lin,nHorz+1840,STR0030,oFontMN)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTRMTVER
Impressao das linhas verticais para Motivo de Atraso
@author Hamilton Soldati
@since 15/01/2015
@version MP11
@parametros Nenhum
@return Nil
/*/
//---------------------------------------------------------------------
Static Function MNTRMTVER()

	oPrint:Line(Lin-20,nHorz+0170,Lin+45,nHorz+0170)
	oPrint:Line(Lin-20,nHorz+1050,Lin+45,nHorz+1050)
	oPrint:Line(Lin-20,nHorz+1320,Lin+45,nHorz+1320)
	oPrint:Line(Lin-20,nHorz+1600,Lin+45,nHorz+1600)
	oPrint:Line(Lin-20,nHorz+1830,Lin+45,nHorz+1830)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTROCOR
Impressao OCORRECIA X CAUSA X SOLUCAO
@author Hamilton Soldati
@since 15/01/2015
@version MP11
@parametros Nenhum
@return Nil
/*/
//---------------------------------------------------------------------
Static Function MNTROCOR()
	MNTRSIM5CA()
	MNTRSIMCAB()
Return

//---------------------------------------------------------------------//
/*/{Protheus.doc} MNTRSIM5CA
Cabeçalho do Prob x Causa x Solucao
@type static

@author Hamilton Soldati
@since 15/01/2015

@sample MNTRSIM5CA()

@param
@return
/*/
//---------------------------------------------------------------------//
Static Function MNTRSIM5CA()

	Local nF1 := 1

	//Inicio Cabeçalho do Prob x Causa x Solucao
	MNTRSIMCAB()
	oPrint:Say(Lin,nHorz+0010,STR0076,oFontGN)
	MNTRSIMCAB(80)
	//Fim Cabeçalho do Prob x Causa x Solucao

	//Inicio Prob x Causa x Solucao gerado no sistema.
	dbSelectArea('STN')
	dbSetOrder(1)
	If dbSeek( xFilial('STN') + (cTRBSTJ)->TJ_ORDEM + (cTRBSTJ)->TJ_PLANO )
		While STN->( !EoF() ) .And. STN->TN_FILIAL == xFilial('STN') .And. STN->TN_ORDEM == STJ->TJ_ORDEM .And. STN->TN_PLANO == STJ->TJ_PLANO

			cDescOco := MNTRDSCCPS( STN->TN_CODOCOR, 'P' )
			cDescCau := MNTRDSCCPS( STN->TN_CAUSA  , 'C' )
			cDescSol := MNTRDSCCPS( STN->TN_SOLUCAO, 'S' )

			oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
			oPrint:Say(Lin+40,nHorz+0020,STR0077, oFontMN)
			oPrint:Say(Lin+40,nHorz+0420,cDescOco,oFontPN) // Ocorrência
			MNTRSIMCAB()
			MNTROCORVER()
			oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
			oPrint:Say(Lin+40,nHorz+0020,STR0078, oFontMN)
			oPrint:Say(Lin+40,nHorz+0420,cDescCau,oFontPN) // Causa
			MNTRSIMCAB()
			MNTROCORVER()
			oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
			oPrint:Say( Lin+40, nHorz+20,STR0079, oFontMN)
			oPrint:Say(Lin+40,nHorz+0420,cDescSol,oFontPN) // Solução
			MNTRSIMCAB()
			MNTROCORVER()
			oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

			STN->( dbSkip() )
		EndDo
	EndIf
	//Fim Prob x Causa x Solucao gerado no sistema.

	//Inicio Prob x Causa x Solucao em branco.
	For nF1 := 1 to 2
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)

		If nF1 == 1
			MNTRSIMCAB(120)
		Else
			MNTRSIMCAB(80)
		EndIf

		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
		oPrint:Say( Lin+40, nHorz+20, STR0077, oFontMN )
		MNTRSIMCAB()
		MNTROCORVER()
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
		oPrint:Say( Lin+40, nHorz+20, STR0078, oFontMN )
		MNTRSIMCAB()
		MNTROCORVER()
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
		oPrint:Say( Lin+40, nHorz+20,STR0079, oFontMN )
		MNTRSIMCAB()
		MNTROCORVER()
		oPrint:Line(Lin,nHorz+0010,Lin,nHorz+2170)
	Next nF1
	//Fim Prob x Causa x Solucao em branco.

Return
//---------------------------------------------------------------------
/*/{Protheus.doc} MNTROCORVER
Impressao das linhas verticais para ProcxCauxSol
@author Hamilton Soldati
@since 15/01/2015
@version MP11
@parametros Nenhum
@return Nil
/*/
//---------------------------------------------------------------------
Static Function MNTROCORVER()
	oPrint:Line(Lin-45,nHorz+405 ,Lin,nHorz+405)
Return

//---------------------------------------------------------------------//
/*/{Protheus.doc} MNTRDSCATR
Busca a descrição da motivo de Atraso.
@author Maicon André Pinheiro
@since 21/01/2016
@version MP11
@parametros Nenhum
@return cDescri
/*/
//---------------------------------------------------------------------//
Static Function MNTRDSCATR(cCodigo)

	dbSelectArea( "TPJ" )
	dbSetOrder( 1 )
	dbSeek( xFilial ("TPJ")+cCodigo)

	cDescri := TPJ->TPJ_DESMOT

	dbSelectArea( "TPL" )
	dbSetOrder( 1 )

Return cDescri

//---------------------------------------------------------------------//
/*/{Protheus.doc} MNTRDSCCPS
Busca a descrição CausaXProblemaXSolução
@type static

@author Maicon André Pinheiro
@since 21/01/2016

@sample MNTRDSCCPS( 'cCodigo', 'cTipo' )

@param  cCodigo, Caracter, Código para pesquisa na tabela ST8
@param  cTipo  , Catacter, Tipo do registro a ser pesquisado.
@return cDescri, Caracter, Descrição da Ocorrência.
/*/
//---------------------------------------------------------------------//
Static Function MNTRDSCCPS( cCodigo, cTipo )

	Local cDescri := ''
	Local aArea   := GetArea()

	dbSelectArea( 'ST8' )
	dbSetOrder( 1 )
	dbSeek( xFilial('ST8') + cCodigo + cTipo )
	If !Empty( ST8->T8_NOME )
		cDescri := AllTrim( cCodigo ) + ' - ' + ST8->T8_NOME
	EndIf

	RestArea( aArea )

Return cDescri

//-------------------------------------------------------------------
/*/{Protheus.doc} fModParSX1
Carrega as variaveis das perguntas a partir do SX1 e Altera os conteúdos

@author  Maicon André Pinheiro
@since   27/02/2018
@version P12
/*/
//-------------------------------------------------------------------
Static Function fModParSX1(cPerg, aMNT676)

	Local aArea     := GetArea()
	Local cPergC    := PadR( Alltrim(cPerg), Len(Posicione("SX1", 1, Alltrim(cPerg), "X1_GRUPO")) )
	Local nTotSX1   := Len(aMNT676)
	Local nInd      := 0
	Local nTamanho  := 0
	Local cTipo     := ""
	Local xConteudo := ""

	For nInd := 1 To nTotSX1

		cTipo    := Posicione("SX1",1,cPergC + aMNT676[nInd][1],"X1_TIPO")
		nTamanho := Posicione("SX1",1,cPergC + aMNT676[nInd][1],"X1_TAMANHO")
		If nTamanho > 0 //Caso encontrou a pergunta.

			Do Case
				Case cTipo == "N"
					xConteudo := aMNT676[nInd,2]
				Case cTipo == "C"
					xConteudo := SubStr(aMNT676[nInd,2],1,nTamanho)
				Case cTipo == "D"
					If ValType(aMNT676[nInd,2]) == "C"
						xConteudo := CtoD(aMNT676[nInd,2])
					Else
						xConteudo := aMNT676[nInd,2]
					EndIf
			End Case

			&("MV_PAR"+aMNT676[nInd][1]) := xConteudo

		EndIf

	Next nInd

	RestArea(aArea)

Return
