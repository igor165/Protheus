#INCLUDE "MDTR475.ch"
#Include "Protheus.ch"

Static _nPosFilFun := 1

Static _nPosCodExa := 2
Static _nPosExaRea := 3
Static _nPosExaAno := 4

Static _nPosCodNat := 2
Static _nPosNatExa := 3
Static _nPosNatRea := 4
Static _nPosNatAno := 5
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MDTR475  ³ Autor ³ Marcio Costa          ³ Data ³ 12.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Relatorio do PCMSO Anual.                                   ³±±
±±³          ³Demonstra estatisticamente por setor e pela natureza do     ³±±
±±³          ³exame, a quantidade de exames realizados, bem como a quanti-³±±
±±³          ³dade que apresentou  resultados anormais. Atraves dos       ³±±
±±³          ³parametros o usuario devera informa o numero do pcmso que   ³±±
±±³          ³deseja listar no mapa anual, tambem o indice de acrescimo de³±±
±±³          ³exames previstos  para o ano seguinte.                      ³±±
±±³          ³Para emissao o programa deve ler as seguintes tabelas:      ³±±
±±³          ³ TMW - Parametros do PCMSO                                  ³±±
±±³          ³ TM5 - Exames do PCMSO                                      ³±±
±±³          ³       Classificado por c.custo e natureza do exame.        ³±±
±±³          ³ SI3 - Nome do centro de custo                              ³±±
±±³          ³ Da tabela TM5 considerar apenas os registros com o campo   ³±±
±±³          ³ TM5_PCMSO = AO PCMSO informado nos parametros e se o campo ³±±
±±³          ³ data do resultado estive prenchido.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ MDTR475void)                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MDTR475()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Armazena variaveis p/ devolucao (NGRIGHTCLICK) 				  		  	  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aNGBEGINPRM := NGBEGINPRM()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL wnrel   := "MDTR475"
LOCAL limite  := 132
LOCAL cDesc1  := STR0001 //"Relatorio Anual do Programa de Saude Ocupacional - PCMSO             "
LOCAL cDesc2  := STR0002 //"Demonstrativo por setor e natureza da quantidade de exames realizados"
LOCAL cDesc3  := STR0003 //"com resultados normais e anormais.                                   "
LOCAL cString := "TM5"
	Local cOrdSX1 := "00"

lSigaMdtPS := If( SuperGetMv("MV_MDTPS",.F.,"N") == "S", .t. , .f. )

PRIVATE nomeprog := "MDTR475"
PRIVATE tamanho  := "M"
PRIVATE ntamanho  := "M"
PRIVATE aReturn  := { STR0004, 1,STR0005, 2, 2, 1, "",1 } //"Zebrado"###"Administracao"
PRIVATE titulo   := STR0006   //"Relatorio Anual do PCMSO"
PRIVATE ntipo    := 0
PRIVATE nLastKey := 0
PRIVATE cPerg    := PadR( If(!lSigaMdtPS,"MDT475","MDT475PS"), 10 )
PRIVATE cabec1   := " "
PRIVATE cabec2   := " "
Private aVetinr  := {}, nIndTRB

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lTMW_Filial := If( Empty(xFilial("TMW")) .and. !Empty(xFilial("SRA")) , .t. , .f. ) //Indica se o PCMSO é para varias filiais
PRIVATE lMV_NGMDTPS := .f.
PRIVATE nSizeSI3
Private nSizeSQB
Private nSizeSRJ
Private nTamExa
nSizeSI3 := If((TAMSX3("I3_CUSTO")[1]) < 1,9,(TAMSX3("I3_CUSTO")[1]))
nSizeSRJ := If((TAMSX3("RJ_FUNCAO")[1]) < 1,5,(TAMSX3("RJ_FUNCAO")[1]))
nSizeSQB := If((TAMSX3("QB_DEPTO")[1]) < 1,5,(TAMSX3("QB_DEPTO")[1]))
nTamExa	:= If(TAMSX3("TM4_EXAME")[1] < 1, 6, TAMSX3("TM4_EXAME")[1])

cAliasCC := "CTT"
cDescCC2 := "CTT->CTT_DESC01"
nSizeSI3 := If((TAMSX3("CTT_CUSTO")[1]) < 1,9,(TAMSX3("CTT_CUSTO")[1]))

If SuperGetMv("MV_NGMDTPS",.F.,"N") == "S"
	lMV_NGMDTPS := .t.
Endif

If !MDTRESTRI(cPrograma)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Devolve variaveis armazenadas (NGRIGHTCLICK) 			 			  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	NGRETURNPRM(aNGBEGINPRM)
	Return .F.
Endif

/*--------------------------------
//PERGUNTAS PADRÃO               |
| 01 De PCMSO ?                  |
| 02 Ate PCMSO ?                 |
| 03 De Centro de Custo ?        |
| 04 Ate Centro de Custo ?       |
| 05 Exames Proximo Ano ?        |
| 06 Classificar por ?           |
| 07 Imprimir Exames NR7 ?       |
| 08 Listar Exames Proximo Ano?  |
----------------------------------*/

pergunte(cPerg,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel:="MDTR475"

wnrel:=SetPrint(cString,wnrel,cPerg,titulo,cDesc1,cDesc2,cDesc3,.F.,"")

If nLastKey == 27
	Set Filter to
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Devolve variaveis armazenadas (NGRIGHTCLICK)                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	NGRETURNPRM(aNGBEGINPRM)
	Return
Endif

SetDefault(aReturn,cString)

If aReturn[4] == 2
	tamanho  := "G"
	ntamanho := "G"
Endif

If nLastKey == 27
	Set Filter to
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Devolve variaveis armazenadas (NGRIGHTCLICK)                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	NGRETURNPRM(aNGBEGINPRM)
	Return
Endif

RptStatus({|lEnd| R475Imp(@lEnd,wnRel,titulo,tamanho)},titulo)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Devolve variaveis armazenadas (NGRIGHTCLICK)                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
NGRETURNPRM(aNGBEGINPRM)

Return NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MDT475FLVL³ Autor ³ Denis Hyroshi        ³ Data ³ 04/08/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida os campos De/Ate Filial                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MDT475FLVL(nTipo)
Local lRet := .T.
Local cArea := Alias()
Local aArea := SM0->(GetArea())

If nTipo == 1
	If !Empty(Mv_par09)
		dbSelectArea("SM0")
		If !dbSeek(cEmpAnt+Mv_par09)
			Help(" ",1,"REGNOIS")
			lRet := .F.
		Endif
		If Mv_par09 > Mv_par10
			Mv_par10 := Mv_par09
		Endif
	Endif
Else
	If Mv_par10 <> Replicate("Z",Len(Mv_par10)) .and. Mv_par10 <> Replicate("9",Len(Mv_par10))
		If Mv_par09 > Mv_par10
			Help(" ",1,"DEATEINVAL")
			lRet := .F.
		Else
			dbSelectArea("SM0")
			If !dbSeek(cEmpAnt+Mv_par10)
				Help(" ",1,"REGNOIS")
				lRet := .F.
			Endif
		Endif
	Endif
Endif

RestArea(aArea)
dbSelectArea(cArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ R475Imp  ³ Autor ³ Inacio Luiz Kolling   ³ Data ³15/05/2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Chamada do Relat¢rio                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MDTR475                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function R475Imp(lEnd,wnRel,titulo,tamanho)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL cRodaTxt := ""
LOCAL nCntImpr := 0
Local nXYZ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis para controle do cursor de progressao do relatorio ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL nTotRegs := 0 ,nMult := 1 ,nPosAnt := 4 ,nPosAtu := 4 ,nPosCnt := 0
Local nPosExa, nPosNat, nCntTot

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis locais exclusivas deste programa                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL lContinua        := .T.

//----------------------------------------------------------------
//  Variaveis locais para impressão dos totalizadores
//----------------------------------------------------------------
//Contadores Gerais
Local nAtual		:= 0
Local nExaAnormal	:= 0
Local nPrevisto		:= 0
Local nPercentual	:= 0
//Contadores por Natureza
Local nAtualNat 	:= 0
Local nExaAnoNat 	:= 0
Local nPrevistoNat 	:= 0
Local nAtuCont 		:= 0
Local nExaCont 		:= 0
Local nPrevCont		:= 0
//Contadores por Exame
Local nPreviAux		:= 0
//Controle de proxima Natureza e Filial dentro do array
Local cProxNat		:= ""
Local cProxFil		:= ""
//Variavel de controle
Local lUltimo		:= .F.
//Descrições
Local cDescNat		:= ""
Local cDescAux		:= ""
//Array de armazenamento das informações de totalizadores
Local aTotExa 		:= {}
Local aTotNat 		:= {}
Local nLinhasMemo := 0
Local nLinha := 0
Local cNomeExa := ""


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Contadores de linha e pagina                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE li := 80 ,m_pag := 1
Private aTMYCombo := MDTCbox("TMY_NATEXA"," ",1)
Private aTM5Combo := MDTCbox("TM5_NATEXA"," ",1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se deve comprimir ou nao                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTipo  := IIF(aReturn[4]==1,15,18)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta os Cabecalhos                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSigaMdtps

	aDBF := {}
	AADD(aDBF,{"PCMSO"  ,"C",06,0})
	AADD(aDBF,{"CCUSTO" ,"C",nSizeSI3,0})
	AADD(aDBF,{"FUNCAO" ,"C",nSizeSRJ,0})
	AADD(aDBF,{"EXAME"  ,"C",nTamExa,0})
	AADD(aDBF,{"NATUREZ","C",01,0})
	AADD(aDBF,{"EXAREAL","N",10,2})
	AADD(aDBF,{"EXAANOR","N",10,2})
	AADD(aDBF,{"TIPO"   ,"N",01,0})

	//Cria TRB
	oTempTable := FWTemporaryTable():New( "TRB", aDBF )
	oTempTable:AddIndex( "1", {"PCMSO","CCUSTO","EXAME","NATUREZ"} )
	oTempTable:AddIndex( "2", {"PCMSO","CCUSTO","FUNCAO","EXAME","NATUREZ"} )
	oTempTable:Create()

	cC_Custo := ""
	c_Funcao := ""
	cKeyExame := ""
	nIndTRB := ""
	cKeyExame := If(Mv_par08==2,"cC_Custo+c_Funcao","cC_Custo")
	nIndTRB   := If(Mv_par08==2,2,1)

	//  Ver modelo do relatorio no final desta definicao

	dbSelectArea("TMW")
	dbSetOrder(01)
	dbSeek(xFilial("TMW")+MV_PAR03,.t.)

	SetRegua(LastRec())

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Correr TMW para ler os  Atestados                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	While !Eof() .AND. TMW->TMW_FILIAL == xfilial("TMW") .AND. TMW->TMW_PCMSO <= MV_PAR04

		IncRegua()

		cCliente := SubStr(TMW->TMW_CCDE,1,nSizeTD)

		If cCliente <> mv_par01+mv_par02
			dbSelectArea("TMW")
			dbSkip()
			Loop
		Endif

		dbSelectArea("TM5")
		dbSetOrder(03)
		dbSeek(xFilial("TM5")+TMW->TMW_PCMSO)
		While !Eof() .AND. TM5->TM5_FILIAL == xfilial("TM5") .AND. TM5->TM5_PCMSO == TMW->TMW_PCMSO

			cC_Custo := Space(nSizeSI3)
			c_Funcao := Space(nSizeSRJ)
			If Empty(cC_Custo := fCUSTOASO(TM5->TM5_NUMFIC,TM5->TM5_DTPROG))
				Dbselectarea("TM5")
				Dbskip()
				Loop
			Endif
			If Empty(c_Funcao := fFUNCAOASO(TM5->TM5_NUMFIC,TM5->TM5_DTPROG)) .and. Mv_par08 == 2
				Dbselectarea("TM5")
				Dbskip()
				Loop
			Endif
			If !Empty(TM5->TM5_DTRESU) .and. cC_Custo >= Mv_par05 .and. cC_Custo <= Mv_par06 .and. ;
				(Alltrim(TM5->TM5_EXAME)!="NR7" .or. (Mv_par09 == 1 .and. Empty(TM5->TM5_NUMASO)))

				dbSelectArea("TRB")
				Dbsetorder(nIndTRB)
				If !dbSeek(TM5->TM5_PCMSO+&(cKeyExame)+TM5->TM5_EXAME+TM5->TM5_NATEXA)
					TRB->(DbAppend())
					TRB->PCMSO   := TM5->TM5_PCMSO
					TRB->CCUSTO  := cC_Custo
					TRB->FUNCAO  := c_Funcao
					TRB->EXAME   := TM5->TM5_EXAME
					TRB->NATUREZ := TM5->TM5_NATEXA
					TRB->TIPO    := 1
				Endif
				TRB->EXAREAL := TRB->EXAREAL + 1
				If TM5->TM5_INDRES = '2'
					TRB->EXAANOR := TRB->EXAANOR + 1
				Endif

			Endif
			dbSelectArea("TM5")
			dbskip()
		End

		dbSelectArea("TMY")
		dbSetOrder(6)  //TMY_FILIAL+TMY_CLIENT+TMY_LOJA+TMY_NUMASO+TMY_NUMFIC
		dbSeek(xFilial("TMY")+mv_par01+mv_par02)
		While !Eof() .AND. TMY->TMY_FILIAL+TMY->(TMY_CLIENT+TMY_LOJA) == xfilial("TMY")+mv_par01+mv_par02 .and. Mv_par09 == 1

			cC_Custo := Space(nSizeSI3)
			c_Funcao := Space(nSizeSRJ)

			If TMY->TMY_DTPROG < TMW->TMW_DTINIC .or. TMY->TMY_DTPROG > TMW->TMW_DTFIM
				Dbselectarea("TMY")
				Dbskip()
				Loop
			Endif

			If Empty(cC_Custo := fCUSTOASO(TMY->TMY_NUMFIC,TMY->TMY_DTPROG))
				Dbselectarea("TMY")
				Dbskip()
				Loop
			Endif
			If Empty(c_Funcao := fFUNCAOASO(TMY->TMY_NUMFIC,TMY->TMY_DTPROG)) .and. Mv_par08 == 2
				Dbselectarea("TMY")
				Dbskip()
				Loop
			Endif

			If cC_Custo >= Mv_par05 .and. cC_Custo <= Mv_par06

				dbSelectArea("TRB")
				Dbsetorder(nIndTRB)
				If !dbSeek(TMW->TMW_PCMSO+&(cKeyExame)+"NR7"+Space(nTamExa-3)+TMY->TMY_NATEXA)
					TRB->(DbAppend())
					TRB->PCMSO   := TMW->TMW_PCMSO
					TRB->CCUSTO  := cC_Custo
					TRB->FUNCAO  := c_Funcao
					TRB->EXAME   := "NR7"
					TRB->NATUREZ := TMY->TMY_NATEXA
					TRB->TIPO    := 2
				Endif
				TRB->EXAREAL := TRB->EXAREAL + 1
				If TMY->TMY_INDPAR = '2'
					TRB->EXAANOR := TRB->EXAANOR + 1
				Endif

			Endif
			dbSelectArea("TMY")
			dbskip()

		End

		dbSelectArea("TMW")
		dbskip()
	End

	dbSelectArea("TRB")
	dbSetOrder(nIndTRB)
	dBGOTOP()
	SetRegua(LastRec())
	lTTRB := .F.

	While !eof()

		lTTRB := .T.
		cPCMSO := TRB->PCMSO
		Dbselectarea("TMW")
		Dbsetorder(1)
		Dbseek(xFilial("TMW")+cPCMSO)
		dINICIO := TMW->TMW_DTINIC
		dFIM    := TMW->TMW_DTFIM
		cCODUSU := TMW->TMW_CODUSU
		li := 80
		lFirst := .t.
		SomaLinha()
		@ Li,001 PSay Replicate("_",130)
		SomaLinha()
		@ Li,000 PSay "|"
		Dbselectarea("SA1")
		Dbsetorder(1)
		Dbseek(xFilial("SA1")+Substr(TRB->CCUSTO,1,nSizeTD))
		@ Li,001 PSay Substr(SA1->A1_NOME,1,40)
		@ Li,050 PSay STR0018+TRB->PCMSO    //"Relatorio do PCMSO.:"
		@ Li,096 PSay STR0019 //"Periodo:"
		@ Li,107 PSay dINICIO PICTURE '99/99/99'
		@ Li,118 PSay "a"
		@ Li,120 PSay dFIM PICTURE '99/99/99'
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay "|SIGA/MDTR475"
		@ Li,096 PSay STR0020 //"Emissao:"
		@ Li,107 PSay dDataBase PICTURE '99/99/99'
		@ Li,118 PSay time()    PICTURE "99:99"
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay "|"
		@ Li,001 PSay Replicate("_",130)
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay STR0008 //"|Responsavel.....:"
		dbSelectArea("TMK")
		dbSetOrder(01)
		dbSeek(xFilial('TMK')+cCODUSU)
		@ Li,019 PSay Substr(TMK->TMK_NOMUSU,1,50)
		@ Li,096 PSay If(Empty(TMK->TMK_ENTCLA),"CRM",Alltrim(TMK->TMK_ENTCLA))+": "+ Alltrim(TMK->TMK_NUMENT)
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay "|"
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay STR0027 //"|Assinatura......: _________________________________________________"
		@ Li,096 PSay STR0021 //"Data:"
		@ Li,107 PSay dDataBase PICTURE '99/99/99'
		@ Li,131 PSay "|"
		Somalinha()
		@ Li,000 PSay "|"
		@ Li,001 PSay Replicate("_",130)
		@ Li,131 PSay "|"
		CABEC475()
		dbSelectArea("TRB")
		While !Eof() .and. TRB->PCMSO == cPCMSO
			cCODCUST := TRB->CCUSTO
			SomaLinha(.t.)
			@ Li,000 PSay "|"
			dbSelectArea(cAliasCC)
			dbSetOrder(01)
			dbSeek(xFilial(cAliasCC)+cCODCUST)
			@ Li,001 PSay Substr(&(cDescCC2),1,40)
			@ Li,054 PSay "|"
			@ Li,072 PSay "|"
			@ Li,085 PSay "|"
			@ Li,098 PSay "|"
			@ Li,115 PSay "|"
			@ Li,131 PSay "|"
			dbSelectArea("TRB")
			While !Eof() .and. TRB->CCUSTO == cCODCUST .and. TRB->PCMSO == cPCMSO

				cCODFUNC := TRB->FUNCAO
				If Mv_par08 == 2
					SomaLinha(.t.)
					@ Li,000 PSay "|"
					dbSelectArea("SRJ")
					dbSetOrder(01)
					dbSeek(xFilial("SRJ")+cCODFUNC)
					@ Li,007 PSay Substr(SRJ->RJ_DESC,1,40)
					@ Li,054 PSay "|"
					@ Li,072 PSay "|"
					@ Li,085 PSay "|"
					@ Li,098 PSay "|"
					@ Li,115 PSay "|"
					@ Li,131 PSay "|"
				Endif

				dbSelectArea("TRB")
				While !Eof() .and. TRB->CCUSTO == cCODCUST .and. TRB->PCMSO == cPCMSO  .AND. If(Mv_par08==2,TRB->FUNCAO == cCODFUNC,.t.)
					cEXAME := TRB->EXAME
					SomaLinha(.t.)
					@ Li,000 PSay "|"
					dbSelectArea("TM4")
					dbSetOrder(01)
					dbSeek(xFilial('TM4')+cEXAME)
					If Mv_par08 == 2
						@ Li,013 PSay Substr(TM4->TM4_NOMEXA,1,40)
					Else
						@ Li,007 PSay Substr(TM4->TM4_NOMEXA,1,40)
					Endif
					@ Li,054 PSay "|"
					lPRIM := .T.
					dbSelectArea("TRB")
					While !Eof() .and. TRB->CCUSTO == cCODCUST .AND. TRB->EXAME == cEXAME .and. TRB->PCMSO == cPCMSO  .AND. If(Mv_par08==2,TRB->FUNCAO == cCODFUNC,.t.)
						IncRegua()

			             If !lPRIM
			                SomaLinha(.t.)
			                @ Li,000 PSay "|"
			                @ Li,054 PSay "|"
			             Endif
			             lPRIM := .F.
			             nANORMAL := 0.00
			             If TRB->EXAANOR > 0
			                nANORMAL := (TRB->EXAANOR * 100) / TRB->EXAREAL
			             Endif

						If TRB->TIPO == 1
							If (nIND := aScan(aTM5combo,{|x| Upper(Substr(x,1,1)) == Substr(TRB->NATUREZ,1,1)})) > 0
								@ Li,055 PSAY Substr(aTM5combo[nIND],3,17) PICTURE "@!"
							Endif
						Else
							If (nIND := aScan(aTMYcombo,{|x| Upper(Substr(x,1,1)) == Substr(TRB->NATUREZ,1,1)})) > 0
								@ Li,055 PSAY Substr(aTMYcombo[nIND],3,17) PICTURE "@!"
							Endif
						Endif
						@ Li,072 PSay "|"
						@ Li,076 PSay TRB->EXAREAL                                PICTURE "@E 99,999"
						@ Li,085 PSay "|"
						@ Li,089 PSay TRB->EXAANOR                                PICTURE "@E 99,999"
						@ Li,098 PSay "|"
						@ Li,103 PSay nANORMAL                                    PICTURE "@E 999.99"
						@ Li,115 PSay "|"
						If mv_par10 == 1 .or. ( mv_par10 == 3 .and. Substr(TRB->NATUREZ,1,1) == "2" )
							@ Li,120 PSay ROUND(TRB->EXAREAL*MV_PAR07,0) PICTURE "@E 99,999"
						Endif
						@ Li,131 PSay "|"
						dbSelectArea("TRB")
						dbskip()
					End
				End
			End
		End
		If lTTRB
			SomaLinha()
			@ Li,000 PSay "|_____________________________________________________|_________________|____________|____________|________________|_______________|"
		Endif
	End

Else

	If lMV_NGMDTPS
		If Substr(Mv_par03,1,6) != Substr(Mv_par04,1,6) .or.;
		                     len(alltrim(Mv_par03)) < 6 .or. ;
		                     len(alltrim(Mv_par04)) < 6

			MsgStop(STR0031+; //"Essa empresa esta cadastrada como Prestadora de Servico, portanto as 6 primeiras "
	    			STR0032+; //"posicoes dos parametros: 'De Centro de Custo' e 'Ate Centro de Custo' referem-se "
	    			STR0033)  //"ao codigo do cliente e devem ser preenchidas com o mesmo valor."
	  		Return .f.
		Endif
	Endif

	aDBF := {}
	AADD(aDBF,{"PCMSO"  ,"C",06,0})
	AADD(aDBF,{"FILIAL" ,"C",Len(TMW->TMW_FILIAL),0})
	AADD(aDBF,{"CCUSTO" ,"C",nSizeSI3,0})
		AADD(aDBF,{"DEPTO"  ,"C",nSizeSQB,0})
	AADD(aDBF,{"FUNCAO" ,"C",nSizeSRJ,0})
	AADD(aDBF,{"EXAME"  ,"C",nTamExa,0})
	AADD(aDBF,{"NATUREZ","C",01,0})
	AADD(aDBF,{"EXAREAL","N",10,2})
	AADD(aDBF,{"EXAANOR","N",10,2})
	AADD(aDBF,{"TIPO"   ,"N",01,0})

	oTempTable := FWTemporaryTable():New( "TRB", aDBF )
		If mv_par12 == 1
	#IFDEF CDX
		oTempTable:AddIndex( "1", {"PCMSO","FILIAL","CCUSTO","EXAME","NATUREZ"} )
		oTempTable:AddIndex( "2", {"PCMSO","FILIAL","CCUSTO","FUNCAO","EXAME","NATUREZ"} )
	#ELSE
		oTempTable:AddIndex( "1", {"PCMSO","FILIAL","CCUSTO","EXAME","NATUREZ"} )
		oTempTable:AddIndex( "2", {"PCMSO","FILIAL","CCUSTO","FUNCAO","EXAME","NATUREZ"} )
	#ENDIF
		Else
			#IFDEF CDX
				oTempTable:AddIndex( "1", {"PCMSO","FILIAL","DEPTO","EXAME","NATUREZ"} )
				oTempTable:AddIndex( "2", {"PCMSO","FILIAL","DEPTO","FUNCAO","EXAME","NATUREZ"} )
			#ELSE
				oTempTable:AddIndex( "1", {"PCMSO","FILIAL","DEPTO","EXAME","NATUREZ"} )
				oTempTable:AddIndex( "2", {"PCMSO","FILIAL","DEPTO","FUNCAO","EXAME","NATUREZ"} )
		#ENDIF
	EndIf

	oTempTable:Create()

	cC_Custo := ""
	c_Funcao := ""
	cKeyExame := ""
	nIndTRB := 0
		c_Depto := ""
		cKeyExame := If(mv_par12==1,If(Mv_par06==2,"cC_Custo+c_Funcao","cC_Custo"),If(Mv_par06==2,"c_Depto+c_Funcao","c_Depto"))
	nIndTRB   := If(Mv_par06==2,2,1)

	//  Ver modelo do relatorio no final desta definicao

	lTMY_Fil  := .F.
	aFilRelat := {}
	If lTMW_Filial .and. !Empty(xFilial("TM5"))
		aAreaSM0 := SM0->(GetArea())
		dbSelectArea("SM0")
		dbGoTop()
		If Empty(Mv_par09)
			dbSeek(cEmpAnt)
		Else
			dbSeek(cEmpAnt+Mv_par09)
		Endif
		While !Eof() .and. SM0->M0_CODIGO == cEmpAnt .and. SM0->M0_CODFIL <= Mv_par10
			aAdd( aFilRelat , { SM0->M0_CODFIL , SM0->M0_NOME } )
			dbSkip()
		End
		RestArea(aAreaSM0)
		If !Empty(xFilial("TMY"))
			lTMY_Fil := .T.
		Endif
	Else
		aAdd( aFilRelat , { cFilAnt , SM0->M0_NOME } )
	Endif

	dbSelectArea("TMW")
	dbSetOrder(01)
	dbSeek(xFilial("TMW")+MV_PAR01,.t.)

	SetRegua(LastRec())

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Correr TMW para ler os  Atestados                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	While !Eof() .AND. TMW->TMW_FILIAL == xfilial("TMW");
	             .AND. TMW->TMW_PCMSO <= MV_PAR02

		IncRegua()

		For nXYZ := 1 To Len(aFilRelat)
			dbSelectArea("TM5")
			dbSetOrder(03)
			aFilRelat[nXYZ,1] := PadR(AllTrim(aFilRelat[nXYZ,1]) , len(TM5->TM5_FILIAL))
				dbSeek( xFilial( "TM5",aFilRelat[nXYZ,1] ) + TMW->TMW_PCMSO )
			While !Eof() .AND. TM5->TM5_FILIAL == xFilial("TM5",aFilRelat[nXYZ,1]) .AND. TM5->TM5_PCMSO == TMW->TMW_PCMSO

				If !Empty(TM5->TM5_FILFUN)
					If lTMW_Filial
						If TM5->TM5_FILFUN < Mv_par09 .or. TM5->TM5_FILFUN > Mv_par10
							dbSelectArea("TM5")
							dbskip()
							Loop
						Endif
					Else
						If TM5->TM5_FILFUN <> aFilRelat[nXYZ,1]
							dbSelectArea("TM5")
							dbskip()
							Loop
						Endif
					Endif
				Endif
				cC_Custo := Space(nSizeSI3)
				c_Funcao := Space(nSizeSRJ)
					c_Depto := Space(nSizeSQB)
				If Empty(cC_Custo := fCUSTOASO(TM5->TM5_NUMFIC,TM5->TM5_DTPROG,TM5->TM5_FILFUN))
					dbselectarea("TM5")
					dbskip()
					Loop
				Endif
				If Empty(c_Funcao := fFUNCAOASO(TM5->TM5_NUMFIC,TM5->TM5_DTPROG,TM5->TM5_FILFUN)) .and. Mv_par06 == 2
					dbselectarea("TM5")
					dbskip()
					Loop
				Endif
					If Empty(c_Depto := fGetDepto(TM5->TM5_NUMFIC,TM5->TM5_DTPROG,TM5->TM5_FILFUN )) .And. Mv_par12 == 2
						dbSelectArea("TM5")
							dbSkip()
							Loop
					Endif
				If !Empty(TM5->TM5_DTRESU) .and. cC_Custo >= Mv_par03 .and. cC_Custo <= Mv_par04 .and. ;
						c_Depto >= mv_par13 .And. c_Depto <= mv_par14 .And. ;
					  ( Alltrim( TM5->TM5_EXAME ) != "NR7" .Or. ( Mv_par07 == 1 .And. ( Empty(TM5->TM5_NUMASO ) .Or. MV_Par15 == 2  ) ) )

					//Realiza a soma dos totalizadores
					If ( nPosExa := aScan( aTotExa , { | x | x[ _nPosFilFun ] == TM5->TM5_FILFUN .AND. x[ _nPosCodExa ] == TM5->TM5_EXAME } ) ) == 0
						aAdd( aTotExa , { TM5->TM5_FILFUN , TM5->TM5_EXAME , 0 /*Exames Realizados*/ , 0 /*Exames Anormais*/ } )
						nPosExa := Len( aTotExa )
					EndIf
					If ( nPosNat := aScan( aTotNat , { | x | x[ _nPosFilFun ] == TM5->TM5_FILFUN .AND. x[ _nPosCodNat ] == TM5->TM5_NATEXA .And. x[ _nPosNatExa ] == TM5->TM5_EXAME } ) ) == 0
						aAdd( aTotNat , { TM5->TM5_FILFUN , TM5->TM5_NATEXA , TM5->TM5_EXAME , 0 /*Exames Realizados*/ , 0 /*Exames Anormais*/ } )
						nPosNat := Len( aTotNat )
					EndIf
					aTotExa[ nPosExa , _nPosExaRea ]++
					aTotNat[ nPosNat , _nPosNatRea ]++

					dbSelectArea("TRB")
					dbsetorder(nIndTRB)
					If !dbSeek(TM5->TM5_PCMSO+TM5->TM5_FILFUN+&(cKeyExame)+TM5->TM5_EXAME+TM5->TM5_NATEXA)
						TRB->(DbAppend())
						TRB->PCMSO   := TM5->TM5_PCMSO
						TRB->FILIAL  := TM5->TM5_FILFUN
						TRB->CCUSTO  := cC_Custo
						TRB->FUNCAO  := c_Funcao
							TRB->DEPTO	 := c_Depto
						TRB->EXAME   := TM5->TM5_EXAME
						TRB->NATUREZ := TM5->TM5_NATEXA
						TRB->TIPO    := 1
					Endif
					TRB->EXAREAL := TRB->EXAREAL + 1
					If TM5->TM5_INDRES = '2'
						TRB->EXAANOR := TRB->EXAANOR + 1
						aTotExa[ nPosExa , _nPosExaAno ]++
						aTotNat[ nPosNat , _nPosNatAno ]++
					Endif
				Endif
				dbSelectArea("TM5")
				dbskip()
			End

			If ( nXYZ == 1 .or. lTMY_Fil ) .And. MV_Par15 == 1
				dbSelectArea("TMY")
				dbSetOrder(1)
				aFilRelat[nXYZ,1] := PadR(AllTrim(aFilRelat[nXYZ,1]) , len(TMY->TMY_FILIAL))
				dbSeek(xFilial("TMY",aFilRelat[nXYZ,1]))
				While !Eof() .AND. TMY->TMY_FILIAL == xfilial("TMY",aFilRelat[nXYZ,1]) .and. Mv_par07 == 1
					cC_Custo := Space(nSizeSI3)
					c_Funcao := Space(nSizeSRJ)
					If TMY->TMY_DTPROG < TMW->TMW_DTINIC .or. TMY->TMY_DTPROG > TMW->TMW_DTFIM
						dbSelectArea("TMY")
						dbSkip()
						Loop
					Endif
					If Empty(cC_Custo := fCUSTOASO(TMY->TMY_NUMFIC,TMY->TMY_DTPROG,aFilRelat[nXYZ,1] ))
						dbSelectArea("TMY")
						dbSkip()
						Loop
					Endif
					If Empty(c_Funcao := fFUNCAOASO(TMY->TMY_NUMFIC,TMY->TMY_DTPROG,aFilRelat[nXYZ,1] )) .and. Mv_par06 == 2
						dbSelectArea("TMY")
						dbSkip()
						Loop
					Endif
						If Empty(c_Depto := fGetDepto(TMY->TMY_NUMFIC,TMY->TMY_DTPROG,aFilRelat[nXYZ,1] )) .And. Mv_par12 == 2
							dbSelectArea("TMY")
							dbSkip()
							Loop
						Endif

					If cC_Custo >= Mv_par03 .and. cC_Custo <= Mv_par04 .And. ;
						 	c_Depto >= mv_par13 .And. c_Depto <= mv_par14

						//Realiza a soma dos totalizadores
						If ( nPosExa := aScan( aTotExa , { | x | x[ _nPosFilFun ] == aFilRelat[nXYZ,1] .AND. x[ _nPosCodExa ] == PadR( "NR7" , Len( TM5->TM5_EXAME ) ) } ) ) == 0
							aAdd( aTotExa , { aFilRelat[nXYZ,1] , PadR( "NR7" , Len( TM5->TM5_EXAME ) ) , 0 /*Exames Realizados*/ , 0 /*Exames Anormais*/ } )
							nPosExa := Len( aTotExa )
						EndIf
						If ( nPosNat := aScan( aTotNat , { | x | x[ _nPosFilFun ] == aFilRelat[nXYZ,1] .AND. x[ _nPosCodNat ] == TMY->TMY_NATEXA .And. x[ _nPosNatExa ] == PadR( "NR7" , Len( TM5->TM5_EXAME ) ) } ) ) == 0
							aAdd( aTotNat , { aFilRelat[nXYZ,1] , TMY->TMY_NATEXA , PadR( "NR7" , Len( TM5->TM5_EXAME ) ) , 0 /*Exames Realizados*/ , 0 /*Exames Anormais*/ } )
							nPosNat := Len( aTotNat )
						EndIf
						aTotExa[ nPosExa , _nPosExaRea ]++
						aTotNat[ nPosNat , _nPosNatRea ]++

						dbSelectArea("TRB")
						dbSetOrder(nIndTRB)
						If !dbSeek(TMW->TMW_PCMSO+aFilRelat[nXYZ,1]+&(cKeyExame)+"NR7"+Space(nTamExa-3)+TMY->TMY_NATEXA)
							TRB->(DbAppend())
							TRB->PCMSO   := TMW->TMW_PCMSO
							TRB->FILIAL  := aFilRelat[nXYZ,1]
							TRB->CCUSTO  := cC_Custo
							TRB->FUNCAO  := c_Funcao
								TRB->DEPTO	 := c_Depto
							TRB->EXAME   := "NR7"
							TRB->NATUREZ := TMY->TMY_NATEXA
							TRB->TIPO    := 2
						Endif
						TRB->EXAREAL := TRB->EXAREAL + 1
						If TMY->TMY_INDPAR = '2'
							TRB->EXAANOR := TRB->EXAANOR + 1
							aTotExa[ nPosExa , _nPosExaAno ]++
							aTotNat[ nPosNat , _nPosNatAno ]++
						Endif
					Endif
					dbSelectArea("TMY")
					dbSkip()
				End
			Endif
		Next nXYZ

		dbSelectArea("TMW")
		dbSkip()
	End

	dbSelectArea("TRB")
	dbSetOrder(nIndTRB)
	dBGOTOP()
	SetRegua(LastRec())
	lTTRB := .F.
	While !eof()

		lTTRB := .T.
		cPCMSO := TRB->PCMSO
		dbSelectArea("TMW")
		dbSetOrder(1)
		dbSeek(xFilial("TMW")+cPCMSO)
		dINICIO := TMW->TMW_DTINIC
		dFIM    := TMW->TMW_DTFIM
		cCODUSU := TMW->TMW_CODUSU
		li := 80
		lFirst := .t.
		SomaLinha()
		@ Li,001 PSay Replicate("_",130)
		SomaLinha()
		@ Li,000 PSay "|"
		If lMV_NGMDTPS
			dbSelectArea("SA1")
			dbSetOrder(1)
			dbSeek(xFilial("SA1")+Substr(TRB->CCUSTO,1,6))
			@ Li,001 PSay Substr(SA1->A1_NOME,1,40)
		Else
			@ Li,001 PSay Substr(sm0->m0_nome,1,40)
		Endif
		@ Li,050 PSay STR0018+TRB->PCMSO    //"Relatorio do PCMSO.:"
		@ Li,096 PSay STR0019 //"Periodo:"
		@ Li,107 PSay dINICIO PICTURE '99/99/99'
		@ Li,118 PSay "a"
		@ Li,120 PSay dFIM PICTURE '99/99/99'
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay "|SIGA/MDTR475"
		@ Li,096 PSay STR0020 //"Emissao:"
		@ Li,107 PSay dDataBase PICTURE '99/99/99'
		@ Li,118 PSay time()    PICTURE "99:99"
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay "|"
		@ Li,001 PSay Replicate("_",130)
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay STR0008 //"|Responsavel.....:"
		dbSelectArea("TMK")
		dbSetOrder(01)
		dbSeek(xFilial('TMK')+cCODUSU)
		@ Li,019 PSay Substr(TMK->TMK_NOMUSU,1,50)
		@ Li,096 PSay If(Empty(TMK->TMK_ENTCLA),"CRM",Alltrim(TMK->TMK_ENTCLA))+": "+ Alltrim(TMK->TMK_NUMENT)
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay "|"
		@ Li,131 PSay "|"
		SomaLinha()
		@ Li,000 PSay STR0027 //"|Assinatura......: _________________________________________________"
		@ Li,096 PSay STR0021 //"Data:"
		@ Li,107 PSay dDataBase PICTURE '99/99/99'
		@ Li,131 PSay "|"
		Somalinha()
		@ Li,000 PSay "|"
		@ Li,001 PSay Replicate("_",130)
		@ Li,131 PSay "|"
		CABEC475()
		dbSelectArea("TRB")
		While !Eof() .and. TRB->PCMSO == cPCMSO
			cCODFIL := TRB->FILIAL
			If lTMW_Filial
				aAreaSM0 := SM0->(GetArea())
				dbSelectArea("SM0")
				dbGoTop()
				dbSeek(cEmpAnt+TRB->FILIAL)
				cDesFil := " - " + Upper( Substr( SM0->M0_NOME , 1 , 40 ) )
				RestArea(aAreaSM0)
				SomaLinha(.t.)
				@ Li,000 PSay "|                                                     |                 |            |            |                |               |"
				SomaLinha(.t.)
				@ Li,000 PSay "|"
				@ Li,001 PSay STR0028+": "+Alltrim(cCODFIL) + cDesFil //"FILIAL"
				@ Li,055 PSay "|"
				@ Li,073 PSay "|"
				@ Li,086 PSay "|"
				@ Li,099 PSay "|"
				@ Li,116 PSay "|"
				@ Li,132 PSay "|"
				SomaLinha(.t.)
				@ Li,000 PSay "|                                                     |                 |            |            |                |               |"
			Endif
			dbSelectArea("TRB")
			While !Eof() .and. TRB->FILIAL == cCODFIL ;
						.and. TRB->PCMSO == cPCMSO
					cCODCUST :=  If(mv_par12==1,TRB->CCUSTO,TRB->DEPTO)
				SomaLinha(.t.)
				@ Li,000 PSay "|"

					If mv_par12 == 1
				dbSelectArea(cAliasCC)
				dbSetOrder(01)
				dbSeek(xFilial(cAliasCC,cCODFIL)+cCODCUST)
				If lTMW_Filial
					@ Li,004 PSay Substr(&(cDescCC2),1,40)
				Else
					@ Li,001 PSay Substr(&(cDescCC2),1,40)
				Endif
					Else
						dbSelectArea("SQB")
						dbSetOrder(01)
						dbSeek(xFilial("SQB",cCODFIL)+cCODCUST)
						If lTMW_Filial
							@ Li,004 PSay Substr(SQB->QB_DESCRIC,1,40)
						Else
							@ Li,001 PSay Substr(SQB->QB_DESCRIC,1,40)
						Endif
					EndIf
				@ Li,054 PSay "|"
				@ Li,072 PSay "|"
				@ Li,085 PSay "|"
				@ Li,098 PSay "|"
				@ Li,115 PSay "|"
				@ Li,131 PSay "|"
				dbSelectArea("TRB")
				While !Eof() .and. TRB->FILIAL == cCODFIL ;
					.and. If(mv_par12==1,TRB->CCUSTO == cCODCUST,TRB->DEPTO == cCODCUST);
							.and. TRB->PCMSO == cPCMSO

					cCODFUNC := TRB->FUNCAO
					If Mv_par06 == 2
						SomaLinha(.t.)
						@ Li,000 PSay "|"
						dbSelectArea("SRJ")
						dbSetOrder(01)
						dbSeek(xFilial("SRJ",cCODFIL)+cCODFUNC)
						@ Li,007 PSay Substr(SRJ->RJ_DESC,1,40)
						@ Li,054 PSay "|"
						@ Li,072 PSay "|"
						@ Li,085 PSay "|"
						@ Li,098 PSay "|"
						@ Li,115 PSay "|"
						@ Li,131 PSay "|"
					Endif

					dbSelectArea("TRB")
					While !Eof() .and. TRB->FILIAL == cCODFIL ;
						.and. If(mv_par12==1,TRB->CCUSTO == cCODCUST,TRB->DEPTO == cCODCUST) ;
								.and. TRB->PCMSO == cPCMSO  .AND. If(Mv_par06==2,TRB->FUNCAO == cCODFUNC,.t.)

						cEXAME := TRB->EXAME
						SomaLinha(.t.)
						@ Li,000 PSay "|"
						dbSelectArea("TM4")
						dbSetOrder(01)
						dbSeek(xFilial('TM4',cCODFIL)+cEXAME)
						If Mv_par06 == 2
							@ Li,013 PSay Substr(TM4->TM4_NOMEXA,1,40)
						Else
							@ Li,007 PSay Substr(TM4->TM4_NOMEXA,1,40)
						Endif
						@ Li,054 PSay "|"
						lPRIM := .T.
						dbSelectArea("TRB")
						While !Eof() .and. TRB->FILIAL == cCODFIL ;
							.and. If(mv_par12==1,TRB->CCUSTO == cCODCUST,TRB->DEPTO == cCODCUST) .AND. TRB->EXAME == cEXAME ;
									.and. TRB->PCMSO == cPCMSO  .AND. If(Mv_par06==2,TRB->FUNCAO == cCODFUNC,.t.)

							IncRegua()
							#IFNDEF WINDOWS
								If LastKey() = 286    //ALT_A
									lEnd := .t.
								Endif
							#ENDIF
							If lEnd
								@ PROW()+1,001 PSay STR0012 //"CANCELADO PELO OPERADOR"
								Exit
							EndIf
							If !lPRIM
								SomaLinha(.t.)
								@ Li,000 PSay "|"
								@ Li,054 PSay "|"
							Endif
							lPRIM := .F.
							nANORMAL := 0.00
							If TRB->EXAANOR > 0
								nANORMAL := (TRB->EXAANOR * 100) / TRB->EXAREAL
							Endif
							If TRB->TIPO == 1
								If (nIND := aScan(aTM5combo,{|x| Upper(Substr(x,1,1)) == Substr(TRB->NATUREZ,1,1)})) > 0
									@ Li,055 PSAY Substr(aTM5combo[nIND],3,17) PICTURE "@!"
								Endif
							Else
								If (nIND := aScan(aTMYcombo,{|x| Upper(Substr(x,1,1)) == Substr(TRB->NATUREZ,1,1)})) > 0
									@ Li,055 PSAY Substr(aTMYcombo[nIND],3,17) PICTURE "@!"
								Endif
							Endif
							@ Li,072 PSay "|"
							@ Li,076 PSay TRB->EXAREAL                                PICTURE "@E 99,999"
							@ Li,085 PSay "|"
							@ Li,089 PSay TRB->EXAANOR                                PICTURE "@E 99,999"
							@ Li,098 PSay "|"
							@ Li,103 PSay nANORMAL                                    PICTURE "@E 999.99"
							@ Li,115 PSay "|"
							If mv_par08 == 1 .or. ( mv_par08 == 3 .and. Substr(TRB->NATUREZ,1,1) == "2" )
								@ Li,120 PSay ROUND(TRB->EXAREAL*MV_PAR05,0) PICTURE "@E 99,999"
							Endif
							@ Li,131 PSay "|"
							dbSelectArea("TRB")
							dbskip()
						End
					End
				End
			End
		End
		If lTTRB
			SomaLinha()
			@ Li,000 PSay "|_____________________________________________________|_________________|____________|____________|________________|_______________|"
		Endif
	End
	//---------------------------------------------------------------//
	// 				IMPRESSÃO DOS TOTALIZADORES						 //
	//---------------------------------------------------------------//
	If !Empty(mv_par11) .OR. mv_par11 <> 4
		aSort( aTotExa , , , { | x , y | x[ _nPosFilFun ] + x[ _nPosCodExa ] < y[ _nPosFilFun ] + y[ _nPosCodExa ] } )
		aSort( aTotNat , , , { | x , y | x[ _nPosFilFun ] + x[ _nPosCodNat ] + x[ _nPosNatExa ] < y[ _nPosFilFun ] + y[ _nPosCodNat ] + y[ _nPosNatExa ] } )
		If mv_par11 == 2 .OR. mv_par11 == 1 //2 - Natureza de Exame //1 - Todos
			//-----Cabeçalho-----//
			Li := 75
			lFirst := .F.
			SomaLinha()
			CABEC475("1")
			//-----Cabeçalho-----//
			//Totalizador por Natureza de Exame//
			nAtual 		:= 0
			nExaAnormal := 0
			nPrevisto 	:= 0
			cDescNat := ""
			cFilAux  := ""
			For nCntTot := 1 To Len( aTotNat )
				cDescAux := cDescNat
				//Define natureza do exame
				Do Case
					Case aTotNat[ nCntTot , _nPosCodNat ] == "1"
						cDescNat := STR0054 //"ADMISSIONAL"
					Case aTotNat[ nCntTot , _nPosCodNat ] == "2"
						cDescNat := STR0055 //"PERIÓDICO"
					Case aTotNat[ nCntTot , _nPosCodNat ] == "3"
						cDescNat := STR0056 //"MUDANÇA DE FUNÇÃO"
					Case aTotNat[ nCntTot , _nPosCodNat ] == "4"
						cDescNat := STR0057 //"RETORNO AO TRABALHO"
					Case aTotNat[ nCntTot , _nPosCodNat ] == "5"
						cDescNat := STR0058 //"DEMISSIONAL"
					Case aTotNat[ nCntTot , _nPosCodNat ] == "6"
						cDescNat := STR0077 //"MONITORAÇÃO PONTUAL"
				EndCase
				If cFilAux <> cEmpAnt + aTotNat[ nCntTot , _nPosFilFun ]
					If !Empty(cFilAux)
						@ Li,000 PSay "|_______________________________|______________________________|____________|____________|____________|_______________|____________|"
						SomaLinha()
					EndIf
					cFilAux	 := cEmpAnt + aTotNat[ nCntTot , _nPosFilFun ]
					cFilDesc := aTotNat[ nCntTot , _nPosFilFun ] + SubStr( FWFilName( cEmpAnt , aTotNat[ nCntTot , _nPosFilFun ]) , 1 , 22 )
					cDescAux := ""
					@Li,000 Psay "|"
					@Li,001 Psay cFilDesc
					@ Li,032 PSay "|"
					@ Li,063 PSay "|"
					@ Li,076 PSay "|"
					@ Li,089 PSay "|"
					@ Li,102 PSay "|"
					@ Li,118 PSay "|"
					@ Li,131 PSay "|"
					SomaLinha()
				EndIf
				@ Li,000 PSay "|"
				If cDescAux <> cDescNat
					@ Li,006 PSay cDescNat
				EndIf
				nLinhasMemo := MLCOUNT(Alltrim( NGSeek( "TM4" , aTotNat[ nCntTot , _nPosNatExa ] , 1 , "TM4_NOMEXA" ) ),20)
				For nLinha := 1 to nLinhasMemo
					cNomeExa := MemoLine( Alltrim( NGSeek( "TM4" , aTotNat[ nCntTot , _nPosNatExa ] , 1 , "TM4_NOMEXA" ) ),20,nLinha)
					If nLinha > 1 //Caso não seja primeira linha
						@ Li,000 PSay "|"
					EndIf
					If !Empty(cNomeExa)
						@ Li,032 PSay "|"
						@ Li,037 PSay Alltrim(cNomeExa)
						@ Li,063 PSay "|"
					Else
						@ Li,032 PSay "|"
						@ Li,063 PSay "|"
					EndIf
					If nLinhasMemo > 1 .And. nLinhasMemo > nLinha//Caso seja maior que 1 linha e possua uma depois.
						@ Li,076 PSay "|"
						@ Li,089 PSay "|"
						@ Li,102 PSay "|"
						@ Li,118 PSay "|"
						@ Li,131 PSay "|"
						SomaLinha()
					EndIf
				Next nLinha
				@ Li,068 PSay CValToChar(aTotNat[ nCntTot , _nPosNatRea ])
				@ Li,076 PSay "|"
				@ Li,081 PSay CValToChar(aTotNat[ nCntTot , _nPosNatRea ] - aTotNat[ nCntTot , _nPosNatAno ])
				@ Li,089 PSay "|"
				@ Li,094 PSay CValToChar(aTotNat[ nCntTot , _nPosNatAno ])
				@ Li,102 PSay "|"
				nPercentual := Round( ( aTotNat[ nCntTot , _nPosNatAno ] * 100 ) / aTotNat[ nCntTot , _nPosNatRea ] , 0 )
				@ Li,107 PSay StrZero( nPercentual , 3 ) + " %"
				@ Li,118 PSay "|"
				//Verifica se imprime exames previstos de acordo com parâmetro MV_PAR08
				If mv_par08 == 3 //Exames periódicos
					nPreviAux := If(aTotNat[ nCntTot , _nPosCodNat ] == "2" , Round( aTotNat[ nCntTot , _nPosNatRea ] * MV_PAR05 , 0 ) , 0)
				ElseIf mv_par08 == 1 //Todos
					nPreviAux := Round( aTotNat[ nCntTot , _nPosNatRea ] * MV_PAR05 , 0 )
				ElseIf mv_par08 == 2 //Nenhum
					nPreviAux := 0
				EndIf
				@ Li,123 PSay CValToChar( nPreviAux )
				@ Li,131 PSay "|"
				/*
				"                                                                                                   1                                "
				"         1         2         3         4         5         6         7         8         9         0         1         2         3  "
				"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012"
				"|     Natureza do Exame         |     Tipo Exame               |   Exames   | Resultados | Resultados |  Percentual   |  Previsto  |"
				*/
				//Zera contadores para próximo exame
				nAtual 		+= aTotNat[ nCntTot , _nPosNatRea ]
				nExaAnormal += aTotNat[ nCntTot , _nPosNatAno ]
				nPrevisto 	+= nPreviAux
				//Imprime Total por Natureza
				If nCntTot < len( aTotNat )
					cProxNat := aTotNat[ nCntTot + 1 , _nPosCodNat ]
					cProxFil := aTotNat[ nCntTot + 1 , _nPosFilFun ]
				ElseIf nCntTot == len( aTotNat )
					lUltimo := .T.
					cProxNat := ""
					cProxFil := ""
				EndIf
				If aTotNat[ nCntTot , _nPosCodNat ] <> cProxNat .OR. aTotNat[ nCntTot , _nPosFilFun ] <> cProxFil .OR. lUltimo
					nAtualNat 	 := nAtual - nAtuCont
					nExaAnoNat 	 := nExaAnormal - nExaCont
					nPrevistoNat := nPrevisto - nPrevCont
					nAtuCont  += nAtualNat
					nExaCont  += nExaAnoNat
					nPrevCont += nPrevistoNat
					fEmptyLine(.T.)
					SomaLinha()
					//Imprime contadores
					@ Li,000 PSay "|"
					@ Li,032 PSay "|"
					@ Li,037 PSay STR0064 //"TOTAL NATUREZA"
					@ Li,063 PSay "|"
					@ Li,068 PSay CValToChar(nAtualNat)
					@ Li,076 PSay "|"
					@ Li,081 PSay CValToChar(nAtualNat - nExaAnoNat)
					@ Li,089 PSay "|"
					@ Li,094 PSay CValToChar(nExaAnoNat)
					@ Li,102 PSay "|"
					nPercentNat := Round( ( nExaAnoNat * 100 ) / nAtualNat , 0 )
					@ Li,107 PSay StrZero( nPercentNat , 3 ) + " %"
					@ Li,118 PSay "|"
					@ Li,123 PSay nPrevistoNat
					@ Li,131 PSay "|"
					fEmptyLine(.T.)
					SomaLinha()
				Else
					SomaLinha()
				EndIf
			Next nCntTot
			@ Li,000 PSay "|"
			//Imprime contadores
			@ Li,032 PSay "|"
			@ Li,037 PSay STR0059 //"TOTAL GERAL"
			@ Li,063 PSay "|"
			@ Li,068 PSay CValToChar(nAtual)
			@ Li,076 PSay "|"
			@ Li,081 PSay CValToChar(nAtual - nExaAnormal)
			@ Li,089 PSay "|"
			@ Li,094 PSay CValToChar(nExaAnormal)
			@ Li,102 PSay "|"
			nPercentual := ROUND((nExaAnormal * 100) / nAtual , 0)
			@ Li,107 PSay StrZero( nPercentual , 3 ) + " %"
			@ Li,118 PSay "|"
			@ Li,123 PSay nPrevisto
			@ Li,131 PSay "|"
			SomaLinha()
			@ Li,000 PSay "|_______________________________|______________________________|____________|____________|____________|_______________|____________|"
		//Totalizador por Tipo de Exame//
		EndIf
		If mv_par11 == 3 .OR. mv_par11 == 1 //3 - Tipo de Exame //1 - Todos
			//-----Cabeçalho-----//
			Li := 75
			lFirst := .F.
			SomaLinha()
			CABEC475("2")
			//-----Cabeçalho-----//
			nAtual 		:= 0
			nExaAnormal := 0
			nPrevisto 	:= 0
			//Totalizador por Exame//
			cDescExa := ""
			cFilAux  := ""
			For nCntTot := 1 To Len( aTotExa )
				cDescAux := cDescExa
				If cFilAux <> cEmpAnt + aTotExa[ nCntTot , _nPosFilFun ]
					If !Empty(cFilAux)
						@ Li,000 PSay "|______________________________________________________________|____________|____________|____________|_______________|____________|"
						SomaLinha()
					EndIf
					cFilAux	 := cEmpAnt + aTotExa[ nCntTot , _nPosFilFun ]
					cFilDesc := aTotExa[ nCntTot , _nPosFilFun ] + SubStr( FWFilName( cEmpAnt , aTotExa[ nCntTot , _nPosFilFun ]) , 1 , 22 )
					cDescAux := ""
					@Li,000 Psay "|"
					@Li,001 Psay cFilDesc
					@ Li,063 PSay "|"
					@ Li,076 PSay "|"
					@ Li,089 PSay "|"
					@ Li,102 PSay "|"
					@ Li,118 PSay "|"
					@ Li,131 PSay "|"
					SomaLinha()
				EndIf

				@ Li,000 PSay "|"
				cDescExa := NGSeek( "TM4" , aTotExa[ nCntTot , _nPosCodExa ] , 1 , "TM4_NOMEXA" )
				If cDescAux <> cDescExa
					@ Li,006 PSay cDescExa
				EndIf
				//Busca se o exame é de natureza periódica ou não
				nPeriodic := 0
				nPeriodic := aScan( aTotNat , { | x | x[_nPosFilFun] == aTotExa[ nCntTot , _nPosFilFun ] .AND. ;
									x[_nPosNatExa] == aTotExa[ nCntTot , _nPosCodExa ] .AND. x[_nPosCodNat] == "2" } )
				//Imprime contadores
				@ Li,063 PSay "|"
				@ Li,069 PSay CValToChar(aTotExa[ nCntTot , _nPosExaRea ])
				@ Li,076 PSay "|"
				@ Li,082 PSay CValToChar(aTotExa[ nCntTot , _nPosExaRea ] - aTotExa[ nCntTot , _nPosExaAno ])
				@ Li,089 PSay "|"
				@ Li,095 PSay CValToChar(aTotExa[ nCntTot , _nPosExaAno ])
				@ Li,102 PSay "|"
				nPercentual := ROUND((aTotExa[ nCntTot , _nPosExaAno ] * 100) / aTotExa[ nCntTot , _nPosExaRea ] , 0)
				@ Li,108 PSay StrZero( nPercentual , 3 ) + " %"
				@ Li,118 PSay "|"
				//Verifica se imprime exames previstos de acordo com parâmetro MV_PAR08
				If mv_par08 == 3 //Exames periódicos
					nPreviAux := If(nPeriodic > 0 , Round( aTotNat[ nPeriodic , _nPosNatRea ] * MV_PAR05 , 0 ) , 0)
				ElseIf mv_par08 == 1 //Todos
					nPreviAux := Round( aTotExa[ nCntTot , _nPosExaRea ] * MV_PAR05 , 0)
				ElseIf mv_par08 == 2 //Nenhum
					nPreviAux := 0
				EndIf
				@ Li,124 PSay CValToChar( nPreviAux )
				@ Li,131 PSay "|"
				/*
				"                                                                                                   1                                "
				"         1         2         3         4         5         6         7         8         9         0         1         2         3  "
				"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012"
				"|     Tipo Exame                                               |   Exames   | Resultados | Resultados |  Percentual   |  Previsto  |"
				*/
				//Zera contadores para próximo exame
				nAtual 		+= aTotExa[ nCntTot , _nPosExaRea ]
				nExaAnormal += aTotExa[ nCntTot , _nPosExaAno ]
				nPrevisto 	+= nPreviAux
				SomaLinha()
			Next nCntTot
			@ Li,000 Psay "|"
			@ Li,063 PSay "|"
			@ Li,076 PSay "|"
			@ Li,089 PSay "|"
			@ Li,102 PSay "|"
			@ Li,118 PSay "|"
			@ Li,131 PSay "|"
			SomaLinha()
			@ Li,000 PSay "|"
			@ Li,006 PSay STR0059 //"TOTAL GERAL"
			//Imprime contadores
			@ Li,063 PSay "|"
			@ Li,069 PSay CValToChar(nAtual)
			@ Li,076 PSay "|"
			@ Li,082 PSay CValToChar(nAtual - nExaAnormal)
			@ Li,089 PSay "|"
			@ Li,095 PSay CValToChar(nExaAnormal)
			@ Li,102 PSay "|"
			nPercentual := ROUND((nExaAnormal * 100) / nAtual , 0)
			@ Li,108 PSay StrZero( nPercentual , 3 ) + " %"
			@ Li,118 PSay "|"
			@ Li,124 PSay nPrevisto
			@ Li,131 PSay "|"
			SomaLinha()
			@ Li,000 PSay "|______________________________________________________________|____________|____________|____________|_______________|____________|"
		EndIf
	EndIf


Endif

//EJECT

dbSelectArea("TRB")
dbGotop()
If RecCount()==0
	MsgInfo(STR0029) //"Não há nada para imprimir no relatório."
	oTempTable:Delete()
	RetIndex("TMW")
	Set Filter To
	Set device to Screen
	Return .F.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Devolve a condicao original do arquivo principal             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RetIndex("TMW")

Set Filter To

Set device to Screen

If aReturn[5] = 1
	Set Printer To
	dbCommitAll()
	OurSpool(wnrel)
Endif
//SET CENTURY ON

MS_FLUSH()
oTempTable:Delete()
dbSelectArea("TMW")

Return NIL
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡…o   ³ CABEC475 ³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡…o³ Imprime o cabeçalho.                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
/*/
Function CABEC475(cCabec)

   Default cCabec := ""

   If lFirst
   	   lFirst := .f.
   Else
   	   @ Li,001 PSay Replicate("_",130)
   EndIf
   SomaLinha()
   If Empty(cCabec)
	   If lSigaMdtps
		   If Mv_par08 == 2
			   @ Li,000 PSay STR0011 //"|Setor/Funcao/Exame                                   |    Natureza     |   Exames   | Resultados | Anormais x 100 | Exames p/Ano  |"
		   Else
			   @ Li,000 PSay STR0022 //"|Setor/Exame                                          |    Natureza     |   Exames   | Resultados | Anormais x 100 | Exames p/Ano  |"
		   Endif
	   Else
		   If Mv_par06 == 2
			   @ Li,000 PSay STR0011 //"|Setor/Funcao/Exame                                   |    Natureza     |   Exames   | Resultados | Anormais x 100 | Exames p/Ano  |"
		   Else
			   @ Li,000 PSay STR0022 //"|Setor/Exame                                          |    Natureza     |   Exames   | Resultados | Anormais x 100 | Exames p/Ano  |"
		   Endif
	   Endif
	   SomaLinha()
	   @ Li,000 PSay STR0030 //"|                                                     |                 | Realizados |  Anormais  |  /Realizados   |   Seguinte    |"
	   SomaLinha()
	   @ Li,000 PSay "|_____________________________________________________|_________________|____________|____________|________________|_______________|"
   Else
   		If cCabec == "1" //Natureza do exame
			@ Li,000 PSay STR0060 //"|     Natureza do Exame         |     Tipo Exame               |   Exames   | Resultados | Resultados |  Percentual   |  Previsto  |"
			SomaLinha()
			@ Li,000 PSay STR0061 //"|                               |                              | Realizados |   Normais  |  Alterados |   Alterados   |            |"
			SomaLinha()
			@ Li,000 PSay "|_______________________________|______________________________|____________|____________|____________|_______________|____________|"
			SomaLinha()
		ElseIf cCabec == "2"
			@ Li,000 PSay STR0062 //"|     Tipo Exame                                               |   Exames   | Resultados | Resultados |  Percentual   |  Previsto  |"
			SomaLinha()
			@ Li,000 PSay STR0063 //"|                                                              | Realizados |   Normais  |  Alterados |   Alterados   |            |"
			SomaLinha()
			@ Li,000 PSay "|______________________________________________________________|____________|____________|____________|_______________|____________|"
			SomaLinha()
   		EndIf
   EndIf
Return .t.
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡…o   ³ SomaLinha³ Autor ³ Inacio Luiz Kolling   ³ Data ³   /06/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡…o³ Incrementa Linha e Controla Salto de Pagina                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe  ³ SomaLinha()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MDTR405                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
/*/
Static Function Somalinha(lCabeca)
    Li++
    If Li > 75
	    If lCabeca
	    	@ Li,000 PSay "|_____________________________________________________|_________________|____________|____________|________________|_______________|"
        Endif
        Cabec(titulo,cabec1,cabec2,nomeprog,tamanho,nTipo)
        If lCabeca
	        CABEC475()
	    Endif
        Somalinha()
    EndIf
Return

/*
          1         2         3         4         5         6         7         8         9         0         1         2         3
0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³<XXXXXXXXXXXXXXX>      Relatorio anual do PCMSO   Periodo: dd/mm/aa a dd/dd/aa 														   ³
³SIGA/MDTR475                                      Emissao: dd/mm/aa   hh:mm    														   ³
ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ³
³Responsavel.....: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx          CRM.: xxxxxxxxxxx    														   ³
³                                                                               														   ³
³Assinatura......: _____________________________           Data: xx/xx/xx       														   ³
ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
|Setor/Funcao/Exame                                   |    Natureza     |   Exames   | Resultados | Anormais x 100 | Exames p/Ano  |
³                                                     ³                 ³ Realizados ³  Anormais  ³  /Realizados   ³   Seguinte    ³
|_____________________________________________________|_________________|____________|____________|________________|_______________|
³XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX             ³                 ³            ³            ³                ³               ³
³      XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX       ³                 ³            ³            ³                ³               ³
³             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX³ Demiss          ³   99.999   ³   99.999   ³    999.99      ³    99.999     ³
³                                                     ³ Retorno         ³   99.999   ³   99.999   ³    999.99      ³    99.999     ³
³                                                     ³ Mudanca         ³   99.999   ³   99.999   ³    999.99      ³    99.999     ³
³                                                     ³ Periodico       ³   99.999   ³   99.999   ³    999.99      ³    99.999     ³
|_____________________________________________________|_________________|____________|____________|________________|_______________|
*/
Function MDT475PREX1()
Local lRet

lRet := If(Empty(mv_par03),.t.,ExistCpo(cAliasCC,mv_par03))
If !lRet
	Return .f.
Endif

If lMV_NGMDTPS
	If Empty(mv_par03)
		MsgStop(STR0031+; //"Essa empresa esta cadastrada como Prestadora de Servico, portanto as 6 primeiras "
    			STR0032+; //"posicoes dos parametros: 'De Centro de Custo' e 'Ate Centro de Custo' referem-se "
    			STR0033)  //"ao codigo do cliente e devem ser preenchidas com o mesmo valor."
		Return .f.
	Endif
Endif
Return .t.
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Function PREX2MDT475()
Local cVar3 := Substr(mv_par03,1,6)
Local cVar4 := Substr(mv_par04,1,6)
Local lRet

lRet := If(atecodigo(cAliasCC,mv_par03,mv_par04,nSizeSI3),.t.,.f.)
If !lRet
	Return .f.
Endif

If lMV_NGMDTPS
	If Empty(mv_par04) .or. (!Empty(cVar3) .and. (cVar3 != cVar4))
		MsgStop(STR0031+; //"Essa empresa esta cadastrada como Prestadora de Servico, portanto as 6 primeiras "
    			STR0032+; //"posicoes dos parametros: 'De Centro de Custo' e 'Ate Centro de Custo' referem-se "
    			STR0033)  //"ao codigo do cliente e devem ser preenchidas com o mesmo valor."
		Return .f.
	Endif
Endif
Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fCUSTOASO ³ Autor ³Denis Hyroshi de Souza ³ Data ³11/11/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Busca a funcao  do funcionario na epoca do exame ou aso    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MDTR475                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fFUNCAOASO(cNUMFIC,__dDTPROG,_cFilial)
Local cFuncao  := Space(nSizeSRJ)
Local dDTPROG  := stod(Space(8))

Default _cFilial := cFilAnt

Dbselectarea("TM0")
Dbsetorder(1)
If Dbseek(xFilial("TM0",_cFilial)+cNUMFIC)
	cFuncao := TM0->TM0_CODFUN
	Dbselectarea("SRA")
	Dbsetorder(1)
	If Dbseek(xFilial("SRA",_cFilial)+TM0->TM0_MAT)
		cFuncao := If(Empty(cFuncao),SRA->RA_CODFUNC,cFuncao)

		Dbselectarea("SR7")
		Dbsetorder(1)
		Dbseek(SRA->RA_FILIAL+TM0->TM0_MAT)
		While !eof() .and. SR7->R7_FILIAL == SRA->RA_FILIAL .And.	SR7->R7_MAT == SRA->RA_MAT
			If SR7->R7_DATA <= __dDTPROG .and. (SR7->R7_DATA > dDTPROG .or. Empty(dDTPROG))
				dDTPROG := SR7->R7_DATA
				cFuncao := SR7->R7_FUNCAO
			Endif
			Dbselectarea("SR7")
			Dbskip()
		End
	Endif
Endif
Return cFuncao
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fCUSTOASO ³ Autor ³Denis Hyroshi de Souza ³ Data ³11/11/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Busca o centro de custo do funcionario na epoca do ASO/Exame³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MDTR475                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fCUSTOASO(cNUMFIC,__dDTPROG,_cFilial)
Local cCentroC  := Space(nSizeSI3)
Local cCentroC2 := Space(nSizeSI3)
Local dDTPROG   := stod(Space(8))
Local dDTINIC   := stod(Space(8))
Local lFirst    := .t.

Default _cFilial := cFilAnt

Dbselectarea("TM0")
Dbsetorder(1)
If Dbseek(xFilial("TM0",_cFilial)+cNUMFIC)
	cCentroC := TM0->TM0_CC
	Dbselectarea("SRA")
	Dbsetorder(1)
	If Dbseek(xFilial("SRA",_cFilial)+TM0->TM0_MAT)
		cCentroC := If(Empty(cCentroC),SRA->RA_CC,cCentroC)

		Dbselectarea("SRE")
		Dbsetorder(2)
		Dbseek(SM0->M0_CODIGO+_cFilial+SRA->RA_MAT)
		While !eof() .and. SM0->M0_CODIGO+_cFilial+SRA->RA_MAT == SRE->RE_EMPP+SRE->RE_FILIALP+SRE->RE_MATP
			If SRE->RE_DATA < dDTINIC .or. Empty(dDTINIC)
				cCentroC2 := SRE->RE_CCD
				dDTINIC   := SRE->RE_DATA
			Endif
			If SRE->RE_DATA <= __dDTPROG .and. (SRE->RE_DATA > dDTPROG .or. Empty(dDTPROG))
				lFirst   := .f.
				dDTPROG  := SRE->RE_DATA
				cCentroC := SRE->RE_CCP
			Endif
			Dbselectarea("SRE")
			Dbskip()
		End
	Endif
Endif
If lFirst .and. !Empty(cCentroC2)
	cCentroC := cCentroC2
Endif
Return cCentroC
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³MDTCBOX   ³ Autor ³ Denis Hyroshi de Souza³ Data ³ 27.11.03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Monta Combo Box para exibir na tela                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MDTCbox(cCampo)                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Array com combo box                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Campo que tera o Combo Box anexado                 ³±±
±±³          ³ ExpC2 = String contendo item a nao ser apresentado "56"    ³±±
±±³          ³ ExpN1 = Tamanho a ser verificado a cada item da string     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MDTCbox(cCampo,cForaCombo,nLenGrava)

Local aArray1	:= {}
Local aArray2	:= {}
Local aSaveArea	:= GetArea()

Local cVar, nCont

DEFAULT cForaCombo := ""
DEFAULT nLenGrava  := 1

dbSelectArea("SX3")
dbSetOrder(2)
MsSeek(cCampo)

cVar 	:= X3CBox()

If Empty(cVar)
	Return aArray2
Endif

aArray1	:= RetSx3Box(cVar,,,1)

For nCont := 1 To Len(aArray1)
	If cForaCombo <> "" .And. Left(aArray1[nCont][1], nLenGrava) $ cForaCombo
		Loop
	Endif
	AADD(aArray2,aArray1[nCont][1])
Next nCont

RestArea(aSaveArea)

Return aArray2
//---------------------------------------------------------------------
/*/{Protheus.doc} fEmptyLine
Função para impressão de linha vazia nos totalizadores do relatório

@return lógico sempre verdadeiro

@sample fEmptyLine(.T.)

@param lPula - .T. Se deve pular linha antes de imprimir a linha vazia

@author Gabriel Gustavo de Mora
@since 04/07/2013
@version 1.0
/*/
//---------------------------------------------------------------------
Function fEmptyLine(lPula)

	Default lPula := .F.

	If lPula
		SomaLinha()
	EndIf
	@ Li,000 PSay "|"
	@ Li,032 PSay "|"
	@ Li,063 PSay "|"
	@ Li,076 PSay "|"
	@ Li,089 PSay "|"
	@ Li,102 PSay "|"
	@ Li,118 PSay "|"
	@ Li,131 PSay "|"

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} fGetDepto
Verifica se houve transferencia de departamento.

@return cDepto Departamento

@sample fGetDepto(Ficha Médica,Data Programação,Filial)

@param cNUMFIC   - Número da ficha médica.
@param __dDTPROG - Data de Programação.
@param _cFilial  - Filial.

@author Gabriel Gustavo de Mora
@since 04/07/2013
@version 1.0
/*/
//---------------------------------------------------------------------
Static Function fGetDepto(cNUMFIC,__dDTPROG,_cFilial)
Local cDepto  := Space(nSizeSQB)
Local cDepto2 := Space(nSizeSQB)
Local dDTPROG   := stod(Space(8))
Local dDTINIC   := stod(Space(8))
Local lFirst    := .t.

Default _cFilial := cFilAnt

Dbselectarea("TM0")
Dbsetorder(1)
If Dbseek(xFilial("TM0",_cFilial)+cNUMFIC)
	If TM0->(FieldPos("TM0_DEPTO")) > 0
		cDepto := TM0->TM0_DEPTO
	Endif
	Dbselectarea("SRA")
	Dbsetorder(1)
	If Dbseek(xFilial("SRA",_cFilial)+TM0->TM0_MAT)
		cDepto := If(Empty(cDepto),SRA->RA_DEPTO,cDepto)

		Dbselectarea("SRE")
		Dbsetorder(2)
		Dbseek(SM0->M0_CODIGO+_cFilial+SRA->RA_MAT)
		While !eof() .and. SM0->M0_CODIGO+_cFilial+SRA->RA_MAT == SRE->RE_EMPP+SRE->RE_FILIALP+SRE->RE_MATP
			If SRE->RE_DATA < dDTINIC .or. Empty(dDTINIC)
				cDepto2 := SRE->RE_DEPTOD
				dDTINIC   := SRE->RE_DATA
			Endif
			If SRE->RE_DATA <= __dDTPROG .and. (SRE->RE_DATA > dDTPROG .or. Empty(dDTPROG))
				lFirst   := .f.
				dDTPROG  := SRE->RE_DATA
				cDepto := SRE->RE_DEPTOP
			Endif
			Dbselectarea("SRE")
			Dbskip()
		End
	Endif
Endif
If lFirst .and. !Empty(cDepto2)
	cDepto := cDepto2
Endif
Return cDepto
