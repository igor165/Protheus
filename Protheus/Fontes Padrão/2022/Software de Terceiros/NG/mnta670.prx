#INCLUDE "MNTA670.ch"
#include "Protheus.ch"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNTA670   ³ Autor ³Thiago Olis Machado    ³ Data ³ 19/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Conciliacao de notas fiscais de Postos Internos             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNTA670()

	Local aNGBeginPrm := {}
	Local aDbfB	      := {}
	Local nTamFil     := 0

	If !FindFunction( 'MNTAmIIn' ) .Or. MNTAmIIn( 95 )

		aNGBeginPrm         := NGBeginPrm()
		nTamFil	            := FWSizeFilial()

		Private Inclui		:= .T.
		Private lVirada		:= .F.
		Private cConEst	 	:= AllTrim( SuperGetMv("MV_ESTHOME") )
		Private cUsaInt3 	:= AllTrim( SuperGetMv("MV_NGMNTES") )
		Private lEstNeg	 	:= AllTrim( SuperGetMV("MV_ESTNEG") ) == "S"
		Private lSegCont	:= NGCADICBASE("TQN_POSCO2","A","TQN",.F.)
		Private cCadastro	:= OemToAnsi(STR0001) //"Conciliaçao de NF's de Postos Internos"
		Private cPerg		:= "MNA670"
		Private aSelectFil	:= {}

		//Tabela Temporária
		Private oTmpTbl1
		Private cAliTRB3 := GetNextAlias()

		//Adiciona campos que serão utilizados na tabela temporária
		aAdd(aDbfB, {"ASSI"     , "C", 02, 0})
		aAdd(aDbfB, {"FILIAL"   , "C", nTAMFIL, 0})
		aAdd(aDbfB, {"NABAST"   , "C", 15, 0})
		aAdd(aDbfB, {"NUMCON"   , "C", 15, 0})
		aAdd(aDbfB, {"LITROS"   , "N", 09, 3})
		aAdd(aDbfB, {"VLUNIT"   , "N", TamSX3("TQN_VALUNI")[1], TamSX3("TQN_VALUNI")[2]})
		aAdd(aDbfB, {"VLABA"    , "N", 15, 3})
		aAdd(aDbfB, {"KM"       , "N", 09, 0})
		aAdd(aDbfB, {"FROTA"	   , "C", 16, 0})
		aAdd(aDbfB, {"DTABAS"   , "D", 08, 0})
		aAdd(aDbfB, {"HRABAS"   , "C", 05, 0})
		aAdd(aDbfB, {"TIPO"     , "C", 01, 0})
		aAdd(aDbfB, {"MOTORISTA", "C", 40, 0})
		aAdd(aDbfB, {"TANQUE"   , "C", TamSX3("TQN_TANQUE")[1], 0})
		aAdd(aDbfB, {"CODEMPR"  , "C", 02, 0})
		aAdd(aDbfB, {"FILBEM"   , "C", nTamFil, 0})
		aAdd(aDbfB, {"CODCOM"   , "C", TamSX3("TQN_CODCOM")[1], 0})
		aAdd(aDbfB, {"BOMBA"    , "C", TamSX3("TQN_BOMBA")[1] , 0})

		If lSegCont
			aAdd(aDbfB,{"KM2", "N", 9, 0})
		EndIf

		//Intancia classe FWTemporaryTable
		oTmpTbl1:= FWTemporaryTable():New( cAliTRB3, aDBFB )
		//Adiciona os Indices
		oTmpTbl1:AddIndex( "Ind01" ,{"DTABAS"} )
		oTmpTbl1:AddIndex( "Ind02" ,{"TANQUE"} )
		//Cria a tabela temporaria
		oTmpTbl1:Create()

		If Pergunte(cPerg, .T.)
			Processa( {|lEnd| MNA670Ini() }, STR0008) //"Aguarde ..Processando registros de abastecimentos"
		EndIf

		oTmpTbl1:Delete()

		NGRETURNPRM( aNGBeginPrm )

	EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670INI ³ Autor ³Thiago Olis Machado    ³ Data ³ 19/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Monta o arquivo temporario inicial mostrado no browse       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Mna670Ini()

	Local nI		:= 0
	Local nTotReg	:= 0
	Local nQtLitros	:= 0
	Local lRet656VL	:= .F.
	Local lMNT656VL := ExistBlock("MNT656VL")
	Local xAferi    := {}
	Local aRet656VL := {}

	Private n    		:= 1
	Private nCont   	:= " "
	Private aCols		:= {}
	Private aMark		:= {}
	Private aEMPFIL		:= {}
	Private aRetRas		:= {}
	Private vRastro		:= {}
	Private lInverte 	:= .F.
	Private cMarca   	:= GetMark()
	Private oMark

	Store 0 To nI, nTotReg, nQtLitros

	aAdd(aMark, {"ASSI"     , Nil, " "		,    				   })
	aAdd(aMark, {"NUMCON"   , Nil, STR0009	, "@!"            })  //"N. Convênio"
	aAdd(aMark, {"LITROS"   , Nil, STR0010	, "@E 99,999.999" })  //"Litros"
	aAdd(aMark, {"VLUNIT"   , Nil, STR0011	, '@E 99,999.' + Replicate('9', TamSX3("TQN_VALUNI")[2]) })  //"Valor Unitario"
	aAdd(aMark, {"KM"       , Nil, "KM"	, "@E 999,999,999"})
	aAdd(aMark, {"FROTA"    , Nil, STR0012	, "@!"            })  //"Frota"
	aAdd(aMark, {"DTABAS"   , Nil, STR0013	, "@99/99/99"     })  //"Data Abastecimento"
	aAdd(aMark, {"TIPO"     , Nil, STR0014	, "@!"            })  //"Tipo Lançamento"
	aAdd(aMark, {"MOTORISTA", Nil, STR0015	, "@!"            })  //"Motorista"
	aAdd(aMark, {"TANQUE"   , Nil, NGRetTitulo("TQI_TANQUE"), "@!"})

	aAdd(aEmpFil, SM0->M0_CODIGO)

	If lSegCont
		aAdd(aMark, {"KM2", Nil, STR0055, "@E 999,999,999"}) //"Seg.Cont."
	EndIf

	For nI := 1 To Len(aEmpFil)

		If M985ChkTbl({"TQN"},aEMPFIL[nI])
			NGPrepTBL({{"TQN"}},aEMPFIL[nI])
		Else
			Loop
		EndIf

		dbSelectArea("TQN")
		dbSetorder(10) //TQN_POSTO+TQN_LOJA+DTOS(TQN_DTABAS)+TQN_HRABAS
		dbSeek(MV_PAR03 + MV_PAR04 + DToS(MV_PAR01), .T.)

		ProcRegua( LastRec() )
		While !EoF() .and. TQN->TQN_POSTO == MV_PAR03 .And.;
		TQN->TQN_LOJA == MV_PAR04  .And. TQN->TQN_DTABAS <= MV_PAR02

			IncProc()

			//Validação pelo parâmetro "Mostra" (Manual, Automatico, Todos)
			If (MV_PAR06 == 1 .And. TQN->TQN_AUTO != '2') .Or. (MV_PAR06 == 2 .And. TQN->TQN_AUTO != '1')
				dbSelectArea("TQN")
				dbSkip()
				Loop
			EndIf

			If MV_PAR07 == 2 .AND. TQN->TQN_FILIAL != xFilial("TQN") //Apenas filial corrente
				dbSelectArea("TQN")
				dbSkip()
				Loop
			EndIf

			If !Empty(TQN->TQN_DTCON) .OR. !Empty(TQN->TQN_NUMSEQ)
				dbSelectArea("TQN")
				dbSkip()
				Loop
			EndIf

			If TQN->TQN_CODCOM <> MV_PAR05
				dbSelectArea("TQN")
				dbSkip()
				Loop
			EndIf

			If lMNT656VL // Verifica se não deve atualizar estoque e Hodômetro através do PE

				xAferi    := ExecBlock("MNT656VL",.F.,.F.,{TQN->TQN_FROTA, aRet656VL})

				If ValType(xAferi) == "A"
					lRet656VL := xAferi[1]
					aRet656VL := xAferi[2]
				Else
					lRet656VL := xAferi
				EndIf

				If lRet656VL
					dbSelectArea("TQN")
					dbSkip()
					Loop
				EndIf

			EndIf

			RecLock((cAliTRB3), .T.)
			(cAliTRB3)->FILIAL	  := TQN->TQN_FILIAL
			(cAliTRB3)->FILBEM	  := IIf( NGSX2MODO("TQN") == "E" .And. NGSX2MODO("ST9") == "E", TQN->TQN_FILIAL, xFilial("ST9"))
			(cAliTRB3)->NABAST	  := TQN->TQN_NABAST
			(cAliTRB3)->NUMCON	  := TQN->TQN_NUMCON
			(cAliTRB3)->LITROS	  := TQN->TQN_QUANT
			(cAliTRB3)->VLUNIT	  := TQN->TQN_VALUNI
			(cAliTRB3)->VLABA	  := TQN->TQN_VALTOT
			(cAliTRB3)->KM		  := TQN->TQN_HODOM
			(cAliTRB3)->FROTA	  := TQN->TQN_FROTA
			(cAliTRB3)->DTABAS	  := TQN->TQN_DTABAS
			(cAliTRB3)->HRABAS	  := TQN->TQN_HRABAS
			(cAliTRB3)->TANQUE	  := TQN->TQN_TANQUE
			(cAliTRB3)->CODEMPR	  := aEMPFIL[nI]
			(cAliTRB3)->CODCOM	  := TQN->TQN_CODCOM
			(cAliTRB3)->BOMBA	  := TQN->TQN_BOMBA
			(cAliTRB3)->TIPO	  := IIf( TQN->TQN_AUTO == "1", "A", "M" )
			(cAliTRB3)->MOTORISTA := NGSEEK('DA4', TQN->TQN_CODMOT, 1, 'DA4->DA4_NOME')

			If lSegCont
				(cAliTRB3)->KM2 := TQN->TQN_POSCO2
			EndIf

			MsUnLock(cAliTRB3)

			nQtLitros += TQN->TQN_QUANT

			dbSelectArea("TQN")
			dbSkip()
		End
	Next

	If (cAliTRB3)->( LastRec() ) == 0
		Help(" ", 1, "NGATENCAO",, STR0016 + Chr(13) + Chr(10) + STR0017, 3, 1) //"Nao existe dados para montar a tela de Conciliação"###" de Postos Internos."
	Else
		Processa( {|lEnd| Mna670Mo( (cAliTRB3)->( LastRec() ), nQtLitros, aRet656VL) }, STR0018) //"Aguarde ..Montando tela de conciliação."
	EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670MO  ³ Autor ³Thiago Olis Machado    ³ Data ³ 19/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Mostra a tela de conciliaçao de NF's                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNA670MO(nTotReg,nQtLitros,aRet656VL)

	Local aArea := GetArea()
	Local aRet6701 := {}

	Default aRet656VL := {}


	Private oMenu, oSelec, nSelec, nTotalL

	Store 0 To nSelec, nTotalL

	dbSelectArea(cAliTRB3)
	dbGoTop()

	Define Dialog oDlg1 From 7,10 TO 37, 135 Title STR0001 COLOR CLR_BLACK,CLR_WHITE //"Conciliaçao de NF's de Postos Internos"

	@ 04,010 Button STR0019  Of oDlg1 Size 40,09 Pixel Action ( MNA670PE() )  //"Pesquisar"
	@ 04,055 Button STR0020 Of oDlg1 Size 40,09 Pixel Action ( MNA670VI() )  //"Visualizar"

	oMark := MsSelect():New((cAliTRB3),"ASSI",, aMark, @lInverte, @cMarca, {16, 8, 195, 490})
	oMark:oBrowse:lHasMark		:= .T.
	oMark:oBrowse:lCanAllMark	:= .T.
	oMark:bMark					:= { || MNA670MA(cMarca) }
	oMark:oBrowse:bAllMark		:= { || Processa({ || MNA670VE(cMarca) }) }

	@ 200,010 Say STR0021	Size 55,10 Of oDlg1 Pixel color CLR_BLUE  //"Total de Registros"
	@ 200,050 Say nTotReg	Size 40,10 Of oDlg1 Pixel Picture '@E 99,999,999,999,999'

	@ 200,100 Say STR0022	Size 55,10 Of oDlg1 Pixel color CLR_BLUE  //"Total de Litros"
	@ 200,140 Say nQtLitros	Size 40,10 Of oDlg1 Pixel Picture '@E 99,999,999,999.999'

	@ 200,360 Say STR0023	Size 55,10 Of oDlg1 Pixel Color CLR_BLUE  //"Items Selecionados"
	@ 200,410 Say oSelec		Var nSelec		Size 40,10 Of oDlg1 Pixel Picture '@E 999,999,999'

	@ 200,240 Say STR0024	Size 55,10 Of oDlg1 Pixel color CLR_BLUE  //"Litros Selecionados"
	@ 200,320 Say oTotalL	Var nTotalL	Size 40,10 Of oDlg1 Pixel Picture "@E 999,999,999.999"


	If ExistBlock("MNTA6701")
		aRet6701 := ExecBlock("MNTA6701",.F.,.F., {nQtLitros, aRet656VL, oDlg1} )
	Endif

	@ 200, 450 Button STR0025 Size 40,09 Of oDlg1 Pixel Action (MNA670CN(nTotReg,nQtLitros,nSelec,nTotalL, aRet6701)) //"Conciliar"
	@ 212, 450 Button STR0026 Size 40,09 Of oDlg1 Pixel Action (MNA670CR())  //"Corrigir"

	NGPOPUP(asMenu,@oMenu)
	oDlg1:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg1)}

	Activate Dialog oDlg1 Centered

	RestArea(aArea)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670MA  ³ Autor ³Thiago Olis Machado    ³ Data ³ 19/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Marca a linha e atualiza os dados no rodape da tela         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Mna670Ma(cMarca)

	Local nPosFil

	Local cFieldMarca := "ASSI"

	If IsMark(cFieldMarca,cMarca,lInverte)

		If ValidMark()

			nVlAba  := (cAliTRB3)->VLABA
			nLitros := (cAliTRB3)->LITROS
			nRecno  := (cAliTRB3)->(Recno())
			nSelec  := 0

			dbSelectArea(cAliTRB3)
			dbGoTop()
			While !Eof()
				If !Empty( (cAliTRB3)->ASSI )
					nSelec ++
				EndIf

				(cAliTRB3)->( dbSkip() )
			EndDo

			dbGoTo(nRecno)
			nTotalL += nLitros
			oMark:oBrowse:Refresh()
			oTotalL:Refresh()
			oSelec:Refresh()
		EndIf
	Else
		nSelec--
		nTotalL -= (cAliTRB3)->LITROS
		oTotalL:Refresh()
		oSelec:Refresh()


		If (nPosFil := aScan( aSelectFil, {|x| x[1] == (cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS( (cAliTRB3)->DTABAS ) + (cAliTRB3)->HRABAS} )) > 0

			aDel(aSelectFil, nPosFil)
			aSize(aSelectFil, Len(aSelectFil) - 1)

		EndIf
	EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670VI  ³ Autor ³Thiago Olis Machado    ³ Data ³ 19/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Visualiza consulta                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Mna670Vi()

	NGPrepTBL({{"TQN"}},(cAliTRB3)->CODEMPR)

	dbSelectArea("TQN")
	dbSetOrder(01)
	dbSeek((cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS((cAliTRB3)->DTABAS) + (cAliTRB3)->HRABAS)
	NGCAD01("TQN", Recno(), 1)

	dbSelectArea(cAliTRB3)

Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670CN  ³ Autor ³Thiago Olis Machado    ³ Data ³ 19/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Conciliaçao das NF's                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNA670CN(nTotReg, nQtLitros, nSelec, nTota1L, aRet6701)

	Local nCont			:= 0
	Local nRecno		:= 0
	Local nPosFil		:= 0
	Local cComb			:= ""
	Local cTanque		:= ""
	Local cOldEmpres	:= ""
	Local cFilBaixa		:= ""
	Local lMNT655D3CC	:= ExistBlock("MNT655D3CC")
	Local lDisarmT		:= .F.
	Local aArea			:= GetArea()
	Local aAreaTQN      := {}
	Local aChkSaldo		:= {}
    Local lRetConFil    := .T.

	Default aRet6701 := {}

	Private cPAR03 := MV_PAR03
	Private cPAR04 := MV_PAR04

	Store '' To cComb, cTanque, cOldEmpres

	nRecno := Recno()

	If ExistBlock("MNTA6702")
		If !ExecBlock("MNTA6702",.F.,.F.,{aRet6701})
			Return .F.
		Endif
	EndIf

	BEGIN TRANSACTION

		//Checa se produto tem controle de rastreabilidade
		aRetRas := MNT670RAST(nTota1L)
		If aRetRas[1] .And. !aRetRas[2]
			lRetConFil := .F.
		EndIf

        If lRetConFil
            dbSelectArea(cAliTRB3)
            dbSetOrder(2)
            dbGoTop()

            If nSelec > 0
                While !EoF()

                    If !Empty( (cAliTRB3)->ASSI )
                        If cTanque <> (cAliTRB3)->TANQUE

                            cTanque := (cAliTRB3)->TANQUE

                            If (cConEst == "C") .Or. (cConEst == "S" .And. (cAliTRB3)->TIPO == 'A')
                                dbSelectArea("TQF")
                                dbSetOrder(1)
                                If dbSeek(xFilial("TQF") + MV_PAR03 + MV_PAR04)

                                    If TQF->TQF_TIPPOS == "2"

                                        nPosFil	:= aScan( aSelectFil, {|x| x[1] == (cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS( (cAliTRB3)->DTABAS ) + (cAliTRB3)->HRABAS} )
                                        cFilBaixa	:= IIf(nPosFil > 0, aSelectFil[nPosFil][2], '')

                                        cProduto := NGSEEK('TQI',MV_PAR03+MV_PAR04+(cAliTRB3)->TANQUE+MV_PAR05,1,'TQI->TQI_PRODUT')

                                        If !Empty( cProduto )

                                            dbSelectArea( 'SB2' )
                                            dbSetOrder( 1 )
                                            If !dbSeek( xFilial( 'SB2', cFilBaixa ) + cProduto + (cAliTRB3)->TANQUE )
                                                
												// Cria um registro de saldo em estoque para o produto.
												CriaSB2( cProduto, (cAliTRB3)->TANQUE )

                                            EndIf

                                            If (nPos := aScan(aChkSaldo, {|x| x[1] + x[2] == cProduto + (cAliTRB3)->TANQUE})) > 0
                                                aChkSaldo[nPos,3] += (cAliTRB3)->LITROS
                                            Else
                                                aAdd(aChkSaldo,{cProduto,(cAliTRB3)->TANQUE,(cAliTRB3)->LITROS,(cAliTRB3)->DTABAS, cFilBaixa})
                                            EndIf

                                        Else

                                            lDisarmT := .T.

                                            ShowHelpDlg("Atenção", {"Não foi possível realizar a conciliação."}, 2,;
                                            {"Verifique se o produto utilizado é consistente."}, 2)

                                            Exit

                                        EndIf

                                    EndIf

                                EndIf

                            EndIf

                        Else
                            
							cProduto := NGSEEK('TQI',MV_PAR03+MV_PAR04+(cAliTRB3)->TANQUE+MV_PAR05,1,'TQI->TQI_PRODUT')

                            If (nPos := aScan(aChkSaldo,{|x| x[1] + x[2] == cProduto + (cAliTRB3)->TANQUE})) > 0
                                aChkSaldo[nPos,3] += (cAliTRB3)->LITROS
                            EndIf

                        EndIf

                    EndIf

                    dbSelectArea(cAliTRB3)
                    dbSetOrder(2)
                    dbSkip()
                EndDo
            Else
                Alert('Nenhum registro marcado!')
                lDisarmT := .T.
            EndIf

            //Restaura área de trabalho
            RestArea(aArea)

            If lDisarmT
                DisarmTransaction()
            Else

                dbSelectArea(cAliTRB3)
                dbGoTop()

                For nCont := 1 To Len(aChkSaldo)
                    If !lEstNeg .AND. cUsaInt3 == 'S'
                        If !NGSALSB2(aChkSaldo[nCont,1], aChkSaldo[nCont,2], aChkSaldo[nCont,3],,, aChkSaldo[nCont,4],, aChkSaldo[nCont,5])

                            lDisarmT := .T.
                            Exit

                        EndIf
                    EndIf
                Next nCont

                If !lDisarmT
                    dbSelectArea(cAliTRB3)
                    dbSetOrder(1)
                    dbGoTop()
                    Do While !EoF()
                        If (cAliTRB3)->CODEMPR != cOldEmpres
                            NGPrepTBL({ {"TQN"} }, (cAliTRB3)->CODEMPR)
                        EndIf

                        cOldEmpres := (cAliTRB3)->CODEMPR
                        dbSelectArea("TQN")
                        dbSetOrder(01)
                        If dbSeek((cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS((cAliTRB3)->DTABAS) + (cAliTRB3)->HRABAS)

                            nRecnoTQN := Recno()

                            If Empty((cAliTRB3)->ASSI)
                                dbSelectArea(cAliTRB3)
                                dbSkip()
                                Loop
                            EndIf

                            cComb := ""

                            nPosFil	:= aScan( aSelectFil, {|x| x[1] == (cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS( (cAliTRB3)->DTABAS ) + (cAliTRB3)->HRABAS} )
                            cFilBaixa	:= IIf(nPosFil > 0, aSelectFil[nPosFil][2], '')

                            dbSelectArea( 'TQI' )
                            dbSetOrder( 1 )
                            If !dbSeek( xFilial( 'TQI', cFilBaixa ) + TQN->TQN_POSTO + TQN->TQN_LOJA + TQN->TQN_TANQUE + TQN->TQN_CODCOM )

                                // ATENÇÃO ## O tanque XX não esta relacionado ao combustível
								Help( ' ', 1, STR0035, , STR0046 + TQN->TQN_TANQUE + STR0047 + TQN->TQN_CODCOM, 3, 1 )

                                lDisarmT := .T.
                                Exit

                            Else
                                cComb := TQI->TQI_PRODUT
                            EndIf

                            //Chamada da função para debitar do estoque
                            If (cConEst == "C") .Or. (cConEst == "S" .And. TQN->TQN_AUTO == '1')

                                dbSelectArea("TQF")
                                dbSetOrder(1)
                                If dbSeek(xFilial("TQF") + TQN->TQN_POSTO + TQN->TQN_LOJA) //.And. !Empty(cFilBaixa)
                                    If TQF->TQF_TIPPOS == "2"
                                        cUm			:= NGSEEK('TQM', TQN->TQN_CODCOM, 1, 'TQM->TQM_UM')

										aAreaTQN := TQN->(GetArea())
										
										cNumSeqD := MntMovEst( 'RE0', TQN->TQN_TANQUE, cComb, TQN->TQN_QUANT, TQN->TQN_DTABAS, ,cFilBaixa,;
											TQN->TQN_CCUSTO, , TQN->TQN_NUMSEQ, , TQN->TQN_FROTA, , , , vRastro )
										
										RestArea(aAreaTQN)

                                        //Verifica se variavel está em branco para o caso da integração por Mensagem Única ter falhado.
                                        If Empty(cNumSeqD)
                                            nSelec --
                                            dbSelectArea(cAliTRB3)
                                            dbSkip()
                                            Loop
                                        EndIf

                                        //Ponto de Entrada para altecoes finais no SD3
                                        If lMNT655D3CC
                                            ExecBlock("MNT655D3CC", .F. , .F. , {'RE0', TQN->TQN_FROTA, TQN->TQN_CCUSTO, Nil })
                                        EndIf

                                        If Empty(cNumSeqD)
                                            Help(" ",1,STR0035,,STR0053,3,1) //"ATENÇÃO"###"Abastecimento não conciliado, checar problemas!"

                                            RestArea(aArea)

                                            dbSelectArea("TQN")
                                            dbGoTo(nRecnoTQN)

                                            MV_PAR03 := cPar03
                                            MV_PAR04 := cPar04

                                            lRetConFil := .F.
                                        EndIf
                                        If lRetConFil
                                            dbSelectArea("TQN")
                                            dbGoTo(nRecnoTQN)

                                            RecLock("TQN",.F.)
                                            TQN->TQN_NUMSEQ := cNumSeqD
                                            MsUnLock("TQN")
                                        EndIf
                                    EndIf
                                EndIf
                            EndIf

                            If lRetConFil
                                dbSelectArea("TQN")
                                dbGoTo(nRecnoTQN)
                                RecLock("TQN",.F.)
                                TQN->TQN_DTCON  := dDataBase
                                MsUnLock("TQN")

                                //----------------------------------------
                                // Inclui historico do contador da Bomba
                                //----------------------------------------
                                If AliasInDic("TTV")
                                    If !NGIFDBSEEK("TTV",TQN->TQN_POSTO+TQN->TQN_LOJA+TQN->TQN_TANQUE+TQN->TQN_BOMBA+DtoS(TQN->TQN_DTABAS)+TQN->TQN_HRABAS+TQN->TQN_NABAST,1)
                                        NGIncTTV(TQN->TQN_POSTO,TQN->TQN_LOJA,TQN->TQN_TANQUE,TQN->TQN_BOMBA,TQN->TQN_DTABAS,TQN->TQN_HRABAS,"4",,TQN->TQN_QUANT,TQN->TQN_NABAST)
                                    EndIf
                                EndIf

                                If NGIFDBSEEK("STP",TQN->TQN_FROTA + DToS(TQN->TQN_DTABAS) + TQN->TQN_HRABAS, 5) .And.;
                                TQN->TQN_HODOM <> STP->TP_POSCONT

                                    nRegSTP  := Recno()
                                    nAcumReg := (STP->TP_ACUMCON - STP->TP_POSCONT) + TQN->TQN_HODOM
                                    nNovaVar := NGVARIADT(TQN->TQN_FROTA, TQN->TQN_DTABAS, 1, nAcumReg, .F., .T.)

                                    dbSelectArea("STP")
                                    dbGoTo(nRegSTP)
                                    If STP->TP_FILIAL == xFilial("STP") .And. STP->TP_CODBEM == TQN->TQN_FROTA .And.;
                                    STP->TP_DTLEITU == TQN->TQN_DTABAS .And. STP->TP_HORA == TQN->TQN_HRABAS

                                        RecLock("STP",.F.)
                                        STP->TP_POSCONT := TQN->TQN_HODOM
                                        STP->TP_VARDIA  := nNovaVar
                                        STP->TP_ACUMCON := nAcumReg
                                        MsUnLock("STP")

                                        dbSkip()

                                        If STP->TP_FILIAL <> Xfilial("STP") .Or. STP->TP_CODBEM <> TQN->TQN_FROTA
                                            NGATUCONT(TQN->TQN_FROTA,TQN->TQN_DTABAS,TQN->TQN_HODOM,nAcumReg,nNovaVar,1,.f.,.f.)
                                        EndIf
                                    EndIf
                                EndIf

                                If lSegCont .And. NGIFDBSEEK("TPP", TQN->TQN_FROTA + DToS(TQN->TQN_DTABAS) + TQN->TQN_HRABAS, 5) .And.;
                                TQN->TQN_POSCO2 <> TPP->TPP_POSCON

                                    nRegTPP  := Recno()
                                    nAcumReg := (TPP->TPP_ACUMCO - TPP->TPP_POSCON) + TQN->TQN_POSCO2
                                    nNovaVar := NGVARIADT(TQN->TQN_FROTA, TQN->TQN_DTABAS, 1, nAcumReg, .F., .T.)

                                    dbSelectArea("TPP")
                                    dbGoTo(nRegTPP)
                                    If TPP->TPP_FILIAL == xFilial("TPP") .And. TPP->TPP_CODBEM == TQN->TQN_FROTA .And.;
                                    TPP->TPP_DTLEIT == TQN->TQN_DTABAS .And. TPP->TPP_HORA == TQN->TQN_HRABAS

                                        RecLock("TPP",.F.)
                                        TPP->TPP_POSCON := TQN->TQN_POSCO2
                                        TPP->TPP_VARDIA := nNovaVar
                                        TPP->TPP_ACUMCO := nAcumReg
                                        MsUnLock("TPP")

                                        dbSkip()

                                        If TPP->TPP_FILIAL <> Xfilial("TPP") .Or. TPP->TPP_CODBEM <> TQN->TQN_FROTA
                                            NGATUCONT(TQN->TQN_FROTA, TQN->TQN_DTABAS, TQN->TQN_POSCO2, nAcumReg, nNovaVar, 2, .F., .F.)
                                        EndIf
                                    EndIf
                                EndIf
                            EndIf
                        EndIf

                        If lRetConFil
                            dbSelectArea(cAliTRB3)
                            dbSkip()
                        EndIf
                    EndDo

                    If lRetConFil
                        If !lDisarmT

                            //"Conciliação de "###" Nota(´s) Fiscal(´s) Concluída(´s) com Sucesso!"
                            MsgInfo(STR0028 + AllTrim( Str(nSelec) ) + STR0029)

                            dbGoTo(nRecno)
                            oDlg1:End()
                        EndIf
                    EndIf
                EndIf
            EndIf
        EndIf
	END TRANSACTION //Finaliza transação

    //Destrava todos os registros que estavam eventualmente locados
    MsUnlockAll()

Return lRetConFil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670CR  ³ Autor ³Thiago Olis Machado    ³ Data ³ 19/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Abre a tela de correçao de dados                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNA670CR()

	Local aAreaOld		:= GetArea()
	Local nCrKM			:= 0
	Local cCrMot			:= " "
	Local nCrKM2			:= 0

	Private nCrVlUnit		:= 0
	Private nCrLitros		:= 0
	Private nCrVlAbast	:= 0
	Private oDlg2
	Private oMenu

	nCrVlAbast := (cAliTRB3)->VLABA
	nCrVlUnit  := (cAliTRB3)->VLUNIT
	nCrLitros  := (cAliTRB3)->LITROS
	nCrKM      := (cAliTRB3)->KM
	cCrMot     := (cAliTRB3)->MOTORISTA
	If lSegCont
		nCrKM2      := (cAliTRB3)->KM2
		//FindFunction remover na release GetRPORelease() >= '12.1.027'
		If FindFunction("MNTCont2")
			TIPOACOM2 := MNTCont2((cAliTRB3)->FILIAL, (cAliTRB3)->FROTA )
		Else
			dbSelectArea("TPE")
			dbSetOrder(1)
			TIPOACOM2 := DbSeek( If( NGSX2MODO("TPE") == "E", (cAliTRB3)->FILIAL, xFilial("TPE") ) + (cAliTRB3)->FROTA )
		EndIf
	EndIf

	Define DIALOG oDlg2 FROM 7,10 TO 18,60 TITLE STR0026 //"Corrigir"

	@  18,010 Say STR0030  Size 55,10 Of oDlg2 Pixel  //"Vl. Unit."
	@  18,050 MsGet nCrVlUnit  Size 40,10 Of oDlg2 Pixel Picture '@E 99,999.'+Replicate('9',TAMSX3("TQN_VALUNI")[2]) valid MNA670VC(2) HASBUTTON

	@  18,110 Say STR0031         Size 55,10 Of oDlg2 Pixel  //"Contador"
	@  18,150 MsGet nCrKM      Size 40,10 Of oDlg2 Pixel Picture '@E 999,999,999' Valid NGCHKALTKM((cAliTRB3)->FROTA,nCrKM,1,(cAliTRB3)->DTABAS,(cAliTRB3)->HRABAS,(cAliTRB3)->FILBEM)

	@  34,010 Say STR0010     Size 55,10 Of oDlg2 Pixel  //"Litros"
	@  34,050 MsGet nCrLitros  Size 40,10 Of oDlg2 Pixel Picture '@E 99,999.999' valid MNA670VC(2) HASBUTTON

	If lSegCont
		@  34,110 Say STR0056         Size 55,10 Of oDlg2 Pixel   //"Seg.Contador"
		@  34,150 MsGet nCrKM2      Size 40,10 Of oDlg2 Pixel Picture '@E 999,999,999' When TIPOACOM2 ;
		Valid NGCHKALTKM((cAliTRB3)->FROTA,nCrKM2,2,(cAliTRB3)->DTABAS,(cAliTRB3)->HRABAS,(cAliTRB3)->FILBEM)
	EndIf

	NGPOPUP(asMenu,@oMenu)
	oDlg2:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg2)}

	Activate Dialog oDlg2 On Init EnchoiceBar(oDlg2,{||nOpcao:=1, IIf(!MNA670CO(nCrVlAbast, nCrVlUnit,nCrLitros, nCrKM,cCrMot,nCrKM2),;
	nOpcao := 0,oDlg2:End())}, {|| oDlg2:End()}) Centered

	RestArea(aAreaOld)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670CO  ³ Autor ³Heverson Vitoreti      ³ Data ³ 06/02/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Corrige os dados nas tabelas                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNA670CO(nCrVlAbast, nCrVlUnit, nCrLitros, nCrKM, cCrMot,nCrKM2)

	Local nRegTQNL := 0

	Local lRet		:= .T.
	Local lAltTTV	:= .F.

	Local cOldEmp := cEmpAnt, cEmpTTM, aFilEmp

	Private vDadoAtu := {}

	If !Empty( (cAliTRB3)->ASSI )
		nTotalL -= (cAliTRB3)->LITROS
	EndIf

	dbSelectArea("TQN")
	dbSetOrder(01)
	If dbSeek((cAliTRB3)->FILIAL+(cAliTRB3)->FROTA+DtoS((cAliTRB3)->DTABAS)+(cAliTRB3)->HRABAS)
		nRegTQNL := Recno()

		If !lSegCont
			vDadoAtu := {IIf(NGSX2MODO("STP")=="E", TQN->TQN_FILIAL, xFilial("STP")), TQN->TQN_FROTA, DToS(TQN->TQN_DTABAS), TQN->TQN_HRABAS, TQN->TQN_HODOM, TQN->TQN_QUANT, TQN->TQN_NUMSEQ, TQN->TQN_NOTFIS}
		Else
			vDadoAtu := {IIf(NGSX2MODO("STP")=="E", TQN->TQN_FILIAL, xFilial("STP")), TQN->TQN_FROTA, DToS(TQN->TQN_DTABAS), TQN->TQN_HRABAS, TQN->TQN_HODOM, TQN->TQN_QUANT, TQN->TQN_NUMSEQ, TQN->TQN_NOTFIS, TQN->TQN_POSCO2}
		EndIf

		If TQN->TQN_HODOM <> nCrKM .Or. (lSegCont .And. TQN->TQN_POSCO2 <> nCrKM2)
			If !NGATUKMS(TQN->TQN_FROTA,TQN->TQN_DTABAS,TQN->TQN_HRABAS,nCrKM,If(lSegCont,nCrKM2,0),(cAliTRB3)->FILBEM)
				lRet := .f.
			EndIf
		EndIf

		If lRet
			dbSelectArea("TQN")
			dbGoto(nRegTQNL)

			lAltTTV := (TQN->TQN_QUANT <> nCrLitros)

			RecLock("TQN",.F.)
			TQN->TQN_VALTOT := nCrVlAbast
			TQN->TQN_VALUNI := nCrVlUnit
			TQN->TQN_QUANT  := nCrLitros
			TQN->TQN_HODOM  := nCrKM

			If lSegCont
				TQN->TQN_POSCO2  := nCrKM2
			EndIf

			MsUnLock("TQN")

			//----------------------------------------
			// Altera historico do contador da Bomba
			//----------------------------------------
			If lAltTTV .and. AliasInDic("TTV")
				If NGIFDBSEEK("TTV",TQN->TQN_POSTO+TQN->TQN_LOJA+TQN->TQN_TANQUE+TQN->TQN_BOMBA+DtoS(TQN->TQN_DTABAS)+TQN->TQN_HRABAS+TQN->TQN_NABAST,1)
					NGAltTTVQnt(TQN->TQN_POSTO,TQN->TQN_LOJA,TQN->TQN_TANQUE,TQN->TQN_BOMBA,TQN->TQN_DTABAS,TQN->TQN_HRABAS,'1',TQN->TQN_QUANT)
				EndIf
			EndIf

			RecLock((cAliTRB3),.F.)
			(cAliTRB3)->VLABA  := nCrVlAbast
			(cAliTRB3)->VLUNIT := nCrVlUnit
			(cAliTRB3)->LITROS := nCrLitros
			(cAliTRB3)->KM     := nCrKM

			If lSegCont
				(cAliTRB3)->KM2  := nCrKM2
			EndIf

			MsUnLock(cAliTRB3)
		EndIf
	EndIf

	oDlg2:End()

	If lRet
		If !Empty((cAliTRB3)->ASSI)
			nTotalL += (cAliTRB3)->LITROS
			oTotalL:Refresh()
			oSelec:Refresh()
		Else
			Return .T.
		EndIf
	EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670VC  ³ Autor ³Heverson Vitoreti      ³ Data ³ 06/02/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNA670VC( nID,cCrPlaca )

	Local lReturn := .T.

	If nID == 1
		nCrLitros := (nCrVlAbast / nCrVlUnit)
	ElseIf nID == 2
		nCrVlAbast := (nCrLitros * nCrVlUnit)
	EndIf

	Inclui := .F.

	If NGVDHBomba( TQN->TQN_POSTO,TQN->TQN_LOJA,TQN->TQN_TANQUE,TQN->TQN_BOMBA,TQN->TQN_DTABAS,TQN->TQN_HRABAS,"'2'","'1'" )
		//"ATENÇÃO"###"Já existe uma aferição com data/hora superior a informada."
		//"Exclua as Aferições cadastradas com data/hora superior ou altere a data/hora deste abastecimento."
		ShowHelpDlg( STR0035,{STR0079},3,{STR0080},3 )
		lReturn := .F.
	EndIf

	Inclui := .T.

Return lReturn

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNA670VE   ³ Autor ³Thiago Olis Machado   ³ Data ³19/07/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Inverte a marcacao                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MNTA670                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNA670VE(cMarca)

	Local nPosFil
	Local aAreaOld := GetArea()

	dbSelectArea(cAliTRB3)
	dbGoTop()

	ProcRegua( LastRec() )

	While (cAliTRB3)->( !EoF() )

		IncProc(STR0033+(cAliTRB3)->NABAST) //"Marcando e/ou Desmarcando Abastecimento "

		RecLock((cAliTRB3),.F.)

		If Empty( (cAliTRB3)->ASSI )

			If ValidMark()
				(cAliTRB3)->ASSI := cMarca
				nSelec ++
				nTotalL += (cAliTRB3)->LITROS


				oMark:oBrowse:Refresh()
				oTotalL:Refresh()
				oSelec:Refresh()
			EndIf

		Else
			nSelec --
			(cAliTRB3)->ASSI := "  "
			nTotalL -= (cAliTRB3)->LITROS
			oTotalL:Refresh()
			oSelec:Refresh()

			If (nPosFil := aScan( aSelectFil, {|x| x[1] == (cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS( (cAliTRB3)->DTABAS ) + (cAliTRB3)->HRABAS} )) > 0
				aDel(aSelectFil, nPosFil)
				aSize(aSelectFil, Len(aSelectFil) - 1)
			EndIf
		EndIf

		MsUnLock(cAliTRB3)

		(cAliTRB3)->( dbSkip() )
	EndDo

	RestArea(aAreaOld)

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670PE  ³ Autor ³Thiago Olis Machado    ³ Data ³ 19/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Pesquisa especifica de NF                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNA670PE()

	Local dPeDtAbas := CToD("  /  /  ")
	Local oMenu

	Private oDlg3

	Define Dialog oDlg3 From 7,10 To 12,40 Title STR0034 //"Pesquisa"

	@  04, 05 Say    STR0013		Size 55,10 Of oDlg3 Pixel //"Data Abastecimento"
	@  04, 60 MsGet  dPeDtAbas	Size 40,10 Of oDlg3 Pixel Picture "99/99/99" HASBUTTON
	@  20, 60 Button STR0036		Size 40,09 Of oDlg3 Pixel Action (MNA670POS(dPeDtAbas)) //"OK"

	NGPOPUP(asMenu,@oMenu)
	oDlg3:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oDlg3)}

	Activate Dialog oDlg3 CENTERED

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNA670POS ³ Autor ³Thiago Olis Machado    ³ Data ³ 19/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Posiciona no registro                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MNA670POS(dPeDtAbas)

	Local aArea := (cAliTRB3)->( GetArea() )

	If !Empty(dPeDtAbas)

		dbSelectArea(cAliTRB3)
		dbsetorder(1)

		If !dbSeek(dPeDtAbas,.T.)
			RestArea(aArea)
		EndIf
	EndIf

	oDlg3:End()

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NGCHKALTKM³ Autor ³Evaldo Cevinscki Jr.   ³ Data ³ 19/06/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Faz checagem de km alterado                         		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NGCHKALTKM(cFrota,nHodom,nTpContador,dDtAba,cHrAba,cFilBem)

	Local nKmAnt, nKmPos, nHdom
	Local cEmpTTM, cFilTTM

	Local lSXPosco2	:= .T.
	Local lKmAnt		:= .T.
	Local lKmPos		:= .F.

	Local aKmsR	:= {}
	Local aChkLan	:= {}
	Local vArqDia	:= {}

	Local cOldEmp := cEmpAnt
	Local cOldFil := cFilAnt

	Store 0 To nKmAnt, nKmPos, nHdom

	dbSelectArea("TQN")
	If !CHKPOSLIM(cFrota,nHodom,nTpContador,cFilBem)
		Return .f.
	EndIf

	vArqDia := IIf(nTpContador = 1,{'STP','stp->tp_filial','stp->tp_codbem',;
	'stp->tp_dtleitu','stp->tp_hora','stp->tp_tipolan','stp->tp_poscont','stp->tp_viracon'},;
	{'TPP','tpp->tpp_filial','tpp->tpp_codbem',;
	'tpp->tpp_dtleit','tpp->tpp_hora','tpp->tpp_tipola','tpp->tpp_poscon','tpp->tpp_viraco'})


	If lSXPosco2  //Se for Contador2 verifica se existe o campo no dicionario
		dbSelectArea("TQN")
		cFrota := cFrota + Space( TamSX3('T9_CODBEM')[1] - Len(cFrota) )

		aChkLan := NGCHKCINC(cFrota,dDtAba,nHodom,cHrAba,nTpContador,.t.,cFilBem)
		If !aChkLan[1]
			MsgInfo(aChkLan[2],STR0057) //"NÃO CONFORMIDADE"
			Return .f.
		EndIf

		lVIRADA := .F.
		aKmsR := NGCONTAP(cFrota,DTOS(dDtAba),cHrAba,nTpcontador)
		nHdom := nHodom
		nKmAnt := aKmsR[1]
		nKmPos := aKmsR[2]

		If nHDOM <= aKmsR[1]
			dbSelectArea(vArqDia[1])
			dbSetOrder(5)
			dbSeek(xFilial(vArqDia[1],cFilBem) + cFrota + DToS(dDtAba))
			While !Eof() .And. &(vARQDIA[2]) == xFilial(vArqDia[1],cFilBem) .AND. &(vARQDIA[3]) == cFrota .And. &(vARQDIA[4]) == dDtAba

				If &(vARQDIA[7]) == nHodom .AND. &(vARQDIA[6]) <> 'A'

					lKmAnt := .F.

					If &(vARQDIA[5]) == cHrAba

						If &(vARQDIA[6]) $ "IQV"	  //I=Implantacao;Q=Quebra;V=Virada diminui 1 minuto

							nRecno := Recno()

							If !NGSTPALT(&(vARQDIA[2]),&(vARQDIA[3]),&(vARQDIA[4]),&(vARQDIA[5]))

								dbGoTo(nRecno)

								If &(vARQDIA[6]) == "I"
									cTipo := STR0058 //"Implantação"
								ElseIf &(vARQDIA[6]) == "Q"
									cTipo := STR0059 //"Quebra"
								ElseIf &(vARQDIA[6]) == "V"
									cTipo := STR0060 //"Virada"
								EndIf

								MsgInfo(STR0061+cTipo+STR0062,STR0057) //"Abastecimento com mesma data,hora e contador de um lançamento de "###" do Histórico de contador."

								Return .f.
							EndIf

							dbGoTo(nRecno)
						Else
							lVIRADA := .T.
						EndIf
					EndIf
				EndIf

				If &(vARQDIA[7]) > nHodom .AND. &(vARQDIA[6]) <> 'A'
					lKmAnt := .t.
				EndIf

				dbSelectArea(vArqDia[1])
				dbSkip()
			EndDo

			If nHDOM = aKmsR[1] .and. aKmsR[4] == 'A'
				lKmAnt := .t.
			ElseIf nHDOM = aKmsR[1] .and. aKmsR[4] <> 'A'
				lKmAnt := .f.
			EndIf

			If nHDOM = aKmsR[1] .And. aKmsR[4] == 'V' .And. ((aKmsR[10] < dDtAba) .Or. (aKmsR[10] == dDtAba .And. aKmsR[11] < cHrAba))
				lKmAnt := .f.
			EndIf

			nKmAnt := aKmsR[5]
			If nHDOM > aKmsR[5] .and. aKmsR[6] == 'A'
				lKmAnt := .f.
			EndIf

			If lKmAnt
				MsgInfo(STR0063+Chr(10)+Chr(10)+; //"O valor do contador não pode ser menor ou igual ao valor do contador anterior."
				STR0064+AllTrim(Str(nKmAnt))+Chr(13)+Chr(10)+; //"Contador Anterior: "
				STR0065+AllTrim(DTOC(aKmsR[10]))+Chr(13)+Chr(10)+; //"Data: "
				STR0066+AllTrim(aKmsR[11])+Chr(13)+Chr(10)+; //"Hora: "
				STR0067+AllTrim(aKmsR[12])+Chr(13)+Chr(10)+; //"Posto: "
				STR0068+AllTrim(aKmsR[13])+Chr(13)+Chr(10)+Chr(10)+; //"Loja: "
				STR0069+AllTrim(Str(nHodom))+Chr(13)+Chr(10)+; //"Contador Atual: "
				STR0065+AllTrim(DTOC(dDtAba))+Chr(13)+Chr(10)+; //"Data: "
				STR0066+AllTrim(cHrAba)+Chr(10)+Chr(13)+Chr(10)+; //"Hora: "
				STR0070+Chr(13)+Chr(10)+; //"Soluções Possíveis:"
				STR0071+Chr(13)+Chr(10)+; //"1 - Alterar o campo Hodômetro."
				STR0072,STR0057) //"2 - Cancelar a Operação."###"NÃO CONFORMIDADE"
				Return .F.
			EndIf
		EndIf

		If aKmsR[2] <> 0
			If nHDOM > aKmsR[2]
				If aKmsR[8] != dDtAba .OR. aKmsR[9] != cHrAba
					lKmPos := .T.
				EndIf
			EndIf

			If nHDOM = aKmsR[2] .and. aKmsR[3] == 'A'

				If aKmsR[8] != dDtAba .OR. aKmsR[9] != cHrAba
					lKmPos := .T.
				EndIf

			ElseIf nHDOM = aKmsR[2] .and. aKmsR[3] <> 'A'

				lKmPos := .F.

				dbSelectArea(vArqDia[1])
				dbSetOrder(5)
				dbSeek(xFilial(vArqDia[1],cFilBem)+cFrota+DTOS(dDtAba))
				While !EoF() .And. &(vARQDIA[2]) == xFilial(vArqDia[1],cFilBem) .AND. &(vARQDIA[3]) == cFrota .And. &(vARQDIA[4]) == dDtAba

					If &(vARQDIA[7]) == nHodom .AND. &(vARQDIA[6]) <> 'A'
						If &(vARQDIA[5]) == cHrAba
							lVIRADA := .T.
						EndIf
					EndIf

					dbSelectArea(vArqDia[1])
					dbSkip()
				EndDo
			EndIf

			If nHDOM > aKmsR[2] .And. aKmsR[3] $ 'QV' .And. ((aKmsR[8] > dDtAba) .Or. (aKmsR[8] == dDtAba .And. aKmsR[9] > cHrAba))
				lKmPos := .f.
			EndIf

			If nHDOM <= aKmsR[2] .And. aKmsR[3] == 'Q' .And. ((aKmsR[8] > dDtAba) .Or. (aKmsR[8] == dDtAba .And. aKmsR[9] > cHrAba))
				MsgInfo(STR0073,STR0057)   //"Abastecimento com data,hora e contador menor ou igual ao informado na quebra de contador."
				Return .f.
			EndIf

			If lKmPos
				MsgInfo(STR0074+Chr(10)+Chr(10)+; //"O valor do contador não pode ser maior ou igual ao valor do contador posterior."
				STR0075+AllTrim(Str(nKmPos))+Chr(13)+Chr(10)+; //"Contador Posterior: "
				STR0065+AllTrim(DTOC(aKmsR[8]))+Chr(13)+Chr(10)+; //"Data: "
				STR0066+AllTrim(aKmsR[9])+Chr(13)+Chr(10)+; //"Hora: "
				STR0067+AllTrim(aKmsR[14])+Chr(13)+Chr(10)+; //"Posto: "
				STR0068+AllTrim(aKmsR[15])+Chr(13)+Chr(10)+Chr(10)+; //"Loja: "
				STR0069+AllTrim(Str(nHodom))+Chr(13)+Chr(10)+; //"Contador Atual: "
				STR0065+AllTrim(DTOC(dDtAba))+Chr(13)+Chr(10)+; //"Data: "
				STR0066+AllTrim(cHrAba)+Chr(10)+Chr(13)+Chr(10)+; //"Hora: "
				STR0070+Chr(13)+Chr(10)+; //"Soluções Possíveis:"
				STR0071+Chr(13)+Chr(10)+; //"1 - Alterar o campo Hodômetro."
				STR0072,STR0057) //"2 - Cancelar a Operação."###"NÃO CONFORMIDADE"
				Return .F.
			EndIf
		EndIf
	EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NGATUKMS  ³ Autor ³Evaldo Cevinscki Jr.   ³ Data ³ 19/06/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Atualizacao de Km alterado na Conciliacao           		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NGATUKMS(cFROTA,dDTABAS,cHRABAS,nHODOM,nPOSCO2,cFilBem)

	Local lRet1Cont := .F.
	Local lRet2Cont := .F.
    Local lRetKm    := .T.  //Retorno da função

	//Posiciona na ST9 para atualizar contador
	dbSelectArea("ST9")
	dbSetOrder(01)
	dbSeek(xFilial("ST9",cFilBem) + cFrota)

	If nHODOM <> vDadoAtu[5] .Or. cFROTA <> vDadoAtu[2] .or. DtoS(dDTABAS) <> vDadoAtu[3]
		Begin Transaction
			aARALTC := {'STP','STP->TP_FILIAL','STP->TP_CODBEM',;
			'STP->TP_DTLEITU','STP->TP_HORA','STP->TP_POSCONT',;
			'STP->TP_ACUMCON','STP->TP_VARDIA','STP->TP_VIRACON'}

			aARABEM := {'ST9','ST9->T9_POSCONT','ST9->T9_CONTACU',;
			'ST9->T9_DTULTAC','ST9->T9_VARDIA'}

			dbSelectArea("STP")
			dbSetOrder(5)
			If dbSeek(xFilial("STP",vDadoAtu[1])+vDadoAtu[2]+vDadoAtu[3]+vDadoAtu[4])

				nDifCont := nHODOM - STP->TP_POSCONT
				nAcum655 := (STP->TP_ACUMCON - STP->TP_POSCONT) + nHODOM
				nRECNSTP := Recno()
				lULTIMOP := .T.
				nACUMFIP := 0
				nCONTAFP := 0
				nVARDIFP := 0
				dDTACUFP := CTOD('  /  /  ')

				dbSkip(-1)

				If !Eof() .And. !Bof() .And. &(aARALTC[2]) = xFilial(aARALTC[1],vDadoAtu[1]) .And.;
				&(aARALTC[3]) == vDadoAtu[2]

					nACUMFIP := &(aARALTC[7])
					dDTACUFP := &(aARALTC[4])
					nCONTAFP := &(aARALTC[6])
					nVARDIFP := &(aARALTC[8])
				EndIf

				dbGoTo(nRECNSTP)

				nACUMDEL := STP->TP_ACUMCON

				RecLock("STP",.F.)
				dbDelete()
				MsUnLock("STP")

				MNTA875ADEL(vDadoAtu[2],StoD(vDadoAtu[3]),vDadoAtu[4],1,cFilBem,cFilBem)
			EndIf

			If !NGCHKALTKM(cFrota,nHodom,1,dDtAbas,cHrAbas,cFilBem)
				DisarmTransaction()
				lRetKm := .F.
			EndIf

            If lRetKm
                If !lVIRADA
                    If !NGCHKHISTO(cFROTA,dDTABAS,nHODOM,cHRABAS,1,,.t.,cFilbem)
                        DisarmTransaction()
                        lRetKm := .F.
                    EndIf

                    If lRetKm .And. !NGVALIVARD(cFROTA,nHODOM,dDTABAS,cHRABAS,1,.t.,,cFilbem)
                        DisarmTransaction()
                        lRetKm := .F.
                    EndIf

                    If lRetKm
                        lRet1Cont := .T.
                    EndIf

                Else
                    dbSelectArea("STP")
                    dbSetOrder(5)
                    dbSeek(xFilial("STP",cFilbem)+cFROTA+DTOS(dDTABAS)+cHRABAS)

                    If STP->TP_POSCONT == nHODOM  .AND. (STP->TP_TIPOLAN $ 'CM')
                        RecLock("STP",.F.)
                        STP->TP_TIPOLAN := "A"
                        MsUnLock("STP")
                    EndIf
                EndIf
            EndIf
		End Transaction
	EndIf

    If lRetKm
        If lSegCont
            If nPOSCO2 <> vDadoAtu[9] .Or. cFROTA <> vDadoAtu[2] .or. DtoS(dDTABAS) <> vDadoAtu[3]
                Begin Transaction

                    dbSelectArea("TPP")
                    dbsetorder(5)
                    If dbSeek(xFilial("TPP",vDadoAtu[1])+vDadoAtu[2]+vDadoAtu[3]+vDadoAtu[4])
                        aARALTC := {'TPP','tpp->tpp_filial','tpp->tpp_codbem',;
                        'tpp->tpp_dtleit','tpp->tpp_hora','tpp->tpp_poscon',;
                        'tpp->tpp_acumco','tpp->tpp_vardia','tpp->tpp_viraco'}

                        aARABEM := {'TPE','tpe->tpe_poscon','tpe->tpe_contac',;
                        'tpe->tpe_dtulta','tpe->tpe_vardia'}

                        nAcu6552 := (tpp->tpp_acumco - TPP->TPP_POSCON) + nPOSCO2
                        nRECNTPP := Recno()
                        lULTIMOP := .T.
                        nACUMFIP := 0
                        nCONTAFP := 0
                        nVARDIFP := 0
                        dDTACUFP := Ctod('  /  /  ')

                        dbSkip(-1)

                        If !Eof() .And. !Bof() .And. &(aARALTC[2]) = xFilial(aARALTC[1],vDadoAtu[1]) .And.;
                        &(aARALTC[3]) == vDadoAtu[2]
                            nACUMFIP := &(aARALTC[7])
                            dDTACUFP := &(aARALTC[4])
                            nCONTAFP := &(aARALTC[6])
                            nVARDIFP := &(aARALTC[8])
                        EndIf

                        Dbgoto(nRECNTPP)

                        nACUMDEL := TPP->TPP_ACUMCO

                        RecLock("TPP",.f.)
                        DbDelete()
                        MsUnLock("TPP")

                        MNTA875ADEL(vDadoAtu[2],StoD(vDadoAtu[3]),vDadoAtu[4],2,cFilBem,cFilBem)
                    EndIf

                    If !NGCHKALTKM(cFrota,nPOSCO2,2,dDtAbas,cHrAbas,cFilBem)
                        DisarmTransaction()
                        lRetKm := .F.
                    EndIf

                    If lRetKm .And. !lVIRADA
                        If !NGCHKHISTO(cFROTA,dDTABAS,nPOSCO2,cHRABAS,2,,.t.,cFilbem)
                            lRetKm := .F.
                        EndIf

                        If lRetKm .And. !NGVALIVARD(cFROTA,nPOSCO2,dDTABAS,cHRABAS,2,.t.,,cFilbem)
                            DisarmTransaction()
                            lRetKm := .F.
                        EndIf

                        If lRetKm
                            lRet2Cont := .T.
                        EndIf
                    Else
                        dbSelectArea("TPP")
                        dbSetOrder(5)
                        dbSeek(xFilial("TPP",cFilbem)+cFROTA+DTOS(dDTABAS)+cHRABAS)

                        If TPP->TPP_POSCON == nPOSCO2 .AND. (TPP->TPP_TIPOLA $ 'CM')
                            RecLock("TPP",.F.)
                            TPP->TPP_TIPOLA := "A"
                            MsUnLock("TPP")
                        EndIf
                    EndIf
                End Transaction
            EndIf
        EndIf

        If lRet1Cont
            NGTRETCON(cFROTA,dDTABAS,nHODOM,cHRABAS,1,,,"A",cFilbem)
        EndIf

        If lRet2Cont
            If lSegCont
                NGTRETCON(cFROTA,dDTABAS,nPOSCO2,cHRABAS,2,,,"A",cFilbem)
            EndIf
        EndIf
    EndIf

Return lRetKm
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MNT670RAST³ Autor ³Evaldo Cevinscki Jr.   ³ Data ³ 23/06/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Checa se produto tem controle de rastreabilidade    		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MNTA670                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MNT670RAST(nQtLitros)

	Local aArea := GetArea()

	cCod := NGSEEK('TQI',MV_PAR03 + MV_PAR04 + (cAliTRB3)->TANQUE, 1, 'TQI->TQI_PRODUT')

	lChkLote := .F.

	If AllTrim(GetMV("MV_NGMNTES")) == 'S' .And. !Empty(cCod) .And. ;
	(AllTrim(GetMV("MV_RASTRO")) == 'S' .And. NGSEEK('SB1',cCod,1,"B1_RASTRO") <> "N") .Or.;
	(AllTrim(GetMV("MV_LOCALIZ")) == 'S' .And. NGSEEK('SB1',cCod,1,"B1_LOCALIZ") == "S")
		lChkLote := .t.
	EndIf

	If lChkLote
		If Len(vRastro) == 0

			cNComb	:= NGSEEK('TQM',MV_PAR05,1,'TQM->TQM_NOMCOM')
			vRastro 	:= NGINFRASTRO(cNComb,cCod,MV_PAR01,0,nQtLitros)

			If !vRastro[7]
				vRastro := {}
				RestArea(aArea)
				Return {lChkLote,.F.}
			EndIf
		Else
			If !NGCHKFRASTO(cCod,MV_PAR01,vRastro[2],vRastro[3],vRastro[1],vRastro[4],vRastro[5],nQtLitros)
				vRastro := {}

				RestArea(aArea)

				Return {lChkLote,.F.}
			EndIf
		EndIf
	EndIf

Return {lChkLote, .T.}

//---------------------------------------------------------------------
/*/{Protheus.doc} SelectFil
Monta janela para seleção de filial do tanque.

@author Pedro Henrique Soares de Souza
@since 11/03/2015

@return lRet Lógico
/*/
//---------------------------------------------------------------------
Static Function SelectFil(cAliasTrb)

	Local oDlg, oMarkFil, lOk

	Local cFilMark	:= ''
	Local cChaveTQN	:= (cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS((cAliTRB3)->DTABAS) + (cAliTRB3)->HRABAS

	Local aAreaOld	:= GetArea()
	Local aHeaderFil	:= {}
	Local aPesqMark	:= {}

	aAdd( aPesqMark, { "TQI_FILIAL" ,{ {"", "C", 255 , 0, "", "@!" } }} )
	aAdd( aHeaderFil, { "Filial"   , "TQI_FILIAL", 'C', TamSX3('TQI_FILIAL')[1], TamSX3('TQI_FILIAL')[2] })
	aAdd( aHeaderFil, { "Descrição", "TQI_DESFIL", 'C', Len('SM0->M0_FILIAL'), 0 })

	Define MsDialog oDlg Title OemToAnsi("Seleção de Filiais") From 0,0 To 450,550 Pixel //"Seleção de Filiais"

	oFWLayer := FWLayer():New()
	oFWLayer:Init( oDlg, .F., .T. )

	oFWLayer:AddLine( "LINETOP" , 37 , .F. )
	oFWLayer:AddCollumn( "COLTOP", 100, .F., "LINETOP" )

	oFWLayer:AddLine( "LINEBOT" , 63 , .F. )
	oFWLayer:AddCollumn( "COLBOT", 100, .F., "LINEBOT" )

	oFWLayer:addWindow('COLTOP', 'WinAbs', "Informações do Abastecimento"	, 100, .T., .F., {|| }, 'LINETOP', {|| }) //"Informações do Abastecimento"

	oPanelBot	:= oFWLayer:getColPanel( 'COLBOT', 'LINEBOT' )
	oPanelTop	:= oFWLayer:getWinPanel( 'COLTOP', 'WinAbs', 'LINETOP' )

	dbSelectArea('TQN')
	dbSetOrder(1)
	If dbSeek(cChaveTQN)

		@ 0.4, 01 Say OemToAnsi( 'Filial Abast.' ) Of oPanelTop	//'Filial'
		@ 0.4, 13 Say OemToAnsi( 'Num. Convênio' ) Of oPanelTop	//'Num. Abast.'
		@ 1.4, 01 Say OemToAnsi( 'Placa' ) Of oPanelTop	//'Placa'
		@ 1.4, 13 Say OemToAnsi( 'Frota' ) Of oPanelTop	//'Frota'
		@ 2.4, 01 Say OemToAnsi( 'Posto' ) Of oPanelTop	//'Posto'
		@ 2.4, 13 Say OemToAnsi( 'Loja' ) Of oPanelTop	//'Loja'
		@ 3.4, 01 Say OemToAnsi( 'Data' ) Of oPanelTop	//'Data'
		@ 3.4, 13 Say OemToAnsi( 'Hora' ) Of oPanelTop	//'Hora'

		@ 0.4, 05 MsGet TQN->TQN_FILIAL		Size 50, 10 Of oPanelTop When .F.
		@ 0.4, 18 MsGet TQN->TQN_NUMCON		Size 55, 10 Of oPanelTop When .F.
		@ 1.4, 05 MsGet TQN->TQN_PLACA		Size 50, 10 Of oPanelTop When .F.
		@ 1.4, 18 MsGet TQN->TQN_FROTA		Size 55, 10 Of oPanelTop When .F.
		@ 2.4, 05 MsGet TQN->TQN_POSTO		Size 50, 10 Of oPanelTop When .F.
		@ 2.4, 18 MsGet TQN->TQN_LOJA		Size 55, 10 Of oPanelTop When .F.
		@ 3.4, 05 MsGet TQN->TQN_DTABAS		Size 50, 10 Of oPanelTop When .F. HasButton
		@ 3.4, 18 MsGet TQN->TQN_HRABAS		Size 55, 10 Of oPanelTop When .F.

		//@ 1.4, 51 Button "Visualizar Bem"		Of oPanelTop SIZE 50, 10 Action ( fViewReg(1) ) //"Visualizar Abast."
		@ 2.8, 51 Button "Visualizar Posto"	Of oPanelTop SIZE 50, 10 Action ( fViewReg(2) ) //"Visualizar Abast."
		@ 4.2, 51 Button "Visualizar Abast."	Of oPanelTop SIZE 50, 10 Action ( fViewReg(3) ) //"Visualizar Abast."

	EndIf

	oMarkFil := FWMarkBrowse():New()
	oMarkFil:SetOwner(oPanelBot)
	oMarkFil:SetAlias(cAliasTrb)
	oMarkFil:SetDescription( OemToAnsi("Selecione a filial para baixa de estoque deste abastecimento") ) //"Seleção de Filiais"
	oMarkFil:SetMenuDef('')
	oMarkFil:SetTemporary(.T.)
	oMarkFil:SetFieldMark('TQI_OK')
	oMarkFil:SetFields( aHeaderFil )
	oMarkFil:SetSeek(.T., aPesqMark)
	oMarkFil:SetWalkThru(.F.)
	oMarkFil:SetAmbiente(.F.)
	oMarkFil:SetAllMark({|| MarkAllFil( oMarkFil, cAliasTrb ) })
	oMarkFil:SetMark("X", cAliasTrb, 'TQI_OK')
	oMarkFil:SetAfterMark( {|| AfterMark( oMarkFil, cAliasTrb ) } )
	oMarkFil:DisableReport()
	oMarkFil:DisableSaveConfig()
	oMarkFil:DisableConfig()
	oMarkFil:Activate()

	Activate MsDialog oDlg On Init EnchoiceBar(oDlg, {|| IIf(CheckMarks(oMarkFil, cAliasTrb), (lOk := .T., oDlg:End()), ) }, {||oDlg:End()}) Centered

	If lOk
		dbSelectArea( cAliasTrb )
		dbSetOrder()
		dbGoTop()
		While !EoF()
			If oMarkFil:IsMark()
				cFilMark := (cAliasTrb)->TQI_FILIAL
			EndIf

			(cAliasTrb)->( dbSkip() )
		EndDo
	EndIf

	RestArea(aAreaOld)

Return cFilMark

//---------------------------------------------------------------------
/*/{Protheus.doc} NewTrbTanq
Monta tabela temporária com filiais encontradas.

@author Pedro Henrique Soares de Souza
@since 11/03/2015

@return lRet Lógico
/*/
//---------------------------------------------------------------------
Static Function NewTrbTanq()

	Local oTmpPost := Nil
	Local cQry     := ''
	Local cAlsTQI  := GetNextAlias()
	Local aStruct  := { { 'TQI_OK'    , 'C', 1                        , 0 },;
				 	    { 'TQI_FILIAL', 'C', TamSX3( 'TQI_FILIAL' )[1], 0 },;
				 	    { 'TQI_DESFIL', 'C', Len( SM0->M0_FILIAL )    , 0 } }

	oTmpPost:= FWTemporaryTable():New( cAlsTQI, aStruct )
	oTmpPost:AddIndex( '1', { 'TQI_FILIAL' } )
	oTmpPost:Create()

	cQry :=	"SELECT DISTINCT "
	cQry += 	"TQF.TQF_CODFIL AS TQI_FILIAL"
	cQry +=	"FROM " 
	cQry += 	RetSQLName( 'TQF' ) + " TQF "
	cQry +=	"INNER JOIN "
	cQry +=		RetSQLName( 'TQI' ) + " TQI ON "
	cQry +=			"TQI.TQI_CODPOS = TQF.TQF_CODIGO           AND "
	cQry +=			"TQI.TQI_LOJA   = TQF.TQF_LOJA             AND "
	cQry +=			"TQI.TQI_CODCOM = " + ValToSQL( (cAliTRB3)->CODCOM ) + " AND "
	cQry +=			"TQI.TQI_TANQUE = " + ValToSQL( (cAliTRB3)->TANQUE ) + " AND "
	cQry +=			"TQI.D_E_L_E_T_ <> '*' "
	cQry +=	"WHERE "
	cQry +=		"TQF.TQF_CODIGO = " + ValToSQL( MV_PAR03 ) + " AND "
	cQry +=		"TQF.TQF_LOJA   = " + ValToSQL( MV_PAR04 ) + " AND "
	cQry +=		"TQF.D_E_L_E_T_ <> '*' "

	// Transfere dados obtidos na query para tabela temporária.
	SqlToTrb( cQry, aStruct, cAlsTQI )

	dbSelectArea(cAlsTQI)
	dbGoTop()
	
	While (cAlsTQI)->( !EoF() )

		RecLock( cAlsTQI, .F. )
		
		(cAlsTQI)->TQI_DESFIL := FWFilialName( cEmpAnt, (cAlsTQI)->TQI_FILIAL, 3 )
		(cAlsTQI)->TQI_OK     := ' '
		(cAlsTQI)->( MsUnLock() )

		(cAlsTQI)->( dbSkip() )

	End

Return { cAlsTQI, oTmpPost }

//----------------------------------------------------------------------
/*/{Protheus.doc} MarkAllFil
Marca/Desmarca todos os registros da tela do MarkBrowse

@author Pedro Henrique Soares de Souza
@since 11/03/2015

@return Nil Nulo
/*/
//---------------------------------------------------------------------
Static Function MarkAllFil( oMarkFil, cAliasTrb )

	If  ( cAliasTrb )->( LastRec() ) > 1
		MsgInfo( "É possível selecionar apenas uma filial." ) //"É possível selecionar apenas uma filial."
	Else
		dbSelectArea( cAliasTrb )
		dbSetOrder()
		dbGoTop()
		While !EoF()

			( cAliasTrb )->( RecLock( cAliasTrb, .F. ) )
			( cAliasTrb )->TQI_OK := IIf( Empty( ( cAliasTrb )->TQI_OK ), "X", " " )
			( cAliasTrb )->( MsUnLock() )

			dbSelectArea( cAliasTrb )
			dbSkip()
		EndDo
	EndIf

	oMarkFil:Refresh( .F. )

Return Nil

//----------------------------------------------------------------------
/*/{Protheus.doc} AfterMark
Realiza validação das marcações. Quando uma opção é marcada as outras são
desmarcadas, pois é possível selecionar apenas uma filial.

@author Pedro Henrique Soares de Souza
@since 11/03/2015

@return Nil Nulo
/*/
//---------------------------------------------------------------------
Static Function AfterMark( oMarkFil, cAliasTrb )

	Local aArea		:= GetArea()
	Local cFilMark	:= (cAliasTrb)->TQI_FILIAL

	dbSelectArea( cAliasTrb )
	dbSetOrder()
	dbGoTop()
	While !EoF()

		If (cAliasTrb)->TQI_FILIAL <> cFilMark
			If oMarkFil:IsMark()
				( cAliasTrb )->( RecLock( cAliasTrb, .F. ) )
				( cAliasTrb )->TQI_OK := " "
				( cAliasTrb )->( MsUnLock() )
			EndIf
		EndIf

		dbSelectArea( cAliasTrb )
		dbSkip()
	EndDo

	oMarkFil:Refresh( .F. )

	RestArea(aArea)

Return .T.

//----------------------------------------------------------------------
/*/{Protheus.doc} CheckMarks
Verifica se alguma filial foi marcada quando a tela foi confirmada.

@author Pedro Henrique Soares de Souza
@since 11/03/2015

@return Nil Nulo
/*/
//---------------------------------------------------------------------
Static Function CheckMarks( oMarkFil, cAliasTrb )

	Local lRet		:= .F.
	Local aArea	:= GetArea()

	dbSelectArea( cAliasTrb )
	dbSetOrder()
	dbGoTop()
	While !EoF()

		If oMarkFil:IsMark()
			lRet := .T.
		EndIf

		(cAliasTrb)->( dbSkip() )
	EndDo

	If !lRet
		ShowHelpDlg("Atenção", {"Nenhuma filial foi selecionada."}, 2, {"Selecione a filial correpondente ao tanque selecionado."}, 2)

		//STR0042 - "Atenção"
		//STR0099 - "Nenhuma filial foi selecionada."
		//STR0100 - "Selecione a filial correpondente ao tanque selecionado."
	EndIf

	RestArea(aArea)

Return lRet

//---------------------------------------------------------------------
/*/{Protheus.doc} fViewReg
Monta tabela temporária com filiais encontradas.

@author Pedro Henrique Soares de Souza
@since 15/03/2015

@param nView - Indica se a visualização é para:
1 - Bem
2 - Posto
3 - Abastecimento

@return Nil Nulo
/*/
//---------------------------------------------------------------------
Static Function fViewReg(nView)

	Local aAreaOld := GetArea()

	dbSelectArea("TQN")
	dbSetOrder(1)
	If dbSeek((cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS( (cAliTRB3)->DTABAS ) + (cAliTRB3)->HRABAS)

		Do Case

			Case nView == 1 //Bem

			//Verificar função para visualização do bem
			/*dbSelectArea('ST9')
			dbSetOrder(1)
			If dbSeek(TQN->TQN_FILIAL + TQN->TQN_FROTA)
			--
			EndIf*/

			Case nView == 2 //Posto

			dbSelectArea('TQF')
			dbSetOrder(1)
			If dbSeek(xFilial("TQF") + TQN->TQN_POSTO + TQN->TQN_LOJA)
				MNT610CAD('TQF', TQF->( Recno() ), 2)
			EndIf

			Case nView == 3 //Abastecimento

			MNT655SC('TQN', TQN->( Recno() ), 2)

		EndCase
	Else
		ShowHelpDlg("Atenção", {"Não foi possível localizar este abastecimento."}, 2,;
		{"Verifique se o abastecimento realizado é consistente."}, 2)
	EndIf

	RestArea(aAreaOld)

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} LoadFilTQI
Verifica se a filial do registro está correto na tabela de Tanque

@author Pedro Henrique Soares de Souza
@since 15/03/2015

@return Nil Nulo
/*/
//---------------------------------------------------------------------
Static Function LoadFilTQI()

	Local aAreaOld	  := GetArea()
	Local aDadosTrb	  := {}
	Local cFilBaixa   := ''
	Local nCount      := 0
	Local oTempPost   := Nil

	Private lDtvSgCnt := NGCADICBASE("TPE_SITUAC", "A", "TPE", .F.)

	MsgRun( "Verificando registros...", , { || aDadosTrb := NewTrbTanq() } ) //"Selecionando Filiais..."

	cAlsTQI   := aDadosTrb[1]
	oTempPost := aDadosTrb[2]
	nCount    := (cAlsTQI)->( LastRec() )

	If nCount == 1

		dbSelectArea(cAlsTQI)
		dbGoTop()
		If !EoF()
			cFilBaixa := (cAlsTQI)->TQI_FILIAL
		EndIf

		aAdd( aSelectFil, { (cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS( (cAliTRB3)->DTABAS ) + (cAliTRB3)->HRABAS, cFilBaixa})

	ElseIf nCount > 1

		If MV_PAR07 == 1
			cFilBaixa := SelectFil( cAlsTQI )
		Else
			cFilBaixa := cFilAnt
		EndIf

		If !Empty( cFilBaixa )

			//aSelectFil[n][1] - Chave da TRB
			//aSelectFil[n][2] - Filial da baixa

			aAdd( aSelectFil, {(cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS( (cAliTRB3)->DTABAS ) + (cAliTRB3)->HRABAS, cFilBaixa})

		EndIf

	EndIf

	// Deleta arquivo temporário
	oTempPost:Delete()

	RestArea( aAreaOld )

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} ValidMark
Verifica se o registro é válido para marcação.

@author Pedro Henrique Soares de Souza
@since 15/03/2015

@return lRet Lógico
/*/
//---------------------------------------------------------------------
Static Function ValidMark()

	Local lRet			:= .T.
	Local aAreaOld	:= GetArea()

	dbSelectArea("TQN")
	dbSetOrder(1)
	If dbSeek((cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS( (cAliTRB3)->DTABAS ) + (cAliTRB3)->HRABAS)

		//------------------------------------------------------------
		// Valida se foi inicializado Historico do Contador da Bomba
		//------------------------------------------------------------
		If AliasInDic("TTV")
			dbSelectArea("TQF")
			dbSetOrder(1)
			If dbSeek(xFilial("TQF") + TQN->TQN_POSTO + TQN->TQN_LOJA)
				If TQF->TQF_TIPPOS == '2'

					lTTV := .F.

					// Recupera a filial do tanque.
					LoadFilTQI()

					If lRet

						If (nPosFil := aScan( aSelectFil, {|x| x[1] == (cAliTRB3)->FILIAL + (cAliTRB3)->FROTA + DToS( (cAliTRB3)->DTABAS ) + (cAliTRB3)->HRABAS} )) > 0
							
							dbSelectArea( 'TTV' )
							dbSetOrder( 1 )
							If dbSeek( xFilial( 'TTV', aSelectFil[nPosFil,2] ) + TQN->TQN_POSTO + TQN->TQN_LOJA + TQN->TQN_TANQUE + TQN->TQN_BOMBA )
								If TTV->TTV_DATA < TQN->TQN_DTABAS .Or. (TTV->TTV_DATA == TQN->TQN_DTABAS .And. TTV->TTV_HORA < TQN->TQN_HRABAS)
									lTTV := .T.
								EndIf
							EndIf

							If !lTTV
								ShowHelpDlg(STR0035,{STR0077},3,;	//"Inclusão não permitida pois não existe histórico do Contador da Bomba com Data/Hora inferior a informada."
								{STR0078},3)			//"Informe um contador inicial no cadastro de Tanque/Bomba."
								lRet := .F.
							EndIf
						Else
							lRet := .F.
						EndIf
					EndIf
				EndIf

				If !lRet
					(cAliTRB3)->( RecLock(cAliTRB3,.F.) )
					(cAliTRB3)->ASSI := "  "
					(cAliTRB3)->( MsUnLock(cAliTRB3) )

					oMark:oBrowse:Refresh()
					Return .f.
				EndIf

			EndIf
		EndIf
	Else
		ShowHelpDlg("Atenção", {"Não foi possível localizar este abastecimento."}, 2,;
		{"Verifique se o abastecimento realizado é consistente."}, 2)
	EndIf

Return lRet
