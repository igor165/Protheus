#Include "Protheus.ch"
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡Æo    ³ NgMdtXnu ³ Autor ³ Denis Hyroshi de Souza³ Data ³28/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Retira do menu as rotinas da SIPAT                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMdt - Protheus 10 Release 1.1                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NgMdtXnu()
Local nI,i
Local nPos1,nPos2

Private aMenus   := {} //contem itens dos menus escolhidos
Private aNewMnu  := {} //contem itens do menu a gerar
Private aFathers := {}
Private nNext    := 0
Private aTipos   := {"10","20","30","40"}
Private nTitle   := 1
Private aCreated := {}
Private cNextCargo := Space(06)
Private cTabTxt  := Chr(9)

CursorWait()

//Carrega Menu
cFile := Alltrim(NgRetMenu())
aXnu  := XNULoad( cFile )

//Se tem as tabelas do controle da SIPAT, não será retirado do menu
If NGCADICBASE("TLH_SIPAT","A","TLH",.F.) .And. NGCADICBASE("TLI_SIPAT","A","TLI",.F.)
	CursorArrow()
	Return .f.
Endif

//Carrega variavel aMenus com o menu original
For nI := 1 To Len( aXnu )
	If ( ValType( aXnu [nI][3] ) == 'A' )
		cCargo := Padr("@"+StrZero(1,3,0)+StrZero(nI,1)+"0",10)
		cTitle := aXnu [nI][1][1]
		cFather := StrZero(nI,1)+"0"
		Aadd( aFathers, cFather )
		BuildRecur( aXnu [nI][3], nI )
	Else
		cCargo := StrZero(1,1)+"0"+StrZero(nNext,6,0)
		cTitle := aXnu [nI][1][1]			
	EndIf
Next nI
aMenus := Asort(aMenus,,,{|x,y| x[10]<y[10]})

//Verifica se as rotinas ja foram retiradas do Menu... Se sim, o menu nao sera alterado
nPosA := Ascan(aMenus,{|x| x[3] == "MDTA700" })
nPosB := Ascan(aMenus,{|x| x[3] == "MDTR950" })
If nPosA == 0 .and. nPosB == 0
	CursorArrow()
	Return .f.
Endif

//Carrega variavel aNewMnu com as mesmas informacoes da variavel aMenus
For i := 1 To Len(aTipos)
	bSeek := &("{|x| x[9] == 1 .and. x[1] == '"+aTipos[i]+"'}" )
	fLoadMenu(aTipos[i],bSeek,"@"+aTipos[i])
Next

//Retira da variavel aNewMnu as rotinas MDTA700 e MDTR950
nPos1 := Ascan(aNewMnu,{|x| x[3] == "MDTA700" })
nPos2 := Ascan(aNewMnu,{|x| x[3] == "MDTR950" })
If nPos1 > 0 .or. nPos2 > 0
	If nPos1 > 0 .and. nPos2 > 0
		If nPos2 > nPos1
			Adel(aNewMnu,nPos2)
			ASize(aNewMnu,Len(aNewMnu)-1)
			Adel(aNewMnu,nPos1)
			ASize(aNewMnu,Len(aNewMnu)-1)
		Else
			Adel(aNewMnu,nPos1)
			ASize(aNewMnu,Len(aNewMnu)-1)
			Adel(aNewMnu,nPos2)
			ASize(aNewMnu,Len(aNewMnu)-1)
		Endif
	ElseIf nPos1 > 0
		Adel(aNewMnu,nPos1)
		ASize(aNewMnu,Len(aNewMnu)-1)
	ElseIf nPos2 > 0
		Adel(aNewMnu,nPos2)
		ASize(aNewMnu,Len(aNewMnu)-1)
	Endif

	//Cria arquivo XNU novo
	fCriaXNU( cFile, aNewMnu )
	
	//Finaliza o sistema
	MsgStop("O Arquivo "+Alltrim(cFile)+" foi alterado, pois existiam itens incompatíveis com a sua versão do Protheus.")
	Final("Por favor, efetue o logoff e acesse novamente o sistema.")
Endif
CursorArrow()
Return aCreated

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡Æo    ³BuildRecur³ Autor ³ Denis Hyroshi de Souza³ Data ³28/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Carrega variavel aMenus com as opcoes de Menu do SIGAMDT   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMdt - Protheus 10 Release 1.1                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function BuildRecur( aXnu, nTipo)
Local nI
Local nX
Local cTitle
Local cTipo
Local aReg
Local cAlias
Local cCargo
Local cFather
Default aMenus	:= {}

For nI := 1 To Len( aXnu )
	nNext 	:= nNext + 1
	cTipo	:= StrZero(nTipo,1)+"0"
	cTitle := aXnu [nI][1][1]

	If ( ValType( aXnu [nI][3] ) == 'A' )

		cFather := aFathers[Len(aFathers)]
		cCargo  := cTipo+StrZero(nNext,6,0)
		aReg := {Str(nTipo,1)+"0",;
				 {Padr(aXnu[nI][1][1],25),Padr(aXnu[nI][1][2],25),Padr(aXnu[nI][1][3],25)},;
				 Space(10),;
				 Space(90),;
				 Space(10),;
				 Space(02),;
				 cCargo,;
				 cFather,;
				 1,;
				 "",;
				 1}
		aReg[10] := StrZero(1,6,0)+aReg[7]
		
		Aadd(aMenus,Aclone(aReg))
		cFather := cCargo
		Aadd( aFathers, cFather )
	
		BuildRecur( aXnu [nI][3], nTipo )
		Adel( aFathers, Len(aFathers) )
		ASize( aFathers, Len(aFathers)-1 )
	Else
		cFather := aFathers[Len(aFathers)]
		cAlias := aXnu[nI,2]
		For nX:=1 To Len(aXnu[nI,4])
			cAlias += aXnu[nI,4,nX]
		Next nX
		aReg := {Str(nTipo,1)+"0",;
				 {Padr(aXnu[nI][1][1],25),Padr(aXnu[nI][1][2],25),Padr(aXnu[nI][1][3],25)},;
				 aXnu [nI][3],;
				 cAlias,;
				 aXnu [nI][5],;
				 aXnu [nI][6],;
				 cTipo+StrZero(nNext,6,0),;
				 cFather,;
				 1,;
				 "",;
				 aXnu [nI][7]}
		aReg[10] := StrZero(1,6,0)+aReg[7]
		If !Empty(cFather)
			aReg[8] := cFather
		EndIf
		Aadd(aMenus,Aclone(aReg))
	EndIf
Next
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡Æo    ³fLoadMenu ³ Autor ³ Denis Hyroshi de Souza³ Data ³28/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Carrega variavel aNewMnu com as mesmas informacoes da      ³±± 
±±³          ³ variavel aMenus                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMdt - Protheus 10 Release 1.1                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fLoadMenu(cFather,bSeek,cSeek)
Local nStart := 1
Local nPos1 := 0
Local nEnd := Len(aMenus)
Local bBlock
Local nNext
Local cNext
Local nLen
Local aGroups := {}
Local cFolder

DEFAULT cSeek := cFather

While ( nPos1 := Ascan(aMenus,bSeek,nStart)) > 0

	//verifica se e um grupo
	If Empty(aMenus[nPos1][3])
		Aadd(aGroups,aMenus[nPos1][7])
		nPos2 := Ascan(aNewMnu,{|x| x[1] == Subs(cFather,1,2) .and. Upper(x[2][nTitle]) == Upper(aMenus[nPos1][2][nTitle]) .and. Empty(x[3])})
		If ( nPos2 == 0 )
			cNextCargo := Soma1(cNextCargo)
			cNext := Subs(cFather,1,2)+cNextCargo
			Aadd(aNewMnu,Aclone(aMenus[nPos1]))
			nLen := Len(aNewMnu)
			aNewMnu[nLen][1] := Subs(cNext,1,2)
			aNewMnu[nLen][7] := .T.
			aNewMnu[nLen][8] := cNext
			aNewMnu[nLen][9] := cFather
			aNewMnu[nLen][10] := .F.
		Else
			cNext := aNewMnu[nPos2][8]
		EndIf
		bBlock := &("{|x| x[8] == '"+aMenus[nPos1][7]+"' .And. x[7] <> '"+aMenus[nPos1][7]+"' }")
		fLoadMenu(cNext,bBlock)
	
	//verifica se o item ja foi adicionado em algum grupo
	ElseIf ( Ascan(aGroups,{|x| x == aMenus[nPos1][8]}) == 0 )
	
		//verifica se o programa a ser adicionado ja existe no novo menu
		If Ascan(aNewMnu,{|x| x[3] == aMenus[nPos1][3]} ) == 0
			cNextCargo := Soma1(cNextCargo)
			cNext := Subs(cFather,1,2)+cNextCargo
			Aadd(aNewMnu,Aclone(aMenus[nPos1]))
			nLen := Len(aNewMnu)
			aNewMnu[nLen][1] := Subs(cNext,1,2)
			aNewMnu[nLen][7] := .F.
			aNewMnu[nLen][8] := cNext
			aNewMnu[nLen][9] := cFather
			aNewMnu[nLen][10] := .F.
		EndIf
	EndIf
	
	nStart := nPos1+1
	If ( nStart > nEnd )
		Exit
	EndIf
End

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡Æo    ³ fCriaXNU ³ Autor ³ Denis Hyroshi de Souza³ Data ³28/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Cria arquivo XNU                                           ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMdt - Protheus 10 Release 1.1                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fCriaXNU( cFile, aNewXNU )
Local i
Local nHdl
Local bSeek
Local cBackup
Local nBytes := 0
Local cArquivo
Local cDir
Local nAt
Local aStruct := {	{ "Atualizações", "Actualizaciones", "Updates" },;
					{ "Consultas", "Consultas", "Queries" },;
					{ "Relatórios", "Informes", "Reports" },;
					{ "Miscelanea", "Miscelanea", "Miscellaneous" }}

nAt := At( '.', cFile )
If nAt > 0
	cArquivo := Subs(Upper(cFile), 1, nAt -1 ) + RetExtMnu()
Else
	cArquivo := AllTrim(Upper(cFile)) + RetExtMnu()
EndIf

//cria backup do arquivo
nNumBack := 0
cBackup := StrTran(cArquivo,".X",".#")
For i := 1 To 999
	If !File(cBackup+StrZero(i,3))
		Frename(cArquivo,cBackup+StrZero(i,3))
		nNumBack := i
	Endif
Next i
If nNumBack == 0
	Frename(cArquivo,cBackup)
Endif
	
//cria e verifica se houve sucesso
nHdl := Fcreate(cArquivo)
If nHdl < 0
	Frename(cBackup,cArquivo)
Else
	FWrite( nHdl, '<ApMenu>' + CRLF )
	FWrite( nHdl, cTabTxt + '<DocumentProperties>' + CRLF )
	FWrite( nHdl, cTabTxt + cTabTxt + '<Module>SIGAMDT</Module>' + CRLF )
	FWrite( nHdl, cTabTxt + cTabTxt + '<Version>9.12</Version>' + CRLF )
	FWrite( nHdl, cTabTxt + '</DocumentProperties>' + CRLF )
	For i := 1 To Len(aTipos)
		FWrite( nHdl, cTabTxt + '<Menu Status="Enable">' + CRLF )
		FWrite( nHdl, cTabTxt + '	<Title lang="pt">'+aStruct[i][1]+'</Title>' + CRLF )
		FWrite( nHdl, cTabTxt + '	<Title lang="es">'+aStruct[i][2]+'</Title>' + CRLF )
		FWrite( nHdl, cTabTxt + '	<Title lang="en">'+aStruct[i][3]+'</Title>' + CRLF )
		bSeek := &("{|x| x[9] == '"+aTipos[i]+"'}" )
		fWriteXNU(nHdl,bSeek,2)			
		FWrite( nHdl, cTabTxt + '</Menu>' + CRLF )
	Next
	FWrite( nHdl, '</ApMenu>' + CRLF )

	Fclose(nHdl)
	DbCommit()
	cDir := Subs(cArquivo,1,RAt('\',cArquivo))
	cArquivo := Subs(cArquivo,RAt('\',cArquivo)+1)
	If ( Ascan(aCreated,{|x| AllTrim(x[1]) == cDir .and. AllTrim(x[1]) == cArquivo}) == 0 )
		Aadd(aCreated,{cDir,cArquivo})
	EndIf
EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡Æo    ³ fWriteXNU³ Autor ³ Denis Hyroshi de Souza³ Data ³28/07/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Escreve as informacoes no arquivo XNU                      ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMdt - Protheus 10 Release 1.1                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fWriteXNU(nHdl,bSeek,nTabs)
Local nStart := 1
Local nPos := 0
Local nEnd := Len(aNewMnu)
Local bBlock
Local cBuffer
Local aGroups := {}
Local nWrite := 0
Local lHasGroup := .F.
Local cStatus	:= ""
Local nJ

Local cTable

While ( nPos := Ascan(aNewMnu,bSeek,nStart)) > 0
	If ( aNewMnu[nPos][7] )
		
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '<Menu Status="Enable">' + CRLF )
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Title lang="pt">' + Capital(AllTrim(aNewMnu [nPos][2][1])) + '</Title>' + CRLF )
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Title lang="es">' + Capital(AllTrim(aNewMnu [nPos][2][2])) + '</Title>' + CRLF )
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Title lang="en">' + Capital(AllTrim(aNewMnu [nPos][2][3])) + '</Title>' + CRLF )
		
		Aadd(aGroups,aNewMnu[nPos][8])
        bBlock := &("{|x| x[9] == '"+aNewMnu[nPos][8]+"'}")
		fWriteXNU(nHdl,bBlock,nTabs+1)
		
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '</Menu>' + CRLF )
		
    ElseIf ( Ascan(aGroups,{|x| x == aNewMnu[nPos][9]}) == 0 )
		
		cStatus := Subs(aNewMnu[nPos][4],1,1)
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '<MenuItem Status="'+If(cStatus=="D",'Disable',If(cStatus=="H",'Hidden','Enable'))+'">' + CRLF )		
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Title lang="pt">' + Capital(AllTrim(aNewMnu [nPos][2][1])) + '</Title>' + CRLF )
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Title lang="es">' + Capital(AllTrim(aNewMnu [nPos][2][2])) + '</Title>' + CRLF )
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Title lang="en">' + Capital(AllTrim(aNewMnu [nPos][2][3])) + '</Title>' + CRLF )
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Function>' + AllTrim(aNewMnu [nPos][3]) + '</Function>' + CRLF )
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Type>' + AllTrim( Str(aNewMnu [nPos][11]) ) + '</Type>' + CRLF )
		
		For nJ := 2 To Len( aNewMnu [nPos][4] ) Step 3
		
			cTable := Subs( aNewMnu [nPos][4], nJ, 3 )
			
			If ( cTable == '...' )
                Exit
			Else
				FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Tables>' + cTable + '</Tables>' + CRLF )		
			EndIf
		
		Next
		
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Access>' + aNewMnu [nPos][5] + '</Access>' + CRLF )		
		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '	<Module>' + aNewMnu [nPos][6] + '</Module>' + CRLF )		
   		FWrite( nHdl, Replicate(cTabTxt, nTabs) + '</MenuItem>' + CRLF )
		
	EndIf
	
	nStart := nPos+1
	If ( nStart > nEnd )
		Exit
	EndIf
End
Return nWrite