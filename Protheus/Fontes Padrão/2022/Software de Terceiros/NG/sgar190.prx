#INCLUDE "SGAR190.ch"
#INCLUDE "PROTHEUS.CH"
#DEFINE _nVERSAO 02 //Versao do fonte

//---------------------------------------------------------------------
/*/{Protheus.doc} SGAR190
Relatório de Ocorrências do Plano Emergencial

@author Alessandro Smaha
@since 04/03/2013
@version P11
@return Nil
/*/
//---------------------------------------------------------------------

Function SGAR190()

	Local aNGBEGINPRM := NGBEGINPRM(_nVERSAO)
	Local oReport
	Local aArea := GetArea()
	Private cPERG := "SGAR190"
	Private aPerg :={}
	Private lok := .T.

	//valida se update foi aplicado
	IF !NGCADICBASE('TBV_DESOCO','A','TBV',.F.)

		NGINCOMPDIC("UPDSGA18","XXXXXX")

		Return .F.
	Endif

	oReport := ReportDef()

	If lOk
		oReport:PrintDialog()
	Endif

	NGRETURNPRM(aNGBEGINPRM)

	RestArea(aArea)

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} ReportDef
Constrói o objeto instância da Classe TReport


@author Alessandro Smaha
@since 04/03/2013
@version P11
@return Nil
/*/
//---------------------------------------------------------------------

Static Function ReportDef()
Local oReport
Local  oFont
Local lOHSAS := AliasInDic("TCY") .And. SuperGetMV("MV_NG2OHSA",.F.,"2") == "1"
Local lAmbien := NGCADICBASE("TBV_AMBIEN","A","TBV",.F.)

oReport := TReport():New("SGAR190",OemToAnsi(STR0017),cPERG,{|oReport| ReportPrint(oReport)},STR0018) //"Ocorrências do Plano Emergencial"###"O relatório apresentará uma listagem das ocorrências dos planos emergenciais no período."


If !Pergunte(oReport:uParam)
	lOk := .F.
	return oReport
Endif

oReport:SetLandScape()        // Define orientação de página do relatório como paisagem.
oReport:setTotalInLine(.F.)
oReport:DisableOrientation() // Desabilita a seleção da orientação (Retrato/Paisagem)

//oReport:SetBorder(5)

oReport:cFontBody := 'Courier New'
oReport:nFontBody := 6
//oReport:lBold := .T.

oOcorr:= TRSection():New(oReport,STR0017,{"TBB","TBV"},/*aOrdem*/)//"Relatório de Ocorrências do Plano Emergencial"
	TRCell():New(oOcorr,"CODOCOR",,STR0019  ,X3Picture("TBV_CODOCO"),TamSx3("TBV_CODOCO")[1]+50,/*lPixel*/) //"Ocorrência
	TRCell():New(oOcorr,"DESOCOR",,STR0020  ,X3Picture("TBV_DESOCO"),TamSx3("TBV_DESOCO")[1]+30,/*lPixel*/) //"Nome"
	TRCell():New(oOcorr,"DATOCOR",,STR0021  ,X3Picture("TBV_DATA")  ,TamSx3("TBV_DATA")[1]+10  ,/*lPixel*/) //"Data"
	TRCell():New(oOcorr,"HOROCOR",,STR0022  ,X3Picture("TBV_HORA")  ,TamSx3("TBV_HORA")[1]+10  ,/*lPixel*/) //"Hora"
	TRCell():New(oOcorr,"MARGEM1",," "  ,,02,/*lPixel*/) //" "
	TRCell():New(oOcorr,"CODPLAN",,STR0023  ,X3Picture("TBV_CODPLA"),TamSx3("TBV_DESPLA")[1]+10,/*lPixel*/) //"Plano Emergencial"
	TRCell():New(oOcorr,"MARGEM2",," "  ,,02,/*lPixel*/) //" "
	TRCell():New(oOcorr,"LOCALIZ",,STR0024  ,,100,/*lPixel*/) //"Localização"
	TRCell():New(oOcorr,"MARGEM3",," "  ,,02,/*lPixel*/) //" "
	TRCell():New(oOcorr,"PERIMET",,STR0025  ,,30,/*lPixel*/) //"Perímetro"
	TRCell():New(oOcorr,"PROXIMO",,STR0026  ,,30,/*lPixel*/) //"Próximo"
	If lAmbien
		TRCell():New(oOcorr,"AREAAMB",,STR0027  ,,30,/*lPixel*/) //"Área Ambiental"
	EndIf
	TRCell():New(oOcorr,"MARGEM4",," "  ,,02,/*lPixel*/) //" "
	TRCell():New(oOcorr,"ACIDENT",,STR0069  ,X3Picture("TBV_ACIDEN"),TamSx3("TBV_ACIDEN")[1]+10,/*lPixel*/) //"Acidente"
	TRCell():New(oOcorr,"DESCACI",,STR0038  ,X3Picture("TBV_DESPLA"),TamSx3("TBV_DESPLA")[1],/*lPixel*/) //"Descrição"
	TRCell():New(oOcorr,"DATAACI",,STR0021  ,X3Picture("TBV_DATA"),TamSx3("TBV_DATA")[1]+5,/*lPixel*/) //"Data"
	TRCell():New(oOcorr,"VITIMA",,STR0070  ,X3Picture("TBV_DESPLA"),TamSx3("TBV_ACIDEN")[1]+10,/*lPixel*/) //"Vítima?"
//	TRCell():New(oOcorr,"OBSERV",,STR0071  ,X3Picture("TBV_OBSERV"),TamSx3("TBV_OBSERV")[1]+10,/*lPixel*/) //"Descrição"

oEnvolv := TRSection():New(oOcorr,STR0028,{"TC5"}) //"Envolvidos"

	TRCell():New(oEnvolv,"TIPOENV",,STR0029  ,,30,/*lPixel*/,) //"Tipo"
	TRCell():New(oEnvolv,"MATRICU",,STR0030  ,X3Picture("TC5_CODMAT"),TamSx3("TC5_CODMAT")[1]+10,/*lPixel*/,/*{|| code-block de impressao }*/) //"Matrícula"
	TRCell():New(oEnvolv,"NOMEENV",,STR0031  ,X3Picture("TC5_NOME")  ,TamSx3("TC5_NOME")[1]+10  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Nome"

oPartic := TRSection():New(oOcorr,STR0032,{"QAA","QAC"}) //"Participantes do Plano Gerencial"

	TRCell():New(oPartic,"PARTICI",,STR0033  ,X3Picture("QAA_NOME"),TamSx3("QAA_NOME")[1]+10,/*lPixel*/,) //"Participante"
	TRCell():New(oPartic,"FUNCAOP",,STR0034  ,X3Picture("QAC_DESC"),TamSx3("QAC_DESC")[1]+10,/*lPixel*/,) //"Função"
//	TRCell():New(oPartic,"INFORMA",,STR0035  ,,30,/*lPixel*/,) //"Informante"
	TRCell():New(oPartic,"AVISADO",,STR0036  ,X3Picture("QAA_NOME"),TamSx3("QAA_NOME")[1]+10,/*lPixel*/,) //"Avisado?"

oContato := TRSection():New(oOcorr,STR0037,{"TBU","TC7"}) //"Contatos Externos"

	TRCell():New(oContato,"DESCCON",,STR0038  ,X3Picture("TBU_DESCON"),TamSx3("TBU_DESCON")[1]+10,/*lPixel*/,) //"Descrição"
	TRCell():New(oContato,"CONTATA",,STR0039  ,,30,/*lPixel*/,) //"Contatado?"
	TRCell():New(oContato,"DTCONTA",,STR0040  ,X3Picture("TC7_DTCONT"),TamSx3("TC7_DTCONT")[1]+10,/*lPixel*/,) //"Data Contato"
	TRCell():New(oContato,"HRCONTA",,STR0041  ,X3Picture("TC7_HRCONT"),TamSx3("TC7_HRCONT")[1]+10,/*lPixel*/,) //"Hora Contato"
	TRCell():New(oContato,"DTCHEGA",,STR0042  ,X3Picture("TC7_DTCHEG"),TamSx3("TC7_DTCHEG")[1]+10,/*lPixel*/,) //"Data Chegada"
	TRCell():New(oContato,"HRCHEGA",,STR0043  ,X3Picture("TC7_HRCHEG"),TamSx3("TC7_HRCHEG")[1]+10,/*lPixel*/,) //"Hora Chegada"

oAcoes := TRSection():New(oOcorr,STR0044,{"TC3"}) //"Ações Executadas"

	TRCell():New(oAcoes,"CODACAO",,STR0045  ,X3Picture("TC3_CODACA"),TamSx3("TC3_CODACA")[1]+10,/*lPixel*/,) //"Código"
	TRCell():New(oAcoes,"DESACAO",,STR0046  ,X3Picture("TC3_DESACA"),50 ,/*lPixel*/,) //"Descrição"
	TRCell():New(oAcoes,"PLAACAO",,STR0047  ,X3Picture("TC3_CODPAC"),TamSx3("TC3_CODPAC")[1]+10,/*lPixel*/,) //"Plano de Ação"
	TRCell():New(oAcoes,"NOMACAO",,STR0038  ,X3Picture("TAA_NOME")  ,75 ,/*lPixel*/,) //"Descrição"
	TRCell():New(oAcoes,"EXEACAO",,STR0048  ,,30,/*lPixel*/,) //"Executada?"
	TRCell():New(oAcoes,"DTINICI",,STR0049  ,X3Picture("TC3_DTINIC"),TamSx3("TC3_DTINIC")[1]+10,/*lPixel*/,) //"Data Ínicio"
	TRCell():New(oAcoes,"HRINICI",,STR0050  ,X3Picture("TC3_DTFIM") ,TamSx3("TC3_DTFIM")[1]+10 ,/*lPixel*/,) //"Data Fim"

oImpacto := TRSection():New(oOcorr,STR0051,{"TAE"}) //"Impactos Relacionados"

	TRCell():New(oImpacto,"IMPACTO",,STR0052  ,X3Picture("TAE_CODIMP"),TamSx3("TAE_CODIMP")[1]+10,/*lPixel*/,) //"Impacto"
	TRCell():New(oImpacto,"DESIMPA",,STR0053  ,X3Picture("TAE_DESCRI"),TamSx3("TAE_DESCRI")[1]+10,/*lPixel*/,) //"Descrição"

oResiduo := TRSection():New(oOcorr,STR0054,{"TCI"}) //"Resíduos Gerados"

	TRCell():New(oResiduo,"RESIDUO",,STR0055  ,X3Picture("TCI_CODRES"),TamSx3("TCI_CODRES")[1]+10,/*lPixel*/,) //"Resíduo"
	TRCell():New(oResiduo,"DESRESI",,STR0056  ,/*X3Picture("TCI_DESCRE")*/,TamSx3("TCI_DESCRE")[1]+30,/*lPixel*/,) //"Descrição"
	TRCell():New(oResiduo,"QTDRESI",,STR0057  ,X3Picture("TCI_QTDE")  ,TamSx3("TCI_QTDE")[1]+10  ,/*lPixel*/,) //"Quantidade"
	TRCell():New(oResiduo,"UMRESID",,STR0058  ,X3Picture("TCI_UNIMED"),TamSx3("TCI_UNIMED")[1]+10,/*lPixel*/,) //"UM"

If lOHSAS

	oDano := TRSection():New(oOcorr,"Danos Relacionados",{"TCY"}) //"Impactos Relacionados"

		TRCell():New(oDano,"CODDAN",,"Dano"  ,X3Picture("TCY_CODDAN"),TamSx3("TCY_CODDAN")[1]+10,/*lPixel*/,) //"Impacto"
		TRCell():New(oDano,"DESDAN",,"Descrição"  ,X3Picture("TCY_DESCRI"),TamSx3("TCY_DESCRI")[1]+10,/*lPixel*/,) //"Descrição"
EndIf

oOcorr:SetLineStyle()

oOcorr:Cell("HOROCOR"):lCellBreak := .T.
oOcorr:Cell("CODPLAN"):lCellBreak := .T.
oOcorr:Cell("LOCALIZ"):lCellBreak := .T.
oOcorr:Cell("LOCALIZ"):lLineBreak := .T.
If lAmbien
	oOcorr:Cell("AREAAMB"):lCellBreak := .T.
EndIf
oResiduo:Cell("QTDRESI"):SetAlign(2)
//oOcorr:Cell("OBSERV"):lCellBreak := .T.

Return oReport



//---------------------------------------------------------------------
/*/{Protheus.doc} ReportPrint
Emissão do relatório


@param oReport - Objeto instância da classe TReport
@param oFont  - Fonte para totalizador

@author Thiago Henrique dos Santos
@since 28/01/2012
@version P11
@return Nil
/*/
//---------------------------------------------------------------------

Static Function ReportPrint(oReport)

	Local cSql 		:= ""
	Local lOHSAS	:= AliasInDic("TCY") .And. SuperGetMV("MV_NG2OHSA",.F.,"2") == "1"
	Local oOcorr	:= oReport:Section(1)
	Local oEnvolv	:= oReport:Section(1):Section(1)
	Local oPartic	:= oReport:Section(1):Section(2)
	Local oContato	:= oReport:Section(1):Section(3)
	Local oAcoes	:= oReport:Section(1):Section(4)
	Local oImpacto 	:= oReport:Section(1):Section(5)
	Local oResiduo 	:= oReport:Section(1):Section(6)
	Local oDano 	:= If( lOHSAS , oReport:Section(1):Section(7) , )
	Local nPage     := 0
	Local nX := 0 , nY := 0
	Local nFor, nMemo
	Local cLocaliza := ""
	Local aLocaliza :={}
	Local aStru     := {}
	Local cSup      := ""
	Local lFound    := .T.
//	Local nEsp		:= 50
	Local	cVitima := ""
	local	dDataAci := CTOD("  /  /  ")
	Local lAmbien := NGCADICBASE("TBV_AMBIEN","A","TBV",.F.)
	Local cAreaAmb := ""

	Private nTotDes  := 0
	Private cCodRes 	:= ""
	Private cCodDes 	:= ""
	Private dData 	:= CtoD ("  /  /  ")
	Private aDest    := {} //cod nome MTR quant
	Private aTransf  := {}
	Private nAltPag  := oReport:PageHeight() - 50

	oFont1 := TFont():New(oReport:cFontBody,,-(oReport:nFontBody + 2),.T. ,.T.)
	oFont2 := TFont():New("Courier New",08,08 ,,.T.,,,,,.F.,.F.)

	nTamPage := Int(oReport:GetWidth()/2)

	//OCORRENCIAS
	cSql := " SELECT 	TBV_CODOCO CODOCO,TBV_DATA   DTOCOR,TBV_HORA   HROCOR,TBV_RESPON RESPON,TBV_PERIME PERIME,"
	If lAmbien
		cSql += "TBV_AMBIEN AMBIEN,"
	EndIf
	cSql += "TBB_CODPLA CODPLA,TBB_DESPLA DESPLA,TBB_ELABOR ELABOR,"
	cSql += "			TBB_RESPON RESPON,TBV_PROXIM PROXIM,TBV_ACIDEN ACIDEN,TBV_DESOCO DESOCO"
	cSql += " FROM "+RetSqlName("TBV")+" TBV
	cSql += " LEFT JOIN "+RetSqlName("TBB")+" TBB ON TBB_CODPLA = TBV_CODPLA AND TBB.D_E_L_E_T_ <> '*' "
	cSql += " AND TBB.TBB_FILIAL = " + ValToSql( xFilial( "TBB" ) )
	cSql += " WHERE TBV_DATA >= '"+DtoS(MV_PAR01)+"' "
	cSql += " 	AND TBV_DATA <= '"+DtoS(MV_PAR02)+"' "
	cSql += " 	AND TBB_CODPLA >= '"+MV_PAR03+"' "
	cSql += " 	AND TBB_CODPLA <= '"+MV_PAR04+"' "
	cSql += " 	AND TBV_CODOCO >= '"+MV_PAR05+"' "
	cSql += " 	AND TBV_CODOCO <= '"+MV_PAR06+"' "
	cSql += " 	AND TBV.D_E_L_E_T_ <> '*'

	cSql := ChangeQuery(cSql)

	If Select("TMPOCORR") > 0

		TMPOCORR->(DbCloseArea())

	Endif

	MPSysOpenQuery( cSql , "TMPOCORR" )

	DbSelectArea("TMPOCORR")
	TMPOCORR->(DbGoTop())

	If TMPOCORR->(Eof())
		TMPOCORR->(DbCloseArea())
		Return
	Endif

	oReport:SetMeter(TMPOCORR->(RecCount()))

	oOcorr:Init()

	nPage := 0

	While TMPOCORR->(!Eof()) .AND. !oReport:Cancel()

		oReport:IncMeter()

		dbSelectArea( "TBV" )
		dbSetOrder( 1 )
		dbSeek( xFilial( "TBV" ) + TMPOCORR->CODOCO )

		cCodOcorr := TMPOCORR->CODOCO
		cDesOcorr := TMPOCORR->DESOCO
		cCodPlano := TMPOCORR->CODPLA
		cPerimetr := TMPOCORR->PERIME
		cProximo  := TMPOCORR->PROXIM
		If lAmbien
			cAreaAmb  := TMPOCORR->AMBIEN
		EndIf
		cAcident  := TMPOCORR->ACIDEN
		cObserv   := TBV->TBV_OBSERV

		aLocaliza := {}
		cLocaliza := ""


		DbSelectArea("TC1")
		TC1->(DbSetOrder(1))
		If TC1->(DbSeek(xFilial("TC1")+cCodOcorr+cCodPlano))

			While TC1->(!Eof()) .AND. TC1->TC1_FILIAL == xFilial("TC1") .AND. TC1->TC1_CODOCO == cCodOcorr .AND. TC1->TC1_CODPLA == cCodPlano


				AADD(aLocaliza,{TC1->TC1_CODEST, TC1->TC1_CODNIV, TC1->TC1_NIVSUP})

				TC1->(DbSkip())
			Enddo

		Endif


		For nX := 1 to len(aLocaliza)

			If nX > 1

				cLocaliza += " ; "


			Endif

			aStru := {}
			lFound := .T.

			DbSelectArea("TAF")
			TAF->(DbSetOrder(1))
			If TAF->(DbSeek(xFilial("TAF")+aLocaliza[nX][1]+aLocaliza[nX][3]))

				AADD(aStru,TAF->TAF_NOMNIV)

				While lFound .AND. VAL(TAF->TAF_NIVSUP) > 0

					cSup := TAF->TAF_NIVSUP
					TAF->(DbSetOrder(2))
					If TAF->(DbSeek(xFilial("TAF")+aLocaliza[nX][1]+cSup))

						AADD(aStru,TAF->TAF_NOMNIV)

					Else
						lFound := .F.

					EndIf
				Enddo

			Endif

			nY := len(aStru)

			While nY > 0

				cLocaliza += Alltrim(aStru[nY])

				If nY > 1

					cLocaliza += " / "

				Endif


				nY--
			Enddo

		Next nX


		If cPerimetr == '1' // 1=Urbano;2=Rural;3=Interno;4=Outros
		 	cPerimetr := STR0062 // "Urbano"
		ElseIf cPerimetr == '2'
			cPerimetr := STR0063 // "Rural"
		ElseIf cPerimetr == '3'
			cPerimetr := STR0064 // "Interno"
		ElseIf cPerimetr == '4'
	   		cPerimetr := STR0065 // "Outros"
	 	Else
	 		cPerimetr := ""
		EndIf

		If cProximo == '1' // 1=Estuário;2=Solo;3=Atmosfera
	   		cProximo := STR0066 // "Estuário"
		ElseIf cProximo == '2'
			cProximo := STR0067 // "Solo"
		ElseIf cProximo == '3'
			cProximo := STR0068 // "Atmosfera"
		Else
			cProximo := ""
		EndIf

		If lAmbien
			If cAreaAmb == '1' // 1=Sim;2=Nao
				cAreaAmb := STR0008 // "Sim"
			ElseIf cAreaAmb == '2'
			   	cAreaAmb := STR0009 // "Nao"
			Else
		  		cAreaAmb := ""
			EndIf
		EndIf
		cDescAci := ""
		cVitima := ""
		dDataAci := CTOD("  /  /  ")
		DbSelectArea("TNC")
		TNC->(DbSetOrder(1)) // TNC_FILIAL+TNC_ACIDEN
		If TNC->(DbSeek(xFilial("TNC")+cAcident))
			cDescAci := TNC->TNC_DESACI
			dDataAci := TNC->TNC_DTACID

			If TNC_VITIMA == "1"
				cVitima := "Sim"
			ElseIf TNC_VITIMA == "2"
				cVitima := "Não"
			ElseIf TNC_VITIMA == "3"
				cVitima := "Fatal"
			Endif
		EndIf

		oReport:oFontBody := oFont2

		//oOcorr:Cell("DESOCOR"):SetAlign(3) //A direita

		oOcorr:Cell("CODOCOR"):SetValue(cCodOcorr)//
		oOcorr:Cell("DESOCOR"):SetValue(cDesOcorr)//
		oOcorr:Cell("DATOCOR"):SetValue(DtoC(StoD(TMPOCORR->DTOCOR)))
		oOcorr:Cell("HOROCOR"):SetValue(TMPOCORR->HROCOR)
		oOcorr:Cell("CODPLAN"):SetValue(cCodPlano+" - "+TMPOCORR->DESPLA)//
		oOcorr:Cell("LOCALIZ"):SetValue(cLocaliza)//
		oOcorr:Cell("PERIMET"):SetValue(cPerimetr)//
		oOcorr:Cell("PROXIMO"):SetValue(cProximo)//
		If lAmbien
			oOcorr:Cell("AREAAMB"):SetValue(cAreaAmb)
		EndIf
		oOcorr:Cell("ACIDENT"):SetValue(cAcident)//
		oOcorr:Cell("DESCACI"):SetValue(cDescAci)//
		oOcorr:Cell("DATAACI"):SetValue(dDataAci)//
		oOcorr:Cell("VITIMA"):SetValue(cVitima)
//		oOcorr:Cell("OBSERV"):SetValue(cObserv)

		oOcorr:PrintLine()

		nMemo := MlCount( cObserv , 200 , , .T. )

		For nFor := 1 To nMemo
			oReport:SkipLine()
			If nFor == 1
				oReport:PrintText( Space(6) + STR0071 + ":" )
				oReport:SkipLine()
			EndIF
			oReport:PrintText( Space(6) + MemoLine( cObserv , 200 , nFor , , .t. ) )
		Next nFor


		aEnvolvi := fEnvolvidos(cCodOcorr)
		aPartic  := fParticipa(cCodPlano,cCodOcorr)
		aContato := fContatos(cCodPlano,cCodOcorr)
		aAcoes   := fAcoes(cCodPlano,cCodOcorr)
		aImpacto := fImpactos(cCodOcorr)
		aResiduo := fResiduos(cCodOcorr)
		If lOHSAS
			aDanos := fDanos(cCodOcorr)
		EndIf

		If MV_PAR07 == 1

			// ENVOLVIDOS
			oReport:FatLine()
			oReport:PrtCenter(STR0028) // "Envolvidos"
			oReport:SkipLine()
			oReport:oFontBody := oFont1

			oEnvolv:Init()
			For nX := 1 to Len(aEnvolvi)

				oEnvolv:Cell("TIPOENV"):SetValue(aEnvolvi[nX][1])
				oEnvolv:Cell("MATRICU"):SetValue(aEnvolvi[nX][2])
				oEnvolv:Cell("NOMEENV"):SetValue(aEnvolvi[nX][3])

				oEnvolv:PrintLine()
			Next nX
			oEnvolv:Finish()

			//PARTICIPANTES DO PLANO EMERGENCIAL
			oReport:SkipLine()
			oReport:oFontBody := oFont2
			oReport:FatLine()
			oReport:PrtCenter(STR0032) // "Participantes do Plano Gerencial"
			oReport:SkipLine()
			oReport:oFontBody := oFont1

			oPartic:Init()
			For nX := 1 to Len(aPartic)

				oPartic:Cell("PARTICI"):SetValue(aPartic[nX][1])
				oPartic:Cell("FUNCAOP"):SetValue(aPartic[nX][2])
//				oPartic:Cell("INFORMA"):SetValue(aPartic[nX][3])
				oPartic:Cell("AVISADO"):SetValue(aPartic[nX][4])

				oPartic:PrintLine()
			Next nX
			oPartic:Finish()

			// CONTATOS EXTERNOS
			oReport:SkipLine()
			oReport:oFontBody := oFont2
			oReport:FatLine()
			oReport:PrtCenter(STR0037) // "Contatos Externos"
			oReport:SkipLine()
			oReport:oFontBody := oFont1

			oContato:Init()

			For nX := 1 to Len(aContato)

				oContato:Cell("DESCCON"):SetValue(aContato[nX][1])
				oContato:Cell("CONTATA"):SetValue(aContato[nX][2])
				oContato:Cell("DTCONTA"):SetValue(aContato[nX][3])
				oContato:Cell("HRCONTA"):SetValue(aContato[nX][4])
				oContato:Cell("DTCHEGA"):SetValue(aContato[nX][5])
				oContato:Cell("HRCHEGA"):SetValue(aContato[nX][6])

				oContato:PrintLine()
			Next nX

			oContato:Finish()

			// AÇÕES EXECUTADAS
			oReport:SkipLine()
			oReport:oFontBody := oFont2
			oReport:FatLine()
			oReport:PrtCenter(STR0044) // "Ações Executadas"
			oReport:SkipLine()
			oReport:oFontBody := oFont1

			oAcoes:Init()

			For nX := 1 to Len(aAcoes)

				oAcoes:Cell("CODACAO"):SetValue(aAcoes[nX][1])
				oAcoes:Cell("DESACAO"):SetValue(aAcoes[nX][2])
				oAcoes:Cell("PLAACAO"):SetValue(aAcoes[nX][3])
				oAcoes:Cell("NOMACAO"):SetValue(aAcoes[nX][4])
				oAcoes:Cell("EXEACAO"):SetValue(aAcoes[nX][5])
				oAcoes:Cell("DTINICI"):SetValue(aAcoes[nX][6])
				oAcoes:Cell("HRINICI"):SetValue(aAcoes[nX][7])

				oAcoes:PrintLine()
			Next nX

			oAcoes:Finish()

			// IMPACTOS RELACIONADOS
			oReport:SkipLine()
			oReport:oFontBody := oFont2
			oReport:FatLine()
			oReport:PrtCenter(STR0051) // "Impactos Relacionados"
			oReport:SkipLine()
			oReport:oFontBody := oFont1

			oImpacto:Init()

			For nX := 1 to Len(aImpacto)

				oImpacto:Cell("IMPACTO"):SetValue(aImpacto[nX][1])
				oImpacto:Cell("DESIMPA"):SetValue(aImpacto[nX][2])

				oImpacto:PrintLine()
			Next nX

			oImpacto:Finish()

		// RESIDUOS GERADOS
			oReport:SkipLine()
			oReport:oFontBody := oFont2
			oReport:FatLine()
			oReport:PrtCenter(STR0054) // "Resíduos Gerados"
			oReport:SkipLine()
			oReport:oFontBody := oFont1

			oResiduo:Init()

			For nX := 1 to Len(aResiduo)

				oResiduo:Cell("RESIDUO"):SetValue(aResiduo[nX][1])
				oResiduo:Cell("DESRESI"):SetValue(aResiduo[nX][2])
				oResiduo:Cell("QTDRESI"):SetValue(aResiduo[nX][3])
				oResiduo:Cell("UMRESID"):SetValue(aResiduo[nX][4])

				oResiduo:PrintLine()
			Next nX

			oResiduo:Finish()

			If lOHSAS
				//DANOS RELACIONADOS
				oReport:SkipLine()
				oReport:oFontBody := oFont2
				oReport:FatLine()
				oReport:PrtCenter("Danos Relacionados") // "Impactos Relacionados"
				oReport:SkipLine()
				oReport:oFontBody := oFont1

				oDano:Init()

				For nX := 1 to Len(aDanos)

					oDano:Cell("CODDAN"):SetValue(aDanos[nX][1])
					oDano:Cell("DESDAN"):SetValue(aDanos[nX][2])

					oDano:PrintLine()
				Next nX
				oDano:Finish()

			EndIf

			oReport:EndPage()

		Else

			oReport:FatLine()

		Endif



		TMPOCORR->(DbSkip())
	EndDo

	//DrawPage(@oReport,@nPage,@oOcorr,@nRow)
	oOcorr:Finish()

	TMPOCORR->(DbCloseArea())

Return


//---------------------------------------------------------------------
/*/{Protheus.doc} fEnvolvidos
Monta o array com os envolvidos

@param cCodOcorr - Código da ocorrência
@author Alessandro Smaha
@since 05/03/2013
@version P11
@return aAux - Array com informações dos envolvidos
/*/
//---------------------------------------------------------------------
Static Function fEnvolvidos(cCodOcorr)

	Local aAux := {}

	DbSelectArea("TC5")
	TC5->(DbSetOrder(1)) // TC5_FILIAL+TC5_CODOCO+TC5_CODMAT+TC5_NOME
	If TC5->(DbSeek(xFilial("TC5")+cCodOcorr))
		While cCodOcorr == TC5->TC5_CODOCO .AND. TC5->(!EOF())
   			aAdd(aAux,{IIF(TC5->TC5_TIPENV=='1',STR0059,IIF(TC5->TC5_TIPENV=='2',STR0060,STR0061)),TC5->TC5_CODMAT,TC5->TC5_NOME}) //"Usuário"###"Terceiro"###"Funcionário"
   			TC5->(DbSkip())
   		EndDo
   	EndIf

Return aAux


//---------------------------------------------------------------------
/*/{Protheus.doc} fParticipa
Monta o array com os participantes do plano emergencial

@param cCodOcorr - Código do plano emergencial
@author Alessandro Smaha
@since 05/03/2013
@version P11
@return aAux - Array com informações dos participantes do plano emergencial
/*/
//---------------------------------------------------------------------
Static Function fParticipa(cCodPlano,cCodOcorr)

	Local aAux := {}
	Local cNomePar := ""
	Local cNomeInf := ""
	Local cAvisado := ""
	Local cFuncPar := ""
	Local aArea := GetArea()

	DbSelectArea("TBP")
	TBP->(DbSetOrder(1)) // TBP_FILIAL+TBP_CODPLA+TBP_CODPAR
	If TBP->(DbSeek(xFilial("TBP")+cCodPlano))
		While cCodPlano == TBP->TBP_CODPLA .AND. TBP->(!EOF())


			cNomePar := ""
			cNomeInf := ""
			cFuncPar := ""
			cAvisado := STR0009 // "Não"

			IF NGCADICBASE('TBP_TIPPAR','A','TBP',.F.)
				If TBP->TBP_TIPPAR == "1" //USUARIO

					QAA->(DbSetOrder(1)) // QAA_FILIAL+QAA_MAT
					If QAA->(DbSeek(xFilial("QAA")+PADR(TBP->TBP_CODPAR,TAMSX3("QAA_MAT")[1])))
						cNomePar := QAA->QAA_NOME
						DbSelectArea("QAC")
						QAC->(DbSetOrder(1)) // QAC_FILIAL+QAC_FUNCAO
						If (DbSeek(xFilial("QAC")+QAA->QAA_CODFUN))
							cFuncPar := QAC->QAC_DESC
						EndIf
					EndIf

				Else          //FUNCIONARIO

					DbSelectArea("SRA")
					SRA->(DbSetOrder(1)) // SRA_FILIAL+SRA_MAT
					If SRA->(DbSeek(xFilial("SRA")+PADR(TBP->TBP_CODPAR,TAMSX3("RA_MAT")[1])))
						cNomePar := SRA->RA_NOME
						DbSelectArea("SRJ")
						SRJ->(DbSetOrder(1))
						IF SRJ->(DbSeek(xFilial("SRJ")+SRA->RA_CODFUNC))
							cFuncPar := SRJ->RJ_DESC

						Endif

					Endif
				Endif
			Else
				QAA->(DbSetOrder(1)) // QAA_FILIAL+QAA_MAT
				If QAA->(DbSeek(xFilial("QAA")+PADR(TBP->TBP_CODPAR,TAMSX3("QAA_MAT")[1])))
					cNomePar := QAA->QAA_NOME
					DbSelectArea("QAC")
					QAC->(DbSetOrder(1)) // QAC_FILIAL+QAC_FUNCAO
					If (DbSeek(xFilial("QAC")+QAA->QAA_CODFUN))
						cFuncPar := QAC->QAC_DESC
					EndIf
				EndIf


			Endif


			DbSelectArea("TBX")
			TBX->(DbSetOrder(1)) // TBX_FILIAL+TBX_CODOCO+TBX_MAT
			If TBX->(DbSeek(xFilial("TBX")+cCodOcorr+TBP->TBP_CODPAR))


				DbSelectArea("QAA")
				QAA->(DbSetOrder(6)) // QAA_LOGIN
				If QAA->(DbSeek(TBX->TBX_LOGIN))
					cNomeInf := QAA->QAA_NOME
				EndIf



				If TBX->TBX_AVISAD == '1' // 1=Sim;2=Nao
			   		cAvisado := STR0008 // "Sim"
				Else
			  		cAvisado := STR0009 // "Não"
				EndIf

			EndIf


			aAdd(aAux,{cNomePar,cFuncPar,cNomeInf,cAvisado})


   			TBP->(DbSkip())
   		EndDo
   	EndIf

   	RestArea(aArea)

Return aAux


//---------------------------------------------------------------------
/*/{Protheus.doc} fContatos
Monta o array com os contatos externos

@param cCodOcorr - Código do plano emergencial
@author Alessandro Smaha
@since 05/03/2013
@version P11
@return aAux - Array com informações dos contatos externos
/*/
//---------------------------------------------------------------------
Static Function fContatos(cCodPlano,cCodOcorr)

	Local aAux := {}
	Local dDtCont := CtoD("  /  /  ")
	Local dDtCheg := CtoD("  /  /  ")
	Local cHrCont := ""
	Local cHrCheg := ""
	Local cContat := ""
	Local cDescri := ""

	DbSelectArea("TBU")
	TBU->(DbSetOrder(1)) // TBU_FILIAL+TBU_CODPLA+TBU_CODCON
	If TBU->(DbSeek(xFilial("TBU")+cCodPlano))
		While cCodPlano == TBU->TBU_CODPLA .AND. TBU->(!EOF())
			dDtCont := CtoD("  /  /  ")
			dDtCheg := CtoD("  /  /  ")
			cHrCont := ""
			cHrCheg := ""
			cContat := STR0009 // "Não"
			DbSelectArea("TC7")
			TC7->(DbSetOrder(1)) // TC7_FILIAL+TC7_CODOCO+TC7_CODCON
			If TC7->(DbSeek(xFilial("TC7")+cCodOcorr+TBU->TBU_CODCON))
				dDtCont := TC7->TC7_DTCONT
				dDtCheg := TC7->TC7_DTCHEG
				cHrCont := TC7->TC7_HRCONT
				cHrCheg := TC7->TC7_HRCHEG
				cContat := TC7->TC7_AVISAD
				If cContat == '1' // 1=Sim;2=Nao
					cContat := STR0008 // "Sim"
				Else
					cContat := STR0009 // "Não"
				EndIf
			EndIf

			cDescri:= Alltrim(TBU->TBU_DESCON)

			If !Empty(TBU->TBU_FORNEC) .AND. Empty(cDescri)

				DbSelectArea("SA2")
				SA2->(DbSetOrder(1))
				If SA2->(DbSeek(xFilial("SA2")+TBU->TBU_FORNEC))

					cDescri := SA2->A2_NOME

				Endif


			Endif

   			aAdd(aAux,{cDescri,cContat,dDtCont,cHrCont,dDtCheg,cHrCheg})
   			DbSelectArea("TBU")
   			TBU->(DbSkip())
   		EndDo
   	EndIf

Return aAux


//---------------------------------------------------------------------
/*/{Protheus.doc} fAcoes
Monta o array com as ações executadas

@param cCodOcorr - Código do plano emergencial
@author Alessandro Smaha
@since 05/03/2013
@version P11
@return aAux - Array com informações das ações executadas
/*/
//---------------------------------------------------------------------
Static Function fAcoes(cCodPlano,cCodOcorr)

	Local aAux := {}
	Local cExecut := ""

	DbSelectArea("TC3")
	TC3->(DbSetOrder(1)) // TC3_FILIAL+TC3_CODPLA+TC3_CODOCO+DTOS(TC3_DTOCO)+TC3_HROCO+TC3_CODACA
	If TC3->(DbSeek(xFilial("TC3")+cCodPlano+cCodOcorr))
		While cCodPlano == TC3->TC3_CODPLA .AND. cCodOcorr == TC3->TC3_CODOCO .AND. TC3->(!EOF())
			If !Empty(TC3->TC3_OK)
			  	cExecut := STR0008 // "Sim"
			Else
				cExecut := STR0009 // "Não"
			EndIf

			dbSelectArea( "TAA" )
			TAA->(dbSetOrder(1))
			TAA->(dbSeek( xFilial("TAA") +TC3->TC3_CODPAC ) )

			DbSelectArea("TBO")
			TBO->(DbSetOrder(1))
			If TBO->(DbSeek(xFilial("TBO")+cCodPlano+TC3->TC3_CODACA))

				aAdd(aAux,{TC3->TC3_CODACA,SubStr(TBO->TBO_DESACA,1,40),TC3->TC3_CODPAC,SubStr(TAA->TAA_NOME,1,60),cExecut,TC3->TC3_DTINIC,TC3->TC3_DTFIM})

			Else
 	  			aAdd(aAux,{TC3->TC3_CODACA,SubStr(TC3->TC3_DESACA,1,40),TC3->TC3_CODPAC,SubStr(TAA->TAA_NOME,1,60),cExecut,TC3->TC3_DTINIC,TC3->TC3_DTFIM})

   			Endif
   			DbSelectArea("TC3")
   			TC3->(DbSkip())
   		EndDo
   	EndIf

Return aAux


//---------------------------------------------------------------------
/*/{Protheus.doc} fImpactos
Monta o array com os impactos relacionados

@param cCodOcorr - Código do plano emergencial
@author Alessandro Smaha
@since 05/03/2013
@version P11
@return aAux - Array com informações dos impactos relacionados
/*/
//---------------------------------------------------------------------
Static Function fImpactos(cCodOcorr)

	Local aAux := {}

	DbSelectArea("TC6")
	TC6->(DbSetOrder(1)) // TC6_FILIAL+TC6_CODOCO+TC6_CODIMP
	If TC6->(DbSeek(xFilial("TC6")+cCodOcorr))
		While cCodOcorr == TC6->TC6_CODOCO .AND. TC6->(!EOF())
			DbSelectArea("TAE")
			TAE->(DbSetOrder(1)) // TAE_FILIAL+TAE_CODIMP
			If TAE->(DbSeek(xFilial("TAE")+TC6->TC6_CODIMP))
				aAdd(aAux,{TAE->TAE_CODIMP,TAE->TAE_DESCRI})
			EndIf
   			TC6->(DbSkip())
   		EndDo
	EndIf

Return aAux


//---------------------------------------------------------------------
/*/{Protheus.doc} fResiduos
Monta o array com os resíduos gerados

@param cCodOcorr - Código da ocorrência
@author Alessandro Smaha
@since 05/03/2013
@version P11
@return aAux - Array com informações dos resíduos gerados
/*/
//---------------------------------------------------------------------
Static Function fResiduos(cCodOcorr)

	Local aAux := {}
	Local cDescri := ""
	Local aArea := GetArea()

	DbSelectArea("TCI")
	TCI->(DbSetOrder(1)) // TCI_FILIAL+TCI_CODOCO+TCI_CODRES
	If TCI->(DbSeek(xFilial("TCI")+cCodOcorr))
		While cCodOcorr == TCI->TCI_CODOCO .AND. TCI->(!EOF())
			cDescri := Posicione("SB1",1,xFilial("SB1")+TCI->TCI_CODRES,"B1_DESC") // B1_FILIAL+B1_COD
   			aAdd(aAux,{TCI->TCI_CODRES,cDescri,TCI->TCI_QTDE,TCI->TCI_UNIMED})
   			TCI->(DbSkip())
   		EndDo
   	EndIf

	RestArea(aArea)

Return aAux
//---------------------------------------------------------------------
/*/{Protheus.doc} fDanos
Monta o array com os danos relacionados

@param cCodOcorr - Código do plano emergencial
@author Alessandro Smaha
@since 05/03/2013
@version P10
@return aAux - Array com informações dos danos relacionados
/*/
//---------------------------------------------------------------------
Static Function fDanos(cCodOcorr)

	Local aAux := {}

	DbSelectArea("TCY")
	TCY->(DbSetOrder(1)) // TCY_FILIAL+TCY_CODOCO+TCY_CODDAN
	If TCY->(DbSeek(xFilial("TCY")+cCodOcorr))
		While cCodOcorr == TCY->TCY_CODOCO .AND. TCY->(!EOF())
			DbSelectArea("TG8")
			TG8->(DbSetOrder(1)) // TG8_FILIAL+TG8_CODDAN
			If TG8->(DbSeek(xFilial("TG8")+TCY->TCY_CODDAN))
				aAdd(aAux,{TG8->TG8_CODDAN,TG8->TG8_DESCRI})
			EndIf
   			TCY->(DbSkip())
   		EndDo
	EndIf

Return aAux
//---------------------------------------------------------------------
/*/{Protheus.doc} SGAR190PER
Valida os campos de pergunta para o relatório

@param nParam  - Número do parâmetro (MV)
@author Thiago Henrique dos Santos
@since 30/01/2013
@version P10
@return lRet - Lógico, .T. se valido, .F. caso contrário
/*/
//---------------------------------------------------------------------
Function SGAR190PER(nParam)
Local lRet := .F.
Local lExist := .T.

If nParam == 1

	lRet := !Empty(mv_par01) .AND. IIF(!Empty(mv_par02),mv_par02 >= mv_par01,.T.)

	If !lRet

		Help( " ",1, 'SGAR18001')

	Endif

ElseIf nParam == 2

	lRet := mv_par02 >= mv_par01

	If !lRet

		Help( " ",1, 'SGAR18001')

	Endif


ElseIf nParam == 3

	lExist := IIf(empty(mv_par03),.t.,ExistCpo('TBB',mv_par03))
	lRet := lExist .AND. IIF(!Empty(mv_par04),mv_par04 >= mv_par03,.T.)

	If !lRet .AND. lExist

		Help( " ",1, 'SGAR18001')

	Endif


ElseIf nParam == 4

	lRet := mv_par04 >= mv_par03

	If lRet

		DbSelectArea("TBB")
		TBB->(DbSetOrder(1))

		lRet := TBB->(DbSeek(xFilial("TBB")+mv_par04)) .OR. mv_par04 == Replicate("Z",TamSx3("TBB_CODPLA")[1])

	Endif

	If !lRet

		Help( " ",1, 'SGAR18001')

	Endif


ElseIf nParam == 5

	lExist := IIf(empty(mv_par05),.t.,ExistCpo('TBV',mv_par05,1))
	lRet := lExist .AND. IIF(!Empty(mv_par06),mv_par06 >= mv_par05,.T.)


	If !lRet .AND. lExist

		Help( " ",1, 'SGAR18001')

	Endif


ElseIf nParam == 6

   lRet := mv_par06 >= mv_par05

	If lRet

		DbSelectArea("TBV")
		TBV->(DbSetOrder(1))

		lRet := TBV->(DbSeek(xFilial("TBV")+mv_par06)) .OR. mv_par06 == Replicate("Z",TamSx3("TBV_CODOCO")[1])

	Endif

	If !lRet

		Help( " ",1, 'SGAR18001')

	Endif

Endif

Return lRet