#INCLUDE "SGAA410.ch"
#include "Protheus.ch"
#define _nVERSAO 2

//---------------------------------------------------------------------
/*/{Protheus.doc} SGAA410
Programa para cadastrar as Oportunidades de Melhoria
  
@author  Rafael Diogo Richter
@since   16/12/2008
@table   TCO - Oportunidade de Melhoria 
/*/
//---------------------------------------------------------------------
Function SGAA410()    

Local aNGBEGINPRM := NGBEGINPRM(_nVERSAO)

Private aRotina := MenuDef()
Private cCadastro := OemtoAnsi(STR0001) //"Oportunidades de Melhoria"
Private bNgGrava := { || Sg410Grava() } 

/////////////////////////////////
// ENDEREÇA A FUNÇÃO DO BROWSE //
/////////////////////////////////

DbSelectArea("TCO")
DbSetOrder(1)
mBrowse( 6, 1,22,75,"TCO",,,,,,SGA410SEM(),,,,,.F.)

DbSelectArea("TCO")
DbSetOrder(1)


NGRETURNPRM(aNGBEGINPRM)        

Return .t.                                        

//---------------------------------------------------------------------
/*/{Protheus.doc} Sg410Grava
Função chamada após a gravação da Melhoria.   
  
@author  Rafael Diogo Richter
@since   16/12/2008
/*/
//---------------------------------------------------------------------
Function Sg410Grava()
Local aOldArea := GetArea() // Guarda variaveis de alias e indice

If Inclui .Or. Altera
	Sgaw080()
EndIf

RestArea(aOldArea)

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Utilização de Menu Funcional. 

@param
1. Nome a aparecer no cabecalho                            
2. Nome da Rotina associada                                 
3. Reservado                                               
4. Tipo de Transação a ser efetuada:                        
	1 - Pesquisa e Posiciona em um Banco de Dados           
	2 - Simplesmente Mostra os Campos                       
	3 - Inclui registros no Bancos de Dados                 
	4 - Altera o registro corrente                         
	5 - Remove o registro corrente do Banco de Dados       
		Nivel de acesso                                         
		Habilita Menu Funcional      

@return Array com opcoes da rotina. 
@author Rafael Diogo Richter
@since 16/12/2008
/*/
//---------------------------------------------------------------------

Static Function MenuDef()

Local aRotina :=	{ { STR0002 	, "AxPesqui"	, 0 , 1},; //"Pesquisar"
                    { STR0003	, "NgCad01"	, 0 , 2},; //"Visualizar"
                    { STR0004	, "NgCad01"	, 0 , 3},; //"Incluir"
                    { STR0005	, "SG410ALT"	, 0 , 4},; //"Alterar"
                    { STR0006	, "NgCad01"	, 0 , 5, 3},; //"Excluir"
					   { STR0007 	, "SGA410LEG"	, 0 , 2}} //"Legenda"
					                       

Return aRotina
//---------------------------------------------------------------------
/*/{Protheus.doc} SGA410SEM
Define as cores para o semáforo
 
@author  Gabriel Augusto Werlich
@since   05/08/2015
@version P11/P12
/*/
//---------------------------------------------------------------------
Function SGA410SEM()
Local aCores :={{"NGSEMAFARO('TCO->TCO_STATUS = "+'"1"'+"')", "BR_AZUL" },;   //"Pendente"
				 {"NGSEMAFARO('TCO->TCO_STATUS = "+'"2"'+"')" , "BR_AMARELO"},; //"Em Processo"
				 {"NGSEMAFARO('TCO->TCO_STATUS = "+'"3"'+"')" , "BR_CINZA"},;   //"Cancelada"
 				 {"NGSEMAFARO('TCO->TCO_STATUS = "+'"4"'+"')" , "BR_VERMELHO"}} //"Finalizada"

Return aCores
//---------------------------------------------------------------------
/*/{Protheus.doc} SGA410LEG
Cria uma janela contendo a legenda da mBrowse 

@author  Gabriel Augusto Werlich
@since   05/08/2015
@version P11/P12
/*/
//---------------------------------------------------------------------
Function SGA410LEG()
BrwLegenda(cCadastro,STR0007,{	{"BR_AZUL"		, STR0008 },; //"Legenda"###"Pendente"
									{"BR_AMARELO"	, STR0009},; //"Em Processo"
									{"BR_CINZA"	, STR0010},; //"Finalizado"
									{"BR_VERMELHO", STR0011}}) //"Cancelado"
Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} SGA410MEL
Cria uma tela para com as oportunidades de melhoria a serem canceladas ou
finalizadas

@param cCodPlano - Código do plano de ação
@param cDescPlano - Descrição do plano de ação
@param cStatus - Código do status do plano de ação 

@author  Gabriel Augusto Werlich
@since   05/08/2015
@version P11/P12
/*/
//---------------------------------------------------------------------
Function SGA410MEL(cCodPlano, cDescPlano, cStatus)

	Local cState := ""
	Local cTitle := ""
	Local cDescStat := ""
	
	Local aSize := MsAdvSize(,.f.,430)
	Local aFldMrk	:= {}
	Local aDbfPar := {}
	
	Local oDialog
	Local oPnlTop, oPnlAll
	Local oGetTAA
	Local oTempTRB
	
	Private cAliasMel	:= GetNextAlias()
	Private cMarcaMel 
	
	// Cria tabela temporaria Participantes
	aAdd(aDbfPar,{ "TRB_OK"		, "C" ,02, 0 })
	aAdd(aDbfPar,{ "TRB_CODMEL"	, "C" ,Len(TCO->TCO_CODMEL)	, 0 }) //"Op. Melhoria"
	aAdd(aDbfPar,{ "TRB_DESMEL"	, "C" ,Len(TCO->TCO_DESMEL)	, 0 }) //"Descrição"
	aAdd(aDbfPar,{ "TRB_LOCAL"	, "C" ,Len(TCO->TCO_LOCAL)	, 0 }) //"Local"
	aAdd(aDbfPar,{ "TRB_FLAG"	, "C" ,11	, 0 }) //"Módulo"
	aAdd(aDbfPar,{ "TRB_TIPO"	, "C" ,11	, 0 }) //"Tipo"
	aAdd(aDbfPar,{ "TRB_STATUS" , "C" ,11	, 0 }) //"Status"
		
	oTempTRB := FWTemporaryTable():New( cAliasMel, aDbfPar )
	oTempTRB:AddIndex( "1", {"TRB_CODMEL","TRB_DESMEL"} )
	oTempTRB:AddIndex( "2", {"TRB_OK"} )
	oTempTRB:Create()
	
	//Define campos a serem apresentados no markbrowse
	aAdd(aFldMrk,{ "TRB_OK"		,NIL,,}) 
	aAdd(aFldMrk,{ "TRB_CODMEL"	,NIL,"Oport. Melhoria",})
	aAdd(aFldMrk,{ "TRB_DESMEL"	,NIL,"Nome",})
	aAdd(aFldMrk,{ "TRB_LOCAL"	,NIL,"Local",})
	aAdd(aFldMrk,{ "TRB_FLAG"	,NIL,"Módulo",})
	aAdd(aFldMrk,{ "TRB_TIPO"	,NIL,"Tipo",})
	aAdd(aFldMrk,{ "TRB_STATUS"	,NIL,"Status",})
	
	cMarcaMel := GetMark()   

	If cStatus == "3"
		cDescStat := STR0011 //"Cancelado"
		cTitle := STR0013 //"Cancelar Oportunidades de Melhoria"
		cState := STR0020 //"cancelar"
	Else
		cDescStat := STR0010// "Finalizado"
		cTitle := STR0014 //"Finalizar Oportunidades de Melhoria"
		cState := STR0021 //"finalizar"
	EndIf	

	Define MsDialog oDialog From aSize[7]/1.5,0 to aSize[6]/1.5,aSize[5]/1.5 Title cTitle Pixel //"Cancelar/Finalizar Oportunidades de Melhoria"
		//Panel Pai
		oPnlPai := TPanel():New(0,0,,oDialog,,,,,CLR_WHITE,12,30,.F.,.F.)
			oPnlPai:Align := CONTROL_ALIGN_ALLCLIENT
			
			//Panel Cabeçalho
			oPnlTop := TPanel():New(0,0,,oPnlPai,,,,,CLR_WHITE,12,30,.F.,.F.)
				oPnlTop:Align := CONTROL_ALIGN_TOP
			
			//Panel Central com o MarkBrowse	
			oPnlCenter := TPanel():New(0,0,,oPnlPai,,,,,CLR_WHITE,12,30,.F.,.F.)
				oPnlCenter:Align := CONTROL_ALIGN_ALLCLIENT

			TGroup():New( 05 , 005 , 25, aSize[3]/1.5-5, , oPnlTop, , , .T.)//"O plano"###" foi "###
			TSay():New( 07, 09 , {|| STR0015 + "'" + AllTrim(cDescPlano) + "' " + STR0016 + " " + cDescStat + "."},oPnlTop,,,,,,.T.,,,aSize[3]/1.5-15 ,20) //"O plano"###" foi "###
			TSay():New( 14, 09 , {|| STR0017 + " " + cState + ":" },oPnlTop,,,,,,.T.,,,aSize[3]/1.5-15 ,20) // "Abaixo estão as Oportunidades de Melhoria que estão vinculadas a este plano, marque as que deseja "
			
			Processa({|| LoadTRBMel(cCodPlano)}) //Carrega TRB
		
			oMarkPar := MsSelect():New((cAliasMel),"TRB_OK",,aFldMrk,,@cMarcaMel,{0,0,146,437},,,oPnlCenter,,)
			oMarkPar:oBrowse:lCanAllMark := .T.
			oMarkPar:oBrowse:lAllMark := .T.
			oMarkPar:oBrowse:bAllMark := {|| SetMarkAll( cAliasMel , @cMarcaMel, 1 )  }
			oMarkPar:oBrowse:Refresh()
			oMarkPar:oBrowse:GoTop()

	Activate MsDialog oDialog On Init EnchoiceBar( oDialog,	{|| fGravaMark(cStatus),oDialog:End()},;
																	{|| oDialog:End() }) Centered
															
	oTempTRB:Delete()
																												
Return .T. 
//---------------------------------------------------------------------
/*/{Protheus.doc} LoadTRBMel
Carrega TRB com os registros da tabela (TCO) que utilizam o código
do plano de ação passado por parâmetro

@param cCodPlano - Código do plano de ação para utilizar no filtro
@author  Gabriel Augusto Werlich
@since   05/08/2015
@version P11/P12
/*/
//---------------------------------------------------------------------
Static Function LoadTRBMel(cCodPlano)

Local cFiltro :=  "TCO->TCO_FILIAL == '" + xFilial( "TCO" ) + "' .And. TCO->TCO_CODACA  == '" + cCodPlano + "'" + ".And. TCO->TCO_STATUS  $ '1/2'"  

dbSelectArea("TCO")
Set Filter to &( cFiltro )   
dbGoTop()
While TCO->( !Eof() )
	RecLock((cAliasMel),.T.)
	(cAliasMel)->TRB_CODMEL	:= TCO->TCO_CODMEL
	(cAliasMel)->TRB_DESMEL	:= TCO->TCO_DESMEL
	(cAliasMel)->TRB_LOCAL	:= TCO->TCO_LOCAL
	(cAliasMel)->TRB_FLAG	:= GetDescri("1", TCO->TCO_FLAG)
	(cAliasMel)->TRB_TIPO	:= GetDescri("2", TCO->TCO_TIPO)
	(cAliasMel)->TRB_STATUS	:= GetDescri("3", TCO->TCO_STATUS)
	MsUnlock(cAliasMel)
	TCO->( dbSkip() )
EndDo
              
Set Filter To

Return

//---------------------------------------------------------------------
/*/{Protheus.doc} GetDescri
Função com o intuito apenas de buscar a descrição de acordo com
os parametros recebidos. 

@author  Gabriel Augusto Werlich
@since   05/08/2015
@param   cTipo - Tipo a ser verificado (Módulo/Tipo de Melhoria/Status)
@param   cTipo - Valor que está no campo
@version P11/P12
/*/
//---------------------------------------------------------------------
Static Function GetDescri(cTipo, cValor)

Local cDesc := ""

If cTipo == "1" //Flag
	If cValor == "1"
		cDesc := "SGA"
	ElseIf cValor == "2"
		cDesc := "MDT"
	Else
		cDesc := STR0018 //"Ambos"
	EndIf
ElseIf cTipo == "2" //Tipo
	If cValor == "1"
		cDesc := STR0019 //"Ambiental"
	ElseIf cValor == "2"
		cDesc := "QSMS"
	ElseIf cValor == "3"
		cDesc := "SMS"
	Else
		cDesc := "SSO"
	EndIf
Else //Status
	If cValor == "1"
		cDesc := STR0008 //"Pendente"
	ElseIf cValor == "2"
		cDesc := STR0009 //"Em Processo"
	ElseIf cValor == "3"
		cDesc := STR0011 //"Cancelado"
	Else
		cDesc := STR0010 //"Finalizado"
	EndIf
EndIf

Return cDesc

//---------------------------------------------------------------------
/*/{Protheus.doc} SetMarkAll
Função para marcar e desmarcar todos

@param cAliasMel - Tabela temporária
@param cMarca 	- Valor da Marcação
@param nMark 	- Verifica qual tabela temporaria utilizar

@author Gabriel Augusto Werlich
@since 05/08/2015
/*/
//---------------------------------------------------------------------
Static Function SetMarkAll(cAliasMel, cMarca, nMark)
Local nRecno := Recno()//Guarda registro posicionado

//Inverte a marcacao dos registros
dbSelectarea(cAliasMel)
dbGoTop()
While !Eof()
   dbSelectArea(cAliasMel)
   RecLock(cAliasMel,.F.)
	If nMark == 1
	   (cAliasMel)->TRB_OK := If(IsMark(	"TRB_OK",cMarca),Space(2),cMarca)
	ElseIf nMark == 2
		(cAliasMel)->OK := If(IsMark("OK",cMarca),Space(2),cMarca)
	EndIf
	MsUnlock(cAliasMel)
   dbSkip()
End

//Reposiciona no Registro
dbGoTo(nRecno)

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} fGravaMark
Carrega TRB de OPTMelhoria

@author  Gabriel Augusto Werlich
@since   05/08/2015
@param   cStatus - 3(Cancelado) / 4(Finalizado)
@version P11/P12
/*/
//---------------------------------------------------------------------
Static Function fGravaMark(cStatus)

	Local i := 1
	Local aMarcados := {}

	//Grava no Array os registros marcados na TRB	
	dbSelectArea(cAliasMel)
 	dbSetOrder(2) 

	While (cAliasMel)->( !Eof() ) .And. !Empty((cAliasMel)->TRB_OK)
		dbGoTo(i)
		 i++                                                                                                        
		 aADD(aMarcados, (cAliasMel)->TRB_CODMEL )
	EndDo	
	
	//Altera o Status dos registros TCO para Finalizado/Cancelado
	dbSelectArea("TCO")
	dbSetOrder(1)
	For i := 1 To Len(aMarcados)
		If dbSeek(xFilial("TCO")+aMarcados[i])
			Reclock("TCO",.F.)
			TCO->TCO_STATUS := cStatus
			MsUnlock("TCO")
		EndIf
	Next
	
Return aMarcados
//---------------------------------------------------------------------
/*/{Protheus.doc} SG410ALT
Valida opção de Alterar um registro, caso o TCO_STATUS estiver 3 ou 4
abre a tela de Visualização 

@author  Gabriel Augusto Werlich
@since   05/08/2015
@param   cAlias - Tabela sendo utilizada
@param   Recno - Registro Atual
@param   nOpc - Tipo de operação
@version P11/P12
/*/
//---------------------------------------------------------------------
Function SG410ALT(cAlias, nRecno, nOpc)
	
	If !TCO->TCO_STATUS $ "3/4
		NgCad01(cAlias,nRecno,nOpc) 
	Else
		If (TCO->TCO_STATUS == "4", cDesc := STR0010 , cDesc := STR0011) 
			
		If MsgYesNo(STR0022 +" "+ cDesc +" "+ STR0023)// "O registro está"###"deseja apenas visualizar?"
			NgCad01(cAlias,nRecno,2)
		EndIf
	EndIf
	
Return
//---------------------------------------------------------------------
/*/{Protheus.doc} SGA410VAL
Apenas mostra uma mensagem no caso do usuario selecionar um status do 
tipo 3 ou 4
@author  Gabriel Augusto Werlich
@since   05/08/2015
@param   cStatus - 3(Cancelado) / 4(Finalizado)
@version P11/P12
/*/
//---------------------------------------------------------------------
Function SGA410VAL(cStatus)
	If M->TCO_STATUS $ "3/4"
		MsgStop (STR0024) //"Se definir o status para Cancelado ou Finalizado, não será possível mais alterar o registro ao confirmar a tela!"
	EndIf
Return 
//---------------------------------------------------------------------
/*/{Protheus.doc} SGA410VAL
Valida F3 do campo de Plano de ação.
@author  Gabriel Augusto Werlich
@since   05/08/2015
@param   cStatus - 3(Cancelado) / 4(Finalizado)
@version P11/P12
/*/
//---------------------------------------------------------------------
Function SGA410VF3(cCodPla)
	Local aArea := GetArea()
	Local lRet := .T.
	dbSelectArea("TAA")
	dbSetOrder(1)
	If dbSeek(xFilial("TAA")+cCodPla)
		If TAA->TAA_STATUS $ "2/3"
			Help(" ",1,"REGNOIS")
			lRet := .F.
		EndIf
	EndIf
	RestArea(aArea)
Return lRet