#INCLUDE "mntc950.ch"
#INCLUDE "PROTHEUS.CH"

#DEFINE _nVERSAO 2 //Versao do fonte

//---------------------------------------------------------------------
/*/{Protheus.doc} MNTC950
Distribuicao da mao-de-obra de manutencao (interval ano)
@author Inacio Luiz Kolling
@since 19/03/98
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function MNTC950()

	//+-----------------------------------------------------------------------+
	//| Armazena variaveis p/ devolucao (NGRIGHTCLICK) 				  		  |
	//+-----------------------------------------------------------------------+
	Local aNGBEGINPRM := NGBEGINPRM(_nVERSAO)

	Local oTmpTbl1
	
	Private cCadastro := OemToAnsi(STR0001) //"Dist. Mao-de-obra de Manutencao "
	Private totalc,nprevist,nrealiza,hprevist,hrealiza,nCusto,nQTD1,nFol,nTempo,nSem

	Store 0.00 To totalc,nprevist,nrealiza,hprevist,hrealiza,nCusto,nQTD1,nFol
	Store 0    To nTempo,nSem
	Private vVETHORAS := {}
	
	Private cTRB  := GetNextAlias() 

	aRotina := {{STR0002 ,"AxPesqui" , 0 , 1},; //"Pesquisar"
				{STR0003 ,"NGCAD01" , 0 , 2}}   //"Visualizar"

	cCadastro := OemToAnsi(cCadastro)
	
	//+--------------------------------------------------------------+
	//| Variaveis utilizadas para parametros                         |
	//| mv_par01     // De Ano                                       |
	//| mv_par02     // Ate Ano Seguinte                             |
	//| mv_par03     // De  Serviço                                  |
	//| mv_par04     // Ate Serviço                                  |
	//| mv_par05     // De Centro Custo                              |
	//| mv_par06     // Ate Centro Custo                             |
	//+--------------------------------------------------------------+

	If !Pergunte("MNT950",.T.)
		Return
	EndIf

	CMV_PAR01 := MV_PAR01
	CMV_PAR02 := MV_PAR02
	CMV_PAR03 := MV_PAR03
	CMV_PAR04 := MV_PAR04
	CMV_PAR05 := MV_PAR05
	CMV_PAR06 := MV_PAR06

	aDBF := {{"SERVICO" ,"C", 06,0} ,;
			 {"NOMESER" ,"C", 40,0} ,;
			 {"ANOUM"   ,"N", 12,2} ,;
			 {"ANODOIS" ,"N", 12,2}}

	//Intancia classe FWTemporaryTable
	oTmpTbl1 := FWTemporaryTable():New( cTRB, aDBF )
	//Cria indices 
	oTmpTbl1:AddIndex( "Ind01" , {"SERVICO"} )
	//Cria a tabela temporaria
	oTmpTbl1:Create()

	Processa({|| C950PRCO()})   // STJ & STS - HISTORICO

	DbSelectArea(cTRB)
	DbGotop()

	Define Dialog oDlg1 From 6,0 To 34,100 Title cCadastro+" "+str(CMV_PAR01,4)+STR0008+str(CMV_PAR02,4)

	@ 04,020 Button STR0009 Of oDlg1 Size 40,09 Pixel Action (C950GRAFI()) //"&Grafico"
	@ 04,060 Button STR0010 Of oDlg1 Size 40,09 Pixel Action (C950PRINT()) //"&Imprimir"
	@ 04,100 Button STR0026 Of oDlg1 Size 40,09 Pixel Action (oDlg1:End()) //"Sair"

	@ 1,0.3 ListBox Fields SERVICO                                      ,;
	NOMESER                                      ,;
	NtoH(ANOUM)             ,;
	NtoH(ANODOIS)            ;
	FieldSizes 50,200,100,100                     ;
	Size 388,195                                    ;
	HEADERS STR0011                                ,; //"Servico "
	STR0012                                ,; //"Nome do Servico"
	STR0013+str(CMV_PAR01)                 ,; //"Ano "
	STR0013+str(CMV_PAR02)                    //"Ano "
	
	Activate Dialog oDlg1

	oTmpTbl1:Delete()

	DbSelectArea("STJ")
	DbSetOrder(01)

	//+--------------------------------------------------------------+
	//| Devolve variaveis armazenadas (NGRIGHTCLICK)                 |
	//+--------------------------------------------------------------+
	NGRETURNPRM(aNGBEGINPRM)

Return .T.
 
//---------------------------------------------------------------------                       
/*/{Protheus.doc} C950PRCO
Processa as O.S. atual e O.S. historico  
@author Inacio Luiz Kolling
@since   /06/97
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function C950PRCO()

	cCONDSTJ := 'STJ->TJ_TIPOOS = "B"'
	cCONDSTJ := cCONDSTJ + ' .And. STJ->TJ_SITUACA == "L" .And. STJ->TJ_TERMINO == "S" .AND. !EMPTY(STJ->TJ_DTMRINI)'                         
	cCONDSTJ := cCONDSTJ + ' .And. (STJ->TJ_SERVICO >= CMV_PAR03 .And. STJ->TJ_SERVICO <= CMV_PAR04)'
	cCONDSTJ := cCONDSTJ + ' .And. (STJ->TJ_CCUSTO >= CMV_PAR05 .And. STJ->TJ_CCUSTO <= CMV_PAR06)'  

	cCONDSTS := 'STS->TS_TIPOOS = "B"'
	cCONDSTS := cCONDSTS + ' .And. STS->TS_SITUACA == "L" .And. STS->TS_TERMINO == "S" .AND. !EMPTY(STS->TS_DTMRINI)'                         
	cCONDSTS := cCONDSTS + ' .And. (STS->TS_SERVICO >= CMV_PAR03 .And. STS->TS_SERVICO <= CMV_PAR04)'
	cCONDSTS := cCONDSTS + ' .And. (STS->TS_CCUSTO >= CMV_PAR05 .And. STS->TS_CCUSTO <= CMV_PAR06)' 

	DMV_PAR01 := CTOD('01/01/'+STR(CMV_PAR01))
	DMV_PAR02 := CTOD('31/12/'+STR(CMV_PAR02))

	DbSelectArea("STL")
	DbSetOrder(06) 
	DbSeek(xFilial("STL")+DTOS(DMV_PAR01),.T.)
	nReg := (LastRec() - Recno())

	DbSelectArea("STT")
	DbSetOrder(05)
	DbSeek(xFilial("STT")+DTOS(DMV_PAR01),.T.)
	nReg := nReg + (LastRec() - Recno())

	DbSelectArea("STL")
	ProcRegua(nReg)
	While !Eof() .And. STL->TL_FILIAL == xFilial("STL") .And. STL->TL_DTINICI <= DMV_PAR02

		IncProc()

		If Alltrim(STL->TL_SEQRELA) <> "0" .And. STL->TL_TIPOREG == "M"

			DbSelectArea("STJ")
			DbSetOrder(01)
			If DbSeek(xFilial("STJ")+STL->TL_ORDEM+STL->TL_PLANO) 

				If &(cCONDSTJ)

					hrealiza := 0.00

					// PROCURA O CALENDARIO
					// ESTA FUNCAO ESTA NO NGUTIL.PRX
					cCALEND := PROCALEND(STJ->TJ_CODBEM,STJ->TJ_SERVICO,STJ->TJ_SEQRELA)

					vVETHORAS := NGTQUATINS(STL->TL_CODIGO,STL->TL_TIPOREG,STL->TL_USACALE,;
					STL->TL_QUANTID,STL->TL_TIPOHOR,STL->TL_DTINICI,;
					STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)
					nQTDHORAS := vVETHORAS[1]

					// ESTA FUNCAO ESTA NO NGCUSTOS.PRX
					PROCINSUMO(STL->TL_TIPOREG,STL->TL_CODIGO,STL->TL_SEQRELA,;
					If(NGCADICBASE('TL_PCTHREX','A','STL',.F.),STL->TL_PCTHREX,Val(STL->TL_HREXTRA)),nQTDHORAS,STL->TL_DTINICI,;
					STL->TL_HOINICI,STL->TL_DTFIM,STL->TL_HOFIM,STL->TL_UNIDADE)

					If hrealiza > 0
						C950GRAVA(STJ->TJ_SERVICO,STL->TL_DTINICI)
					EndIf
				EndIf
			EndIf
		EndIf
		DbSelectArea("STL")
		DbSkip()
	End

	DbSelectArea("STT")
	While !Eof() .And. STT->TT_FILIAL == xFilial("STT") .And. STT->TT_DTINICI <= DMV_PAR02

		IncProc()

		If Alltrim(STT->TT_SEQRELA) <> "0" .And. STT->TT_TIPOREG == "M"

			DbSelectArea("STS")
			DbSetOrder(01)
			If DbSeek(xFilial("STS")+STT->TT_ORDEM+STT->TT_PLANO)

				If &(cCONDSTS)

					hrealiza := 0.00

					// PROCURA O CALENDARIO
					// ESTA FUNCAO ESTA NO NGUTIL.PRX
					cCALEND := PROCALEND(STS->TS_CODBEM,STS->TS_SERVICO,STS->TS_SEQRELA)

					vVETHORAS := NGTQUATINS(STT->TT_CODIGO,STT->TT_TIPOREG,STT->TT_USACALE,;
					STT->TT_QUANTID,STT->TT_TIPOHOR,STT->TT_DTINICI,;
					STT->TT_HOINICI,STT->TT_DTFIM,STT->TT_HOFIM,STT->TT_UNIDADE)
					nQTDHORAS := vVETHORAS[1]

					// ESTA FUNCAO ESTA NO NGCUSTOS.PRX
					PROCINSUMO(STT->TT_TIPOREG,STT->TT_CODIGO,STT->TT_SEQRELA,;
					If(NGCADICBASE('TT_PCTHREX','A','STT',.F.),STT->TT_PCTHREX,Val(STT->TT_HREXTRA)),nQTDHORAS,STT->TT_DTINICI,;
					STT->TT_HOINICI,STT->TT_DTFIM,STT->TT_HOFIM,STT->TT_UNIDADE)

					If hrealiza > 0
						C950GRAVA(STS->TS_SERVICO,STT->TT_DTINICI)
					EndIf
				EndIf
			EndIf
		EndIf
		DbSelectArea("STT")
		DbSkip()
	End
Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} C950GRAVA
Grava no arquivo auxiliar .
@author Inacio Luiz Kolling
@since   /  /  
@version undefined
@param VSERVICO, , descricao
@param VDTMPINI, , descricao
@type function
/*/
//---------------------------------------------------------------------
Function  C950GRAVA(VSERVICO,VDTMPINI)

	DbSelectArea(cTRB)
	If !DbSeek(VSERVICO)

		(cTRB)->(DbAppend())
		(cTRB)->SERVICO := VSERVICO
		(cTRB)->NOMESER := NGSEEK('ST4',VSERVICO,1,'T4_NOME')
		If Year(VDTMPINI) = CMV_PAR01
			(cTRB)->ANOUM := hrealiza
		Else
			(cTRB)->ANODOIS := hrealiza
		EndIf

	Else

		If Year(VDTMPINI) = CMV_PAR01
			(cTRB)->ANOUM := (cTRB)->ANOUM + hrealiza
		Else
			(cTRB)->ANODOIS := (cTRB)->ANODOIS + hrealiza
		EndIf

	EndIf

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} C950GRAFI
Grafico Custo das O.S. por Servico
@author dInacio Luiz Kolling
@since   /  /  
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function C950GRAFI()

	Local oTmpTbl2
	
	Private cTRBV := GetNextAlias() 
	
	DbselectArea(cTRB)
	Dbgotop()
	If Reccount() = 0
		nDel := Help(" ",1,"NGTDADGRAF") //"Nao existem dados para montar o grafico..."###"ATENCAO"
		DbselectArea(cTRB)
		Return .T.
	EndIf
	
	cTilucen := "  "+cCadastro+str(CMV_PAR01,4)+ STR0008+str(CMV_PAR02,4) //" e "

	// ARQUIVO DE DADOS
	aDBF3 := {{"CODIGO" , "C", 10,0} ,;
			  {"NOMECOD", "C", 30,0} ,;
			  {"VALOR1" , "N", 12,2} ,;
			  {"VALOR2" , "N", 12,2}}

	//Intancia classe FWTemporaryTable
	oTmpTbl2 := FWTemporaryTable():New( cTRBV, aDBF3 )
	//Index
	oTmpTbl2:AddIndex( "Ind02" , {"CODIGO"} )
	//Cria a tabela temporaria
	oTmpTbl2:Create()


	DbselectArea(cTRB)
	Dbgotop()
	While !Eof()
		(cTRBV)->(DbAppend())
		(cTRBV)->CODIGO  := (cTRB)->SERVICO
		(cTRBV)->NOMECOD := Substr((cTRB)->NOMESER,1,15)
		(cTRBV)->VALOR1  := (cTRB)->ANOUM
		(cTRBV)->VALOR2  := (cTRB)->ANODOIS
		DbselectArea(cTRB)
		Dbskip()
	End

	// 1- linha titulo do grafico (janela)
	// 2- linha titulo da direita do grafico
	// 3- linha titulo superior do grafico
	// 4- linha titulo da direita do grafico
	// 5- linha titulo da inferior do grafico
	// 6- linha series do grafico
	// 7- leitura ("A" - Arquivo temporario,"M" - Matriz)
	// 8- alias doa arquivo temporario com os dados /ou
	// 9- matriz com os dados

	vCRIGTXT := NGGRAFICO(" "+cTilucen," ",STR0014,cTilucen,STR0015,;
	{Str(cmv_par01),Str(cmv_par02)},"A",(cTRBV))
	
	oTmpTbl2:Delete()

	DbselectArea(cTRB)
	DbGotop()

Return .T.

//---------------------------------------------------------------------
/*/{Protheus.doc} C950PRINT
Impressao do Custo das O.S. por Servico   
@author Inacio Luiz Kolling 
@since 06/12/2016
@version undefined
@type function
/*/
//---------------------------------------------------------------------
Function C950PRINT()

	Local cString    := (cTRB)
	Local cDesc1     := cCadastro+str(CMV_PAR01,4)+STR0008+str(CMV_PAR02,4) //" e "
	Local cDesc2     := ""
	Local cDesc3     := ""
	Local wnrel      := "MNTC950"

	Private aReturn  := { STR0018, 1,STR0019, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
	Private nLastKey := 0
	Private Titulo   := cDesc1
	Private Tamanho  := "M"
	Private cPerg    := "MNT950"

	DbSelectArea(cTRB)
	DbGotop()
	If Reccount() = 0
		nDel := Help(" ",1,"NGTDADIMP") //"Nao existem dados para imprimir..."###"ATENCAO"
		Return .T.
	EndIf

	//+--------------------------------------------------------------+
	//| Envia controle para a funcao SETPRINT                        |
	//+--------------------------------------------------------------+
	wnrel:=SetPrint(cString,wnrel,,titulo,cDesc1,cDesc2,cDesc3,.F.,"")
	If nLastKey = 27
		Set Filter To
		Return
	EndIf

	SetDefault(aReturn,cString)
	RptStatus({|lEnd| C950Imp(@lEnd,wnRel,titulo,tamanho)},titulo)

Return Nil

//---------------------------------------------------------------------
/*/{Protheus.doc} C950Imp
Chamada do Relatório
@author Inacio Luiz Kolling
@since 26/06/97
@version undefined
@param lEnd, logical, descricao
@param wnRel, , descricao
@param titulo, , descricao
@param tamanho, , descricao
@type function
/*/
//---------------------------------------------------------------------
Static Function C950Imp(lEnd,wnRel,titulo,tamanho)

	//+--------------------------------------------------------------+
	//| Define Variaveis                                             |
	//+--------------------------------------------------------------+
	Local cRodaTxt := ""
	Local nCntImpr := 0

	//+--------------------------------------------------------------+
	//| Contadores de linha e pagina                                 |
	//+--------------------------------------------------------------+
	Private li := 80

	m_pag := 1

	//+--------------------------------------------------------------+
	//| Verifica se deve comprimir ou nao                            |
	//+--------------------------------------------------------------+
	nTipo  := IIF(aReturn[4]==1,15,18)

	Private Cabec1    := STR0021+str(CMV_PAR01,4)+ STR0022+str(CMV_PAR02,4) //"  Servico   Nome da Servico                                 Ano "###"        Ano "
	Private Cabec2    := ' '
	Private nomeprog  := "MNTC950"

	/*
	************************************************************************************************************************************
	*<empresa>                                                                                                        Folha..: xxxxx   *
	*SIGA /<nome .04                                 <     titulo do relatorio    >                                   DT.Ref.: dd/mm/aa*
	*Hora...: xx:xx:xx                                                                                                Emissao: dd/mm/aa*
	************************************************************************************************************************************
	1         2         3         4         5         6         7         8         9         0         1         2         3
	0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
	************************************************************************************************************************************
	Servico   Nome da Servico                                Ano 9999         Ano 9999
	************************************************************************************************************************************
	XXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  999.999.999,99  999.999.999,99
	XXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  999.999.999,99  999.999.999,99

	*/

	DbSelectArea(cTRB)
	DbGoTop()
	SetRegua(LastRec())
	While !(cTRB)->(Eof())

		IncRegua()

		NGSOMALI(58)
		@li,002 Psay (cTRB)->SERVICO  Picture '@!'
		@li,012 Psay (cTRB)->NOMESER  Picture '@!'
		@li,054+(14-LEN(NtoH((cTRB)->ANOUM))) Psay NtoH((cTRB)->ANOUM) 
		@li,070+(14-LEN(NtoH((cTRB)->ANODOIS))) Psay NtoH((cTRB)->ANODOIS) 

		(cTRB)->(DbSkip())
	End

	Roda(nCntImpr,cRodaTxt,Tamanho)
	Set Filter To
	Set Device To Screen

	If aReturn[5] = 1
		Set Printer To
		dbCommitAll()
		OurSpool(wnrel)
	EndIf
	MS_FLUSH()
	DbGotop()

Return Nil