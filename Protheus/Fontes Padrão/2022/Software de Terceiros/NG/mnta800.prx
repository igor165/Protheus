#INCLUDE "MNTA800.ch"
#include "Protheus.ch"

#DEFINE __POS_TP6__ 1
#DEFINE __POS_ST1__ 2

#DEFINE __LEN_FOLDER__ 2

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNTA800  ³ Autor ³ Rafael Diogo Richter  ³ Data ³21/08/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Programa para cadastro de Equipes de Manutencao, utilizado  ³±±
±±³          ³no Calendario flutuante.                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Tabelas   ³TP4 - Equipes                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMNT                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNTA800()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Guarda conteudo e declara variaveis padroes ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aNGBEGINPRM := NGBEGINPRM()

Private aRotina := MenuDef()
Private cCadastro := OemtoAnsi(STR0001) //"Equipes de Manutenção"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Endereca a funcao de BROWSE                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("TP4")
dbSetOrder(1)
mBrowse(6,1,22,75,"TP4")

NGRETURNPRM(aNGBEGINPRM)

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNT800Dt ³ Autor ³ Rafael Diogo Richter  ³ Data ³22/08/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para Validacao dos Campos TP6_DTINI e TP6_DTFIM      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Tabelas   ³TP6 - Bloqueio de Equipes      	                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMNT                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT800Dt()
Local aCols   := aObj800[__POS_TP6__]:aCols
Local aHeader := aObj800[__POS_TP6__]:aHeader
Local n := aObj800[__POS_TP6__]:nAt
Local cData, i
Local nPosDtI := GDFIELDPOS("TP6_DTINI",aHeader)
Local nPosDtF := GDFIELDPOS("TP6_DTFIM",aHeader)

If ReadVar() $ "M->TP6_DTINI"
	cData := &(ReadVar())
	If !Empty(cData) .And. !Empty(aCols[n][nPosDtF]) .And. aCols[n][nPosDtF] < cData
        Help(" ",1,STR0003,,STR0011,3,1)
		Return .F.
	EndIf
ElseIf ReadVar() $ "M->TP6_DTFIM"
	cData := &(ReadVar())
	If !Empty(aCols[n][nPosDtI]) .And. !Empty(cData) .And. cData < aCols[n][nPosDtI]
        Help(" ",1,STR0003,,STR0011,3,1)
		Return .F.
	EndIf
EndIf

If ReadVar() $ "M->TP6_DTINI" .Or. ReadVar() $ "M->TP6_DTFIM"
	For i:= 1 to Len(aCols)
		If cData >= aCols[i][nPosDtI] .And. cData <= aCols[i][nPosDtF] .And. n <> i .And. !aCols[n][Len(aCols[n])]
			MsgStop(STR0005,STR0003) //"O intervalo de data informado já está sendo utilizado em outro registro."###"Atenção!"
			Return .F.
		EndIf
	Next i
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MNT800Ln	³ Autor ³ Rafael Diogo Richter  ³ Data ³22/08/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para Validacao da linha.                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Tabelas   ³TP6 - Bloqueio de Equipes      	                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMNT                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT800Ln(nOpcao, lFim)
Local f
Local aColsOk := aObj800[nOpcao]:aCols, aHeadOk := aObj800[nOpcao]:aHeader
Local nPosCod := 0, nPosDtI := 0, nPosDtF := 0, nAt := aObj800[nOpcao]:nAt
Default lFim := .F.

If nOpcao == __POS_TP6__
	nPosCod := GDFIELDPOS("TP6_CALEND",aHeadOk)
	nPosDtI := GDFIELDPOS("TP6_DTINI",aHeadOk)
	nPosDtF := GDFIELDPOS("TP6_DTFIM",aHeadOk)
ElseIf nOpcao == __POS_ST1__
	nPosCod := GDFIELDPOS("T1_CODFUNC",aHeadOk)
EndIf
//As Getdados nao sao obrigatorias
If lFim .And. Len(aColsOk) == 1 .And. Empty(aColsOk[1][nPosCod]) .And. (nPosDtI == 0 .Or. Empty(aColsOk[1][nPosDtI]))
	Return .T.
EndIf

//Percorre aCols
For f:= 1 to Len(aColsOk)
	If !aColsOk[f][Len(aColsOk[f])]
		If lFim .Or. f == nAt
			//VerIfica se os campos obrigatórios estão preenchidos
			If Empty(aColsOk[f][nPosCod])
				//Mostra mensagem de Help
				Help(1," ","OBRIGAT2",,aHeadOk[nPosCod][1],3,0)
				Return .F.
			ElseIf nPosDtI > 0 .And. Empty(aColsOk[f][nPosDtI])
				//Mostra mensagem de Help
				Help(1," ","OBRIGAT2",,aHeadOk[nPosDtI][1],3,0)
				Return .F.
			ElseIf nPosDtF > 0 .And. Empty(aColsOk[f][nPosDtF])
				//Mostra mensagem de Help
				Help(1," ","OBRIGAT2",,aHeadOk[nPosDtF][1],3,0)
				Return .F.
			EndIf
		EndIf
		//Verifica se é somente LinhaOk
		If f <> nAt .And. !aColsOk[nAt][Len(aColsOk[nAt])]
			If nOpcao == __POS_TP6__
				If (aColsOk[nAt][nPosDtI] >= aColsOk[f][nPosDtI] .And. aColsOk[nAt][nPosDtI] <= aColsOk[f][nPosDtF] .Or.;
					 aColsOk[nAt][nPosDtF] >= aColsOk[f][nPosDtI] .And. aColsOk[nAt][nPosDtF] <= aColsOk[f][nPosDtF] .Or.;
					 aColsOk[nAt][nPosDtI] <= aColsOk[f][nPosDtI] .And. aColsOk[nAt][nPosDtF] >= aColsOk[f][nPosDtF])
					MsgStop(STR0005,STR0003) //"O intervalo de data informado já está sendo utilizado em outro registro."###"Atenção!"
					Return .F.
				EndIf
			ElseIf nOpcao == __POS_ST1__
				If aColsOk[f][nPosCod] == aColsOk[nAt][nPosCod]
					Help(" ",1,"JAEXISTINF",,aHeadOk[nPosCod][1])
					Return .F.
				EndIf
			EndIf
		EndIf
	EndIf
Next f

If nOpcao == __POS_TP6__
	PutFileInEof("TP6")
ElseIf nOpcao == __POS_ST1__
	PutFileInEof("ST1")
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNT800Alt	³ Autor ³ Rafael Diogo Richter  ³ Data ³22/08/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para gravacao de alteracao.                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Tabelas   ³TP6 - Bloqueio de Equipes      	                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMNT                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MNT800Alt(cAlias,nRecno,nOpcx)
Local oDlg800, oEnc800, oPanel, oFolder
Local lOk := .F.
Local aButtons := {{"reload",{|| MNA800Rep()},STR0012,STR0013}}//"Replicar Ciclos"###"Repl. Ciclos"

//Variaveis de tamanho de tela e objetos
Local aSize := {}, aObjects := {}, aInfo := {}, aPosObj := {}

//Variaveis de getdados
Local aArrGet := {}
Local nOpcGet := If(nOpcx == 3 .Or. nOpcx == 4, GD_INSERT+GD_DELETE+GD_UPDATE, 0)
Private aObj800 := Array(__LEN_FOLDER__)

//Variaveis da enchoice
Private cCadastro := OemtoAnsi(STR0001) //"Equipes de Manutenção"
Private aGets := {}, aTela := {}

//Variavel para verificar se gatilho do T1_CODFUNC deve ser executado
Private lST1Gat := .F.

//Definicao de tamanho de tela e objetos
aSize := MsAdvSize(,.F.,430)
aAdd(aObjects,{025,025,.T.,.T.})
aAdd(aObjects,{075,075,.T.,.T.})
aInfo := {aSize[1],aSize[2],aSize[3],aSize[4],0,0}
aPosObj := MsObjSize(aInfo, aObjects,.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Seta Visual, Inclui, Altera ou Exclui conforme nOpc³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aRotSetOpc(cAlias,nRecno,nOpcx)

Define MsDialog oDlg800 Title OemToAnsi(cCadastro) From aSize[7],0 To aSize[6],aSize[5] Of oMainWnd Pixel
oDlg800:lMaximized := .T.

//Define painel principal
oPanel := TPanel():New(0,0,,oDlg800,,,,,,aSize[5],aSize[6],.F.,.F.)
	oPanel:Align := CONTROL_ALIGN_ALLCLIENT

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Parte Superior da tela                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("TP4")
RegToMemory("TP4",Inclui)
oEnc800 := MsMGet():New("TP4",nRecno,nOpcx,,,,,aPosObj[1],,,,,,oPanel,,,.F.)
	oEnc800:oBox:Align := CONTROL_ALIGN_TOP

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Parte Inferior da tela                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oFolder := TFolder():New( 0,0,{STR0018,STR0019},,oPanel,,,,.T.,,0,aSize[6]) //"Calendários" # "Funcionários"
	oFolder:Align := CONTROL_ALIGN_ALLCLIENT

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³GetDados de Calendarios       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aArrGet := fRetArr(nOpcx,__POS_TP6__)
	aObj800[__POS_TP6__] := MsNewGetDados():New(5,5,500,500,nOpcGet,"MNT800Ln("+cValToChar(__POS_TP6__)+")","AllWaysTrue()",,,,9999,,,,oFolder:aDialogs[1],aArrGet[1],aArrGet[2])
		aObj800[__POS_TP6__]:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT
		aObj800[__POS_TP6__]:oBrowse:Refresh()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³GetDados de Funcionarios      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aArrGet := fRetArr(nOpcx,__POS_ST1__)
	aObj800[__POS_ST1__] := MsNewGetDados():New(5,5,500,500,nOpcGet,"MNT800Ln("+cValToChar(__POS_ST1__)+")","AllWaysTrue()",,aArrGet[3],,9999,,,,oFolder:aDialogs[2],aArrGet[1],aArrGet[2])
		aObj800[__POS_ST1__]:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT
		aObj800[__POS_ST1__]:oBrowse:Refresh()

	If Len(aSMenu) > 0
		NGPOPUP(aSMenu,@oMenu,oPanel)
		oPanel:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oPanel)}
	EndIf

Activate MsDialog oDlg800 On Init (EnchoiceBar(oDlg800,{|| If(fTudoOk(),(lOk:=.T.,oDlg800:End()),lOk:=.F.)},{|| lOk:=.F.,oDlg800:End()},,aButtons)) Centered

If lOk .And. nOpcx != 2
	fGrava(nOpcx)
EndIf

//Verifica se cancelou a tela e se está na inclusão para "reutilizar" o código quando utilizando GETSXENUM().
If nOpcx == 3
	If lOk
		ConfirmSX8()
	Else
		RollBackSX8()
	EndIf
EndIf

If nOpcx != 3
	dbSelectArea("TP4")
	dbGoTo(nRecno)
EndIf

Return lOk
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ricardo Dal Ponte     ³ Data ³29/11/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³	  1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()

Local aRotina := { 	{ STR0006	, "AxPesqui"  , 0 , 1},; //"Pesquisar"
                    { STR0007	, "MNT800Alt" , 0 , 2},; //"Visualizar"
                    { STR0008	, "MNT800Alt" , 0 , 3},; //"Incluir"
                    { STR0009	, "MNT800Alt" , 0 , 4, 0},; //"Alterar"
                    { STR0010	, "MNT800Alt" , 0 , 5, 3}} //"Excluir"

Return aRotina

//----------------------------------------------------------------------------------
/*/{Protheus.doc} MNA800Rep
Função para replicar os ciclos ja cadastrados.
@type function

@author Rafael Diogo Richter
@since 25/06/2007

@sample MNA800Rep()

@param
@return .T.
/*/
//----------------------------------------------------------------------------------
Function MNA800Rep()

	Local aCols       := aObj800[__POS_TP6__]:aCols
	Local aHeader     := aObj800[__POS_TP6__]:aHeader
	Local oDlgRep     := Nil
	Local oPanel      := Nil
	Local oGetDt      := Nil
	Local oGetQtd     := Nil
	Local nGet        := 0
	Local i           := 0
	Local x           := 0
	Local nOpca       := 0
	Local nDiasIni    := 0
	Local nCiclos     := 0
	Local nQtdDias    := 0
	Local dGet        := Date()
	Local dDataIni

	Private nCal      := GDFIELDPOS('TP6_CALEND',aHeader)
	Private nDesc     := GDFIELDPOS('TP6_DESCAL',aHeader)
	Private nDTI      := GDFIELDPOS('TP6_DTINI',aHeader)
	Private nDTF      := GDFIELDPOS('TP6_DTFIM',aHeader)

	If Len(aCols) < 2
		MsgStop(STR0014,STR0003) //"É necessário ter dois ou mais turnos cadastrados para replicar."#"Atenção"
		Return .F.
	EndIf

	DEFINE DIALOG oDlgRep FROM 000,000 TO 140,500 TITLE STR0012 Pixel //"Replicar Ciclos"

	oPanel := TPanel():New(0,0,,oDlgRep,,,,,,100,100,.F.,.F.)
	oPanel:Align := CONTROL_ALIGN_ALLCLIENT

	@ 0.6,0.4 SAY OemToAnsi(STR0015) Of oPanel//"Qtde Ciclos:"
	@ 0.4,8.0 MSGET oGetQtd VAR nGET PICTURE "@E 999,999" SIZE 20,10 Of oPanel
	oGetQtd:bHelp := {|| ShowHelpCpo(STR0015, {STR0017},2,{""},2)}//"Qtde Ciclos:" //"Informar a quantidade de ciclos.De acordo com a quantidade;

	@ 1.8,0.4 SAY OemToAnsi(STR0016) Of oPanel//"Dt. Início Próximo Ciclo:"
	@ 1.6,8.0 MSGET oGetDt VAR dGET PICTURE "99/99/9999" SIZE 45,10 Of oPanel Valid MNT800DTI(nGET,dGET) HASBUTTON

	Activate MsDialog oDlgRep ON INIT EnchoiceBar(oDlgRep,{||nopca:=1,If(!MNT800DTI(nGET,dGET),nopca:=0,oDlgRep:End())},{||oDlgRep:End()}) Centered

	If nOpca == 1

		nCiclos := Len(aCols)

		For i := 1 To nGet

			If nCiclos >= i
				x := i
				If x == 1
					dDataIni := dGet
				Else
					nDiasIni := aCols[x][nDTI]-aCols[x-1][nDTF]
					dDataIni := aCols[Len(aCols)][nDTF]+nDiasIni
				EndIf
			Else
				x := i-nCiclos

				If x == 1
					nDiasIni := aCols[nCiclos+1][nDTI]-aCols[nCiclos][nDTF]
					dDataIni := aCols[Len(aCols)][nDTF]+nDiasIni
				Else
					nDiasIni := aCols[x][nDTI]-aCols[x-1][nDTF]
					dDataIni := aCols[Len(aCols)][nDTF]+nDiasIni
				EndIf
			EndIf
			nQtdDias := aCols[x][nDTF] - aCols[x][nDTI]
			aAdd(aCols,fAddCols(aHeader,aCols[x][nCal],aCols[x][nDesc],dDataIni,dDataIni+nQtdDias))
		Next i
		aObj800[__POS_TP6__]:aCols := aCols
		aObj800[__POS_TP6__]:Refresh()
	EndIf

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MNT800DTI	³ Autor ³ Evaldo Cevinscki Jr.  ³ Data ³13/10/2009³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Checa data inicio do ciclo para nao permitir sobreposicao   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SigaMNT                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MNT800DTI(nGet,dGET)
Local aCols   := aObj800[__POS_TP6__]:aCols
Local aHeader := aObj800[__POS_TP6__]:aHeader
Local i,x,dDataFim,nCiclos := Len(aCols)
Local aSVCols := aClone(aCols)

For i := 1 To nGet

	If nCiclos >= i
		x := i
		If x == 1
			dDataIni := dGet
		Else
			nDiasIni := aSVCols[x][nDTI]-aSVCols[x-1][nDTF]
			dDataIni := aSVCols[Len(aSVCols)][nDTF]+nDiasIni
		EndIf
	Else
		x := i-nCiclos

		If x == 1
			nDiasIni := aSVCols[nCiclos+1][nDTI]-aSVCols[nCiclos][nDTF]
			dDataIni := aSVCols[Len(aSVCols)][nDTF]+nDiasIni
		Else
			nDiasIni := aSVCols[x][nDTI]-aSVCols[x-1][nDTF]
			dDataIni := aSVCols[Len(aSVCols)][nDTF]+nDiasIni
		EndIf
	EndIf
	nQtdDias := aSVCols[x][nDTF] - aSVCols[x][nDTI]
	dDataFim := dDataIni+nQtdDias
	aAdd(aSVCols,fAddCols(aHeader, aSVCols[x][nCal], aSVCols[x][nDesc], dDataIni, NGSOMAANO(dDataIni,1)-1))

	//Valida o intervalo de data informado
	dData1 := dDataIni
	dData2 := dDataFim
	For x:=1 to Len(aCols)
		If dData1 >= aCols[x][nDTI] .And. dData1 <= aCols[x][nDTF] .And. x <> i .And. !aCols[x][Len(aCols[x])]
			MsgStop(STR0005,STR0003) //"O intervalo de data informado já está sendo utilizado em outro registro."###"Atenção!"
		   Return .F.
		EndIf
		cCal  := aCols[x][nCal]

		nPos := aScan(aCols,{ |x| AllTrim(x[nCal])+DtoS(x[nDTI]) == cCal+DtoS(dData1)})
		nPos2:= aScan(aCols,{ |x| AllTrim(x[nCal])+DtoS(x[nDTF]) == cCal+DtoS(dData1)})
		If (dData2 >= aCols[x][nDTI] .And. dData2 <= aCols[x][nDTF] .And. x <> i .And. !aCols[x][Len(aCols[x])]) .Or. (nPos > 0 .Or. nPos2 > 0)
			MsgStop(STR0005,STR0003) //"O intervalo de data informado já está sendo utilizado em outro registro."###"Atenção!"
		   Return .F.
		EndIf
	Next x

Next i

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} fAddCols
Adiciona linha no aCols de acordo com aHeader

@author Roger Rodrigues
@since 06/11/2012
@version MP10/MP11
@return .T.
/*/
//---------------------------------------------------------------------
Static Function fAddCols(aHeader, cCalend, cDesCalend, dDataIni, dDataFim)
Local aLine := {}

aLine := BlankGetD(aHeader)[1]

aLine[nCal] := cCalend
aLine[nDesc]:= cDesCalend
aLine[nDTI] := dDataIni
aLine[nDTF] := dDataFim

Return aLine
//---------------------------------------------------------------------
/*/{Protheus.doc} fRetArr
Retorna conteudo do aHeader e aCols das getDados

@author Roger Rodrigues
@since 05/11/2012
@version MP10/MP11
@return .T.
/*/
//---------------------------------------------------------------------
Static Function fRetArr(nOpcx, nOpcao)
Local aHeader 	:= {}
Local aCols 	:= {}
Local aAlter 	:= {}
Local cF3 		:= "ST1"

If nOpcao == __POS_TP6__
	FillGetDados( nOpcx,"TP6",1,M->TP4_CODIGO,{||},{||.T.},{"TP6_EQUIPE"},,,,{|| NGMontaAcols("TP6",M->TP4_CODIGO,;
																"TP6_FILIAL == xFilial('TP6') .And. TP6_EQUIPE == M->TP4_CODIGO") },,aHeader,aCols)
ElseIf nOpcao == __POS_ST1__
	dbSelectArea("SXB")
	dbSetOrder(1)
	If dbSeek("ST1EQP")
		cF3 := "ST1EQP"
	EndIf

	aAdd(aHeader,{RetTitle("T1_CODFUNC"), "T1_CODFUNC", Posicione("SX3",2,"T1_CODFUNC","X3_PICTURE"),;
		Posicione("SX3",2,"T1_CODFUNC","X3_TAMANHO"),Posicione("SX3",2,"T1_CODFUNC","X3_DECIMAL"),"MNT800VAL()",Posicione("SX3",2,"T1_CODFUNC","X3_USADO"),;
		Posicione("SX3",2,"T1_CODFUNC","X3_TIPO"), cF3, Posicione("SX3",2,"T1_CODFUNC","X3_CONTEXT"),;
		Posicione("SX3",2,"T1_CODFUNC","X3_CBOX"),""})

	aAdd(aHeader,{RetTitle("T1_NOME"),"T1_NOME",Posicione("SX3",2,"T1_NOME","X3_PICTURE"),;
	Posicione("SX3",2,"T1_NOME","X3_TAMANHO"), Posicione("SX3",2,"T1_NOME","X3_DECIMAL"),"", Posicione("SX3",2,"T1_NOME","X3_USADO"),;
	Posicione("SX3",2,"T1_NOME","X3_TIPO"),"","V",Posicione("SX3",2,"T1_NOME","X3_CBOX"),""})

	aAdd(aHeader,{"Alias WT","ST1_ALI_WT","",3,0,"","€€€€€€€€€€€€€€€","C","ST1","V"})

	aAdd(aHeader,{"Recno WT","ST1_REC_WT","",10,0,"","€€€€€€€€€€€€€€€","N","ST1","V"})

	aAlter := {"T1_CODFUNC"}

	If nOpcx != 3
		dbSelectArea("ST1")
		dbSetOrder(1)
		dbSeek(xFilial("ST1"))
		While !EoF() .And. xFilial("ST1") == ST1->T1_FILIAL
			If ST1->T1_EQUIPE == M->TP4_CODIGO
				aAdd(aCols, {ST1->T1_CODFUNC, ST1->T1_NOME, "ST1", ST1->(Recno()), .F.})
			EndIf
			dbSelectArea("ST1")
			dbSkip()
		End
	EndIf
EndIf

If Len(aCols) == 0
	aCols := BlankGetD(aHeader)
EndIf

Return {aHeader,aCols,aAlter}
//---------------------------------------------------------------------
/*/{Protheus.doc} fTudoOk
Realiza a validacao das informacoes

@author Roger Rodrigues
@since 05/11/2012
@version MP10/MP11
@return .T.
/*/
//---------------------------------------------------------------------
Static Function fTudoOk()

If Inclui .Or. Altera
	If !Obrigatorio(aGets,aTela)
		Return .F.
	EndIf
	If !MNT800Ln(__POS_TP6__,.T.)
		Return .F.
	EndIf
	If !MNT800Ln(__POS_ST1__,.T.)
		Return .F.
	EndIf
EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} fGrava
Realiza a gravacao das informacoes

@author Roger Rodrigues
@since 05/11/2012
@version MP10/MP11
@return .T.
/*/
//---------------------------------------------------------------------
Static Function fGrava(nOpcx)
	Local i			:= 0
	Local j			:= 0
	Local k			:= 0
	Local dDataIni
	Local nPosDtI 	:= 0
	Local nPosCod 	:= 0
	Local nPos		:= 0
	Local aCols 	:= {}
	Local aHeader 	:= {}

	//Verifica sempre a primeira posição do aCols
	If !Empty(aObj800[__POS_ST1__]:aCols[1][1]) .And. nOpcx == 5
		MsgAlert(STR0023, STR0020)
	Else
		//----------------------
		//Grava parte superior
		//TP4
		//----------------------
		dbSelectArea("TP4")
		dbSetOrder(1)
		If dbSeek(xFilial("TP4")+M->TP4_CODIGO)
			RecLock("TP4",.F.)
		Else
			RecLock("TP4",.T.)
		EndIf
		If Inclui .Or. Altera
			For i:=1 to FCount()
				If "_FILIAL" $ Upper(FieldName(i))
					FieldPut(i, xFilial("TP4"))
				Else
					FieldPut(i, &("M->"+FieldName(i)))
				EndIf
			Next i
		Else
			dbDelete()
		EndIf
		MsUnlock("TP4")

		//----------------------
		//Grava calendarios
		//TP6
		//----------------------
		//Exclui itens da getdados
		If !Inclui
			dbSelectArea("TP6")
			dbSetOrder(1)
			dbSeek(xFilial("TP6")+M->TP4_CODIGO)
			While !EoF() .And. xFilial("TP6")+M->TP4_CODIGO == TP6->(TP6_FILIAL+TP6_EQUIPE)
				RecLock("TP6",.F.)
				dbDelete()
				MsUnlock("TP6")
				dbSelectArea("TP6")
				dbSkip()
			End
		EndIf

		aCols   := aObj800[__POS_TP6__]:aCols
		aHeader := aObj800[__POS_TP6__]:aHeader

		nPosDtI := GDFIELDPOS("TP6_DTINI",aHeader)

		If Inclui .Or. Altera
			aSort(aCols,,,{|x,y| x[Len(aHeader)+1] .And. !y[Len(aHeader)+1]})
			For j:=1 to Len(aCols)
				dDataIni   := aCols[j][nPosDtI]
				If !aCols[j][Len(aHeader)+1] .And. !Empty(dDataIni)
					dbSelectArea("TP6")
					dbSetOrder(1)
					If dbSeek(xFilial("TP6")+M->TP4_CODIGO+DTOS(dDataIni))
						RecLock("TP6",.F.)
					Else
						RecLock("TP6",.T.)
					EndIf
					For k:=1 to FCount()
						If "_FILIAL" $ Upper(FieldName(k))
							FieldPut(k, xFilial("TP6"))
						ElseIf "_EQUIPE" $ Upper(FieldName(k))
							FieldPut(k, M->TP4_CODIGO)
						ElseIf (nPos := GDFIELDPOS(FieldName(k), aHeader)) > 0
							FieldPut(k, aCols[j][nPos])
						EndIf
					Next k
					MsUnlock("TP6")
				ElseIf !Empty(dDataIni)
					dbSelectArea("TP6")
					dbSetOrder(1)
					If dbSeek(xFilial("TP6")+M->TP4_CODIGO+DTOS(dDataIni))
						RecLock("TP6",.F.)
						dbDelete()
						MsUnlock("TP6")
					EndIf
				EndIf
			Next j
		EndIf

		//----------------------
		//Grava funcionarios
		//ST1
		//----------------------
		aCols   := aObj800[__POS_ST1__]:aCols
		aHeader := aObj800[__POS_ST1__]:aHeader

		nPosCod := GDFIELDPOS("T1_CODFUNC",aHeader)

		aSort(aCols,,,{|x,y| x[Len(aHeader)+1] .And. !y[Len(aHeader)+1]})
		For j:=1 to Len(aCols)
			If (Inclui .Or. Altera) .And. !aCols[j][Len(aHeader)+1] .And. !Empty(aCols[j][nPosCod])
				dbSelectArea("ST1")
				dbSetOrder(1)
				If dbSeek(xFilial("ST1")+aCols[j][nPosCod])
					RecLock("ST1",.F.)
					ST1->T1_EQUIPE := M->TP4_CODIGO
					MsUnlock("ST1")
				EndIf
			ElseIf !Empty(aCols[j][nPosCod])
				dbSelectArea("ST1")
				dbSetOrder(1)
				If dbSeek(xFilial("ST1")+aCols[j][nPosCod])
					RecLock("ST1",.F.)
					ST1->T1_EQUIPE := ""
					MsUnlock("ST1")
				EndIf
			EndIf
		Next j
	EndIf

Return .T.
//---------------------------------------------------------------------
/*/{Protheus.doc} MNT800VAL
Realiza validacao dos campos da tela

@author Roger Rodrigues
@since 07/11/2012
@version MP10/MP11
@return .T.
/*/
//---------------------------------------------------------------------
Function MNT800VAL(cReadVar)
Local lRet := .T.
Default cReadVar := ReadVar()

If cReadVar == "M->T1_CODFUNC"
	lRet := ExistCpo("ST1",M->T1_CODFUNC)
	If lRet
		dbSelectArea("ST1")
		dbSetOrder(1)
		dbSeek(xFilial("ST1")+M->T1_CODFUNC)
		If !Empty(ST1->T1_EQUIPE) .And. ST1->T1_EQUIPE != M->TP4_CODIGO
			ShowHelpDlg(STR0020,{STR0021},1,{STR0022}) //"Atenção" #  "Este funcionário já está cadastrado para outra equipe." # "Selecione outro funcionário."
			lRet := .F.
		Else
			aObj800[__POS_ST1__]:aCols[aObj800[__POS_ST1__]:nAt][2] := ST1->T1_NOME
		EndIf
	EndIf
EndIf

Return lRet