#Include "Sgaa130.ch"
#Include "Protheus.ch"

//-------------------------------------------------------------------
/*/{Protheus.doc} SGAA130
Programa para cadastrar atividade industrial da empresa

@author  Thiago Olis Machado
@since   22/11/2004

@return  Lógico, Sempre .T.
/*/
//-------------------------------------------------------------------
Function SGAA130()

	// Armazena variaveis p/ devolucao (NGRIGHTCLICK)
	Local aNGBEGINPRM := NGBEGINPRM( )

	Private aRotina := MenuDef()

	Private cCadastro := OemtoAnsi(STR0006) //"Atividade Industrial"
	Private aChkDel := {}, bNgGrava, aChoice := {}, aVarNao := {}

	// Endereca a funcao de BROWSE
	dbSelectArea("TAR")
	dbSetOrder(1)
	mBrowse( 6, 1,22,75,"TAR")

	// Devolve variaveis armazenadas (NGRIGHTCLICK)
	NGRETURNPRM(aNGBEGINPRM)

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} SG130CA
Funcao para montar uma tela para cadastro.

@author  Thiago Olis Machado
@since   22/11/2004

@param   cAlias, Caractere, Alias sob qual sera realizada a operacao
@param   nReg, Numerico, Registro sendo manipulado
@param   nOpcX, Numerico, Operacao sendo realizada

@return  Numerico, Opcao escolhida na Dialog
/*/
//-------------------------------------------------------------------
Function Sg130Ca( cAlias, nReg, nOpcX )

	Local bCampo, ny
	Local i, x
	Local lDEL := .T., OldInd, cError, cKEY, lFIELD

	Local oFont := TFont():New( "Times New Roman", 12, 20, , .T., , .F., , .F., .F. )
	Local oFolder
	Local aTFolder := {STR0027, STR0026}
	Local lAccsMat := IIf( FindFunction( "MDTVldFldAcc" ), MDTVldFldAcc( "QAA_MAT" ), !( Str(nOpcX,1) $ "2/5" ) )

	Local aSize := MsAdvSize( .T., .F., 430 )
	Local aObjects := {}

	Local cEndEnt := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_ENDENT")
	Local cCepEnt := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_CEPENT")
	Local cCidEnt := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_CIDENT")
	Local cBaiEnt := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_BAIRENT")
	Local cTelEnt := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_TEL")
	Local cCGCEnt := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_CGC")
	Local cEndCob := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_ENDCOB")
	Local cCepCob := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_CEPCOB")
	Local cCidCob := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_CIDCOB")
	Local cBaiCob := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_BAIRCOB")
	Local cTelCob := Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_TEL")

	Private oDlg, oGet, oMenu
	Private aAC 	:= {STR0007,STR0008},aCRA:= {STR0008,STR0009,STR0007}   //"Abandona"###"Confirma"###"Confirma"###"Redigita"###"Abandona"
	Private cMAT 	:= IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( cMAT, "QAA_MAT" ), Space(Len(TAR->TAR_CODFUN)) )
	Private cNOME	:= IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( cNOME, "QAA_NOME" ), "" )
	Private cDESFUN	:= ""
	Private cEMAIL	:= IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( cEMAIL, "QAA_EMAIL" ), "" )
	Private cTEL	:= IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( cTEL, "QAA_FONE" ), "" )
	Private cFAX	:= IIf( FindFunction( "MDTHideCpo" ), MDTHideCpo( cFAX, "QAA_FAX" ), "" )
	Private aNao	:= {}
	Private nAltBar1 := 0, nAltBar2 := 0

	// Monta a entrada de dados do arquivo
	Private aTELA[0][0],aGETS[0],aHeader[0],Continua,nUsado:=0
	bCampo := {|nCPO| Field(nCPO) }

	aAdd(aObjects,{050,050,.T.,.T.})
	aAdd(aObjects,{100,100,.T.,.T.})
	aInfo   := {aSize[1],aSize[2],aSize[3],aSize[4],0,0}
	aPosObj := MsObjSize(aInfo, aObjects,.T.)
	
	If TYPE("aCHKDEL") != "A"
		aCHKDEL := {}
	EndIf

	lFIELD := (TYPE("aCHOICE") == "A")

	If lFIELD
		lFIELD := !empty(aCHOICE)
	EndIf

	dbSelectArea(cALIAS)
	dbSetOrder(1)
	For i := 1 To fCount()
		M->&(EVAL(bCampo,i)) := &(EVAL(bCampo,i))

		If nOPCX == 3 //INCLUIR

			If ValType(M->&(EVAL(bCampo,i))) == "C"
				M->&(EVAL(bCampo,i)) := SPACE(LEN(M->&(EVAL(bCampo,i))))
			ElseIf ValType(M->&(EVAL(bCampo,i))) == "N"
				M->&(EVAL(bCampo,i)) := 0
			ElseIf ValType(M->&(EVAL(bCampo,i))) == "D"
				M->&(EVAL(bCampo,i)) := cTod("  /  /  ")
			ElseIf ValType(M->&(EVAL(bCampo,i))) == "L"
				M->&(EVAL(bCampo,i)) := .F.
			EndIf

		EndIf

	Next i

	If nOPCX == 3
		RegToMemory( cALIAS, .T. )
	EndIf

	nOpca := 0
	dbSelectArea("SM0")
	dbSelectArea("QAA")

	If nOpcx != 3
		Sg130CarMat()
	EndIf

	Define MsDialog oDlg Title cCadastro From aSize[7],0 To aSize[6],aSize[5] Of oMAINWND Pixel

		oPanel := TPanel():New(0,0,,oDlg,,,,,,0,0,.F.,.F.)
		oPanel:Align := CONTROL_ALIGN_ALLCLIENT
		oFolder := TFolder():New( 0, 0, aTFolder, , oPanel, , , , .F., .F., aSize[5], aSize[6] )

		oPanel1 := TPanel():New(0,0,,oFolder:aDialogs[1],,,,,,0,0,.F.,.F.)
		oPanel1:Align := CONTROL_ALIGN_ALLCLIENT

		oPanel2 := TPanel():New(0,0,,oFolder:aDialogs[2],,,,,,0,0,.F.,.F.)
		oPanel2:Align := CONTROL_ALIGN_ALLCLIENT

		@ 7.5,008 Say OemToAnsi(STR0010) Size 97,7 Of oPanel1 Pixel  //"Razão Social da Industria"
		@ 6,076 Say OemToAnsi(FWFilRazSocial()) Size 150,50 Of oPanel1 Pixel Font oFont Color CLR_HBLUE

		// Endereco da Atividade Industrial

		@ 20,08 To 72,358 Label STR0011 of oPanel1 Pixel  //"Endereco da Unidade Industrial"

		@ 31,10 Say OemToAnsi(STR0012) Size 67,7 Of oPanel1 Pixel  //"Logradouro/nº"
		@ 29,49 MsGet cEndEnt Size 100,08 Of oPanel1 Pixel When .F.

		@ 41,10 Say OemToAnsi(STR0013) Size 67,7 Of oPanel1 Pixel  //"Bairro/Distrito"
		@ 39,49 MsGet cBaiEnt Size 100,08 Of oPanel1 Pixel When .F.
		@ 41,220 Say OemToAnsi(STR0014) Size 37,7 Of oPanel1 Pixel  //"CEP"
		@ 39,250 MsGet cCepEnt Size 40,08 Of oPanel1 Pixel When .F.

		@ 51,10 Say OemToAnsi(STR0015) Size 47,7 Of oPanel1 Pixel  //"Municipio"
		@ 49,49 MsGet cCidEnt Size 100,08 Of oPanel1 Pixel When .F.
		@ 51,220 Say OemToAnsi(STR0016) Size 67,7 Of oPanel1 Pixel  //"Tel. Contato"
		@ 49,250 MsGet cTelEnt Size 060,08 Of oPanel1 Pixel When .F.

		@ 61,10 Say OemToAnsi(STR0017) Size 67,7 Of oPanel1 Pixel  //"CGC/TE"
		@ 59,49 MsGet cCGCEnt Size 060,08 Of oPanel1 Pixel When .F.
		@ 61,220 Say OemToAnsi(STR0018) Size 67,7 Of oPanel1 Pixel  //"CNPJ"
		@ 59,250 MsGet cCGCEnt Size 060,08 Of 	oPanel1 Pixel When .F.

		// Endereco para correspondencia

		@ 80,008 To 122,358 Label STR0019 of oPanel1 Pixel //"Endereco para Correspondencia"

		@ 91,010 Say OemToAnsi(STR0012) Size 67,7 Of oPanel1 Pixel  //"Logradouro/nº"
		@ 89,049 MsGet cEndCob Size 100,08 Of oPanel1 Pixel When .F.

		@ 101,010 Say OemToAnsi(STR0013) Size 67,7 Of oPanel1 Pixel  //"Bairro/Distrito"
		@ 99,049 MsGet cBaiCob Size 100,08 Of oPanel1 Pixel When .F.
		@ 101,220 Say OemToAnsi(STR0014) Size 37,7 Of oPanel1 Pixel  //"CEP"
		@ 99,250 MsGet cCepCob Size 40,08 Of oPanel1 Pixel When .F.

		@ 111,010 Say OemToAnsi(STR0015) Size 47,7 Of oPanel1 Pixel  //"Municipio"
		@ 109,049 MsGet cCidCob Size 100,08 Of oPanel1 Pixel When .F.
		@ 111,220 Say OemToAnsi(STR0016) Size 67,7 Of oPanel1 Pixel  //"Tel. Contato"
		@ 109,250 MsGet cTelCob Size 060,08 Of oPanel1 Pixel When .F.

		// Contato Tecnico

		@ 130,008 To 172,358 Label STR0020 of oPanel1 Pixel //"Contato Tecnico"

		@ 141,010 Say OemToAnsi(STR0021) Size 67,7 Of oPanel1 Pixel Color CLR_HBLUE  //"Matricula"
		@ 139,049 MsGet oMAT Var cMAT Size 080,07 Of oPanel1 Pixel Picture "@!" F3 "QAA";
														Valid If(!Empty(cMAT),ExistCpo("QAA",cMat) .and. Sg130Contato(cMat),.t.) HasButton When lAccsMat
		oMAT:bHelp := {|| ShowHelpCpo(STR0021,{STR0028},2,{},2)} //"Responsável"###"Informe a matricula do responsável."
		@ 141,220 Say OemToAnsi(STR0022) Size 67,7 Of oPanel1 Pixel  //"Nome"
		@ 139,250 MsGet cNOME Size 100,07 Of oPanel1 Pixel When .f.

		@ 151,010 Say OemToAnsi(STR0023) Size 37,7 Of oPanel1 Pixel  //"Cargo"
		@ 149,049 MsGet cDESFUN Size 100,08 Of oPanel1 Pixel When .F.
		@ 151,220 Say OemToAnsi(STR0024) Size 37,7 Of oPanel1 Pixel  //"e-mail"
		@ 149,250 MsGet cEMAIL Size 100,08 Of oPanel1 Pixel When .F.

		@ 161,010 Say OemToAnsi(STR0016) Size 47,7 Of oPanel1 Pixel  //"Tel. Contato"
		@ 159,049 MsGet cTEL Size 070,08 Of oPanel1 Pixel When .F.
		@ 161,220 Say OemToAnsi(STR0025) Size 37,7 Of oPanel1 Pixel  //"Fax"
		@ 159,250 MsGet cFAX Size 070,08 Of oPanel1 Pixel When .F.

		aChoice  := NGCAMPNSX3("TAR",aNao)

		dbselectarea("TAR")
		RegToMemory("TAR",(nOpcX == 3))
		oEnc01:= MsMGet():New("TAR",,nOpcX,,,,aChoice,aPosObj[1],,3,,,,oPanel2,,,,)
		oEnc01:oBox:Align := CONTROL_ALIGN_ALLCLIENT
		NGPOPUP(aSMenu,@oMenu)
		oPanel2:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oPanel2)}
		oEnc01:oBox:bRClicked:= { |o,x,y| oMenu:Activate(x,y,oPanel2)}
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpca := 1,If(!obrigatorio(aGets,aTela) .Or. !SGA130Grv(),nOpca :=0,oDlg:End())},{||oDlg:End()}) Centered

	// Apos confirmacao com opcao incluir ou alterar
	If nOPCA == 1 .and. (nOPCx == 3 .or. nOPCx == 4)
		dbSelectArea(cALIAS)
		RecLock(cAlias,Inclui)

		For ny := 1 To FCOUNT()
			nx := "m->" + FieldName(ny)

			If "_FILIAL"$Upper(nx)
				&nx. := xFilial(cALIAS)
			EndIf

			FieldPut(ny, &nx.)
			TAR->TAR_CODFUN := cMat
		Next ny

		MsUnlock(cAlias)
	EndIf

	If nOPCA == 1 .And. nOPCx == 5
		// Verifica a Integridade Referencial
		lDEL := .T.

		For i := 1 To Len(aCHKDEL)
			dbSelectArea(aCHKDEL[i][2])
			OldInd := INDEXORD()
			dbSetOrder(aCHKDEL[i][3])
			cKEY := aCHKDEL[i][1]
			lDEL := !( DbSeek(xFilial() + &cKEY.) )
			dbSetOrder(OldInd)

			If !lDEL
				SX2->(DbSeek(aCHKDEL[i][2]))
				cError := AllTrim(X2Nome()) + " (" + aCHKDEL[i][2] + ")"
				Help(" ",1,"MA10SC",,cError,5,1)
				Exit
			EndIf

		Next

		If lDEL
			dbSelectArea(cALIAS)
			RecLock(cAlias,.F.)
			dbDelete()
			MsUnlock(cAlias)
			EvalTrigger() // Processa Gatilhos
		EndIf

	EndIf

	lRefresh := .T.

Return nOPCa

//-------------------------------------------------------------------
/*/{Protheus.doc} SG130CONTATO
Busca informacoes referentes ao Contato.

@author  Thiago Olis Machado
@since   22/11/2004

@sample  Sg130Contato(TAR->TAR_CODFUN)
@param   cMat, Caractere, Matricula usada para recuperar informacoes da tabela QAA
/*/
//-------------------------------------------------------------------
Function Sg130Contato(cMat)

	If QAA->(DbSeek(xFilial("QAA")+cMat))
		cNOME   := QAA->QAA_NOME
		cEMAIL  := QAA->QAA_EMAIL
		cTEL    := QAA->QAA_FONE
		cFAX    := QAA->QAA_FAX

		If QAC->(DbSeek(xFilial("QAC")+QAA->QAA_CODFUN))
			cDESFUN := QAC->QAC_DESC
		EndIf

	EndIf

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} SG130CARMAT
Carrega o Usuario Responsavel

@author  Thiago Olis Machado
@since   22/11/2004
/*/
//-------------------------------------------------------------------
Function Sg130CarMat()
	cMat := TAR->TAR_CODFUN
	Sg130Contato(cMat)
Return

//---------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Utilizacao de Menu Funcional.

@return aRotina  - 	Array com as opções de menu.
					Parametros do array a Rotina:
					1. Nome a aparecer no cabecalho
					2. Nome da Rotina associada
					3. Reservado
					4. Tipo de Transao a ser efetuada:
						1 - Pesquisa e Posiciona em um Banco de Dados
						2 - Simplesmente Mostra os Campos
						3 - Inclui registros no Bancos de Dados
						4 - Altera o registro corrente
						5 - Remove o registro corrente do Banco de Dados
					5. Nivel de acesso
					6. Habilita Menu Funcional

@sample MenuDef()

@author Rafael Diogo Richter
@since 29/11/2006
/*/
//---------------------------------------------------------------------
Static Function MenuDef()
	Local aRotina :=	{ { STR0001 , "AxPesqui"  , 0 , 1},;   //"Pesquisar"
						  { STR0002 , "Sg130Ca"   , 0 , 2},;   //"Visualizar"
						  { STR0003 , "Sg130Ca"   , 0 , 3},;   //"Incluir"
						  { STR0004 , "Sg130Ca"   , 0 , 4},;   //"Alterar"
						  { STR0005 , "Sg130Ca"   , 0 , 5, 3}} //"Excluir"

Return aRotina

//-------------------------------------------------------------------
/*/{Protheus.doc} SGA130Grv
Funcao para validar a gravacao

@author  Thiago Olis Machado
@since   27/10/2008

@return  Logico, Sempre .T.
/*/
//-------------------------------------------------------------------
Function SGA130Grv()

	If Empty(M->TAR_CODATI)
		MsgStop("Campo Atividade não pode estar vazio.","Atenção!")
		Return .F.
	ElseIf Empty(cMat)
		MsgStop("Campo Matrícula não pode estar vazio.","Atenção!")
		Return .F.
	EndIf

Return .T.
