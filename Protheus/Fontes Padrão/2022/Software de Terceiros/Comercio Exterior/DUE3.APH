<% Local aNFsRemess 	:= {} %>
<% Local aNFsSAIDA 	:= {} %>
<% Local aItensNF := {} %>
<% Local aAux 		:= {} %>
<% Local aAttList := {} %>
<% Local aLpco 	:= {} %>
<% Local i 			:= 1 %>
<% Local j 			:= 1 %>
<% Local l 			:= 1 %>
<% Local npesoKg 	:= 0 %>
<% Local nContDue := 0 %>
<% Local nNfsRem 	:= 0 %>
<% Local nItNf 	:= 1 %>
<% Local lSemNota := .F. %>
<% Local lSai 		:= .F. %>
<% Local cDestaq 	:= "" %>
<% Local cChaveEK2:= "" %>
<% Local cChaveEK3:= "" %>
<% Local cChaveEK0:= (EK0->EK0_FILIAL + EK0->EK0_PROCES + EK0->EK0_NUMSEQ) %>
<% if !avflags("DU-E3.1") %>
	<% Private aValItem:= {} %>
	<% DU400SetVal(EEC->EEC_PREEMB, aValItem) %>
<% endif %>
<% EK1->(DbSetOrder(1) , MSSeek( cChaveEK0 )) %>
<% lSemNota := (EK1->EK1_TIPDUE == "2") %>
<?xml version="1.0" encoding="UTF-8"?>
<Declaration xsi:schemaLocation="urn:wco:datamodel:WCO:GoodsDeclaration:1 GoodsDeclaration_1p0_DUE.xsd" xmlns:ds="urn:wco:datamodel:WCO:GoodsDeclaration_DS:1" xmlns="urn:wco:datamodel:WCO:GoodsDeclaration:1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<% If lSemNota %>
		<DeclarationNoNF>
	<% EndIf %>
	<% If !lSemNota %>
		<DeclarationNFe>
	<% EndIf %>
	<% If !Empty(EK1->EK1_NRODUE) %>
		<ID><%= Alltrim(EK1->EK1_NRODUE) %></ID>
	<% EndIf %>
		<DeclarationOffice>
			<ID><%= Alltrim(EK1->EK1_URFDSP) %></ID>
				<% If EK1->EK1_EMFRRC == "281" %>
					<Warehouse>
						<ID><%= Alltrim(EK1->EK1_RECALF) %></ID>
						<TypeCode><%= Alltrim(EK1->EK1_EMFRRC) %></TypeCode>
					</Warehouse>
				<% ElseIf AvFlags("DU-E3.1") %>
					<Warehouse>
						<ID><%= AllTrim(EK1->EK1_RESPDE) %></ID>
						<TypeCode><%= Alltrim(EK1->EK1_EMFRRC) %></TypeCode>
						<LatitudeMeasure><%= AllTrim(Str(EK1->EK1_LATDES,, 6)) %></LatitudeMeasure>
						<LongitudeMeasure><%= AllTrim(Str(EK1->EK1_LONDES,, 6)) %></LongitudeMeasure>
						<Address>
							<Line><%= Alltrim(EK1->EK1_ENDDES) %></Line>
						</Address>
					</Warehouse>
				<% ElseIf EEC->(FieldPos("EEC_RESPDE") > 0 .And. FieldPos("EEC_LATDES") > 0 .And. FieldPos("EEC_LONDES") > 0 .And. FieldPos("EEC_ENDDES") > 0) %>
					<Warehouse>
						<ID><%= AllTrim(EEC->EEC_RESPDE) %></ID>
						<TypeCode><%= Alltrim(EEC->EEC_EMFRRC) %></TypeCode>
						<LatitudeMeasure><%= AllTrim(Str(EEC->EEC_LATDES,, 6)) %></LatitudeMeasure>
						<LongitudeMeasure><%= AllTrim(Str(EEC->EEC_LONDES,, 6)) %></LongitudeMeasure>
						<Address>
							<Line><%= Alltrim(EEC->EEC_ENDDES) %></Line>
						</Address>
					</Warehouse>
				<% EndIf %>
		</DeclarationOffice>
		<% If !Empty(EK1->EK1_FOREXP) %>
			 <AdditionalInformation>
			 		<StatementCode><%= Alltrim(EK1->EK1_FOREXP) %></StatementCode>
					 <% cObsFor := Alltrim(ConverteXML(EK1->EK1_OBSFOR)) %>
					 <% cObsFor := StrTran( cObsFor, "<" , "" ) %>
					 <% cObsFor := StrTran( cObsFor, ">" , "" ) %>
					<StatementDescription><%= cObsFor %></StatementDescription>
					<StatementTypeCode>CUS</StatementTypeCode>
			</AdditionalInformation>
		<% Endif %>
		<%  If !Empty(EK1->EK1_SITESP) %>
			 <AdditionalInformation>
			 		<StatementCode><%= Alltrim(EK1->EK1_SITESP) %></StatementCode>
			 		<% cObsSit := Alltrim(ConverteXML(EK1->EK1_OBSSIT)) %>
					<% cObsSit := StrTran( cObsSit, "<" , "" ) %>
					<% cObsSit := StrTran( cObsSit, ">" , "" ) %>
					<StatementDescription><%= cObsSit %></StatementDescription>
					<StatementTypeCode>AHZ</StatementTypeCode>
			</AdditionalInformation>
        <% EndIf %>
		<% If !Empty(EK1->EK1_ESPTRA) %>
			<AdditionalInformation>
				<StatementCode><%= Alltrim(EK1->EK1_ESPTRA) %></StatementCode>
				<% cObsTra := Alltrim(ConverteXML(EK1->EK1_OBSTRA)) %>
				<% cObsTra := StrTran( cObsTra, "<" , "" ) %>
				<% cObsTra := StrTran( cObsTra, ">" , "" ) %>
				<StatementDescription><%= cObsTra %></StatementDescription>
				<StatementTypeCode>TRA</StatementTypeCode>
			</AdditionalInformation>
		<% EndIf %>
		<% If !Empty(EK1->EK1_OBSPED) %>
			 <AdditionalInformation>
			 		<% cObsPed := Alltrim(ConverteXML(EK1->EK1_OBSPED)) %>
					<% cObsPed := StrTran( cObsPed, "<" , "" ) %>
					<% cObsPed := StrTran( cObsPed, ">" , "" ) %>
					<StatementDescription><%= cObsPed %></StatementDescription>
					<StatementTypeCode>AAI</StatementTypeCode>
			</AdditionalInformation>
		<% EndIf %>
		<% If AvFlags("DU-E3.1") %>
			<AdditionalInformation>
				<% cJusRet := AllTrim(ConverteXML(EK1->EK1_JUSRET)) %>
				<% cJusRet := StrTran(cJusRet, "<" , "" ) %>
				<% cJusRet := StrTran(cJusRet, ">" , "" ) %>
				<StatementDescription languageID=""><%= cJusRet %></StatementDescription>
				<StatementTypeCode>DEF</StatementTypeCode>
			</AdditionalInformation>
		<% ElseIf EEC->(FieldPos("EEC_JUSRET")) > 0 .And. !Empty(EEC->EEC_JUSRET) %>
			<AdditionalInformation>
				<% cJusRet := AllTrim(ConverteXML(EEC->EEC_JUSRET)) %>
				<% cJusRet := StrTran(cJusRet, "<" , "" ) %>
				<% cJusRet := StrTran(cJusRet, ">" , "" ) %>
				<StatementDescription languageID=""><%= cJusRet %></StatementDescription>
				<StatementTypeCode>DEF</StatementTypeCode>
			</AdditionalInformation>
		<% EndIf %>
		<CurrencyExchange>
			<CurrencyTypeCode><%= EK1->EK1_MOEDA %></CurrencyTypeCode>
		</CurrencyExchange>   
		<Declarant>
			<ID><%= Alltrim(EK1->EK1_CGC) %></ID>
			<% If AvFlags("DU-E3.1") .And. DU400HasJus(EK1->EK1_PROCES,EK1->EK1_NUMSEQ) %>
				<Contact>
					<Name><%= AllTrim(EK1->EK1_RESPON) %></Name>
					<Communication>
						<ID><%= alltrim(EK1->EK1_EMAIL) %></ID>
						<TypeCode>EM</TypeCode>
					</Communication>
					<Communication>
						<ID><%= AllTrim(EK1->EK1_FONE) %></ID>
						<TypeCode>TE</TypeCode>
					</Communication>
				</Contact>
			<% ElseIf DU400HasJus(EEC->EEC_PREEMB) %>
				<Contact>
					<Name><%= AllTrim(EEC->EEC_RESPON) %></Name>
					<Communication>
						<ID><%= AllTrim(Posicione("EE3", 1, xFilial("EE3")+"X"+EEC->(AvKey(EEC_FORN, "EE3_CONTAT")+AvKey(EEC_FOLOJA, "EE3_COMPL")), "EE3_EMAIL")) %></ID>
						<TypeCode>EM</TypeCode>
					</Communication>
					<Communication>
						<ID><%= AllTrim(Posicione("EE3", 1, xFilial("EE3")+"X"+EEC->(AvKey(EEC_FORN, "EE3_CONTAT")+AvKey(EEC_FOLOJA, "EE3_COMPL")), "EE3_FONE")) %></ID>
						<TypeCode>TE</TypeCode>
					</Communication>
				</Contact>
			<% EndIf %>
		</Declarant>
		<% If EK1->(FieldPos("EK1_RECEMB")) > 0 .And. EK1->(FieldPos("EK1_URFENT")) > 0 %>
			<ExitOffice>
				<ID><%= Alltrim( iif(!Empty(EK1->EK1_URFENT), EK1->EK1_URFENT, EK1->EK1_URFDSP) ) %></ID>
				<Warehouse>
					<ID><%= Alltrim( iif(!empty(EK1->EK1_RECEMB),EK1->EK1_RECEMB,EK1->EK1_RECALF) ) %></ID>
					<TypeCode><%= Alltrim(EK1->EK1_EMFRRC) %></TypeCode>
				</Warehouse>
			</ExitOffice>
		<% Else %>
			<ExitOffice>
				<ID><%= Alltrim(EK1->EK1_URFDSP) %></ID>
				<Warehouse>
					<ID><%= Alltrim(EK1->EK1_RECALF) %></ID>
					<TypeCode><%= Alltrim(EK1->EK1_EMFRRC) %></TypeCode>
				</Warehouse>
			</ExitOffice>
		<% EndIf %>
		<% If (lSemNota,EK2->( dbsetorder(3) , MSSeek( cChaveEK0 )),EK2->( dbsetorder(2) , MSSeek( cChaveEK0 ))) %>
		<% EK3->( dbsetorder(1) , MSSeek( cChaveEK0 ) ) %>
		<% cChaveEK3 := xFilial("EK3") + EK1->EK1_PROCES + EK1->EK1_NUMSEQ + AvKey("N","EK3_TIPOCA") %>
		<% While If(lSemNota, EK2->(!EOF()) .AND. EK2->( EK2_FILIAL + EK2_PROCES + EK2_NUMSEQ ) == cChaveEK0 , EK3->(!Eof()) .And. EK3->( EK3_FILIAL + EK3_PROCES + EK3_NUMSEQ + EK3_TIPOCA ) == cChaveEK3) %>
		 	<% aItensNF := If(lSemNota, {EK2->(Recno())}, DU400GetRg(EK3->EK3_NRNF,EK3->EK3_SERIE,EK3->EK3_PROCES,EK3->EK3_NUMSEQ)) %>
			<GoodsShipment>
			<% aNFsSAIDA := {} %>
			<% aNFsRemess := {} %>
			<% aNFRemSaida := {} %>
			<% aItRemSaida := {} %>
			<% For nItNf := 1 To Len(aItensNF) %>
				<% nContDue++ %>
				<% EK2->(dbGoTo(aItensNF[nItNf])) %>
				<% If lSemNota %>
					<Exporter>
						<% cFornde := Alltrim(ConverteXML(EK1->EK1_FORNDE)) %>
						<% cFornde := StrTran( cFornde, "<" , "" ) %>
						<% cFornde := StrTran( cFornde, ">" , "" ) %>
						<Name><%= cFornde %></Name>
						<ID><%= Alltrim(EK1->EK1_CGC) %></ID>
						<Address>
							<CountryCode><%= AllTrim(EK1->EK1_PAISDU) %></CountryCode>
							<CountrySubDivisionCode><%= "BR-" + EK1->EK1_FOREST %></CountrySubDivisionCode>
							<% cForEnd := AllTrim(ConverteXML(EK1->EK1_FOREND)) %>
							<% cForEnd := StrTran( cForEnd, "<" , "" ) %>
							<% cForEnd := StrTran( cForEnd, ">" , "" ) %>
							<Line><%= cForEnd %></Line>
						</Address>
					</Exporter>
				<% EndIf %>
					<GovernmentAgencyGoodsItem>
						<CustomsValueAmount><%=  StrZero( EK2->EK2_PRCINC, AVSX3("EK2_PRCINC",3), AVSX3("EK2_PRCINC",4) ) %></CustomsValueAmount>
						<SequenceNumeric><%= nContDue %></SequenceNumeric>
						<Destination>
							<CountryCode><%= DU100PAISE() %></CountryCode>
							<GoodsMeasure>
								<% if avflags("DU-E3.1") %>
									<TariffQuantity><%= strzero( EK2->EK2_QTDNCM, AVSX3("EK2_QTDNCM",3), 5 )  %></TariffQuantity>
								<% Else %>
									<TariffQuantity><%= StrZero( Du400GetVal(EK2->EK2_SEQEMB, "QUANTIDADE_NCM"), AVSX3("EK2_SLDINI",3), 5 ) %></TariffQuantity>
								<% endif %>
							</GoodsMeasure>
						</Destination>
						<% If AvFlags("DU-E3.1") %>
							<% If !Empty(EK2->EK2_JUSDUE) %> 
								<AdditionalInformation>
									<StatementDescription><%= Alltrim(EK2->EK2_JUSDUE) %></StatementDescription>
									<StatementTypeCode>AVD</StatementTypeCode>
								</AdditionalInformation>
							<% EndIf %>
						<% Else %>
						    <% PosEE9ItNF(xFilial("EE9")+EK2->EK2_PROCESS+EK2->EK2_PEDIDO+EK2->EK2_SEQUEN, EK2->EK2_NRNF, EK2->EK2_SERIE) %>
						    <% If EE9->(FieldPos("EE9_JUSDUE")) > 0 .And. !Empty(EE9->EE9_JUSDUE) %>
							   <AdditionalInformation>
								   <StatementDescription><%= Alltrim(EE9->EE9_JUSDUE) %></StatementDescription>
								   <StatementTypeCode>AVD</StatementTypeCode>
							   </AdditionalInformation>
                            <% EndIf %>
						<% EndIf %>
						<% If EK2->(FieldPos("EK2_LPCO")) > 0 .And. !Empty(EK2->EK2_LPCO) %>
							<% if at( "," , EK2->EK2_LPCO ) > 0 %>
								<% aLpco := StrTokArr( EK2->EK2_LPCO , "," ) %>
								<% for l := 1 to len(aLpco) %>
									<% if ! empty(aLpco[l]) %>
										<AdditionalDocument>
												<CategoryCode>LPCO</CategoryCode>
												<ID><%= AllTrim( aLpco[l] ) %></ID>
										</AdditionalDocument>
									<% endif %>
								<% next %>
							<% else %>
									<AdditionalDocument>
											<CategoryCode>LPCO</CategoryCode>
											<ID><%= AllTrim( EK2->EK2_LPCO ) %></ID>
									</AdditionalDocument>
							<% endif %>
						<% EndIf %>
						<% If AvFlags("DU-E3.1") %>
							<% If EK7->( dbsetorder(1), DbSeek( EK2->(EK2_FILIAL+EK2_PROCES+EK2_NUMSEQ+EK2_SEQEMB+EK2_FATSEQ) )) %>
								<% While EK7->(!Eof() .And. EK7_FILIAL+EK7_PREEMB+EK7_NUMSEQ+EK7_SEQEMB+EK7_SEQEK7 == EK2->(EK2_FILIAL+EK2_PROCES+EK2_NUMSEQ+EK2_SEQEMB+EK2_FATSEQ) ) %>
									<AdditionalDocument>
										<CategoryCode><%= DU400TpAC(EK7->EK7_TPAC) %></CategoryCode>
										<ID><%= Alltrim(EK7->EK7_ATOCON) %></ID>
										<DrawbackHsClassification><%= AllTrim(EK7->EK7_POSIPI) %></DrawbackHsClassification>
										<DrawbackRecipientId><%= AllTrim(EK7->EK7_CNPJ) %></DrawbackRecipientId>
										<% If EK7->EK7_VLSCOB > 0 %>
											<ValueWithoutExchangeCoverAmount><%= AllTrim(StrZero(EK7->EK7_VLSCOB, AVSX3("EK2_PRCTOT",3), 2 )) %></ValueWithoutExchangeCoverAmount>
										<% EndIf %>
										<% If (EK7->EK7_VALOR - EK7->EK7_VLSCOB) > 0%>
											<ValueWithExchangeCoverAmount><%= AllTrim(StrZero(EK7->EK7_VALOR - EK7->EK7_VLSCOB, AVSX3("EK2_PRCTOT",3), 2 )) %></ValueWithExchangeCoverAmount>
										<% EndIf %>
										<ItemID><%= AllTrim(EK7->EK7_SEQED3) %></ItemID>
										<QuantityQuantity><%= StrZero(EK7->EK7_QTD, AVSX3("EK7_QTD",3), 5) %></QuantityQuantity>
										<% If EK8->(FieldPos("EK8_CHVNFE")) > 0 .And. EK8->( dbsetorder(1) , dbSeek( EK7->(EK7_FILIAL+EK7_PREEMB+EK7_NUMSEQ+EK7_SEQEMB+EK7_SEQEK7+EK7_TIPO+EK7_CNPJ+EK7_POSIPI+EK7_ATOCON+EK7_SEQED3))) %>
											<% Do While EK8->(!EoF() .AND. EK8_FILIAL+EK8_PREEMB+EK8_NUMSEQ+EK8_SEQEMB+EK8_SEQEK8+EK8_TIPO+EK8_CNPJ+EK8_POSIPI+EK8_ATOCON+EK8_SEQED3 == EK7->(EK7_FILIAL+EK7_PREEMB+EK7_NUMSEQ+EK7_SEQEMB+EK7_SEQEK7+EK7_TIPO+EK7_CNPJ+EK7_POSIPI+EK7_ATOCON+EK7_SEQED3)) %>
												<Invoice>
													<ID><%= iif(EK8->(FieldPos("EK8_CHVNFE")) > 0, EK8->EK8_CHVNFE, "") %></ID>
													<IssueDateTime><%= EasyTimeStamp(EK8->EK8_DTNF) %></IssueDateTime>
													<TypeCode>388</TypeCode>
													<CustomsValueAmount><%= Str(EK8->EK8_VLNF, AvSX3("EK8_VLNF",3),AvSX3("EK8_VLNF",4)) %></CustomsValueAmount>
													<QuantityQuantity><%= StrZero(EK8->EK8_QTD, AvSx3("EK8_QTD", 3), 5) %></QuantityQuantity>
												</Invoice>
												<% EK8->(DbSkip()) %>
											<% EndDo %>
										<% EndIf %>
									</AdditionalDocument>
									<% EK7->(DbSkip()) %>
								<% EndDo %>
							<% EndIf %>
						<% ElseIf PosEE9ItNF(xFilial("EE9")+EK2->EK2_PROCESS+EK2->EK2_PEDIDO+EK2->EK2_SEQUEN, EK2->EK2_NRNF, EK2->EK2_SERIE) %>
							<% If Empty(EE9->EE9_ATOCON) %>
								<% If EYU->(FieldPos("EYU_TPAC") > 0 .And. DbSeek(xFilial()+EEC->EEC_PREEMB+EE9->EE9_SEQEMB )) %>
									<% While EYU->(!Eof() .And. EYU_FILIAL+EYU_PREEMB+EYU_SEQEMB == xFilial()+EEC->EEC_PREEMB+EE9->EE9_SEQEMB ) %>
										<AdditionalDocument>
											<CategoryCode><%= DU400TpAC(EYU->EYU_TPAC) %></CategoryCode>
											<ID><%= Alltrim(EYU->EYU_ATOCON) %></ID>
											<DrawbackHsClassification><%= AllTrim(EYU->EYU_POSIPI) %></DrawbackHsClassification>
											<DrawbackRecipientId><%= AllTrim(EYU->EYU_CNPJ) %></DrawbackRecipientId>
											<% If EYU->EYU_VLSCOB > 0 %>
												<ValueWithoutExchangeCoverAmount><%= AllTrim(StrZero(EYU->EYU_VLSCOB, AVSX3("EE9_PRCTOT",3), 2 )) %></ValueWithoutExchangeCoverAmount>
											<% EndIf %>
											<% If (EYU->EYU_VALOR - EYU->EYU_VLSCOB) > 0%>
												<ValueWithExchangeCoverAmount><%= AllTrim(StrZero(EYU->EYU_VALOR - EYU->EYU_VLSCOB, AVSX3("EE9_PRCTOT",3), 2 )) %></ValueWithExchangeCoverAmount>
											<% EndIf %>
											<ItemID><%= AllTrim(EYU->EYU_SEQED3) %></ItemID>
											<QuantityQuantity><%= StrZero(EYU->EYU_QTD, AVSX3("EYU_QTD",3), 5) %></QuantityQuantity>
											<% If EWI->(FieldPos("EWI_CHVNFE") > 0 .And. dbSeek(xFilial()+EYU->(EYU_PREEMB+EYU_SEQEMB+EYU_TIPO+EYU_CNPJ+EYU_POSIPI+EYU_ATOCON+EYU_SEQED3))) %>
												<% Do While EWI->(!EoF() .AND. EWI_FILIAL+EWI_PREEMB+EWI_SEQEMB+EWI_TIPO+EWI_CNPJ+EWI_POSIPI+EWI_ATOCON+EWI_SEQED3 == xFilial()+EYU->(EYU_PREEMB+EYU_SEQEMB+EYU_TIPO+EYU_CNPJ+EYU_POSIPI+EYU_ATOCON+EYU_SEQED3)) %>
													<Invoice>
														<ID><%= EWI->(FieldPos("EWI_CHVNFE") > 0, EWI_CHVNFE, "") %></ID>
														<IssueDateTime><%= EasyTimeStamp(EWI->EWI_DTNF) %></IssueDateTime>
														<TypeCode>388</TypeCode>
														<CustomsValueAmount><%= Str(EWI->EWI_VLNF, AvSX3("EWI_VLNF",3),AvSX3("EWI_VLNF",4)) %></CustomsValueAmount>
														<QuantityQuantity><%= StrZero(EWI->EWI_QTD, AvSx3("EWI_QTD", 3), 5) %></QuantityQuantity>
													</Invoice>
													<% EWI->(DbSkip()) %>
												<% EndDo %>
											<% EndIf %>
										</AdditionalDocument>
										<% EYU->(DbSkip()) %>
									<% EndDo %>
								<% EndIf %>
							<% Else %>
								<AdditionalDocument>
									<% If GetMv("MV_EEC_EDC",,.F.) %>
										<CategoryCode><%= DU400TpAC(Posicione("ED0", 2, xFilial("ED0")+EE9->EE9_ATOCON, "ED0_TIPOAC")) %></CategoryCode>
										<ID><%= Alltrim(EE9->EE9_ATOCON) %></ID>
										<DrawbackHsClassification><%= AllTrim(Posicione("ED3", 2, xFilial("ED3")+EE9->EE9_ATOCON+EE9->EE9_SEQED3, "ED3_NCM")) %></DrawbackHsClassification>
										<DrawbackRecipientId><%= Posicione('SYT', 1, xFilial('SYT')+Posicione("ED0", 2, xFilial("ED0")+EE9->EE9_ATOCON, "ED0_IMPORT"), 'YT_CGC') %></DrawbackRecipientId>
										<% If EE9->EE9_VLSCOB > 0 %>
											<ValueWithoutExchangeCoverAmount><%= StrZero(EE9->EE9_VLSCOB, AVSX3("EE9_PRCTOT",3), 2 ) %></ValueWithoutExchangeCoverAmount>
										<% EndIf %>
										<% If (EE9->EE9_VL_AC - EE9->EE9_VLSCOB) > 0 %>
											<ValueWithExchangeCoverAmount><%= StrZero(EE9->EE9_VL_AC - EE9->EE9_VLSCOB, AVSX3("EE9_PRCTOT",3), AVSX3("EE9_PRCTOT",4) ) %></ValueWithExchangeCoverAmount>
										<% EndIf %>
										<ItemID><%= Alltrim(EE9->EE9_SEQED3) %></ItemID>
										<QuantityQuantity><%= StrZero(Posicione("ED3", 2, xFilial("ED3")+EE9->EE9_ATOCON+EE9->EE9_SEQED3, "AVTransUnid(ED3->ED3_UMPROD,ED3->ED3_UMNCM,ED3->ED3_PROD,EE9->EE9_QT_AC)"), AvSx3("EE9_QT_AC", 3), 5) %></QuantityQuantity>
									<% Else %>
										<CategoryCode><%= DU400TpAC(EE9->(If(FieldPos("EE9_TPAC") > 0 .And. !Empty(EE9_TPAC), EE9_TPAC, ""))) %></CategoryCode>
										<ID><%= Alltrim(EE9->EE9_ATOCON) %></ID>
										<DrawbackHsClassification><%= AllTrim(EE9->EE9_POSIPI) %></DrawbackHsClassification>
										<DrawbackRecipientId><%= If(!Empty(EEC->EEC_EXPORT+EEC->EEC_EXLOJA), SI100CNPJ(EEC->EEC_EXPORT+EEC->EEC_EXLOJA), SI100CNPJ(EEC->EEC_FORN+EEC->EEC_FOLOJA)) %></DrawbackRecipientId>
										<% If EE9->EE9_VLSCOB > 0 %>
											<ValueWithoutExchangeCoverAmount><%= StrZero(EE9->EE9_VLSCOB, AVSX3("EE9_PRCTOT",3), 2 ) %></ValueWithoutExchangeCoverAmount>
										<% EndIf %>
										<% If (EE9->EE9_PRCINC - EE9->EE9_DESCON - EE9->EE9_VLDESC - EE9->EE9_VLSCOB) > 0 %>
											<ValueWithExchangeCoverAmount><%= StrZero(EE9->EE9_PRCINC - EE9->EE9_DESCON - EE9->EE9_VLDESC - EE9->EE9_VLSCOB, AVSX3("EE9_PRCTOT",3), AVSX3("EE9_PRCTOT",4) ) %></ValueWithExchangeCoverAmount>
										<% EndIf %>
										<ItemID><%= AllTrim(EE9->EE9_SEQED3) %></ItemID>
										<QuantityQuantity><%= StrZero(Du400GetVal(EE9->EE9_SEQEMB, "QUANTIDADE_NCM"), AVSX3("EE9_SLDINI",3), 5 ) %></QuantityQuantity>
									<% EndIf %>
								</AdditionalDocument>
							<% EndIf %>
						<% EndIf %>
						<% If !Empty(EK2->EK2_PCARGA) %>
							<AdditionalInformation>
								<StatementCode><%= Alltrim(EK2->EK2_PCARGA) %></StatementCode>
								<% cObsPca := Alltrim(ConverteXML(EK2->EK2_OBSPCA)) %>
								<% cObsPca := StrTran( cObsPca, "<" , "" ) %>
								<% cObsPca := StrTran( cObsPca, ">" , "" ) %>
								<StatementDescription><%= cObsPca %></StatementDescription>
								<StatementTypeCode>PRI</StatementTypeCode>
							</AdditionalInformation>
						<% EndIf %>
						<Commodity>
							<Description><%=  iif( EK2->(fieldpos("EK2_DESC")) >0 , Alltrim(EK2->EK2_DESC) , DU400DscPrd(EK2->EK2_COD_I)) %></Description>
							<ValueAmount><%=  StrZero( EK2->EK2_PRCTOT, AVSX3("EK2_PRCTOT",3), AVSX3("EK2_PRCTOT",4) ) %></ValueAmount>
							<% If lSemNota %>
								<% cVmDes := AllTrim(ConverteXML(MEMOLINE(EK2->EK2_VM_DES,60,1))) %>
								<% cVmDes := StrTran( cVmDes, "<" , "" ) %>
								<% cVmDes := StrTran( cVmDes, ">" , "" ) %>
								<CommercialDescription><%= cVmDes %></CommercialDescription>
								<Classification>
									<ID><%=AllTrim(EK2->EK2_POSIPI)%></ID>
									<IdentificationTypeCode>HS</IdentificationTypeCode>
								</Classification>
								<GoodsMeasure>
									<TypeCode>AAF</TypeCode>
									<% if avflags("DU-E3.1") %>
										<TariffQuantity><%= strzero( EK2->EK2_QTDNCM, AVSX3("EK2_QTDNCM",3), 5)  %></TariffQuantity>
									<% Else %>
										<TariffQuantity><%= StrZero( Du400GetVal(EK2->EK2_SEQEMB, "QUANTIDADE_NCM"), AVSX3("EK2_SLDINI",3), 5 ) %></TariffQuantity>
									<% endif %>
								</GoodsMeasure>
								<GoodsMeasure>
									<UnitDescription languageID=""><%= EK2->EK2_UNIDAD %></UnitDescription>
									<TypeCode>ABW</TypeCode>
									<TariffQuantity><%=  StrZero( EK2->EK2_SLDINI, AVSX3("EK2_SLDINI",3), 5 ) %></TariffQuantity>
								</GoodsMeasure>
								<Product>
									<ID><%= EK2->EK2_COD_I %></ID>
									<IdentifierTypeCode>VN</IdentifierTypeCode>
								</Product>
							<% EndIf %>
							<% cChaveEK2 := EK2->EK2_FILIAL + EK2->EK2_PROCES + EK2->EK2_NUMSEQ + EK2->EK2_SEQEMB %>
							<% if !lSemNota %>
									<InvoiceLine>
										<SequenceNumeric><%= Alltrim(EK2->EK2_FATSEQ) %></SequenceNumeric>
										<% if EK4->( dbsetorder(1) , msseek( cChaveEK2 ) ) %>
											<% while EK4->(!eof()) .and. EK4->EK4_FILIAL+EK4->EK4_PROCES+EK4->EK4_NUMSEQ+EK4->EK4_SEQUEN == cChaveEK2 %>
													<ReferencedInvoiceLine>
														<% If !Empty(EK4->EK4_CHVNFE) %>
															<SequenceNumeric><%= Alltrim(EK4->EK4_D1ITEM) %></SequenceNumeric>
															<InvoiceIdentificationID><%= Alltrim(EK4->EK4_CHVNFE) %></InvoiceIdentificationID>
															<GoodsMeasure>
																<TariffQuantity><%= StrZero( EK4->EK4_QUANT, AVSX3("EK4_QUANT",3), 5 ) %></TariffQuantity>
															</GoodsMeasure>
															<% If aScan( aNFsRemess , { |x| x[1] == "E" .And. X[3] == EK4->EK4_CHVNFE }) == 0 %>
																	<% aAdd( aNFsRemess , {"E", EK4->EK4_CGC , EK4->EK4_CHVNFE }) %>
															<% EndIf %>
														<% Endif %>
														<% if avflags("DU-E3.1") %>
															<% If !Empty(EK4->EK4_CHVNFS) %>
																<SequenceNumeric><%= Alltrim(EK4->EK4_D2ITEM) %></SequenceNumeric>
																<InvoiceIdentificationID><%= Alltrim(EK4->EK4_CHVNFS) %></InvoiceIdentificationID>
																<GoodsMeasure>
																	<TariffQuantity><%= StrZero( EK4->EK4_D2QTD, AVSX3("EK4_D2QTD",3), 5 ) %></TariffQuantity>
																</GoodsMeasure>
																<% If aScan( aNFsRemess , { |x| x[1] == "S" .And. X[3] == EK4->EK4_CHVNFS }) == 0 %>
																		<% aAdd( aNFsRemess , {"S", EK4->EK4_CGC , EK4->EK4_CHVNFS }) %>
																<% EndIf %>
															<% Endif %>
														<% Endif %>
													</ReferencedInvoiceLine>
												<% EK4->(DBSkip()) %>
											<% EndDo %>
											<% if !avflags("DU-E3.1") %>
												<% aItRemSaida := DU400GetNfSRem(EK3->EK3_NRNF, EK3->EK3_SERIE, EK1->EK1_IMPORT, EK1->EK1_IMLOJA, EK2->EK2_FATSEQ, EK2->EK2_PROCESS, @aNFRemSaida) %>
												<% For nNfsRem := 1 To Len(aItRemSaida) %>
													<ReferencedInvoiceLine>
															<SequenceNumeric><%= aItRemSaida[nNfsRem][2] %></SequenceNumeric>
																<InvoiceIdentificationID>
																	<%= aItRemSaida[nNfsRem][1] %>
																</InvoiceIdentificationID>
																<GoodsMeasure>
																	<TariffQuantity><%=  StrZero( AVTransUnid(EK2->EK2_UNIDAD,BuscaNCM(EK2->EK2_POSIPI, "YD_UNID"),EK2->EK2_COD_I, aItRemSaida[nNfsRem][3] ) , AVSX3("D2_QUANT",3), 5 ) %></TariffQuantity>
																</GoodsMeasure>
													</ReferencedInvoiceLine>
												<% Next %>
											<% EndIf %>
										<% EndIf %>
									</InvoiceLine>
								<% EndIf %>
								<% if PosEE9ItNF(xFilial("EE9")+EK2->EK2_PROCESS+EK2->EK2_PEDIDO+EK2->EK2_SEQUEN, EK2->EK2_NRNF, EK2->EK2_SERIE) %> 
									<% if AvFlags("DESTAQ") .and. EK2->(fieldpos("EK2_DESTAQ")) > 0 .and. !Empty(EK2->EK2_DESTAQ) %>
										<% aAux := {} %>
										<% lSai := .F. %>
										<% cDestaq := EK2->EK2_DESTAQ %>
										<% While !lSai %>
											<% if !Empty(cDestaq) %>
												<%	aadd( aAux , {substr( cDestaq , 1 , 3 )} ) %>
												<%	cDestaq := substr( cDestaq , 4 , len(cDestaq) ) %>
											<% Else %>
												<%	lSai := .T. %>
											<% EndIf %>
										<% EndDo %>
										<% IF len(aAux) > 0 %>
											<% For i := 1 to len(aAux) %>
												<% iF EK5->( dbsetorder(1) , msseek( xFilial("EK5") + EK2->EK2_POSIPI + aAux[i][1] )) %>
													<ProductCharacteristics>
														<TypeCode><%= DU400GetAtt( EK2->EK2_POSIPI , EK5->EK5_DESTAQ ) %></TypeCode>
														<Description><%= alltrim(EK5->EK5_DESTAQ) %></Description>
													</ProductCharacteristics>
												<% EndIf %>
											<% Next %>
										<% EndIf %>
									<% Else %>
										<% If !Empty(EE9->EE9_DTQNCM) .And. !Empty(cAtt := DU400GetAtt(EE9->EE9_POSIPI, EE9->EE9_DTQNCM))  %>
											<ProductCharacteristics>
												<TypeCode><%= Alltrim(cAtt) %></TypeCode>
												<Description><%= EE9->EE9_DTQNCM %></Description>
											</ProductCharacteristics>
										<% EndIf %>
									<% EndIf %>
									<% if EasyEntryPoint("DUEEnvAt") %>
 										<% aAttList := ExecBlock("DUEEnvAt",.f.,.f.) %>
										<% For i := 1 to len(aAttList) %>
											<ProductCharacteristics>
												<TypeCode><%= Alltrim(aAttList[i][1]) %></TypeCode>
												<Description><%= Alltrim(aAttList[i][2]) %></Description>
											</ProductCharacteristics>
										<% Next %>
									<% endif %>
								<% EndIf %>
						</Commodity>
						<GoodsMeasure>
							<% if avflags("DU-E3.1") %>
								<NetNetWeightMeasure><%=  StrZero( EK2->EK2_PESNCM ,AVSX3("EK2_SLDINI",3), 5 ) %></NetNetWeightMeasure>
							<% Else %>
								<% npesoKg := EK2->EK2_SLDINI * EK2->EK2_PSLQUN %>
								<NetNetWeightMeasure><%=  StrZero( Du400GetVal(EK2->EK2_SEQEMB, "PESO"), AVSX3("EK2_SLDINI",3), 5 ) %></NetNetWeightMeasure>
							<% endif %>
						</GoodsMeasure>
						<% If !Empty(EK2->EK2_ATOCON) .And. EK1->(fieldpos("EK1_ENQCOX")) > 0 .and. !Empty(EK1->EK1_ENQCOX) %>
							<GovernmentProcedure>
								<CurrentCode><%= Alltrim(EK1->EK1_ENQCOX) %></CurrentCode>
							</GovernmentProcedure>
						<% Else %>
							<% If !Empty(EK1->EK1_ENQCOD) %>
								<GovernmentProcedure>
									<CurrentCode><%= Alltrim(EK1->EK1_ENQCOD) %></CurrentCode>
								</GovernmentProcedure>
							<% EndIf %>
							<% If !Empty(EK1->EK1_ENQCO1) %>
								<GovernmentProcedure>
									<CurrentCode><%= Alltrim(EK1->EK1_ENQCO1) %></CurrentCode>
								</GovernmentProcedure>
							<% EndIf %>
							<% If !Empty(EK1->EK1_ENQCO2) %>
								<GovernmentProcedure>
									<CurrentCode><%= Alltrim(EK1->EK1_ENQCO2) %></CurrentCode>
								</GovernmentProcedure>
							<% EndIf %>
							<% If !Empty(EK1->EK1_ENQCO3) %>
								<GovernmentProcedure>
									<CurrentCode><%= Alltrim(EK1->EK1_ENQCO3) %></CurrentCode>
								</GovernmentProcedure>
							<% EndIf %>
						<% EndIf %>
						<% if EK2->EK2_PERCOM > 0 %>
							<ValuationAdjustment>
								<AdditionCode>149</AdditionCode>
								<PercentageNumeric><%= AllTrim(StrZero( EK2->EK2_PERCOM, AVSX3("EK2_PERCOM",3) ,2)) %></PercentageNumeric>
							</ValuationAdjustment>
						<% EndIf %>
					</GovernmentAgencyGoodsItem>
					<% Next nItNf %>
					<% If ! lSemNota %>
						<% aAdd(aNFsSAIDA,{ EK3->EK3_NRNF , EK3->EK3_SERIE , EK3->EK3_DTNF, EK3->EK3_CHVNFE , aClone(aNFsRemess) }) %>
						<% aNFsRemess := {} %>
					<% EndIf %>
					<% If lSemNota %>
						<Importer>
							<% cImporter := Alltrim(ConverteXML(EK1->EK1_IMPODE)) %>
							<% cImporter := StrTran( cImporter, "<" , "" ) %>
							<% cImporter := StrTran( cImporter, ">" , "" ) %>
							<Name><%= cImporter %></Name>
							<Address>
								<CountryCode><%= AllTrim(EK1->EK1_PAISIM) %></CountryCode>
								<% cEndImp := Alltrim(ConverteXML(EK1->EK1_ENDIMP)) %>
								<% cEndImp := StrTran( cEndImp, "<" , "" ) %>
								<% cEndImp := StrTran( cEndImp, ">" , "" ) %>
								<Line><%= cEndImp %></Line>
							</Address>
						</Importer>
					<% EndIf %>
					<% If lSemNota %>
						<Invoice>
							<TypeCode>388</TypeCode>
							<% If !Empty(EK1->EK1_MOTDIS) %>
								<AdditionalInformation>
									<StatementCode><%=Alltrim(EK1->EK1_MOTDIS)%></StatementCode>
									<StatementTypeCode>ACG</StatementTypeCode>
								</AdditionalInformation>
							<% Else %>
								<AdditionalInformation>
									<StatementCode>3004</StatementCode>
									<StatementTypeCode>ACG</StatementTypeCode>
								</AdditionalInformation>
							<% EndIf %>
						</Invoice>
					<% EndIf %>
					<% If Len(aNFsSAIDA) > 0 %>
						<% For i:= 1 To Len(aNFsSAIDA) %>
							<Invoice>
									<ID><%= aNFsSAIDA[i][4] %></ID>
									<TypeCode>388</TypeCode>
									<Submitter>
										<ID><%= EK1->EK1_CGC %></ID>
									</Submitter>
									<% For j:=1 To Len(aNFsSAIDA[i][5]) %>
										<ReferencedInvoice>
											<ID><%= aNFsSAIDA[i][5][j][3] %></ID>
											<TypeCode>REM</TypeCode>
											<Submitter>
												<ID><%= aNFsSAIDA[i][5][j][2] %></ID>
											</Submitter>
										</ReferencedInvoice>
									<% Next j %>
							</Invoice> 
						<% Next i %> 
					<% EndIf %> 
						<TradeTerms>
							<ConditionCode><%=  Alltrim(EK1->EK1_INCOTE) %></ConditionCode>
						</TradeTerms> 
			</GoodsShipment>
		<% If ( lSemNota, EK2->(dbskip()),EK3->(dbSkip())) %>
		<% endDo %>
		<% If !Empty(EK1->EK1_NRORUC) %>
			<UCR>
				<TraderAssignedReferenceID><%=  Alltrim(EK1->EK1_NRORUC) %></TraderAssignedReferenceID>
			</UCR>
		<% EndIf %> 
	<% If lSemNota %> 
		</DeclarationNoNF>
	<% EndIf %>
	<% If !lSemNota %>
		</DeclarationNFe>
	<% EndIf %>
</Declaration>