#INCLUDE 'PROTHEUS.CH'
#INCLUDE "TBICONN.CH"
#INCLUDE "FILEIO.CH" 
#INCLUDE "CARGASFC.CH"
#DEFINE PULALINHA CHR(13)+CHR(10)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ CargaSFC ³ Autor ³Andre Anjos			³ Data ³ 05/04/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Realiza carga dos cadastros no Chao de Fabrica.            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAPCP                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Main Function CARGASFC()
Local lGravouLog := .F.
Local nTela		 := 0
Local nTamEmp	 := 0
Local nTamUni	 := 0
Local nTamFil	 := 0
Local oOk        := LoadBitmap( GetResources(), "LBOK" )
Local oNOk       := LoadBitmap( GetResources(), "LBNO" )
Local oList		 := NIL
Local cAux		 := ""

Private __cInterNet:= Nil
Private aEmpSFC  := {}

Private cTitulo    := STR0001//"Carga SFC"
Private cAcao      := STR0002//"Carga de cadastros Chão de Fábrica"
Private cArqEmp    := 'SIGAMAT.EMP'
Private cApresenta := ''
Private cItemAju   := STR0003//"Andamento da carga de cada tabela:"
Private cTerAceite := ''
Private cLogUpdate := ''

Private lConcordo  := .F.

Private nAtuTotal  := 0
Private nAtuParci  := 0

Private oTitulo
Private oAcao

Private oEmpAtu
Private oSelEmp

Private oMemo1
Private oMemo2
Private oMemo4

Private oDlgUpd

Private oPanel1
Private oPanel2
Private oPanel3
Private oPanel4
Private oPanel5

Private oMtTotal
Private oMtParci
Private oItemAju

Private oAtuTotal

Private oAtuParc1
Private oAtuParc2
Private oAtuParc3

Private oApresenta

Private oTerAceite
Private oChkAceite

Private oBtnAvanca
Private oBtnCancelar
Private oBtnMark
Default lAutoMacao := .F.

cApresenta := STR0004 +PULALINHA//"Este programa destina-se às empresas que já utilizam o módulo de Planej. Contr. Produção (PCP) e passarão a utilizar o módulo de Chão de Fábrica (SFC)."

cTerAceite := STR0094 +PULALINHA // "Antes de iniciar a carga, leia integralmente o termo a seguir. Somente depois de aceitá-lo a carga poderá ser iniciada."
//cTerAceite += PULALINHA
cTerAceite += Replicate("-",65) +PULALINHA
cTerAceite += PULALINHA
cTerAceite += STR0005 +PULALINHA//"Este programa tem como objetivo gerar os cadastros do módulo Chão de Fábrica (SFC) a partir dos cadastros já existentes no módulo de Planej. Control. Produção (PCP)."
cTerAceite += PULALINHA
cTerAceite += STR0006 +PULALINHA//"Os registros existentes nos cadastros do módulo de PCP serão copiados para os cadastros do módulo SFC sem sofrem qualquer alteração, em ambas as partes, durante tal processo."
cTerAceite += PULALINHA
cTerAceite += STR0007 +PULALINHA//"Eventuais falhas durante o processamento da carga serão registradas em um arquivo de log para visualização ao término desta rotina."
cTerAceite += PULALINHA
cTerAceite += STR0008 +PULALINHA//"IMPORTANTE:"
cTerAceite += PULALINHA
cTerAceite += STR0009 +PULALINHA//"Os cadastros contemplados neste programa de carga são:"
cTerAceite += PULALINHA
cTerAceite += STR0010 +PULALINHA//"- Unidades de Medida"
cTerAceite += STR0011 +PULALINHA//"- Grupos de Produtos"
cTerAceite += STR0012 +PULALINHA//"- Armazéns"
cTerAceite += STR0013 +PULALINHA//"- Produtos"
cTerAceite += STR0014 +PULALINHA//"- Recursos"
cTerAceite += STR0015 +PULALINHA//"- Ferramentas"
cTerAceite += STR0016 +PULALINHA//"- Calendários"
cTerAceite += STR0017 +PULALINHA//"- Exceções de Calendário"
cTerAceite += STR0090 +PULALINHA//"- Vigências de Calendários"
cTerAceite += STR0018 +PULALINHA//"- Centros de Trabalho"
cTerAceite += STR0019 +PULALINHA +PULALINHA//"- Ordens de Produção (somente não movimentadas)"

cTerAceite += PULALINHA
cTerAceite += STR0020 +PULALINHA//"OBSERVAÇÃO:"
cTerAceite += PULALINHA
cTerAceite += STR0021+PULALINHA+PULALINHA//"As ordens de produção já movimentadas via PCP deverão ser concluídas ainda através deste módulo."
cTerAceite += STR0118 + 'http://tdn.totvs.com/display/PROT/PSIGASFC0014+-+Compartilhamento+Tabelas+CARGASFC' // 'Antes de executar a carga, é preciso corrigir o compartilhamento das tabelas do módulo SIGASFC. Mais informações:

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Abre o arquivo de Empresas de forma compartilhada ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !MyOpenSM0(.T.)
	Final(STR0022)//"SIGAMAT.EMP com problemas!"
EndIf     
SM0->(dbGotop())
While !SM0->(EOF())
	If !SM0->(Deleted())
		cAux    := If(Empty(SM0->M0_LEIAUTE),"FF",SM0->M0_LEIAUTE)
		nTamEmp := 0
		nTamUni := 0
		nTamFil := 0
		While !Empty(cAux)
			If Substr(cAux,1,1) == "E"
				nTamEmp++
			ElseIf Substr(cAux,1,1) == "U"
				nTamUni++
			ElseIf Substr(cAux,1,1) == "F"
				nTamFil++
			EndIf
			cAux := Substr(cAux,2)
		End
		aAdd(aEmpSFC, {.F.,SM0->M0_CODIGO,Substr(SM0->M0_CODFIL,1,nTamEmp),Substr(SM0->M0_CODFIL,1+nTamEmp,nTamUni),Substr(SM0->M0_CODFIL,1+nTamEmp+nTamUni,nTamFil),SM0->M0_FILIAL})
	EndIf
	SM0->(dbSkip())
End

IF !lAutoMacao
	DEFINE DIALOG oDlgUpd TITLE STR0023 FROM 0, 0 TO 22, 75 SIZE 550, 350 PIXEL//"SIGAPCP - Carga SFC"
	@ 000,000 BITMAP oBmp RESNAME 'Login' OF oDlgUpd SIZE 095, oDlgUpd:nBottom NOBORDER WHEN .F. PIXEL
	@ 005,070 SAY oTitulo VAR cTitulo OF oDlgUpd PIXEL FONT (TFont():New('Arial',0,-13,.T.,.T.))
	@ 015,070 SAY oAcao VAR cAcao OF oDlgUpd PIXEL
	@ 155,140 BUTTON oBtnCancelar PROMPT STR0024 SIZE 60,14 ACTION If(oBtnCancelar:cCaption == STR0024,oDlgUpd:End(),GravaLog(.T.,cLogUpdate,@lGravouLog)) OF oDlgUpd PIXEL//STR0025//"Cancelar"
	@ 155,210 BUTTON oBtnAvanca   PROMPT STR0026  SIZE 60,14 ACTION If(oBtnAvanca:cCaption  ==STR0027,(GravaLog(.F.,cLogUpdate,lGravouLog),oDlgUpd:End()),SelePanel(@nTela)) OF oDlgUpd PIXEL//"Avançar"//'&Finalizar'
	oDlgUpd:nStyle := nOR( DS_MODALFRAME, WS_POPUP, WS_CAPTION, WS_VISIBLE )

	oPanel1 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )
	@ 002,005 SAY oApresenta VAR STR0028 OF oPanel1 FONT (TFont():New('Arial',0,-13,.T.,.T.)) PIXEL//"Bem-Vindo!"
	@ 015,005 GET oMemo1     VAR cApresenta  OF oPanel1 MEMO PIXEL SIZE 180,100 FONT (TFont():New('Verdana',,-12,.T.)) NO BORDER
	oMemo1:lReadOnly := .T.

	oPanel2 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )
	@ 002,005 SAY oTerAceite VAR STR0029 OF oPanel2 FONT (TFont():New('Arial',0,-13,.T.,.T.)) PIXEL//"Atenção:"
	@ 015,005 GET oMemo2     VAR cTerAceite  OF oPanel2 MEMO PIXEL SIZE 180,90 FONT (TFont():New('Verdana',,-12,.T.)) NO BORDER
	@ 107,107 CheckBox oChkAceite VAR lConcordo PROMPT STR0030 SIZE 80,10 Of oPanel2 PIXEL//"Sim, li e aceito o termo acima."
	oMemo2:lReadOnly   := .T.
	oChkAceite:bChange := {|| Concordo(lConcordo)}

	oPanel3 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )

	oList := TWBrowse():New( 05, 05, 190, 110,,{"",STR0034,STR0032,STR0035,STR0033,STR0031},,oPanel3,,,,,,,,,,,,.F.,,.T.,,.F.,,,)//"Descrição"//"Empresa"//"Filial"//"Grupo"//"Unidade"
	oList:SetArray(aEmpSFC)
	oList:bLine := {|| {If(aEmpSFC[oList:nAT,1],oOk,oNOK),aEmpSFC[oList:nAt,2],aEmpSFC[oList:nAT,3],aEmpSFC[oList:nAT,4],aEmpSFC[oList:nAT,5],aEmpSFC[oList:nAT,6]}}
	oList:bLDblClick := {|| aEmpSFC[oList:nAt,1] := !aEmpSFC[oList:nAt,1]}

	oTButMarDe := TButton():New(00,00, ,oList,{|| MarcaTodos(oList)},8,10,,,.F.,.T.,.F.,,.F.,,,.F.)
								
	oPanel4 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )
	@ 010,000 SAY oSay       VAR STR0036 OF oPanel4 PIXEL FONT (TFont():New('Arial',0,-11,.T.,.T.))//"Atualizações Realizadas:"
	@ 050,000 SAY oItemAju   VAR cItemAju OF oPanel4 PIXEL FONT (TFont():New('Arial',0,-11,.T.,.T.))
	@ 037,000 SAY oAtuTotal  VAR Space(40) OF oPanel4 PIXEL
	@ 077,000 SAY oAtuParc1  VAR Space(40) OF oPanel4 PIXEL
	@ 087,000 SAY oAtuParc2  VAR Space(40) OF oPanel4 PIXEL
	@ 097,000 SAY oAtuParc3  VAR Space(40) OF oPanel4 PIXEL
	@ 020,000 METER oMtTotal VAR nAtuTotal TOTAL 1000 SIZE 190, 15 OF oPanel4 UPDATE PIXEL
	@ 060,000 METER oMtParci VAR nAtuParci TOTAL 1000 SIZE 190, 15 OF oPanel4 UPDATE PIXEL

	oPanel5 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )
	@ 002,005 SAY oLogUpdate VAR STR0037 OF oPanel5 FONT (TFont():New('Arial',0,-13,.T.,.T.))PIXEL//"Atualizações Realizadas:"
	@ 015,005 GET oMemo4     VAR cLogUpdate  OF oPanel5 MEMO PIXEL SIZE 180,90 FONT (TFont():New('Verdana',,-12,.T.)) NO BORDER
	oMemo4:lReadOnly   := .T.

	ACTIVATE DIALOG oDlgUpd CENTER ON INIT SelePanel(@nTela)
ENDIF

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  |SelePanel ºAutor  ³Microsiga           º Data ³  01/22/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Controla a atualizacao das interfaces visuais              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ UPD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function SelePanel(nTela)
Local lRet := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza variaveis da janela principal ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oTitulo:nLeft           := 120; oTitulo:Refresh()
oAcao:nLeft             := 120; oAcao:Refresh()
oBmp:lVisibleControl    := .T.
oPanel1:lVisibleControl := .F.
oPanel2:lVisibleControl := .F.
oPanel3:lVisibleControl := .F.
oPanel4:lVisibleControl := .F.
oPanel5:lVisibleControl := .F.

Do Case
	Case nTela == 0 //-- Apresentacao
		oPanel1:lVisibleControl := .T.
	Case nTela == 1 //-- Termo de aceite
		oPanel2:lVisibleControl := .T.
		oBtnAvanca:lActive      := .F.
	Case nTela == 2 //-- Selecao da empresa
		oPanel3:lVisibleControl := .T.
		cAcao                   := STR0038; oAcao:Refresh()//"Selecione as filiais para carga"
	Case nTela == 3 //-- Execucao do ajuste
	   If (aScan(aEmpSFC,{|x| x[1]}) > 0)
			cAcao                   := STR0039; oAcao:Refresh()//"Execução da carga"
			oPanel4:lVisibleControl := .T.
			oBtnCancelar:lActive    := .F. //-- A partir deste ponto nao pode mais ser cancelado
			oBtnAvanca:lActive      := .F.
			AjustaTabs()
			cItemAju                := STR0091 ; oItemAju:Refresh()//"Andamento da carga de cada tabela:"
			oAtuTotal:cCaption      := STR0040; oAtuTotal:Refresh()//"Carga finalizada!"
			oAtuParc1:cCaption      := STR0041; oAtuParc1:Refresh()//"Carga das tabelas finalizada!"
			oAtuParc2:cCaption      := ''; oAtuParc2:Refresh()
			oAtuParc3:cCaption      := ''; oAtuParc3:Refresh()
			oBtnAvanca:lActive      := .T.
		Else
			lRet := .F.
			oPanel3:lVisibleControl := .T.
			Alert(STR0042)//"Selecione as filiais a serem processadas"
		EndIf
	Case nTela == 4
		cAcao                   := STR0043; oAcao:Refresh()//"Carga finalizada!"
		oPanel5:lVisibleControl := .T.
		oBtnCancelar:cCaption   := STR0044//"&Salvar Log"
		oBtnCancelar:lActive    := .T.
		oBtnAvanca:cCaption     := STR0045//"&Finalizar"
EndCase

If lRet
	nTela ++
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³AjustaTabs³ Autor ³ Andre Anjos			³ Data ³06/01/09  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao de processamento da carga das tabelas               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ CARGASFC                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AjustaTabs()
Local aCalend	:= {}
Local aErros	:= {}
Local aRetorno  := Array(2)
Local cCodEmp	:= ""
Local cCodFil	:= ""
Local cError    := ""  
Local cErros    := ""
Local cGrupo	:= ""
Local cNome     := ""
Local cRoteiro	:= ""
Local lErroCT   := .F. 
Local lProces
Local nEmp		:= 0
Local nIniEmp	:= 0
Local nX		:= 0
Local oModel

//Retorno de cada processo individualmente
Local aAreaNNR := {}
Local cErros
Local lRet := .T.
Local lRetProc		:= {,,,,,,,,,,}
Local nHandle

Private c780Cod     := ""  //-- Usada na A780IntSFC
Private c780Desc    := ""  //-- Usada na A780IntSFC
Private cErroDIC    := ''
Private cModulo     := 'PCP'
Private dDate	    := NIL   //-- Usada na A640IntSFC
Private lCargaSFC   := .T.
Private lMsFinalAut := .F.
Private nModulo     := 10 //-- SIGAPCP
Private nPrecisao   := 0   //-- Usada na A780IntSFC
Private oMemoLog	:= NIL

Default lAutoMacao  := .F.    

nAtuTotal       := 0

IF !lAutoMacao
	oMtTotal:nTotal := 0

	aEval(aEmpSFC,{|x| If(x[1],oMtTotal:nTotal++,NIL)})
ENDIF

cLogUpdate += STR0047 +DtoC(Date()) +STR0046 +SubStr(Time(), 1, 5) +PULALINHA//", as "//">> Carga iniciada em "
cLogUpdate += PULALINHA
cLogUpdate += STR0048  +PULALINHA//"LOG da carga SFC"
cLogUpdate += '======================'+PULALINHA


For nEmp := 1 to Len(aEmpSFC)
	//-- Verifica se a filial deve ser atualizada
	If aEmpSFC[nEmp,1]	
		
		cCodFil  := aEmpSFC[nEmp,3]+aEmpSFC[nEmp,4]+aEmpSFC[nEmp,5]
		cErroDIC := ''
		cErros   := ""
		
		nHandle := FCreate("\cargasfc-emp" + aEmpSFC[nEmp,2] + "-fil" + cCodFil + ".log")
		
		IF !lAutoMacao
			oAtuParc3:cCaption := STR0049 +AllTrim(cCodFil +' - ' +aEmpSFC[nEmp,6])//"Executando carga para a filial: "
		ENDIF
		MsgRun(STR0051 +AllTrim(cCodFil +' - ' +aEmpSFC[nEmp,6]) +'...',STR0050,{|| CursorWait(), lRet := AbreEmpre(aEmpSFC[nEmp,2], cCodFil, cModulo) ,CursorArrow()})//"Aguarde"//"Iniciando ambiente para a filial "
		
		cLogUpdate += PULALINHA
		cLogUpdate += STR0052 +AllTrim(cCodFil +' - ' +aEmpSFC[nEmp,6]) +":"//"Ocorrências registradas na filial "
		cLogUpdate += PULALINHA
		
		If lRet 
			If cCodEmp != aEmpSFC[nEmp,2]
				cCodEmp := aEmpSFC[nEmp,2]
			
				aRetorno := SFCExclusi(.T.) 
				If !aRetorno[1]	
					lRet := .F.
					cErroDIC := aRetorno[2]					
				EndIf
			ElseIf !aRetorno[1]
				cErroDIC := aRetorno[2]
				lRet := .F.
			Endif
		Else
			aRetorno[1] := .F.
		EndIf

		IF !lRet
			cErros += cErroDIC + PULALINHA
		Else
		
			SFCupdSX6(1, cCodFil)
			
			lProces := SuperGetMV("MV_APS",.F.,"") == "TOTVS" .Or. SuperGetMV("MV_PCPATOR",.F.,.F.) == .T.
	
			lMsFinalAuto := .F.
			lMsHelpAuto  := .F.
			
			nAtuParci := 0
			oMtParci:nTotal := 11
			
			For nX := 1 to 11
				lRetProc[nX] :=	.T.
			Next nX
			
			If Empty(SuperGetMV("MV_SFCCDCL",.F.,""))
				cErros += STR0053 +PULALINHA//"O parâmetro MV_SFCCDCL não foi configurado."
				oMtParci:Set(oMtParci:nTotal); SysRefresh()	
			Else			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza variaveis da janela principal ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oAtuTotal:cCaption := STR0054 +AllTrim(cCodFil +' - ' +aEmpSFC[nEmp,6]); oAtuTotal:Refresh()//"Filial: "
				
				//-- 1. Carga de UM
				oAtuTotal:cCaption := STR0055; SysRefresh()	//"Processando carga de unidades de medida..."
				oModel := FWLoadModel("SFCA023")		
				
				SAH->(dbSetOrder(1))
				SAH->(dbSeek(xFilial("SAH")))
				While !SAH->(EOF()) .And. SAH->AH_FILIAL == xFilial("SAH")
					CZ9->(dbSetOrder(1))
					If !CZ9->(dbSeek(xFilial("CZ9")+SAH->AH_UNIMED))
						RegToMemory("SAH", .F., .F. )	 				
						Q30IntSFC(3,@cErros,STR0056,oModel)//"Unidade de Medida"
						If AllTrim(cErros) != ""
							lRetProc[1] := .F.
							FWrite(nHandle, cErros)
						EndIf 
						cErros := ""
					EndIf
					SAH->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
				
				//-- 2. Carga de Grupos
				oAtuTotal:cCaption := STR0057; SysRefresh()	//"Processando carga de grupos de estoque..."
				oModel := FWLoadModel("SFCA021")
				
				SBM->(dbSetOrder(1))
				SBM->(dbSeek(xFilial("SBM")))
				While !SBM->(EOF()) .And. SBM->BM_FILIAL == xFilial("SBM")
					CY7->(dbSetOrder(1))
					If !CY7->(dbSeek(xFilial("CY7")+SBM->BM_GRUPO))
						RegToMemory("SBM", .F., .F. )	
						A035IntDPR(3,@cErros,STR0058,oModel)//"Grupo de Estoque"
						If AllTrim(cErros) != ""
							lRetProc[2] := .F.
							FWrite(nHandle, cErros)
						EndIf 
						cErros := ""
					EndIf
					SBM->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
				
				//-- 3. Carga de Armazens
				oAtuTotal:cCaption := STR0059; SysRefresh()	//"Processando carga de armazéns..."
				oModel := FWLoadModel("SFCA022")
							
				NNR->(dbSetOrder(1))
				NNR->(dbSeek(xFilial("NNR")))
				While !NNR->(EOF()) .And. NNR->NNR_FILIAL == xFilial("NNR")
					CZX->(dbSetOrder(1))
					If !CZX->(dbSeek(xFilial("CZX")+NNR->NNR_CODIGO))
						aAreaNNR := NNR->(GetArea()) //Salva a área de trabalho da tabela NNR, para continuar no loop depois.
						
						RegToMemory("NNR", .F., .F. )	
	
						aCampos := {}
						
						aAdd(aCampos,{"CZX_CDDP",NNR->NNR_CODIGO})
						aAdd(aCampos,{"CZX_DSDP",NNR->NNR_DESCRI})
						
						oModel:SetOperation(3)
								
						If (lRet := oModel:Activate())
							aAux := oModel:GetModel("CZXMASTER"):GetStruct():GetFields()
							
							For nX := 1 To Len(aCampos)
								If aScan(aAux,{|x| AllTrim(x[3]) ==  AllTrim(aCampos[nX,1])}) > 0
									If !(oModel:SetValue("CZXMASTER",aCampos[nX,1],aCampos[nX,2]))
										lRet := .F.
										Exit       
									EndIf
								EndIf
							Next nX
						Endif
						
						If lRet
							If (lRet := oModel:VldData())
								lRet := oModel:CommitData()
							EndIf
						EndIf
						
						NNR->(RestArea(aAreaNNR)) //Restaura a área de trabalho da NNR.
						
						If !lRet
							A010SFCErr(oModel,@cError,NIL,cNome,NNR->NNR_CODIGO)
						EndIf
						
						oModel:DeActivate()
	
						cErros := ""
					EndIf
					NNR->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
									
				//-- 4. Carga de Produtos
				oAtuTotal:cCaption := STR0061; SysRefresh()	//"Processando carga de produtos..."
				oModel := FWLoadModel("SFCC101")
	
				SB1->(dbSetOrder(1))
				SG1->(dbSetOrder(1))
				SB1->(dbSeek(xFilial("SB1")))
							
				While !SB1->(EOF()) .And. SB1->B1_FILIAL == xFilial("SB1")
					CZ3->(dbSetOrder(1))      
					If !CZ3->(dbSeek(xFilial("CZ3")+SB1->B1_COD))
						RegToMemory("SB1", .F., .F. )	
						If A010IntSFC(3,@cErros,STR0062,oModel) .And. SG1->(dbSeek(xFilial("SG1")+SB1->B1_COD))//"Produto"
							SFCIntSFC(SB1->B1_COD,"2",oModel)
							If AllTrim(cErros) != ""
								lRetProc[4] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						Else            
							If AllTrim(cErros) != ""
								lRetProc[4] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						EndIf
					EndIf
					SB1->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
				
				//-- 5. Carga de Calendario
				oAtuTotal:cCaption := STR0063; SysRefresh()	//"Processando carga de calendários..."
				nPrecisao := SuperGetMV("MV_PRECISA",.F.,4)
				SH7->(dbSetOrder(1))
				SH7->(dbSeek(xFilial("SH7")))
				While !SH7->(EOF()) .And. SH7->H7_FILIAL == xFilial("SH7")
					c780Cod    := SH7->H7_CODIGO
					c780Desc   := SH7->H7_DESCRI
				    aCalend := A780Arrays(4)
					CYM->(dbSetOrder(1))
					If !CYM->(dbSeek(xFilial("CYM")+SH7->H7_CODIGO))
						RegToMemory("SH7",.F.,.F.)	
						A780IntSFC(3,aCalend,@cErros,STR0064)//"Calendário"
						If AllTrim(cErros) != ""
							lRetProc[5] := .F.
							FWrite(nHandle, cErros)
						EndIf 
						cErros := ""
					EndIf
					SH7->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
				
				//-- 6. Carga de execoes do calendario
				oAtuTotal:cCaption := STR0065; SysRefresh()	//"Processando carga de exceções de calendário..."
				oModel := FWLoadModel("SFCA013")
				
				cSFCCDCL := SuperGetMV("MV_SFCCDCL",.F.,"")
				
				SH9->(dbSetOrder(1))
				SH9->(dbSeek(xFilial("SH9")))
				While !SH9->(EOF()) .And. SH9->H9_FILIAL == xFilial("SH9")
					If Empty(SH9->H9_RECURSO) .And. Empty(SH9->H9_CCUSTO) .And. Empty(SH9->H9_ALOC)
						CYG->(DbSetOrder(1))
						CYZ->(DbSetOrder(1))
					 	If !CYZ->(dbSeek(xFilial("CYZ")+PadR(cSFCCDCL,TamSX3("CYZ_CDCL")[1])+DToS(SH9->H9_DTINI))) .Or. CYZ->CYZ_TPDY # "3"
					 		dDate := SH9->H9_DTINI
							RegToMemory("SH9", .F., .F. )	
							A640IntSFC(3,@cErros,STR0066,oModel)//"Exceção de calendário"
							If AllTrim(cErros) != ""
								lRetProc[6] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						EndIf
					EndIf
					SH9->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
				
				//-- 7. Carga de centro de trabalho
				oAtuTotal:cCaption := STR0067; SysRefresh()	//"Processando carga de centros de trabalho..."
				oModel := FWLoadModel("SFCA001")
				
				SHB->(dbSetOrder(1))
				SHB->(dbSeek(xFilial("SHB")))
				While !SHB->(EOF()) .And. SHB->HB_FILIAL == xFilial("SHB")
					CYI->(dbSetOrder(1))
					If !CYI->(dbSeek(xFilial("CYI")+SHB->HB_COD))
						RegToMemory("SHB", .F., .F. )	
						A770IntSFC(3,@cErros,STR0068,oModel)//"Centro de Trabalho"
						If AllTrim(cErros) != ""
							lRetProc[7] := .F.
							FWrite(nHandle, cErros)
						EndIf 
						cErros := ""
					EndIf
					SHB->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
				
				//-- 8. Carga de Recursos
				oAtuTotal:cCaption := STR0069; SysRefresh()	//"Processando carga de recursos..."
				oModel := FWLoadModel("SFCA002")
				
				SH1->(dbSetOrder(1))
				SH1->(dbSeek(xFilial("SH1")))
				While !SH1->(EOF()) .And. SH1->H1_FILIAL == xFilial("SH1")
				
					CYB->(dbSetOrder(1))
					If !CYB->(dbSeek(xFilial("CYB")+SH1->H1_CODIGO))
				
						lErroCT := .F. 
						cCT     := SH1->H1_CTRAB
						
						// Se o recurso possuir recursos alternativos/secundários com outro CT. Será preciso corrigir.
						SH2->(dbSetOrder(1))
						IF SH2->(dbSeek(xFilial('SH2')+SH1->H1_CODIGO))
							While SH2->(!EOF()) .AND. SH2->H2_RECPRIN == SH1->H1_CODIGO
							
								nPos := SH1->(Recno())
							
								if cCT != Posicione('SH1',1,xFilial('SH1')+SH2->H2_RECALTE,'H1_CTRAB')
									lRetProc[8] := .F.
									
									if SH2->H2_TIPO == 'A'
										FWrite(nHandle, STR0095 + SH2->H2_RECPRIN + STR0096 + SH2->H2_RECALTE + PULALINHA) // 'Recurso: ' ## ' possui alternativos e/ou secundários com Centro de Trabalho diferente. Alternativo: '
									Else
										FWrite(nHandle, STR0095 + SH2->H2_RECPRIN + STR0097 + SH2->H2_RECALTE + PULALINHA) // 'Recurso: ' ## ' possui alternativos e/ou secundários com Centro de Trabalho diferente. Secundário: '
									Endif
									
									lErroCT := .T.
								Endif
								
								SH1->(dbGoTo(nPos))
							
								SH2->(dbSkip())
							End
						Endif
				
						IF !lErroCT
						
							RegToMemory("SH1", .F., .F. )	
							A610IntSFC(3,@cErros,STR0070,oModel)//"Recurso"
							If AllTrim(cErros) != ""
								lRetProc[8] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						Endif
					Endif
						
					SH1->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
				
				//-- 9. Carga de Vigencias 
				oAtuTotal:cCaption := STR0092; SysRefresh()//"Processando carga de vigências de calendários..."
				oModel := FWLoadModel("SFCA002")
				
				SHI->(dbSetOrder(1))
				SHI->(dbSeek(xFilial("SHI")))
				While !SHI->(EOF()) .And. SHI->HI_FILIAL == xFilial("SHI")
					CYL->(dbSetOrder(3))
					If !CYL->(dbSeek(xFilial("CYL")+SHI->HI_RECURSO))
						A636IntSFC(3,@cErros,STR0093,oModel)//"Vigência"
						If AllTrim(cErros) != ""
							lRetProc[9] := .F.
							FWrite(nHandle, cErros)
						EndIf 
						cErros := ""
					EndIf
					SHI->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
				
				//-- 10. Carga de Ferramentas
				oAtuTotal:cCaption := STR0071; SysRefresh()	//"Processando carga de ferramentas..."
				oModel := FWLoadModel("SFCA006")
				
				SH4->(dbSetOrder(1))
				SH4->(dbSeek(xFilial("SH4")))
				While !SH4->(EOF()) .And. SH4->H4_FILIAL == xFilial("SH4")
					CYH->(DbSetOrder(1))
					If !CYH->(DbSeek(xFilial("CYH")+"2"+SH4->H4_CODIGO))
						RegToMemory("SH4", .F., .F. )
						A620IntSFC(3,@cErros,STR0072,oModel)//"Ferramenta"
						If AllTrim(cErros) != ""
							lRetProc[10] := .F.
							FWrite(nHandle, cErros)
						EndIf 
						cErros := ""
					EndIf
					SH4->(dbSkip())
				End
				oMtParci:Set(++nAtuParci); SysRefresh()	
															
				//-- 11. Carga de ordens de produção
				oAtuTotal:cCaption := STR0073; SysRefresh()	//"Processando carga das ordens de produção..." 
				oModel := FWLoadModel("SFCA100")
	
				CYQ->(dbSetOrder(1))
				cQuery := "SELECT SC2.R_E_C_N_O_ AS RECSC2 FROM " +RetSQLName("SC2") +" SC2 WHERE "
				cQuery += "SC2.D_E_L_E_T_ <> '*' AND SC2.C2_FILIAL = '" +xFilial("SC2") +"' AND "
				cQuery += "SC2.C2_DATRF = ' ' AND SC2.C2_QUJE = 0 AND "
				cQuery += "SC2.C2_NUM||SC2.C2_ITEM||SC2.C2_SEQUEN||SC2.C2_ITEMGRD NOT IN ("
						
				//-- Desconsidera OPs ja movimentadas
				cQuery += "SELECT DISTINCT SD3.D3_OP FROM " +RetSQLName("SD3") +" SD3 WHERE SD3.D_E_L_E_T_ <> '*' AND "
				cQuery += "SD3.D3_FILIAL = '" +xFilial("SD3") +"' AND SD3.D3_ESTORNO <> 'S' AND SD3.D3_OP <> ' '"
				
				cQuery += ") AND SC2.C2_NUM||SC2.C2_ITEM||SC2.C2_SEQUEN||SC2.C2_ITEMGRD NOT IN ("
				
				//-- Desconsidera OPs ja apontadas
				cQuery += "SELECT DISTINCT SH6.H6_OP FROM " +RetSQLName("SH6") +" SH6 WHERE SH6.D_E_L_E_T_ <> '*' AND "
				cQuery += "SH6.H6_FILIAL = '" +xFilial("SH6") +"' AND SH6.H6_OP <> ' '"
				
				cQuery += ") AND SC2.C2_NUM||SC2.C2_ITEM||SC2.C2_SEQUEN||SC2.C2_ITEMGRD NOT IN ("
				
				//-- Desconsidera OPs ja integradas
				cQuery += "SELECT CYQ.CYQ_NRORPO FROM " +RetSQLName("CYQ") +" CYQ WHERE "
				cQuery += "CYQ.D_E_L_E_T_ <> '*' AND CYQ_FILIAL = '" +xFilial("CYQ") +"'"
				
				cQuery += ") AND SC2.C2_PRODUTO IN ("
				
				//-- Desconsidera OPs sem operacoes
				cQuery += "SELECT DISTINCT SG2.G2_PRODUTO FROM " +RetSQLName("SG2") +" SG2 WHERE "
				cQuery += "SG2.D_E_L_E_T_ <> '*' AND SG2.G2_FILIAL = '" +xFilial("SG2") +"'"
				
				cQuery += ")"
	
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,'TOPCONN',TCGENQRY(,,cQuery),"TRBSC2",.F.,.T.)
				
				While !TRBSC2->(EOF())
					SC2->(dbGoTo(TRBSC2->RECSC2))
					RegToMemory("SC2",.F.,.F.)	
					
					lErroCT := .F.
					
					If A650IntSFC(3,1,@cErros,STR0074,oModel) //-- Gera OP//"Ordem de Produção"
						//Se o os parametros MV_APS ou MV_PCPATOR já estiverem ativos não regera SHY
						If !lProces
							If Empty(cRoteiro := SC2->C2_ROTEIRO)
								If Empty(cRoteiro := Posicione("SB1",1,xFilial("SB1")+SC2->C2_PRODUTO,"B1_OPERPAD"))
									cRoteiro := StrZero(1,TamSX3("G2_CODIGO")[1])
								EndIf
							EndIf
							
							SG2->(dbSetOrder(1)) 
							IF SG2->(dbSeek(xFilial('SG2')+SC2->C2_PRODUTO+cRoteiro))
								While SG2->(!EOF()) .AND. SG2->G2_PRODUTO == SC2->C2_PRODUTO .AND. SG2->G2_CODIGO == cRoteiro
								
									// Verificar se o recurso pertence ao centro de trabalho da operação
									if SG2->G2_CTRAB != Posicione('SH1',1,xFilial('SH1')+SG2->G2_RECURSO,'H1_CTRAB')
										lRetProc[11] := .F.
										FWrite(nHandle, STR0098 + SC2->C2_PRODUTO + STR0099 + SG2->G2_CODIGO + STR0100 + SG2->G2_OPERAC + PULALINHA) // 'Ordem de Produção: O recurso não pertence ao centro de trabalho da operação. Produto: ' ## ' Roteiro: ' ## ' Operação: '
										lErroCT := .T.
									Endif
									
									// Verificar se o roteiro não tem roteiro alternativo
									if !Empty(SG2->G2_ROTALT)
										lRetProc[11] := .F.
										FWrite(nHandle, STR0101 + SG2->G2_PRODUTO + STR0099 + SG2->G2_CODIGO + STR0100 + SG2->G2_OPERAC + PULALINHA) // 'Ordem de Produção: Existem produtos com roteiro alternativo. Produto: ' ## ' Roteiro: ' ## ' Operação: '
										lErroCT := .T.
									Endif
									
									// Verificar se os recursos alternativos/secundários são do mesmo CT
									SH3->(dbSetOrder(1))
									IF SH3->(dbSeek(xFilial('SH3')+SG2->G2_PRODUTO+SG2->G2_CODIGO+SG2->G2_OPERAC))
										While SH3->(!EOF()) .AND. SH3->H3_PRODUTO == SG2->G2_PRODUTO .AND. SH3->H3_CODIGO == SG2->G2_CODIGO .AND. SH3->H3_OPERAC == SG2->G2_OPERAC
																		
											if Empty(SH3->H3_FERRAM) .AND. SG2->G2_CTRAB != Posicione('SH1',1,xFilial('SH1')+SH3->H3_RECALTE,'H1_CTRAB')
											
												lRetProc[11] := .F.
												FWrite(nHandle, STR0102 + SG2->G2_PRODUTO + STR0099 + SG2->G2_CODIGO + STR0100 + SG2->G2_OPERAC + PULALINHA) // 'Ordem de Produção: Operação possui recurso alternativo/secundário com Centro de Trabalho diferente do CT da operação. Produto: '  ## ' Roteiro: ' ## ' Operação: '
												lErroCT := .T.
												
											Endif
										
											SH3->(dbSkip())
										End
									Endif
								
									SG2->(dbSkip())
								End
							Endif
					
							// Verificar se as operações não possuem recursos alternativos/secundários com outro Centro de Trabalho						
							IF !lErroCT
								SC2->(TAPSOperac(C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD,C2_PRODUTO,cRoteiro,C2_QUANT))
							Endif
						EndIf
						//Gera Operações, Rede Pert e Reservas 
						if !lErroCT					
							If !A650IntSFC(4,2,@cErros,STR0075,oModel) .Or. !A650IntSFC(4,3,@cErros,STR0075,oModel) //-- Gera Operacoes, Rede Pert e Reservas//STR0076//"Ordem de Produção"
								A650IntSFC(5,NIL,@cErros,STR0077,oModel) //-- Em caso de falha, exclui a ordem//"Ordem de Produção"
								If AllTrim(cErros) != ""
									lRetProc[11] := .F.
									FWrite(nHandle, cErros)
								EndIf 
								cErros := ""
							EndIf
						Else
							A650IntSFC(5,NIL,@cErros,STR0077,oModel) //-- Em caso de falha, exclui a ordem//"Ordem de Produção"
						EndIf
					Else            
						If AllTrim(cErros) != ""
							lRetProc[11] := .F.
							FWrite(nHandle, cErros)
						EndIf 
						cErros := ""
					EndIf
					TRBSC2->(dbSkip())
				End
				TRBSC2->(dbCloseArea())
				
				oMtParci:Set(++nAtuParci); SysRefresh()
				
				//Fecha o arquivo com erros da filial
				FClose(nHandle)
				//Verifica se ocorreu erro em algum processo
				If !lRetProc[1]
					cErros += STR0103 + PULALINHA // "Ocorreram erros durante a carga de Unidade de Medida"
				EndIf 
				If !lRetProc[2]
					cErros += STR0104 + PULALINHA // "Ocorreram erros durante a carga de Grupos"
				EndIf
				If !lRetProc[3]
					cErros += STR0105 + PULALINHA // "Ocorreram erros durante a carga de Armazéns"
				EndIf
				If !lRetProc[4]
					cErros += STR0106 + PULALINHA // "Ocorreram erros durante a carga de Produtos"
				EndIf
				If !lRetProc[5]
					cErros += STR0107 + PULALINHA // "Ocorreram erros durante a carga de Calendário"
				EndIf
				If !lRetProc[6]
					cErros += STR0108 + PULALINHA // "Ocorreram erros durante a carga de Exceções do Calendário"
				EndIf				          		
				If !lRetProc[7]
					cErros += STR0109 + PULALINHA // "Ocorreram erros durante a carga de Centro de Trabalho"
				EndIf      		
				If !lRetProc[8]
					cErros += STR0110 + PULALINHA // "Ocorreram erros durante a carga de Recursos"
				EndIf                                                                  
				If !lRetProc[9]
					cErros += STR0111 + PULALINHA // "Ocorreram erros durante a carga de Vigências"
				EndIf
				If !lRetProc[10]
					cErros += STR0112 + PULALINHA // "Ocorreram erros durante a carga de Ferramentas"
				EndIf
				If !lRetProc[11]
					cErros += STR0113 + PULALINHA // "Ocorreram erros durante a carga de Ordens de Produção"
				EndIf	
				
				//Se houver qualquer erro informa o arquivo criado
				If AllTrim(cErros) != ""
					cErros += PULALINHA + STR0114 + "(cargasfc-emp" + aEmpSFC[nEmp,2] + "-fil" + cCodFil + ".log)" + STR0115 
					cErros += PULALINHA
				EndIf
			EndIf
		Endif

		cLogUpdate += cErros
		If !Empty(cErros) 
			if lRet .or. !aRetorno[1] // Quando erro de não existir parâmetro, não deve apresentar esta mensagem
				cLogUpdate += STR0078 //"*IMPORTANTE: o parâmetro de controle da integração (MV_INTSFC) foi desativado para esta filial para que as ocorrências listadas sejam ajustadas. "
				cLogUpdate += STR0079 + PULALINHA //"Após estes ajustes a carga deverá ser processada novamente para esta filial."
			Endif
			
			SFCupdSX6(0, cCodFil)
		Else
			cLogUpdate += STR0080 //"*IMPORTANTE: o parâmetro de controle da integração (MV_INTSFC) foi ativado para esta filial já que a carga foi processada com sucesso."
			cLogUpdate += PULALINHA
		EndIf
		
		IF !lAutoMacao
			oMtTotal:Set(++nAtuTotal); SysRefresh()
		ENDIF	
		MsgRun(STR0082+AllTrim(cCodFil +' - ' +aEmpSFC[nEmp,6]),STR0081,/*{|| RpcClearEnv()}*/)//"Aguarde..."//"Finalizando ambiente da filial "
	EndIf
Next nEmp

RpcClearEnv()

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ MyOpenSM0   ³ Autor ³ Microsiga		    ³ Data ³07/01/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Efetua a abertura do SM0 exclusivo                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ UPD														  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MyOpenSM0(lCompart)
Local lOpen      := .F.
Local nLoop      := 0

If Select('SM0') > 0
	dbSelectArea('SM0')
	dbCloseArea()
EndIf

For nLoop := 1 To 20
	//dbUseArea(.T.,, 'SIGAMAT.EMP', 'SM0', lCompart, lCompart )
	OpenSm0(,.T.)
	If Select('SM0') > 0
		lOpen := .T.
		//dbSetIndex('SIGAMAT.IND')
		Exit
	EndIf
	Sleep(500)
Next nLoop

Return lOpen

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  |AbreEmpre ºAutor  ³ Microsiga          º Data ³  01/18/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao que abre conexao para a empresa selecionada         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ cCodEmp: Codigo da empresa								  º±±
±±º			 ³ cCodFil: Codigo da filial								  º±±
±±º			 ³ cModulo: Modulo								  			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ UPD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AbreEmpre(cCodEmp, cCodFil, cModulo)
Local lRet := .T.

if cCodEmp != SM0->M0_CODIGO

	RpcSetType(3) //-- Nao consome licensas
	RpcSetEnv(cCodEmp, cCodFil,,,cModulo) //-- Inicializa as variaveis genericas e abre a empresa/filial
Else
	dbSelectArea('SM0')
	SM0->(dbSetOrder(1))
	SM0->(dbSeek(cCodEmp+cCodFil))
	
	cFilAnt := SM0->M0_CODFIL
Endif

dbSelectArea('SX6')
SX6->(dbSetOrder(1))
IF !SX6->(dbSeek(cCodFil+"MV_INTSFC"))
	cErroDIC := STR0116 + cCodFil + '. ' + STR0117 // 'Não existe parâmetro de integração para a filial ' ## 'Crie o parâmetro MV_INTSFC e execute o CargaSFC novamente para esta filial.' 
	lRet := .F.
Endif  

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  | Concordo ºAutor  ³ Microsiga          º Data ³  01/18/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao para controlar a marcacao do checkbox				  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ lConcordo: indica se o checkbox esta marcado ou nao		  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ UPD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Concordo(lConcordo)

If lConcordo
	oBtnAvanca:lActive := .T.
Else
	oBtnAvanca:lActive := .F.
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  | GravaLog ºAutor  ³ Microsiga          º Data ³  01/26/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao para gerar o arquivo de log do update.			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ lSalvaUsu: indica se abre dialog para o usuario digitar	  º±±
±±º			 ³ cTexto: texto a ser gravado no arquivo					  º±±
±±º			 ³ lRet: indica se o log ja foi gerado pelo usuario			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ UPD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GravaLog(lSalvaUsu, cTexto, lRet)
Local cFile  := ''
Local cMask	 := STR0085//"Arquivos de Log (*.LOG) |*.log|"
Local nOcorr := 0
Default lAutoMacao := .F.

If !lRet
	If lSalvaUsu
		IF !lAutoMacao
			cFile := cGetFile(cMask, '')
		ENDIF
	EndIf	
	If Empty(cFile)
		cFile := 'SFC'+Right(CriaTrab(,.F.), 3)+'.LOG'
		Do While File(cFile)
			cFile := 'SFC'+Right(CriaTrab(,.F.), 3)+'.LOG'
		EndDo
		nOcorr := 1
	ElseIf !(Upper(Right(cFile, 3))=='.LOG')	
		cFile += '.LOG'
		nOcorr := 2
	EndIf
	
	lRet := MemoWrite(cFile, cTexto)
	
	If !lAutoMacao
		If nOcorr == 1
			Aviso('CARGASFC', STR0087 +cFile +STR0086, {'Ok'})//" no diretorio dos SXs."//"Este LOG foi salvo automaticamente como "
		ElseIf nOcorr == 2
			Aviso('CARGASFC',STR0088 +cFile +').', {'Ok'})//"A extencao '.LOG' foi adicionada ao arquivo, que foi salvo do diretorio escolhido ("
		EndIf
	EndIf
EndIf	

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SFCupdSX6 ºAutor  ³ Samantha Preima    º Data ³  17/01/17   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Atualiza parametro MV_INTSFC.                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CargaSFC                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function SFCupdSX6(nConteud)
	PutMv('MV_INTSFC',nConteud)
Return nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MarcaTodosºAutor  ³ Leonardo Quintania º Data ³  18/03/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Cria parametro MV_INTSFC.                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CargaSFC                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MarcaTodos( oBrowse )

If aScan(oBrowse:aArray, {|x| !x[1] }) > 0
	aEval(@oBrowse:aArray, {|x| x[1] := .T.})
Else
	aEval(@oBrowse:aArray, {|x| x[1] := .F.})
EndIf

oBrowse:Refresh()

Return NIL
