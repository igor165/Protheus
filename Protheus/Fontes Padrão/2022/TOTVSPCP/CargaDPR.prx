#INCLUDE 'PROTHEUS.CH'
#INCLUDE "TBICONN.CH"
#INCLUDE "FILEIO.CH" 
#INCLUDE "CARGADPR.CH"
#DEFINE PULALINHA CHR(13)+CHR(10)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ CargaDPR ³ Autor ³Andre Anjos			³ Data ³ 05/04/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Realiza carga dos cadastros no Desenvolvedor de Produtos.  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAPCP                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Main Function CARGADPR()
	Local lGravouLog	:= .F.
	Local nTela		:= 0
	Local nTamEmp		:= 0
	Local nTamUni		:= 0
	Local nTamFil		:= 0
	Local oOk			:= LoadBitmap( GetResources(), "LBOK" )
	Local oNOk			:= LoadBitmap( GetResources(), "LBNO" )
	Local oList		:= NIL
	Local cAux			:= ""
	
	Private __cInterNet	:= Nil
	Private aEmpDPR     := {}
	Private cTitulo		:= STR0001//"Carga DPR"
	Private cAcao			:= STR0002//"Carga de cadastros Desenvolvedor de Produtos"
	Private cArqEmp		:= 'SIGAMAT.EMP'
	Private cApresenta	:= ''
	Private cItemAju		:= STR0003//"Andamento da carga de cada tabela:"
	Private cTerAceite	:= ''
	Private cLogUpdate	:= ''
	Private cErroDIC	:= ''
	
	Private lConcordo		:= .F.
	
	Private nAtuTotal		:= 0
	Private nAtuParci		:= 0
	
	Private oTitulo
	Private oAcao
	
	Private oEmpAtu
	Private oSelEmp
	
	Private oMemo1
	Private oMemo2
	Private oMemo4
	
	Private oDlgUpd
	
	Private oPanel1
	Private oPanel2
	Private oPanel3
	Private oPanel4
	Private oPanel5
	
	Private oMtTotal
	Private oMtParci
	Private oItemAju
	
	Private oAtuTotal
	
	Private oAtuParc1
	Private oAtuParc2
	Private oAtuParc3
	
	Private oApresenta
	
	Private oTerAceite
	Private oChkAceite
	
	Private oBtnAvanca
	Private oBtnCancelar

	Default lAutoMacao := .F.
	
	cApresenta := STR0004 +PULALINHA//"Este programa destina-se às empresas que já utilizam o módulo de Planej. Contr. Produção (PCP) e passarão a utilizar o módulo de Desenvolvedor de Produtos (DPR)."
	
	cTerAceite := STR0005 +PULALINHA//"Antes de iniciar a carga, leia integralmente o termo a seguir. Somente depois de aceitá-lo a carga poderá ser iniciada."
	//cTerAceite += PULALINHA
	cTerAceite += Replicate("-",65) +PULALINHA
	cTerAceite += PULALINHA
	cTerAceite += STR0006 +PULALINHA//"Este programa tem como objetivo gerar os cadastros do módulo Desenvolvedor de Produtos (DPR) a partir dos cadastros já existentes no módulo de Planej. Control. Produção (PCP)."
	cTerAceite += PULALINHA
	cTerAceite += STR0007 +PULALINHA//"Os registros existentes nos cadastros do módulo de PCP serão copiados para os cadastros do módulo DPR sem sofrem qualquer alteração, em ambas as partes, durante tal processo."
	cTerAceite += PULALINHA
	cTerAceite += STR0008 +PULALINHA//"Eventuais falhas durante o processamento da carga serão registradas em um arquivo de log para visualização ao término desta rotina."
	cTerAceite += PULALINHA
	cTerAceite += STR0009 +PULALINHA//"IMPORTANTE:"
	cTerAceite += PULALINHA
	cTerAceite += STR0010 +PULALINHA//"Os cadastros contemplados neste programa de carga são:"
	cTerAceite += PULALINHA
	cTerAceite += STR0011 +PULALINHA//"- Unidades de Medida"
	cTerAceite += STR0012 +PULALINHA//"- Grupos de Produtos"
	cTerAceite += STR0013 +PULALINHA//"- Armazéns"
	cTerAceite += STR0014 +PULALINHA//"- Produtos"
	cTerAceite += STR0015 +PULALINHA//"- Recursos"
	cTerAceite += STR0016 +PULALINHA//"- Ferramentas"
	cTerAceite += STR0017 +PULALINHA+PULALINHA//"- Centros de Trabalho"
	cTerAceite += STR0080 + 'http://tdn.totvs.com/display/PROT/PSIGADPR0004+-+Compartilhamento+Tabelas+CARGADPR'// 'Antes de executar a carga, é preciso corrigir o compartilhamento das tabelas do módulo SIGADPR. Mais informações: '
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Abre o arquivo de Empresas de forma compartilhada ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !MyOpenSM0(.T.)
		Final(STR0020)//"SIGAMAT.EMP com problemas!"
	EndIf     
	SM0->(dbGotop())
	While !SM0->(EOF())
		If !SM0->(Deleted())
			cAux		:= If(Empty(SM0->M0_LEIAUTE),"FF",SM0->M0_LEIAUTE)
			nTamEmp	:= 0
			nTamUni	:= 0
			nTamFil	:= 0
			While !Empty(cAux)
				If Substr(cAux,1,1) == "E"
					nTamEmp++
				ElseIf Substr(cAux,1,1) == "U"
					nTamUni++
				ElseIf Substr(cAux,1,1) == "F"
					nTamFil++
				EndIf
				cAux := Substr(cAux,2)
			End
			aAdd(aEmpDPR, {.F.,SM0->M0_CODIGO,Substr(SM0->M0_CODFIL,1,nTamEmp),Substr(SM0->M0_CODFIL,1+nTamEmp,nTamUni),Substr(SM0->M0_CODFIL,1+nTamEmp+nTamUni,nTamFil),SM0->M0_FILIAL})
		EndIf
		SM0->(dbSkip())
	End
	
	IF !lAutoMacao
		//Primeira Tela
		DEFINE DIALOG oDlgUpd TITLE STR0021 FROM 0, 0 TO 22, 75 SIZE 550, 350 PIXEL//"SIGAPCP - Carga DPR"
		@ 000,000 BITMAP oBmp RESNAME 'Login' OF oDlgUpd SIZE 095, oDlgUpd:nBottom NOBORDER WHEN .F. PIXEL
		@ 005,070 SAY oTitulo VAR cTitulo OF oDlgUpd PIXEL FONT (TFont():New('Arial',0,-13,.T.,.T.)) //Titulo
		@ 015,070 SAY oAcao VAR cAcao OF oDlgUpd PIXEL //SubTitulo
		@ 155,140 BUTTON oBtnCancelar PROMPT STR0022 SIZE 60,14 ACTION If(oBtnCancelar:cCaption == STR0022,oDlgUpd:End(),GravaLog(.T.,cLogUpdate,@lGravouLog)) OF oDlgUpd PIXEL//STR0023//"Cancelar"
		@ 155,210 BUTTON oBtnAvanca   PROMPT STR0024  SIZE 60,14 ACTION If(oBtnAvanca:cCaption  ==STR0025,(GravaLog(.F.,cLogUpdate,lGravouLog),oDlgUpd:End()),SelePanel(@nTela)) OF oDlgUpd PIXEL//"Avançar"//'&Finalizar'
		oDlgUpd:nStyle := nOR( DS_MODALFRAME, WS_POPUP, WS_CAPTION, WS_VISIBLE )
		
		oPanel1 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )
		@ 002,005 SAY oApresenta VAR STR0026 OF oPanel1 FONT (TFont():New('Arial',0,-13,.T.,.T.)) PIXEL//"Bem-Vindo!"
		@ 015,005 GET oMemo1     VAR cApresenta  OF oPanel1 MEMO PIXEL SIZE 180,100 FONT (TFont():New('Verdana',,-12,.T.)) NO BORDER
		oMemo1:lReadOnly := .T.
		
		oPanel2 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )
		@ 002,005 SAY oTerAceite VAR STR0027 OF oPanel2 FONT (TFont():New('Arial',0,-13,.T.,.T.)) PIXEL//"Atenção:"
		@ 015,005 GET oMemo2     VAR cTerAceite  OF oPanel2 MEMO PIXEL SIZE 180,90 FONT (TFont():New('Verdana',,-12,.T.)) NO BORDER
		@ 107,107 CheckBox oChkAceite VAR lConcordo PROMPT STR0028 SIZE 80,10 Of oPanel2 PIXEL//"Sim, li e aceito o termo acima."
		oMemo2:lReadOnly   := .T.
		oChkAceite:bChange := {|| Concordo(lConcordo)}
		
		oPanel3 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )
		//Lista de Filiais
		oList := TWBrowse():New( 05, 05, 190, 110,,{"",STR0032,STR0030,STR0033,STR0031,STR0029},,oPanel3,,,,,,,,,,,,.F.,,.T.,,.F.,,,)//"Descrição"//"Empresa"//"Filial"//"Grupo"//"Unidade"
		
		oList:SetArray(aEmpDPR)
		oList:bLine := {|| {If(aEmpDPR[oList:nAT,1],oOk,oNOK),aEmpDPR[oList:nAt,2],aEmpDPR[oList:nAT,3],aEmpDPR[oList:nAT,4],aEmpDPR[oList:nAT,5],aEmpDPR[oList:nAT,6]}}
		oList:bLDblClick := {|| aEmpDPR[oList:nAt,1] := !aEmpDPR[oList:nAt,1]}
									
		oPanel4 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )
		@ 010,000 SAY oSay      	VAR STR0034 OF oPanel4 PIXEL FONT (TFont():New('Arial',0,-11,.T.,.T.))//"Atualizações Realizadas:"
		@ 050,000 SAY oItemAju	VAR cItemAju OF oPanel4 PIXEL FONT (TFont():New('Arial',0,-11,.T.,.T.))
		@ 037,000 SAY oAtuTotal	VAR Space(40) OF oPanel4 PIXEL
		@ 077,000 SAY oAtuParc1  VAR Space(40) OF oPanel4 PIXEL
		@ 087,000 SAY oAtuParc2  VAR Space(40) OF oPanel4 PIXEL
		@ 097,000 SAY oAtuParc3  VAR Space(40) OF oPanel4 PIXEL
		@ 020,000 METER oMtTotal VAR nAtuTotal TOTAL 1000 SIZE 190, 15 OF oPanel4 UPDATE PIXEL
		@ 060,000 METER oMtParci VAR nAtuParci TOTAL 1000 SIZE 190, 15 OF oPanel4 UPDATE PIXEL
		
		oPanel5 := TPanel():New( 028, 072, ,oDlgUpd, , , , , , 200, 120, .F.,.T. )
		@ 002,005 SAY oLogUpdate VAR STR0035 OF oPanel5 FONT (TFont():New('Arial',0,-13,.T.,.T.))PIXEL//"Atualizações Realizadas:"
		@ 015,005 GET oMemo4     VAR cLogUpdate  OF oPanel5 MEMO PIXEL SIZE 180,90 FONT (TFont():New('Verdana',,-12,.T.)) NO BORDER
		oMemo4:lReadOnly   := .T.
		
		ACTIVATE DIALOG oDlgUpd CENTER ON INIT SelePanel(@nTela)
	ENDIF

Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  |SelePanel ºAutor  ³Microsiga           º Data ³  01/22/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Controla a atualizacao das interfaces visuais              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ UPD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function SelePanel(nTela)
	Local lRet := .T.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza variaveis da janela principal ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oTitulo:nLeft				:= 120
	oTitulo:Refresh()
	oAcao:nLeft				:= 120
	oAcao:Refresh()
	oBmp:lVisibleControl		:= .T.
	oPanel1:lVisibleControl	:= .F.
	oPanel2:lVisibleControl	:= .F.
	oPanel3:lVisibleControl	:= .F.
	oPanel4:lVisibleControl	:= .F.
	oPanel5:lVisibleControl	:= .F.
	
	Do Case
		Case nTela == 0 //-- Apresentacao
			oPanel1:lVisibleControl := .T.
		Case nTela == 1 //-- Termo de aceite
			oPanel2:lVisibleControl := .T.
			oBtnAvanca:lActive := .F.
		Case nTela == 2 //-- Selecao da empresa
			oPanel3:lVisibleControl := .T.
			cAcao := STR0036
			oAcao:Refresh()//"Selecione as filiais para carga"
		Case nTela == 3 //-- Execucao do ajuste
		   If (aScan(aEmpDPR,{|x| x[1]}) > 0)
				cAcao := STR0037
				oAcao:Refresh()//"Execução da carga"
				oPanel4:lVisibleControl	:= .T.
				oBtnCancelar:lActive		:= .F. //-- A partir deste ponto nao pode mais ser cancelado
				oBtnAvanca:lActive		:= .F.
				AjustaTabs()
				oAtuTotal:cCaption := STR0038
				oAtuTotal:Refresh()//"Carga finalizada!"
				oAtuParc1:cCaption := STR0039
				oAtuParc1:Refresh()//"Carga das tabelas finalizada!"
				oAtuParc2:cCaption := ''
				oAtuParc2:Refresh()
				oAtuParc3:cCaption := ''
				oAtuParc3:Refresh()
				oBtnAvanca:lActive := .T.
			Else
				lRet := .F.
				oPanel3:lVisibleControl := .T.
				Alert(STR0040)//"Selecione as filiais a serem processadas"
			EndIf
		Case nTela == 4
			cAcao := STR0041
			oAcao:Refresh()//"Carga finalizada!"
			oPanel5:lVisibleControl	:= .T.
			oBtnCancelar:cCaption	:= STR0042//"&Salvar Log"
			oBtnCancelar:lActive		:= .T.
			oBtnAvanca:cCaption		:= STR0043//"&Finalizar"
	EndCase
	
	If lRet
		nTela ++
	EndIf
Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³AjustaTabs³ Autor ³ Andre Anjos			³ Data ³06/01/09  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao de processamento da carga das tabelas               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ CARGADPR                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AjustaTabs()
	Local nX			:= 0
	Local nI			:= 0
	Local nEmp			:= 0
	Local nIniEmp		:= 0
	Local aCalend		:= {}
	Local aErros		:= {}
	Local aDPRExc		:= {,}
	Local cRoteiro		:= ""
	Local cGrupo		:= ""
	Local cCodFil		:= ""
	Local cCodEmp		:= ""
	Local lRet			:= .T.
	//Retorno de cada processo individualmente
	Local lRetProc		:= {,,,,,,}
	Local cErros
	Local nHandle
	Local oModel

	Private cModulo		:= "PCP"
	Private lMsFinalAut	:= .T.
	Private nModulo		:= 10 //-- SIGAPCP
	Private oMemoLog    := NIL
	Private cErroSX6    := ''
	Default lAutoMacao  := .F.

	nAtuTotal		:= 0

	IF !lAutoMacao
		oMtTotal:nTotal	:= 0

		aEval(aEmpDPR,{|x| If(x[1],oMtTotal:nTotal++,NIL)})
	ENDIF

	cLogUpdate += STR0045 +DtoC(Date()) +STR0044 +SubStr(Time(), 1, 5) +PULALINHA//", as "//">> Carga iniciada em "
	cLogUpdate += PULALINHA
	cLogUpdate += STR0046  +PULALINHA//"LOG da carga DPR"
	cLogUpdate += '======================'+PULALINHA

	For nEmp := 1 to Len(aEmpDPR)
		//-- Verifica se a filial deve ser atualizada -------
		If aEmpDPR[nEmp,1]
		
			cCodFil := aEmpDPR[nEmp,3]+aEmpDPR[nEmp,4]+aEmpDPR[nEmp,5]

			nHandle := FCreate("\cargadpr-emp" + aEmpDPR[nEmp,2] + "-fil" + cCodFil + ".log")

			IF !lAutoMacao
				oAtuParc3:cCaption := STR0047 +AllTrim(cCodFil +' - ' +aEmpDPR[nEmp,6])//"Executando carga para a filial: "
				MsgRun(STR0049 +AllTrim(cCodFil + ' - ' + aEmpDPR[nEmp,6]) + '...',STR0048,{|| CursorWait(), lRet := AbreEmpre(aEmpDPR[nEmp,2], cCodFil, cModulo) ,CursorArrow()})//"Aguarde"//"Iniciando ambiente para a filial "
			ENDIF

			cErros	:= ""
			
			cLogUpdate += PULALINHA
			cLogUpdate += STR0050 + AllTrim( cCodFil + ' - ' +aEmpDPR[nEmp,6] ) +":"//"Ocorrências registradas na filial "
			cLogUpdate += PULALINHA			
			
			If lRet 
				If cCodEmp != aEmpDPR[nEmp,2]
					cCodEmp := aEmpDPR[nEmp,2]

					IF !lAutoMacao
						aRetorno := DPRExclusi(.T.,aEmpDPR[nEmp,2],cCodFil) 
						If !aRetorno[1]	
							lRet := .F.
							cErroDIC := aRetorno[2]					
						EndIf
					ENDIF
					
					//-- Desloga e loga para atualizar compartilhamento de tabelas
					RpcClearEnv()
					AbreEmpre(aEmpDPR[nEmp,2],cCodFil,cModulo)
					
					cCodEmp:= aEmpDPR[nEmp,2]
				ElseIf !lAutoMacao
					IF !aRetorno[1]
						cErroDIC := aRetorno[2]
						lRet := .F.
					ENDIF
				Endif				
			EndIf
			
			IF !lRet
				cLogUpdate += cErroDIC + PULALINHA 
			Else
				IF !lAutoMacao
					DPRupdSX6(1, cCodFil)
				ENDIF
						
				aCopy( {.T.,.T.,.T.,.T.,.T.,.T.,.T.}, lRetProc )
				
				lMsFinalAuto	:= .F.
				lMsHelpAuto	:= .F.
				
				nAtuParci			:= 0
				IF !lAutoMacao
					oMtParci:nTotal	:= 7
					
					//Se não houve falha na validação das tabelas, executa os cargas
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza variaveis da janela principal ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					oAtuTotal:cCaption := STR0051 +AllTrim(cCodFil +' - ' +aEmpDPR[nEmp,6]); oAtuTotal:Refresh()//"Filial: "

					//-- 1. Carga de UM
					oAtuTotal:cCaption := STR0052//"Processando carga de unidades de medida..."
				ENDIF
				SysRefresh()
				IF !lAutoMacao
					oModel := FWLoadModel("SFCA023")
				
					SAH->(dbSetOrder(1))
					SAH->(dbSeek(xFilial("SAH")))
					While !SAH->(EOF()) .And. SAH->AH_FILIAL == xFilial("SAH")
						CZ9->(dbSetOrder(1))
						If !CZ9->(dbSeek(xFilial("CZ9")+SAH->AH_UNIMED))
							RegToMemory("SAH", .F., .F. )
							Q30IntSFC(3,@cErros,STR0053,oModel)//"Unidade de Medida"
							If AllTrim(cErros) != ""
								lRetProc[1] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						EndIf
						SAH->(dbSkip())
					End
					nAtuParci++
					oMtParci:Set(nAtuParci)
					SysRefresh()

					//-- 2. Carga de Grupos
					oAtuTotal:cCaption := STR0054//"Processando carga de grupos de estoque..."
					SysRefresh()
					oModel := FWLoadModel("SFCA021")

					SBM->(dbSetOrder(1))
					SBM->(dbSeek(xFilial("SBM")))
					While !SBM->(EOF()) .And. SBM->BM_FILIAL == xFilial("SBM")
						CY7->(dbSetOrder(1))
						If !CY7->(dbSeek(xFilial("CY7")+SBM->BM_GRUPO))
							RegToMemory("SBM", .F., .F. )
							A035IntDPR(3,@cErros,STR0055,oModel)//"Grupo de Estoque"
							If AllTrim(cErros) != ""
								lRetProc[2] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						EndIf
						SBM->(dbSkip())
					End
					nAtuParci++
					oMtParci:Set(nAtuParci)
					SysRefresh()

					//-- 3. Carga de Armazens
					oAtuTotal:cCaption := STR0056//"Processando carga de armazéns..."
					SysRefresh()
					NNR->(dbSetOrder(1))
					NNR->(dbSeek(xFilial("NNR")))
					While !NNR->(EOF()) .And. NNR->NNR_FILIAL == xFilial("NNR")
						CZX->(dbSetOrder(1))
						If !CZX->(dbSeek(xFilial("CZX")+NNR->NNR_CODIGO))
							RegToMemory("NNR", .F., .F. )
							A045IntSFC(3,@cErros,STR0057)//"Armazém"
							If AllTrim(cErros) != ""
								lRetProc[3] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						EndIf
						NNR->(dbSkip())
					End
					nAtuParci++
					oMtParci:Set(nAtuParci)
					SysRefresh()

					//-- 4. Carga de Produtos
					oAtuTotal:cCaption := STR0058//"Processando carga de produtos..."
					SysRefresh()
					oModel := FWLoadModel("SFCC101")
					SB1->(dbSetOrder(1))
					SB1->(dbSeek(xFilial("SB1")))
					While !SB1->(EOF()) .And. SB1->B1_FILIAL == xFilial("SB1")
						CZ3->(dbSetOrder(1))
						If !CZ3->(dbSeek(xFilial("CZ3")+SB1->B1_COD))
							RegToMemory("SB1", .F., .F. )
							A010IntSFC(3,@cErros,STR0059,oModel)//"Produto"
							If AllTrim(cErros) != ""
								lRetProc[4] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						EndIf
						SB1->(dbSkip())
					End
					nAtuParci++
					oMtParci:Set(nAtuParci)
					SysRefresh()

					//-- 5. Carga de centro de trabalho
					oAtuTotal:cCaption := STR0060//"Processando carga de centros de trabalho..."
					SysRefresh()
					oModel := FWLoadModel("SFCA001")
					SHB->(dbSetOrder(1))
					SHB->(dbSeek(xFilial("SHB")))
					While !SHB->(EOF()) .And. SHB->HB_FILIAL == xFilial("SHB")
						CYI->(dbSetOrder(1))
						If !CYI->(dbSeek(xFilial("CYI")+SHB->HB_COD))
							RegToMemory("SHB", .F., .F. )
							A770IntSFC(3,@cErros,STR0061,oModel)//"Centro de Trabalho"
							If AllTrim(cErros) != ""
								lRetProc[5] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						EndIf
						SHB->(dbSkip())
					End
					nAtuParci++
					oMtParci:Set(nAtuParci)
					SysRefresh()

					//-- 6. Carga de Recursos
					oAtuTotal:cCaption := STR0062//"Processando carga de recursos..."
					SysRefresh()
					oModel := FWLoadModel("SFCA002")
					SH1->(dbSetOrder(1))
					SH1->(dbSeek(xFilial("SH1")))
					While !SH1->(EOF()) .And. SH1->H1_FILIAL == xFilial("SH1")
						CYB->(dbSetOrder(1))
						If !CYB->(dbSeek(xFilial("CYB")+SH1->H1_CODIGO))
							RegToMemory("SH1", .F., .F. )
							A610IntSFC(3,@cErros,STR0063,oModel)//"Recurso"
							If AllTrim(cErros) != ""
								lRetProc[6] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						EndIf
						SH1->(dbSkip())
					End
					nAtuParci++
					oMtParci:Set(nAtuParci)
					SysRefresh()

					//-- 7. Carga de Ferramentas
					oAtuTotal:cCaption := STR0064//"Processando carga de ferramentas..."
					SysRefresh()
					oModel := FWLoadModel("SFCA006")
					SH4->(dbSetOrder(1))
					SH4->(dbSeek(xFilial("SH4")))
					While !SH4->(EOF()) .And. SH4->H4_FILIAL == xFilial("SH4")
						CYH->(DbSetOrder(1))
						If !CYH->(DbSeek(xFilial("CYH")+"2"+SH4->H4_CODIGO))
							RegToMemory("SH4", .F., .F. )
							A620IntSFC( 3, @cErros, STR0065, oModel )//"Ferramenta"
							If AllTrim(cErros) != ""
								lRetProc[7] := .F.
								FWrite(nHandle, cErros)
							EndIf 
							cErros := ""
						EndIf
						SH4->( dbSkip() )
					End
				ENDIF
				nAtuParci++
				IF !lAutoMacao
					oMtParci:Set(nAtuParci)
				ENDIF
				SysRefresh()
				//Fecha o arquivo com erros da filial
				FClose(nHandle)
				//Verifica se ocorreu erro em algum processo
				If !lRetProc[1]
					cErros += "Ocorreram erros durante a carga de Unidade de Medida" + PULALINHA
				EndIf
				If !lRetProc[2]
					cErros += "Ocorreram erros durante a carga de Grupos" + PULALINHA
				EndIf
				If !lRetProc[3]
					cErros += "Ocorreram erros durante a carga de Armazéns" + PULALINHA
				EndIf
				If !lRetProc[4]
					cErros += "Ocorreram erros durante a carga de Produtos" + PULALINHA
				EndIf
				If !lRetProc[5]
					cErros += "Ocorreram erros durante a carga de Centro de Trabalho" + PULALINHA
				EndIf
				If !lRetProc[6]
					cErros += "Ocorreram erros durante a carga de Recursos" + PULALINHA
				EndIf
				If !lRetProc[7]
					cErros += "Ocorreram erros durante a carga de Ferramentas" + PULALINHA
				EndIf
				//Se houver qualquer erro informa o arquivo criado
				If AllTrim(cErros) != ""
					cErros += PULALINHA + "Verifique as ocorrências de erro no arquivo (cargadpr-emp" + aEmpDPR[nEmp,2] + "-fil" + cCodFil + ".log) e realize os ajustes."
				EndIf				
			EndIf

			cLogUpdate += cErros
			If !Empty(cErros)
					
				If lRet
					cLogUpdate += PULALINHA + STR0066//"*IMPORTANTE: o parâmetro de controle da integração (MV_INTDPR) foi desativado para esta filial para que as ocorrências listadas sejam ajustadas. "
					cLogUpdate += STR0067//"Após estes ajustes a carga deverá ser processada novamente para esta filial."
					cLogUpdate += PULALINHA
				EndIf
				DPRupdSX6( 0, cCodFil )
			Else
				cLogUpdate += STR0068//"*IMPORTANTE: o parâmetro de controle da integração (MV_INTDPR) foi ativado para esta filial já que a carga foi processada com sucesso."
				cLogUpdate += PULALINHA
			EndIf

			MsgRun( STR0070 + AllTrim( cCodFil + " - " + aEmpDPR[nEmp,6] ), STR0069, { || RpcClearEnv() } )//"Aguarde..."//"Finalizando ambiente da filial "
		EndIf
	Next nEmp
Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ MyOpenSM0   ³ Autor ³ Microsiga		    ³ Data ³07/01/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Efetua a abertura do SM0 exclusivo                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ UPD														  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MyOpenSM0(lCompart)
	Local lOpen      := .F.
	Local nLoop      := 0
	
	If Select('SM0') > 0
		dbSelectArea('SM0')
		dbCloseArea()
	EndIf
	
	For nLoop := 1 To 20
		//dbUseArea(.T.,, 'SIGAMAT.EMP', 'SM0', lCompart, lCompart )
		OpenSm0(,.T.)
		If Select('SM0') > 0
			lOpen := .T.
			//dbSetIndex('SIGAMAT.IND')
			Exit
		EndIf
		Sleep(500)
	Next nLoop
Return lOpen

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  |AbreEmpre ºAutor  ³ Microsiga          º Data ³  01/18/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao que abre conexao para a empresa selecionada         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ cCodEmp: Codigo da empresa								  º±±
±±º			 ³ cCodFil: Codigo da filial								  º±±
±±º			 ³ cModulo: Modulo								  			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ UPD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AbreEmpre(cCodEmp, cCodFil, cModulo)
	Local lRet := .T.
	//RpcClearEnv()
	RpcSetType(3) //-- Nao consome licensas
	RpcSetEnv(cCodEmp, cCodFil,,,cModulo) //-- Inicializa as variaveis genericas e abre a empresa/filial
	IF SuperGetMV("MV_IFATDPR",.F.,.F.)
		ValidFATDP()
	Endif
	
	dbSelectArea('SX6')
	SX6->(dbSetOrder(1))
	IF !SX6->(dbSeek(cCodFil+"MV_INTDPR"))
		cErroDIC := STR0078 + cCodFil + '. ' + STR0079 // 'Não existe parâmetro de integração para a filial ' ## 'Crie o parâmetro MV_INTDPR e execute o CargaDPR novamente para esta filial.'
		lRet := .F.
	Endif
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  | Concordo ºAutor  ³ Microsiga          º Data ³  01/18/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao para controlar a marcacao do checkbox				  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ lConcordo: indica se o checkbox esta marcado ou nao		  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ UPD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Concordo(lConcordo)
	If lConcordo
		oBtnAvanca:lActive := .T.
	Else
		oBtnAvanca:lActive := .F.
	EndIf
Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  | GravaLog ºAutor  ³ Microsiga          º Data ³  01/26/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao para gerar o arquivo de log do update.			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ lSalvaUsu: indica se abre dialog para o usuario digitar	  º±±
±±º			 ³ cTexto: texto a ser gravado no arquivo					  º±±
±±º			 ³ lRet: indica se o log ja foi gerado pelo usuario			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ UPD                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GravaLog(lSalvaUsu, cTexto, lRet)
	Local cFile  := ''
	Local cMask	 := STR0073//"Arquivos de Log (*.LOG) |*.log|"
	Local nOcorr := 0
	Default lAutoMacao := .F.
	
	If !lRet
		If lSalvaUsu
			IF !lAutoMacao
				cFile := cGetFile(cMask, '')
			ENDIF
		EndIf	
		If Empty(cFile)
			cFile := 'DPR'+Right(CriaTrab(,.F.), 3)+'.LOG'
			Do While File(cFile)
				cFile := 'DPR'+Right(CriaTrab(,.F.), 3)+'.LOG'
			EndDo
			nOcorr := 1
		ElseIf !(Upper(Right(cFile, 3))=='.LOG')	
			cFile += '.LOG'
			nOcorr := 2
		EndIf
		
		lRet := MemoWrite(cFile, cTexto)
		
		IF !lAutoMacao
			If nOcorr == 1
				Aviso('CARGADPR', STR0075 +cFile +STR0074, {'Ok'})//" no diretorio dos SXs."//"Este LOG foi salvo automaticamente como "
			ElseIf nOcorr == 2
				Aviso('CARGADPR',STR0076 +cFile +').', {'Ok'})//"A extencao '.LOG' foi adicionada ao arquivo, que foi salvo do diretorio escolhido ("
			EndIf
		ENDIF
	EndIf
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DPRupdSX6 ºAutor  ³ Samantha Preima    º Data ³  17/01/17   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Atualiza parametro MV_INTDPR.                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CargaDPR                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function DPRupdSX6(nConteud)
	putMv('MV_INTDPR',nConteud)
Return nil
