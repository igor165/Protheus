#include "PROTHEUS.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±f
±±³Fun‡„o    ³ TkGeraNF ³ Autor ³ Marcelo Kotaki        ³ Data ³ 18/08/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera Notas a Partir do Televenda                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ TkGeraNF(ExpN1,ExpA1,ExpC1,ExpA2)                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 := Numero da Opcao da rotina                         ³±±
±±³          ³ ExpA1 := Array com o Numero do Orc. e o Numero do Pedido   ³±±
±±³          ³ ExpC1 := Administradora financeira quando utilizado TEF.   ³±±
±±³          ³ ExpA2 := Parcelas da condicao de pagamento.                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATMK                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ANALISTA  ³ DATA   ³ BOPS ³MOTIVO DA ALTERACAO                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Tatiana   ³03/10/06³105113³Alteracao na chamada da variavel lECF para  ³±±
±±³          ³        ³      ³chamada da pergunta relacionada ao cupom.   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function TkGeraNF(nOpc,aPedido,cAdm,aParcelas)

Local lRet			:= .F.				// Retorno da funcao 
Local aPvlNfs	 	:= {}				// Array com o registro do SC9
Local nPrcVen	 	:= 0				// Preco de venda
Local cSerie		:= ""				// Serie da Nota
Local cSerieId		:= ""
Local cNota  	 	:= ""				// Nota	
Local lMostraCtb 	:= .F.				// Parametros do MT460A
Local lAglutCtb  	:= .F.				// Parametros do MT460A
Local lCtbOnLine 	:= .F.				// Parametros do MT460A
Local lCtbCusto  	:= .F.				// Parametros do MT460A
Local lReajuste  	:= .F.				// Parametros do MT460A
Local nCalAcrs   	:= 1				// Tipo de Acrescimo financeiro	
Local nArredPrcLis 	:= 1				// Tipo de arrendondamento
Local lAtuSA7      	:= .F.				// Atualiza Amarracao Cliente x Produto
Local lECF         	:= .F.				// Emite cupom fiscal
Local aSUASave      := {}				// Salva a area atual do SUA
Local nReg          := 0 				// Numero do registro do E1 para baixa.
Local aNFs			:= {}				// Array com os RECNOS do SC9 que devem gerar NF
Local aRems			:= {}				// Array com os RECNOS do SC9 que devem gerar REMITO
Local aPedidos		:= {}				// Array com os PEDIDOS E RECNOS DO SC9 envolvidos
Local aLockSC5		:= {}				// Array com os RECNOS do SC5 LOCKADOS
Local nX			:= 0				// Contador
Local aParams		:= {}
Local cTipoDoc		:= "NF."
Local aNotas		:= {}
Local lBlqCred		:= .F.				// Flag para saber se houve bloqueio de credito na geracao do SC9
Local lBlqEst		:= .F.				// Flag para saber se houve bloqueio de estoque na geracao do SC9
Local lBlq			:= .F.				// Flag para saber se houve bloqueio por regra ou qualquer outro motivo que impediu a geração do SC9
Local lP21     	    := .F. // Existe pergunta 21 do grupo MT460A   
Local dDataMoe 		:= dDataBase
Local dDataMoe 		:= dDataBase
Local cTpNrNfs  	:= SuperGetMV("MV_TPNRNFS")	//Utilizado pela Sx5NumNota() de onde sera controlado o numero da NF  1=SX5; 2=SXE/SXF; 3=SD9
Local cTkSerNF      := Alltrim(SuperGetMV("MV_TKSERNF",.F.,""))	//Serie que sera utilizada na geracao da Nota Fiscal pela rotina do Televendas  

Private cMarcaSC9 := GetMark(,'SC9','C9_OK')

DbSelectarea("SE4")
DbSetOrder(1)     

DbSelectarea("SB1")
DbSetOrder(1)     

DbSelectarea("SB2")
DbSetOrder(1)     
		
DbSelectarea("SF4")
DbSetOrder(1)     

DbSelectarea("SC5")
DbSetOrder(1)							// Numero do Pedido
MsSeek( xFilial("SC5")+aPedido[1][2] )		

DbSelectarea("SC6")
DbSetOrder(1)							// Numero do Pedido
MsSeek( xFilial("SC6")+aPedido[1][2] )	

DbSelectarea("SC9")
DbSetOrder(1)                           // Numero+Item                                      		
If MsSeek( xFilial("SC9")+SC6->C6_NUM+SC6->C6_ITEM ) 
	While SC9->(!Eof()) .AND. (SC9->C9_FILIAL == xFilial("SC9")) .AND. (SC9->C9_PEDIDO == aPedido[1][2])
		
		If cPaisLoc == "BRA"
			SC6->(MsSeek( xFilial("SC6")+SC9->C9_PEDIDO+SC9->C9_ITEM ))	// Numero do Pedido
	
			SE4->(MsSeek(xFilial("SE4")+SC5->C5_CONDPAG))  	    		// Condicao de pagamento
			
			SB1->(MsSeek(xFilial("SB1")+SC6->C6_PRODUTO))    			// Produto
			
			SB2->(MsSeek(xFilial("SB2")+SC6->C6_PRODUTO+SC6->C6_LOCAL))	// Produto + Local
			
			SF4->(MsSeek(xFilial("SF4")+SC6->C6_TES))   				// Tes
		
			nPrcVen := SC9->C9_PRCVEN
			If ( SC5->C5_MOEDA != 1 )
				nPrcVen := xMoeda(nPrcVen,SC5->C5_MOEDA,1,dDataBase)
			Endif
			
			If !lUsaTef .OR. !(Alltrim(SE4->E4_FORMA) $ "CC/CD")
				If (SC9->C9_BLEST <> "10") .AND. !Empty(SC9->C9_BLEST)
				    lBlqEst := .T.
				    Exit
				Endif
				
				If (SC9->C9_BLCRED <> "10") .AND. !Empty(SC9->C9_BLCRED)
					lBlqCred := .T.
					Exit
				Endif
			Endif
			
			AAdd(aPvlNfs,{	SC9->C9_PEDIDO,;
							SC9->C9_ITEM,;
							SC9->C9_SEQUEN,;
							SC9->C9_QTDLIB,;
							nPrcVen,;
							SC9->C9_PRODUTO,;
							.F.,;
							SC9->(RecNo()),;
							SC5->(RecNo()),;
							SC6->(RecNo()),;
							SE4->(RecNo()),;
							SB1->(RecNo()),;
							SB2->(RecNo()),;
							SF4->(RecNo())})
		Else
			/*
			  Verifica se o SC9 pode ser faturado (Se nao esta bloqueado e se pode ser lockado)
			  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			  ³Parametros³ExpC1: Marca para o SC9                                     ³
			  ³          ³ExpA2: Array com os RECNOS do SC9 que devem gerar NF        ³
			  ³          ³ExpA3: Array com os RECNOS do SC9 que devem gerar REMITO    ³
			  ³          ³ExpA4: Array com os PEDIDOS E RECNOS DO SC9 envolvidos      ³
			  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			*/
			lRet :=	SC9->(A461LckSC9(cMarcaSC9,@aNFs,@aRems,@aPedidos,.T.))
		Endif
	
		SC9->(DbSkip())
	End
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se não tem SC9 houve algum bloqueio ao gerar o registro.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lBlq := .T.
EndIf

If cPaisLoc == "BRA"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³So continua se nao houver itens no SC9 bloqueados³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lBlqCred .AND. !lBlqEst .AND. !lBlq
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ mv_par01 Mostra Lan‡.Contab ?  Sim/Nao						  ³
		//³ mv_par02 Aglut. Lan‡amentos ?  Sim/Nao						  ³
		//³ mv_par03 Lan‡.Contab.On-Line?  Sim/Nao						  ³
		//³ mv_par04 Contb.Custo On-Line?  Sim/Nao						  ³
		//³ mv_par05 Reaj. na mesma N.F.?  Sim/Nao						  ³
		//³ mv_par06 Taxa deflacao ICMS ?  Numerico						  ³
		//³ mv_par07 Metodo calc.acr.fin?  Taxa defl/Dif.lista/% Acrs.ped ³
		//³ mv_par08 Arred.prc unit vist?  Sempre/Nunca/Consumid.final 	  ³
		//³ mv_par09 Agreg. liberac. de ?  Caracter						  ³
		//³ mv_par10 Agreg. liberac. ate?  Caracter						  ³
		//³ mv_par11 Aglut.Ped. Iguais  ?  Sim/Nao						  ³
		//³ mv_par12 Valor Minimo p/fatu?								  ³
		//³ mv_par13 Transportadora de  ?                                 ³
		//³ mv_par14 Transportadora ate ?								  ³
		//³ mv_par15 Atualiza Cli.X Prod?								  ³
		//³ mv_par16 Emitir             ?  Nota / Cupom	Fiscal			  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Pergunte("MT460A",.T.)
	   	If lP21
			dDataMoe := MV_PAR21
		Endif		
		lMostraCtb	:= IIF(mv_par01==1,.T.,.F.)
		lAglutCtb	:= IIF(mv_par02==1,.T.,.F.)
		lCtbOnLine	:= IIF(mv_par03==1,.T.,.F.)
		lCtbCusto	:= IIF(mv_par04==1,.T.,.F.)
		lReajuste	:= IIF(mv_par05==1,.T.,.F.)
		lECF		:= IIF(mv_par16==1,.F.,.T.)
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Quando for utilizado o controle de numeração do doc. de sáida pela  ³
		//³ tabela SD9, não será apresentado a janela para selecionar a série e ³
		//³ será sempre utilizado a série configurada no parâmetro MV_TKSERNF.  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cTpNrNfs == "3" .And. !Empty(cTkSerNF) .And. ValType(cTkSerNF) == "C"
			cSDoc := SerieNFID("SF2", 3, "F2_SERIE")
			cSerie := PADR(If(Substr(cTkSerNF,1,1)=="&",&(Substr(cTkSerNF,2,Len(cTkSerNF))),cTkSerNF),TamSX3(cSDoc)[1])
			lRet   := .T.
		ElseIf ( Type("lTk271Auto") <> "U" .And. lTk271Auto )
			If !Empty(cTkSerNF) .And. ValType(cTkSerNF) == "C"
				cSDoc  := SerieNFID("SF2", 3, "F2_SERIE")
				cSerie := PADR(If(Substr(cTkSerNF,1,1)=="&",&(Substr(cTkSerNF,2,Len(cTkSerNF))),cTkSerNF),GetSx3Cache(cSDoc,"X3_TAMANHO"))
				lRet   := .T.
			EndIf
		Else
			lRet := Sx5NumNota(@cSerie,cTpNrNfs,,,,@cSerieId, dDataBase)
		EndIf
		If lRet .And. Empty(cSerieId)
			cSerieId := cSerie
		EndIf
	Else

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Help Bloqueio de crédito³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lBlqCred 
			Help("  ",1,"TMKBLQCRE")
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Help Bloqueio de Estoque³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lBlqEst
			Help("  ",1,"TMKBLQEST")
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Help Bloqueio qualquer.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lBlq
			Help("  ",1,"TMKBLQ")
		EndIf
		
		lRet := .F.	
	Endif          
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se houve alguma incosistencia ou item bloqueado³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lRet
	Return(lRet)
Endif	
	
If cPaisLoc == "BRA"
	If (Alltrim(SUA->UA_VENDTEF) == "S")

		/*
		ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Parametros³ExpA1: Array com os itens a serem gerados                   ³
		³          ³ExpC2: Serie da Nota Fiscal                                 ³
		³          ³ExpL3: Mostra Lct.Contabil                                  ³
		³          ³ExpL4: Aglutina Lct.Contabil                                ³
		³          ³ExpL5: Contabiliza On-Line                                  ³
		³          ³ExpL6: Contabiliza Custo On-Line                            ³
		³          ³ExpL7: Reajuste de preco na nota fiscal                     ³
		³          ³ExpN8: Tipo de Acrescimo Financeiro                         ³
		³          ³ExpN9: Tipo de Arredondamento                               ³
		³          ³ExpLA: Atualiza Amarracao Cliente x Produto                 ³
		³          ³ExplB: Cupom Fiscal                                         ³
		³          ³ExpCC: Numero do Embarque de Exportacao                     ³
		³          ³ExpBD: Code block para complemento de atualizacao dos titu- ³
		³          ³       los financeiros.                                     ³
		ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/
		
		cNota := MaPvlNfs(aPvlNfs,cSerie,lMostraCtb,lAglutCtb,lCtbOnLine,lCtbCusto,lReajuste,nCalAcrs,nArredPrcLis,lAtuSA7,lECF,,{|nReg|TkBxTit(nReg)},,,,dDataMoe)
	Else
		cNota := MaPvlNfs(aPvlNfs,cSerie,lMostraCtb,lAglutCtb,lCtbOnLine,lCtbCusto,lReajuste,nCalAcrs,nArredPrcLis,lAtuSA7,lECF,,,,,,dDataMoe)
	Endif
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tenta Travar o SC5.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Parametros³ExpA1: Array com os PEDIDOS E RECNOS DO SC9 envolvidos      ³
		³          ³ExpA2: Array com os RECNOS do SC9 que devem gerar NF        ³
		³          ³ExpA3: Array com os RECNOS do SC9 que devem gerar REMITO    ³
		³          ³ExpA4: Array com os RECNOS do SC5 LOCKADOS                  ³
		ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/	
		lRet :=	A461LckSC5(aPedidos,@aNFs,@aRems,@aLockSC5,lRet)
	Endif
	
	If lRet .AND. Len(aNfs) > 0 .AND. Pergunte('MT468C',.T.)
		SetInvert(.F.)
		cMarcaSC9 := ThisMark()
		aParams	:=	{	SPACE(Len(SC9->C9_PEDIDO))	,Replicate('z',Len(SC9->C9_PEDIDO)),; 	//Pedido de - ate
						SPACE(Len(SA1->A1_COD))		,Replicate('z',Len(SA1->A1_COD))   ,; 	//Cliente de - ate
						SPACE(Len(SA1->A1_LOJA))	,Replicate('z',Len(SA1->A1_LOJA))  ,; 	//Loja de - ate
						SPACE(Len(SB1->B1_GRUPO))	,Replicate('z',Len(SB1->B1_GRUPO)) ,; 	//Grupo de - ate
						SPACE(Len(SA1->A1_AGREG))	,Replicate('z',Len(SA1->A1_AGREG)) ,;  //Agregador de - ate
						mv_par01	,       mv_par02,                         mv_par03  ,; 	//lDigita # lAglutina # lGeraLanc
						2			,                                                    ; 	//Trazer pedidos marcados ? 1 - Sim;2 - Nao
						mv_par04    ,                                                    ;  //Atualiza vinculo  ? 1 - Sim;2 - Nao                
						1           ,                                                    ;  //Aglutina por  ? 1 - Pedido;2 - Grupo;3 - Agregador;4 - Cliente;5 - Nao aglutina
						0			,  	                                                 ;  //Valor Minimo 
						2           ,                                                    ;  //Fatura Proforma  ?   1 - Sim;2 - Nao
						SPACE(Len(SC5->C5_TRANSP))	,Replicate('z',Len(SC5->C5_TRANSP)),;	//Transportadora de - ate
						2			, 													 ;  //Reajusta na mesma nota  ?   1 - Sim;2 - Nao
						1           ,                                                    ;  //Fatura Pedido pela ?   1 - Moeda do pedido;2 - Moeda selecionada     
		                1           ,                                                    ;  //Fatura pela Moeda  ?   1 - Moeda 1;2 - Moeda 2;3 - Moeda 3;4 - Moeda 4;5 - Moeda 5     
						1           ,													 ;	//Contabiliza por ?   1 - Nota;2 - Total das Notas         
						1           }														//Tipo Pedido ?   1 - Normal;2 - Beneficiamento     
						

		MsAguarde({|| aNotas	:=	A468nFatura("SC9",aParams,@aNFs,,.T.)},"Preparando",'Generando facturas',.F.)
		
		If Len(aNotas) > 0
			cSerie		:=	aNotas[1][1]
			cNota		:=	aNotas[1][2]
			cTipoDoc	:=	"NF."
		Endif
		
	ElseIf lRet .AND. Len(aREMS) > 0 .AND. Pergunte('MT462R',.T.)
		aParams	:=	{MV_PAR01,;		// Mostra Lancamentos
					 MV_PAR02,;    	// Aglutina Lancamentos
					 MV_PAR03,;  	// Lancamentos On-Line
					 MV_PAR04,;		// Aglutina Pedidos
		             1,;			// Fatura pedido pela?1 - Moeda Pedido  / 2- Moeda Selecionada
					 1}				// Fatura pela Moeda ?1 - Moeda 1  / 2- - Moeda 2 /...
		SetInvert(.F.)
		MsAguarde({|| 	aNotas	:=	A462ANGera(Nil,cMarcaSC9,.T.,aRems,.F.,aParams)},"Preparando",'Generando Envios',.F.)
		If Len(aNotas) > 0
			cSerie		:=	aNotas[1][1]
			cNota		:=	aNotas[1][2]
			cTipoDoc	:=	"RM."
		Endif
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Destrava o SC5    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX:=1 TO LEN(aLockSC5)
		SC5->(MsGoto(aLockSC5[nX]))
		SC5->(MsUnLock())
	Next nX
Endif

If !Empty(cNota)
	DbSelectArea("SUA")
	DbSetorder(1)
	If MsSeek(xFilial("SUA")+aPedido[1][1])		// Numero do Orcamento
		RecLock("SUA",.F.)
		Replace UA_DOC    With cNota
		SerieNFID("SUA", 1, "UA_SERIE",,,,cSerieId)
		Replace UA_STATUS With cTipoDoc
		Replace UA_EMISNF With dDatabase
		MsUnLock()
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Grava SE1 quando a venda for efetuada com o uso do TEF.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(SUA->UA_DOC) .AND. (Alltrim(SUA->UA_VENDTEF) == "S")
	aSUASave:= GetArea()
	TkGeraE1(.T.,cAdm,aParcelas)
	RestArea(aSUASave)
Endif

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ TkGeraE1 ³ Autor ³ Rafael M. Quadrotti   ³ Data ³ 12/04/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera SE1 quando a venda for efetuada vai TEF               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ TkGeraE1(ExpL1,ExpC1,ExpA1)  		                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 := Parametro para o RecLock (Gravar ou Alterar)      ³±±
±±³          ³ ExpC1 := Administradora financeira                         ³±±
±±³          ³ ExpA1 := Parcelas da condicao de pagamento                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATMK                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function TkGeraE1(lGrava,cAdm,aParcelas)

Local cCodCliFin	:= ""							// Codigo do Cliente
Local cCliFin		:= ""							// Nome do Cliente Financeiro
Local cFinPro   	:= ""							// Indica financiameto proprio
Local cPrefixo		:= ""
Local cCliSUAOri	:= SUA->UA_CLIENTE 				// Cliente faturado do SUA
Local cCliNomOri	:= ""    						// Nome do Cliente
Local cLjCliSUA 	:= ""							// Codigo da Loja	
Local c1DUP     	:= GetMv("MV_1DUP")				// Define o tipo da primeira parcela
Local cSimb1    	:= Alltrim(GetMv("MV_SIMB1")) 	// Simbolo da moeda 1
Local nDecimais 	:= MsDecimais(1)				// Decimais
Local nPerJur   	:= GetMV("MV_TXPER")			// Taxa de permanencia diaria
Local nPar      	:= 0
Local nPCC      	:= 0 							// Numero de parcelas para cartao de credito.
Local aCaixaFin 	:= {}
Local cJurCart  	:= SE4->E4_JURCART
Local nAETaxa   	:= 0
Local lRet      	:= NIL
Local lUsaNewKey 	:= TamSX3("F2_SERIE")[1] == 14 // Verifica se o novo formato de gravacao do Id nos campos _SERIE esta em uso

DbSelectarea("SA1")
DbSetorder(1)
If MsSeek(xFilial("SA1")+SUA->UA_CLIENTE)
	cCliNomOri 	:= SA1->A1_NOME
	cLjCliSUA 	:= SA1->A1_LOJA
Endif

nPerJur	 := IIF(nPerJur==NIL, 0, nPerJur )

DbSelectArea("SAE")
DbSetOrder(1)
If DbSeek(xFilial("SAE")+SubStr(cAdm,1,3))
	
	// Se for financiamento pr¢prio, pega o cliente do SA1, caso contrario o cliente sera a financiadora.
	If (SAE->AE_FINPRO == "S")
		cCodCliFin:= SUA->UA_CLIENTE
		cCliFin	:= Posicione("SA1",1,xFilial("SA1")+SUA->UA_CLIENTE,"A1_NOME")
		cFinPro := "S"
		nAETaxa := SAE->AE_TAXA
	Else
		cCodCliFin:= SAE->AE_COD
		cCliFin	:= SAE->AE_DESC
		cFinPro := "N"
		nAETaxa := SAE->AE_TAXA
	Endif
Else
	lRet := .F.
Endif

If lRet = Nil
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Posiciona SA1³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SA1")
	DbSetOrder(1)
	MsSeek(xFilial("SA1")+cCodCliFin)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Seleciona SE1³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SE1")
	DbSetOrder(1)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Novo Titulo  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lGrava
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Caso nao seja financiamento proprio   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF (cFinPro == "N")
			
			For nPar := 1 To Len(aParcelas)
				If !(Alltrim(aParcelas[nPar][3]) == "CC") .AND. !(Alltrim(aParcelas[nPar][3]) == cSimb1)
					nPCC++

					//Chama função getPrefixo para retornar o prefixo correto a ser utilizado na gravação do título na tabela SE1. - Bruno Cremaschi
					cPrefixo := GetPrefixo(&(GetMv("MV_1DUPREF")), SUA->UA_DOC, TkParcela(nPCC,c1Dup), aParcelas[nPar][3])
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Grava SE1 com as outras parcelas do atendimento que não³
					//³são cartão de crédito. Um Titulo para cada parcela que ³
					//³for diferente de CC.                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

					RecLock("SE1",.T.)
					SE1->E1_FILIAL := xFilial("SE1")
					SE1->E1_PREFIXO:= cPrefixo 						//&(GetMv("MV_1DUPREF"))
					SE1->E1_NUM    := SUA->UA_DOC
					SE1->E1_PARCELA:= TkParcela(nPCC,c1Dup)
					SE1->E1_TIPO   := aParcelas[nPar][3]
					SE1->E1_CLIENTE:= cCliSUAOri 			// Contra o cliente porque nao esta sendo pago em CC.
					SE1->E1_LOJA   := cLjCliSUA
					SerieNFID("SE1", 1, "E1_SERIE",,,,SUA->UA_SERIE) //Essa função irá gravar os campos E1_SERIE e E1_SDOC com os respectivos id e serie.
					SE1->E1_PEDIDO := SUA->UA_NUMSC5
					SE1->E1_NOMCLI := cCliNomOri
					SE1->E1_EMISSAO:= SUA->UA_EMISNF
					SE1->E1_VALOR  := aParcelas[nPar][2]
					SE1->E1_SALDO  := SE1->E1_VALOR
					SE1->E1_VLCRUZ := Round(xMoeda(SE1->E1_SALDO,1,1,SE1->E1_EMISSAO,nDecimais+1),nDecimais)
					SE1->E1_SITUACA:= "0"
					SE1->E1_MOEDA  := 1
					SE1->E1_EMIS1  := SUA->UA_EMISNF
					SE1->E1_VENCTO := aParcelas[nPar][1]
					SE1->E1_VENCORI:= SE1->E1_VENCTO
					SE1->E1_VENCREA:= DataValida(SE1->E1_VENCTO,.T.)
					SE1->E1_STATUS := "A"
					SE1->E1_PORCJUR:= nPerJur
					SE1->E1_VALJUR := Round(SE1->E1_VALOR * (SE1->E1_PORCJUR / 100),2)
					SE1->E1_OCORREN:= CriaVar("E1_OCORREN")
					SE1->E1_NATUREZ:= &(GetMv("MV_NATFIN"))
					SE1->E1_VEND1  := SUA->UA_VEND
					SE1->E1_ORIGEM := "TMK270"
					SE1->E1_FILORIG:= xFilial("SE1")
					
					DbCommit()
					MsUnlock()
										
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Gera as parcelas de acordo com a condicao de pagamento mas contra a Administadora devido ao³
					//³campo Juros do Cartão na condição de pagamento.         									  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ElseIf (Alltrim(aParcelas[nPar][3]) == "CC") .AND. cJurCart == "2"
					nPCC++

					//Chama função getPrefixo para retornar o prefixo correto a ser utilizado na gravação do título na tabela SE1. - Bruno Cremaschi
					cPrefixo := getPrefixo(&(GetMv("MV_1DUPREF")), SUA->UA_DOC, TkParcela(nPCC,c1Dup), aParcelas[nPar][3])

					RecLock("SE1",.T.)
					SE1->E1_FILIAL := xFilial("SE1")
					SE1->E1_PREFIXO:= cPrefixo
					SE1->E1_NUM    := SUA->UA_DOC
					SE1->E1_PARCELA:= TkParcela(nPCC,c1Dup)
					SE1->E1_TIPO   := aParcelas[nPar][3]
					SE1->E1_CLIENTE:= cCodCliFin
					SE1->E1_LOJA   := SA1->A1_LOJA
					SerieNFID("SE1", 1, "E1_SERIE",,,,SUA->UA_SERIE) //Essa função irá gravar os campos E1_SERIE e E1_SDOC com os respectivos id e serie.					
					SE1->E1_PEDIDO := SUA->UA_NUMSC5
					SE1->E1_NOMCLI := cCliFin
					SE1->E1_EMISSAO:= SUA->UA_EMISNF
					SE1->E1_VALOR	+= Round(xMoeda(aParcelas[nPar][2],1,1,SE1->E1_EMISSAO,nDecimais+1)-(xMoeda(aParcelas[nPar][2],1,1,SE1->E1_EMISSAO,nDecimais+1)*nAETaxa/100),nDecimais)
					SE1->E1_VLRREAL += Round(xMoeda(aParcelas[nPar][2],1,1,SE1->E1_EMISSAO,nDecimais+1),nDecimais)
					SE1->E1_SALDO  := SE1->E1_VALOR
					SE1->E1_VLCRUZ := Round(xMoeda(SE1->E1_SALDO,1,1,SE1->E1_EMISSAO,nDecimais+1),nDecimais)
					SE1->E1_SITUACA:= "0"
					SE1->E1_MOEDA  := 1
					SE1->E1_EMIS1  := SUA->UA_EMISNF
					SE1->E1_VENCTO := TkVerDat(aParcelas[nPar][1])
					SE1->E1_VENCORI:= SE1->E1_VENCTO
					SE1->E1_VENCREA:= DataValida(SE1->E1_VENCTO,.T.)
					SE1->E1_STATUS := "A"
					SE1->E1_PORCJUR:= nPerJur
					SE1->E1_VALJUR := Round(SE1->E1_VALOR * (SE1->E1_PORCJUR / 100),2)
					SE1->E1_OCORREN:= CriaVar("E1_OCORREN")
					SE1->E1_VEND1  := SUA->UA_VEND
					SE1->E1_ORIGEM := "TMK270"
					SE1->E1_FILORIG:= xFilial("SE1")
					SE1->E1_NATUREZ:= &(GetMv("MV_NATFIN"))
					If lUsaTef .AND. AllTrim(SL4->L4_FORMA) $ "CC/CD"
   						SE1->E1_NSUTEF := SL4->L4_NSUTEF
    				EndIf
					DbCommit()
					MsUnlock()
					
				Endif
			Next nPar
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Grava SE1  com os valores de cartao de credito. Sera 1 titulo contra a Adm com o valor de ³
			//³todas as parcelas em CC somadas.                                                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cJurCart == "1" .Or. Empty(cJurCart)// Verifica se nao foi preenchido o campo.
				If nPCC > 0
					nPCC++
				Endif

				//Chama função getPrefixo para retornar o prefixo correto a ser utilizado na gravação do título na tabela SE1. - Bruno Cremaschi
				cPrefixo := getPrefixo(&(GetMv("MV_1DUPREF")), SUA->UA_DOC, Iif(nPCC > 0 , TkParcela(nPCC,c1Dup) , ""), "CC")

				RecLock("SE1",.T.)
				SE1->E1_FILIAL := xFilial("SE1")
				SE1->E1_PREFIXO:= cPrefixo
				SE1->E1_NUM    := SUA->UA_DOC
				SE1->E1_PARCELA:= Iif(nPCC > 0 , TkParcela(nPCC,c1Dup) , "")
				SE1->E1_TIPO   := "CC"
				SE1->E1_CLIENTE:= cCodCliFin
				SE1->E1_LOJA   := SA1->A1_LOJA
				SerieNFID("SE1", 1, "E1_SERIE",,,,SUA->UA_SERIE) //Essa função irá gravar os campos E1_SERIE e E1_SDOC com os respectivos id e serie.
				SE1->E1_PEDIDO := SUA->UA_NUMSC5
				SE1->E1_NOMCLI := cCliFin
				SE1->E1_EMISSAO:= SUA->UA_EMISNF
				SE1->E1_VALOR  := SUA->UA_CARTAO // valor total da venda com cartao
				SE1->E1_SALDO  := SE1->E1_VALOR
				SE1->E1_VLCRUZ := Round(xMoeda(SE1->E1_SALDO,1,1,SE1->E1_EMISSAO,nDecimais+1),nDecimais)
				SE1->E1_SITUACA:= "0"
				SE1->E1_MOEDA  := 1
				SE1->E1_EMIS1  := SUA->UA_EMISNF
				SE1->E1_VENCTO := TkVerDat(SUA->UA_EMISNF)
				SE1->E1_VENCORI:= SE1->E1_VENCTO
				SE1->E1_VENCREA:= DataValida(SE1->E1_VENCTO,.T.)
				SE1->E1_STATUS := "A"
				SE1->E1_PORCJUR:= nPerJur
				SE1->E1_VALJUR := Round(SE1->E1_VALOR * (SE1->E1_PORCJUR / 100),2)
				SE1->E1_OCORREN:= CriaVar("E1_OCORREN")
				SE1->E1_NATUREZ:= &(GetMv("MV_NATFIN"))
				SE1->E1_VEND1  := SUA->UA_VEND
				SE1->E1_ORIGEM := "TMK270"
				SE1->E1_FILORIG:= xFilial("SE1")
				If lUsaTef .AND. AllTrim(SL4->L4_FORMA) $ "CC/CD"
   					SE1->E1_NSUTEF := SL4->L4_NSUTEF
    			EndIf
				DbCommit()
				MsUnlock()
			Endif
			lRet := .T.
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ‚¿
			//³Caso seja financiamento proprio gera n Parcelas contra o Cliente.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ‚Ù
		Else
			
			If ValType(aParcelas) == "A"

				For nPar := 1 To Len(aParcelas)

					//Chama função getPrefixo para retornar o prefixo correto a ser utilizado na gravação do título na tabela SE1. - Bruno Cremaschi
					cPrefixo := getPrefixo(&(GetMv("MV_1DUPREF")), SUA->UA_DOC, Iif(Len(aParcelas)> 1, TkParcela(nPar,c1Dup), ""), aParcelas[nPar][3])				

					RecLock("SE1",.T.)
					SE1->E1_FILIAL := xFilial("SE1")
					SE1->E1_PREFIXO:= cPrefixo
					SE1->E1_NUM    := SUA->UA_DOC
					SE1->E1_PARCELA:=  Iif(Len(aParcelas)> 1, TkParcela(nPar,c1Dup), "")
					SE1->E1_TIPO   := aParcelas[nPar][3]
					SE1->E1_CLIENTE:= cCodCliFin
					SE1->E1_LOJA   := SA1->A1_LOJA
					SerieNFID("SE1", 1, "E1_SERIE",,,,SUA->UA_SERIE) //Essa função irá gravar os campos E1_SERIE e E1_SDOC com os respectivos id e serie.
					SE1->E1_PEDIDO := SUA->UA_NUMSC5
					SE1->E1_NOMCLI := cCliFin
					SE1->E1_EMISSAO:= SUA->UA_EMISNF
					SE1->E1_VALOR  := aParcelas[nPar][2]
					SE1->E1_SALDO  := SE1->E1_VALOR
					SE1->E1_VLCRUZ := Round(xMoeda(SE1->E1_SALDO,1,1,SE1->E1_EMISSAO,nDecimais+1),nDecimais)
					SE1->E1_SITUACA:= "0"
					SE1->E1_MOEDA  := 1
					SE1->E1_EMIS1  := SUA->UA_EMISNF
					SE1->E1_VENCTO := aParcelas[nPar][1]
					SE1->E1_VENCORI:= SE1->E1_VENCTO
					SE1->E1_VENCREA:= DataValida(SE1->E1_VENCTO,.T.)
					SE1->E1_STATUS := "A"
					SE1->E1_PORCJUR:= nPerJur
					SE1->E1_VALJUR := Round(SE1->E1_VALOR * (SE1->E1_PORCJUR / 100),2)
					SE1->E1_OCORREN:= CriaVar("E1_OCORREN")
					SE1->E1_VEND1  := SUA->UA_VEND
					SE1->E1_ORIGEM := "TMK270"
					SE1->E1_FILORIG:= xFilial("SE1")
					SE1->E1_NATUREZ:= &(GetMv("MV_NATFIN"))
					DbCommit()
					MsUnlock()					
					
				Next nPar
				lRet := .T.
			Endif
		Endif
	Endif
Endif

Return (lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ getPrefixo ³ Autor ³ Bruno Cremaschi  ³ Data ³ 04/05/15 	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna o prefixo correto para geração do título.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GetPrefixo(ExpC1,ExpC2,ExpC3, ExpC4)	                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 := Prefixo inicial para geração do título.		      ³±±
±±³          ³ ExpC2 := Numero do título a ser gerado                     ³±±
±±³          ³ ExpC3 := Parcelas da condicao de pagamento                 ³±±
±±³          ³ ExpC4 := Tipo do título a ser gerado		                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATMK                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GetPrefixo(cPrefixo, cNum, cParc, cTipo)

Local cRet			:= ""
Local cQuery		:= ""
Local cAliasSE1	:= ""
Local cFilSE1		:= ""
LocaL nTamPrefix	:= 0
Local lUsaNewKey	:= TamSX3("F2_SERIE")[1] == 14 // Verifica se o novo formato de gravacao do Id nos campos _SERIE esta em uso
	
If lUsaNewKey
	cFilSE1	:= xFilial("SE1")
	nTamPrefix	:= TamSX3("E1_PREFIXO")[1]
	SE1->(dbSetOrder(1))
	cQuery := "SELECT MAX(E1_PREFIXO) AS PREFMAX "
	cQuery += "FROM " + RetSqlName("SE1") + " SE1 "
	cQuery += "WHERE "
	cQuery += "E1_FILIAL = '" + cFilSE1 + "' AND "
	cQuery += "E1_NUM = '" + cNum + "' AND "
	cQuery += "D_E_L_E_T_ = ' ' "

	cQuery		:= ChangeQuery(cQuery)
	cAliasSE1	:= CriaTrab(Nil,.F.)
	dbUseArea( .T., "TOPCONN", TcGenQry( , , cQuery ), cAliasSE1, .T., .T. )
	dbSelectArea(cAliasSE1)
	If !(cAliasSE1)->(EOF())
		cRet	:= Soma1( (cAliasSE1)->PREFMAX , nTamPrefix )
		/*
		Devido ao projeto CHAVE ÚNICA, a consistência abaixo é necessária para 
		garantir que o novo título a ser gerado não irá colidir com um título 
		da base histórica do cliente criada antes do projeto chave única. 
		*/
		While ( SE1->(dbSeek(cFilSE1+cRet+cNum)) )
			cRet	:= Soma1(cRet, nTamPrefix)
		EndDo
	Else
		cRet	:= &(GetMv("MV_1DUPREF"))
	EndIf
	(cAliasSE1)->(dbCloseArea())
Else
	cRet	:= &(GetMv("MV_1DUPREF"))
EndIf
Return(cRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³TKBXTIT   ºAutor  ³Rafael M. Quadrotti º Data ³  04/24/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Baixa de titulo gerado automaticamente pelo TES. Quando forº±±
±±º          ³efetuada venda com TEF os títulos serao gerados pelo Call C.º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ ExpN1 : Numero do registro do SE1 a que sera baixado. 	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6 - Call Center TeleVendas                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function TkBxTit(nReg)

Local lRet := .F.
Local aSaveArea:= GetArea()
Local aSE1Bx := {}
Local aBaixa := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona SE1³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SE1")
DbGoTo(nReg)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Preenche array com os registros a serem baixados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Aadd(aSE1Bx,nReg)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Array com os dados para baixa.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Aadd(aBaixa,TrazCodMot("DAC"))
Aadd(aBaixa,SE1->E1_VALOR)
Aadd(aBaixa,"")
Aadd(aBaixa,"")
Aadd(aBaixa,"")
Aadd(aBaixa,dDataBase)
Aadd(aBaixa,dDataBase)

lRet := MaIntBxCR(1,aSE1Bx,aBaixa)

RestArea(aSaveArea)
Return (lRet)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ TkVerDat ³ Autor ³ Rafael M. Quadrotti   ³ Data ³ 12/04/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica data para vencimento da parcela.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ TkVerdat(ExpD1)              		                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpD1 := Data da parcela                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpD1 := Nova data para vencimento da parcela              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATMK                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function TkVerDat(dDataPar)

Local dAeVencto:= CriaVar("AE_VENCTO")

If ValType(dDataPar) <> "D" .Or. Empty(dDataPar)
	dDataPar := dDataBase
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica e calcula a data de vencimento do titulo.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(SAE->AE_DIAS)
	dAeDias := dDataBase
Else
	If Month(dDataBase) == 2 .AND. SAE->AE_DIAS > 28
		dAeDias := LastDay(CtoD("01/02/"+Right(Strzero(Year(dDataBase),4),2),"ddmmyy"))
	Else
		dAeDias := CtoD(Strzero(SAE->AE_DIAS,2)+"/"+Strzero(Month(dDataBase),2)+"/"+Right(Strzero(Year(dDataBase),4),2),"ddmmyy")
	Endif
Endif
If Empty(SAE->AE_VENCTO)
	dAeVencto := dDataPar + SAE->AE_DIAS
Else
	If Month(dDataBase) == 2 .AND. SAE->AE_VENCTO > 28
		dAeVencto := LastDay(CtoD("01/02/"+Right(Strzero(Year(dDataBase),4),2),"ddmmyy"))
	Else
		dAeVencto := CtoD(Strzero(SAE->AE_VENCTO,2)+"/"+Strzero(Month(dDataBase),2)+"/"+Right(Strzero(Year(dDataBase),4),2),"ddmmyy")
	Endif
Endif
If (dAeDias > dAeVencto .or. dDataBase > dAeDias) .AND. ! Empty(SAE->AE_VENCTO)
	If Month(lastday(dAeVencto)+1) == 2 .AND. SAE->AE_VENCTO > 28
		dAeVencto := LastDay(CtoD("01/02/"+Right(Strzero(Year(lastday(dAeVencto)+1),4),2),"ddmmyy"))
	Else
		dAeVencto := CtoD(Strzero(SAE->AE_VENCTO,2)+"/"+Strzero(Month(lastday(dAeVencto)+1),2)+"/"+Right(Strzero(Year(lastday(dAeVencto)+1),4),2),"ddmmyy")
	Endif
Endif
Return(dAeVencto)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ TkParcela³ Autor ³ Rafael M. Quadrotti   ³ Data ³ 30/04/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Calcula o numero da proxima parcela                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ TkParcela(ExpD1)              		                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ [ <ExpU1> ] - Elemento 1 -> Numero da Parcela 1..64       .³±±
±±³          ³ [ <ExpC2> ] - Elemento 2 -> Tipo, pode ser "A" ou "1"     .³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorna	 ³ ExpC1 -> Numero da Parcela com apenas 1 caracter           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGATMK                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function TkParcela( nParcela, cTipo )

Local cResult		:= ""										// Retorno da função
Local nTam			:= 0
Local cParcela		:= Space(nTam)								// Tamanho da variável

Default nParcela	:= 1
Default cTipo		:= SuperGetMv("MV_1DUP" /*[cParametro]*/, .T. /*[lHelp]*/, "1" /*[xDefault]*/, /*[cFil]*/)

nTam := Len(AllTrim(cTipo))

If nTam == 1
	If cTipo == "A"	// A..Z
		cResult	:= Chr(nParcela + 64)
	Else
		Do Case
			Case nParcela >= 01 .AND. nParcela <= 09	//Caracteres de 1...9
				cResult	:= AllTrim(Str(nParcela))
			Case nParcela >= 10 .AND. nParcela <= 35	//Caracteres de A...Z
				cResult	:= Chr(nParcela + 55)
			Case nParcela >= 36 .AND. nParcela <= 61	//Caracteres de a...z
				cResult	:= Chr(nParcela + 61)
			Otherwise
				cResult	:= "*"
		EndCase
	EndIf
Else
	If cTipo == "A"	// A..Z
		cResult	:= Chr(nParcela + 64)
	Else
		cParcela := StrZero(nParcela - 1, nTam)
		cResult	 := Soma1(cParcela, nTam)
		cResult	 := PadR(AllTrim(cResult), nTam)		// Deve-se ajustar o retorno de cResult ao tamanho do E1_PARCELA
	EndIf
EndIf

Return( cResult )