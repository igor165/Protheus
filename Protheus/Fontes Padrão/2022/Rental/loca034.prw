#INCLUDE "loca034.ch" 
/*/{PROTHEUS.DOC} LOCA034.PRW
ITUP BUSINESS - TOTVS RENTAL
GERA PEDIDO DE VENDA,LIBERA PEDIDO E GERA NOTA C.T.R.C
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/

#INCLUDE "TOTVS.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "TOPCONN.CH"

#IFNDEF	METODO_PASCOA_GAUSS
	#DEFINE METODO_PASCOA_MEEUS
#ENDIF

FUNCTION LOCA034()
LOCAL AAREADTQ := FQ5->(GETAREA())
LOCAL CALIAS   := ALIAS()

PRIVATE CVIAGEM	:= FQ5->FQ5_VIAGEM
PRIVATE CCC		:= FQ5->FQ5_CCC
PRIVATE CPROJET := FQ5->FQ5_SOT
PRIVATE NREGDTQ := 0
PRIVATE ADTC    := {}
PRIVATE CVALOR	:= 0
PRIVATE CTPCTRC	:= FQ5->FQ5_TPCTRC

FQ5->(DBSETORDER(1))  			// FILIAL + VIAGEM

IF FQ5->(!DBSEEK(XFILIAL("FQ5")+CVIAGEM))
	MSGSTOP(STR0001+CVIAGEM+STR0002 , STR0003)  //"ATENÇÃO: VIAGEM ["###"] NÃO FOI CADASTRADA !"###"GPO - LOCF008.PRW"
	RETURN(.F.)
ELSE
	WHILE !EOF() .AND. CVIAGEM == FQ5->FQ5_VIAGEM
		IF CPROJET == FQ5->FQ5_SOT
			EXIT
		ENDIF
		DBSKIP()
	ENDDO
ENDIF

IF !EMPTY(FQ5->FQ5_NUMCTR) .AND. FQ5->FQ5_NUMCTR <> "-"
	MSGALERT(STR0004+ALLTRIM(FQ5->FQ5_NUMCTR)+STR0005+ALLTRIM(FQ5->FQ5_SERCTR)+STR0006+ALLTRIM(FQ5->FQ5_NUMPV)+STR0007 , STR0003)  //"JÁ FOI GERADA A NOTA FISCAL CTRC DE NÚMERO ["###"], SÉRIE ["###"] E PEDIDO DE VENDA ["###"]. IMPOSSÍVEL GERAR NOVO CTRC PARA ESTA VIAGEM."###"GPO - LOCF008.PRW"
	RETURN .F.
ENDIF

IF !MSGYESNO(STR0008+CVIAGEM+"] ?" , STR0003)  //"CONFIRMA A GERAÇÃO DO CTRC PARA A VIAGEM ["###"GPO - LOCF008.PRW"
	DBSELECTAREA(CALIAS) 
	FQ5->(RESTAREA(AAREADTQ))
	RETURN .F. 
ENDIF 

NREGDTQ := FQ5->(RECNO())

DBSELECTAREA("DTP")
DBSETORDER(3)  					// FILIAL + FILORI + VIAGEM

DBSEEK(XFILIAL("DTP")+FQ5->FQ5_FILORI+FQ5->FQ5_VIAGEM , .T. )

DBSELECTAREA("DTC")
DBORDERNICKNAME("DTCIND09")  	// FILIAL + VIAGEM + NUMNFC + SERNFC + CLIREM + LOJREM 
/*
DTC->(DBSEEK(XFILIAL("DTC")+ CVIAGEM)) 

WHILE DTC->(!EOF()) .AND. DTC_VIAGEM = CVIAGEM
	AADD( ADTC , RECNO() ) 
	DTC->(DBSKIP())
ENDDO

IF LEN(ADTC) = 0
	MSGSTOP("ATENÇÃO: NÃO FOI POSSIVÉL ENCONTRAR AS NF'S DO CLIENTE!" , "GPO - LOCF008.PRW") 
	RETURN .F.
ENDIF 

GRV_PV ( ADTC )
GRV_DT6( ADTC[1],NREGDTQ )
*/
IF DTC->(DBSEEK(IIF(LEN(ALLTRIM(XFILIAL("DTC")))==2 .AND. LEN(XFILIAL("DTC"))==4,CFILANT,XFILIAL("DTC"))+ CVIAGEM)) 
	AADD( ADTC , RECNO() ) 
	GRV_PV( ADTC )
	GRV_DT6( ADTC[1],NREGDTQ )
ELSE
	MSGSTOP(STR0009 , STR0003)  //"ATENÇÃO: NÃO FOI POSSÍVEL ENCONTRAR AS NF'S DO CLIENTE!"###"GPO - LOCF008.PRW"
	RETURN .F.
ENDIF

RETURN .T.



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ GRV_PV    º AUTOR ³ IT UP BUSINESS     º DATA ³ 25/04/2008 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ GERA PEDIDO DE VENDA PARA C.T.R.C                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION GRV_PV( ADTC )

LOCAL CPRODUTO      := GETMV("MV_LOCX118",,"999912")
LOCAL CPROFREP      := GETMV("MV_LOCX039",,"")   //FRETE PESO
LOCAL CPROFREV      := GETMV("MV_LOCX040",,"")   //FRETE VALOR
LOCAL CNATUREZ      := GETMV("MV_LOCX117",,"E010201")
//LOCAL CPROICMCT   := GETMV("MV_LOCX042")   //ICMS SOBRE CTRC
//LOCAL CPROSEGC    := GETMV("MV_LOCX041")   //SEGURO CTRC
//LOCAL CALIAS      := ALIAS()

LOCAL ACAMPOSSC5    := {}
LOCAL ACAMPOSSC6    := {}
LOCAL AITENS        := {}
LOCAL CNUMSC5       := CRIAVAR("C5_NUM")
LOCAL NPESO         := 0
LOCAL NQTDVOL       := 0
LOCAL ANOTAS        := {}
LOCAL LCREDITO		:= .T.
LOCAL LESTOQUE		:= .T.
LOCAL LAVCRED		:= .F.
LOCAL LAVEST		:= .F.
LOCAL LLIBER		:= .T.
LOCAL LTRANSF    	:= .F.
LOCAL CTIPO			:= ""
LOCAL CVENDEDOR		:= ""
LOCAL NCOMISSAO		:= 0
LOCAL AAREAZA0		:= FP0->(GETAREA())
LOCAL AAREASA3		:= SA3->(GETAREA())
LOCAL F             := 0 
LOCAL I             := 0 

PRIVATE CNUMERO     := ""
PRIVATE LMSERROAUTO := .F.
PRIVATE CSERIE      := GETMV("MV_LOCX184" ,, "U  ")

DTC->(DBGOTO( ADTC[1] ) )  // POSICIONA NO DTC ( PRIMEIRO REGISTRO ) PARA PEGAR O TES E A CONDICAO DE PAGAMENTO

CCONDPAG := FQ5->FQ5_CONDPG
CTES     := FQ5->FQ5_TES

CNUMNOTA:=SX5NUMNOTA(CSERIE)

AAREASC5 := SC5->(GETAREA())

DBSELECTAREA("SC5")
DBSETORDER(1)

CNUMSC5 := GETSXENUM("SC5","C5_NUM")
CMAY := "SC5"+ALLTRIM(XFILIAL("SC5"))+CNUMSC5

WHILE (MSSEEK(XFILIAL("SC5")+CNUMSC5)) 			// .OR. !MAYIUSECODE(CMAY))
	CNUMSC5 := SOMA1(CNUMSC5,LEN(CNUMSC5))
ENDDO

RESTAREA(AAREASC5)

FOR I:= 1 TO LEN(ADTC)
	NQTDVOL += DTC->DTC_QTDVOL
	NPESO   += DTC->DTC_PESO
NEXT

NVALTOT := FQ5->FQ5_TOTFRE
NVALPRE := FQ5->FQ5_VALADV
NVALINF := FQ5->FQ5_VLRINF
//NVAL
CTIPOF  := DTC->DTC_TIPFRE
CCTRORI := FQ5->FQ5_CTRORI
CTIPOF  := IIF(CTIPOF=="1","C","F")
CCFOP   := FQ5->FQ5_CFOP
//CTIPO := IIF(EMPTY(FQ5->FQ5_CTRORI),"N","I") 	// COMPLEMENTO DE ICMS

IF EMPTY(FQ5->FQ5_TPCTRC)
	CTIPO := "N" 								// NORMAL
ELSEIF FQ5->FQ5_TPCTRC == "1"
	CTIPO := "C" 								// COMPL.PRECO
ELSEIF FQ5->FQ5_TPCTRC == "2"
	CTIPO := "I" 								// COMPL.ICMS
ENDIF

DBSELECTAREA("FP0")
DBSETORDER(1)
DBSEEK(XFILIAL("FP0")+FQ5->FQ5_SOT)

DBSELECTAREA("SA3")
DBSETORDER(1)
DBSEEK(XFILIAL("SA3")+FP0->FP0_VENDED)

CVENDEDOR := SA3->A3_COD
NCOMISSAO := SA3->A3_COMIS

RESTAREA(AAREASA3)
RESTAREA(AAREAZA0)

//CTESV  := U_PEGATES(FQ5->FQ5_ORIGEM,FQ5->FQ5_DESTIN,)

FOR F:= 1 TO LEN( ADTC )
	DTC->(DBGOTO( ADTC[F] ) )  // POSICIONA NO DTC
	
	IF EMPTY( ACAMPOSSC5 )
		ACAMPOSSC5 :=  {{"C5_FILIAL"  , XFILIAL("SC5")  , NIL } , ; 
		                {"C5_NUM"	  , CNUMSC5		    , NIL } , ; 
		                {"C5_TIPO"	  , CTIPO		    , NIL } , ; 
		                {"C5_CLIENTE" , DTC->DTC_CLIDEV , NIL } , ; 
		                {"C5_LOJACLI" , DTC->DTC_LOJDEV , NIL } , ; 
		                {"C5_CLIENT"  , DTC->DTC_CLIDES , NIL } , ; 
		                {"C5_LOJAENT" , DTC->DTC_LOJDES , NIL } , ; 
		                {"C5_TIPOCLI" , POSICIONE("SA1" , 1 , XFILIAL("SA1")+DTC->DTC_CLIDEV+DTC->DTC_LOJDEV , "A1_TIPO") , NIL } , ; 
		                {"C5_DESC1"	  , 0			    , NIL } , ; 
		                {"C5_DESC2"	  , 0			    , NIL } , ; 
		                {"C5_DESC3"	  , 0			    , NIL } , ; 
		                {"C5_DESC4"	  , 0			    , NIL } , ; 
		                {"C5_TPCARGA" , "1"			    , NIL } , ; 
		                {"C5_CONDPAG" , CCONDPAG	    , NIL } , ; 
		                {"C5_TPFRETE" , CTIPOF		    , NIL } , ; 
		                {"C5_CCC"	  , CCC			    , NIL } , ;  // VERIFICAR
		                {"C5_VOLUME1" , NQTDVOL		    , NIL } , ; 
		                {"C5_PESOL"	  , NPESO		    , NIL } , ; 
		                {"C5_PBRUTO"  , NPESO		    , NIL } , ; 
		                {"C5_NATUREZ" , CNATUREZ        , NIL } , ; 
		                {"C5_VEND1"   , CVENDEDOR       , NIL } , ; 
		                {"C5_COMIS1"  , NCOMISSAO       , NIL } }
	ENDIF
	
	// VERIFICAR  NOVOS ITENS ->
	CPRODUTO := CPROFREP
	NVALTOT  := FQ5->FQ5_TOTFRE
	NVALPRE  := FQ5->FQ5_VALADV
	
	IF NVALPRE > 0
		VEZ := 2
	ELSE
		VEZ := 1
	ENDIF
	
	FOR I:= 1 TO VEZ
		
		IF I == 2
			CPRODUTO:= CPROFREV
			NVALTOT := NVALPRE
		ENDIF
		
		IF CTIPO $ "N|C"					// NORMAL
			CVALOR := ROUND(NVALTOT,2)
		ELSE								// COMPLEMENTO DE ICMS
			CVALOR := ROUND(FQ5->FQ5_VALICM,2)
		ENDIF
		AITENS := {}
		
		AADD(AITENS,{"C6_ITEM"		, STRZERO(I,2)   		, NIL}) // ITENS
		AADD(AITENS,{"C6_FILIAL"	, XFILIAL("SC6") 		, NIL}) // FILIAL
		AADD(AITENS,{"C6_NUM"		, CNUMSC5		 		, NIL}) // NUMERO DO PEDIDO
		AADD(AITENS,{"C6_PRODUTO"	, CPRODUTO		 		, NIL}) // MATERIAL
		AADD(AITENS,{"C6_UM"		, "UN"			 		, NIL}) // UNIDADE DE MEDIDA
		AADD(AITENS,{"C6_QTDVEN"	, 1				 		, NIL}) // QUANTIDADE
		AADD(AITENS,{"C6_PRCVEN"	, ROUND(CVALOR,2) 		, NIL}) // PRECO DE VENDA / VALOR FRETE
		AADD(AITENS,{"C6_PRUNIT"	, ROUND(CVALOR,2) 		, NIL}) // PRECO UNITÁRIO / VALOR FRETE
		AADD(AITENS,{"C6_VALOR"	    , ROUND(CVALOR,2)       , NIL}) // VALOR TOTAL DO ITEM
		AADD(AITENS,{"C6_TES"		, CTES			 		, NIL}) // TES
		AADD(AITENS,{"C6_CF"		, CCFOP			 		, NIL}) // TES
		AADD(AITENS,{"C6_LOCAL"		, "01"	         		, NIL}) // ARMAZEM PADRAO
		AADD(AITENS,{"C6_ENTREG"	, DDATABASE		 		, NIL}) // DATA DA ENTREGA
		AADD(AITENS,{"C6_QTDLIB"	, IIF(CTIPO="N",1,0)	, NIL}) // QUANTIDADE LIBERADA
		AADD(AITENS,{"C6_DESCONT"	, 0              		, NIL}) // PERCENTUAL DE DESCONTO
		AADD(AITENS,{"C6_COMIS1"	, 0              		, NIL}) // COMISSAO VENDEDOR
		AADD(AITENS,{"C6_MUNOBRA"	, DTC->DTC_DESTIN		, NIL}) // MUNICIPIO DA OBRA
		AADD(AITENS,{"C6_CLI"		, DTC->DTC_CLIDEV		, NIL}) // CLIENTE
		AADD(AITENS,{"C6_LOJA"		, DTC->DTC_LOJDEV		, NIL})  // LOJA DO CLIENTE
		AADD(ACAMPOSSC6,AITENS)
		
		IF FQ5->FQ5_TIPTRA == "3"
			AITENS := {}
			AADD(AITENS,{"C6_ITEM"		, STRZERO(I+1,2)   	   		, NIL}) // ITENS
			AADD(AITENS,{"C6_FILIAL"	, XFILIAL("SC6") 			, NIL}) // FILIAL
			AADD(AITENS,{"C6_NUM"		, CNUMSC5		 	   		, NIL}) // NUMERO DO PEDIDO
			AADD(AITENS,{"C6_PRODUTO"	, CPRODUTO		 	   		, NIL}) // MATERIAL
			AADD(AITENS,{"C6_UM"		, "UN"			 			, NIL}) // UNIDADE DE MEDIDA
			AADD(AITENS,{"C6_QTDVEN"	, 1				 			, NIL}) // QUANTIDADE
			AADD(AITENS,{"C6_PRCVEN"	, ROUND(FQ5->FQ5_AFRMM,2)	, NIL}) // PRECO DE VENDA / VALOR FRETE
			AADD(AITENS,{"C6_PRUNIT"	, ROUND(FQ5->FQ5_AFRMM,2)	, NIL}) // PRECO UNITÁRIO / VALOR FRETE
			AADD(AITENS,{"C6_VALOR"	    , ROUND(FQ5->FQ5_AFRMM,2)	, NIL}) // VALOR TOTAL DO ITEM
			AADD(AITENS,{"C6_TES"		, FQ5->FQ5_TES2	 			, NIL}) // TES
			AADD(AITENS,{"C6_CF"		, FQ5->FQ5_CFOP2 	   		, NIL}) // TES
			AADD(AITENS,{"C6_LOCAL"		, "01"	         	   		, NIL}) // ARMAZEM PADRAO
			AADD(AITENS,{"C6_ENTREG"	, DDATABASE		 			, NIL}) // DATA DA ENTREGA
			AADD(AITENS,{"C6_QTDLIB"	, IIF(CTIPO="N",1,0)		, NIL}) // QUANTIDADE LIBERADA
			AADD(AITENS,{"C6_DESCONT"	, 0              			, NIL}) // PERCENTUAL DE DESCONTO
			AADD(AITENS,{"C6_COMIS1"	, 0              			, NIL}) // COMISSAO VENDEDOR
			AADD(AITENS,{"C6_MUNOBRA"	, DTC->DTC_DESTIN			, NIL}) // MUNICIPIO DA OBRA
			AADD(AITENS,{"C6_CLI"		, DTC->DTC_CLIDEV			, NIL}) // CLIENTE
			AADD(AITENS,{"C6_LOJA"		, DTC->DTC_LOJDEV			, NIL})  // LOJA DO CLIENTE
			
			AADD(ACAMPOSSC6,AITENS)
		ENDIF
		
		IF CTIPO $ "I|C"					// COMPLEMENTO DE ICMS OU PREÇO
			NRECDTQ  := FQ5->(RECNO())
			CNFORI   := POSICIONE("FQ5",1,XFILIAL("FQ5") + CCTRORI,"FQ5_NUMCTR")
			CSERIORI := POSICIONE("FQ5",1,XFILIAL("FQ5") + CCTRORI,"FQ5_SERCTR")
			FQ5->(DBGOTO(NRECDTQ))
			AADD(ACAMPOSSC6[I],{"C6_VALOR"		, CVALOR	, NIL})	 // VALOR TOTAL
			AADD(ACAMPOSSC6[I],{"C6_NFORI"		, CNFORI	, NIL})	 // VALOR TOTAL
			AADD(ACAMPOSSC6[I],{"C6_SERIORI"	, CSERIORI	, NIL})	 // VALOR TOTAL
		ENDIF
		
	NEXT I
	//			 {"C6_VALOR"	, ROUND(NVALTOT,2) , NIL},; // VALOR TOTAL DO ITEM
	
NEXT F

//AADD(ACAMPOSSC6,AITENS)
//AADD(ACAMPOSSC6,ACLONE(AITENS))

BEGIN TRANSACTION

IF LEN(ACAMPOSSC5) > 0 .AND. LEN(ACAMPOSSC6) > 0
	
	// --> GERA PEDIDO DE VENDA DA TRANSFERENCIA. 
	LJMSGRUN(STR0010,,{|| MSEXECAUTO({|X,Y,Z| MATA410(X,Y,Z)},ACAMPOSSC5,ACAMPOSSC6,3)} ) //"AGUARDE...GERANDO PEDIDO DE VENDA CTRC..."
	
	IF LMSERROAUTO
	// --> CRIA O DIRETORIO ERROS, CASO ELE NAO EXISTA
	//	MAKEDIR("\ERROS\")
	// --> GRAVA O ERRO GERADO NA PASTA ERROS
	//	MOSTRAERRO("\ERROS\", "008.LOG")
		MOSTRAERRO()
		ROLLBACKSX8()
	ELSE
		CONFIRMSX8()
		// --> EXECUTA A LIBERACAO DO PEDIDO SEM AVALIACAO DE CREDITO E ESTOQUE.
		DBSELECTAREA("SC6")
		DBSETORDER(1)
		DBSEEK(XFILIAL("SC6")+CNUMSC5)
		WHILE !EOF() .AND. SC6->C6_FILIAL+SC6->C6_NUM == XFILIAL("SC6")+CNUMSC5
			MALIBDOFAT(SC6->(RECNO()),SC6->C6_QTDVEN,@LCREDITO,@LESTOQUE,LAVCRED,LAVEST,LLIBER,LTRANSF)
			DBSELECTAREA("SC6")
			DBSKIP()
		ENDDO
	ENDIF
	
	LJMSGRUN(STR0011,,{|| INCNOTA(CNUMSC5,CSERIE,"",@ANOTAS)}) //"AGUARDE...GERANDO NOTA FISCAL CTRC..."
	
	IF LEN(ANOTAS) > 0 
		// --> GERA OS ARQUIVOS COM AS NOTAS FISCAIS.
		CSERIE 	 := ANOTAS[1][1] 
		CNOTA 	 := ANOTAS[1][2]
		
		AAREADTC := DTC->(GETAREA()) 
		DBSELECTAREA("DTC") 
		
		// INCLUIDO CONDICAO PARA QUE SEJA GRAVADO EM TODOS OS ITENS DA NF DA TABELA DTC.
		DBORDERNICKNAME("DTCIND09")
		DBSEEK(IIF(LEN(ALLTRIM(XFILIAL("DTC")))==2 .AND. LEN(XFILIAL("DTC"))==4,CFILANT,XFILIAL("DTC"))+CVIAGEM)
	 //	DBGOTO(ADTC[1])
		
		WHILE DTC->(!EOF()) .AND. DTC->DTC_VIAGEM == CVIAGEM
			RECLOCK("DTC",.F.)
			DTC->DTC_FILDOC := CFILANT
			DTC->DTC_DOC    := CNOTA
			DTC->DTC_SERIE  := CSERIE
			MSUNLOCK()
			DTC->(DBSKIP())
		ENDDO
		
		DBGOTO(ADTC[1])
		RESTAREA(AAREADTC)
		AAREADTQ := FQ5->(GETAREA())
		
		DBSELECTAREA("FQ5")
		DBSETORDER(1)
		DBGOTO(NREGDTQ)
		
		RECLOCK("FQ5",.F.)
		FQ5->FQ5_NUMPV  := CNUMSC5 
		FQ5->FQ5_NUMCTR := CNOTA 
		FQ5->FQ5_SERCTR	:= CSERIE 
		FQ5->(MSUNLOCK()) 
		
		RESTAREA(AAREADTQ)
		
		ACERTOICMS(CNOTA , CSERIE , CTIPO) 
		
		MSGINFO("FOI GERADA A NOTA FISCAL CTRC DE NUMERO ["+CNOTA+"]" , "GPO - LOCF008.PRW") 
	ENDIF
	
ENDIF

END TRANSACTION
// AJUSTE PARA DESBLOQUEIO DE NUMERO SEQUENCIAL DA NOTA
IF (GETMV("MV_NUMITEN",.T.))
	SX6->(MSUNLOCK())
ENDIF

RETURN .T.



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ GRV_DT6   º AUTOR ³ IT UP BUSINESS     º DATA ³ 20/04/2011 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION GRV_DT6( NRECDTC, NRECDTQ)

LOCAL CDTQORI := ""
LOCAL ADTQORI := {}
LOCAL NLINHAS := 0
LOCAL COBS    := ""
LOCAL NX      := 0 

DBSELECTAREA("FQ5")
DBGOTO(NRECDTQ)

DBSELECTAREA("DTC")
DBGOTO(NRECDTC)

DBSELECTAREA("SF2")
DBSETORDER(1)
DBSEEK(XFILIAL("SF2")+FQ5->FQ5_NUMCTR+FQ5->FQ5_SERCTR)

DBSELECTAREA("DT6")
DBSETORDER(1)

NLINHAS := MLCOUNT(FQ5->FQ5_OBSCTR)

FOR NX := 1 TO NLINHAS
	COBS += MEMOLINE(FQ5->FQ5_OBSCTR,,NX)
NEXT NX

RECLOCK("DT6", !DBSEEK(XFILIAL("DT6")+SF2->F2_DOC+SF2->F2_SERIE))
DT6_FILIAL  :=  XFILIAL("DT6")
DT6_FILDOC	:=	SF2->F2_FILIAL
DT6_DOC		:=	SF2->F2_DOC
DT6_SERIE	:=	SF2->F2_SERIE
DT6_DATEMI	:=	SF2->F2_EMISSAO
DT6_VALFRE	:=	DTC->DTC_VALOR
DT6_VALIMP	:=	SF2->F2_VALICM
DT6_VALTOT	:=	SF2->F2_VALBRUT
DT6_VALFAT	:=	SF2->F2_VALBRUT
DT6_VALMER	:=	FQ5->FQ5_BASADV
DT6_SERTMS	:=	FQ5->FQ5_SERTMS
DT6_TIPTRA	:=	FQ5->FQ5_TIPTRA
//IF COMPL.ICMS OU COMPL.VALOR 8 || SENAO 2
DT6_DOCTMS	:=	STRZERO( IIF(CTPCTRC $ "1|2",8,2), LEN(DT6->DT6_DOCTMS))	// DOCUMENTO DE TRANSPORTE CADASTRADO
DT6_CDRORI	:=	"000001" 			// COD. REGIÃO DE ORIGEM
DT6_CDRDES	:=	"000001" 			// COD. REGIÃO DE DESTINO
DT6_CDRCAL	:=	"000001" 			// COD. REGIÃO DO CALCULO
DT6_TIPFRE	:=	DTC->DTC_TIPFRE
DT6_PRZENT	:=	SF2->F2_EMISSAO
DT6_FILORI	:=	DTC->DTC_FILORI
DT6_FILDES	:=	DTC->DTC_FILORI
DT6_BLQDOC	:=	"2"					// BLOQUEADO 1=SIM 2=NÃO 3=DESCARREGANDO
DT6_PRIPER	:=	"1" 				// PRIMEIRO PERCURSO 1=SIM 2=NÃO
DT6_CLIREM	:=	DTC->DTC_CLIREM
DT6_LOJREM	:=	DTC->DTC_LOJREM
DT6_CLIDES	:=	DTC->DTC_CLIDES
DT6_LOJDES	:=	DTC->DTC_LOJDES
DT6_CLIDEV	:=	DTC->DTC_CLIDEV
DT6_LOJDEV	:=	DTC->DTC_LOJDEV
DT6_CLICAL	:=	DTC->DTC_CLICAL
DT6_LOJCAL	:=	DTC->DTC_LOJCAL
DT6_CLICON	:=	DTC->DTC_CLICON
DT6_LOJCON	:=	DTC->DTC_LOJCON
DT6_DEVFRE	:=	IIF(DTC->DTC_CLIDEV+DTC->DTC_LOJDEV = DTC->DTC_CLIDES+DTC->DTC_LOJDES , "1" , "2") 
DT6_SERVIC	:=	"010" 
DT6_CODMSG	:=	"999" 
DT6_STATUS	:=	"7" 
DT6_PESO	:=	DTC->DTC_PESO
DT6_VOLORI	:=	DTC->DTC_QTDVOL
DT6_HOREMI	:=	RETHORA(SF2->F2_HORA)
DT6_CLIDPC	:=  DTC->DTC_CLIDPC
DT6_LOJDPC	:=  DTC->DTC_LOJDPC
//DT6_HOREMI := STRTRANSF(SF2->F2_HORA,":","")
IF !EMPTY(CTPCTRC) 					// GRAVAR DOC E SERIE PARA O CTRC COMPLEMENTAR DO CTRC ORIGINAL
	CDTQORI := GETDTQORI(FQ5->FQ5_SOT,FQ5->FQ5_AS,FQ5->FQ5_CTRORI)
	ADTQORI := STRTOKARR(CDTQORI,";")
	DT6_FILIAL  := XFILIAL("DT6")
	DT6_FILDCO  := SF2->F2_FILIAL
	DT6_DOCDCO  := ADTQORI[1]
	DT6_SERDCO  := ADTQORI[2]
ENDIF
DT6->(MSUNLOCK())

IF CTPCTRC $ "1|2"
 //	MSMM(DT6->DT6_CODOBS,,,COBS,1,,,"DT6","DT6_CODOBS")
ENDIF

DBSELECTAREA("DT8")

RECLOCK("DT8",.T.)
DT8->DT8_FILIAL := XFILIAL("DT8")
DT8->DT8_CODPAS := "TF"
DT8->DT8_VALTOT := FQ5->FQ5_TOTFRE
DT8->DT8_FILDOC := DT6->DT6_FILDOC
DT8->DT8_DOC    := DT6->DT6_DOC
DT8->DT8_SERIE  := DT6->DT6_SERIE
DT8->DT8_FILORI := DT6->DT6_FILORI
DT8->DT8_CDRORI := DT6->DT6_CDRORI
DT8->DT8_CDRDES := DT6->DT6_CDRDES
DT8->DT8_CODPRO := DTC->DTC_CODPRO
DT8->(MSUNLOCK()) 

RECLOCK("DT8",.T.)
DT8->DT8_FILIAL	:= XFILIAL("DT8")
DT8->DT8_CODPAS	:= "FR"
DT8->DT8_VALTOT	:= FQ5->FQ5_VALADV
DT8->DT8_FILDOC	:= DT6->DT6_FILDOC
DT8->DT8_DOC    := DT6->DT6_DOC
DT8->DT8_SERIE	:= DT6->DT6_SERIE
DT8->DT8_FILORI	:= DT6->DT6_FILORI
DT8->DT8_CDRORI	:= DT6->DT6_CDRORI
DT8->DT8_CDRDES	:= DT6->DT6_CDRDES
DT8->DT8_CODPRO	:= DTC->DTC_CODPRO
DT8->(MSUNLOCK()) 

RETURN .T.



// ======================================================================= \\
STATIC FUNCTION RETHORA(CHORA)
// ======================================================================= \\

LOCAL CEST     := SM0->M0_ESTCOB
LOCAL CNHVEST  := GETMV("MV_LOCX234",,"BA")
LOCAL CHORANEW := CHORA

// VALIDA SE O ESTADA DEVE TER REDUÇÃO DE UMA HORA
IF CEST $ CNHVEST
	// VALIDA SE O MES ESTA DENTRO DO PERIODO DO HORARIO DE VERÃO
	IF MONTH(DDATABASE) >= 10 .OR. MONTH(DDATABASE) <= 2
		// VALIDA SE ESTA DENTRO DO HORARIO DE VERÃO DESSE ANO (MES > 1 E MENOR OU IGUAL À 2)  OU DO ANO PASSADO (MES > 10 E MENOR OU IGUAL À 12)
		IF (DDATABASE >= HORVERAO(DDATABASE)[1]  .AND. DDATABASE <= HORVERAO(DDATABASE)[2]) .OR. (DDATABASE >= HORVERAO(DDATABASE-365)[1]  .AND. DDATABASE <= HORVERAO(DDATABASE-365)[2])
			// SUBTRAI UMA HORA DO HORARIO ATUAL
			CHORANEW := __TIMESUB(CHORA,"01:00") 
		ENDIF 
	ENDIF 
ENDIF 

RETURN(REPLACE(CHORANEW , ":" , "")) 



// ======================================================================= \\
STATIC FUNCTION PASCOA(DDATE)
// ======================================================================= \\

LOCAL NVARLEN := SETVARNAMELEN(100)
LOCAL CANO    := LEFT(DTOS(DDATE),4)
LOCAL CDIA    := SPACE(2)
LOCAL CMES    := SPACE(2)
LOCAL DRET
LOCAL A
LOCAL B
LOCAL C
LOCAL D
LOCAL E

#IFDEF METODO_PASCOA_GAUSS

	LOCAL X
	LOCAL Y
	LOCAL NFAIXA := ASCAN(AFAIXASANOS, {|ANO|  CANO >= ANO[1] .AND. CANO <= ANO[2]} )
	
	STATIC AFAIXASANOS := { {"1600" , "1699" , 22 , 2},;
	                        {"1700" , "1799" , 23 , 3},;
	                        {"1800" , "1899" , 23 , 4},;
	                        {"1900" , "1999" , 24 , 5},;
	                        {"2000" , "2099" , 24 , 5},;
	                        {"2100" , "2199" , 24 , 6},;
	                        {"2200" , "2299" , 25 , 7} } 
	IF NFAIXA == 0
		RETURN
	ENDIF
	
	// ALGORITIMO DE GAUSS PARA CALCULO DA PASCOA
	X := AFAIXASANOS[NFAIXA][3]
	Y := AFAIXASANOS[NFAIXA][4]
	
	A := MOD(VAL(CANO),19)
	B := MOD(VAL(CANO),04)
	C := MOD(VAL(CANO),07)
	D := MOD((19*A)+X,30)
	E := MOD(((2*B)+(4*C)+(6*D)+Y),7)
	
	// O DOMINGO DE PASCOA SEMPRE VAI SER ENTRE 22 DE MARÇO A 25 DE ABRIL
	IF	(D+E) < 10
		CDIA := STRZERO(D+E+22,2)
		CMES := "03"
	ELSE
		CDIA := STRZERO(D+E-9,2)
		// EXCEÇÕES A REGRA
		DO CASE
		CASE CDIA == "26"
			CDIA :=	"19"
		CASE CDIA == "25" .AND. D == 28 .AND. A > 10
			CDIA :=	"18"
		ENDCASE
		CMES := "04"
	ENDIF
	
#ELSE

	#IFDEF METODO_PASCOA_MEEUS
		
		LOCAL F
		LOCAL G
		LOCAL H
		LOCAL I
		LOCAL J
		LOCAL K
		LOCAL L
		
		A	:=	MOD(VAL(CANO), 19)
		B	:=	INT(VAL(CANO)/100)
		C	:=	MOD(VAL(CANO),100)
		D	:=	INT(B/4)
		E	:=	MOD(B,4)
		F	:=	INT( (B + 8) / 25 )
		G	:=	INT( (B - F + 1) / 3)
		H	:=	MOD(19 * A + B - D - G + 15, 30)
		I	:=	INT(C/4)
		J	:=	MOD(C,4)
		K	:=	MOD( (32 + 2 * E + 2 * I - H - J), 7 )
		L	:=	INT( (A + 11 * H + 22 * K) / 451 )
		
		CMES	:=	CVALTOCHAR( INT( ( H +  K - 7 * L + 114 ) / 31 ) )
		CDIA	:=	CVALTOCHAR( MOD( (H + K - 7 * L + 114), 31 ) + 1 )
		
	#ELSE
		CANO	:=	SPACE(2)
	#ENDIF

#ENDIF

SET(4,"DD/MM/"+IF(__SETCENTURY(),"YYYY","YY"))

DRET := CTOD(CDIA+"/"+CMES+"/"+CANO)

SETVARNAMELEN(NVARLEN)

RETURN( DRET )



// ======================================================================= \\
STATIC FUNCTION CARNAVAL(DDATE)
// ======================================================================= \\

LOCAL DPASCOA := PASCOA(DDATE)

IF VALTYPE(DPASCOA) == "U"
	RETURN
ENDIF

RETURN(DPASCOA-47)



// ======================================================================= \\
STATIC FUNCTION HORVERAO(DDATE)
// ======================================================================= \\

LOCAL NX        := 0 
LOCAL NCOUNT	:= 0
LOCAL CANO		:= LEFT(DTOS(DDATE),4)
LOCAL LBISSEXTO	:= MOD(VAL(SOMA1(CANO)),4) == 0 .AND. (MOD(VAL(SOMA1(CANO)),400) == 0 .AND. MOD(VAL(SOMA1(CANO)),100) <> 0)  // CALCULA SE O ANO É BISSEXTO
LOCAL DINI
LOCAL DFIM

// CALCULA O 3O. DOMINGO DO MES DE OUTUBRO SENDO ESSE O DIA INICIAL DO HORARIO DE VERÃO
FOR NX :=	STOD(CANO+"1001") TO STOD(CANO+"1031")
	IF DOW(NX) == 1
		NCOUNT++
		IF NCOUNT == 3		// 3O DOMINGO
			DINI	:=	NX
			EXIT
		ENDIF
	ENDIF
NEXT NX

// ZERA O CONTADOR
NCOUNT := 0

// INCREMENTA 1 AO ANO PARA CALCULO DE TERMINO DO HORARIO DE VERÃO
CANO   := SOMA1(CANO)

// CALCULA O 3O DOMINGO DE FEVEREIRO DO PROXIMO ANO CASO O MESMO SEJA O CARNAVAL PEGAR O PROXIMO DOMINGO
FOR NX := STOD(CANO+"0201") TO STOD(CANO+"02"+IIF(LBISSEXTO,"29","28"))
	IF DOW(NX) == 1
		NCOUNT++
		IF NCOUNT == 3 .AND. EMPTY(DFIM) 	// 3O DOMINGO
			DFIM	:=	NX
			IF !DFIM == CARNAVAL(DFIM) 		// SE NÃO FOR CARNAVAL FINALIZA
				EXIT
			ENDIF
		ELSE
			IF !EMPTY(DFIM) 				// SOMENTE QUANDO É CARNAVAL
				DFIM	:=	NX
				EXIT
			ENDIF
		ENDIF
	ENDIF
NEXT NX

RETURN({DINI,DFIM})



// ======================================================================= \\
STATIC FUNCTION GETDTQORI(CSOT,CAS,CCTRORI)
// ======================================================================= \\

LOCAL AAREA	 := GETAREA()
LOCAL CQUERY := ""
LOCAL CRET   := ""

IF SELECT("TRB01") > 0
	TRB01->(DBCLOSEAREA())
ENDIF
CQUERY := " SELECT DTQ.FQ5_NUMCTR , DTQ.FQ5_SERCTR " 
CQUERY += " FROM " + RETSQLNAME("FQ5") + " DTQ "
CQUERY += " WHERE  DTQ.FQ5_FILIAL =  '"+XFILIAL("FQ5")+"' "
CQUERY +=   " AND  DTQ.D_E_L_E_T_ = '' "
CQUERY +=   " AND  DTQ.FQ5_SOT    =  '"+CSOT+"' "
CQUERY +=   " AND  DTQ.FQ5_AS     =  '"+CAS+"' "
CQUERY +=   " AND  DTQ.FQ5_VIAGEM =  '"+CCTRORI+"' "
CQUERY := CHANGEQUERY(CQUERY)
TCQUERY CQUERY NEW ALIAS "TRB01"

DBSELECTAREA("TRB01")
CRET := TRB01->FQ5_NUMCTR+";"+TRB01->FQ5_SERCTR

RESTAREA(AAREA)

RETURN(CRET)



// ======================================================================= \\
STATIC FUNCTION ACERTOICMS(CNOTA , CSERIE , COPC) 
// ======================================================================= \\

LOCAL AAREA	 	:= GETAREA()
LOCAL AAREASD2	:= SD2->(GETAREA())
LOCAL AAREASFT	:= SFT->(GETAREA())
LOCAL AAREASF3	:= SF3->(GETAREA())
LOCAL AAREASF2	:= SF2->(GETAREA())
LOCAL NVALICM   := 0
LOCAL ARECSFT	:= {}
LOCAL ARECSD2	:= {}
LOCAL ARECSF3	:= {}
LOCAL ARECSF2	:= {}
LOCAL NX        := 0 

DBSELECTAREA("FQ5")
DBSETORDER(1)
DBGOTO(NREGDTQ)

NALIQICM := FQ5->FQ5_PERICM

IF !FQ5->FQ5_DESICM 			// SE NÃO DESTACA ICMS, NÃO FAZ O ACERTO.
	RETURN
ENDIF

IF COPC == "I"

	DBSELECTAREA("SD2")
	DBSETORDER(3) 				// DOC+SERIE
	DBSEEK(XFILIAL("SD2")+CNOTA+CSERIE)
	
	WHILE !SD2->(EOF()) .AND. SD2->(D2_FILIAL+D2_DOC+D2_SERIE) == XFILIAL("SD2")+CNOTA+CSERIE
		NVALICM := (SD2->D2_TOTAL * SD2->D2_ALIQSOL)/100
		AADD(ARECSD2,{SD2->(RECNO()),NVALICM,SD2->D2_TOTAL})
		DBSELECTAREA("SFT")
		DBSETORDER(1) 			// TIPO MOV+SERIE+NOTA+CLIEFOR+LOJA+ITEM+PRODUTO
		IF DBSEEK(XFILIAL("SFT")+"S"+SD2->D2_SERIE+SD2->D2_DOC+SD2->D2_CLIENTE+SD2->D2_LOJA+SD2->D2_ITEM)
			AADD(ARECSFT,{SFT->(RECNO()),SD2->D2_ALIQSOL,SD2->D2_TOTAL,NVALICM})
		ENDIF
		SD2->(DBSKIP())
	ENDDO
	
	// --> ATUALIZA AS TABELAS SD2  E SFT
	FOR NX := 1 TO LEN(ARECSD2)
		DBSELECTAREA("SD2")
		DBGOTO(ARECSD2[NX,1])
		RECLOCK("SD2",.F.)
		SD2->D2_VALICM  := ARECSD2[NX,2]
		SD2->D2_BASEICM := ARECSD2[NX,3]
		SD2->(MSUNLOCK()) 
	NEXT NX
	
	FOR NX := 1 TO LEN(ARECSFT)
		DBSELECTAREA("SFT")
		DBGOTO(ARECSFT[NX,1])
		RECLOCK("SFT",.F.)
		SFT->FT_ALIQICM := ARECSFT[NX,2]
		SFT->FT_BASEICM := ARECSFT[NX,3]
		SFT->FT_VALICM	:= ARECSFT[NX,4]
		SFT->(MSUNLOCK()) 
	NEXT NX

ELSE

	DBSELECTAREA("SD2")
	DBSETORDER(3) 				// DOC+SERIE
	DBSEEK(XFILIAL("SD2")+CNOTA+CSERIE)
	
	WHILE !SD2->(EOF()) .AND. SD2->(D2_FILIAL+D2_DOC+D2_SERIE) == XFILIAL("SD2")+CNOTA+CSERIE
		NVALICM := (SD2->D2_TOTAL * NALIQICM)/100
		AADD(ARECSD2,{SD2->(RECNO()),NVALICM})
		DBSELECTAREA("SFT")
		DBSETORDER(1) 			// TIPO MOV+SERIE+NOTA+CLIEFOR+LOJA+ITEM+PRODUTO
		IF DBSEEK(XFILIAL("SFT")+"S"+SD2->D2_SERIE+SD2->D2_DOC+SD2->D2_CLIENTE+SD2->D2_LOJA+SD2->D2_ITEM)
			AADD(ARECSFT,{SFT->(RECNO()),NVALICM})
		ENDIF
		SD2->(DBSKIP()) 
	ENDDO
	
	DBSELECTAREA("SF2")
	DBSETORDER(1)
	DBSEEK(XFILIAL("SF2")+CNOTA+CSERIE)
	WHILE !SF2->(EOF()) .AND. SF2->(F2_FILIAL+F2_DOC+F2_SERIE) == XFILIAL("SF3")+CNOTA+CSERIE
		NVALICM := (SF2->F2_BASEICM * NALIQICM)/100
		AADD(ARECSF2,{SF2->(RECNO()),NVALICM})
		SF2->(DBSKIP())
	ENDDO
	
	DBSELECTAREA("SF3")
	DBSETORDER(6)
	DBSEEK(XFILIAL("SF3")+CNOTA+CSERIE)
	WHILE !SF3->(EOF()) .AND. SF3->(F3_FILIAL+F3_NFISCAL+F3_SERIE) == XFILIAL("SF3")+CNOTA+CSERIE
		NVALICM := (SF3->F3_BASEICM * NALIQICM)/100
		AADD(ARECSF3,{SF3->(RECNO()),NVALICM})
		SF3->(DBSKIP())
	ENDDO
	
	// --> ATUALIZA AS TABELAS SD2, SFT E SF3
	FOR NX := 1 TO LEN(ARECSD2)
		DBSELECTAREA("SD2")
		DBGOTO(ARECSD2[NX,1])
		RECLOCK("SD2",.F.)
		SD2->D2_VALICM := ARECSD2[NX,2]
		SD2->D2_PICM   := NALIQICM
		SD2->(MSUNLOCK()) 
	NEXT NX
	
	FOR NX := 1 TO LEN(ARECSFT)
		DBSELECTAREA("SFT")
		DBGOTO(ARECSFT[NX,1])
		RECLOCK("SFT",.F.)
		SFT->FT_VALICM	:= ARECSFT[NX,2]
		SFT->FT_ALIQICM := NALIQICM
		SFT->(MSUNLOCK()) 
	NEXT NX
	
	FOR NX := 1 TO LEN(ARECSF2)
		DBSELECTAREA("SF2")
		DBGOTO(ARECSF2[NX,1])
		RECLOCK("SF2",.F.)
		SF2->F2_VALICM  := ARECSF2[NX,2]
		SF2->(MSUNLOCK()) 
	NEXT NX
	
	FOR NX := 1 TO LEN(ARECSF3)
		DBSELECTAREA("SF3")
		DBGOTO(ARECSF3[NX,1])
		RECLOCK("SF3",.F.)
		SF3->F3_VALICM	:= ARECSF3[NX,2]
		SF3->F3_ALIQICM := NALIQICM
		SF3->(MSUNLOCK()) 
	NEXT NX

ENDIF

RESTAREA(AAREASF2)
RESTAREA(AAREASF3)
RESTAREA(AAREASFT)
RESTAREA(AAREASD2)
RESTAREA(AAREA)

RETURN
