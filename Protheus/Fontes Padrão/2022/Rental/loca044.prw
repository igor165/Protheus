#INCLUDE "loca044.ch" 
/*/{PROTHEUS.DOC} LOCA044.PRW
ITUP BUSINESS - TOTVS RENTAL
BOLETINS DE VIAGENS   (PRESTAÇÃO DE CONTAS DOS ADTO.)
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/
#INCLUDE "RWMAKE.CH"                                                                                                                     
#INCLUDE "PROTHEUS.CH"                                                                                                                              
#INCLUDE "TOPCONN.CH"                                                                                                                              

FUNCTION LOCA044()
LOCAL _CUSER      := RETCODUSR(SUBS(CUSUARIO,7,15))  				// RETORNA O CÓDIGO DO USUÁRIO
LOCAL PSTRING     := "FPI" , PCADASTRO := STR0001 //"BOLETIM DE VIAGEM"
//LOCAL CFILTRA , AINDEX := {}
   
PRIVATE CCADASTRO := STR0002 + PCADASTRO + " (" + PSTRING + ")" //"MANUTENÇÃO DE "
PRIVATE CSTRING   := PSTRING
PRIVATE AROTINA   := FMONTAROT()  									// MONTA O AROTINA        
PRIVATE CDELFUNC  := ".T." 											// VALIDACAO PARA A EXCLUSAO. PODE-SE UTILIZAR EXECBLOCK
PRIVATE CPRJOBRA  := "" 
PRIVATE COBRA     := "" 
PRIVATE CMOTORI   := "" 											// *MV_PAR01
PRIVATE CNOMMOT   := "" 											// POSICIONE("DA4",1,XFILIAL("DA4")+CMOTORI,"DA4_NOME")
PRIVATE _CAUTOR	  := .F.
PRIVATE _CTIPAD	  := ""
PRIVATE  CXOPTBAN := PADR(LOCA04502(1),LEN(SA6->A6_COD))				// CÓDIGO DO BANCO   DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE  CXOPTAG  := PADR(LOCA04502(2),LEN(SA6->A6_AGENCIA))			// CÓDIGO DA AGÊNCIA DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE  CXOPTCC  := PADR(LOCA04502(3),LEN(SA6->A6_NUMCON))			// CÓDIGO DA C/C     DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE  CXOPGBAN := PADR(LOCA04502(4),LEN(SA6->A6_COD)) 			// CÓDIGO DO BANCO   DO CAIXA OPERACIONAL GUINDASTE
PRIVATE  CXOPGAG  := PADR(LOCA04502(5),LEN(SA6->A6_AGENCIA))			// CÓDIGO DA AGÊNCIA DO CAIXA OPERACIONAL GUINDASTE
PRIVATE  CXOPGCC  := PADR(LOCA04502(6),LEN(SA6->A6_NUMCON))			// CÓDIGO DA C/C     DO CAIXA OPERACIONAL GUINDASTE
PRIVATE  CXOPPBAN := PADR(LOCA04502(18),LEN(SA6->A6_COD)) 			// CÓDIGO DO BANCO   DO CAIXA OPERACIONAL PLATAFORMA
PRIVATE  CXOPPAG  := PADR(LOCA04502(19),LEN(SA6->A6_AGENCIA))		// CÓDIGO DA AGÊNCIA DO CAIXA OPERACIONAL PLAFORMA
PRIVATE  CXOPPCC  := PADR(LOCA04502(20),LEN(SA6->A6_NUMCON))			// CÓDIGO DA C/C     DO CAIXA OPERACIONAL PLATAFORMA
PRIVATE  CXOPUBAN := PADR(LOCA04502(21),LEN(SA6->A6_COD)) 		 	// CÓDIGO DO BANCO   DO CAIXA OPERACIONAL GRUA
PRIVATE  CXOPUAG  := PADR(LOCA04502(22),LEN(SA6->A6_AGENCIA))		// CÓDIGO DA AGÊNCIA DO CAIXA OPERACIONAL GRUA
PRIVATE  CXOPUCC  := PADR(LOCA04502(23),LEN(SA6->A6_NUMCON))			// CÓDIGO DA C/C     DO CAIXA OPERACIONAL GRUA

PUBLIC _LVER      := .T. 
PUBLIC _LINC 	  := .T. 

//IF !LOCA061() 							// --> VALIDAÇÃO DO LICENCIAMENTO (WS) DO GPO 
//	RETURN 
//ENDIF 

// VALIDA OS ACESSOS DO USUÁRIO
IF FQ1->(DBSEEK(XFILIAL("FQ1") + _CUSER + "LOCA044",.T.)) 			// PROCURA O CÓDIGO DE USUÁRIO NA TABELA DE USUÁRIOS X ROTINAS (SZ5)
	_CAUTOR := .T.
	_CTIPAD := FQ1->FQ1_CC
ELSE
	_CAUTOR := .F.
	_CTIPAD	:= ""
ENDIF

DBSELECTAREA("FPI")                                                                                   
DBSETORDER(1)                                                                                               
MBROWSE(6,1,22,75,CSTRING,,,,,,LOCA04401())

RETURN



// ======================================================================= \\
FUNCTION LOCA04401(NRECNO) 
// ======================================================================= \\
// --> PROCESSO DE LEGENDA   - MENU: "LEGENDA" 

LOCAL ALEGENDA , ACORES 

ALEGENDA := {}
AADD(ALEGENDA,{"BR_AZUL"     , STR0003 }) //"ABERTO   "
AADD(ALEGENDA,{"BR_AMARELO"  , STR0004 }) //"CANCELADO"
AADD(ALEGENDA,{"BR_VERMELHO" , STR0005 }) //"FECHADO  "
AADD(ALEGENDA,{"BR_PRETO"    , STR0006 }) //"APROVADO "

IF NRECNO==NIL 		// CHAMADA PELO MBROWSE NÃO PASSA O RECNO()
	ACORES:={}  
	AADD(ACORES,{'FPI_STATUS="A"',ALEGENDA[1,1]})
	AADD(ACORES,{'FPI_STATUS="C"',ALEGENDA[2,1]})                                                   
	AADD(ACORES,{'FPI_STATUS="F"',ALEGENDA[3,1]}) 
	AADD(ACORES,{'FPI_STATUS="P"',ALEGENDA[4,1]})
	RETURN(ACORES)
ELSE 				// CHAMADA PELO AROTINA PASSA O RECNO()
	BRWLEGENDA(CCADASTRO,OEMTOANSI("STATUS"),ALEGENDA)
	RETURN(.T.)
ENDIF
       
RETURN



// ======================================================================= \\
STATIC FUNCTION FMONTAROT() 							// MONTA O AROTINA
// ======================================================================= \\

LOCAL AROTINA := {} 

IF CNIVEL>=5
	AADD(AROTINA,{STR0007     , "AXPESQUI"  , 0 ,1}) //"PESQUISAR"
	AADD(AROTINA,{"VISUALIZAR"    , "LOCA04403" , 0 ,6})
	AADD(AROTINA,{STR0008  , "LOCA04402" , 0 ,3}) //"ABRE      BV"
	AADD(AROTINA,{STR0009    , "LOCA04404" , 0 ,6}) //"MANUTENÇÃO"
	AADD(AROTINA,{STR0010  , "U_LOCI007" , 0 ,6}) //"IMPRIMI   BV"
	AADD(AROTINA,{STR0011  , "LOCR010" , 0 ,6})                       //"RELATÓRIO BV"
	AADD(AROTINA,{STR0012  , "LOCA04408"  , 0 ,6})                       //"APROVA    BV"
	AADD(AROTINA,{STR0013  , "LOCA04406"  , 0 ,6})                       //"FECHA     BV"
	AADD(AROTINA,{STR0014  , "LOCA04405" , 0 ,6})                      	 //"REABRE    BV"
	AADD(AROTINA,{STR0015  , "LOCA038" , 0 ,6})                      	 //"ESTORNA   BV"
	AADD(AROTINA,{STR0016  , "LOCA04407"  , 0 ,6}) //"CANCELA   BV"
	AADD(AROTINA,{STR0017       , "LOCA04401" , 0 ,6})    //"LEGENDA"
ELSE
	AADD(AROTINA,{STR0007     , "AXPESQUI"  , 0 , 1})                                       //"PESQUISAR"
	AADD(AROTINA,{STR0018    , "LOCA04403" , 0 , 2})              //"VISUALIZAR"
	AADD(AROTINA,{STR0017       , "LOCA04401" , 0 , 6}) //"LEGENDA"
ENDIF    

RETURN(AROTINA)                                



// ======================================================================= \\
FUNCTION LOCA04402() 
// ======================================================================= \\
// --> PROCESSO ABERTURA BV  - MENU: "ABRE BV" 

IF !(ALLTRIM(FPI->FPI_DEPTO) $ _CTIPAD)
	MSGALERT(STR0019 , STR0020)  //"USUÁRIO SEM ACESSO AOS REGISTROS ! DEPARTAMENTO DIFERENTE VERIFIQUE !"###"GPO - LOCT002.PRW"
	RETURN()
ENDIF   
//AXINCLUI ( [CALIAS] , [NREG] , [NOPC] , [AACHO] , [CFUNC] , [ACPOS] , [CTUDOOK]                 , [LF3] , [CTRANSACT] , [ABUTTONS] , [APARAM] , [AAUTO] , [LVIRTUAL] , [LMAXIMIZED] , [CTELA] , [LPANELFIN] , [OFATHER] , [ADIM] , [UAREA] ) --> NOPCA
  AXINCLUI (   "FPI"  ,        ,        ,         ,         ,         , "LOCA04417(M->FPI_MOTORI)" ,       ,             ,            ,          ,         ,            ,              ,         ,             ,           ,        ,         )

RETURN()



// ======================================================================= \\
FUNCTION LOCA04403() 
// ======================================================================= \\
// --> PROCESSO VISUALIZAÇÃO - MENU: "VISUALIZAR"

FMANU(2)

RETURN



// ======================================================================= \\
FUNCTION LOCA04404() 
// ======================================================================= \\
// --> PROCESSO MANUTENÇÃO   - MENU: "MANUTENÇÃO" 

CMOTORI := FPI->FPI_MOTORI
CNOMMOT := POSICIONE("DA4",1,XFILIAL("DA4")+CMOTORI,"DA4_NOME")
FMANU(4)                                                         

RETURN



// ======================================================================= \\
FUNCTION LOCA04405() 
// ======================================================================= \\
// --> PROCESSO REABRE BV    - MENU: "REABRE BV"

_LRET := .T.
_LINC := .F. 

IF !(FPI->FPI_DEPTO $ _CTIPAD)
	MSGALERT(STR0019 , STR0020)  //"USUÁRIO SEM ACESSO AOS REGISTROS ! DEPARTAMENTO DIFERENTE VERIFIQUE !"###"GPO - LOCT002.PRW"
	RETURN()
ENDIF   
  
DO CASE
CASE FPI->FPI_STATUS == "A"
	MSGALERT(STR0021 + FPI->FPI_NRBV + STR0022 , STR0020)  //"ATENÇÃO: O BV NUMERO ["###"] NÃO ESTÁ FECHADO..."###"GPO - LOCT002.PRW"

CASE FPI->FPI_STATUS == "P" .AND. FPI->FPI_APROV == "S"		//.AND. !(_CAUTOR)	// USUÁRIO NÃO PODE REABRIR BV FECHADO
	MSGALERT(STR0021 + FPI->FPI_NRBV + STR0023 , STR0020)  //"ATENÇÃO: O BV NUMERO ["###"] JÁ ESTA APROVADO, NÃO PODERÁ SER REABERTO !"###"GPO - LOCT002.PRW"

OTHERWISE  
	IF MSGYESNO(STR0024 + FPI->FPI_NRBV + " ?") //"CONFIRMA A REABERTURA DO BV NR. "
		BEGIN TRANSACTION
		
		// ESTORNO A APROVAÇÃO VALIDANDO O SE1 E O SE5
		IF FPI->FPI_STATUS == "P" .AND. FPI->FPI_APROV == "S" .AND. _CAUTOR

			// APAGO TODA MOVIMENTAÇÃO NO SE2 DESTE BV
			DBSELECTAREA("SE2")
			DBSETORDER(1)
			IF MSSEEK(XFILIAL("SE2") + "BV" + FPI->FPI_NRBV ) .AND. _LRET						// FILIAL+PREFIXO+TITULO+PARCELA+TIPO+CLI/FOR+LOJA
				WHILE !EOF() .AND. SE2->E2_FILIAL == XFILIAL("SE2") .AND. SE2->E2_PREFIXO == "BV" .AND. SE2->E2_NUM == FPI->FPI_NRBV
					ASE2 := {}

					_CBANCO	  := IIF(FPI->FPI_DEPTO=="1",CXOPGBAN,;
								 IIF(FPI->FPI_DEPTO=="2",CXOPTBAN,;
								 IIF(FPI->FPI_DEPTO=="3",CXOPPBAN,;
								 IIF(FPI->FPI_DEPTO=="4",CXOPUBAN,""))))		//1=GUINDASTE;2=TRANSPORTE;3=PLATAFORMA;4=GRUA
					_CAGENCIA := IIF(FPI->FPI_DEPTO=="1",CXOPGAG ,;
								 IIF(FPI->FPI_DEPTO=="2",CXOPTAG ,;
								 IIF(FPI->FPI_DEPTO=="3",CXOPPAG ,;
								 IIF(FPI->FPI_DEPTO=="4",CXOPUAG ,""))))		//1=GUINDASTE;2=TRANSPORTE;3=PLATAFORMA;4=GRUA
					_CNUMCON  := IIF(FPI->FPI_DEPTO=="1",CXOPGCC ,;
								 IIF(FPI->FPI_DEPTO=="2",CXOPTCC ,;
								 IIF(FPI->FPI_DEPTO=="3",CXOPPCC ,;
								 IIF(FPI->FPI_DEPTO=="4",CXOPUCC ,""))))		//1=GUINDASTE;2=TRANSPORTE;3=PLATAFORMA;4=GRUA

					// PREENCHE O ARRAY
					AADD(ASE2,{"E2_FILIAL"  , XFILIAL("SE2")	, NIL})
					AADD(ASE2,{"E2_PREFIXO" , SE2->E2_PREFIXO	, NIL})
					AADD(ASE2,{"E2_NUM"     , SE2->E2_NUM		, NIL})
					AADD(ASE2,{"E2_PARCELA" , SE2->E2_PARCELA   , NIL})
					AADD(ASE2,{"E2_TIPO"    , SE2->E2_TIPO	    , NIL})
					AADD(ASE2,{"E2_NATUREZ" , SE2->E2_NATUREZ   , NIL})
					AADD(ASE2,{"E2_FORNECE" , SE2->E2_FORNEC    , NIL})
					AADD(ASE2,{"E2_LOJA"    , SE2->E2_LOJA      , NIL})
					AADD(ASE2,{"E2_NOMFOR"  , SE2->E2_NOMFOR    , NIL})
					AADD(ASE2,{"E2_EMISSAO" , SE2->E2_EMISSAO   , NIL})
					AADD(ASE2,{"E2_VENCTO"  , SE2->E2_VENCTO    , NIL})
					AADD(ASE2,{"E2_VENCREA" , SE2->E2_VENCREA   , NIL})
					AADD(ASE2,{"E2_VALOR"   , SE2->E2_VALOR     , NIL})
					AADD(ASE2,{"E2_HIST"    , SE2->E2_HIST      , NIL})
					AADD(ASE2,{"E2_DATALIB" , SE2->E2_DATALIB   , NIL})
					AADD(ASE2,{"AUTBANCO"   , _CBANCO           , NIL})
					AADD(ASE2,{"AUTAGENCIA" , _CAGENCIA         , NIL})
					AADD(ASE2,{"AUTCONTA"   , _CNUMCON          , NIL})

					MSEXECAUTO({ | X,Y,Z | FINA050(X,Y,Z) }, ASE2,,5)

					IF LMSERROAUTO
						MOSTRAERRO()	// "\ERROS\", "LOCT002.LOG")
						_LRET := .F.
					ELSE
						MSGALERT(STR0026 + FPI->FPI_NRBV + STR0025 , STR0020)  //"TÍTULO BV/"###" ESTORNADO COM SUCESSO."###"GPO - LOCT002.PRW"
					ENDIF

					DBSELECTAREA("SE2")
					DBSKIP()
				ENDDO
				
			ENDIF
			
		ENDIF

		// ALTERO OS STATUS DO BV			
		IF _LRET
			FPI->(RECLOCK("FPI",.F.))
			FPI->FPI_STATUS := "A"
			FPI->FPI_APROV  := "N"
		    FPI->FPI_DTFECH := CTOD("//")
		    FPI->FPI_TIMEFE := ""
		    FPI->FPI_USUFEC := ""
			FPI->(MSUNLOCK())
			MSGINFO(STR0027 , STR0020) //"REABERTURA REALIZADA COM SUCESSO.."###"GPO - LOCT002.PRW"
		ELSE
			MSGALERT(STR0028 , STR0020) //"ATENÇÃO: A REABERTURA NÃO FOI REALIZADA POIS DOCUMENTOS JÁ FORAM MOVIMENTADOS..."###"GPO - LOCT002.PRW"
		ENDIF
		
		END TRANSACTION

	ENDIF 

ENDCASE         

DBSELECTAREA("FPI")

RETURN



// ======================================================================= \\
FUNCTION LOCA04406() 
// ======================================================================= \\
// --> PROCESSO FECHAMENTO   - MENU: "FECHA BV"

LOCAL DDTULTDESP := DDATABASE

IF !(FPI->FPI_DEPTO $ _CTIPAD)
	MSGALERT(STR0029 , STR0020) // "USUÁRIO SEM ACESSO AOS REGISTROS ! DEPARTAMENTO DIFERENTE VERIFIQUE !"###"GPO - LOCT002.PRW"
	RETURN()
ENDIF   

IF FPI->FPI_STATUS == "F" .OR. ( FPI->FPI_APROV == "S" .AND. FPI->FPI_STATUS == "P" )
   MSGALERT("BV:"+FPI->FPI_NRBV+STR0030 , STR0020) // " JÁ FECHADO OU JÁ APROVADO, NÃO SERÁ POSSÍVEL FECHAMENTO! VERIFIQUE!"###"GPO - LOCT002.PRW"
   RETURN 
ENDIF   
IF FPI->FPI_STATUS = "C"
   MSGALERT("BV:"+FPI->FPI_NRBV+STR0031 , STR0020) // " CANCELADO, NÃO SERÁ POSSÍVEL O FECHAMENTO! VERIFIQUE!"###"GPO - LOCT002.PRW"
   RETURN
ENDIF

// SOMA O TOTAL DOS VALES PAGO AO MOTORISTA
_NTOTVALE := 0
FPH->(DBSETORDER(5))
FPH->(DBSEEK(XFILIAL("FPH") + FPI->FPI_NRBV))
WHILE FPH->(!EOF()) .AND. FPH->FPH_NRBV == FPI->FPI_NRBV
	IF FPH->FPH_MOTORI == FPI->FPI_MOTORI	//SÓ ACEITA DO MESMO MOTORISTA
		_NTOTVALE += FPH->FPH_VALOR
	ENDIF
	FPH->(DBSKIP())
ENDDO

// SOMA O TOTAL DAS DESPESAS APRESENTADAS
_NTOTDESP := 0
FPK->(DBSETORDER(1))
FPK->(DBSEEK(XFILIAL("FPK") + FPI->FPI_NRBV)) 
DDTULTDESP := FPK->FPK_DATA

WHILE FPK->(!EOF()) .AND. FPK->FPK_NRBV == FPI->FPI_NRBV
	SED->(DBSETORDER(1))
	SED->(DBSEEK(XFILIAL("SED") + FPK->FPK_CODDES))
	// campo ed_movadm removido da 94
	//IF SED->ED_MOVADM <> "S"	//SE NÃO MOVIMENTA CAIXA ADMINISTRATIVO, SIGNIFICA QUE A DESPESA NÃO SAIU DO CAIXA
	//	_NTOTDESP += FPK->FPK_VLTOT
	//ENDIF
	FPK->(DBSKIP())
ENDDO

// SE AS DESPESAS FOR MAIOR QUE OS VALES ALERTO O USUÁRIO PARA INCLUIR NOVOS VALES ANTES DE FECHAR O BV
IF (_NTOTVALE - (FPI->FPI_DEVOLU + FPI->FPI_DESFOL + FPI->FPI_PENDEN)) < _NTOTDESP
   MSGALERT(STR0032    										+ CHR(13) + ;
   			STR0033  												+ CHR(13) + ;
   			FPI->FPI_MOTORI + "-" + ALLTRIM(FPI->FPI_NOMMOT) + "," 												+ CHR(13) + ;
   			STR0034   + ALLTRIM(TRANSFORM(((_NTOTDESP + FPI->FPI_DEVOLU + FPI->FPI_DESFOL + FPI->FPI_PENDEN) - _NTOTVALE),"@E 999,999,999,999.99")) + "." 	+ CHR(13) + ;
   			STR0035 + FPI->FPI_NRBV + STR0036 										+ CHR(13) + ;
   			STR0037 , STR0020)   

// "ATENÇÃO: EXISTEM MAIS DESPESAS DO QUE VALES NO SISTEMA,"###"É NECESSÁRIO INCLUIR MAIS UM VALE PARA O MOTORISTA"###
// "DE PELO MENOS R$ "###"O FECHAMENTO DO BV "###" NÃO FOI REALIZADO."###"OBS: O SISTEMA CONSIDERA O VALOR DEVOLVIDO PELO MOTORISTA."
// ###"GPO - LOCT002.PRW"

// SE AS DESPESAS FOR MENOR QUE OS VALES ALERTO O USUÁRIO PARA ACERTAR A DIFERENÇA ANTES DE FECHAR O BV
ELSEIF (_NTOTVALE - (FPI->FPI_DEVOLU + FPI->FPI_DESFOL + FPI->FPI_PENDEN)) > _NTOTDESP
   MSGALERT("ATENÇÃO: EXISTEM MAIS VALES DO QUE DESPESAS NO SISTEMA,"      										+ CHR(13) + ;
   			"É NECESSÁRIO ACERTAR A DIFERENÇA COM O MOTORISTA"  												+ CHR(13) + ;
   			FPI->FPI_MOTORI + "-" + ALLTRIM(FPI->FPI_NOMMOT) + "," 												+ CHR(13) + ;
   			"DIFERENÇA ENCONTRADA R$ "   + ALLTRIM(TRANSFORM((_NTOTVALE - (_NTOTDESP + FPI->FPI_DEVOLU + FPI->FPI_DESFOL + FPI->FPI_PENDEN)),"@E 999,999,999,999.99")) + "." 	+ CHR(13) + ;
   			"VALORES DEVOLVIDOS   R$ "   + ALLTRIM(TRANSFORM(FPI->FPI_DEVOLU,"@E 999,999,999,999.99")) + "." 	+ CHR(13) + ;
   			"DESCONTO EM FOLHA    R$ "   + ALLTRIM(TRANSFORM(FPI->FPI_DESFOL,"@E 999,999,999,999.99")) + "." 	+ CHR(13) + ;
   			"PENDENTE PROXIMO BV  R$ "   + ALLTRIM(TRANSFORM(FPI->FPI_PENDEN,"@E 999,999,999,999.99")) + "." 	+ CHR(13) + ;
   			"O FECHAMENTO DO BV " + FPI->FPI_NRBV + " NÃO FOI REALIZADO." 										+ CHR(13) + ;
   			"OBS: O SISTEMA CONSIDERA O VALOR DEVOLVIDO PELO MOTORISTA." , "GPO - LOCT002.PRW")   

ELSEIF MSGYESNO("CONFIRMA O FECHAMENTO DO BV:"+FPI->FPI_NRBV+" ???")
   IF EMPTY(DDTULTDESP)
   		DDTULTDESP := DDATABASE
   ENDIF
   
   FPI->(RECLOCK("FPI",.F.))
   FPI->FPI_STATUS := "F"
   FPI->FPI_DTFECH := DDTULTDESP
   FPI->FPI_TIMEFE := SUBSTR(TIME(),1,5)
   FPI->FPI_USUFEC := ALLTRIM(CUSERNAME)
   FPI->(MSUNLOCK())
   MSGINFO("FECHAMENTO REALIZADO COM SUCESSO.." , "GPO - LOCT002.PRW") 
   RETURN

ENDIF   

RETURN



// ======================================================================= \\
FUNCTION LOCA04407() 
// ======================================================================= \\
// --> PROCESSO CANCELAMENTO - MENU: "CANCELA BV"

IF !(FPI->FPI_DEPTO $ _CTIPAD)
	MSGALERT("USUÁRIO SEM ACESSO AOS REGISTROS ! DEPARTAMENTO DIFERENTE VERIFIQUE !" , "GPO - LOCT002.PRW")  
	RETURN()
ENDIF   

IF FPI->FPI_STATUS == "F" .OR. ( FPI->FPI_APROV == "S" .AND. FPI->FPI_STATUS == "P" )
	MSGALERT("B.V :"+FPI->FPI_NRBV+" JA FECHADO OU JÁ APROVADO, NÃO SERÁ POSSÍVEL CANCELAR!... VERIFIQUE!" , "GPO - LOCT002.PRW")
	RETURN 
ENDIF 
IF FPI->FPI_STATUS = "C"
	MSGALERT("B.V :"+FPI->FPI_NRBV+" JA CANCELADO" , "GPO - LOCT002.PRW")
	RETURN
ENDIF 

// AJUSTE PARA O USUÁRIO NÃO CONSEGUIR CANCELAR QUANDO A BV'S ESTIVEREM VALES OU DESPESAS VINCULADAS
DBSELECTAREA("FPH")
FPH->(DBSETORDER(5))

IF (DBSEEK(XFILIAL("FPH")+FPI->FPI_NRBV)) 
	MSGALERT("B.V :"+FPI->FPI_NRBV+" NÃO PODERÁ SER CANCELADA POIS EXISTE LANÇAMENTO(S) DE VALE(S)" , "GPO - LOCT002.PRW")
	RETURN
ENDIF               

DBSELECTAREA("FPK")
FPK->(DBSETORDER(1))  

IF (DBSEEK(XFILIAL("FPK")+FPI->FPI_NRBV))
	MSGALERT("B.V :"+FPI->FPI_NRBV+" NÃO PODERÁ SER CANCELADA POIS EXISTE LANÇAMENTO(S) DE DESPESA(S)" , "GPO - LOCT002.PRW") 
	RETURN
ENDIF 

IF MSGYESNO("CONFIRMA O CANCELAMENTO DO B.V :"+FPI->FPI_NRBV+" ???")
	FPI->(RECLOCK("FPI",.F.)) 
	FPI->FPI_STATUS := "C" 
	FPI->(MSUNLOCK())
	MSGINFO("CANCELAMENTO REALIZADO COM SUCESSO.." , "GPO - LOCT002.PRW") 
	RETURN
ENDIF   

FMANU(6)

RETURN
         


// ======================================================================= \\
FUNCTION LOCA04408() 
// ======================================================================= \\
// --> PROCESSO APROVACAO BV - MENU: "APROVA BV"

IF !(FPI->FPI_DEPTO $ _CTIPAD)
	MSGALERT("USUÁRIO SEM ACESSO AOS REGISTROS ! DEPARTAMENTO DIFERENTE VERIFIQUE !" , "GPO - LOCT002.PRW") 
	RETURN()
ENDIF   

LOCA051()       

FMANU(6)

RETURN



// ======================================================================= \\
STATIC FUNCTION FMANU(POPC)
// ======================================================================= \\

LOCAL CTITJAN  := "BOLETIM DE VIAGEM"
LOCAL NSTYLE 
LOCAL NPOS , ODLG  
LOCAL ABUTTONS := {{"OBJETIVO" , {|| MNTA655() } , OEMTOANSI("ABASTEC") , OEMTOANSI("ABASTEC")}} 

PRIVATE NOPC       := POPC 
PRIVATE OARIAL12N1 := TFONT():NEW("ARIAL",12,16,,.T.,,,,.T.,.F.)
PRIVATE OARIAL12N2 := TFONT():NEW("ARIAL",12,16,,.T.,,,,.T.,.F.)

NSTYLE := GD_INSERT + GD_UPDATE + GD_DELETE

OFONT1 := OARIAL12N1  //SAY
OFONT2 := OARIAL12N2  //GET
_LINC  := .F. 
IF !(FPI->FPI_DEPTO $ _CTIPAD)
	IF POPC <> 2 
		MSGALERT("USUÁRIO SEM ACESSO AOS REGISTRO ! DEPARTAMENTO DIFERENTE VERIFIQUE !" , "GPO - LOCT002.PRW") 
		RETURN()
	ENDIF
ENDIF 

// --> FUNÇÃO PARA POSICIONAR ZA0 E ZA1
//FPOSZA01()  

// --> MAXIMIZACAO DA AREA DE TRABALHO
PRIVATE AOBJECTS  := {}
PRIVATE AINFO     := {}
PRIVATE APOSGET   := {}
PRIVATE APOSOBJ   := {}
                                      
IF _LVER
	REGTOMEMORY("FPI",.T.)
	REGTOMEMORY("FPK",.T.)
	REGTOMEMORY("ZL6",.T.)
	REGTOMEMORY("ZLC",.T.)
ENDIF 
ASIZEAUT 	 := MSADVSIZE()

IF OMAINWND:NCLIENTWIDTH > 800
	AADD( AOBJECTS , {100, 008, .T., .T.} )  		// ENCHOICE
	AADD( AOBJECTS , {100, 092, .T., .T.} )  		// MSGETDADOS
ELSE
	AADD( AOBJECTS , {100, 030, .T., .T.} )  		// ENCHOICE
	AADD( AOBJECTS , {100, 070, .T., .T.} )  		// MSGETDADOS
ENDIF

AINFO 	:= {ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
APOSOBJ := MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )
APOSGET := MSOBJGETPOS((ASIZEAUT[3]-ASIZEAUT[1]),315,{{004,024,240,270}} )

_FLAGATU:=.F.

// --> MONTAGEM DA TELA QUE SEHRA APRESENTADA PARA USUARIO (LAY-OUT)
DEFINE MSDIALOG ODLG FROM ASIZEAUT[7],0           TO ASIZEAUT[6],ASIZEAUT[5] TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL

PRIVATE AHEADER:={}
PRIVATE ACOLS:={}

PRIVATE ODLGGER,ODLGVAL,ODLGDES,ODLGVIA,ODLGRES

PRIVATE OFOLDERGER,OFOLDERVAL,OFOLDERCOM,OFOLDERDES,OFOLDERVIA,OFOLDERRES
PRIVATE NFOLDERGER,NFOLDERVAL,NFOLDERDES,NFOLDERVIA,NFOLDERRES
PRIVATE OVALDES,OVALDEV,OVALTOT,OVALLIQ,OQTDPER,OQTDLIT,OVALABA,OQTDDIAS,OQTDDESVIO,OQTDCMEDO,OQTDCMEDH,OQTDHOR
PRIVATE NVALDES,NVALDEV,NVALTOT,NVALLIQ,NQTDPER,NQTDLIT,NVALABA,NQTDDIAS,NQTDDESVIO,NQTDCMEDO,NQTDCMEDH,NQTDHOR

PRIVATE ONRBV,CNRBV

// --> CRIACAO DA INTERFACE.
NFOLDERGER := 0
NFOLDERVAL := 0
NFOLDERDES := 0
NFOLDERVIA := 0
NFOLDERRES := 0
_EDITD     := .F. 

APAGES  := {} 
ATITLES := {} 
AADD(ATITLES , "RESUMO"      ) ; NFOLDERRES := LEN(ATITLES) 
AADD(ATITLES , "GERAL"       ) ; NFOLDERGER := LEN(ATITLES) 
AADD(ATITLES , "VALES VIAGEM") ; NFOLDERVAL := LEN(ATITLES) 
AADD(ATITLES , "DESPESAS"    ) ; NFOLDERDES := LEN(ATITLES) 
AADD(ATITLES , "VIAGENS"     ) ; NFOLDERVIA := LEN(ATITLES) 

NLIN1 := APOSOBJ[2,1]
NCOL1 := APOSOBJ[2,2]
NLIN2 := APOSOBJ[2,4]-APOSOBJ[2,2]  //LARGURA
NCOL2 := APOSOBJ[2,3]-APOSOBJ[2,1]  //ALTURA

//         TFOLDER():NEW(<NROW>,<NCOL>,<CPROMPT>,<CDLGNAMEN>,<OWND>,<NOPTION>,<NCLRFORE>,<NCLRBACK>,<.LPIXEL.>,<.LDESIGN.>,<NWIDTH>,<NHEIGHT>,<CMSG>) 
OFOLDER := TFOLDER():NEW(NLIN1 ,NCOL1 ,ATITLES  ,APAGES     ,ODLG  ,         ,          ,          ,.T.       ,.F.        ,NLIN2   ,NCOL2    , ""   ) 

FOR NPOS:=1 TO LEN(ATITLES)
	OFOLDER:ADIALOGS[NPOS]:OFONT:=ODLG:OFONT
NEXT                                                   

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ CONSISTENCIA A CADA MUDANCA DE PASTA DO OBJETO FOLDER                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
OFOLDER:BSETOPTION := {|NINDO|LOCA04409(NINDO,OFOLDER:NOPTION,@ODLG,@OFOLDER)} 

IF NOPC==3 									// 3=INCLUI
   CNRBV := LOCA04410() 						// TRAZ O PRÓXIMO NÚMERO DO BV
   FPI->(DBSEEK(XFILIAL("FPI")+CNRBV)) 		// POSICIONA EM EOF() NA INCLUSÃO  
	
ELSE
	CNRBV := FPI->FPI_NRBV
	IF NOPC <> 2 
		IF FPI->FPI_STATUS == "F"  
			MSGBOX("ATENÇÃO: BOLETIM JÁ ESTA FECHADO, NAO É POSSÍVEL ALTERAÇÃO!")
			NOPC := 2
		ENDIF                                                                 
		IF FPI->FPI_STATUS == "P"
			MSGBOX("ATENÇÃO: BOLETIM JÁ ESTA APROVADO E FECHADO, NAO É POSSÍVEL ALTERAÇÃO!") 
			NOPC := 2
		ENDIF 
	ENDIF 
ENDIF 
                                     
CALIAS  := "FPI"
ASAYZL2 := {}
AGETZL2 := {}

(LOCXCONV(1))->(DBSETORDER(1))
(LOCXCONV(1))->(DBSEEK(CALIAS))
WHILE (LOCXCONV(1))->(!EOF() .AND. GetSx3Cache(&(LOCXCONV(2)),"X3_ARQUIVO")==CALIAS)    
	IF X3USO( &(LOCXCONV(3)) ) .AND. CNIVEL >= GetSx3Cache(&(LOCXCONV(2)),"X3_NIVEL")
		IF (LOCXCONV(1))->(!UPPER(ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")))$UPPER("FPI_NRBV,FPI_MOTORI,FPI_NOMMOT")) .OR. FPI->FPI_STATUS = "C"  .OR.  FPI->FPI_APROV="S"     
			AADD(ASAYZL2,GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO"))  
		ENDIF	
		IF (LOCXCONV(1))->(!UPPER(ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")))$UPPER("FPI_NRBV,FPI_SOT,FPI_OBRA,FPI_MOTORI,FPI_NOMMOT")) .AND. FPI->FPI_STATUS <> "C" .AND. FPI->FPI_STATUS <> "F"  .AND.  FPI->FPI_APROV<>"S"
			AADD(AGETZL2,GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO"))
		ENDIF                                                 
		IF GetSx3Cache(&(LOCXCONV(2)),"X3_CONTEXT") <> "V"     
			M->&(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")) := (CALIAS)->&(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO"))    
		ELSE
			M->&(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")) := CRIAVAR(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO"))
		ENDIF
	ENDIF
	(LOCXCONV(1))->(DBSKIP())
ENDDO 

IF _LVER  
	IF EMPTY(CPRJOBRA)
		CPRJOBRA := FPI->FPI_SOT
		COBRA    := FPI->FPI_OBRA
		CMOTORI  := FPI->FPI_MOTORI
		CNOMMOT  := POSICIONE("DA4",1,XFILIAL("DA4")+CMOTORI,"DA4_NOME")
	ENDIF
ELSE
	CPRJOBRA := FPI->FPI_SOT
	COBRA    := FPI->FPI_OBRA
	CMOTORI  := FPI->FPI_MOTORI
	CNOMMOT  := POSICIONE("DA4",1,XFILIAL("DA4")+CMOTORI,"DA4_NOME")
ENDIF

M->FPI_NRBV   := CNRBV     		// PREENCHE A VARIÁVEL DE MEMÓRIA COM O NÚMERO DO BV
M->FPI_SOT    := CPRJOBRA 		// CPROJETO //PREENCHE A VARIÁVEL DE MEMÓRIA COM O NÚMERO DO PROJETO
M->FPI_MOTORI := CMOTORI   		// PREENCHE A VARIÁVEL DE MEMÓRIA COM O CÓDIGO DO MOTORISTA
M->FPI_NOMMOT := CNOMMOT   		// PREENCHE A VARIÁVEL DE MEMÓRIA COM O NOME DO MOTORISTA
M->FPI_OBRA   := COBRA
CMOTOR := TRIM(CMOTORI) + " - " + TRIM(CNOMMOT)
                                                                                   
// DADOS DO BOLETIM
NLIN1 := APOSOBJ[1,1]
NCOL1 := APOSOBJ[1,2]
NLIN2 := APOSOBJ[1,3]
NCOL2 := APOSOBJ[1,4]
@ NLIN1,NCOL1 TO NLIN2,NCOL2 OF ODLG PIXEL
@ NLIN1+06,NCOL1+005 SAY   OEMTOANSI("NRO.B.V.:")  SIZE 060,8          OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT1
@ NLIN1+05,NCOL1+070 MSGET ONRBV   VAR CNRBV       SIZE 035,8 WHEN .F. OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT2      
@ NLIN1+05,NCOL1+155 SAY   OEMTOANSI("MOTORISTA:") SIZE 065,8          OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT1       
@ NLIN1+05,NCOL1+220 MSGET OMOTOR  VAR CNOMMOT     SIZE 300,8 WHEN .F. OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT2      
//NLIN1+05,NCOL1+220 MSGET OMOTOR  VAR CMOTOR      SIZE 300,8 WHEN .F. OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT2      
IF NFOLDERRES > 0 										// RESUMO
	NLIN1 := 002
	NCOL1 := 003
	NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-15	// -35 		// ALTURA
	NCOL2 := APOSOBJ[2,4]-07
	FFOLDERRES(NFOLDERRES /*, NLIN1 , NCOL1 , NLIN2 , NCOL2*/) 
	OFOLDER:REFRESH()
ENDIF

IF NFOLDERGER > 0 										// GERAL
	NLIN1 := 002
	NCOL1 := 003
	NLIN2 := APOSOBJ[2,3]-55
	NCOL2 := APOSOBJ[2,4]-07
	FFOLDERGER(NFOLDERGER,NLIN1,NCOL1,NLIN2,NCOL2)
	OFOLDER:REFRESH()
 //	ODLG:REFRESH()
ENDIF

IF NFOLDERVAL > 0 									// VALES VIAGEM
	NLIN1 := 002
	NCOL1 := 003
	NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-15 			// ALTURA
	NCOL2 := APOSOBJ[2,4]-07
	FFOLDERVAL(NFOLDERVAL,NLIN1,NCOL1,NLIN2,NCOL2)
ENDIF

IF NFOLDERDES > 0 									// DESPESAS
	NLIN1 := 002
	NCOL1 := 003
	NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-15 			// ALTURA
	NCOL2 := APOSOBJ[2,4]-07
	FFOLDERDES(NFOLDERDES,NLIN1,NCOL1,NLIN2,NCOL2)
ENDIF

IF NFOLDERVIA > 0 									// VIAGENS
	NLIN1 := 002
	NCOL1 := 003
	NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-15 			// ALTURA
	NCOL2 := APOSOBJ[2,4]-07
	FFOLDERVIA(NFOLDERVIA,NLIN1,NCOL1,NLIN2,NCOL2)
ENDIF

IF NFOLDERRES > 0  
   FCALCRES()  
   OFOLDER:REFRESH()  
   ODLG:REFRESH()  
   _FLAGATU := .T.
ENDIF   
  
ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{||FSALVAR(ODLG)},{||FSAIR(ODLG)},,ABUTTONS) 

RETURN



// ======================================================================= \\
STATIC FUNCTION FSALVAR(ODLG)
// ======================================================================= \\

IF _LVER
	IF MSGYESNO("CONFIRMA A ATUALIZAÇÃO DAS TABELAS ??" , "GPO - LOCT002.PRW") 
		FSALVAR000()
		IF MSGYESNO("TABELAS ATUALIZADAS COM SUCESSO. DESEJA SAIR ??" , "GPO - LOCT002.PRW") 
			ODLG:END()
		ENDIF
	ENDIF
ENDIF

RETURN



// ======================================================================= \\
STATIC FUNCTION FSAIR(ODLG)
// ======================================================================= \\

IF .T. 				// MSGYESNO("SAIR SEM GRAVAR. CONFIRMA ??")
	ODLG:END()
ENDIF 

RETURN



// ======================================================================= \\
FUNCTION LOCA04409(NINDO,NESTOU,ODLG,OFOLDER)
// ======================================================================= \\

LOCAL LRET := .T. 

DO CASE
CASE NINDO==NFOLDERVAL
CASE NINDO==NFOLDERRES
	FCALCRES()
	OVALDES:REFRESH()
ENDCASE

DO CASE
CASE NESTOU==NFOLDERVAL
ENDCASE

OFOLDER:REFRESH()
ODLG:REFRESH()

SETFOCUS()

RETURN(LRET) 



// ======================================================================= \\
STATIC FUNCTION FHEADER(ACAMPOSSIM)
// ======================================================================= \\

LOCAL NPOS,ATABAUX,AHEADER:={}

DBSELECTAREA("SX3")
DBSETORDER(2)  //X3_CAMPO
FOR NPOS:=1 TO LEN(ACAMPOSSIM)
	IF (LOCXCONV(1))->(DBSEEK(ALLTRIM(ACAMPOSSIM[NPOS,1])))
		ATABAUX := {}

		AADD(ATABAUX     , TRIM(X3TITULO())  )
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")     )     
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_PICTURE")   )    
		IF GetSx3Cache(&(LOCXCONV(2)),"X3_TIPO") == "M" .AND. GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "FPH_OBS"    
			AADD(ATABAUX , 50                )
		ELSE
			AADD(ATABAUX , GetSx3Cache(&(LOCXCONV(2)),"X3_TAMANHO")   )   
		ENDIF
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_DECIMAL")   )  
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_VALID")     )    
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_USADO")     )   
		IF GetSx3Cache(&(LOCXCONV(2)),"X3_TIPO") == "M" .AND. GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "FPH_OBS"   
			AADD(ATABAUX , "C"               )
		ELSE
			AADD(ATABAUX , GetSx3Cache(&(LOCXCONV(2)),"X3_TIPO")      )     
		ENDIF
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_F3")        )   
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_CONTEXT")   )  
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_CBOX")      )  
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_RELACAO")   )  
		AADD(ATABAUX     , ".T."             )
	//	AADD(ATABAUX     , SX3->X3_VISUAL    )
		AADD(ATABAUX,IIF(FPI->FPI_STATUS="C" .OR. FPI->FPI_APROV="S","V",GetSx3Cache(&(LOCXCONV(2)),"X3_VISUAL")))   
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_VLDUSER")   )  
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_PICTVAR")   )  
		AADD(ATABAUX     , GetSx3Cache(&(LOCXCONV(2)),"X3_OBRIGAT")   )  

		AADD(AHEADER     , ATABAUX           )
	ENDIF
NEXT

DBSETORDER(1)  //X3_ARQUIVO+X3_ORDEM

RETURN(ACLONE(AHEADER))



// ======================================================================= \\
STATIC FUNCTION FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)
// ======================================================================= \\

LOCAL NPOS , ACOLS0 , ACOLS:={} 
LOCAL _CKEY:=""
	
(CALIAS)->(DBSETORDER(NINDICE))
(CALIAS)->(DBSEEK(CCHAVE,.T.))
WHILE (CALIAS)->(!EOF() .AND. &CCONDICAO)
	IF !(CALIAS)->(&CFILTRO)
		(CALIAS)->(DBSKIP())
        LOOP
	ENDIF

	IF CALIAS<>"FPH" .OR. (CALIAS=="FPH" .AND. !(FPH->FPH_NRVALE $ _CKEY))	// SE NÃO ALIMENTOU AINDA A CHAVE DO ZL1
		IF CALIAS == "FPH"
			_CKEY += FPH->FPH_NRVALE + "|"
		ENDIF      

		ACOLS0:={}
		FOR NPOS:=1 TO LEN(AHEADER)
			IF !AHEADER[NPOS,10]=="V" 	// X3_CONTEXT
				(CALIAS)->(AADD(ACOLS0,FIELDGET(FIELDPOS(AHEADER[NPOS,2]))))
			ELSE
				(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
			ENDIF
		NEXT
		AADD(ACOLS0,.F.  )  			// DELETED 
		AADD(ACOLS,ACOLS0)    
		(CALIAS)->(DBSKIP())        
	ENDIF
ENDDO 
	
IF EMPTY(ACOLS)
	ACOLS0:={}
	FOR NPOS:=1 TO LEN(AHEADER)
		(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
	NEXT
	AADD(ACOLS0,.F.  )  //DELETED
	AADD(ACOLS,ACOLS0)
ENDIF
	
RETURN(ACLONE(ACOLS))



// ======================================================================= \\
STATIC FUNCTION FGRAVATUDO(CALIAS,AHEADER,ACOLS) 
// ======================================================================= \\
// --> GRAVA TODOS OS CAMPOS DO ACOLS

LOCAL NPOS,CCAMPO
FOR NPOS:=1 TO LEN(AHEADER)
	CCAMPO:=AHEADER[NPOS,2]
	(CALIAS)->(&CCAMPO):=ACOLS[NPOS]
NEXT

RETURN(.T.)




// ####################################################################### \\ 
// NUMERACAO - INICIO
// ####################################################################### \\ 

// ======================================================================= \\
FUNCTION LOCA04410()
// ======================================================================= \\

RETURN(FPRONUM("FPI" , "FPI_NRBV" , 1)) 



// ======================================================================= \\
STATIC FUNCTION FPRONUM(CALIAS , CCAMPO , NORDEM) 
// ======================================================================= \\

LOCAL NRECANT := (CALIAS)->(RECNO()) , NORDANT := (CALIAS)->(INDEXORD()) 
LOCAL CRET
(CALIAS)->(DBSETORDER(NORDEM))
(CALIAS)->(DBGOBOTTOM())
CRET := (CALIAS)->(&CCAMPO)
CRET := STRZERO(VAL(CRET)+1,LEN(CRET))
(CALIAS)->(DBSETORDER(NORDANT))
(CALIAS)->(DBGOTO(NRECANT))

RETURN(CRET)

// ####################################################################### \\ 
// NUMERACAO - FINAL 
// ####################################################################### \\ 




// ####################################################################### \\ 
// SALVAR - INICIO
// ####################################################################### \\ 

// ======================================================================= \\
STATIC FUNCTION FSALVAR000()
// ======================================================================= \\

PROCESSA({||FSALVAR001()},"AGUARDE... ATUALIZANDO AS TABELAS")

RETURN



// ======================================================================= \\
STATIC FUNCTION FSALVAR001()
// ======================================================================= \\

PROCREGUA(LEN(OFOLDER:ADIALOGS))

INCPROC("ATUALIZANDO... BOLETIM DE VIAGEM")
FSALVARGER("FPI")  //BOLETIM DE VIAGEM

IF NFOLDERDES>0
	INCPROC("ATUALIZANDO... DESPESAS BV")
	FSALVARDES("FPK",ODLGDES:AHEADER,ODLGDES:ACOLS)
ENDIF

IF NFOLDERVIA>0
	INCPROC("ATUALIZANDO... VIAGENS BV")
	FSALVARVIA("ZL6",ODLGVIA:AHEADER,ODLGVIA:ACOLS)
ENDIF

RETURN 



// ======================================================================= \\
STATIC FUNCTION FSALVARGER(CALIAS) 						// GERAL
// ======================================================================= \\

LOCAL NPOS 

DBSELECTAREA(CALIAS)
DBSETORDER(1)  							// FPI_FILIAL+FPI_NRBV

DBSEEK(XFILIAL(CALIAS)+CNRBV)

IF NOPC==3
	(CALIAS)->(RECLOCK(CALIAS,.T.))
ELSE
	(CALIAS)->(RECLOCK(CALIAS,.F.))
ENDIF

FOR NPOS:=1 TO LEN(AGETZL2)
	CPOS:=AGETZL2[NPOS]            
	(CALIAS)->&(CPOS):=M->&(CPOS)
NEXT
(CALIAS)->FPI_FILIAL := XFILIAL(CALIAS)
(CALIAS)->FPI_NRBV   := CNRBV     		// NRO.BV
(CALIAS)->FPI_SOT    := CPRJOBRA  		// CPROJETO  	// NRO.SOT
(CALIAS)->FPI_MOTORI := CMOTORI   		// MOTORISTA
(CALIAS)->FPI_NOMMOT := CNOMMOT   		// NOME DO MOTORISTA
(CALIAS)->FPI_OBRA   := COBRA     		// CODIGO DA OBRA
IF NOPC==4
	IF (CALIAS)->FPI_STATUS == "F" 
		IF EMPTY((CALIAS)->FPI_USUFEC)
			(CALIAS)->FPI_USUFEC := SUBSTR(CUSUARIO,7,15) 
		ENDIF
		IF EMPTY((CALIAS)->FPI_DTFECH)
			(CALIAS)->FPI_DTFECH := DDATABASE     
			(CALIAS)->FPI_TIMEFE := TIME()
		ENDIF
	ENDIF
ENDIF 
(CALIAS)->(MSUNLOCK())

RETURN 



// ======================================================================= \\
STATIC FUNCTION FSALVARDES(CALIAS,AHEADER,ACOLS) 		// DESPESAS BV
// ======================================================================= \\

LOCAL NPOS,AGRAVADOS:={} 							// GRAVADOS

DBSELECTAREA(CALIAS) 								// DESPESAS BV
DBSETORDER(1) 										// FPK_FILIAL+FPK_NRBV+FPK_ITEM
FOR NPOS:=1 TO LEN(ACOLS)
	CITEM := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPK_ITEM"})]
	IF !ACOLS[NPOS,LEN(AHEADER)+1] .AND. !EMPTY(CNRBV) .AND. !EMPTY(CITEM)  //!DELETED()
		IF !DBSEEK(XFILIAL(CALIAS)+CNRBV+CITEM)
			RECLOCK(CALIAS,.T.)
		ELSE
			RECLOCK(CALIAS,.F.)
		ENDIF
		FGRAVATUDO(CALIAS,AHEADER,ACOLS[NPOS]) 		// GRAVA TODOS OS CAMPOS DO ACOLS
		(CALIAS)->FPK_FILIAL := XFILIAL(CALIAS)
		(CALIAS)->FPK_NRBV   := CNRBV
		(CALIAS)->FPK_ITEM   := CITEM
		(CALIAS)->FPK_SOT    := SUBSTR(CPRJOBRA,1,22)
		(CALIAS)->FPK_OBRA   := SUBSTR(CPRJOBRA,23,3)
		
		AADD(AGRAVADOS,RECNO()) 					// GRAVADOS
		MSUNLOCK()
     ENDIF
NEXT

// EXCLUI OS REGISTROS ALTERADOS
DBSEEK(XFILIAL(CALIAS)+CNRBV)
WHILE !EOF() .AND. FPK_FILIAL+FPK_NRBV==XFILIAL(CALIAS)+CNRBV
	IF ASCAN(AGRAVADOS,{|X|X==RECNO()})==0
		RECLOCK(CALIAS,.F.)
		DBDELETE()
		MSUNLOCK()
	ENDIF
	DBSKIP()
ENDDO 

RETURN



// ======================================================================= \\
STATIC FUNCTION FSALVARVIA(CALIAS,AHEADER,ACOLS) 		// VIAGENS BV
// ======================================================================= \\

LOCAL NPOS,AGRAVADOS:={} 							// GRAVADOS

DBSELECTAREA(CALIAS) 								// VIAGENS BV
DBSETORDER(1) 										// ZL6_FILIAL+ZL6_NRBV+ZL6_ITEM
FOR NPOS:=1 TO LEN(ACOLS)
	CITEM:=ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="ZL6_ITEM"})]
	IF !ACOLS[NPOS,LEN(AHEADER)+1] .AND. !EMPTY(CNRBV) .AND. !EMPTY(CITEM)  //!DELETED()
		IF !DBSEEK(XFILIAL(CALIAS)+CNRBV+CITEM)
			RECLOCK(CALIAS,.T.)
		ELSE
			RECLOCK(CALIAS,.F.)
		ENDIF
		FGRAVATUDO(CALIAS,AHEADER,ACOLS[NPOS]) 		// GRAVA TODOS OS CAMPOS DO ACOLS
		(CALIAS)->ZL6_FILIAL := XFILIAL(CALIAS)
		(CALIAS)->ZL6_NRBV   := CNRBV
		(CALIAS)->ZL6_ITEM   := CITEM
		(CALIAS)->ZL6_SOT    := SUBSTR(CPRJOBRA,1,22)
		(CALIAS)->ZL6_OBRA   := SUBSTR(CPRJOBRA,23,3)
		AADD(AGRAVADOS,RECNO()) 					// GRAVADOS
		MSUNLOCK()
     ENDIF
NEXT

// EXCLUI OS REGISTROS ALTERADOS
DBSEEK(XFILIAL(CALIAS)+CNRBV)
WHILE !EOF() .AND. ZL6_FILIAL+ZL6_NRBV==XFILIAL(CALIAS)+CNRBV
	IF ASCAN(AGRAVADOS,{|X|X==RECNO()})==0
		RECLOCK(CALIAS,.F.)
		DBDELETE()
		MSUNLOCK()
	ENDIF
	DBSKIP()
ENDDO 

RETURN

// ####################################################################### \\ 
// SALVAR - FINAL 
// ####################################################################### \\ 




// ####################################################################### \\ 
// FOLDER - INICIO
// ####################################################################### \\ 

// ======================================================================= \\
STATIC FUNCTION FFOLDERGER(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2)
// ======================================================================= \\

LOCAL CALIAS     := "FPI"
    
//           MSMGET():NEW(CALIAS,NREG               ,NOPC, [ UPAR1 ], [ UPAR2 ], [ UPAR3 ], [ AACHO ], [ APOS ]                , [ ACPOS ], [UPAR4 ] , [ UPAR5 ], [ UPAR6 ], [ UPAR7 ], [ OWND ]                , [ UPAR8 ], [ LMEMORIA ], [ LCOLUNA ], [ UPAR9 ], [LSEMPASTAS ] )
OENCHOICE := MSMGET():NEW(CALIAS,(CALIAS)->(RECNO()),NOPC,          ,          ,          ,ASAYZL2,{NLIN1,NCOL1,NLIN2,NCOL2},AGETZL2  ,3         ,1         ,          ,          ,OFOLDER:ADIALOGS[NFOLDER],          ,             ,            ,          ,               )

RETURN 



// ======================================================================= \\
STATIC FUNCTION FFOLDERVAL(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2)
// ======================================================================= \\

LOCAL ACAMPOSSIM := {} 
LOCAL NSTYLE     := 0 							// GD_INSERT + GD_UPDATE + GD_DELETE
LOCAL CALIAS,CCHAVE,CCONDICAO,NINDICE,CFILTRO

CALIAS    := "FPH"
CCHAVE    := XFILIAL(CALIAS)+CNRBV  
CCONDICAO := 'FPH_FILIAL+FPH_NRBV=="'+CCHAVE+'"'
CCONDICAO := 'FPH_FILIAL+FPH_NRBV=="'+CCHAVE+'"'
NINDICE   := 5 									// FPH_FILIAL+FPH_NRBV
CFILTRO   := CCONDICAO

AADD(ACAMPOSSIM,{"FPH_NRVALE",""})
AADD(ACAMPOSSIM,{"FPH_EMISSA",""})
AADD(ACAMPOSSIM,{"FPH_DEPDT" ,""})
AADD(ACAMPOSSIM,{"FPH_VALOR" ,""})
AADD(ACAMPOSSIM,{"FPH_MODFOR",""})
AADD(ACAMPOSSIM,{"FPH_TIPAD" ,""})
AADD(ACAMPOSSIM,{"FPH_USUPRO",""})
AADD(ACAMPOSSIM,{"FPH_DTAPRO",""})
AADD(ACAMPOSSIM,{"FPH_BANCO" ,""})
AADD(ACAMPOSSIM,{"FPH_OBS"   ,""})

AHEADER := FHEADER(ACAMPOSSIM)
ACOLS   := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)

//                            NTOP,NLEFT,NBOTTOM,NRIGHT,NSTYLE,CLINHAOK   ,CTUDOOK,CINICPOS,AALTER,NFREEZE,NMAX,CFIELDOK,CSUPERDEL,CDELOK,OWND                     ,AHEADER,ACOLS}
ODLGVAL:=MSNEWGETDADOS():NEW(NLIN1,NCOL1,NLIN2  ,NCOL2 ,NSTYLE,			  ,  	  ,        ,      ,       ,110 ,        ,         ,.T.   ,OFOLDER:ADIALOGS[NFOLDER],AHEADER,ACOLS)
//ODLGVAL:OBROWSE:BCHANGE:={||U_ZL1VAL()}

RETURN



// ======================================================================= \\
STATIC FUNCTION FFOLDERDES(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2)
// ======================================================================= \\

LOCAL NSTYLE := GD_INSERT + GD_UPDATE + GD_DELETE
LOCAL CALIAS , CCHAVE , CCONDICAO , NINDICE , CFILTRO 
PRIVATE ACAMPOSSIM := {}

IF NOPC == 4  .AND. (FPI_STATUS =="F"  .OR. FPI_STATUS == "P") 
	NSTYLE := 0
ENDIF   
IF NOPC == 2 
	NSTYLE := 0
ENDIF

CALIAS    := "FPK"
CCHAVE    := XFILIAL(CALIAS)+CNRBV
CCONDICAO := 'FPK_FILIAL+FPK_NRBV=="'+CCHAVE+'"'
NINDICE   := 1  								// FPK_FILIAL+FPK_NRBV
CFILTRO   := CCONDICAO

AADD(ACAMPOSSIM,{"FPK_ITEM"  ,""})
AADD(ACAMPOSSIM,{"FPK_DATA"  ,""})
AADD(ACAMPOSSIM,{"FPK_CODDES",""})
AADD(ACAMPOSSIM,{"FPK_DESPES",""})
AADD(ACAMPOSSIM,{"FPK_CCUSTO",""})
AADD(ACAMPOSSIM,{"FPK_QUANT" ,""})
AADD(ACAMPOSSIM,{"FPK_VLUNIT",""})
AADD(ACAMPOSSIM,{"FPK_VLTOT" ,""})

IF EXISTBLOCK("LOCT002A") //PONTO DE ENTRADA PARA INCLUSAO DE CAMPOS NA ABA DESPESAS.
	ACAMPOSSIM := EXECBLOCK("LOCT002A",.T.,.T.,{ACAMPOSSIM})
ENDIF

AHEADER    := FHEADER(ACAMPOSSIM)
ACOLS      := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO) 
ACOLS[1,1] := "0001"

//                            NTOP ,NLEFT,NBOTTOM,NRIGHT,NSTYLE,CLINHAOK      ,CTUDOOK,CINICPOS,AALTER,NFREEZE,NMAX,CFIELDOK,CSUPERDEL,CDELOK,OWND                     ,AHEADER,ACOLS}
ODLGDES:=MSNEWGETDADOS():NEW(NLIN1,NCOL1,NLIN2  ,NCOL2 ,NSTYLE,"LOCA04418()" ,       ,"+FPK_ITEM",      ,       ,110 ,        ,         ,.T.   ,OFOLDER:ADIALOGS[NFOLDER],AHEADER,ACOLS)
ODLGDES:OBROWSE:BCHANGE := {||LOCA04415()}
RETURN



// ======================================================================= \\
STATIC FUNCTION FFOLDERVIA(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2)
// ======================================================================= \\

LOCAL ACAMPOSSIM := {}
LOCAL NSTYLE     := GD_INSERT + GD_UPDATE + GD_DELETE
LOCAL CALIAS , CCHAVE , CCONDICAO , NINDICE , CFILTRO 

IF NOPC == 4  .AND. (FPI_STATUS =="F"  .OR. FPI_STATUS == "P")
   NSTYLE:= 0
ENDIF   
IF NOPC == 2 
   NSTYLE:= 0
ENDIF

CALIAS    := "ZL6"
CCHAVE    := XFILIAL(CALIAS)+CNRBV
CCONDICAO := 'ZL6_FILIAL+ZL6_NRBV=="'+CCHAVE+'"'
NINDICE   := 1  								// ZL6_FILIAL+ZL6_NRBV
CFILTRO   := CCONDICAO

AADD(ACAMPOSSIM,{"ZL6_ITEM"  ,""})
AADD(ACAMPOSSIM,{"ZL6_DTINI" ,""})
AADD(ACAMPOSSIM,{"ZL6_KMINI" ,""})
AADD(ACAMPOSSIM,{"ZL6_DTFIM" ,""})
AADD(ACAMPOSSIM,{"ZL6_KMFIM" ,""})
AADD(ACAMPOSSIM,{"ZL6_KMTOT" ,""})
AADD(ACAMPOSSIM,{"ZL6_ORIGEM",""})
AADD(ACAMPOSSIM,{"ZL6_DESTIN",""})
AADD(ACAMPOSSIM,{"ZL6_TIPOV" ,""})

AHEADER := FHEADER(ACAMPOSSIM)
ACOLS   := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)
ACOLS[1,1]:="0001"

//                            NTOP ,NLEFT,NBOTTOM,NRIGHT,NSTYLE,CLINHAOK      ,CTUDOOK,CINICPOS,AALTER,NFREEZE,NMAX,CFIELDOK,CSUPERDEL,CDELOK,OWND                     ,AHEADER,ACOLS}
ODLGVIA:=MSNEWGETDADOS():NEW(NLIN1,NCOL1,NLIN2  ,NCOL2 ,NSTYLE,              ,       ,"+ZL6_ITEM",      ,       ,110 ,        ,         ,.T.   ,OFOLDER:ADIALOGS[NFOLDER],AHEADER,ACOLS)
ODLGVIA:OBROWSE:BCHANGE := {||LOCA04414()}
                          
RETURN



// ======================================================================= \\
STATIC FUNCTION FFOLDERRES(NFOLDER)  					// RESUMO
// ======================================================================= \\

// TOTAIS
@ 002+000,002 SAY OEMTOANSI("TOTAL DESPESAS"          ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+011,002 SAY OEMTOANSI("TOTAL VALES DEVOLVIDOS"  ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+022,002 SAY OEMTOANSI("TOTAL VALES"             ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+033,002 SAY OEMTOANSI("TOTAL LÍQUIDO"           ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+044,002 SAY OEMTOANSI("TOTAL KM PERCORRIDA"     ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+055,002 SAY OEMTOANSI("TOTAL HORIMETRO"         ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+066,002 SAY OEMTOANSI("TOTAL LITROS ABASTECIDOS") SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+077,002 SAY OEMTOANSI("TOTAL VALOR  ABASTECIDOS") SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+088,002 SAY OEMTOANSI("TOTAL DIAS VIAGEM"       ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+099,002 SAY OEMTOANSI("DESVIO KM"               ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+110,002 SAY OEMTOANSI("CONSUMO MEDIO ODOMETRO"  ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]
@ 002+121,002 SAY OEMTOANSI("CONSUMO MEDIO HORIMETRO" ) SIZE 80,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER]

@ 001+000,087 MSGET OVALDES    VAR NVALDES    SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999.99" VALID FCALCRES() WHEN _EDITD //.F.
@ 001+011,087 MSGET OVALDEV    VAR NVALDEV    SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999.99" VALID FCALCRES() WHEN _EDITD
@ 001+022,087 MSGET OVALTOT    VAR NVALTOT    SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999.99" VALID FCALCRES() WHEN _EDITD
@ 001+033,087 MSGET OVALLIQ    VAR NVALLIQ    SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999.99" VALID FCALCRES() WHEN _EDITD
@ 001+044,087 MSGET OQTDPER    VAR NQTDPER    SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999"    VALID FCALCRES() WHEN _EDITD
@ 001+055,087 MSGET OQTDHOR    VAR NQTDHOR    SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999"    VALID FCALCRES() WHEN _EDITD
@ 001+066,087 MSGET OQTDLIT    VAR NQTDLIT    SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999"    VALID FCALCRES() WHEN _EDITD
@ 001+077,087 MSGET OVALABA    VAR NVALABA    SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999.99" VALID FCALCRES() WHEN _EDITD
@ 001+088,087 MSGET OQTDDIAS   VAR NQTDDIAS   SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999"    VALID FCALCRES() WHEN _EDITD
@ 001+099,087 MSGET OQTDDESVIO VAR NQTDDESVIO SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999,999"    VALID FCALCRES() WHEN _EDITD
@ 001+110,087 MSGET OQTDCMEDO  VAR NQTDCMEDO  SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999.999"    VALID FCALCRES() WHEN _EDITD
@ 001+121,087 MSGET OQTDCMEDH  VAR NQTDCMEDH  SIZE 45,8 PIXEL OF OFOLDER:ADIALOGS[NFOLDER] PICTURE "@E 999999.999"    VALID FCALCRES() WHEN _EDITD

RETURN



// ======================================================================= \\
STATIC FUNCTION FCALCRES()
// ======================================================================= \\

LOCAL LRET := .T.
LOCAL NPOS

NVALDES    := 0                                           
NVALDEV    := FPI->FPI_DEVOLU + FPI->FPI_DESFOL + FPI->FPI_PENDEN
NVALTOT    := 0
NVALLIQ    := 0
NQTDPER    := 0
NQTDLIT    := 0   
NQTDLIO    := 0
NQTDLIH    := 0
NVALABA    := 0
NQTDDIAS   := 0
NQTDDESVIO := 0
NQTDHOR    := 0
NQTDOOR    := 0
NQTDCMEDH  := 0
NQTDCMEDO  := 0
NQTDCMEDHQ := 0
NQTDCMEDOQ := 0
_VAL33     := 0
FOR NPOS:=1 TO LEN(ODLGVAL:ACOLS)
	NVALTOT+=ODLGVAL:ACOLS[NPOS][ASCAN(ODLGVAL:AHEADER,{|X|ALLTRIM(X[2])=="FPH_VALOR"})]
NEXT

FOR NPOS:=1 TO LEN(ODLGDES:ACOLS)
    _CALDES=.T.
    IF ASCAN(ODLGDES:AHEADER,{|X|ALLTRIM(X[2])=="FPK_CODDES"})>0
       IF ODLGDES:ACOLS[NPOS][ASCAN(ODLGDES:AHEADER,{|X|ALLTRIM(X[2])=="FPK_CODDES"})]="33" //VALES DEVOLVIDOS
          _CALDES:=.F.
          _VAL33 :=ODLGDES:ACOLS[NPOS][ASCAN(ODLGDES:AHEADER,{|X|ALLTRIM(X[2])=="FPK_VLTOT"})]
       ENDIF   
    ENDIF   
    IF _CALDES
       NVALDES+=ODLGDES:ACOLS[NPOS][ASCAN(ODLGDES:AHEADER,{|X|ALLTRIM(X[2])=="FPK_VLTOT"})]
    ELSE
       NVALDEV+=ODLGDES:ACOLS[NPOS][ASCAN(ODLGDES:AHEADER,{|X|ALLTRIM(X[2])=="FPK_VLTOT"})]
    ENDIF  
NEXT

_NQUHOR := 0

NVALLIQ := (NVALDES+NVALDEV)-NVALTOT
  
IF _FLAGATU	
      OFOLDER:REFRESH()  
      OVALDES:REFRESH() 
      OVALDEV:REFRESH() 
      OVALTOT:REFRESH() 
      OVALLIQ:REFRESH()     
      OQTDDIAS:REFRESH()     
      OQTDPER:REFRESH()     
      OQTDCMEDO:REFRESH()     
ENDIF   

RETURN(LRET)



// ======================================================================= \\
FUNCTION LOCA04411(PNRVALE)
// ======================================================================= \\
// --> CHAMADA: VALIDAÇÃO CAMPO(S): FPJ_NRVALE  
LOCAL LRET := .T.    
LOCAL NX   := 0 

FOR NX:= 1 TO LEN(ODLGVAL:ACOLS)
	IF ODLGVAL:ACOLS[NX,ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPH_NRVALE"})] == TRIM(PNRVALE)
		MSGALERT("VALE JA FOI SELECIONADO PARA ESSE B.V.!" , "GPO - LOCT002.PRW")
		LRET := .F.
		EXIT
	ENDIF
NEXT

RETURN LRET                                       



// ======================================================================= \\
FUNCTION LOCA04412(_KMINI,_KMFIM) 
// ======================================================================= \\
// --> CHAMADA: GATILHO(S): ZL6_KMINI E ZL6_KMFIM 
LOCAL CRET

CRET := ABS(_KMFIM - _KMINI)

RETURN (CRET)                               
                                   


// ======================================================================= \\
FUNCTION LOCA04413(PPROJETO,PRET)
// ======================================================================= \\
// --> CHAMADA: VALIDAÇÃO CAMPO(S): FPI_CLIENT E FPI_LOJA 
// --> CHAMADA: GATILHO(S): FPI_AS 
LOCAL CRET     := "" 
LOCAL AAREACLI := GETAREA() 

DBSELECTAREA("FP0")
FP0->(DBSETORDER(1))
IF FP0->(DBSEEK(XFILIAL("FP0")+PPROJETO))

	CCODCLI := FP0->FP0_CLI
	CLOJCLI := FP0->FP0_LOJA     
	CNOMCLI := FP0->FP0_CLINOM
	
	DBSELECTAREA("SA1")
	SA1->(DBSETORDER(1))
	IF SA1->(DBSEEK(XFILIAL("SA1")+CCODCLI+CLOJCLI))
		IF ! EMPTY(SA1->A1_COD)
			CCODCLI:= SA1->A1_COD
			CLOJCLI:= SA1->A1_LOJA
			CNOMCLI:= SA1->A1_NOME
		ENDIF 
	ENDIF
	
	IF     PRET == "C"
		CRET := CCODCLI
	ELSEIF PRET == "L"
		CRET := CLOJCLI
	ELSEIF PRET == "N"	
		CRET := CNOMCLI
	ENDIF	
	
ENDIF

RESTAREA(AAREACLI)

RETURN CRET                                                       
                      


// ======================================================================= \\
FUNCTION LOCA04414()  								// MUDA O BROWSE
// ======================================================================= \\

LOCAL LRET := .T.

IF VALTYPE(ODLGVIA)=="O"  //SE O OBJETO JÁ FOI CRIADO
	IF LEN(ODLGVIA:ACOLS)>1 .AND. LEN(ODLGVIA:ACOLS)==ODLGVIA:NAT
		CDATAI := ODLGVIA:ACOLS[LEN(ODLGVIA:ACOLS)-1][ASCAN(ODLGVIA:AHEADER,{|X|ALLTRIM(X[2])=="ZL6_DTFIM"})]
		CKMINI := ODLGVIA:ACOLS[LEN(ODLGVIA:ACOLS)-1][ASCAN(ODLGVIA:AHEADER,{|X|ALLTRIM(X[2])=="ZL6_KMFIM"})]
		CORIGE := ODLGVIA:ACOLS[LEN(ODLGVIA:ACOLS)-1][ASCAN(ODLGVIA:AHEADER,{|X|ALLTRIM(X[2])=="ZL6_DESTIN"})]
		ODLGVIA:ACOLS[ODLGVIA:NAT][ASCAN(ODLGVIA:AHEADER,{|X|ALLTRIM(X[2])=="ZL6_DTINI" })] := CDATAI
		ODLGVIA:ACOLS[ODLGVIA:NAT][ASCAN(ODLGVIA:AHEADER,{|X|ALLTRIM(X[2])=="ZL6_KMINI" })] := CKMINI
		ODLGVIA:ACOLS[ODLGVIA:NAT][ASCAN(ODLGVIA:AHEADER,{|X|ALLTRIM(X[2])=="ZL6_ORIGEM"})] := CORIGE
	ENDIF
	ODLGVIA:OBROWSE:REFRESH()
ENDIF

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA04415() 									// MUDA O BROWSE
// ======================================================================= \\

LOCAL LRET    := .T.
LOCAL CCUSTOI := SPACE(10) 
LOCAL CDATAI  := CTOD(SPACE(08))

IF VALTYPE(ODLGDES)=="O" 		// SE O OBJETO JÁ FOI CRIADO
	IF LEN(ODLGDES:ACOLS)>1 .AND. LEN(ODLGDES:ACOLS)==ODLGDES:NAT
		CDATAI  := ODLGDES:ACOLS[LEN(ODLGDES:ACOLS)-1][ASCAN(ODLGDES:AHEADER,{|X|ALLTRIM(X[2])=="FPK_DATA"})]
		CCUSTOI := ODLGDES:ACOLS[LEN(ODLGDES:ACOLS)-1][ASCAN(ODLGDES:AHEADER,{|X|ALLTRIM(X[2])=="FPK_CCUSTO"})]
		ODLGDES:ACOLS[ODLGDES:NAT][ASCAN(ODLGDES:AHEADER,{|X|ALLTRIM(X[2])=="FPK_DATA"  })] := CDATAI
		ODLGDES:ACOLS[ODLGDES:NAT][ASCAN(ODLGDES:AHEADER,{|X|ALLTRIM(X[2])=="FPK_CCUSTO"})] := CCUSTOI         
	ENDIF
	ODLGDES:OBROWSE:REFRESH()
ENDIF

RETURN LRET      



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ ZL2SENHA  º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDA SENHA PARA REABERTURA DE BV / VALES - FECHADOS.     º±±
±±º          ³ CHAMADA VIA FONTE(S): LOCF112.PRW E LOCF113.PRW            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04416() 

LOCAL CTITULO  := ""
LOCAL CUSER	   := SUBSTR(CUSUARIO,7,15) 
LOCAL CSENHAD  := SPACE(30) 
LOCAL LOK  	   := .F. 
LOCAL LRET 	   := .F. 
LOCAL ODLGACE 

CTITULO  := "SENHA PARA REABERTURA DE BV / VALE JÁ FECHADOS " 

DEFINE MSDIALOG ODLGACE TITLE "SENHA PARA ACESSAR [MV_LOCX182]" FROM 000,000 TO 220,350 PIXEL
	@ 010,010 TO 210,340
	@ 020,013 SAY OEMTOANSI("INFORME O USUARIO:") OF ODLGACE PIXEL
	@ 040,013 SAY OEMTOANSI("INFORME A SENHA:")   OF ODLGACE PIXEL
	@ 020,060 GET CUSER   SIZE 50,8 PICTURE "@!" VALID !EMPTY(CUSER) OF ODLGACE PIXEL
	@ 040,060 GET CSENHAD SIZE 50,8 PICTURE "@!" VALID !EMPTY(CSENHAD) PASSWORD OF ODLGACE PIXEL
	@ 063,059 BMPBUTTON TYPE 1 ACTION {LOK := .T.,ODLGACE:END()} 
	@ 063,089 BMPBUTTON TYPE 2 ACTION {LOK := .F.,ODLGACE:END()} 
ACTIVATE MSDIALOG ODLGACE CENTERED 

IF LOK
	IF LEN(ALLTRIM(CSENHAD)) == "" //LEN(ALLTRIM(GETMV("MV_LOCX182")))
		IF UPPER(ALLTRIM(CSENHAD)) $ "" //UPPER(ALLTRIM(GETMV("MV_LOCX182")))
			LRET := .T.
		ELSE
			MSGALERT("SENHA ESTA INCORRETA!" , "GPO - LOCT002.PRW")
			LRET := .F.
		ENDIF
	ELSE
		MSGALERT("SENHA ESTA INCOMPLETA!" , "GPO - LOCT002.PRW")
		LRET := .F.
	ENDIF
ELSE
	MSGALERT("OPERAÇÃO CANCELADA!" , "GPO - LOCT002.PRW")
	LRET := .F.
ENDIF

RETURN LRET 

                                    

// ======================================================================= \\
FUNCTION LOCA04417(CCOD) 
// ======================================================================= \\

LOCAL CALIAS  := "FPI"
LOCAL LRET    := .T.
LOCAL AAREABV := GETAREA()
LOCAL NRECANT := (CALIAS)->(RECNO()),NORDANT:=(CALIAS)->(INDEXORD())   

IF !EMPTY(FPI->FPI_MOTORI) .OR. FPI->FPI_MOTORI<>SPACE(06)
	IF _LINC            
		DBSELECTAREA("FPI")
		DBSETORDER(2)
		DBGOTOP()
		DBSEEK(XFILIAL("FPI")+ALLTRIM(DA4->DA4_NOME))
		WHILE !EOF() .AND. (CALIAS)->(FPI_MOTORI) == CCOD
			IF FPI->FPI_STATUS == "A" 
			//	MSGBOX("ATENÇÃO!... EXISTE BOLETIM EM ABERTO PARA ESTE MOTORISTA, BV NO. "+ FPI->FPI_NRBV,"ATENÇAO") 
			//	M->FPI_MOTORI := SPACE(06) 
			//	LRET := .F. 
			ENDIF  
			DBSKIP()
		ENDDO 
	ENDIF      

	(CALIAS)->(DBSETORDER(NORDANT))
	(CALIAS)->(DBGOTO(NRECANT))
	RESTAREA(AAREABV)
	// VALIDAÇÃO DA DT. DE FECHAMENTO DO BV
ENDIF

RETURN LRET           



// ======================================================================= \\
FUNCTION LOCA04418()
// ======================================================================= \\
// --> VALIDA SE A LINHA ESTÁ OK 
LOCAL LRET := .T.          

LRET := LOCA04419("9")

RETURN LRET                                                                         



// ======================================================================= \\
FUNCTION LOCA04419(_COPC,_CCAMPO)
// ======================================================================= \\
LOCAL _LRET   := .T.
LOCAL _CCUSTO := IIF(_COPC $ "9|1|" , ODLGDES:ACOLS[ODLGDES:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPK_CCUSTO" })] , M->FPK_CCUSTO) 

IF _COPC == "1" .OR. _COPC == "9"	//CENTRO DE CUSTO OU VALIDAÇÃO DA LINHA OK
	IF EMPTY(_CCUSTO)
		_LRET := .F.
		MSGALERT("ATENÇÃO: O CAMPO CENTRO DE CUSTO É DE PREENCHIMENTO OBRIGATÓRIO." , "GPO - LOCT002.PRW") 
	ENDIF
ENDIF

RETURN _LRET



// ======================================================================= \\
FUNCTION LOCA04420(CMOTOR , DDATAABER) 
// ======================================================================= \\
// --> CHAMADA: VALIDAÇÃO DE USUÁRIO DO CAMPO: FPI_DTABER 
LOCAL CQUERY := " SELECT MAX(FPI_DTFECH) FPI_DTFECH FROM "+RETSQLTAB("FPI")+" WHERE FPI_FILIAL = "+VALTOSQL(XFILIAL("FPI"))+" AND LTRIM(RTRIM(FPI_MOTORI)) = "+VALTOSQL(ALLTRIM(CMOTOR))+" AND FPI_STATUS = 'F' AND D_E_L_E_T_ = ' ' AND FPI_DTFECH <> ' ' "
LOCAL LRET   := .T.

IF SELECT("QRX") > 0
	DBSELECTAREA("QRX")
	QRX->(DBCLOSEAREA())
ENDIF

CQUERY	:=	CHANGEQUERY(CQUERY)
TCQUERY	CQUERY NEW ALIAS "QRX"
TCSETFIELD("QRX","FPI_DTFECH","D",8,0)

WHILE QRX->(!EOF()) .AND. LRET
	DO CASE
	CASE DDATAABER < QRX->FPI_DTFECH
		MSGALERT("DATA DE ABERTURA DO BV MENOR QUE A DATA DE FECHAMENTO DO ULTIMO BV PARA O MOTORISTA "+CMOTOR , "GPO - LOCT002.PRW")
		LRET	:=	.F.
	CASE QRX->FPI_DTFECH == DDATAABER
		MSGINFO("DATA DE ABERTURA DO BV IGUAL A DATA DE FECHAMENTO DO ULTIMO BV PARA O MOTORISTA "+CMOTOR , "GPO - LOCT002.PRW")
		LRET	:=	.T.
	ENDCASE 
	QRX->(DBSKIP())
ENDDO 

QRX->(DBCLOSEAREA())

RETURN LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³VLDBVABERT º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDACAO DO CAMPO FPI_MOTORI                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04421(CMOTORISTA)

LOCAL LRET 	 := .T.
LOCAL CQUERY := "SELECT MAX(FPI_NRBV) FPI_NRBV FROM "+RETSQLTAB("FPI")+" WHERE FPI_FILIAL = "+VALTOSQL(XFILIAL("FPI"))+" AND LTRIM(RTRIM(FPI_MOTORI)) = "+VALTOSQL(ALLTRIM(CMOTORISTA))+" AND FPI_STATUS = 'A' AND D_E_L_E_T_ = ' ' AND FPI_DTABER = (SELECT MAX(FPI_DTABER) FROM "+RETSQLTAB("FPI")+" WHERE FPI_FILIAL = "+VALTOSQL(XFILIAL("FPI"))+" AND LTRIM(RTRIM(FPI_MOTORI)) = "+VALTOSQL(ALLTRIM(CMOTORISTA))+" AND FPI_STATUS = 'A' AND D_E_L_E_T_ = '')"

IF SELECT("QRY") > 0
	DBSELECTAREA("QRY")
	QRY->(DBCLOSEAREA())
ENDIF
TCQUERY CQUERY NEW ALIAS "QRY"

IF !EMPTY(QRY->FPI_NRBV) .AND. LRET
 //	MSGSTOP("JÁ EXISTE BOLETIM DE VIAGEM EM ABERTO PARA ESTE MOTORISTA. B.V :"+QRY->FPI_NRBV+" " ,"ATENÇÃO")
 //	LRET := .F.
ENDIF

RETURN LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ VLDDESPES º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDAÇÃO DO CAMPO FPK_DATA                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04422()

LOCAL LRET := .T.

IF (M->FPK_DATA < M->FPI_DTABER)///VALIDAÇÃO DA DATA DE ABERTURA
	MSGALERT("ATENÇÃO: A DATA DA DESPESA NÃO PODERÁ SER INFERIOR A DATA DE ABERTURA DO B.V." , "GPO - LOCT002.PRW") 
	LRET := .F.	
ENDIF

RETURN LRET



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFUNCAO    ³ VALIDPERG º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VERIFICA A EXISTENCIA DAS PERGUNTAS CRIANDO-AS CASO SEJA   º±±
±±º          ³ NECESSARIO (CASO NAO EXISTAM).                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ PROGRAMA PRINCIPAL                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
/*
// --> NÃO EXISTE CHAMADA DA FUNÇÃO !
STATIC FUNCTION VALIDPERG(CPERG)

LOCAL _SALIAS := ALIAS()
LOCAL AREGS   := {}
LOCAL I,J

DBSELECTAREA("SX1")
DBSETORDER(1)
CPERG := PADR(CPERG,10)

DO CASE
CASE CPERG == "LOCP076"
//         {GRUPO,ORDEM,PERGUNT     ,PERSPA      ,PERENG      ,VARIAVL ,TIPO,TAMANHO             ,DECIMAL,PRESEL,GSC,VALID         ,VAR01      ,DEF01,DEFSPA1,DEFENG1,CNT01,VAR02,DEF02,DEFSPA2,DEFENG2,CNT02,VAR03,DEF03,DEFSPA3,DEFENG3,CNT03,VAR04,DEF04,DEFSPA4,DEFENG4,CNT04,VAR05,DEF05,DEFSPA5,DEFENG5,CNT05,F3   ,PYME,GRPSXG,HELP,PICTURE     })
AADD(AREGS,{CPERG,"02" ,"MOTORISTA:","MOTORISTA:","MOTORISTA:","MV_CH1","C" ,LEN(FPI->FPI_MOTORI),00     ,0     ,"G",""            ,"MV_PAR01" ,""   ,""     ,""     ,""   ,""   ,""   ,""     ,""     ,""   ,""   ,""   ,""     ,""     ,""   ,""   ,""   ,""     ,""     ,""   ,""   ,""   ,""     ,""     ,""   ,"DA4","S" ,""    ,""  ,""          })
ENDCASE

FOR I:=1 TO LEN(AREGS)
    IF !DBSEEK(CPERG+AREGS[I,2])
        RECLOCK("SX1",.T.)
        FOR J:=1 TO FCOUNT()
            IF J <= LEN(AREGS[I])
                FIELDPUT(J,AREGS[I,J])
            ENDIF
        NEXT J 
        MSUNLOCK()
    ENDIF
NEXT I 

DBSELECTAREA(_SALIAS)

RETURN
*/
