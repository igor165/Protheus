#INCLUDE "loca051.ch" 
/*/{PROTHEUS.DOC} LOCA051.PRW
ITUP BUSINESS - TOTVS RENTAL
APROVA«AO DO BOLETIM DE VIAGEM INTEGRADO COM CAIXINHA OU CONTA BANCO
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/
#INCLUDE "RWMAKE.CH"
#INCLUDE "PROTHEUS.CH"

FUNCTION LOCA051()
LOCAL _CUSER		:= RETCODUSR(SUBS(CUSUARIO,7,15))  //RETORNA O C”DIGO DO USU¡RIO
LOCAL AAREA	   		:= GETAREA()
LOCAL CQUERY   		:= ""
LOCAL LTODOS		:= .F.
LOCAL OOK       	:= LOADBITMAP( GETRESOURCES(), "LBOK" )
LOCAL ONO   		:= LOADBITMAP( GETRESOURCES(), "LBNO" )
LOCAL LCANCEL		:= .F.
LOCAL LRET      	:= .F.
LOCAL _DDUVALE 		:= STOD("  /  /    ")
LOCAL _F            := 0 
LOCAL NX            := 0 

//CAIXA OPERACIONAL 1
PRIVATE CXOPGBAN   	:= PADR(LOCA04502(4),LEN(SA6->A6_COD)) 		// C”DIGO DO BANCO DO CAIXA OPERACIONAL GUINDASTE
PRIVATE CXOPGAG    	:= PADR(LOCA04502(5),LEN(SA6->A6_AGENCIA))	// C”DIGO DA AG NCIA DO CAIXA OPERACIONAL GUINDASTE
PRIVATE CXOPGCC    	:= PADR(LOCA04502(6),LEN(SA6->A6_NUMCON))	// C”DIGO DA C/C DO CAIXA OPERACIONAL GUINDASTE

//CAIXA OPERACIONAL 2
PRIVATE CXOPTBAN   	:= PADR(LOCA04502(1),LEN(SA6->A6_COD))		// C”DIGO DO BANCO DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE CXOPTAG    	:= PADR(LOCA04502(2),LEN(SA6->A6_AGENCIA))	// C”DIGO DA AG NCIA DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE CXOPTCC    	:= PADR(LOCA04502(3),LEN(SA6->A6_NUMCON))	// C”DIGO DA C/C DO CAIXA OPERACIONAL TRANSPORTE

//CAIXA OPERACIONAL 3
PRIVATE CXOPUBAN   	:= PADR(LOCA04502(21),LEN(SA6->A6_COD)) 		// C”DIGO DO BANCO DO CAIXA OPERACIONAL GRUA
PRIVATE CXOPUAG    	:= PADR(LOCA04502(22),LEN(SA6->A6_AGENCIA))	// C”DIGO DA AG NCIA DO CAIXA OPERACIONAL GRUA
PRIVATE CXOPUCC    	:= PADR(LOCA04502(23),LEN(SA6->A6_NUMCON))	// C”DIGO DA C/C DO CAIXA OPERACIONAL GRUA    

//CAIXA OPERACIONAL 4
PRIVATE CXOPPBAN   	:= PADR(LOCA04502(18),LEN(SA6->A6_COD)) 		// C”DIGO DO BANCO DO CAIXA OPERACIONAL PLATAFORMA
PRIVATE CXOPPAG    	:= PADR(LOCA04502(19),LEN(SA6->A6_AGENCIA))	// C”DIGO DA AG NCIA DO CAIXA OPERACIONAL PLAFORMA
PRIVATE CXOPPCC    	:= PADR(LOCA04502(20),LEN(SA6->A6_NUMCON))	// C”DIGO DA C/C DO CAIXA OPERACIONAL PLATAFORMA

PRIVATE CXMNTBAN   	:= PADR(LOCA04502(24),LEN(SA6->A6_COD)) 		// C”DIGO DO BANCO DO CAIXA MANUTENCAO
PRIVATE CXMNTAG    	:= PADR(LOCA04502(25),LEN(SA6->A6_AGENCIA))	// C”DIGO DA AG NCIA DO CAIXA MANUTENCAO
PRIVATE CXMNTCC    	:= PADR(LOCA04502(26),LEN(SA6->A6_NUMCON))	// C”DIGO DA C/C DO CAIXA MANUTENCAO

PRIVATE CNATUREZ    := PADR(LOCA04502(8),LEN(SED->ED_CODIGO))	// NATUREZA PARA DESPESAS DE VIAGEM
PRIVATE CNAT        := ""
PRIVATE LMARCADOS	:= .F.
PRIVATE AADIANT  	:= {}
PRIVATE CPERG		:= "LOCP077"
PRIVATE _NVLVALES	:= 0
PRIVATE _NNRVALES	:= 0        
PRIVATE _NTOTVALE   := 0

PUBLIC _LVER := .F.

// VALIDA OS ACESSOS DO USU¡RIO
IF FQ1->(DBSEEK(XFILIAL("FQ1") + _CUSER + "LOCA051",.T.))	//PROCURA O C”DIGO DE USU¡RIO NA TABELA DE USU¡RIOS ANALIZADORES DE PROMO«’ES (SZ5)
	_CTIPAD := ""
	FOR _F := 1 TO LEN(ALLTRIM(FQ1->FQ1_CC))
		_CTIPAD += "'" + SUBSTR(FQ1->FQ1_CC,_F,1) + "',"		//ADICIONO TODOS OS TIPOS QUE O USU¡RIO PODE APROVAR
	NEXT _F
	_CTIPAD := LEFT(_CTIPAD,LEN(ALLTRIM(_CTIPAD))-1)		//S” PARA RETIRAR A ⁄LTIMA VÕRGULA DO CAMPO
ELSE
	MSGALERT(STR0001 , STR0002)  //"ATEN«√O: USUARIO N√O AUTORIZADO A APROVAR BOLETIM DE VIAGEM."###"GPO - LOCT040.PRW"
	RETURN .F.
ENDIF

IF(!PERGUNTE(CPERG,.T.))
	RETURN(.F.)
ENDIF

IF SELECT("TRB") > 0
	DBSELECTAREA("TRB")
	DBCLOSEAREA()
ENDIF

MV_PAR01 := IIF(EMPTY(MV_PAR01),CTOD("01/01/01")  ,MV_PAR01) 
MV_PAR02 := IIF(EMPTY(MV_PAR02),CTOD("31/12/2999"),MV_PAR02) 

CQUERY := "SELECT * "
CQUERY += "FROM " + RETSQLNAME("FPI")  + " ZL2 "
CQUERY += "WHERE FPI_FILIAL = '"       + XFILIAL("FPI")         + "' AND "
CQUERY += "		 FPI_DTABER BETWEEN '" + DTOS(MV_PAR01)         + "' AND '" + DTOS(MV_PAR02) + "' AND "
CQUERY += "		 FPI_NRBV   BETWEEN '" + MV_PAR04               + "' AND '" + MV_PAR05       + "' AND "
CQUERY += "		 FPI_DEPTO  IN     ("  + ALLTRIM(_CTIPAD)       + ") AND "
CQUERY += "		 FPI_DEPTO  = '"       + ALLTRIM(STR(MV_PAR03)) + "' AND "
CQUERY += "		 FPI_STATUS = 'F'                                    AND "
CQUERY += "		 FPI_APROV  = 'N'                                    AND "
CQUERY += "      D_E_L_E_T_ = '' "
CQUERY += "ORDER BY FPI_NRBV"
CQUERY := CHANGEQUERY(CQUERY)
DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRB", .F., .T.)

NVLRGERADO := 0
NQTDTIT    := 0

DBSELECTAREA("TRB")
DBGOTOP()

// BLOCO ESCRITO PARA SELECIONAR ADIANTAMENTOS
IF TRB->(EOF())
	MSGSTOP(STR0003 , STR0002)  //"N√O EXISTEM BOLETIM ADIANTAMENTOS A SEREM GERADOS."###"GPO - LOCT040.PRW"
	TRB->(DBCLOSEAREA())
	RESTAREA(AAREA)
	RETURN
ENDIF

TRB->(DBGOTOP())
WHILE ! TRB->(EOF())
	AADD(AADIANT, { .F.																															,;
								TRB->FPI_NRBV																									,;
						   STOD(TRB->FPI_DTABER)																								,;
						 SUBSTR(TRB->FPI_FROTA,1,11) + "-" + SUBSTR(POSICIONE("ST9",1,XFILIAL("ST9")+ALLTRIM(TRB->FPI_FROTA),"T9_NOME"),1,20)	,;
					STRZERO(VAL(TRB->FPI_MOTORI),06) + "-" + TRB->FPI_NOMMOT																	,;
								TRB->FPI_SOT																									,;
								TRB->FPI_OBRA																									,;
								TRB->FPI_NOMCLI																									,;
								TRB->FPI_AS																										,;
								TRB->R_E_C_N_O_ })
	TRB->(DBSKIP())
ENDDO 

TRB->(DBCLOSEAREA())

//SET KEY VK_F5 TO ZL2VER(AADIANT[OLBX:NAT,02])

DEFINE MSDIALOG ODLG FROM  000,000 TO 430,780 TITLE STR0004 PIXEL //"SELECIONE OS BOLETIM DE VIAGENS"
@ 012,000 LISTBOX OLBX FIELDS HEADER "", STR0005, STR0006, STR0007, STR0008,STR0009,STR0010,STR0011,STR0012  ; //"NR. B.V."###" DATA "###" F R O T A          "###"MOTORISTA              "###"PROJETO"###"OBRA"###"CLIENTE"###"A.S."
COLSIZES 10,30,30,30,180,100,100 SIZE 380,170 OF ODLG PIXEL ON DBLCLICK (MARCARREGI(.F.))
OLBX:SETARRAY(AADIANT)
OLBX:BLINE := { || {IF( AADIANT[OLBX:NAT,01],OOK,ONO),; 		//CHECKBOX
						AADIANT[OLBX:NAT,02],;					//NUMERO DO BV
						AADIANT[OLBX:NAT,03],;              	//DATA DE ABERTURA
						AADIANT[OLBX:NAT,04],;					//FROTA + NOME DA FROTA
						AADIANT[OLBX:NAT,05],;					//MOTORISTA + NOME DO MOTORISTA
						AADIANT[OLBX:NAT,06],;					//PROJETO
						AADIANT[OLBX:NAT,07],;					//OBRA
						AADIANT[OLBX:NAT,08],;					//CLIENTE
						AADIANT[OLBX:NAT,09]}}					//AS
OLBX:NFREEZE  := 1
@ 000,000	BITMAP		OBMP 		RESNAME 			STR0013 OF ODLG SIZE 420,780 NOBORDER WHEN .F. PIXEL //"PROJETOAP"
@ 195,0.5	CHECKBOX 	OCHK 		VAR LTODOS PROMPT 	STR0014 SIZE 370, 10 OF ODLG PIXEL ON CLICK MARCARREGI(.T.) ; OCHK:OFONT := ODLG:OFONT; OBMP:REFRESH(.T.) //"MARCA/DESMARCA TODOS                                 -> F5 CONSULTA BV POSICIONADO"
@ 200, 325 	BUTTON		STR0015		SIZE 28,13 PIXEL OF ODLG ACTION (ODLG:END()) //"OK "
@ 200, 360 	BUTTON		STR0016 	SIZE 28,13 PIXEL OF ODLG ACTION (LCANCEL:=.T., ODLG:END()) //"CANCELAR"

ACTIVATE MSDIALOG ODLG CENTERED
SET KEY VK_F5  TO
//FIM DO BLOCO

IF LCANCEL
	RESTAREA(AAREA)
	RETURN
ENDIF

BEGIN TRANSACTION
NQTDTIT		:= 0
NQTNTIT     := 0
NVLRGERADO	:= 0

IF MSGYESNO(STR0017 , STR0002)  //"CONFIRMA A APROVA«√O DE TODOS OS BVS MARCADOS ?"###"GPO - LOCT040.PRW"
	
	FOR NX:= 1 TO LEN(AADIANT)
		IF AADIANT[NX,01]
			DBSELECTAREA("FPI")
			DBSETORDER(1)
			IF DBSEEK(XFILIAL("FPI") + AADIANT[NX,2],.T.)
				IF FPI->FPI_APROV <> "S"
					// VERIFICO SE OS VALES DESTE BV EST√O TODOS APROVADOS
					_NNRVALES := _NVLVALES := 0
					FPH->(DBSETORDER(5))
					FPH->(DBSEEK(XFILIAL("FPH") + FPI->FPI_NRBV))
					WHILE FPH->(!EOF()) .AND. FPH->FPH_NRBV == FPI->FPI_NRBV
						IF FPH->FPH_MOTORI == FPI->FPI_MOTORI	//S” ACEITA DO MESMO MOTORISTA
							_NTOTVALE += FPH->FPH_VALOR							
							IF _DDUVALE == STOD("  /  /    ") .OR. FPH->FPH_DTAPRO >= DDATABASE .OR. FPH->FPH_DTAPRO >= _DDUVALE // CASO TENHA ALGUM REGISTRO MAIOR QUE A DATABASE INICIALIZO O DUVALE
								_DDUVALE := FPH->FPH_DTAPRO
							ENDIF
							IF !FPH->FPH_APROVA
								_NNRVALES++
							ELSE
								_NVLVALES+= FPH->FPH_VALOR
							ENDIF
						ENDIF
						FPH->(DBSKIP())
					ENDDO
					
					IF _NNRVALES == 0
						LJMSGRUN(STR0018 + FPI->FPI_NRBV,,{|| LRET:=FECHABV(NX, _NTOTVALE, _DDUVALE) })  //"POR FAVOR AGUARDE, GERANDO LAN«AMENTOS PARA O BV "
						_DDUVALE := STOD("  /  /    ")
						IF LRET
							FPI->(RECLOCK("FPI",.F.))
							FPI->FPI_APROV    := "S"
							FPI->FPI_STATUS   := "P"
							FPI->FPI_USUAPR   := SUBSTR(CUSUARIO,7,15)
							FPI->(MSUNLOCK())
					        NQTDTIT    += 1
                  		ELSE
                            MSGALERT(STR0019+FPI->FPI_NRBV+"]" , STR0002)  //"N√O FOI POSSIVEL GERAR O TÕTULO PARA O BV ["###"GPO - LOCT040.PRW"
					   ENDIF
					ELSE
						MSGALERT(STR0020+FPI->FPI_NRBV+STR0021 , STR0002)  //"BV: ["###"] POSSUI VALES N√O APROVADOS"###"GPO - LOCT040.PRW"
					ENDIF
				ELSE
					MSGALERT(STR0020+FPI->FPI_NRBV+STR0022 , STR0002)  //"BV: ["###"] J¡ APROVADO"###"GPO - LOCT040.PRW"
				ENDIF
			ELSE
				MSGALERT(STR0020+FPI->FPI_NRBV+STR0023 , STR0002)  //"BV: ["###"] N√O FOI ENCONTRADO"###"GPO - LOCT040.PRW"
			ENDIF
		ELSE
			NQTNTIT   += 1
		ENDIF
	NEXT NX
	
	IF NQTDTIT > 0	.AND. LRET
		MSGINFO(STR0024 + ALLTRIM(STRZERO(NQTDTIT,4)) + STR0025 + ALLTRIM(STRZERO(NQTNTIT,4)) + " !" , STR0002)  //"TOTAL DE BOLETINS DE VIAGEM APROVADOS "###", N√O APROVADOS "###"GPO - LOCT040.PRW"
	ELSE
		MSGSTOP(STR0026+ALLTRIM(STRZERO(NQTNTIT,4))+STR0027 , STR0002)  //"N√O FORAM APROVADOS "###" BOLETINS DE VIAGEM !"###"GPO - LOCT040.PRW"
	ENDIF
	
ELSE

	MSGSTOP(STR0028 , STR0002)  //"N√O FOI APROVADO NENHUM BOLETIM DE VIAGEM!"###"GPO - LOCT040.PRW"

ENDIF

END TRANSACTION

RESTAREA(AAREA)

RETURN()



// ======================================================================= \\
STATIC FUNCTION ZL2VER(_NUMBV)
// ======================================================================= \\

DBSELECTAREA("FPI")
DBSETORDER(1)

IF MSSEEK(XFILIAL("FPI") + AADIANT[OLBX:NAT,2],.T.)
	_LVER :=.F.
	LOCA04403()
	_LVER :=.T.
ENDIF

RETURN



/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒø±±
±±≥FUN«√O    ≥ MARCARREGI≥ AUTOR ≥ IT UP BUSINESS     ≥ DATA ≥ 09/03/2006 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DESCRIáAO ≥ FUNCAO DE MARCACAO                                         ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ-ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥USO       ≥ ESPECIFICO GPO                                             ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
STATIC FUNCTION MARCARREGI(LTODOS)

LOCAL NI := 0 

IF LTODOS
	LMARCADOS := ! LMARCADOS
	FOR NI := 1 TO LEN(AADIANT)
		AADIANT[NI,1] := LMARCADOS
	NEXT NI 
ELSE
	AADIANT[OLBX:NAT,1] := ! AADIANT[OLBX:NAT,1]
ENDIF

OLBX:REFRESH(.T.)
ODLG:REFRESH(.T.)
OBMP:REFRESH(.T.)

RETURN NIL



/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒø±±
±±≥FUN«√O    ≥ FECHABV   ≥ AUTOR ≥ IT UP BUSINESS     ≥ DATA ≥ 12/03/2007 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DESCRICAO ≥ FECHA O BV                                                 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ-ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥USO       ≥ ESPECIFICO GPO                                             ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
STATIC FUNCTION FECHABV(NPOS , _NTOTVALE , _DDUVALE) 

LOCAL LRET       := .T.
LOCAL NDIAS      := GETMV("MV_LOCX264",,15)
LOCAL _F         := 0 

PRIVATE CPREFIXO := "BV "
PRIVATE CNUM 	 := ""
PRIVATE CPARCELA := " "
PRIVATE CTIPO    := "NCF"
PRIVATE CFORNECE := ""
PRIVATE CLOJA    := ""
PRIVATE CHIST    := ""
PRIVATE CCCD     := ""

// POSICIONA A ZL2
DBSELECTAREA("FPI")
DBSETORDER(1)
MSSEEK(XFILIAL("FPI") +  AADIANT[NPOS,02] ) //FILIAL+NRBV

// BUSCO O FORNECEDOR DO MOTORISTA
DA4->(DBSETORDER(1))
DA4->(DBSEEK(XFILIAL("DA4") + FPI->FPI_MOTORI,.F.))
	
SA2->(DBSETORDER(1))
IF !SA2->(DBSEEK(XFILIAL("SA2")+ DA4->DA4_FORNEC + DA4->DA4_LOJA,.F.))
	MSGSTOP(STR0029+ALLTRIM(SA2->A2_COD)+"/"+ALLTRIM(SA2->A2_LOJA)+"-"+ALLTRIM(SA2->A2_NOME)+STR0030+SUBSTR(AADIANT[NX,05],1,6)+STR0031 , STR0002)  //"FORNECEDOR "###", VINCULADO AO MOTORISTA "###", N√O ENCONTRADO !!! VERIFIQUE O CADASTRO DO MOTORISTA."###"GPO - LOCT040.PRW"
	RETURN .F.
ENDIF

// CAMPOS PADR’ES
CNUM 		:= ALLTRIM(FPI->FPI_NRBV)
CFORNECE 	:= SA2->A2_COD
CLOJA		:= SA2->A2_LOJA
CHIST       := STR0032 + FPI->FPI_NRBV //"PAGAMENTO REF.DESPESAS DO BV "
_CDESCRBX	:= STR0033 + FPI->FPI_NRBV //"BAIXA REF. A DEVOLU«√O NO BV "
_NVALDEV	:= FPI->FPI_DEVOLU + FPI->FPI_DESFOL + FPI->FPI_PENDEN

// MONTA UMA QUERY COM AS DESPESAS AGLUTINADAS POR NATUREZA, VALIDANDO APENAS AS NATUREZAS QUE N√O MOVIMENTAM O CAIXA ADMINISTRATIVO
IF SELECT("TR2") > 0
	DBSELECTAREA("TR2")
	DBCLOSEAREA()
ENDIF

CQUERY := "SELECT ZL4.FPK_FILIAL, ZL4.FPK_NRBV, ZL4.FPK_SOT, ZL4.FPK_CODDES, MAX(ZL4.FPK_CCUSTO) CCUSTO, SUM(ZL4.FPK_VLTOT) VALOR, MIN(SED.ED_CODIGO) NATUREZA "
CQUERY += "FROM " + RETSQLNAME("FPK")  + " ZL4 INNER JOIN " 
CQUERY +=           RETSQLNAME("SED")  + " SED ON SED.ED_CODIGO  =  ZL4.FPK_CODDES AND "
//CQUERY +=                                "        SED.ED_MOVADM  <> 'S'            AND " removido da 94
CQUERY +=                                "        SED.D_E_L_E_T_ = '' "
CQUERY += "WHERE FPK_FILIAL     = '"   + XFILIAL("FPK")   +                    "' AND "
CQUERY += "		 FPK_NRBV       = '"   + AADIANT[NPOS,02] +                    "' AND "
CQUERY += "      ZL4.D_E_L_E_T_ = '' "
CQUERY += "GROUP BY ZL4.FPK_FILIAL, ZL4.FPK_NRBV, ZL4.FPK_SOT, ZL4.FPK_CODDES, ZL4.FPK_CCUSTO"
CQUERY := CHANGEQUERY(CQUERY)
DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TR2", .F., .T.)

DBSELECTAREA("TR2")
DBGOTOP()

_AMULNAT := {}
_NVALDES := 0

//BLOQUEIO O PROCESSO SE N√O EXISTIR DESPESAS
//IF TR2->(EOF())
//	LRET := .F.
//	ALERT("N√O EXISTEM DESPESAS PARA O BV "+ALLTRIM(AADIANT[NPOS,02]))
//ENDIF

//MONTO UM ARRAY COM TODAS AS DESPESAS DA QUERY
WHILE TR2->(!EOF())
	_NVALDES += TR2->VALOR // SOMO TODAS AS DESPESAS
	AADD(_AMULNAT,{TR2->VALOR, TR2->NATUREZA, TR2->CCUSTO})
	TR2->(DBSKIP())
ENDDO
                       
DBSELECTAREA("TR2")
DBCLOSEAREA()

//BEGIN TRANSACTION

//SE EXISTIR MAIS DE UM TIPO DE DESPESA EU GRAVO A TABELA DE M⁄LTIPLAS NATUREZAS, CASO CONTR¡RIO S” INCLUO O TÕTULO NCF COM A NATUREZA DA DESPESA
IF LEN(_AMULNAT) > 1
	FOR _F := 1 TO LEN(_AMULNAT)
		DBSELECTAREA("SEV")		//TABELA DE MULTIPLAS NATUREZAS POR TÕTULO
		RECLOCK("SEV", .T.)
		SEV->EV_FILIAL  := XFILIAL("SEV")
		SEV->EV_PREFIXO := CPREFIXO
		SEV->EV_NUM     := CNUM
		SEV->EV_PARCELA := CPARCELA
		SEV->EV_CLIFOR  := CFORNECE
		SEV->EV_LOJA    := CLOJA
		SEV->EV_TIPO    := CTIPO
		SEV->EV_VALOR   := _AMULNAT[_F][1]
		SEV->EV_NATUREZ := _AMULNAT[_F][2]
		SEV->EV_RECPAG  := "P"		//PAGAMENTO
		SEV->EV_PERC	:= _AMULNAT[_F][1] / _NVALDES
		SEV->EV_RATEICC := "2"		//RATEIO P/ CENTRO DE CUSTO (1=SIM;2=NAO)
		SEV->EV_IDENT   := "1"		//IDENTIFICADOR
		SEV->EV_CCD		:= _AMULNAT[_F][3]
		MSUNLOCK()
	NEXT _F 
ENDIF

_CBANCO	  := IIF(FPI->FPI_DEPTO=="1",CXOPGBAN,;
			 IIF(FPI->FPI_DEPTO=="2",CXOPTBAN,;
			 IIF(FPI->FPI_DEPTO=="3",CXOPUBAN,;
			 IIF(FPI->FPI_DEPTO=="4",CXOPPBAN,;
			 IIF(FPI->FPI_DEPTO=="5",CXMNTBAN,"")))))		// 1=GUINDASTE;2=TRANSPORTE;3=PLATAFORMA;4=GRUA;5=MANUTENCAO
_CAGENCIA := IIF(FPI->FPI_DEPTO=="1",CXOPGAG ,;
			 IIF(FPI->FPI_DEPTO=="2",CXOPTAG ,;
			 IIF(FPI->FPI_DEPTO=="3",CXOPUAG ,;
			 IIF(FPI->FPI_DEPTO=="4",CXOPPAG ,;
			 IIF(FPI->FPI_DEPTO=="5",CXMNTAG ,"")))))		// 1=GUINDASTE;2=TRANSPORTE;3=PLATAFORMA;4=GRUA;5=MANUTENCAO
_CNUMCON  := IIF(FPI->FPI_DEPTO=="1",CXOPGCC ,;
			 IIF(FPI->FPI_DEPTO=="2",CXOPTCC ,;
			 IIF(FPI->FPI_DEPTO=="3",CXOPUCC ,;
			 IIF(FPI->FPI_DEPTO=="4",CXOPPCC ,;
			 IIF(FPI->FPI_DEPTO=="5",CXMNTCC ,"")))))		// 1=GUINDASTE;2=TRANSPORTE;3=PLATAFORMA;4=GRUA;5=MANUTENCAO
// _CCCUSTO  := LOCA05101(FPI->FPI_DEPTO)					// 1=GUINDASTE;2=TRANSPORTE;3=PLATAFORMA;4=GRUA;5=MANUTENCAO
_CCCUSTO  := FPI->FPI_CCUSTO

// GRAVO O TÕTULO NCF COM O TOTAL DAS DEPESAS
IF LRET .AND. !EMPTY(_NVALDES)
	ASE2 := {}

	AADD(ASE2     , {"E2_FILIAL" , XFILIAL("SE2")								, NIL})
	AADD(ASE2     , {"E2_PREFIXO", CPREFIXO										, NIL})
	AADD(ASE2     , {"E2_NUM"    , CNUM											, NIL})
	AADD(ASE2     , {"E2_PARCELA", CPARCELA										, NIL})
	AADD(ASE2     , {"E2_TIPO"   , CTIPO 										, NIL})
	AADD(ASE2     , {"E2_NATUREZ", IIF(LEN(_AMULNAT)>1,CNATUREZ,_AMULNAT[1][2])	, NIL})		//SE EXISTIR APENAS UMA DESPESA USO A NATUREZA DA MESMA, SEN√O USO A NATUREZA PADR√O DO PAR¬METRO
	AADD(ASE2     , {"E2_FORNECE", CFORNECE       								, NIL})
	AADD(ASE2     , {"E2_LOJA"   , CLOJA           								, NIL})
	AADD(ASE2     , {"E2_NOMFOR" , SA2->A2_NREDUZ 								, NIL})
	IF DDATABASE >= _DDUVALE // A  BAIXA DA BV  DEVE SER MAIOR OU IGUAL A DATA DO ULTIMO VALE
		AADD(ASE2 , {"E2_EMISSAO", DDATABASE									, NIL})
		AADD(ASE2 , {"E2_VENCTO" , DDATABASE + NDIAS							, NIL})
		AADD(ASE2 , {"E2_VENCREA", DDATABASE + NDIAS							, NIL})
		AADD(ASE2 , {"E2_DATALIB", DDATABASE			    					, NIL})
	ELSE
		AADD(ASE2 , {"E2_EMISSAO", _DDUVALE										, NIL})
		AADD(ASE2 , {"E2_VENCTO" , _DDUVALE + NDIAS								, NIL})
		AADD(ASE2 , {"E2_VENCREA", _DDUVALE + NDIAS								, NIL})
		AADD(ASE2 , {"E2_DATALIB", _DDUVALE			    						, NIL})
	ENDIF
	AADD(ASE2     , {"E2_VALOR"  , _NVALDES										, NIL})
	AADD(ASE2     , {"E2_CCD"    , _CCCUSTO             						, NIL})
	AADD(ASE2     , {"E2_HIST"   , CHIST          								, NIL})
	AADD(ASE2     , {"E2_MULTNAT", IIF(LEN(_AMULNAT)>1,"1","2")					, NIL})		//MULTIPLAS NATUREZAS P/TIT (1=SIM;2=NAO)
	AADD(ASE2     , {"E2_ITEMD"  , FPI->FPI_FROTA    							, NIL})
	AADD(ASE2     , {"E2_CLVLDB" , ALLTRIM(STRTRAN(FPI->FPI_AS,"-",""))			, NIL})
	AADD(ASE2     , {"AUTBANCO"  , _CBANCO                						, NIL})
	AADD(ASE2     , {"AUTAGENCIA", _CAGENCIA              						, NIL})
	AADD(ASE2     , {"AUTCONTA"  , _CNUMCON               						, NIL})
				
	// VARIAVEIS MENSAGEM DE ERRO
	LMSERROAUTO := .F.
	LMSHELPAUTO := .T.
				
	// GRAVA CONTAS A PAGAR
	MSEXECAUTO({|X,Y,Z|FINA050(X,Y,Z)},ASE2,NIL,3)

	// CONTROLA MENSAGEM DE ERRO
	IF LMSERROAUTO
		ROLLBACKSX8()
        LRET := .F.
		MOSTRAERRO()
	    ALERT(STR0034 + ALLTRIM(FPI->FPI_NRBV) + ".") //"N√O FOI POSSIVEL GERAR O TITULO PARA O BV "
	ELSE
		CONFIRMSX8()
        LRET := .T.
	ENDIF

ENDIF

//EFETUA AS BAIXAS DAS PA'S REFER NTE AOS VALORES DEVOLVIDOS PELO MOTORISTA
IF LRET .AND. _NVALDEV > 0
 //	_NSALBX := _NTOTVALE - _NVALDEV					// SALDO A BAIXAR … IGUAL AO O VALOR DEVOLVIDO
    _NSALBX := _NVALDEV								// SALDO A BAIXAR … IGUAL AO O VALOR DEVOLVIDO
	_LFLAG	:= .T.
	 
 //	IF  _NSALBX > 0 								// TENHO VALES A BAIXAR
		// VERIFICO OS VALES DESTE BV
		FPH->(DBSETORDER(5))
		FPH->(DBSEEK(XFILIAL("FPH") + FPI->FPI_NRBV))
		WHILE FPH->(!EOF()) .AND. FPH->FPH_NRBV == FPI->FPI_NRBV  .AND. _LFLAG
			IF FPH->FPH_MOTORI == FPI->FPI_MOTORI	// S” ACEITA DO MESMO MOTORISTA
				IF FPH->FPH_APROVA
					// PROCURO NO FINANCEIRO SE O VALE AINDA POSSUI SALDO
					SE2->(DBSETORDER(1))
	 				IF SE2->(DBSEEK(XFILIAL("SE2")+"ADT"+FPH->FPH_NRVALE+"   "+"PA "+CFORNECE+CLOJA)) 			// PEGO O PRIMEIRO VALE PARA BAIXAR O VALOR RESTANTE
						// SE POSSUI SALDO MAIOR QUE O VALOR DA DEVOLU«√O BAIXO O VALOR DA DEVOLU«√O E CONCLUO O LA«O
						IF SE2->E2_SALDO >= _NSALBX
							_LFLAG := .F.
							// INICIO
						 //	LOCA03801(_CBANCO , _CAGENCIA , _CNUMCON , CHIST     , _NSALBX , 3 , _DDUVALE )   	// BAIXO O RESTANTE MENOS A DEVOLU«√O 
						 //	_NSALBX := _NVALDEV																	// REGISTRO A ENTRADA DO VALOR DEVOLVIDO
						 //	LOCA03801(_CBANCO , _CAGENCIA , _CNUMCON , _CDESCRBX , _NSALBX , 3 , _DDUVALE ) 	// REGISTRO A DEVOLU«√O O CERTO SERIA REGISTRAR O RECEBIMENTO VIA CR
							// FINAL 
						 //	LOCA03801(_CBANCO , _CAGENCIA , _CNUMCON , _CDESCRBX , _NSALBX , 3 , _DDUVALE , XFILIAL("SE2")+"ADT"+FPH->FPH_NRVALE+"   "+"PA "+CFORNECE+CLOJA) 
							LOCA05102(_CBANCO , _CAGENCIA , _CNUMCON , _CDESCRBX , _NSALBX , 3 , _DDUVALE , XFILIAL("SE2")+"ADT"+FPH->FPH_NRVALE+"   "+"PA "+CFORNECE+CLOJA) 
						ELSE
							// SE POSSUI SALDO MENOR QUE O VALOR DA DEVOLU«√O BAIXO O VALOR DO SALDO E CONTINUO A PROCURAR MAIS VALES PARA BAIXAR O SALDO RESTANTE
							_NSALBX -= SE2->E2_SALDO
						 //	LOCA03801( _CBANCO, _CAGENCIA , _CNUMCON , CHIST     , SE2->E2_SALDO , 3 , _DDUVALE)
						 //	LOCA03801( _CBANCO, _CAGENCIA , _CNUMCON , _CDESCRBX , SE2->E2_SALDO , 3 , _DDUVALE , XFILIAL("SE2")+"ADT"+FPH->FPH_NRVALE+"   "+"PA "+CFORNECE+CLOJA) 
							LOCA05102( _CBANCO, _CAGENCIA , _CNUMCON , _CDESCRBX , SE2->E2_SALDO , 3 , _DDUVALE , XFILIAL("SE2")+"ADT"+FPH->FPH_NRVALE+"   "+"PA "+CFORNECE+CLOJA) 
						ENDIF
					ENDIF
				ENDIF
			ENDIF
			FPH->(DBSKIP())
		ENDDO
	// --> BAIXO SOMENTE OS  VALORES DEVOLVIDOS POIS HOUVE DEVOLU«√O INTEGRAL DO VALOR
	// INICIO
 /*	ELSE                      
		FPH->(DBSETORDER(5))
		FPH->(DBSEEK(XFILIAL("FPH") + FPI->FPI_NRBV))
		WHILE FPH->(!EOF()) .AND. FPH->FPH_NRBV == FPI->FPI_NRBV  .AND. _LFLAG
			IF FPH->FPH_MOTORI == FPI->FPI_MOTORI	// S” ACEITA DO MESMO MOTORISTA
				IF FPH->FPH_APROVA
					// PROCURO NO FINANCEIRO SE O VALE AINDA POSSUI SALDO
					SE2->(DBSETORDER(1))
	 				IF SE2->(DBSEEK(XFILIAL("SE2") + "ADT" + FPH->FPH_NRVALE + "   " + "PA " + CFORNECE + CLOJA)) //PEGO O PRIMEIRO VALE PARA BAIXAR O VALOR RESTANTE
						// SE POSSUI SALDO MAIOR QUE O VALOR DA DEVOLU«√O BAIXO O VALOR DA DEVOLU«√O E CONCLUO O LA«O
						IF SE2->E2_SALDO >= _NSALBX
							_LFLAG := .F.
						 //	LOCA03801(_CBANCO , _CAGENCIA , _CNUMCON , CHIST     , _NSALBX , 3 , _DDUVALE) 
						 //	_NSALBX := _NVALDEV		// SALDO RESTANTE A BAIXAR … IGUAL AO O VALOR DEVOLVIDO
							LOCA03801(_CBANCO , _CAGENCIA , _CNUMCON , _CDESCRBX , _NSALBX , 3 , _DDUVALE) 
						ELSE
							// SE POSSUI SALDO MENOR QUE O VALOR DA DEVOLU«√O BAIXO O VALOR DO SALDO E CONTINUO A PROCURAR MAIS VALES PARA BAIXAR O SALDO RESTANTE
							_NSALBX -= SE2->E2_SALDO
						 //	LOCA03801(_CBANCO , _CAGENCIA , _CNUMCON , CHIST     , SE2->E2_SALDO , 3 , _DDUVALE) 
							LOCA03801(_CBANCO , _CAGENCIA , _CNUMCON , _CDESCRBX , SE2->E2_SALDO , 3 , _DDUVALE) 
						ENDIF
					ENDIF
				ENDIF
			ENDIF
			FPH->(DBSKIP())
		ENDDO	
	ENDIF */
	// FINAL 
ENDIF

//GRAVO A TABELA ZL0-TABELA DE DESCONTOS REFERENTE A BVS PARA FOLHA COM A DIFEREN«A A SER DESCONTADA DO FUNCION¡RIO
IF LRET .AND. !EMPTY(FPI->FPI_DESFOL)
	RECLOCK("ZL0", .T.)
	ZL0->ZL0_FILIAL  := XFILIAL("ZL0")
	ZL0->ZL0_NRBV    := CNUM
	ZL0->ZL0_DATA    := DDATABASE
	ZL0->ZL0_MOTORI  := FPI->FPI_MOTORI
	ZL0->ZL0_VALOR   := FPI->FPI_DESFOL
	ZL0->ZL0_OBS	 := FPI->FPI_OBS
	ZL0->(MSUNLOCK()) 
ENDIF

IF !(LRET)
	//DISARMTRANSACTION()
	RETURN(.F.)
ENDIF

//END TRANSACTION 

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA05101(_CTIPO)
// ======================================================================= \\

// CENTRO DE CUSTO PADR√O PARA GERA«√O DOS TÕTULOS DO CAIXINHA BV E VALE

LOCAL _CRET := "" 

DO CASE
CASE _CTIPO == "1"							//GUINDASTE
	IF !(SX6->(DBSEEK(XFILIAL("SX6")+"MV_LOCX100")))		//NAO ENCONTRADO, PRECISA CRIAR O PARAMETRO
		/*
		RECLOCK('SX6',.T.)
		SX6->X6_FIL     := XFILIAL("SX6")
		SX6->X6_VAR     := "MV_LOCX100"
		SX6->X6_TIPO    := 'C'
		SX6->X6_DESCRIC := STR0035 //'CENTRO DE CUSTO PADRAO PARA GERACAO DOS TITULOS DO'
		SX6->X6_DESC1   := STR0036 //'PROCESSO DO CAIXINHA - VALES E BVS DE GUINDASTE.  '
		SX6->X6_DESC2   := '                                                  '
		SX6->X6_DSCSPA  := SX6->X6_DESCRIC
		SX6->X6_DSCSPA1 := SX6->X6_DESC1
		SX6->X6_DSCSPA2 := SX6->X6_DESC2
		SX6->X6_DSCENG  := SX6->X6_DESCRIC
		SX6->X6_DSCENG1 := SX6->X6_DESC1
		SX6->X6_DSCENG2 := SX6->X6_DESC2
		SX6->X6_CONTEUD := '' //'91000' CC ANTIGO
		SX6->X6_CONTSPA := SX6->X6_CONTEUD
		SX6->X6_CONTENG := SX6->X6_CONTEUD
		SX6->X6_PROPRI  := 'R'
		MSUNLOCK("SX6")
		*/
	ENDIF     
	_CRET	:= GETMV("MV_LOCX100")
CASE _CTIPO == "2"							//TRANSPORTE
	IF !(SX6->(DBSEEK(XFILIAL("SX6")+"MV_LOCX103")))		//NAO ENCONTRADO, PRECISA CRIAR O PARAMETRO
		/*
		RECLOCK('SX6',.T.)
		SX6->X6_FIL     := XFILIAL("SX6")
		SX6->X6_VAR     := "MV_LOCX103"
		SX6->X6_TIPO    := 'C'
		SX6->X6_DESCRIC := STR0035 //'CENTRO DE CUSTO PADRAO PARA GERACAO DOS TITULOS DO'
		SX6->X6_DESC1   := STR0037 //'PROCESSO DO CAIXINHA - VALES E BVS DE TRANSPORTE. '
		SX6->X6_DESC2   := '                                                  '
		SX6->X6_DSCSPA  := SX6->X6_DESCRIC
		SX6->X6_DSCSPA1 := SX6->X6_DESC1
		SX6->X6_DSCSPA2 := SX6->X6_DESC2
		SX6->X6_DSCENG  := SX6->X6_DESCRIC
		SX6->X6_DSCENG1 := SX6->X6_DESC1
		SX6->X6_DSCENG2 := SX6->X6_DESC2
		SX6->X6_CONTEUD := '' // '92000' CC ANTIGO
		SX6->X6_CONTSPA := SX6->X6_CONTEUD
		SX6->X6_CONTENG := SX6->X6_CONTEUD
		SX6->X6_PROPRI  := 'R'
		MSUNLOCK("SX6")
		*/
	ENDIF     
	_CRET	:= GETMV("MV_LOCX103")
CASE _CTIPO == "3"							//PLATAFORMA
	IF !(SX6->(DBSEEK(XFILIAL("SX6")+"MV_LOCX102")))		//NAO ENCONTRADO, PRECISA CRIAR O PARAMETRO
		/*
		RECLOCK('SX6',.T.)
		SX6->X6_FIL     := XFILIAL("SX6")
		SX6->X6_VAR     := "MV_LOCX102"
		SX6->X6_TIPO    := 'C'
		SX6->X6_DESCRIC := STR0035 //'CENTRO DE CUSTO PADRAO PARA GERACAO DOS TITULOS DO'
		SX6->X6_DESC1   := STR0038 //'PROCESSO DO CAIXINHA - VALES E BVS DE PLATAFORMA. '
		SX6->X6_DESC2   := '                                                  '
		SX6->X6_DSCSPA  := SX6->X6_DESCRIC
		SX6->X6_DSCSPA1 := SX6->X6_DESC1
		SX6->X6_DSCSPA2 := SX6->X6_DESC2
		SX6->X6_DSCENG  := SX6->X6_DESCRIC
		SX6->X6_DSCENG1 := SX6->X6_DESC1
		SX6->X6_DSCENG2 := SX6->X6_DESC2
		SX6->X6_CONTEUD := '' //'96000' CC ANTIGO
		SX6->X6_CONTSPA := SX6->X6_CONTEUD
		SX6->X6_CONTENG := SX6->X6_CONTEUD
		SX6->X6_PROPRI  := 'R'
		MSUNLOCK("SX6")
		*/
	ENDIF     
	_CRET	:= GETMV("MV_LOCX102")
CASE _CTIPO == "4"							//GRUA
	IF !(SX6->(DBSEEK(XFILIAL("SX6")+"MV_LOCX104")))		//NAO ENCONTRADO, PRECISA CRIAR O PARAMETRO
		/*
		RECLOCK('SX6',.T.)
		SX6->X6_FIL     := XFILIAL("SX6")
		SX6->X6_VAR     := "MV_LOCX104"
		SX6->X6_TIPO    := 'C'
		SX6->X6_DESCRIC := STR0035 //'CENTRO DE CUSTO PADRAO PARA GERACAO DOS TITULOS DO'
		SX6->X6_DESC1   := STR0039 //'PROCESSO DO CAIXINHA - VALES E BVS DE GRUAS.      '
		SX6->X6_DESC2   := '                                                  '
		SX6->X6_DSCSPA  := SX6->X6_DESCRIC
		SX6->X6_DSCSPA1 := SX6->X6_DESC1
		SX6->X6_DSCSPA2 := SX6->X6_DESC2
		SX6->X6_DSCENG  := SX6->X6_DESCRIC
		SX6->X6_DSCENG1 := SX6->X6_DESC1
		SX6->X6_DSCENG2 := SX6->X6_DESC2
		SX6->X6_CONTEUD := '' // '9300000' CC ANTIGO
		SX6->X6_CONTSPA := SX6->X6_CONTEUD
		SX6->X6_CONTENG := SX6->X6_CONTEUD
		SX6->X6_PROPRI  := 'R'
		MSUNLOCK("SX6")
		*/
	ENDIF     
	_CRET	:= GETMV("MV_LOCX104") 
	
CASE _CTIPO == "5"							//MANUTENCAO
	IF !(SX6->(DBSEEK(XFILIAL("SX6")+"MV_LOCX101")))		//NAO ENCONTRADO, PRECISA CRIAR O PARAMETRO
		/*
		RECLOCK('SX6',.T.)
		SX6->X6_FIL     := XFILIAL("SX6")
		SX6->X6_VAR     := "MV_LOCX101"
		SX6->X6_TIPO    := 'C'
		SX6->X6_DESCRIC := STR0035 //'CENTRO DE CUSTO PADRAO PARA GERACAO DOS TITULOS DO'
		SX6->X6_DESC1   := STR0040 //'PROCESSO DO CAIXINHA - VALES E BVS DE MANUTEN«√O.      '
		SX6->X6_DESC2   := '                                                  '
		SX6->X6_DSCSPA  := SX6->X6_DESCRIC
		SX6->X6_DSCSPA1 := SX6->X6_DESC1
		SX6->X6_DSCSPA2 := SX6->X6_DESC2
		SX6->X6_DSCENG  := SX6->X6_DESCRIC
		SX6->X6_DSCENG1 := SX6->X6_DESC1
		SX6->X6_DSCENG2 := SX6->X6_DESC2
		SX6->X6_CONTEUD := '      ' // '       ' DEVER¡ INFORMAR O CC DE MANUTENCAO
		SX6->X6_CONTSPA := SX6->X6_CONTEUD
		SX6->X6_CONTENG := SX6->X6_CONTEUD
		SX6->X6_PROPRI  := 'R'
		MSUNLOCK("SX6")
		*/
	ENDIF     
	_CRET	:= GETMV("MV_LOCX101")	
ENDCASE

RETURN _CRET



// ======================================================================= \\
FUNCTION LOCA05102(CBANCO,CAGENCIA,CCONTA,CDESCRBX,NVALBX, NTIPO, _DATABAIXA, CINDICE) 
// ======================================================================= \\

LOCAL CSEQ	 := "00"          

DBSELECTAREA("SE2")
DBSETORDER(1)
IF DBSEEK(CINDICE) 
	
	// Removido por Frank, pois nao tempos mais esta funcionalidade de usar o SE5 e estava dando 
	// debitos tecnicos por usar a SE5 em 06/04/2022
	/*
	DBSELECTAREA("SE5")
	DBSETORDER(7)
	IF DBSEEK(XFILIAL("SE5")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA))                      
		WHILE !SE5->(EOF()) .AND. SE5->(E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == XFILIAL("SE5")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)		
			CSEQ := SE5->E5_SEQ
			SE5->(DBSKIP())
		ENDDO
	ENDIF          
	
	CSEQ := SOMA1(CSEQ)

	RECLOCK("SE5", .T.)
	SE5->E5_FILIAL 	:= XFILIAL("SE5")
	SE5->E5_DATA   	:= DDATABASE
	SE5->E5_TIPO   	:= SE2->E2_TIPO
	SE5->E5_MOEDA  	:= "01"
	SE5->E5_VALOR  	:= NVALBX
	SE5->E5_NATUREZ	:= SE2->E2_NATUREZ
	SE5->E5_BANCO	:= CBANCO
	SE5->E5_AGENCIA	:= CAGENCIA
	SE5->E5_CONTA	:= CCONTA
	SE5->E5_RECPAG	:= "R"
	SE5->E5_BENEF	:= SE2->E2_NOMFOR
	SE5->E5_HISTOR	:= CDESCRBX
	SE5->E5_TIPODOC	:= "VL"
	SE5->E5_VLMOED2 := NVALBX
	SE5->E5_LA	 	:= "N"
	SE5->E5_PREFIXO := SE2->E2_PREFIXO
	SE5->E5_NUMERO	:= SE2->E2_NUM
	SE5->E5_PARCELA	:= SE2->E2_PARCELA
	SE5->E5_CLIFOR 	:= SE2->E2_FORNECE
	SE5->E5_LOJA 	:= SE2->E2_LOJA
	SE5->E5_DTDIGIT := DDATABASE
	SE5->E5_MOTBX 	:= "NOR"
	SE5->E5_SEQ		:= CSEQ
	SE5->E5_DTDISPO	:= DDATABASE
	SE5->E5_FILORIG	:= XFILIAL("SE5")
	SE5->E5_FORNECE	:= SE2->E2_FORNECE
	SE5->(MSUNLOCK()) 
	
	
	RECLOCK("SE2", .F.)
	SE2->E2_BAIXA 	:= DDATABASE
	SE2->E2_MOVIMEN := DDATABASE
	SE2->E2_SALDO   -= NVALBX
	SE2->E2_BCOPAG	:= CBANCO
	SE2->(MSUNLOCK()) 
	*/
ELSE
	MSGALERT(STR0041 , STR0002)  //"TITULO NAO LOCALIZADO"###"GPO - LOCT040.PRW"
ENDIF

RETURN
