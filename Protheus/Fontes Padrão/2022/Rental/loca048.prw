#INCLUDE "loca048.ch" 
/*/{PROTHEUS.DOC} LOCA048.PRW
ITUP BUSINESS - TOTVS RENTAL
MEDICAO
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/

#INCLUDE "PROTHEUS.CH"                                                                                                                      
#INCLUDE "RWMAKE.CH"
#INCLUDE "TOTVS.CH" 
#INCLUDE "TOPCONN.CH"
#INCLUDE "FWMVCDEF.CH"
#IFDEF __TRYEXCEPTION__
    #INCLUDE "TRYEXCEPTION.CH"
#ENDIF   
#DEFINE MAXGETDAD 99999

#TRANSLATE	BETWEEN(<UDATA>,<EXP1>,<EXP2>) => (<UDATA> >= <EXP1> .AND. <UDATA> <= <EXP2>)

FUNCTION LOCA048(CPROJECT)
LOCAL _CUSER    := RETCODUSR(SUBSTR(CUSUARIO,7,15)) 		// RETORNA O CÓDIGO DO USUÁRIO
LOCAL AARLC035  := GETAREA()
LOCAL AAREAZLF  := FPN->(GETAREA())
LOCAL CFILTRO	:= ""

PRIVATE LVERZBX												// HABILITA CONTROLE DE MINUTA
PRIVATE AINDEX  := {} 
PRIVATE BESTPV  := {|| FWMSGRUN(,{|| LOCA04817()},,STR0001)  } //"ESTORNANDO PEDIDO DE VENDAS"
PRIVATE _LAUTOR := .T.
PRIVATE _CLINHA := "|"
/*
PRIVATE ACORES	:= {{'FPN_SITUAC=="1"'                      , "BR_AZUL"    },;
					{'FPN_SITUAC=="2"'                      , "BR_VERDE"   },;
				 	{'FPN_SITUAC=="3" .OR. FPN_SITUAC=="6"' , "BR_PRETO"   },;
				 	{'FPN_SITUAC=="4"'                      , "BR_VERMELHO"},;
			 	 	{'FPN_SITUAC=="5"'                      , "BR_BRANCO"  } } 
*/
// NOVAS CORES PARA A MEDIÇÃO COM BASE NO PROJETO DA APGERADORES.
// FRANK ZWARG FUGA EM 10/09/2020
PRIVATE ACORES	:= {{'FPN_SITUAC=="1"','BR_AZUL'  },;
					{'FPN_SITUAC=="2" .AND. FPN->FPN_VALTOT>0','BR_VERDE' },;
				 	{'(FPN_SITUAC=="3" .OR. FPN_SITUAC=="6")','BR_PRETO'},;
				 	{'FPN_SITUAC=="4"','BR_VERMELHO'},;
			 	 	{'FPN_SITUAC=="5"','BR_BRANCO'},;
			 	 	{'FPN_SITUAC=="2" .AND. FPN->FPN_VALTOT==0','BR_VIOLETA'}}
				
PRIVATE CCADASTRO  := STR0002 //"MANUTENÇÃO DE MEDIÇÕES"
PRIVATE AROTINA	   := {}   
PRIVATE BFILTRABRW := { || .F. }

PRIVATE _LAUTOMA := .F.
PRIVATE _NINFORMA  := 0

DEFAULT CPROJECT := ""


//IF !LOCA061() 											// --> VALIDAÇÃO DO LICENCIAMENTO (WS) DO GPO 
//	RETURN 
//ENDIF 

// U_AJREMOCAO()											// CRIA PARÂMETROS, TABELAS, CONSULTAS E ETC - DESCONTINUADO, POIS ESTÁ NO WIZARD DE INSTALAÇÃO.

LVERZBX := SUPERGETMV("MV_LOCX097",.T.,"")  					// HABILITA CONTROLE DE MINUTA
/*
IF FQ1->(DBSEEK(XFILIAL("FQ1") + _CUSER + "LOCA048",.T.)) 	// PROCURA O CÓDIGO DE USUÁRIO NA TABELA DE USUÁRIOS X ROTINAS (SZ5)
	_LAUTOR := .T.
ELSE
	_LAUTOR := .F.
ENDIF
*/
BEGIN SEQUENCE
	AADD(AROTINA,{STR0003         		,"AXPESQUI"            ,0, 1}) //"Pesquisar"
	AADD(AROTINA,{STR0004        		,"LOCA04801(2)"        ,0, 2}) //"Visualizar"
	AADD(AROTINA,{STR0005 	      		,"LOCA04801(3)"        ,0, 3}) //"Incluir"
	AADD(AROTINA,{STR0006        		,"LOCA04801(4)"        ,0, 4}) //"Manutenção"
	AADD(AROTINA,{STR0007 		,"EVAL(BESTPV)"        ,0,06})  //"Estorna ped.venda"
	AADD(AROTINA,{STR0008 		,"LOCA04816()"          ,0,07})  //"Mudar situação"
	AADD(AROTINA,{STR0009       	  		,"LOCA04805()"          ,0,08}) //"Legenda"

	IF GETMV("MV_LOCX224",,.T.) // TRATAMENTO ESPECIFICO PARA A APGERADORES - FRANK Z FUGA - 10/09/20    
		AADD(AROTINA,{STR0010 		,"LOCR013()"         ,0,09}) //"Relatório medição"
	ENDIF

	AADD(AROTINA,{STR0011	  		,"LOCA007"            ,0,10})  //"Custos extras"
	
	IF GETMV("MV_LOCX224",,.F.) // TRATAMENTO ESPECIFICO PARA A APGERADORES - FRANK Z FUGA - 10/09/20
		AADD(AROTINA,{STR0012	,"LOCR032"          ,0,11}) //"Relatório consolidado"
	ENDIF
	AADD(AROTINA,{STR0013	  		,"LOCA04804()"           ,0,12}) //"Gerar ped.venda"
	
	IF EXISTBLOCK("LOC035COR") 								// --> PONTO DE ENTRADA PARA INCLUSÃO DE FILTROS.
		ACORES := EXECBLOCK("LOC035COR" ,.T.,.T.,{ACORES}) 
	ENDIF
	
	IF EXISTBLOCK("LOC035FIL") 								// --> PONTO DE ENTRADA PARA INCLUSÃO DE FILTROS.
		CFILTRO := EXECBLOCK("LOC035FIL",.T.,.T.,{CPROJECT}) 
	ENDIF
	
	IF EXISTBLOCK("LC035ROT") 								// --> PONTO DE ENTRADA PARA INCLUSÃO DE BOTÕES NO AÇÕES RELACIONADAS.
		AROTINA := EXECBLOCK("LC035ROT" ,.T.,.T.,{AROTINA}) 
	ENDIF
	
	MBROWSE(6,1,22,75,"FPN",NIL,NIL,NIL,NIL,NIL,ACORES,NIL,NIL,NIL,NIL,NIL,NIL,NIL,CFILTRO) 
END SEQUENCE

RESTAREA(AARLC035)
RESTAREA(AAREAZLF)

RETURN  



// ======================================================================= \\
FUNCTION LOCA04801(POPC)
// ======================================================================= \\
// --> CHAMADA: EXCLUSIVA NESTE FONTE.

LOCAL NSTYLE       := 0
LOCAL ASIZE        := MSADVSIZE()
LOCAL CALIAS , CCHAVE , CCONDICAO , NINDICE , CFILTRO 
LOCAL NPOSORD
LOCAL _LVLDDATA    := .T. 

PRIVATE BALTER     := {|X,Y| FVLFIELD(X,Y) }
PRIVATE NOPC       := POPC
PRIVATE LVISU      := .T.
PRIVATE LENCERRA   := .F.
PRIVATE LINCLUI	   := IIF(NOPC==3 , .T. , .F.) 
PRIVATE LALTERA	   := IIF(NOPC==4 , .T. , .F.) 
PRIVATE LEDITA	   := IIF(LINCLUI .OR. LALTERA , .T. , .F.) 
PRIVATE LMANUT     := .F.
PRIVATE CPROJETO   := ""
PRIVATE COBRA      := ""
PRIVATE CTIPOMED   := ""	
PRIVATE CAS        := ""
PRIVATE CVIAGEM    := ""  
PRIVATE CDESCPAG   := ""          
PRIVATE CTPAS      := "" 
PRIVATE CUSRINC    := ""
PRIVATE CUSRALT    := ""
PRIVATE CTITULO    := STR0014  //"MEDIÇÃO"
PRIVATE NVALDESC   := 0
PRIVATE NVALACRE   := 0
PRIVATE NVALARRE   := 0
PRIVATE NUSADO     := 0
PRIVATE NFOLDERMED := 0
PRIVATE LCOMP
PRIVATE ACAMPOSSIM := {} 
PRIVATE AHEADER    := {} 
PRIVATE ACOLS      := {} 

PRIVATE OOS						// NOVOS CAMPOS DO PROCESSO DE LOCAÇÃO - FRANK Z FUGA - 10/09/20
PRIVATE _COS		:= SPACE(6) // NOVOS CAMPOS DO PROCESSO DE LOCAÇÃO - FRANK Z FUGA - 10/09/20

PRIVATE ATELA[0][0],AGETS[0]                             
PRIVATE DMOBDTP 	:= DMOBDTR := DDESDTP := DMOBDTR := DSEGDTP := DSEGDTR := DMEDDTP := DMEDDTR  := DDATAI := DDATAF := DDESDTR := DDTPRRT := CTOD("//")
PRIVATE NVALSERV	:= NVALISS:=NVALFRE:=NVALSEG:=_NVLRHOR:=NVALTOT:=NVALPEDAG:=NDESCOMIS:=0
PRIVATE NVALBKP     := 0
PRIVATE OFONT1  	:=TFONT():NEW("ARIAL",8,14,,.T.,,,,.T.,.F.)
PRIVATE OFONT2  	:=TFONT():NEW("ARIAL",10,16,,.T.,,,,.T.,.F.)   
PRIVATE OVALTOTPRV  := NIL
PRIVATE OVALISS     := NIL
PRIVATE OVALDESC	:= NIL
PRIVATE OVALSERV    := NIL
PRIVATE OVALPEDAG	:= NIL   
PRIVATE ODESCOMIS	:= NIL
PRIVATE OVALACRE	:= NIL
PRIVATE OCHK		:= NIL
PRIVATE OOBSG		:= NIL
PRIVATE OOBSD		:= NIL
PRIVATE OOBSA		:= NIL    
PRIVATE OUSRINC		:= NIL
PRIVATE OUSRALT		:= NIL
PRIVATE OTOTHRREAL
PRIVATE OGETZLM		:= {}
PRIVATE OGETZLMVIS	:= {}
PRIVATE OMINHRSMES	:= NIL
PRIVATE ASITUA  	:= {"1=DIGITADO","2=CONFIRMADO","3=CANCELADA","4=FATURADA","5=EM ABERTO","6=CANCELADA"}
PRIVATE CSITUA  	:= CRIAVAR("FPN_SITUAC")
PRIVATE COBSG		:= CRIAVAR("FPN_OBS")
PRIVATE COBSD		:= CRIAVAR("FPN_OBSDES")
PRIVATE COBSA		:= CRIAVAR("FPN_OBSACR")   
PRIVATE DDATAI		:= CRIAVAR("FPN_DTINIC")
PRIVATE	DDATAF		:= CRIAVAR("FPN_DTFIM")
PRIVATE CAGENTE 	:= SPACE(LEN(SA1->A1_COD))	// CRIAVAR("A1_COD")
PRIVATE CLOJA   	:= CRIAVAR("A1_LOJA")
PRIVATE CNOME   	:= CRIAVAR("A1_NOME")  
PRIVATE CCONDPAG	:= CRIAVAR("E4_CODIGO")
PRIVATE CNATUREZ	:= CRIAVAR("ED_CODIGO")
PRIVATE CCC			:= CRIAVAR("CTT_CUSTO")
PRIVATE CPEDV   	:= CRIAVAR("C5_NUM")
PRIVATE NMINHRSMES	:= CRIAVAR("FP4_MINMES")
PRIVATE NTOTHRREAL	:= CRIAVAR("FPP_QTDHR")

PRIVATE NVALTOTPRV  := 0	        
PRIVATE ABNTENCHOI	:= {}
PRIVATE NRECBRW		:= FPN->(RECNO())
PRIVATE OSEQUENCIA, ODATAI, OPROJETO , OVIAGEM 
PRIVATE CSEQUENCIA  := "001"
PRIVATE _COSSAIDA   := CRIAVAR("FPN_OSSAID")
PRIVATE _COSENTRA   := CRIAVAR("FPN_OSENTR")
PRIVATE _NPOSCONT   := CRIAVAR("FPN_POSCON")
PRIVATE _NCONANT    := CRIAVAR("FPN_CONANT")
PRIVATE LFECHAMED   := .F.
PRIVATE _CTIPOX	  := "" // INDICA SE A MEDIÇÃO É LOCAÇÃO, SERVIÇO, PADRÃO (SEM LEVAR EM CONSIDERACAO AS CUSTOMIZACOES) - FRANK Z FUGA 10/09/20
PRIVATE _NFRAQ 	  := 0  // SE A MEDIÇÃO É LOCAÇÃO PEGAR O VALOR DA FRANQUIA DA ZAG
PRIVATE _OFRAQ
PRIVATE _NADIC	  := 0  // SE A MEDICAO É LOCAÇÃO PEGAR O VALOR DO EXCEDENTE DA MEDICAO DA ZAG
PRIVATE _OADIC


IF EXISTBLOCK("LC035OBS") 					// PONTO DE ENTRADA PARA ALTERAR A TELA DE OBSERVAÇÃO.
	//ABNTENCHOI := U_LC035OBS(ABNTENCHOI) 	// ABNTENCHOI := EXECBLOCK("LC035OBS",.T.,.T.,{ABNTENCHOI})
	ABNTENCHOI := EXECBLOCK("LC035OBS" , .T. , .T. , {ABNTENCHOI}) 
ELSE
	AADD(ABNTENCHOI, {"NOTE",{|| LOCA04811()}   , STR0015               , STR0015                    }) //"OBSERVAÇÃO"
ENDIF
AADD(ABNTENCHOI , {"NOTE",{|| FTELATUR()}        , STR0016                   , STR0016                  }) // "TURNOS"
AADD(ABNTENCHOI , {"NOTE",{|| FCALCULAHE(.T.)}   , STR0017 , STR0017}) // "CALCULA HORAS ADICIONAIS"
AADD(ABNTENCHOI , {"NOTE",{|| FLIMPAHE(.T.,.F.)} , STR0018   , STR0018  }) // "LIMPA HORAS ADICIONAIS"

IF EXISTBLOCK("LC035MBT") 					// PONTO DE ENTRADA PARA MANIPULAÇÃO DOS BOTÕES NO AÇÕES RELACIONADAS DENTRO DO INCLUIR/MANUTENÇÃO
	ABNTENCHOI := EXECBLOCK("LC035MBT",.T.,.T.,{ABNTENCHOI})
ENDIF

REGTOMEMORY("FPN",.T.) 						// CABECALHO MEDICAO
REGTOMEMORY("FPP",.T.) 						// ITENS MEDICAO

DO CASE           
CASE NOPC == 2 .OR. NOPC == 5 
	NSTYLE := 0     
CASE NOPC == 6       
	NSTYLE := 0     
CASE NOPC == 3 .OR. NOPC == 4
	NSTYLE := GD_INSERT+GD_UPDATE+GD_DELETE
ENDCASE  

// VERIFICA O TIPO DA MEDIÇÃO (SERVIÇO, OU LOCAÇÃO)
// FRANK ZWARG FUGA - 10/09/20
// EXISTE UM TRATAMENTO ESPECIFICO PARA UM DOS NOSSOS CLIENTES QUANTO O TIPO É LOCAÇÃO
// SE RETORNAR EM "P" MANTER O PADRÃO DA MEDIÇÃO, SE RETORNAR "L" EXISTEM TRATATIVAS ESPECIFICAS
// CLIENTE SOLICITANTE: APGERADORES
// [ INICIO ] ----------------------------------------------------------------------------------
IF EXISTBLOCK("LOCA018") //PONTO DE ENTRADA PARA IDENTIFICAÇÃO SE É UMA LOCAÇÃO, OU SERVIÇO
	// _CTIPOX -> "P" - MANTER O PADRAO DO SISTEMA
	// _CTIPOX -> "L" - TRATAMENTO ESPECIFICO PARA LOCAÇÃO
	_CTIPOX := EXECBLOCK("LOCA018",.T.,.T., {LINCLUI})
	IF EMPTY(_CTIPOX)
		//MSGALERT("FALTOU A SELEÇÃO DO TIPO DA MEDIÇÃO.","PROCESSO BLOQUEADO.")
		RETURN
	ENDIF
ELSE
	//_CTIPOX := "P"
	_CTIPOX := "L"
ENDIF
// [ FIM ] ---------------------------------------------------------------------

IF _CTIPOX == "L" .AND. NOPC <> 3
	FPA->(DBSETORDER(2))
	IF FPA->(DBSEEK(XFILIAL("FPA")+FPN->(FPN_PROJET+FPN_OBRA+FPN_AS+FPN_VIAGEM)))
		_NFRAQ := FPA->FPA_HRFRAQ
		_NADIC := FPA->FPA_VLHREX
	ENDIF
ENDIF

// --> INICIO ------------------------------------------------------------ \\
// ALTERADA POSICAO ONDE POPULA O ARRAY ACAMPOSSIM, POIS ESTAVA DANDO ERROR 
// LOG QUANDO DELETAVA TODAS AS LINHAS DA MEDIÇÃO, CONFIRMAVA E TENTAVA DAR 
// MANUTENÇÃO NOVAMENTE.
AADD(ACAMPOSSIM,{"FPP_ITEM"   , "" })
AADD(ACAMPOSSIM,{"FPP_ORDEM"  , "" })
AADD(ACAMPOSSIM,{"FPP_DTMEDI" , "" })
AADD(ACAMPOSSIM,{"FPP_DTAPUR" , "V"})
AADD(ACAMPOSSIM,{"FPP_OS"     , "" })
AADD(ACAMPOSSIM,{"FPP_FROTA"  , "" })
AADD(ACAMPOSSIM,{"FPP_DESCEQ" , "" })
AADD(ACAMPOSSIM,{"FPP_BASE"   , "" })
AADD(ACAMPOSSIM,{"FPP_EVENTO" , "" })
AADD(ACAMPOSSIM,{"FPP_HORAI"  , "" })
AADD(ACAMPOSSIM,{"FPP_HORAF"  , "" })
AADD(ACAMPOSSIM,{"FPP_HRPARA" , "" })
AADD(ACAMPOSSIM,{"FPP_MOTIVO" , "" })
AADD(ACAMPOSSIM,{"FPP_HORTOT" , "" })
AADD(ACAMPOSSIM,{"FPP_QTDHR"  , "" })
AADD(ACAMPOSSIM,{"FPP_MINDIA" , "V"})
AADD(ACAMPOSSIM,{"FPP_KMINI"  , "" })
AADD(ACAMPOSSIM,{"FPP_KMFIM"  , "" })
AADD(ACAMPOSSIM,{"FPP_QTDKM"  , "" })
AADD(ACAMPOSSIM,{"FPP_VALHOR" , "" })
AADD(ACAMPOSSIM,{"FPP_VLTOHR" , "" })
AADD(ACAMPOSSIM,{"FPP_VLRMOB" , "" })
AADD(ACAMPOSSIM,{"FPP_VLRDES" , "" })
AADD(ACAMPOSSIM,{"FPP_TRSPES" , "" })
AADD(ACAMPOSSIM,{"FPP_MONTAG" , "" })
AADD(ACAMPOSSIM,{"FPP_DESMON" , "" })
AADD(ACAMPOSSIM,{"FPP_ACESSO" , "" })
AADD(ACAMPOSSIM,{"FPP_TIPO"	  , "" })
AADD(ACAMPOSSIM,{"FPP_PERSEG" , "" })
AADD(ACAMPOSSIM,{"FPP_VLBSEG" , "" })
AADD(ACAMPOSSIM,{"FPP_VALSEG" , "" })
AADD(ACAMPOSSIM,{"FPP_TPISS"  , "" })
AADD(ACAMPOSSIM,{"FPP_PERISS" , "" })
AADD(ACAMPOSSIM,{"FPP_VALISS" , "" })
AADD(ACAMPOSSIM,{"FPP_PERMO"  , "" })
AADD(ACAMPOSSIM,{"FPP_VLTOTM" , "" })
AADD(ACAMPOSSIM,{"FPP_VLRTOT" , "" })
AADD(ACAMPOSSIM,{"FPP_VALPRV" , "" })
AADD(ACAMPOSSIM,{"FPP_AUTORI" , "" })
AADD(ACAMPOSSIM,{"FPP_USRLIB" , "" })
AADD(ACAMPOSSIM,{"FPP_DATLIB" , "" })
AADD(ACAMPOSSIM,{"FPP_HORLIB" , "" })
// RATEIO POR FILIAL 
AADD(ACAMPOSSIM,{"FPP_VENDA"  , "V"})	// FILIAL QUE VENDEU - PUXAR AUTOMÁTICO DA PROPOSTA
AADD(ACAMPOSSIM,{"FPP_MAQUIN" , "V"})	// FILIAL DA MÁQUINA/BEM
AADD(ACAMPOSSIM,{"FPP_MAO"    , "V"})	// FILIAL DO OPERADOR
AADD(ACAMPOSSIM,{"FPP_PERVND" , "V"})	// % VENDA
AADD(ACAMPOSSIM,{"FPP_PERMAQ" , "V"})	// % MÁQUINA
AADD(ACAMPOSSIM,{"FPP_PERMAO" , "V"})	// % MÃO DE OBRA
AADD(ACAMPOSSIM,{"FPP_VLVND"  , "V"})	// VALOR VENDA
AADD(ACAMPOSSIM,{"FPP_VLMAQ"  , "V"})	// VALOR MÁQUINA
AADD(ACAMPOSSIM,{"FPP_VLMAO"  , "V"})	// VALOR MÃO DE OBRA
AADD(ACAMPOSSIM,{"FPP_LIBER"  , "" })	// STATUS DA LIBERACAO DO PEDIDO DE VENDA 1=PV LIBERADO, 2=PV BLOQUEADO
AADD(ACAMPOSSIM,{"FPP_OBRA"   , "" })
AADD(ACAMPOSSIM,{"FPP_TURNO"  , "" })
AADD(ACAMPOSSIM,{"FPP_VALTUR" , "" })
// PARA MEDIÇÃO COMPLEMENTAR 
AADD(ACAMPOSSIM,{"FPP_ALTER"  , "V"})
AADD(ACAMPOSSIM,{"FPP_ANCORA" , "V"})
AADD(ACAMPOSSIM,{"FPP_TELESC" , "V"})
AADD(ACAMPOSSIM,{"FPP_MINUTA" , "V"})		// NO. DA MINUTA 
AADD(ACAMPOSSIM,{"FPP_XTIPOH" , "V"})		// NO. DA MINUTA 
AADD(ACAMPOSSIM,{"FPP_PERHAD" , "V"})		// PERCENTUAL 

IF EXISTBLOCK("LC035CPI") 					// PONTO DE ENTRADA PARA INCLUSÃO DE CAMPOS NOS ITENS DA MEDIÇÃO.
	ACAMPOSSIM := EXECBLOCK("LC035CPI",.T.,.T.,{ACAMPOSSIM})
ENDIF
// ALTERADA POSICAO ONDE POPULA O ARRAY ACAMPOSSIM, POIS ESTAVA DANDO ERROR 
// LOG QUANDO DELETAVA TODAS AS LINHAS DA MEDIÇÃO, CONFIRMAVA E TENTAVA DAR 
// MANUTENÇÃO NOVAMENTE.
// --> FINAL  ------------------------------------------------------------ \\

IF LINCLUI

	DBSELECTAREA("FPN")
	DBSETORDER(1)
	CCODMED := GETSX8NUM("FPN","FPN_COD")
	CTIPOMED  := "N"
	CAS		  := SPACE(27)
	CVIAGEM	  := SPACE(06)       
	CAGENTE	  := SPACE(06)
	CCHAVE 	  := SPACE(01)
	CUSRINC	  := SUBSTR(CUSUARIO,7,15)
	_COSSAIDA := SPACE(06)
	_COSENTRA := SPACE(06)
	_NPOSCONT := 0
	_NCONANT  := 0
	LCOMP	  := .F.						// MSDATE() >= SUPERGETMV("MV_LOCX263",,,XFILIAL("FPN"))
//	CONFIRMSX8()

ELSE 

	CUSRINC := SUBSTR(FPN->FPN_USERGI, 03, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 07, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 11, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 15, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 02, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 06, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 10, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 14, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 01, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 05, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 09, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 13, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 17, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 04, 1) +;
	           SUBSTR(FPN->FPN_USERGI, 08, 1)
	CUSRALT := SUBSTR(FPN->FPN_USERGA, 03, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 07, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 11, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 15, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 02, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 06, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 10, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 14, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 01, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 05, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 09, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 13, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 17, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 04, 1) +;
	           SUBSTR(FPN->FPN_USERGA, 08, 1)

    DBSELECTAREA("FPN")
		
	IF LEFT(CUSRINC,2) == "#@"
		CUSRINC := USRRETNAME(SUBSTR(CUSRINC,3,6))
	ENDIF
	
	IF LEFT(CUSRALT,2) == "#@"
		CUSRALT := USRRETNAME(SUBSTR(CUSRALT,3,6))
	ENDIF
	
	IF (FPN->FPN_SITUAC) == "2" .AND. NOPC == 4
		MSGALERT(STR0019 , STR0020) // "MEDIÇAO CONFIRMADA. NÃO É POSSIVEL REALIZAR MANUTENÇÃO."###"GPO - LOCT035.PRW"
		RETURN
		LEDITA := .F.  
		LMANUT := .T. 
		NSTYLE := 0 
	ENDIF
		
	IF (FPN->FPN_SITUAC == "3" .OR. FPN->FPN_SITUAC == "6" ).AND. NOPC == 4
		MSGALERT(STR0021 , STR0020) //"MEDIÇAO CANCELADA. NÃO É POSSIVEL REALIZAR MANUTENÇÃO."###"GPO - LOCT035.PRW"
		RETURN
	ENDIF

	// PROCESSO CRIADO PARA QUE NÃO SEJA POSSÍVEL REALIZAR MANUTENÇÃO PARA MEDIÇÃO JÁ FATURADA.
	IF (FPN->FPN_SITUAC) == "4" .AND. NOPC == 4
		MSGALERT(STR0022 , STR0020) //"MEDIÇAO FATURADA. NÃO É POSSIVEL REALIZAR MANUTENÇÃO."###"GPO - LOCT035.PRW"
		RETURN
	ENDIF

	IF ! EMPTY(FPN->FPN_NUMPV) .AND. (NOPC != 4 .OR. NOPC != 3)
		ASITUA  := {STR0023,STR0024,STR0025,STR0026,STR0027,STR0028} //"1=DIGITADA"###"2=CONFIRMADA"###"6=CANCELADA"###"4=FATURADA"###"5=EM ABERTO"###"6=CANCELADA"
	ENDIF

	CAS		  := FPN->FPN_AS
	CVIAGEM	  := FPN->FPN_VIAGEM   
	CCODMED   := FPN->FPN_COD
	CTIPOMED  := FPN->FPN_TIPO
	CCC		  := FPN->FPN_CC
	LCOMP	  := MSDATE() >=  FPN->FPN_BLQDAT .OR. FPN->FPN_TIPO == "F"
	IF !EMPTY(CAS)
		VLDAS(CAS , CVIAGEM)   
	ENDIF 
	CCHAVE    := XFILIAL("FPN")+FPN->FPN_COD
	DDATAI    := FPN->FPN_DTINIC
	_COSSAIDA := FPN->FPN_OSSAID
	_COSENTRA := FPN->FPN_OSENTR
	_NPOSCONT := FPN->FPN_POSCON
	_NCONANT  := FPN->FPN_CONANT

	CSEQUENCIA := FPN->FPN_MEDSEQ
ENDIF       

IF EXISTBLOCK("LC035BRW") 					// PONTO DE ENTRADA PARA ALTERAR AS VARIÁVEIS ANTES DA TELA SER CARREGADA;
	EXECBLOCK("LC035BRW",.T.,.T.)
ENDIF

SET KEY VK_F11 TO LOCA04811() 

DEFINE MSDIALOG OTELA FROM 0, 0 TO ASIZE[6],ASIZE[5] TITLE CTITULO OF GETWNDDEFAULT() PIXEL

OPANEL:= TPANEL():NEW(0, 0, "", OTELA,, .F., .F.,,,0,50, .F., .F. )
OPANEL:ALIGN:= CONTROL_ALIGN_TOP

OPANEL2:= TPANEL():NEW(0, 0, "",OTELA,, .F., .F.,,,0,60, .F., .F. )
OPANEL2:ALIGN:= CONTROL_ALIGN_TOP

OPANEL3:= TPANEL():NEW(0, 0, "",OTELA,, .F., .F.,,,0,80, .F., .F. )
OPANEL3:ALIGN:= CONTROL_ALIGN_TOP

OPANEL4:= TPANEL():NEW(0, 0, "",OTELA,, .F., .F.,,,0,80, .F., .F. )
OPANEL4:ALIGN:= CONTROL_ALIGN_TOP

// OPANEL5:= TPANEL():NEW(0, 0, "",OTELA,, .F., .F.,,,0,90, .F., .F. )
// OPANEL5:ALIGN:= CONTROL_ALIGN_TOP

@ 005 ,005 TO 040,500 OF OPANEL PIXEL

_CTELAX := "   "
@ 1000,1000 MSGET _CTELAX SIZE 10,10 OF OPANEL PIXEL

@ 010 ,010 SAY   OEMTOANSI(STR0029)         SIZE 100,8                         OF OPANEL PIXEL COLOR CLR_BLUE FONT OFONT1 // "NRO.AS:"
@ 010 ,100 MSGET OAS        VAR CAS           SIZE 170,8  WHEN LINCLUI F3 "FQ5MED" VALID VLDAS(CAS,CVIAGEM) .AND. !EMPTY(CAS) .AND. FCONTSEQ(CAS) .AND. FTRAZCONT() OF OPANEL PIXEL COLOR CLR_BLUE FONT OFONT2 

@ 010 ,275 SAY   OEMTOANSI(STR0030)        SIZE 070,8                         OF OPANEL PIXEL COLOR CLR_BLUE FONT OFONT1 // "SERVICO:"
@ 010 ,330 MSGET OVIAGEM    VAR CVIAGEM       SIZE 040,8  WHEN LINCLUI F3 "ZLFVIA" VALID VLDAS(CAS,CVIAGEM) .AND. !EMPTY(CVIAGEM)                 OF OPANEL PIXEL COLOR CLR_BLUE FONT OFONT2 

@ 010 ,390 SAY   STR0031                 SIZE 070,8                         OF OPANEL PIXEL COLOR CLR_BLUE FONT OFONT1 // "SEQUÊNCIA:"
@ 010 ,440 MSGET OSEQUENCIA VAR CSEQUENCIA    SIZE 050,8  WHEN .F. PICTURE "999" OF OPANEL PIXEL COLOR CLR_RED  FONT OFONT2

@ 025 ,010 SAY   OEMTOANSI(STR0032+SUPERGETMV("MV_LOCX248",.F.,STR0033)+":") SIZE 100,8 OF OPANEL PIXEL COLOR CLR_BLUE FONT OFONT1 // "NRO."###"PROJETO"
@ 025 ,100 MSGET OPROJETO   VAR CPROJETO      SIZE 170,8  WHEN .F.                       OF OPANEL PIXEL COLOR CLR_BLUE FONT OFONT2

@ 025 ,275 SAY   OEMTOANSI(STR0034)           SIZE 060,8                         OF OPANEL PIXEL COLOR CLR_BLUE FONT OFONT1 // "OBRA:"
@ 025, 330 MSGET OOBRA      VAR COBRA         SIZE 060,8  WHEN .F.               OF OPANEL PIXEL COLOR CLR_BLUE FONT OFONT2

@ 025 ,390 SAY   OEMTOANSI(STR0035 )      SIZE 070,8                         OF OPANEL PIXEL COLOR CLR_RED  FONT OFONT2 // "NR. MED.:"
@ 025 ,440 SAY   CCODMED PICTURE "@R 999.999" SIZE 050,8                         OF OPANEL PIXEL COLOR CLR_RED  FONT OFONT2

// --> MOBILIZACAO
@ 005 ,010 GROUP OMOBGRP TO 035,120 LABEL STR0036 PIXEL COLOR CLR_HRED OF OPANEL2 // "MOBILIZAÇÃO"

@ 010 ,020 SAY   OSAYMOBDTP PROMPT OEMTOANSI(STR0037 ) SIZE 040,8  OF OPANEL2 PIXEL // "DATA PREVISTA"
//@ 020 ,020 MSGET OMOBDTP    VAR DMOBDTP      WHEN .F.          SIZE 042,8  OF OPANEL2 PIXEL
// FRANK EM 10/09/2020
// _CTIPOX SE FOR "P" FORMATO PADRÃO DO MEDIÇÃO, SE FOR "L" EXISTE UMA CUSTOMIZAÇÃO ESPECÍFICA
@ 020 ,020 MSGET OMOBDTP  VAR DMOBDTP      WHEN (.F. .AND. _CTIPOX == "P") SIZE 040,8  OF OPANEL2 PIXEL

@ 010 ,075 SAY   OSAYMOBDTR PROMPT OEMTOANSI(STR0038) SIZE 040,8  OF OPANEL2 PIXEL // "DATA REALIZADA"
//@ 020 ,075 MSGET OMOBDTR    VAR DMOBDTR      WHEN LEDITA       SIZE 040,8  OF OPANEL2 PIXEL
// FRANK EM 10/09/2020
// _CTIPOX SE FOR "P" FORMATO PADRÃO DO MEDIÇÃO, SE FOR "L" EXISTE UMA CUSTOMIZAÇÃO ESPECÍFICA
@ 020 ,075 MSGET OMOBDTR  VAR DMOBDTR      WHEN (LEDITA .AND. _CTIPOX == "P") SIZE 040,8  OF OPANEL2 PIXEL

// --> DESMOBILIZACAO
@ 005 ,130 GROUP ODESGRP TO 035,240 LABEL STR0039 PIXEL COLOR CLR_HRED OF OPANEL2 // "DESMOBILIZAÇÃO"

@ 010 ,140 SAY   OSAYDESDTP PROMPT OEMTOANSI(STR0037 ) SIZE 040,8  OF OPANEL2 PIXEL // "DATA PREVISTA"
//@ 020 ,140 MSGET ODESDTP    VAR DDESDTP      WHEN .F.          SIZE 042,8  OF OPANEL2 PIXEL
// _CTIPOX SE FOR "P" FORMATO PADRÃO DO MEDIÇÃO, SE FOR "L" EXISTE UMA CUSTOMIZAÇÃO ESPECÍFICA - FRANK 10/09/20
@ 020 ,140 MSGET ODESDTP  VAR DDESDTP      WHEN (.F. .AND. _CTIPOX == "P") SIZE 040,8  OF OPANEL2 PIXEL

@ 010 ,195 SAY   OSAYDESDTR PROMPT OEMTOANSI(STR0038) SIZE 040,8  OF OPANEL2 PIXEL // "DATA REALIZADA"
//@ 020 ,195 MSGET ODESDTR    VAR DDESDTR      WHEN LEDITA       SIZE 040,8  OF OPANEL2 PIXEL
// _CTIPOX SE FOR "P" FORMATO PADRÃO DO MEDIÇÃO, SE FOR "L" EXISTE UMA CUSTOMIZAÇÃO ESPECÍFICA - FRANK 10/09/20
@ 020 ,195 MSGET OMOBDTR  VAR DDESDTR      WHEN (LEDITA .AND. _CTIPOX == "P") SIZE 040,8  OF OPANEL2 PIXEL

// --> SEGURO
@ 005 ,250 GROUP OSEGGRP TO 035,360 LABEL STR0040 PIXEL COLOR CLR_HRED OF OPANEL2 // "SEGURO"

@ 010 ,260 SAY   OSAYSEGDTP PROMPT OEMTOANSI(STR0037 ) SIZE 040,8  OF OPANEL2 PIXEL // "DATA PREVISTA"
//@ 020 ,260 MSGET OSEGDTP    VAR DSEGDTP      WHEN LEDITA       SIZE 042,8  OF OPANEL2 PIXEL
// _CTIPOX SE FOR "P" FORMATO PADRÃO DO MEDIÇÃO, SE FOR "L" EXISTE UMA CUSTOMIZAÇÃO ESPECÍFICA - FRANK 10/09/20
@ 020 ,260 MSGET OSEGDTP  VAR DSEGDTP      WHEN (LEDITA .AND. _CTIPOX == "P") SIZE 040,8  OF OPANEL2 PIXEL

@ 010 ,315 SAY   OSAYSEGDTR PROMPT OEMTOANSI(STR0038) SIZE 040,8  OF OPANEL2 PIXEL // "DATA REALIZADA"
//@ 020 ,315 MSGET OSEGDTR    VAR DSEGDTR      WHEN LEDITA       SIZE 040,8  OF OPANEL2 PIXEL
// _CTIPOX SE FOR "P" FORMATO PADRÃO DO MEDIÇÃO, SE FOR "L" EXISTE UMA CUSTOMIZAÇÃO ESPECÍFICA - FRANK 10/09/20
@ 020 ,315 MSGET OSEGDTR  VAR DSEGDTR      WHEN (LEDITA .AND. _CTIPOX == "P") SIZE 040,8  OF OPANEL2 PIXEL

// --> MEDICAO
@ 005 ,370 GROUP OMEDGRP TO 035,480 LABEL STR0041 PIXEL COLOR CLR_HRED OF OPANEL2 // "MEDIÇÃO"

@ 010 ,380 SAY   OSAYMEDDTP PROMPT OEMTOANSI(STR0037 ) SIZE 040,8  OF OPANEL2 PIXEL // "DATA PREVISTA"
//@ 020 ,380 MSGET OMEDDTP    VAR DMEDDTP      WHEN LEDITA       SIZE 042,8  OF OPANEL2 PIXEL
// _CTIPOX SE FOR "P" FORMATO PADRÃO DO MEDIÇÃO, SE FOR "L" EXISTE UMA CUSTOMIZAÇÃO ESPECÍFICA - FRANK 10/09/20
@ 020 ,380 MSGET OMEDDTP  VAR DMEDDTP      WHEN (LEDITA .AND. _CTIPOX == "P") SIZE 040,8  OF OPANEL2 PIXEL

@ 010 ,435 SAY   OSAYMEDDTR PROMPT OEMTOANSI(STR0038) SIZE 040,8  OF OPANEL2 PIXEL // "DATA REALIZADA"
//@ 020 ,435 MSGET OMEDDTR    VAR DMEDDTR      WHEN LEDITA       SIZE 040,8  OF OPANEL2 PIXEL
// _CTIPOX SE FOR "P" FORMATO PADRÃO DO MEDIÇÃO, SE FOR "L" EXISTE UMA CUSTOMIZAÇÃO ESPECÍFICA - FRANK 10/09/20
@ 020 ,435 MSGET OMEDDTR  VAR DMEDDTR      WHEN (LEDITA .AND. _CTIPOX == "P") SIZE 040,8  OF OPANEL2 PIXEL

// --> CLIENTE
@ 051 ,010 SAY   OEMTOANSI(STR0042)                                                                     SIZE 060,8 OF OPANEL2 PIXEL COLOR CLR_HBLUE // "CLIENTE: "
@ 048 ,035 MSGET OAGENTE  VAR CAGENTE      WHEN .F. F3 "SA1" VALID !EMPTY(CAGENTE) .AND. FNOME("1",CAGENTE) SIZE 050,8 OF OPANEL2 PIXEL 
@ 048 ,085 MSGET OLOJA    VAR CLOJA        WHEN .F.                                                         SIZE 030,8 OF OPANEL2 PIXEL
@ 048 ,115 MSGET ONOME    VAR CNOME        WHEN .F.                                                         SIZE 130,8 OF OPANEL2 PIXEL

@ 051 ,300 SAY   OEMTOANSI(STR0043)                                                                    SIZE 060,8 OF OPANEL2 PIXEL COLOR CLR_HBLUE // "FORMA PGTO"
@ 048 ,340 MSGET OCONDPAG  VAR CCONDPAG    WHEN EMPTY(CCONDPAG) VALID !EMPTY(CCONDPAG) .AND. EXISTCPO("SE4") .AND. GETDESCCOND(CCONDPAG) F3 "SE4" SIZE 020,8 OF OPANEL2 PIXEL
@ 048 ,370 MSGET ODESCPAG  VAR CDESCPAG    WHEN .F.                                                         SIZE 100,8 OF OPANEL2 PIXEL

@ 013 ,010 SAY   OEMTOANSI(STR0044)                                                                  SIZE 050,8 OF OPANEL3 PIXEL // "DATA INICIAL"
// FRANK 10/09/20 - INSERIDO A VALIDACAO ITVLDVIG
@ 010 ,050 MSGET ODATAI    VAR DDATAI      WHEN LEDITA VALID ITVLDVIG() .AND. !EMPTY(DDATAI) .AND. IIF(_LVLDDATA,VERDATA("0",DDATAI),.T.) SIZE 050,8  OF OPANEL3 PIXEL

@ 013 ,105 SAY   OEMTOANSI(STR0045)                                                                    SIZE 050,8 OF OPANEL3 PIXEL // "DATA FINAL"
@ 010 ,135 MSGET ODATAF    VAR DDATAF      WHEN LEDITA VALID !EMPTY(DDATAF) .AND. IIF(_LVLDDATA,VERDATA("1",DDATAF),.T.) SIZE 050,8  OF OPANEL3 PIXEL

@ 013 ,400 SAY   OEMTOANSI(STR0046 )                                                                      SIZE 050,8 OF OPANEL3 PIXEL // "C.LUCRO"
@ 010 ,440 MSGET OCC       VAR CCC VALID VAZIO() .OR. FEXISTCC(CCC) F3 "CTT"                                SIZE 050,8 OF OPANEL3 PIXEL 

// --> VALORES DE SERVIÇOS
@ 028 ,010 SAY   OEMTOANSI(STR0047)                                                                      SIZE 050,8 OF OPANEL3 PIXEL // "DESCONTO"
@ 025 ,050 MSGET OVALDESC  VAR NVALDESC    PICTURE("@E 999,999,999.99")         VALID (NVALTOT := (NVALSERV+NVALISS+NVALFRE+NVALSEG+_NVLRHOR+NVALACRE+NVALARRE) - NVALDESC) WHEN LEDITA SIZE 050,8  OF OPANEL3 PIXEL

@ 028 ,105 SAY   OEMTOANSI(STR0048)                                                                     SIZE 050,8 OF OPANEL3 PIXEL // "ACRESCIMO"
@ 025 ,135 MSGET OVALACRE  VAR NVALACRE    PICTURE("@E 999,999,999.99")         VALID (NVALTOT := (NVALSERV+NVALISS+NVALFRE+NVALSEG+_NVLRHOR+NVALACRE+NVALARRE) - NVALDESC) WHEN LEDITA SIZE 050,8  OF OPANEL3 PIXEL   

@ 028 ,195 SAY   OEMTOANSI(STR0049)                                                                SIZE 050,8 OF OPANEL3 PIXEL // "ARREDONDAMENTO"
@ 025 ,240 MSGET OVALACRE  VAR NVALARRE    PICTURE PESQPICT("FPN","FPN_VLARRE") VALID (NVALTOT := (NVALSERV+NVALISS+NVALFRE+NVALSEG+_NVLRHOR+NVALACRE+NVALARRE) - NVALDESC) WHEN LEDITA SIZE 050,8  OF OPANEL3 PIXEL   

// --> SITUACAO
@ 028 ,300 SAY OEMTOANSI(STR0050 )      SIZE 050,8  OF OPANEL3 PIXEL // "SITUAÇÃO"
@ 025 ,340 COMBOBOX OSITUA VAR CSITUA ITEMS ASITUA WHEN .F. VALID PERTENCE("123") SIZE 50,8 PIXEL OF OPANEL3 
   
@ 028 ,400 SAY OEMTOANSI(STR0051 )       SIZE 050,8  OF OPANEL3 PIXEL // "NATUREZA"
@ 025 ,440 MSGET ONATUREZ VAR CNATUREZ VALID FEXISTNAT(CNATUREZ) F3 "SED" SIZE 050,8   OF OPANEL3 PIXEL

@ 043 ,010 SAY OEMTOANSI(STR0052 ) SIZE 050,8  OF OPANEL3 PIXEL // "VALOR SERVIÇOS"
@ 040 ,050 MSGET OVALSERV  VAR NVALSERV     WHEN .F. PICTURE("@E 999,999,999.99") SIZE 050,8  OF OPANEL3 PIXEL
   
@ 043 ,105 SAY OEMTOANSI(STR0053)       SIZE 050,8  OF OPANEL3 PIXEL // "VALOR ISS"
@ 040 ,135 MSGET OVALISS  VAR NVALISS       WHEN .F. PICTURE("@E 999,999,999.99") SIZE 050,8  OF OPANEL3 PIXEL
  
@ 043 ,195 SAY OEMTOANSI(STR0054)     SIZE 050,8  OF OPANEL3 PIXEL // "VALOR TOTAL"
@ 040 ,240 MSGET OVALTOT  VAR NVALTOT       WHEN .F. PICTURE("@E 999,999,999.99") SIZE 050,8  OF OPANEL3 PIXEL

@ 043 ,300 SAY OEMTOANSI(STR0055)  SIZE 050,8  OF OPANEL3 PIXEL // "MIN HORAS MÊS"
@ 040 ,340 MSGET OMINHRSMES  VAR NMINHRSMES WHEN .F. PICTURE("@E 999,999,999.99") SIZE 050,8  OF OPANEL3 PIXEL
  
//@ 043 ,400 SAY OEMTOANSI("VALOR HORÍMETRO" ) SIZE 050,8  OF OPANEL3 PIXEL 
@ 043 ,400 SAY OEMTOANSI(STR0056 ) SIZE 050,8  OF OPANEL3 PIXEL // "VLR.CONTADOR"
@ 040 ,440 MSGET OVHOR VAR _NVLRHOR WHEN .F. PICTURE("@E 999,999,999.99") SIZE 050,8   OF OPANEL3 PIXEL
  
@ 013, 505 CHECKBOX OCHK VAR LENCERRA PROMPT STR0057 WHEN LEDITA SIZE 70, 10 OF OPANEL3 PIXEL          // "ENCERRA A.S."

//@ 073 ,505 SAY "TOTAL DE HORAS"  				 SIZE 050,8  OF OPANEL3 PIXEL
@ 073 ,505 SAY STR0058  				 SIZE 050,8  OF OPANEL3 PIXEL // "TOT.EXCEDENTE"
@ 070 ,545 MSGET OTOTHRREAL  VAR NTOTHRREAL PICTURE "@E 9999.99" WHEN .F. SIZE 050,8  OF OPANEL3 PIXEL            

@ 058 ,010 SAY OEMTOANSI(STR0059 ) SIZE 050,8  OF OPANEL3 PIXEL // "VALOR PEDÁGIO"
@ 055 ,050 MSGET OVALPEDAG  VAR NVALPEDAG     WHEN LEDITA PICTURE("@E 999,999,999.99") VALID FCALCCOMIS() SIZE 050,8  OF OPANEL3 PIXEL

@ 058 ,105 SAY OEMTOANSI(STR0060 ) SIZE 050,8  OF OPANEL3 PIXEL // "FRETE"
@ 055 ,135 MSGET OVALFRE  VAR NVALFRE WHEN .F. PICTURE("@E 999,999,999.99") SIZE 050,8  OF OPANEL3 PIXEL
	
@ 058 ,195 SAY OEMTOANSI(STR0061 ) SIZE 050,8  OF OPANEL3 PIXEL // "SEGURO"
@ 055 ,240 MSGET OVALSEG  VAR NVALSEG WHEN .F. PICTURE("@E 999,999,999.99") SIZE 050,8  OF OPANEL3 PIXEL
	
//@ 058 ,300 SAY OEMTOANSI("HOR. ANTERIOR" ) SIZE 050,8  OF OPANEL3 PIXEL 
@ 058 ,300 SAY OEMTOANSI(STR0062 ) SIZE 050,8  OF OPANEL3 PIXEL // "CONT.ANTERIOR"
@ 055 ,340 MSGET OCONANT  VAR _NCONANT PICTURE PESQPICT("FPN","FPN_CONANT") WHEN If(cSequencia=="001",.T.,.F.) SIZE 050,8  OF OPANEL3 PIXEL

IF SUPERGETMV("MV_LOCX015",.F.,.F.)
	IF _CTIPOX == "P"
		@ 043 ,505 SAY OEMTOANSI(STR0063 ) SIZE 050,8  OF OPANEL3 PIXEL // "O.S. SAÍDA"
		@ 040 ,545 MSGET OOSSAIDA  VAR _COSSAIDA F3 "STJFPN" VALID FVLDOS() .AND. LOCA01801(_COSSAIDA, CAS,"S") SIZE 050,8  OF OPANEL3 PIXEL
	
		@ 058 ,505 SAY OEMTOANSI(STR0064 ) SIZE 050,8  OF OPANEL3 PIXEL // "O.S. ENTRADA"
		@ 055 ,545 MSGET OOSENTRA  VAR _COSENTRA F3 "STJFPN" VALID FVLDOS() .AND. LOCA01801(_COSENTRA, CAS,"E") SIZE 050,8  OF OPANEL3 PIXEL
	ELSE
		@ 043 ,505 SAY OEMTOANSI(STR0063 ) SIZE 050,8  OF OPANEL3 PIXEL // "O.S. SAÍDA"
		@ 040 ,545 MSGET OOSSAIDA  VAR _COSSAIDA F3 "ITSTJS" VALID LOCA01801(_COSSAIDA, CAS,"S") SIZE 050,8  OF OPANEL3 PIXEL
	
		@ 058 ,505 SAY OEMTOANSI(STR0064 ) SIZE 050,8  OF OPANEL3 PIXEL // "O.S. ENTRADA"
		@ 055 ,545 MSGET OOSENTRA  VAR _COSENTRA F3 "ITSTJE" VALID LOCA01801(_COSENTRA, CAS,"E") SIZE 050,8  OF OPANEL3 PIXEL	
	ENDIF

	//@ 058 ,400 SAY OEMTOANSI("HORÍMETRO ATUAL" ) SIZE 050,8  OF OPANEL3 PIXEL 
	@ 058 ,400 SAY OEMTOANSI(STR0065 ) SIZE 050,8  OF OPANEL3 PIXEL // "CONT.ATUAL"
	@ 055 ,440 MSGET OPOSCONT  VAR _NPOSCONT PICTURE PESQPICT("FPN","FPN_POSCON") VALID FVLDOS() .AND. _NPOSCONT>=_NCONANT SIZE 050,8  OF OPANEL3 PIXEL
ELSE
	//@ 058 ,400 SAY OEMTOANSI("HORÍMETRO ATUAL" ) SIZE 050,8  OF OPANEL3 PIXEL 
	@ 058 ,400 SAY OEMTOANSI(STR0065 ) SIZE 050,8  OF OPANEL3 PIXEL // "CONT.ATUAL"
	@ 055 ,440 MSGET OPOSCONT  VAR _NPOSCONT PICTURE PESQPICT("FPN","FPN_POSCON") VALID IIF(_NPOSCONT>=_NCONANT,(_NVLRHOR:=CALCHOR(),(NVALTOT:= ( NVALSERV+NVALISS + NVALFRE + NVALSEG + _NVLRHOR + NVALACRE + NVALARRE) - NVALDESC)),(MSGALERT("O HORÍMETRO NÃO PODE SER MAIOR QUE O HORÍMETRO ANTERIOR!"),.F.)) SIZE 050,8  OF OPANEL3 PIXEL
ENDIF

@ 073 ,010 SAY OEMTOANSI(STR0066 )       SIZE 050,8  OF OPANEL3 PIXEL // "FRANQUIA"
@ 070 ,050 MSGET _OFRAQ VAR _NFRAQ  PICTURE("9999999.99")  SIZE 050,8  OF OPANEL3 PIXEL WHEN .F.

@ 073 ,105 SAY OEMTOANSI(STR0067 )       SIZE 050,8  OF OPANEL3 PIXEL // "VLR.EXTRA"
@ 070 ,135 MSGET _OADIC VAR _NADIC  PICTURE("@E 999,999,999.99")  SIZE 050,8  OF OPANEL3 PIXEL WHEN .F.

@ 013, 195 SAY   OEMTOANSI(STR0068)                SIZE 050,8  OF OPANEL3 PIXEL // "USUÁRIO INCLUI"
@ 010, 240 MSGET OUSRINC VAR CUSRINC WHEN .F. PICTURE("@!") SIZE 050,8  OF OPANEL3 PIXEL    

@ 013, 300 SAY   OEMTOANSI(STR0069)                SIZE 050,8  OF OPANEL3 PIXEL // "USUÁRIO ALTERA"
@ 010, 340 MSGET OUSRALT VAR CUSRALT WHEN .F. PICTURE("@!") SIZE 050,8  OF OPANEL3 PIXEL    

CALIAS    := "FPP"
CCHAVE    := XFILIAL(CALIAS)+CCODMED+CTIPOMED
CCONDICAO := 'FPP_FILIAL+FPP_COD+FPP_TPMEDI=="'+CCHAVE+'"'
NINDICE   := 2  							// FPP_FILIAL+FPP_COD+FPP_ITEM+DTOS(FPP_DTMEDI)
CFILTRO   := CCONDICAO

AHEADER   := FHEADER(ACAMPOSSIM)
ACOLSZLF  := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)

OGETZLM := MSNEWGETDADOS():NEW(10, 10, 100, 100, NSTYLE, "ALLWAYSTRUE", "ALLWAYSTRUE",'+FPP_ITEM' ,,,,, MAXGETDAD,, OPANEL4, AHEADER, ACOLSZLF )
OGETZLM:OBROWSE:ALIGN   := CONTROL_ALIGN_ALLCLIENT
OGETZLM:OBROWSE:BCHANGE := {||LOCA04810()} 

OGETZLM:OBROWSE:BDELETE := {||LOCA04812(@NVALSERV,@NVALISS)} 
	
NPOSORD := GDFIELDPOS("FPP_ORDEM",OGETZLM:AHEADER)
ASORT(OGETZLM:ACOLS,,,{|X,Y| X[NPOSORD]+DTOS(X[GDFIELDPOS("FPP_DTMEDI",OGETZLM:AHEADER)])+X[GDFIELDPOS("FPP_ITEM",OGETZLM:AHEADER)] < Y[NPOSORD]+DTOS(Y[GDFIELDPOS("FPP_DTMEDI",OGETZLM:AHEADER)])+Y[GDFIELDPOS("FPP_ITEM",OGETZLM:AHEADER)] })
OGETZLM:OBROWSE:REFRESH()

OGETZLM:CFIELDOK :=  "EVAL(BALTER, READVAR(),OGETZLM)"
ASORT( ACOLS,,, {|X,Y| DTOS(X[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})])+X[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"})] < DTOS(Y[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})])+Y[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"})]} )

IF !(NOPC == 3)
	NTOTHRREAL := 0
	AEVAL(OGETZLM:ACOLS,{|X,L| IF( !GDDELETED(L,OGETZLM:AHEADER,OGETZLM:ACOLS),NTOTHRREAL += GDFIELDGET("FPP_QTDHR",L,.F.,OGETZLM:AHEADER,OGETZLM:ACOLS) ,)}) 
ENDIF

IF EXISTBLOCK("LC035BRW") 					// PONTO DE ENTRADA PARA ALTERAR AS VARIÁVEIS ANTES DA TELA SER CARREGADA;
	AITENS := EXECBLOCK("LC035BRW",.T.,.T.)
	IF VALTYPE(AITENS) == "A"
		IF AITENS[1]
			RETURN
		ELSE
			IF POPC == 4
				OGETZLM:ACOLS[1,GDFIELDPOS("FPP_VLRTOT",OGETZLM:AHEADER)] := AITENS[6]
				OGETZLM:OBROWSE:REFRESH()
				ODATAF:REFRESH() 			// DDATAF
				ODATAI:REFRESH() 			// DDATAI
				OVALSERV:REFRESH() 			// NVALSERV
				OVALTOT:REFRESH() 			// NVALTOT
				DDTPRRT := AITENS[2]
			ENDIF
		ENDIF
	ENDIF
ENDIF

OUSRINC:REFRESH()
OUSRALT:REFRESH()

DBSELECTAREA("FPN")

IF EXISTBLOCK("LC035TEL")					// PONTO DE ENTRADA EXECUTADO ANTES DE ABRIR A TELA DA MEDIÇÃO.
	EXECBLOCK("LC035TEL",.F.,.F.,NIL)
ENDIF

//ACTIVATE MSDIALOG OTELA CENTERED ON INIT ENCHOICEBAR(OTELA,{||IF(FSALVAR(OTELA),FSAIR(OTELA),)},{||(ROLLBACKSX8(),FSAIR(OTELA))}) 
//ACTIVATE MSDIALOG OTELA CENTERED ON INIT ENCHOICEBAR(OTELA,{||(CONFIRMSX8(),LRET := FSALVAR(OTELA),FSAIR(OTELA,LRET))},{||(ROLLBACKSX8(),FSAIR(OTELA))},,ABNTENCHOI)
ACTIVATE MSDIALOG OTELA CENTERED ON INIT ENCHOICEBAR(OTELA,{||(LRET := FSALVAR(OTELA),FSAIR(OTELA,LRET))},{||(FSAIR(OTELA))},,ABNTENCHOI)

SET KEY VK_F11 TO 

RETURN



// ======================================================================= \\
STATIC FUNCTION FCONTSEQ(CAS)
// ======================================================================= \\
// --> CONTA A QUANTIDADE DE MEDIÇOES PARA A MESMA AS.
LOCAL AAREA		:= GETAREA()
LOCAL CQUERY
LOCAL CALIASTRB := GETNEXTALIAS()

IF LINCLUI
	CQUERY := " SELECT FPN_MEDSEQ , FPN_DTFIM , FPN_SITUAC , FPN_DESDTP "
	CQUERY += " FROM "+RETSQLNAME("FPN")
	CQUERY += " WHERE  FPN_FILIAL='"+XFILIAL('FPN')+"'"
	CQUERY += "   AND  FPN_AS='"+CAS+"' AND D_E_L_E_T_=''"
	CQUERY += " ORDER BY R_E_C_N_O_ DESC"
	DBUSEAREA(.T. , "TOPCONN" , TCGENQRY(,,CQUERY) , CALIASTRB , .F. , .T.) 

	WHILE ! EOF()
		IF (CALIASTRB)->FPN_SITUAC != "6" 
			CSEQUENCIA := SOMA1( IIF(EMPTY((CALIASTRB)->FPN_MEDSEQ),"001",(CALIASTRB)->FPN_MEDSEQ) )
			// CONDIÇÃO FEITA PARA INCLUIR MEDIÇÕES ADICIONAIS.
			IF (CALIASTRB)->FPN_DTFIM == (CALIASTRB)->FPN_DESDTP
				DDATAI := IIF(EMPTY((CALIASTRB)->FPN_DTFIM), CTOD("  /  /  "), STOD((CALIASTRB)->FPN_DTFIM))				
			ELSE
				DDATAI := IIF(EMPTY((CALIASTRB)->FPN_DTFIM), CTOD("  /  /  "), STOD((CALIASTRB)->FPN_DTFIM)+1)
			ENDIF
			EXIT
		ENDIF
		DBSKIP()
	ENDDO 
	DBCLOSEAREA() 

	RESTAREA(AAREA)

	OSEQUENCIA:REFRESH()
	ODATAI:REFRESH()
ENDIF

RETURN .T.



// ======================================================================= \\
STATIC FUNCTION FHEADER(ACAMPOSSIM)
// ======================================================================= \\

LOCAL NPOS,ATABAUX,AHEADER:={}

DBSELECTAREA("SX3")
DBSETORDER(2) 						// X3_CAMPO
FOR NPOS:=1 TO LEN(ACAMPOSSIM)
	IF (LOCXCONV(1))->(DBSEEK(ALLTRIM(ACAMPOSSIM[NPOS,1])))
		ATABAUX:={}
		AADD(ATABAUX,TRIM(X3TITULO()))
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")        )   
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_PICTURE")      )   
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_TAMANHO")      )   
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_DECIMAL")      )  
		AADD(ATABAUX,IIF(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") =  "FPP_DTMEDI",ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_VALID")) + IIF(EMPTY(ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_VALID"))),""," .AND. ") + "LOCA04807('" + ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")) + "')",GetSx3Cache(&(LOCXCONV(2)),"X3_VALID"))) 	// X3_VALID )    
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_USADO")        )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_TIPO")         )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_F3")           )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CONTEXT")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CBOX")         )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_RELACAO")      )  
 		AADD(ATABAUX,IIF(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") <> "FPP_DTMEDI",ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_WHEN")) + IIF(EMPTY(ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_WHEN"))  ),""," .AND. ") + "LOCA04807('" + ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")) + "')",GetSx3Cache(&(LOCXCONV(2)),"X3_WHEN")) ) 	// X3_WHEN  )    
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VISUAL")       )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VLDUSER")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_PICTVAR")      )   
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_OBRIGAT")      )  
		AADD(AHEADER,ATABAUX         )
	ENDIF
NEXT

DBSETORDER(1)  						// X3_ARQUIVO + X3_ORDEM 

RETURN(ACLONE(AHEADER))



// ======================================================================= \\
STATIC FUNCTION FCOLS(AHEADER, CALIAS, NINDICE, CCHAVE, CCONDICAO, CFILTRO, LSHOWZBX) 
// ======================================================================= \\

LOCAL NVERZBX , AVERZBX , AERROSZBX := {} 
LOCAL NPOSCOLS
LOCAL NPOS , ACOLS0 , ACOLS := {} 
LOCAL LTEMREGS := .F.

DEFAULT LSHOWZBX := .T.

(CALIAS)->(DBSETORDER(NINDICE))
(CALIAS)->(DBSEEK(CCHAVE,.T.))           
WHILE (CALIAS)->(!EOF() .AND. &CCONDICAO)
	IF !(CALIAS)->(&CFILTRO)
		(CALIAS)->(DBSKIP())
        LOOP
	ENDIF
	ACOLS0:={}
	FOR NPOS:=1 TO LEN(AHEADER)
		IF !AHEADER[NPOS,10]=="V" 	// X3_CONTEXT
			(CALIAS)->(AADD(ACOLS0,FIELDGET(FIELDPOS(AHEADER[NPOS,2]))))
		ELSE
			(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
		ENDIF
	NEXT
	AADD(ACOLS0,.F.  )  //DELETED     
	AADD(ACOLS,ACOLS0)

	LTEMREGS := .T.

	(CALIAS)->(DBSKIP())        
ENDDO 

IF CPROJETO != FP0->FP0_PROJET		// AS VEZES DESPOSICIONA
	FP0->( DBSETORDER(1) )
	FP0->( DBSEEK( XFILIAL("FP0") + CPROJETO ) )
ENDIF

IF LVERZBX							// .AND. DTOS(ZA0_DATINC)>="20150819")  	// HABILITA CONTROLE DE MINUTA
	IF ! LTEMREGS					// EMPTY(ACOLS)
		IF (NOPC==3 .OR. UPPER(ALLTRIM(PROCNAME(1)))=="VERDATA" ) .AND. !EMPTY(DDATAI) .AND. !EMPTY(DDATAF) //NOPC==3 .AND. !EMPTY(DDATAI) .AND. !EMPTY(DDATAF)
		 //	VERZBX(CROTINA , CFROTAD , CFROTAA , DDATAD , DDATAA , CAS , CHINI , CHFIM , CEXCEPT)
			AVERZBX := LOCA00514("LOCA048",""      ,""     ,DDATAI,DDATAF,CAS)  // VERIFICA SE EXISTE ZBX
			IF LEN(AVERZBX) > 0
				AERROSZBX := {}
				FOR NVERZBX := 1 TO LEN(AVERZBX)  				// {FPF_RECNO,FPF_DATA,FPF_AS,FPF_MINUTA,FPF_STATUS}
					FPF->( DBGOTO(AVERZBX[NVERZBX,1]) )  		// POSICIONA NO ZBX
				//	QRYVER->(AADD(ARET,{FPF_RECNO,FPF_DATA,FPF_AS,FPF_MINUTA,FPF_STATUS, FPF_PROJET, FPF_HORAI, FPF_HORAF}))
					IF AVERZBX[NVERZBX,5] != "3"  				// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
						AADD( AERROSZBX, {FPF->FPF_FROTA, CAS, DDATAI, DDATAF ,AVERZBX[NVERZBX,2],AVERZBX[NVERZBX,4],AVERZBX[NVERZBX,5],"MINUTA COM STATUS DIFERENTE DE 3=BAIXADA"})
					ELSE
						IF FPF->(!EMPTY(FPF_NROMED))  			// NÚMERO DA MEDIÇÃO
							AADD( AERROSZBX, {FPF->FPF_FROTA,CAS,DDATAI,DDATAF,AVERZBX[NVERZBX,2],AVERZBX[NVERZBX,4],AVERZBX[NVERZBX,5],"MINUTA MEDIDA","MINUTA MEDIDA"})
						ELSE
							AADD( AERROSZBX, {FPF->FPF_FROTA,CAS,DDATAI,DDATAF,AVERZBX[NVERZBX,2],AVERZBX[NVERZBX,4],AVERZBX[NVERZBX,5],SPACE(01),SPACE(01)})
						ENDIF
					ENDIF
				NEXT

				IF LSHOWZBX .AND. LEN(AERROSZBX) > 0
					LOCA00516(AERROSZBX,STR0070) 	// "INCONSISTÊNCIAS"
				ENDIF
				
			 //	_NOK := 1

				FOR NPOSCOLS := 1 TO LEN(AVERZBX)
                    _NOK := IIF(LEN(ACOLS) > 0, LEN(ACOLS) + 1, 1 )

					IF AVERZBX[NPOSCOLS,5] != "3"  				// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
						LOOP
					ENDIF
					
					FPF->(DBGOTO(AVERZBX[NPOSCOLS,1]))  //POSICIONA NO ZBX

					IF FPF->(!EMPTY(FPF_NROMED)) .AND. FPF->FPF_NROMED <> CCODMED  //NÚMERO DA MEDIÇÃO
						LOOP
					ENDIF

					ACOLS0:={}
					FOR NPOS:=1 TO LEN(AHEADER)
						(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
					NEXT
				 //	ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"  })] := STRZERO(NPOSCOLS,LEN(ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"  })]))
				 //	ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM" })] := STRZERO(1       ,LEN(ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM" })]))
				 //	ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})] := DDATAI+(NPOSCOLS-1)
					DO CASE
                    CASE FP0->FP0_TIPOSE == "E"
						FP4->(DBSETORDER(2))
						IF FP4->(DBSEEK(XFILIAL("FP4")+CPROJETO+COBRA+CAS+CVIAGEM))  						// POSICIONA NO ZA5
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"  })] := STRZERO(_NOK,LEN(ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"  })]))
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM" })] := STRZERO(_NOK,LEN(ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM" })]))
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})] := FPF->FPF_DATA 		// DDATAI+(NPOSCOLS-1)
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_FROTA" })] := FPF->FPF_FROTA
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DESCEQ"})] := POSICIONE("ST9",1,XFILIAL("ST9")+FPF->FPF_FROTA,"T9_NOME")
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR"})] := FP4->FP4_VRHOR
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_BASE"  })] := FP4->FP4_TIPOCA
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERSEG"})] := FP4->FP4_PERSEG
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLBSEG"})] := FP4->FP4_VRCARG
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_TIPO"  })] := FP4->FP4_TPSEGU
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})] := FP4->FP4_VRSEGU
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_TPISS" })] := FP4->FP4_TPISS
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERISS"})] := FP4->FP4_PERISS
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMO" })] := FP4->FP4_PERMAO
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOTM" })] := FP4->FP4_VLMOBR 	// PARA JA TRAZER O VALOR DA MAO DE OBRA						  
							IF NPOSCOLS <2 .AND. LSHOWZBX = .T.
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB"})]:=FP4->FP4_VRMOB
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES"})]:=FP4->FP4_VRDES  
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})]:=FP4->FP4_VRSEGU
		                        ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALISS"})]:=0//FP4->FP4_VRISS
							ELSEIF NPOSCOLS >=2 .AND. LSHOWZBX = .T.
		                        ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB"})]:=0
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES"})]:=0
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})]:=0  
							ELSEIF NPOSCOLS <2 .AND. LSHOWZBX = .F.
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB"})]:=FP4->FP4_VRMOB
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES"})]:=FP4->FP4_VRDES  
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})]:=FP4->FP4_VRSEGU
							ELSEIF NPOSCOLS >=2 .AND. LSHOWZBX = .F.
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})]:=0
							ENDIF
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_TRSPES"})]:=FP4->FP4_VRPESO 
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_MINDIA"})]:=FP4->FP4_MINDIA
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORAI" })]:=FPF->FPF_HREALI		// HORA INICIAL
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORAF" })]:=FPF->FPF_HREALF		// HORA FINAL
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HRPARA"})]:=FPF->FPF_HRPARA
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_MOTIVO"})]:=FPF->FPF_MOTIVO
	
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_MINUTA"})]:=FPF->FPF_MINUTA		// NUMERO DA MINUTA
	
							NHRTOT := FPF->(LOCA04802(FPF_HREALI,FPF_HREALF))
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORTOT"})]:= NHRTOT				// NUM. HORAS TRABALHADAS
	
							CHRTOT  := FPF->( LOCA04802(FPF_HREALI, FPF_HREALF) )
							CALMOCO := FPF->( LOCA04802(FPF_BXALMI, FPF_BXALMF) )
							CJANTAR := FPF->( LOCA04802(FPF_BXJANI, FPF_BXJANF) )
							NHRTOT  := FPF->( FHRREAL(CHRTOT , CALMOCO , CJANTAR , FPF->FPF_HRPARA) )

							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDHR" })]:= NHRTOT				// NUM. HORAS REAIS TRABALHADAS
							
							IF NHRTOT < FP4->FP4_MINDIA		// CASO AS HORAS TRABALHADAS SEJA MENOR, ASSUMIMOS O MINIMO DE HORAS DIA
								NHRTOT := FP4->FP4_MINDIA
							ENDIF
	                                                   
							NHRTOT  *= FP4->FP4_VRHOR
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOHR"})]:= NHRTOT				// VALOR MEDIÇÃO DAS HORAS
	
							NCALC1  :=  NHRTOT + FP4->FP4_VRMOB + FP4->FP4_VRDES + FP4->FP4_VRPESO + FP4->FP4_VRSEGU
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT"})]:= NCALC1				// VALOR MEDIÇÃO DAS HORAS
							_NOK++
						ENDIF
					CASE FP0->FP0_TIPOSE == "L"
						FPA->(DBSETORDER(2))
						IF FPA->(DBSEEK(XFILIAL("FPA")+CPROJETO+COBRA+CAS+CVIAGEM))  						// POSICIONA NO ZAG
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"  })] := STRZERO(_NOK,LEN(ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"  })]))
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM" })] := STRZERO(_NOK,LEN(ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM" })]))
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})] := FPF->FPF_DATA 		// DDATAI+(NPOSCOLS-1)
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_FROTA" })] := FPF->FPF_FROTA
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DESCEQ"})] := POSICIONE("ST9",1,XFILIAL("ST9")+FPF->FPF_FROTA,"T9_NOME")
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR"})] := FPA->FPA_VRHOR
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_BASE"  })] := FPA->FPA_TIPOCA
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERSEG"})] := FPA->FPA_PERSEG
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLBSEG"})] := FPA->FPA_VRCARG
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_TIPO"  })] := FPA->FPA_TPSEGU
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})] := FPA->FPA_VRSEGU
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_TPISS" })] := FPA->FPA_TPISS
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERISS"})] := FPA->FPA_PERISS
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMO" })] := FPA->FPA_PERMAO
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOTM" })] := FPA->FPA_VLMOBR 	// PARA TRAZER O VALOR DA MAO DE OBRA						  
							IF NPOSCOLS <2 .AND. LSHOWZBX = .T.
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB"})]:=FPA->FPA_VRMOB
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES"})]:=FPA->FPA_VRDES  
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})]:=FPA->FPA_VRSEGU
		                        ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALISS"})]:=0 					// FP4->FP4_VRISS
							ELSEIF NPOSCOLS >=2 .AND. LSHOWZBX = .T.
		                        ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB"})]:=0
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES"})]:=0
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})]:=0  
							ELSEIF NPOSCOLS <2 .AND. LSHOWZBX = .F.
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB"})]:=FPA->FPA_VRMOB
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES"})]:=FPA->FPA_VRDES  
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})]:=FPA->FPA_VRSEGU
							ELSEIF NPOSCOLS >=2 .AND. LSHOWZBX = .F.
								ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})]:=0
							ENDIF
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_TRSPES"})]:=FPA->FPA_VRPESO 
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_MINDIA"})]:=FPA->FPA_MINDIA
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORAI" })]:=FPF->FPF_HREALI		// HORA INICIAL
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORAF" })]:=FPF->FPF_HREALF		// HORA FINAL
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HRPARA"})]:=FPF->FPF_HRPARA
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_MOTIVO"})]:=FPF->FPF_MOTIVO
	
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_MINUTA"})]:=FPF->FPF_MINUTA		// NUMERO DA MINUTA
	
							NHRTOT := FPF->(LOCA04802(FPF_HREALI,FPF_HREALF))
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORTOT"})]:= NHRTOT				// NUM. HORAS TRABALHADAS
	
							CHRTOT  := FPF->( LOCA04802(FPF_HREALI, FPF_HREALF) )
							CALMOCO := FPF->( LOCA04802(FPF_BXALMI, FPF_BXALMF) )
							CJANTAR := FPF->( LOCA04802(FPF_BXJANI, FPF_BXJANF) )
							NHRTOT  := FPF->( FHRREAL(CHRTOT , CALMOCO , CJANTAR , FPF->FPF_HRPARA) )

							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDHR" })]:= NHRTOT				// NUM. HORAS REAIS TRABALHADAS
							
							IF NHRTOT < FPA->FPA_MINDIA		// CASO AS HORAS TRABALHADAS SEJA MENOR, ASSUMIMOS O MINIMO DE HORAS DIA
								NHRTOT := FPA->FPA_MINDIA
							ENDIF
	                                                   
							NHRTOT  *= FPA->FPA_VRHOR
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOHR"})]:= NHRTOT				// VALOR MEDIÇÃO DAS HORAS
	
							NCALC1  :=  NHRTOT + FPA->FPA_VRMOB + FPA->FPA_VRDES + FPA->FPA_VRPESO + FPA->FPA_VRSEGU
							ACOLS0[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT"})]:= NCALC1				// VALOR MEDIÇÃO DAS HORAS
							_NOK++
						ENDIF
					ENDCASE

					AADD(ACOLS0,.F.  )  //DELETED
					AADD(ACOLS,ACOLS0)

					IF NPOSCOLS>=600
						MSGALERT(STR0071+STRZERO(NPOSCOLS,3)+STR0072 , STR0020) //"ESTOURO DA TABELA: "###" DIAS. PROCESSAMENTO INTERROMPIDO."###"GPO - LOCT035.PRW"
					ENDIF
				NEXT

				IF EXISTBLOCK("LC035COL")	// PONTO DE ENTRADA PARA ALTERAR O ACOLS.
					ACOLS := EXECBLOCK("LC035COL",.T.,.T.,{AHEADER,ACOLS})
				ENDIF 

			ENDIF

		ENDIF
	ENDIF
ENDIF

IF EMPTY(ACOLS)
	ACOLS0:={}
	FOR NPOS:=1 TO LEN(AHEADER)
		(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
	NEXT
	AADD(ACOLS0,.F.  )  //DELETED
	ACOLS0[1] := "001"
	ACOLS0[2] := "001"
	AADD(ACOLS,ACOLS0)
ELSEIF ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"}) > 0 .AND. ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"}) > 0
	ASORT( ACOLS , , , {|X,Y| DTOS(X[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})])+X[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"})] < DTOS(Y[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})])+Y[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"})]} )
ENDIF

RETURN ACLONE(ACOLS) 



// ======================================================================= \\
STATIC FUNCTION FSALVAR(ODLG)
// ======================================================================= \\

LOCAL LRET   := .T.
LOCAL NTOTAL := 0

IF !(LEDITA .OR. LMANUT)
	RETURN .T.
ENDIF


IF NMINHRSMES > 0
	AEVAL(OGETZLM:ACOLS,{|X,L| IF( !GDDELETED(L,OGETZLM:AHEADER,OGETZLM:ACOLS),NTOTAL += GDFIELDGET("FPP_QTDHR",L,.F.,OGETZLM:AHEADER,OGETZLM:ACOLS) ,)})
	IF NTOTAL < NMINHRSMES
		IF !MSGYESNO(STR0073 + CRLF +; //"O TOTAL DE HORAS LANÇADAS É MENOR QUE O  MINIMO DE HORAS POR MÊS DESEJA CONFIRMAR?"
				 	 STR0074+ CVALTOCHAR(NMINHRSMES)	+ CRLF +; // "MINIMO DE HORAS POR MÊS : "
				 	 STR0075+ CVALTOCHAR(NTOTAL) , STR0020) // "TOTAL  DE HORAS LANÇADAS: "###"GPO - LOCT035.PRW"
			RETURN .F.
		ENDIF
	ENDIF
ENDIF

IF EXISTBLOCK("LC035TOK") 					// PONTO DE ENTRADA PARA VALIDAR A MANUTENÇÃO DA MEDIÇÃO.
	LRET := EXECBLOCK("LC035TOK",.T.,.T.,{ODLG})
	IF !LRET
		RETURN .F.
	ENDIF
ENDIF

IF LRET
	PROCESSA({|| LRET := FSALVAR001() },STR0076)
ENDIF

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION FSAIR(ODLG , LEND)
// ======================================================================= \\

DEFAULT LEND := .T.

IF LEND
	ODLG:END() 
ENDIF

RETURN                    



// ======================================================================= \\
STATIC FUNCTION FSALVAR001() 
// ======================================================================= \\

LOCAL LRET  := .T.
LOCAL AAREA	:= FPN->(GETAREA())

// RETIRA O FILTRO DO BROWSE
ENDFILBRW( "FPN", AINDEX )

IF EXISTBLOCK("LC035GRV") 					// PONTO DE ENTRADA PARA ALTERAR OS DADOS ANTES DA GRAVAÇÃO
	AROTINA := EXECBLOCK("LC035GRV",.T.,.T.)
ENDIF

IF FSALVARZLF(.T.)
	FSALVARZLM("FPP" , OGETZLM:AHEADER , OGETZLM:ACOLS , .T.) 
	IF EXISTBLOCK("LC35PGRV") 				// PONTO DE ENTRADA PARA APÓS A DELEÇÃO DE UMA LINHA ZLM
		EXECBLOCK("LC35PGRV",.T.,.T.,{ CAS })
	ENDIF	
ELSE
	LRET:= .F.
ENDIF	

RESTAREA(AAREA)

RETURN LRET 



// ======================================================================= \\
STATIC FUNCTION FSALVARZLF(LFINAL)
// ======================================================================= \\

LOCAL CTIPO := IIF(LCOMP , "C" , "N") 
LOCAL AAREA := FPN->(GETAREA())

DEFAULT LFINAL := .F.

IF LFINAL
	CTIPO := "F"
ENDIF

DBSELECTAREA("FPN")
FPN->(DBSETORDER(4))
IF FPN->(DBSEEK(XFILIAL("FPN")+CCODMED+CTIPO)) 
	RECLOCK("FPN",.F.)
ELSE 
	RECLOCK("FPN",.T.)	
	CONFIRMSX8()
	IF	CTIPO == "N"
		FPN->FPN_BLQDAT := SUPERGETMV("MV_LOCX263",.T.,"",XFILIAL("FPN"))
	ENDIF
ENDIF	                    

FCALCCOMIS() 			// CHAMA FUNÇÃO DO DESCONTO COMISSAO

FPN->FPN_FILIAL := XFILIAL("FPN")
FPN->FPN_COD    := CCODMED
FPN->FPN_AS     := CAS
FPN->FPN_PROJET := CPROJETO
FPN->FPN_OBRA   := COBRA
FPN->FPN_VIAGEM := CVIAGEM
FPN->FPN_DTINIC := DDATAI
FPN->FPN_DTFIM  := DDATAF
FPN->FPN_MOBDTP := DMOBDTP
FPN->FPN_MOBDTR := DMOBDTR
FPN->FPN_DESDTP := DDESDTP
FPN->FPN_DESDTR := DDESDTR
FPN->FPN_DTSEGP := DSEGDTP
FPN->FPN_DTSEGR := DSEGDTR
FPN->FPN_DTMEDP := DMEDDTP
FPN->FPN_DTMEDR := DMEDDTR
FPN->FPN_CLIENT := CAGENTE
FPN->FPN_LOJA   := CLOJA
FPN->FPN_CONDPA := CCONDPAG
FPN->FPN_NATUR	:= CNATUREZ
FPN->FPN_VLRHOR := _NVLRHOR
FPN->FPN_CC		:= CCC
FPN->FPN_VALSER := NVALSERV
FPN->FPN_VLAISS := NVALISS
FPN->FPN_VLRMOB	:= NVALFRE
FPN->FPN_VALSEG	:= NVALSEG
FPN->FPN_VLACRE := NVALACRE
FPN->FPN_VLARRE := NVALARRE
FPN->FPN_VLDESC := NVALDESC
FPN->FPN_VALTOT	:= NVALTOT
FPN->FPN_VALPRV	:= NVALTOTPRV
FPN->FPN_SITUAC := CSITUA
FPN->FPN_OBS	:= COBSG
FPN->FPN_OBSDES	:= COBSD
FPN->FPN_OBSACR := COBSA
FPN->FPN_ENCEAS	:= IIF(LENCERRA , "2" , "1") 
FPN->FPN_TIPO	:= CTIPO
FPN->FPN_MINMES	:= NMINHRSMES
FPN->FPN_VRPEDA := NVALPEDAG
FPN->FPN_OSSAID := _COSSAIDA
FPN->FPN_OSENTR := _COSENTRA
FPN->FPN_POSCON := _NPOSCONT
FPN->FPN_CONANT := _NCONANT
FPN->FPN_DESCOM := 0 				//NDESCOMIS
IF CTIPO == "N"
	FPN->FPN_BLQDAT	:= IF(EMPTY(FPN->FPN_BLQDAT), SUPERGETMV("MV_LOCX263",.T.,"",XFILIAL("FPN")),FPN->FPN_BLQDAT)
ENDIF

// GRAVAR O NUMERO DO PEDIDO INFORMADO NO CONTRATO.
//FPN->FPN_NUMPV := POSICIONE("FP0",1,XFILIAL("FP0")+FPN->FPN_PROJET,"ZA0_NUMPED")
//FPN->FPN_FILPV := POSICIONE("FP0",1,XFILIAL("FP0")+FPN->FPN_PROJET,"ZA0_FILPED") //CAROLINE PARA PREENCHER A FILIAL DO PEDIDO DE VENDA

FPN->FPN_MEDSEQ := CSEQUENCIA

FPN->FPN_XOS := _COS

IF EXISTBLOCK("LC035ZLF") //PONTO DE ENTRADA PARA INCLUSÃO DE BOTÕES NO AÇÕES RELACIONADAS
   EXECBLOCK("LC035ZLF",.T.,.T.,{FQ5->FQ5_AS})
ENDIF

FPN->(MSUNLOCK())

DBSELECTAREA("FQ5")
RECLOCK("FQ5",.F.)
FQ5->FQ5_ZLFTIP := CSITUA
IF LENCERRA
	FQ5->FQ5_ENCERR:= "2"
ENDIF
FQ5->(MSUNLOCK())

RESTAREA(AAREA)

RETURN .T.
	


// ======================================================================= \\
STATIC FUNCTION FSALVARZLM(CALIAS , AHEADER , ACOLS , LFINAL) 
// ======================================================================= \\

LOCAL NPOS 
LOCAL ACOLSAUX	:= {}
LOCAL CTIPO	    := IIF(LCOMP,"C","N")
LOCAL _NPOS     := 0 
Local _LC35PZLM := EXISTBLOCK("LC35PZLM")

DEFAULT LFINAL	:= .F.

IF LVERZBX .AND. FP0->(FP0_TIPOSE=="G" .AND. DTOS(FP0_DATINC)>="20150819")  //HABILITA CONTROLE DE MINUTA
	FPF->(DBSETORDER(1))  		// FPF_FILIAL+FPF_FROTA+DTOS(FPF_DATA)+FPF_MINUTA
ENDIF

IF LFINAL
	CTIPO := "F"
ENDIF

DBSELECTAREA(CALIAS)  
DBSETORDER(4)  

IF CTIPO == "C"
	AEVAL(ACOLS, {|U,NX| IIF( !GDFIELDGET("FPP_ALTER",NX,.F.,AHEADER,ACOLS) == "S", NIL, AADD(ACOLSAUX,ACLONE(ACOLS[NX])) ) })
	ACOLS := ACLONE(ACOLSAUX)
ENDIF

FOR NPOS:=1 TO LEN(ACOLS)
	IF ! ACOLS[NPOS,LEN(AHEADER)+1]	// NÃO ESTÁ DELETADO
		IF FPP->(DBSEEK(XFILIAL("FPP")+CCODMED+CTIPO+DTOS(GDFIELDGET("FPP_DTMEDI",NPOS,.F.,AHEADER,ACOLS))+GDFIELDGET("FPP_ITEM",NPOS,.F.,AHEADER,ACOLS)  ))
			RECLOCK(CALIAS,.F.)
		ELSE
			RECLOCK(CALIAS,.T.)
		ENDIF          
		FGRAVATUDO(CALIAS,AHEADER,ACOLS[NPOS])  //GRAVA TODOS OS CAMPOS DO ACOLS
		FOR _NPOS:=1 TO LEN(AHEADER)
			CCAMPO              := AHEADER[_NPOS,2]
			(CALIAS)->(&CCAMPO) := ACOLS[NPOS,_NPOS]
		NEXT _NPOS
		(CALIAS)->FPP_FILIAL	:= XFILIAL("FPP")
		(CALIAS)->FPP_COD		:= CCODMED  
		(CALIAS)->FPP_TPMEDI	:= CTIPO
		(CALIAS)->FPP_DTDIGI	:= DATE()	// GRAVA A DATA EM QUE FOI FEITA A ATUALIZAÇÃO 
		FPP->(MSUNLOCK())
		IF LVERZBX .AND. FP0->( (FP0_TIPOSE=="G" .OR. FP0_TIPOSE=="E") .AND. DTOS(FP0_DATINC)>="20150819")  //HABILITA CONTROLE DE MINUTA
		 //	IF FPF->(DBSEEK(XFILIAL("FPF")+POSICIONE("FPN",1,XFILIAL("FPN")+(CALIAS)->FPP_COD,"FPN_AS")+(CALIAS)->(DTOS(FPP_DTMEDI))+(CALIAS)->FPP_FROTA))  //POSICIONA NO ZBX
			FPF->(DBSETORDER(2))
			IF FPF->(DBSEEK(XFILIAL("FPF")+(CALIAS)->FPP_MINUTA ))
				IF FPF->(RECLOCK("FPF",.F.))
					FPF->FPF_NROMED := CCODMED 		// NÚMERO DA MEDIÇÃO
					FPF->FPF_STATUS := "6"
					FPF->(MSUNLOCK())
					IF _LC35PZLM //EXISTBLOCK("LC35PZLM") 		// PONTO DE ENTRADA PARA APÓS A DELEÇÃO DE UMA LINHA ZLM
						EXECBLOCK("LC35PZLM",.T.,.T.,{ FPF->FPF_AS, FPF->FPF_DATA, FPF->FPF_HORAI, FPF->FPF_HORAF, "GRAVA" })
					ENDIF 
				ENDIF
			ENDIF
		ENDIF
	ELSE
     	IF FPP->(DBSEEK(XFILIAL("FPP")+CCODMED+CTIPO+DTOS(GDFIELDGET("FPP_DTMEDI",NPOS,.F.,AHEADER,ACOLS))+GDFIELDGET("FPP_ITEM",NPOS,.F.,AHEADER,ACOLS)))
			// VERIFICA SE TEM MINUTA VINCULADA A MEDIÇÃO, CASO HOUVER, VOLTA O STATUS PARA BAIXADO E LIMPA O NUMERO DA MEDIÇÃO
			FPF->(DBSETORDER(2)) 					// FPF_FILIAL + FPF_MINUTA
			IF FPF->(DBSEEK(XFILIAL("FPF") + FPP->FPP_MINUTA))
				FPF->(RECLOCK("FPF",.F.))
				FPF->FPF_STATUS := "3"
				FPF->FPF_NROMED := ""
				FPF->(MSUNLOCK()) 
				IF _LC35PZLM //EXISTBLOCK("LC35PZLM") 			// PONTO DE ENTRADA PARA APÓS A DELEÇÃO DE UMA LINHA ZLM
					EXECBLOCK("LC35PZLM",.T.,.T.,{ FPF->FPF_AS, FPF->FPF_DATA, FPF->FPF_HORAI, FPF->FPF_HORAF, "DELETA" })
				ENDIF 
			ENDIF 

			FPP->(RECLOCK("FPP",.F.))
			(CALIAS)->FPP_DTDIGI := DATE()			// GRAVA A DATA EM QUE FOI FEITA A ATUALIZAÇÃO 
			FPP->(DBDELETE())
			FPP->(MSUNLOCK())
		ENDIF
	ENDIF
NEXT

RETURN              



// ======================================================================= \\
STATIC FUNCTION FGRAVATUDO(CALIAS,AHEADER,ACOLS)  //GRAVA TODOS OS CAMPOS DO ACOLS
// ======================================================================= \\

LOCAL NPOS,CCAMPO
LOCAL LDEL			:= ACOLS[LEN(AHEADER)+1]
LOCAL M->FPP_AUTORI	:= ACOLS[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_AUTORI"	})]

// --> VERIFICO SE A MEDIÇÃO FOI APROVADA ANTERIORMENTE (POIS A PRIMEIRA VEZ É A LIBERAÇÃO)
LALT := IIF(&(CALIAS + "->FPP_AUTORI") == M->FPP_AUTORI,.T.,.F.)

FOR NPOS:=1 TO LEN(AHEADER)
	CCAMPO := AHEADER[NPOS,2] 
	IF ALLTRIM(CCAMPO) $ "FPP_ALTER/FPP_ALI_WT/FPP_REC_WT"
		LOOP
	ENDIF

	IF (NOPC == 4 .AND. !(ALLTRIM(CCAMPO) $ "FPP_AUTORI|FPP_USRLIB|FPP_DATLIB|FPP_HORLIB") .AND. &(CALIAS + "->" + CCAMPO)	<> ACOLS[NPOS]) .OR. LDEL
		// GRAVO OS CAMPOS QUE SOFRERAM MANUTENÇÃO NO ARQUIVO DE LOG
		/*
		_CANTES	 := ALLTRIM(TRANSFORM(&(CALIAS + "->" + CCAMPO)	,PESQPICT("FPP",CCAMPO)))
		_CDEPOIS := ALLTRIM(TRANSFORM(ACOLS[NPOS],PESQPICT("FPP",CCAMPO)))
		_CANTES	 := SPACE(LEN(ZLJ->ZLJ_ANTES)  - LEN(_CANTES))  + _CANTES
		_CDEPOIS := SPACE(LEN(ZLJ->ZLJ_DEPOIS) - LEN(_CDEPOIS)) + _CDEPOIS
		RECLOCK("ZLJ",.T.) 
		ZLJ->ZLJ_FILIAL	:= XFILIAL("FPP")		//&(CALIAS + "->FPP_FILIAL")
		ZLJ->ZLJ_COD	:= CCODMED
		ZLJ->ZLJ_ITEM	:= ACOLS[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"	})]		//&(CALIAS + "->FPP_ITEM")
		ZLJ->ZLJ_DATA	:= DDATABASE
		ZLJ->ZLJ_CAMPO	:= POSICIONE("SX3",2,CCAMPO,"X3_CAMPO")
		ZLJ->ZLJ_DESC	:= POSICIONE("SX3",2,CCAMPO,"X3_TITULO")
		ZLJ->ZLJ_ANTES	:= _CANTES
		ZLJ->ZLJ_DEPOIS	:= IIF(LDEL, "REGISTRO EXCLUIDO", _CDEPOIS)
		ZLJ->ZLJ_USRLIB	:= &(CALIAS + "->FPP_USRLIB")
		ZLJ->ZLJ_DATLIB	:= &(CALIAS + "->FPP_DATLIB")
		ZLJ->ZLJ_HORLIB	:= &(CALIAS + "->FPP_HORLIB")
		ZLJ->(MSUNLOCK())
		*/
	ENDIF 

	&(CALIAS + "->" + CCAMPO) := IIF(CCAMPO = "FPP_AUTORI" .AND. LALT,"N",ACOLS[NPOS])	//CONCLUO A MANUTENÇÃO DA MEDIÇÃO LIBERADA
NEXT

RETURN(.T.)    



// ======================================================================= \\
STATIC FUNCTION FHRREAL(NTOTAL , NALMOCO , NJANTAR , CPARADA) 
// ======================================================================= \\

NTOTAL -= NALMOCO
NTOTAL -= NJANTAR

IF ! EMPTY( CPARADA )
	NTOTAL -= HTON(CPARADA) 
ELSEIF NTOTAL > 10 		// SEMPRE DESCONTAR UMA HORA DE ALMOÇO, RESPEITANDO O MÍNIMO DE 10 HORAS MINIMAS, SOLICITADO POR LETÍCIA (CUNZOLO)
	NTOTAL := NTOTAL-1
ENDIF

IF NTOTAL < 10 			// HORA MÍNIMA (10), SOLICITADO POR LETÍCIA (CUNZOLO)
	NTOTAL := 10
ENDIF

RETURN NTOTAL			// NTOH(NTOTAL) 



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ VLDAS     º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ FUNCAO EXECUTADA QUANDO SOLICITADO SAIDA DA INTERFACE      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION VLDAS(PAS , PVIAGEM)

LOCAL AAREADTQ:= GETAREA()
LOCAL LRET:=.T.          
LOCAL DRESMOB := CTOD("//") 	// UTILIZADO PARA PREENCHER A DATA DE MOBILIZAÇÃO    REAL NA INCLUSÃO 
LOCAL DRESDES := CTOD("//") 	// UTILIZADO PARA PREENCHER A DATA DE DESMOBILIZAÇÃO REAL NA INCLUSÃO 
LOCAL CPROJX  := ""

DBSELECTAREA("FQ5")
FQ5->(DBSETORDER(9))                        
FQ5->(DBSEEK(XFILIAL("FQ5")+PAS))

If FQ5->FQ5_TPAS <> "L"
	MsgAlert(STR0077,STR0020) // "Só são válidas AS do tipo Locação para a realização da medição."###"Rental!"
	Return .F.
EndIF
CPROJX  := FQ5->FQ5_SOT

IF !EMPTY(PAS) .AND. ! FQ5->(DBSEEK(XFILIAL("FQ5")+PAS)) 
	MSGSTOP(STR0078 , STR0020) //"NR. DE A.S. NAO EXISTE. FAVOR VERIFICAR !!!"###"GPO - LOCT035.PRW"
	LRET := .F.
ENDIF   

DBSELECTAREA("FP0")
DBSETORDER(1)
DBSEEK(XFILIAL("FP0")+CPROJX)

IF LRET .AND. !EMPTY(PAS) .AND. FQ5->FQ5_TPAS="T" .AND. FP0_RECEIT <> "G"
	MSGSTOP(STR0079 , STR0020) // "AS INFORMADA PERTENCE AO TRANSPORTE QUE NÃO POSSUI MEDIÇÃO. FAVOR FATURAR AS DE TRANSPORTE PELO CTRC OU CTRB !!!"###"GPO - LOCT035.PRW"
	LRET:= .F.
ENDIF 

IF LRET 

	IF IIF(EMPTY(PVIAGEM) , FQ5->(DBSEEK(XFILIAL("FQ5")+PAS)) , FQ5->(DBSEEK(XFILIAL("FQ5")+PAS+PVIAGEM))) 
		CPROJETO := FQ5->FQ5_SOT                                                                        
		IF VALTYPE(OPROJETO) == "O"
			OPROJETO:REFRESH()   
		ENDIF
		
		CVIAGEM	:=	FQ5->FQ5_VIAGEM
		IF VALTYPE(OVIAGEM) == "O"
			OVIAGEM:REFRESH()
		ENDIF 
		
		COBRA    := FQ5->FQ5_OBRA 
		CAS      := FQ5->FQ5_AS 
		CCONDPAG := FQ5->FQ5_CONDPG 
		CVIAGEM	 := FQ5->FQ5_VIAGEM 
		CDESCPAG := POSICIONE("SE4",1,XFILIAL("SE4")+CCONDPAG,"E4_DESCRI")  
		CTPAS	 := FQ5->FQ5_TPAS
		CNOME	 := FQ5->FQ5_NOMCLI
		CLOJA	 := FQ5->FQ5_LOJA
		CAGENTE	 := FQ5->FQ5_CODCLI

		DBSELECTAREA("FPN")
		DBSETORDER(4)//FILIAL+NR. MEDICAO
		
		IF MSSEEK(XFILIAL("FPN")+CCODMED+CTIPOMED)
			NOPC   := 4
			CCHAVE := XFILIAL("FPN")+FPN->FPN_COD+FPN->FPN_TIPO
			ATUVARS("1")
			NVALBKP:= NVALSERV
		ELSE
			NOPC   := 3
			CCHAVE := XFILIAL("FPN")+CCODMED  
			ATUVARS("2")     
			NVALBKP:= NVALSERV
		ENDIF                              
    
	    CALIAS    := "FPP"
		CCHAVE    := XFILIAL(CALIAS)+CCODMED+CTIPOMED
		CCONDICAO := 'FPP_FILIAL+FPP_COD+FPP_TPMEDI=="'+CCHAVE+'"'
		NINDICE   := 2
		CFILTRO   := CCONDICAO      

		AHEADER        := FHEADER(ACAMPOSSIM)
		ACOLSZLF       := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)                                  
		ACOLSZLF[1][1] := "001" 	// INICIALIZO ACOLS (ITENS) COM VALOR 001 
		
		IF VALTYPE(OGETZLM) == "O"              
			OGETZLM:ACOLS:=ACOLSZLF
			OGETZLM:REFRESH()
		ENDIF	
		
		DBSELECTAREA("FP0")
		FP0->(DBSETORDER(1))
		FP0->(DBSEEK(XFILIAL("FP0") + FQ5->FQ5_SOT))
		
		CAGENTE	:= FP0->FP0_CLI
		CLOJA	:= FP0->FP0_LOJA
		
		DBSELECTAREA("AAM")
		DBSETORDER(1)
		MSSEEK(XFILIAL("AAM") + FQ5->FQ5_CONTRA )
		IF !EMPTY(ALLTRIM(AAM->AAM_CODCLI))
			CAGENTE	:=AAM->AAM_CODCLI
			CLOJA	:=AAM->AAM_LOJA
		ENDIF
		
		CNOME	:=POSICIONE("SA1",1,XFILIAL("SA1")+CAGENTE+CLOJA ,"A1_NOME")
		
		IF NOPC == 3	// SÓ ATUALISAR QUANDO FOR INCLUSÃO
			
			IF FP0->FP0_TIPOSE $ "P#L"
				DBSELECTAREA("FPA")
				FPA->(DBSETORDER(3))
				FPA->(DBSEEK(XFILIAL("FPA") + PAS))
				NVALISS  := (LOCA00158(NVALTOT ,FPA->FPA_PERISS,FPA->FPA_TPISS)*FPA->FPA_QUANT)
				NVALFRE  := FPA->FPA_GUIMON + FPA->FPA_GUIDES
				NVALSEG  := FPA->FPA_VRSEGU
				//_NCONANT := FPA->FPA_HORIME
			ELSE
				DBSELECTAREA("FP4") 
				FP4->(DBCLEARFILTER())
				FP4->(DBSETFILTER({|| ALLTRIM(FP4->FP4_AS) == ALLTRIM(PAS)},"ALLTRIM(FP4->FP4_AS) == ALLTRIM(PAS)"))
				FP4->(DBGOTOP())
			ENDIF

			IF _CTIPOX == "L"
				NVALISS  := 0
				NVALFRE  := 0
				NVALSEG  := 0
			ENDIF
						
			DO CASE
			CASE !EMPTY(DTOS(FQ5->FQ5_DATINI))
				DMOBDTP		:= FQ5->FQ5_DATINI - 2
				//DDESDTP		:= FQ5->FQ5_DATFIM 
				// FRANK Z FUGA - TRATAMENTO DA DATA REALIZADA SOMENTE PARA CASOS COM OS DE ENTRADA - 10/09/2020
				IF _CTIPOX == "L" .AND. !EMPTY(_COSENTRA)	
					DDESDTP		:= FQ5->FQ5_DATFIM
				ENDIF 
			CASE FP0->FP0_TIPOSE $ "P#L"
				DMOBDTP		:= FPA->FPA_DTINI - 2
				//DDESDTP		:= FPA->FPA_DTENRE  
				// FRANK Z FUGA - TRATAMENTO DA DATA REALIZADA SOMENTE PARA CASOS COM OS DE ENTRADA - 10/09/2020
				IF _CTIPOX == "L" .AND. !EMPTY(_COSENTRA)
					DDESDTP		:= FPA->FPA_DTENRE
				ENDIF 
				NMINHRSMES	:= FPA->FPA_MINMES
				NVALPEDAG   := FPA->FPA_VLPEDA		
			OTHERWISE
				DMOBDTP	 := FP4->FP4_DTINI - 2
				//DDESDTP	 := FP4->FP4_DTFIM  
				// FRANK Z FUGA - TRATAMENTO DA DATA REALIZADA SOMENTE PARA CASOS COM OS DE ENTRADA - 10/09/2020
				IF _CTIPOX == "L" .AND. !EMPTY(_COSENTRA)
					DDESDTP		:= FP4->FP4_DTFIM
				ENDIF  
				NMINHRSMES := FP4->FP4_MINMES
				NVALPEDAG   := FP4->FP4_VLPEDA
			ENDCASE

		ENDIF	
		
		// --> ATUALIZA MINIMO DE HORAS MÊS MESMO QUE NÃO SEJA INCLUSÃO
		IF !(NOPC == 3)
			IF FP0->FP0_TIPOSE $ "P#L"
				DBSELECTAREA("FPA") 
				FPA->(DBSETORDER(2))
				MSSEEK(XFILIAL("FPA")+CPROJETO+COBRA+PAS+PVIAGEM)
				NMINHRSMES	:= FPA->FPA_MINMES
			ELSE
				DBSELECTAREA("FP4") 
				FP4->(DBSETORDER(2))
				MSSEEK(XFILIAL("FP4")+CPROJETO+COBRA+PAS+PVIAGEM)
				NMINHRSMES := FP4->FP4_MINMES
			ENDIF
		ENDIF
		
		IF NOPC == 3
			// --> ALIMENTA A LINHA DA MEDIÇÃO NA INCLUSÃO
			LOCA04806(CPROJETO , COBRA , PAS , PVIAGEM , CTPAS) 
		ENDIF
		
		// --> PREENCHER DATA DE MOBILIZAÇÃO E DESMOB SOMENTE NA INCLUSAO 
		IF NOPC == 3 
			DBSELECTAREA("FPO") 
			FPO->(DBSETORDER(4))
			MSSEEK(XFILIAL("FPO")+CPROJETO+COBRA+PAS+PVIAGEM)
			CCC := FPA->FPA_CUSTO
			WHILE FPO->FPO_PROJET == CPROJETO .AND. FPO->FPO_OBRA == COBRA .AND. FPO->FPO_NRAS == PAS .AND. FPO->FPO_VIAGEM == PVIAGEM
				IF FPO->FPO_STATUS == "2" .AND. (DRESMOB < FPO->FPO_DTFIM)
				    DRESMOB := FPO->FPO_DTFIM
				ELSEIF FPO->FPO_STATUS == "4"  .AND. (DRESDES < FPO->FPO_DTFIM)
				 	DRESDES := FPO->FPO_DTFIM
				ENDIF            
				FPO->(DBSKIP())        
			ENDDO   
			DMOBDTR := DRESMOB	
			//DDESDTR := DRESDES     
			// FRANK Z FUGA - TRATAMENTO DA DATA REALIZADA SOMENTE PARA CASOS COM OS DE ENTRADA - 10/09/2020
			IF _CTIPOX == "L" .AND. !EMPTY(_COSENTRA) 
				DDESDTR := DRESDES
			ELSE
				DDESDTR := DRESDES
			ENDIF     
		ENDIF                     
	ELSE 
		IF !EMPTY(CVIAGEM)
			MSGSTOP(STR0080) //"Nr. de viagem não existe. Favor verificar !"
			LRET:= .F.		                                        
		ENDIF	
	ENDIF
ENDIF

IF LRET .AND. NOPC == 3	// VALIDADA E INCLUSÃO
	IF SELECT("QRY") > 0
		QRY->(DBCLOSEAREA())
	ENDIF
	CQUERY := "SELECT ZLF.FPN_AS , ZLF.FPN_COD "
	CQUERY += "FROM " + RETSQLNAME("FPN") + " ZLF "
	CQUERY += "WHERE  FPN_FILIAL = '" + XFILIAL("FPN") + "' AND "
	CQUERY += "       FPN_AS =     '" + CAS            + "' AND "
	CQUERY += "       FPN_SITUAC = '1'                      AND "	// DIGITADO
	CQUERY += "	      D_E_L_E_T_ = ' ' "
	CQUERY := CHANGEQUERY(CQUERY)
	DBUSEAREA(.T. , "TOPCONN" , TCGENQRY(,,CQUERY) , "QRY" , .F. , .T.) 

	NCONTA := 0
	CMEDIC := ""
	DBSELECTAREA("QRY")
	DBGOTOP()
	WHILE QRY->(!EOF()) 
		NCONTA++
		CMEDIC := ALLTRIM(QRY->FPN_COD)+", "
		QRY->(DBSKIP())
	ENDDO
	CMEDIC := SUBSTR(CMEDIC,1,LEN(CMEDIC)-2)	// RETIRO A VIRGULA E O ESPAÇO DA ÚLTIMA MEDIÇÃO 

	DBSELECTAREA("QRY") 						// FECHA ALIAS
	QRY->(DBCLOSEAREA())						// FECHA ALIAS

	IF NCONTA > 0
		MSGALERT(STR0081 + ALLTRIM(CMEDIC) + CHR(13) + CHR(10) + ; // "JA EXISTE MEDIÇÃO SOB O NÚMERO "
		         STR0082               + ALLTRIM(CAS)    + CHR(13) + CHR(10) + ; // "PARA A AS NÚMERO "
		         STR0083 , STR0020) // "NÃO É POSSÍVEL A INCLUSÃO ENQUANTO A MESMA ESTIVER COM STATUS DIGITADO."###"GPO - LOCT035.PRW"
		LRET := .F. 
	ENDIF
ENDIF

IF LRET	.AND. EMPTY(PVIAGEM)
	CVIAGEM := FQ5->FQ5_VIAGEM
	IF VALTYPE(OVIAGEM) == "O"
		OVIAGEM:REFRESH()
	ENDIF 
ENDIF

RESTAREA(AAREADTQ)

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION FNOME(CVAR1 , CVAR2) 
// ======================================================================= \\

DO CASE
CASE CVAR1 == "1"
	CNOME := SA1->A1_NOME
OTHERWISE
END CASE

OTELA:REFRESH()
OCONDPAG:SETFOCUS()

RETURN .T.   



// ======================================================================= \\
STATIC FUNCTION ATUVARS(POPC)
// ======================================================================= \\

IF POPC== "1"
	CCODMED    := FPN->FPN_COD  
	CAS	       := FPN->FPN_AS    
	CPROJETO   := FPN->FPN_PROJET
	COBRA	   := FPN->FPN_OBRA
	CVIAGEM	   := FPN->FPN_VIAGEM 
	DDATAF	   := FPN->FPN_DTFIM  
	DMOBDTP	   := FPN->FPN_MOBDTP 
	DMOBDTR	   := FPN->FPN_MOBDTR 
	DDESDTP	   := FPN->FPN_DESDTP 
	DDESDTR	   := FPN->FPN_DESDTR 
	DSEGDTP	   := FPN->FPN_DTSEGP 
	DSEGDTR	   := FPN->FPN_DTSEGR 
	DMEDDTP	   := FPN->FPN_DTMEDP 
	DMEDDTR	   := FPN->FPN_DTMEDR 
	CAGENTE	   := FPN->FPN_CLIENT 
	CLOJA      := FPN->FPN_LOJA
	CCONDPAG   := FPN->FPN_CONDPA 
	CNATUREZ   := FPN->FPN_NATUR 
	_NVLRHOR   := FPN->FPN_VLRHOR
	CDESCPAG   := POSICIONE("SE4",1,XFILIAL("SE4")+CCONDPAG,"E4_DESCRI")  
	NVALSERV   := FPN->FPN_VALSER 
	NVALISS	   := FPN->FPN_VLAISS 
	NVALFRE	   := FPN->FPN_VLRMOB 
	NVALSEG	   := FPN->FPN_VALSEG 
	NVALACRE   := FPN->FPN_VLACRE 
	NVALARRE   := FPN->FPN_VLARRE
	NVALDESC   := FPN->FPN_VLDESC
	NVALTOT	   := FPN->FPN_VALTOT	
	NVALTOTPRV := FPN->FPN_VALPRV
	CSITUA     := FPN->FPN_SITUAC   
	COBSG      := FPN->FPN_OBS 
	COBSD      := FPN->FPN_OBSDES
	COBSA      := FPN->FPN_OBSACR
	CTIPOMED   := FPN->FPN_TIPO
	NVALPEDAG  := FPN->FPN_VRPEDA
	_COSSAIDA  := FPN->FPN_OSSAID
	_COSENTRA  := FPN->FPN_OSENTR
	_NPOSCONT  := FPN->FPN_POSCON
	_NCONANT   := FPN->FPN_CONANT

	IF _CTIPOX == "L"
		NVALISS  := 0
		NVALFRE  := 0
		NVALSEG  := 0
	ENDIF
ELSE
	DMOBDTR    := CRIAVAR("FPN_MOBDTR")
	DDESDTR	   := CRIAVAR("FPN_DESDTR")
	DSEGDTP	   := CRIAVAR("FPN_DTSEGP")
	DSEGDTR	   := CRIAVAR("FPN_DTSEGR")
	DMEDDTP    := CRIAVAR("FPN_DTMEDP")
	DMEDDTR    := CRIAVAR("FPN_DTMEDR")
	NVALSERV   := CRIAVAR("FPN_VALSER")
	NVALISS    := CRIAVAR("FPN_VLAISS")
	NVALFRE    := CRIAVAR("FPN_VLRMOB")
	NVALSEG    := CRIAVAR("FPN_VALSEG")
	NVALACRE   := CRIAVAR("FPN_VLACRE")
	NVALARRE   := CRIAVAR("FPN_VLARRE")
	NVALDESC   := CRIAVAR("FPN_VLDESC")
	_NVLRHOR   := CRIAVAR("FPN_VLRHOR")
	NVALTOT	   := CRIAVAR("FPN_VALTOT")
	NVALTOTPRV := CRIAVAR("FPN_VALPRV")
	_COSSAIDA  := CRIAVAR("FPN_OSSAID")
	_COSENTRA  := CRIAVAR("FPN_OSENTR")
	IF VALTYPE(_NPOSCONT) <> "N"
		_NPOSCONT  := CRIAVAR("FPN_POSCON")
	ENDIF
	IF VALTYPE(_NCONANT) <> "N"
		_NCONANT   := CRIAVAR("FPN_CONANT")
	ENDIF
ENDIF

RETURN .T.



// ======================================================================= \\
STATIC FUNCTION VERDATA(CVAR1 , CVAR2)
// ======================================================================= \\

LOCAL LRET    := .T. 
LOCAL LVLDTMD := SUPERGETMV("MV_LOCX222",.F.,.T.) 
/*
DO CASE
CASE CVAR1 == "0" .AND. (DDATAI < DMOBDTP .OR. DDATAI > DDESDTP) .AND. LVLDTMD 
	MSGALERT("DATA INICIAL ESTÁ FORA DO PERÍODO DA MOBILIZAÇÃO. VERIFIQUE!!!" , "GPO - LOCT035.PRW") 
	LRET := .F.
CASE CVAR1 == "1" .AND. DDATAF < DDATAI
	MSGALERT("DATA FINAL MAIOR QUE DATA INICIAL. VERIFIQUE!!!" , "GPO - LOCT035.PRW") 
	LRET := .F.
CASE CVAR1 == "1" .AND. (DDATAF < DMOBDTP .OR.  DDATAF > DDESDTP)
	MSGALERT("DATA FINAL ESTÁ FORA DO PERÍODO DA DESMOBILIZAÇÃO. VERIFIQUE!!!" , "GPO - LOCT035.PRW") 
	LRET := .F.
ENDCASE
*/
// FRANK Z FUGA - TRATAMENTO DA DATA REALIZADA SOMENTE PARA CASOS COM OS DE ENTRADA - 10/09/20
IF _CTIPOX == "L"
	IF CVAR1 == "1"
		IF DDATAF < DDATAI
			ALERT(STR0084) // "Data inicial maior do que a data final."
			LRET:=.F.
		ENDIF
	ENDIF
ELSE
	DO CASE
	   CASE CVAR1 == "0" .AND. (DDATAI < DMOBDTP ) //.OR. DDATAI > DDESDTP)
		   //ALERT("DATA INICIAL ESTÁ FORA DO PERÍODO DA MOBILIZAÇÃO. VERIFIQUE!!!")
		   Alert(STR0085,STR0020) //"A data inicial não pode ser menor do que a data prevista de mobilização."###"Atenção!"
		   LRET:= .F.
	   CASE CVAR1 == "1" .AND. DDATAF < DDATAI
		   ALERT(STR0086) // "DATA FINAL MAIOR QUE DATA INICIAL. VERIFIQUE!!!"
		   LRET:= .F.
	   CASE CVAR1 == "1" .AND. (DDATAF < DMOBDTP) // .OR.  DDATAF > DDESDTP)
		   //ALERT("DATA FINAL ESTÁ FORA DO PERÍODO DA DESMOBILIZAÇÃO. VERIFIQUE!!!")
		   ALERT(STR0087,STR0020) //"A data final não pode ser menor do que a data prevista de mobilização."###"Atenção!"
		   LRET:= .F.
	END CASE
ENDIF

IF LRET
	IF CVAR1=="1"  		// 0=DDATAI , 1=DDATAF 
	    CALIAS    := "FPP"
		CCHAVE    := XFILIAL(CALIAS)+CCODMED+CTIPOMED
		CCONDICAO := 'FPP_FILIAL+FPP_COD+FPP_TPMEDI=="'+CCHAVE+'"'
		NINDICE   := 2
		CFILTRO   := CCONDICAO
		AHEADER   := FHEADER(ACAMPOSSIM)
		ACOLSZLF  := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)
		IF VALTYPE(OGETZLM) == "O"
			OGETZLM:ACOLS:=ACOLSZLF
			OGETZLM:REFRESH()
			LOCA04809()
		ENDIF
	ENDIF
ENDIF

RETURN LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ CALHORAS2 º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ FUNCAO PARA CALCULAR AS HORAS TOTAIS DE MEDICAO            º±±
±±º          ³ CONVERTENDO SEXAGESIMAL PARA CENTESIMAL,                   º±±
±±º          ³ CHAMADA: EXCLUSIVA NESTE FONTE.                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04802(CHORAINI01,CHORAFIM01)                

/* PROCESSO NÃO ATENDIA A MEDIÇÃO, RETIRADA DIA 05/09/2011.
LOCAL NHORA01  :=__TIMESUB( VAL(LEFT(CHORAFIM01,2)+'.'+RIGHT(CHORAFIM01,2)) ,  VAL(LEFT(CHORAINI01,2)+'.'+RIGHT(CHORAINI01,2))) //VAL(STRTRAN(CHORAINI01,':','.')) )
LOCAL NDECIMAL := 0
NDECIMAL := NHORA01 - INT(NHORA01) 
NDECIMAL := (NDECIMAL /60) * 100
NHORA01  := INT(NHORA01) + NDECIMAL
*/          
HORAS   := ELAPTIME(SUBSTR(CHORAINI01,1,2)+":"+SUBSTR(CHORAINI01,3,2)+":00", SUBSTR(CHORAFIM01,1,2)+":"+SUBSTR(CHORAFIM01,3,2)+":00")
NHORA01 := ROUND(VAL(SUBSTR(HORAS,1,2))+VAL(SUBSTR(HORAS,4,2))/60,2) 		// PARA CONVERTER SEXAGESIMAL PARA CENTESIMAL

RETURN(NHORA01)
                              


// ======================================================================= \\
FUNCTION LOCA04803(_HORCAL)
// ======================================================================= \\
// --> CHAMADA NA VALIDAÇÃO DE USUÁRIO DOS CAMPOS: FPP_HORAI E FPP_HORAF
LOCAL CRET :=.T. 

IF !( VAL(SUBSTR(_HORCAL,1,2))<=24) 
	CRET := .F. 
ENDIF

IF !(VAL(SUBSTR(_HORCAL,4,2))>=0 .AND. VAL(SUBSTR(_HORCAL,4,2))<=59) 
	CRET := .F. 
ENDIF

IF !CRET
	MSGALERT(STR0088 , STR0020) //"ATENÇÃO: HORA INVALIDA"###"GPO - LOCT035.PRW"
ENDIF

RETURN CRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ GERAP     º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ GERAR PEDIDO DE VENDA                                      º±±
±±º          ³ CHAMADA: VIA MENU - "GERAR PED.VENDA"                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04804() 

LOCAL _CREMET 	  := ALLTRIM(SUPERGETMV("MV_RELFROM",.F.,"")) 
LOCAL _CDEST	  := SUPERGETMV("MV_LOCX232",.F.,"",XFILIAL("FPN")) 
LOCAL _CCC	 	  := SUPERGETMV("MV_LOCX231",.F.,"",XFILIAL("FPN")) 
LOCAL _CCCO	 	  := SUPERGETMV("MV_LOCX229",.F.,"",XFILIAL("FPN")) 
LOCAL _CASSUNTO	  := STR0089 // "INCLUIDO PEDIDO DE VENDAS PARA A MEDICAO"
LOCAL CBODY	 	  := STR0090 + CRLF + STR0091 // "FOI INCLUIDO PEDIDO DE VENDAS(%PEDIDO%) NA FILIAL %FILIAL% PARA A MEDIÇÃO %MEDICAO% COM DATA DE VALIDADE %DTVALID%."###"CASO O MESMO NÃO SEJA FATURADO ATÉ A DATA INFORMADA SERÁ ESTORNADO O PROCESSO."
LOCAL CNUMSC5     := ""
LOCAL ACAMPOSSC5  := {}
LOCAL AITENS      := {}
LOCAL ACAMPOSSC6  := {}
LOCAL CTES        := SUPERGETMV("MV_LOCX186" ,.F.,"") 
LOCAL CTESEXTRA   := SUPERGETMV("MV_LOCX079",.F.,"") 
LOCAL CFILFAT     := SUPERGETMV("MV_LOCX149" ,.F.,"") 
LOCAL NQTDVALI    := SUPERGETMV("MV_LOCX251",.F.,0,XFILIAL("FPN")) 
//LOCAL CPRODUTO  := SUPERGETMV("MV_LOCX172",.F.,"") 
//LOCAL CCONSULTA := "" 
LOCAL CALIAS      := GETNEXTALIAS()
LOCAL CALIASMO    := GETNEXTALIAS()
LOCAL AAREA       := FPN->(GETAREA())
LOCAL AAREAST9
LOCAL _CPRODMO			
LOCAL _CPRODEQUI	
LOCAL NTOTOMO     := 0
LOCAL NX
LOCAL AITENSMED   := {}
LOCAL CZLFCOD     := "" 
LOCAL CVENDEDOR   := ""
LOCAL NCOMISSAO	  := 0 
LOCAL AAREAZA0	  := FP0->(GETAREA())
LOCAL AAREASA3	  := SA3->(GETAREA())

LOCAL LPVTUDOOK   := .T. 
LOCAL LTEMITMED   := .F. 
LOCAL LTEMITME2   := .F. 
LOCAL AAREAATU    := {} 
LOCAL AAREASF4    := {} 
Local _MV_LOC051 := getmv("MV_LOCX051",,.F.)
Local _MV_LOC243 := SUPERGETMV("MV_LOCX243",.F.,.F.)

PRIVATE LMSERROAUTO := .F.    

IF EXISTBLOCK("LOCA018") //PONTO DE ENTRADA PARA IDENTIFICAÇÃO SE É UMA LOCAÇÃO, OU SERVIÇO
	// _CTIPOX -> "P" - MANTER O PADRAO DO SISTEMA
	// _CTIPOX -> "L" - TRATAMENTO ESPECIFICO PARA LOCAÇÃO
	
	_CTIPOX := EXECBLOCK("LOCA018",.T.,.T., {.F.})
	IF EMPTY(_CTIPOX)
		//MSGALERT("FALTOU A SELEÇÃO DO TIPO DA MEDIÇÃO.","PROCESSO BLOQUEADO.")
		RETURN
	ENDIF
ELSE
	_CTIPOX := "P"
ENDIF  

DBSELECTAREA("FPN")
DBSETORDER(1)
MSSEEK(XFILIAL("FPN") + FPN->FPN_COD )

// VALIDAÇÃO PARA NÃO PERMITIR A GERAÇÃO DO PV NO CASO DO VALOR ESTAR ZERADO
IF FPN->FPN_VALTOT==0 .AND. _CTIPOX == "L"
	MSGALERT(STR0092,STR0020) //"O VALOR TOTAL ESTÁ ZERADO."###"ATENÇÃO!"
	RETURN
ENDIF

CZLFCOD := FPN->FPN_COD

WHILE FPN->( !EOF() .AND. FPN_FILIAL+FPN_COD == XFILIAL("FPN")+CZLFCOD )
	CTIPO     := FPN->FPN_TIPO
	NRECNOZLF := FPN->(RECNO())
	FPN->(DBSKIP())
ENDDO
     
IF CTIPO == "C" .OR. NRECNOZLF == 0
	RETURN NIL 			// ERRO, EXISTE C SEM F
ENDIF

FPN->(DBGOTO(NRECNOZLF))

IF !EMPTY(FPN->FPN_COD)
    
	IF !EMPTY(FPN->FPN_NUMPV)
		MSGALERT(STR0093 , STR0020) //"JA EXISTE PEDIDO DE VENDA PARA ESSE SERVICO.VERIFIQUE!!!"###"GPO - LOCT035.PRW"
		RETURN
	ENDIF
    
	IF FPN->FPN_SITUACA != "2"
		MSGALERT(STR0094 , STR0020) // "NÃO E POSSIVEL GERAR PEDIDO DE VENDA PARA MEDIÇÕES NÃO CONFIRMADAS."###"GPO - LOCT035.PRW"
		RETURN 
	ENDIF 

	IF MSGBOX(STR0095 + FPN->FPN_CLIENT+"/"+FPN->FPN_LOJA+"-"+POSICIONE("SA1",1,XFILIAL("SA1")+FPN->FPN_CLIENT+FPN->FPN_LOJA,"A1_NOME"),STR0096,"YESNO") // "DESEJA GERAR FATURAMENTO PARA ESSE SERVICO: CLIENTE ->"###"ATENCAO"
	
		AAREASC5 := SC5->(GETAREA())
		DBSELECTAREA("SC5")
		DBSETORDER(1)
		CNUMSC5 := GETSXENUM("SC5","C5_NUM")
		WHILE (MSSEEK(XFILIAL("SC5")+CNUMSC5))
			CNUMSC5 := SOMA1(CNUMSC5,LEN(CNUMSC5))
		ENDDO
		RESTAREA(AAREASC5)
	
		DBSELECTAREA("FQ5")
		FQ5->(DBSETORDER(9))                        
		FQ5->(DBSEEK(XFILIAL("FQ5")+FPN->FPN_AS+FPN->FPN_VIAGEM))

		DO CASE 
		CASE FQ5->FQ5_TPAS $ "F"
			MSGALERT(STR0097 , STR0020) //"PEDIDO DE VENDA NÃO PODE SER GERADO PARA AS DO TIPO FRETE!"###"GPO LOCT035.PRW"
			RETURN

		CASE FQ5->FQ5_TPAS $ "T/E"
			DBSELECTAREA("FP4") 
			FP4->(DBSETORDER(2))
			MSSEEK(XFILIAL("FP4")+FPN->FPN_PROJET+FPN->FPN_OBRA+FPN->FPN_AS+FPN->FPN_VIAGEM)
	    	AAREAST9 := ST9->(GETAREA())			    
			IF !EMPTY(FQ5->FQ5_GUINDA)
		    	DBSELECTAREA("ST9")
		    	DBSETORDER(1)
		    	IF DBSEEK(XFILIAL("ST9")+FQ5->FQ5_GUINDA)
		    		IF !EMPTY(ST9->T9_CODESTO)
		    			CPRODNEW := ST9->T9_CODESTO
		    		ELSE
		    			CPRODNEW := FQ5->FQ5_GUINDA	
		    		ENDIF
		    	ENDIF
		    ELSE
		    	CPRODNEW := FP4->FP4_PRODUT	
		    ENDIF
			RESTAREA(AAREAST9)
				
			DO CASE 
			CASE FP4->FP4_PERMAO == 100 
				_CPRODMO := SUPERGETMV("MV_LOCX245", .F. ,"")
				BEGINSQL ALIAS CALIASMO
					SELECT 
						SUM(FPP_VLTOTM) MO
					FROM
						%TABLE:FPN% AS FPN
					WHERE
						%NOTDEL%	AND
						FPP_FILIAL = %EXP:FPN->FPN_FILIAL% AND
						FPP_COD    = %EXP:FPN->FPN_COD%    AND
						FPP_TPMEDI = %EXP:FPN->FPN_TIPO%		
				ENDSQL
				NTOTOMO    := (CALIASMO)->MO 
				AADD(AITENSMED , {_CPRODMO   , NTOTOMO}) 
				
			CASE FP4->FP4_PERMAO > 0 .AND. FPN->FPN_VALTOT > 0						
				_CPRODEQUI := IIF(!EMPTY(CPRODNEW),CPRODNEW,SUPERGETMV("MV_LOCX062", .F. ,""))
				_CPRODMO   := SUPERGETMV("MV_LOCX064", .F. ,"")						
				NTOTOMO    := (FP4->FP4_PERMAO * FPN->FPN_VALTOT) / 100
				AADD(AITENSMED , {_CPRODEQUI , FPN->FPN_VALTOT})
				AADD(AITENSMED , {_CPRODMO   , NTOTOMO        })
										
			OTHERWISE
				_CPRODEQUI := IIF(!EMPTY(CPRODNEW),CPRODNEW,SUPERGETMV("MV_LOCX062", .F. ,""))
				AADD(AITENSMED , {_CPRODEQUI , FPN->FPN_VALTOT})

			ENDCASE

		CASE FQ5->FQ5_TPAS $ "U"	
			DBSELECTAREA("FPA") 
			FPA->(DBSETORDER(2))
			MSSEEK(XFILIAL("FPA")+FPN->FPN_PROJET+FPN->FPN_OBRA+FPN->FPN_AS+FPN->FPN_VIAGEM)
			DO CASE 
			CASE FPA->FPA_PERMAO == 100								
				_CPRODMO := SUPERGETMV("MV_LOCX246", .F. ,"")
				BEGINSQL ALIAS CALIASMO
					SELECT 
						SUM(FPP_VLTOTM) MO
					FROM
						%TABLE:FPN% AS FPN
					WHERE
						%NOTDEL%	AND
						FPP_FILIAL = %EXP:FPN->FPN_FILIAL%	AND
						FPP_COD    = %EXP:FPN->FPN_COD%		AND
						FPP_TPMEDI = %EXP:FPN->FPN_TIPO% 
				ENDSQL
				NTOTOMO := (CALIASMO)->MO
				AADD(AITENSMED , {_CPRODMO , NTOTOMO}) 
					
			CASE FPA->FPA_PERMAO > 100 .AND. FPN->FPN_VALTOT > 0						
				_CPRODEQUI := SUPERGETMV("MV_LOCX244", .F. ,"")
				_CPRODMO   := SUPERGETMV("MV_LOCX247", .F. ,"")						
				NTOTOMO    := (FPA->FPA_PERMAO * FPN->FPN_VALTOT) / 100
				AADD(AITENSMED , {_CPRODEQUI , FPN->FPN_VALTOT})
				AADD(AITENSMED , {_CPRODMO   , NTOTOMO})
										
			OTHERWISE
				_CPRODEQUI := SUPERGETMV("MV_LOCX244", .F. ,"")
				AADD(AITENSMED , {_CPRODEQUI , FPN->FPN_VALTOT})

			ENDCASE
				
		CASE FQ5->FQ5_TPAS $ "L" 
			_CPRODEQUI := SUPERGETMV("MV_LOCX063", .F. ,"")
			AADD(AITENSMED , {_CPRODEQUI , FPN->FPN_VALTOT}) 

		CASE FQ5->FQ5_TPAS $ "M"
			DBSELECTAREA("FPA") 
			FPA->(DBSETORDER(2))
			FPA->( MSSEEK(XFILIAL("FPA")+FPN->FPN_PROJET+FPN->FPN_OBRA+FPN->FPN_AS+FPN->FPN_VIAGEM) )
			DO CASE 
			CASE FPA->FPA_PERMAO == 100								
				_CPRODMO := SUPERGETMV("MV_LOCX245", .F. ,"")
				BEGINSQL ALIAS CALIASMO
					SELECT 
						SUM(FPP_VLTOTM) MO
					FROM
						%TABLE:FPN% AS FPN
					WHERE
						%NOTDEL%	AND
						FPP_FILIAL	=	%EXP:FPN->FPN_FILIAL%	AND
						FPP_COD		=	%EXP:FPN->FPN_COD%		AND
						FPP_TPMEDI	=	%EXP:FPN->FPN_TIPO%		
				ENDSQL
				NTOTOMO := (CALIASMO)->MO
				AADD(AITENSMED, {_CPRODMO,NTOTOMO			})
				
			CASE FPA->FPA_PERMAO > 0 .AND. FPN->FPN_VALTOT > 0 
				_CPRODEQUI := SUPERGETMV("MV_LOCX062", .F. ,"") 
				_CPRODMO   := SUPERGETMV("MV_LOCX064", .F. ,"") 
				NTOTOMO    := (FPA->FPA_PERMAO * FPN->FPN_VALTOT) / 100
				AADD(AITENSMED , {_CPRODEQUI , FPN->FPN_VALTOT})
				AADD(AITENSMED , {_CPRODMO   , NTOTOMO})
											
			OTHERWISE
				_CPRODEQUI := SUPERGETMV("MV_LOCX062", .F. ,"")
				AADD(AITENSMED , {_CPRODEQUI , FPN->FPN_VALTOT})

			ENDCASE
				
		ENDCASE
	
		DBSELECTAREA("FP0")
		DBSETORDER(1)
		DBSEEK(XFILIAL("FP0")+FQ5->FQ5_SOT)
		
		DBSELECTAREA("SA3")
		DBSETORDER(1)
		DBSEEK(XFILIAL("SA3")+FP0->FP0_VENDED)
		
		CVENDEDOR  := SA3->A3_COD 
		NCOMISSAO  := SA3->A3_COMIS 
		
		RESTAREA(AAREASA3)
		RESTAREA(AAREAZA0)
		
		// --> GERA PEDIDO DE VENDA DOS CUSTOS EXTRAS   (*INICIO*) 
		/*
		AITENSMED2 := {} 
		DBSELECTAREA("FPG")
		FPG->(DBCLEARFILTER())
		FPG->(DBSETFILTER({|| ALLTRIM(FPG->FPG_PROJET) == ALLTRIM(FPN->FPN_PROJET)}," ALLTRIM(FPG->FPG_PROJET) == ALLTRIM(FPN->FPN_PROJET)"))
		FPG->(DBGOTOP())

		WHILE FPG->(!EOF() .AND. FPG->FPG_PROJET = FPN->FPN_PROJET )
			IF FPG->FPG_COBRA $ "S" .AND. FPG->FPG_NRAS = FPN->FPN_AS  // COBRAR CLIENTE (S/N)
				CPROANT := FPG->FPG_PRODUT
				NPRCVEN := FPG->(NOROUND(FPG_VALOR/FPG_QUANT,2))
				NVALOR  := FPG->FPG_VALOR
				NPRUNIT := FPG->(NOROUND(FPG_VALOR/FPG_QUANT,2))
				NQUANT  := FPG->FPG_QUANT
				FPG->(AADD(AITENSMED2,{CPROANT,NPRCVEN,NVALOR,NPRUNIT,NQUANT}))
			ENDIF
			FPG->(DBSKIP())
		ENDDO 
		*/
		IF EMPTY( ACAMPOSSC5 )
			ACAMPOSSC5 := {{"C5_FILIAL"     , CFILFAT		    , NIL },;
			               {"C5_NUM"		, CNUMSC5		    , NIL },;
			               {"C5_TIPO"		, "N"			    , NIL },;
			               {"C5_CLIENTE"	, FPN->FPN_CLIENT   , NIL },;
			               {"C5_LOJACLI"	, FPN->FPN_LOJA     , NIL },;
			               {"C5_CLIENT"		, FPN->FPN_CLIENT   , NIL },;
			               {"C5_LOJAENT"	, FPN->FPN_LOJA     , NIL },;
			               {"C5_TIPOCLI"	, POSICIONE("SA1",1,XFILIAL("SA1") + FPN->FPN_CLIENT + FPN->FPN_LOJA ,"A1_TIPO")	, NIL },;
			               {"C5_DESC1"		, 0			        , NIL },;
			               {"C5_DESC2"		, 0			        , NIL },;
			               {"C5_DESC3"		, 0			        , NIL },;
			               {"C5_DESC4"		, 0			        , NIL },;
			               {"C5_TPCARGA"	, "1"	            , NIL },;
			               {"C5_CONDPAG"	, FPN->FPN_CONDPA   , NIL },;
			               {"C5_TPFRETE"	, "F"		        , NIL },;
			               {"C5_VOLUME1"	, 0			        , NIL },;
			               {"C5_PESOL"		, 0			        , NIL },;
			               {"C5_NATUREZ"	, FPN->FPN_NATUR    , NIL },;
			               {"C5_CCUSTO"	    , FPN->FPN_CC       , NIL },;
			               {"C5_PBRUTO"		, 0			        , NIL },;
			               {"C5_VEND1"     	, CVENDEDOR         , NIL },;
						   {"C5_XPROJET"    , FP0->FP0_PROJET   , NIL },;
			               {"C5_COMIS1"    	, NCOMISSAO         , NIL } }
			IF SC5->( FIELDPOS("C5_CLVL") ) > 0
				AADD( ACAMPOSSC5 , {"C5_CLVL" , FPN->FPN_PROJET , NIL } )
			ENDIF
		ENDIF

		FOR NX := 1 TO LEN(AITENSMED)
			LTEMITMED := .T. 

			FP1->( DBSEEK(XFILIAL("FP1")+FPA->FPA_PROJET+FPA->FPA_OBRA) ) 
			DO CASE
				CASE FPA->FPA_TPBASE == "M"
					NDIASTRB := 30
				CASE FPA->FPA_TPBASE == "Q"
					NDIASTRB := 15
				CASE FPA->FPA_TPBASE == "S"
					NDIASTRB :=  7
				OTHERWISE
					DO CASE
					CASE FPA->( FIELDPOS("FPA_LOCDIA") ) > 0 
						NDIASTRB := FPA->FPA_LOCDIA 
					CASE FPA->( FIELDPOS("FPA_PREDIA") ) > 0 
						NDIASTRB := FPA->FPA_PREDIA 
					OTHERWISE
						NDIASTRB := FPA->FPA_DTENRE - FPA->FPA_DTINI + 1 
					ENDCASE
			ENDCASE
	
			_DDTINI := FPA->FPA_DTINI 
			_DDTFIM := FPA->FPA_DTFIM 
			IF FPA->FPA_TIPOSE $ "Z#O"
				_DDTINI  := FPA->FPA_DTINI 
				_DDTFIM  := FPA->FPA_DTENRE 
			ELSE
				IF FP1->FP1_TPMES == "0"				// MES FECHADO
					NDIASTRB := 30 
					_DDTFIM  := FPA->FPA_DTFIM 
					IF EMPTY(FPA->FPA_ULTFAT) .AND. DAY(_DDTINI) - 1 <> DAY(_DDTFIM)
						NDIASTRB := _DDTFIM - _DDTINI + 1 
					ENDIF
					IF !EMPTY(FPA->FPA_DTSCRT)
						IF FPA->FPA_DTSCRT < _DDTFIM
							NDIASTRB := 30 - (_DDTFIM - FPA->FPA_DTSCRT)
							_DDTFIM  := FPA->FPA_DTSCRT
						ENDIF 
					ENDIF 
				ELSE
					IF EMPTY(FPA->FPA_DTSCRT)
						_DDTFIM := _DDTINI + NDIASTRB - 1
					ELSE
						IF _DDTINI + NDIASTRB - 1 < FPA->FPA_DTSCRT
							_DDTFIM := _DDTINI + NDIASTRB - 1
						ELSE
							_DDTFIM := FPA->FPA_DTSCRT
						ENDIF
					ENDIF
				ENDIF
			ENDIF
	


			_CPERLOC := DTOC(_DDTINI) + " A " + DTOC(_DDTFIM)
			AITENS    := {  {"C6_FILIAL"        , CFILFAT		    , NIL},;
			                {"C6_NUM"           , CNUMSC5		    , NIL},; // NUMERO DO PEDIDO
				            {"C6_ITEM"		    , STRZERO(NX,2)		, NIL},; // ITEM
				            {"C6_PRODUTO"	    , AITENSMED[NX][1]	, NIL},; // MATERIAL
				            {"C6_UM"		    , "UN"				, NIL},; // UNIDADE DE MEDIDA
				            {"C6_QTDVEN"	    , 1					, NIL},; // QUANTIDADE
				            {"C6_PRCVEN"	    , AITENSMED[NX][2]  , NIL},; // PRECO UNITARIO
				            {"C6_VALOR"	        , AITENSMED[NX][2]	, NIL},; // VALOR TOTAL DO ITEM
				            {"C6_PRUNIT"        , AITENSMED[NX][2]	, NIL},; // VALOR PREÇO DE LISTA
				            {"C6_DESCONT"       , 0			       	, NIL},; // % DO DESCONTO
				            {"C6_TES"		    , CTES				, NIL},; // TES   
							{"C6_XPERLOC"       , _CPERLOC          , NIL},;
							{"C6_FROTA"         , FPA->FPA_GRUA     , NIL},;
							{"C6_XAS"           , FPA->FPA_AS       , NIL},;
				            {"C6_LOCAL"	        , POSICIONE("SB1",1,XFILIAL("SB1")+AITENSMED[NX][1],"B1_LOCPAD") , NIL},; // ARMAZEM PADRAO
				            {"C6_ENTREG"	    , DDATABASE			, NIL},; // DATA DA ENTREGA
				            {"C6_QTDLIB"        , 1					, NIL}} //,; // QUANTIDADE LIBERADA
				            //{"C6_NUMMED"        , FPN->FPN_COD      , NIL}} //,; removido na 94
				            //{"C6_XCUSTO"        , FPN->FPN_CUSTO    , NIL}}  removido na 94

			If _MV_LOC051 //getmv("MV_LOCX051",,.F.)
				IF SC6->( FIELDPOS("C6_CLVL") ) > 0
					AADD(AITENS,{"C6_CLVL"			, FPN->FPN_AS		, NIL})
				ENDIF
			EndIF


			IF SC6->( FIELDPOS("C6_XBEM") ) > 0
				AADD(AITENS,{"C6_XBEM"          , FPA->FPA_GRUA     , NIL})
			ENDIF
			AADD(ACAMPOSSC6,AITENS)	
		NEXT NX                                         
	    
		NY := LEN(AITENSMED) 
	    /*RETIRADO O FATURAMENTO DOS CUSTOS EXTRAS A PEDIDO DO LUI - CHAMADO 25383 -DENNIS
		FOR NX:=1 TO LEN(AITENSMED2)
			LTEMITME2 := .T. 
			NY++ 
			AITENS := {}
			AITENS := {{"C6_FILIAL"     , CFILFAT		    , NIL},; 
		   			   {"C6_NUM"        , CNUMSC5		    , NIL},; 	// NUMERO DO PEDIDO
		   			   {"C6_ITEM"		, STRZERO(NY,2)		, NIL},; 	// ITEM
		   			   {"C6_PRODUTO"	, AITENSMED2[NX][1]	, NIL},; 	// MATERIAL
		   			   {"C6_UM"		    , "UN"				, NIL},; 	// UNIDADE DE MEDIDA
		   			   {"C6_QTDVEN"	    , AITENSMED2[NX][5]	, NIL},; 	// QUANTIDADE
		   			   {"C6_PRCVEN"	    , AITENSMED2[NX][2] , NIL},; 	// PRECO UNITARIO
		   			   {"C6_VALOR"	    , AITENSMED2[NX][3]	, NIL},; 	// VALOR TOTAL DO ITEM
		   			   {"C6_PRUNIT"     , AITENSMED2[NX][4]	, NIL},; 	// VALOR PREÇO DE LISTA
		   			   {"C6_DESCONT"    , 0			       	, NIL},; 	// % DO DESCONTO
		   			   {"C6_TES"		, CTESEXTRA			, NIL},; 	// TES CUSTOS EXTRAS
		   			   {"C6_LOCAL"	    , POSICIONE("SB1",1,XFILIAL("SB1")+AITENSMED2[NX][1],"B1_LOCPAD"), NIL},; 	// ARMAZEM PADRAO
		   			   {"C6_ENTREG"	    , DDATABASE			, NIL},; 	// DATA DA ENTREGA
		   			   {"C6_QTDLIB"     , 1					, NIL},;
		   			   {"C6_NUMMED"     , FPN->FPN_COD      , NIL},; 	// QUANTIDADE LIBERADA  
		   			   {"C6_XCUSTO"     , FPN->FPN_CUSTO    , NIL}}
			AADD(ACAMPOSSC6,ACLONE(AITENS)) 
		NEXT NX
		*/
		BEGIN TRANSACTION 
		
			IF LEN(ACAMPOSSC5) > 0 .AND. LEN(AITENS) > 0

				IF LTEMITMED 
					IF EMPTY(CTES) 
						MSGALERT(STR0098 , STR0020) //"PARAMETRO 'MV_LOCX186' PARA TES - MEDICAO, NÃO CONFIGURADO. INFORME O CÓDIGO DA TES PARA MEDIÇÃO NESTE PARÂMETRO !"###"GPO - LOCT035.PRW"
						LPVTUDOOK := .F. 
					ELSE
						AAREAATU := GETAREA() 
						AAREASF4 := SF4->(GETAREA()) 
						DBSELECTAREA("SF4") 
						DBSEEK(XFILIAL("SF4")+CTES) 
						IF SF4->(EOF()) 
							MSGALERT(STR0099+ALLTRIM(CTES)+STR0100 , STR0020) // "A TES ["###"] CONFIGURADA NO PARÂMETRO 'MV_LOCX186' NÃO EXISTE ! ALTERE A TES NO REFERIDO PARÂMETRO .OU. REALIZE A INCLUSÃO DA TES."###"GPO - LOCT035.PRW"
							LPVTUDOOK := .F. 
						ENDIF 
						RESTAREA(AAREASF4) 
						RESTAREA(AAREAATU) 
					ENDIF 
				ENDIF 

				IF LTEMITME2 
					IF EMPTY(CTESEXTRA) 
						MSGALERT(STR0101 , STR0020) //"PARAMETRO 'MV_LOCX079' PARA TES - MEDICAO (EXTRA), NÃO CONFIGURADO. INFORME O CÓDIGO DA TES PARA MEDIÇÃO (EXTRA) NESTE PARÂMETRO !"###"GPO - LOCT035.PRW"
						LPVTUDOOK := .F. 
					ELSE 
						AAREAATU := GETAREA() 
						AAREASF4 := SF4->(GETAREA()) 
						DBSELECTAREA("SF4") 
						DBSEEK(XFILIAL("SF4")+CTESEXTRA) 
						IF SF4->(EOF()) 
							MSGALERT(STR0102+ALLTRIM(CTESEXTRA)+STR0103 , STR0020) //"A TES ["###"] CONFIGURADA NO PARÂMETRO 'MV_LOCX079' NÃO EXISTE ! ALTERE A TES NO REFERIDO PARÂMETRO .OU. REALIZE A INCLUSÃO DA TES."###"GPO - LOCT035.PRW"
							LPVTUDOOK := .F. 
						ENDIF 
						RESTAREA(AAREASF4) 
						RESTAREA(AAREAATU) 
					ENDIF 
				ENDIF 

				IF LPVTUDOOK				

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ GERA PEDIDO DE VENDA DA TRANSFERENCIA.          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					FWMSGRUN(,{|| MSEXECAUTO({|X,Y,Z| MATA410(X,Y,Z)},ACAMPOSSC5,ACAMPOSSC6,3)},,STR0104+CNUMSC5 ) //"AGUARDE...GERANDO PEDIDO DE VENDA MEDIÇÃO NR. "
				
					IF LMSERROAUTO
						// --> MOSTRA O ERRO GERADO NA PASTA ERROS
						MOSTRAERRO()
						ROLLBACKSX8()
					ELSE
						CONFIRMSX8()
						
						CBODY := REPLACE(CBODY , STR0105  , CNUMSC5) //"%PEDIDO%"
						CBODY := REPLACE(CBODY , STR0106 , FPN->FPN_COD) //"%MEDICAO%"
						CBODY := REPLACE(CBODY , STR0107  , ALLTRIM(CAPITAL(FWFILIALNAME(CEMPANT,XFILIAL("FPN"))))) //"%FILIAL%"
						CBODY := REPLACE(CBODY , STR0108 , DTOC(DDATABASE+NQTDVALI)) //"%DTVALID%"
						
						IF !EMPTY(_CDEST)
							LOCA05909(_CREMET, _CDEST, _CCC, _CASSUNTO, CBODY, "", _CCCO,.F.)
						ENDIF 
						
						BEGINSQL ALIAS CALIAS
							SELECT 
								R_E_C_N_O_ REC
							FROM 
								%TABLE:FPN%
							WHERE
								%NOTDEL%					AND
								FPN_FILIAL 	= %XFILIAL:FPN%	AND
								FPN_COD		= %EXP:FPN->FPN_COD%
						ENDSQL
						
						DBSELECTAREA(CALIAS)
						
						WHILE (CALIAS)->(!EOF())
							FPN->(DBGOTO((CALIAS)->REC))
							
							RECLOCK("FPN",.F.)
								FPN->FPN_FILPV	:= CFILANT
								FPN->FPN_NUMPV := CNUMSC5
								FPN->FPN_SITUAC:= "4"
							MSUNLOCK()
							
							DBSELECTAREA("SC6")
							SC6->(DBSETORDER(1))
							IF SC6->(DBSEEK(XFILIAL("SC6") + CNUMSC5))
								WHILE SC6->(!EOF()) .AND. XFILIAL("SC6") + CNUMSC5 == SC6->C6_FILIAL + SC6->C6_NUM
									IF _MV_LOC243 //SUPERGETMV("MV_LOCX243",.F.,.F.)
										LOCA062(CFILANT,CNUMSC5,SC6->C6_ITEM,FPN->FPN_FILIAL,FPN->FPN_PROJET,FPN->FPN_AS)
									ENDIF
									SC6->(DBSKIP())
								ENDDO
							ENDIF
							(CALIAS)->(DBSKIP())
						ENDDO 
						
						(CALIAS)->(DBCLOSEAREA())
						
						RESTAREA(AAREA)
		
						DBSELECTAREA("FQ5")
						RECLOCK("FQ5",.F.)
						FQ5->FQ5_ZLFTIP := "3"
						FQ5->FQ5_NUMPV :=CNUMSC5
						MSUNLOCK()
		
				        MSGINFO(STR0109+CNUMSC5+STR0110 , STR0020) //"PEDIDO DE VENDA DE NR. "###" FOI GERADO COM SUCESSO !"###"GPO - LOCT035.PRW"
					ENDIF 					// IF LMSERROAUTO 

	            ENDIF						// IF LTEMITMED  

			ENDIF 							// IF LEN(ACAMPOSSC5) > 0 .AND. LEN(AITENS) > 0

		END TRANSACTION

	ENDIF
ELSE
	MSGALERT(STR0111 , STR0020) //"NAO EXISTE MEDICAO PARA ESTE ITEM. CADASTRE A MEDICAO!!!"###"GPO - LOCT035.PRW"
ENDIF

RETURN



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ LEGZLF    º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ LEGENDA MEDIÇÃO                                            º±±
±±º          ³ CHAMADA: VIA MENU - "LEGENDA"                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04805()

PRIVATE ALEG := {}

// INSERIDO A COR VIOLETA COM BASE NO PROJETO DA APGERADORES
// FRANK ZWARG FUGA EM 10/09/2020
AADD(ALEG,{ {"BR_AZUL"     , STR0112             },; // "DIGITADO"
			{"BR_VERDE"    , STR0113	        },; // "CONFIRMADO"
			{"BR_VERMELHO" , STR0114},; // "PV LIBER. OU FATURADO"
			{"BR_PRETO"    , STR0115            },; // "CANCELADO"
			{"BR_VIOLETA"  , STR0116},; // "CONFIRMADO COM VLR.TOTAL ZERADO"
			{"BR_BRANCO"   , STR0117            }}) // "EM ABERTO"

IF EXISTBLOCK("LOC035LEG") 					// PONTO DE ENTRADA PARA INCLUSÃO DE FILTROS
	EXECBLOCK("LOC035LEG",.T.,.T.)
ENDIF

BRWLEGENDA(CCADASTRO , STR0118 , ALEG[1]) // "LEGENDA"

RETURN .T.



// ======================================================================= \\
FUNCTION LOCA04806(PPROJETO , POBRA , PAS , PVIAGEM , PTPAS) 
// ======================================================================= \\
// --> CHAMADA: NESTE FONTE  &  VALIDAÇÃO USUÁRIO CAMPO FPP_FROTA 

LOCAL AAREAZA5 := GETAREA() 

DBSELECTAREA("FP4") 
FP4->(DBSETORDER(2))
IF FP4->(DBSEEK(XFILIAL("FP4")+PPROJETO+POBRA+PAS+PVIAGEM))   
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR"})] := FP4->FP4_VRHOR
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_BASE"  })] := FP4->FP4_TIPOCA
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERSEG"})] := FP4->FP4_PERSEG
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLBSEG"})] := FP4->FP4_VRCARG
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TIPO"  })] := FP4->FP4_TPSEGU
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})] := FP4->FP4_VRSEGU
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TPISS" })] := FP4->FP4_TPISS
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERISS"})] := FP4->FP4_PERISS
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMO" })] := FP4->FP4_PERMAO 
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOTM"})] := FP4->FP4_VLMOBR 		
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB"})] := FP4->FP4_VRMOB
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES"})] := FP4->FP4_VRDES  
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TRSPES"})] := FP4->FP4_VRPESO 
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_MINDIA"})] := FP4->FP4_MINDIA
ENDIF

RESTAREA(AAREAZA5)

RETURN .T.



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ MANUTE    º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ FUNCAO CHAMADA PELO X3_WHEN PARA VALIDAR A AUTORIZAÇÃO DE  º±±
±±º          ³ MANUTENÇÃO DA MEDIÇÃO                                      º±±
±±º          ³ CHAMADA: EXCLUSIVA NESTE FONTE.                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04807(PCAMPO)

LOCAL LRET			:= .T.
LOCAL CEMAILMD		:= ""
LOCAL M->FPP_DTMEDI	:= IIF(PCAMPO=="FPP_DTMEDI"	,M->&(PCAMPO),OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"	})])
LOCAL M->FPP_AUTORI	:= IIF(PCAMPO=="FPP_AUTORI"	,M->&(PCAMPO),OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_AUTORI"	})])
LOCAL M->FPP_ITEM	:= IIF(PCAMPO=="FPP_ITEM"	,M->&(PCAMPO),OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"	})])
//LOCAL CEMAILCC	:= ALLTRIM(USRRETNAME(RETCODUSR())) + "<" + ALLTRIM(USRRETMAIL(RETCODUSR())) + ">" 

PRIVATE _ODLG

CEMAILMD := ALLTRIM(SUPERGETMV("MV_LOCX143",.F.,""))

LRET := FCHKCONTAB(M->FPP_DTMEDI) 

RETURN LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ CALCZLF   º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ FUNCAO CHAMADA PELO X3_VLDUSER PARA CALCULAR O TOTAL DA    º±±
±±º          ³ MEDICAO.                                                   º±±
±±º          ³ CHAMADA: NESTE FONTE .E. NA VALIDAÇÃO USUARIO DOS CAMPOS:  º±±
±±º          ³          FPP_OS    , FPP_DTMEDI, FPP_FROTA , FPP_DESCEQ,   º±±
±±º          ³          FPP_HORAI , FPP_HORAF , FPP_HORTOT, FPP_QTDHR ,   º±±
±±º          ³          FPP_BASE  , FPP_VALHOR, FPP_VLTOHR, FPP_TIPO  ,   º±±
±±º          ³          FPP_VLBSEG, FPP_VALSEG, FPP_TPISS , FPP_PERISS,   º±±
±±º          ³          FPP_VALISS, FPP_PERMO , FPP_VLTOTM, FPP_VLRTOT,   º±±
±±º          ³          FPP_TRSPES, FPP_ANCORA, FPP_TELESC, FPP_MONTAG,   º±±
±±º          ³          FPP_DESMON, FPP_ACESSO, FPP_KMINI , FPP_KMFIM     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04808(PCAMPO)  

LOCAL NCALC1 := 0
LOCAL LRET   := .T.   
LOCAL CTPSERV 								// TIPO DE SERVICO PARA CALCULO DO ISS

M->FPP_DTMEDI := IIF(PCAMPO=="FPP_DTMEDI" , M->&(PCAMPO) , ACOLS[OGETZLM:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})])
M->FPP_FROTA  := IIF(PCAMPO=="FPP_FROTA"  , M->&(PCAMPO) , ACOLS[OGETZLM:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_FROTA" })])
M->FPP_BASE   := IIF(PCAMPO=="FPP_BASE"   , M->&(PCAMPO) , ACOLS[OGETZLM:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_BASE"  })])
M->FPP_VALHOR := IIF(PCAMPO=="FPP_VALHOR" , M->&(PCAMPO) , ACOLS[OGETZLM:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR"})])
M->FPP_KMFIM  := IIF(PCAMPO=="FPP_KMFIM"  , M->&(PCAMPO) , ACOLS[OGETZLM:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_KMFIM" })])
M->FPP_KMINI  := IIF(PCAMPO=="FPP_KMINI"  , M->&(PCAMPO) , ACOLS[OGETZLM:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_KMINI" })])
M->FPP_HORAI  := IIF(PCAMPO=="FPP_HORAI"  , M->&(PCAMPO) , ACOLS[OGETZLM:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORAI" })])
M->FPP_HORAF  := IIF(PCAMPO=="FPP_HORAF"  , M->&(PCAMPO) , ACOLS[OGETZLM:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORAF" })])
M->FPP_AUTORI := IIF(PCAMPO=="FPP_AUTORI" , M->&(PCAMPO) , ACOLS[OGETZLM:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_AUTORI" })])

IF LRET .AND. PCAMPO == "FPP_DTMEDI"		// DT.MEDICAO
	IF ! FCHKCONTAB(M->FPP_DTMEDI) 
		RETURN .F.
	ENDIF
 	IF FPN->FPN_DESDTR <> CTOD("//")		// BR-AS-02-00813-001-01-SP-01
 		IF M->FPP_DTMEDI > FPN->FPN_DESDTR 	// PARA NÃO DEIXAR O USUÁRIO INFORMAR DATA MAIOR QUE A DESMOBILIZAÇÃO 16/05/11
		  MSGALERT(STR0119 + DTOC(M->FPP_DTMEDI) + STR0120 + DTOC(FPN->FPN_DESDTR) + "." , STR0020)  //"VERIFIQUE A DATA INFORMADA "###" MAIOR QUE A DATA DE DESMOBILIZAÇÃO "###"GPO - LOCT035.PRW"
		  LRET := .F.                 
		ENDIF
	ENDIF
ENDIF

IF LRET .AND. PCAMPO == "FPP_AUTORI"		// AUTORIZADO
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_USRLIB"})] := SUBSTR(CUSUARIO,7,15)
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DATLIB"})] := DDATABASE
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORLIB"})]	:= TIME()
ENDIF 

IF LRET .AND. PCAMPO == "FPP_FROTA"			// FROTA
	IF ! EMPTY(M->FPP_FROTA) .AND. M->FPP_FROTA != POSICIONE("FQ5",1,XFILIAL("FQ5")+CVIAGEM,"FQ5_GUINDA") 
		MSGALERT(STR0121 , STR0020) //"A FROTA INFORMADA NÃO ESTÁ NA AS (FQ5_GUINDA)!"###"GPO - LOCT035.PRW"
		LRET := .F.
	ENDIF
	IF LRET .AND. !(ST9->(DBSEEK(XFILIAL("ST9")+M->FPP_FROTA)))
		MSGALERT(STR0122+ALLTRIM(M->FPP_FROTA)+STR0123            + CHR(13) + ; //"FROTA "###" NÃO CADASTRADA."
		         STR0124 + CHR(13) + ; //"POR ENQUANTO O SISTEMA NÃO ESTÁ BLOQUEANDO ESSA INCLUSÃO, "
		         STR0125          + CHR(13) + ; //"MAS EM POUCOS DIAS ESSA INCLUSÃO SERÁ BLOQUEADA. "
		         STR0126 , STR0020) //"FAVOR PROVIDENCIAR A INCLUSÃO DESTA FROTA COMO BEM."###"GPO - LOCT035.PRW"
	ENDIF 
ENDIF 

IF LRET .AND. PCAMPO == "FPP_BASE"		// BASE CALCULO
	IF M->FPP_BASE == "R" 
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR" }	)] := M->FPP_VALHOR := FP4->FP4_VRDIS
	ELSE
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR" }	)] := M->FPP_VALHOR := FP4->FP4_VRHOR
	ENDIF
ENDIF

IF LRET .AND. PCAMPO $ "FPP_HORAI;FPP_HORAF;FPP_HRPARA"
	CHREALI  := GDFIELDGET("FPP_HORAI")
	CHREALF  := GDFIELDGET("FPP_HORAF")
	CHPARADA := GDFIELDGET("FPP_HRPARA")

	IF PCAMPO == "FPP_HORAI"
		CHREALI   := M->FPP_HORAI
	ENDIF
	IF PCAMPO == "FPP_HORAF"
		CHREALF   := M->FPP_HORAF
	ENDIF
	IF PCAMPO == "FPP_HRPARA"
		CHPARADA  := M->FPP_HRPARA
	ENDIF

	CHRTOT   := LOCA04802(CHREALI, CHREALF)
	NALMOCO  := 0	// FPF->( LOCA04802(FPF_BXALMI, FPF_BXALMF) )
	NJANTAR  := 0	// FPF->( LOCA04802(FPF_BXJANI, FPF_BXJANF) )

	__NVALOR := FHRREAL(CHRTOT , 0 , 0 , 0) 
	GDFIELDPUT("FPP_HORTOT", __NVALOR, N)

	__NVALOR := FHRREAL(CHRTOT , NALMOCO , NJANTAR , CHPARADA) 
	GDFIELDPUT("FPP_QTDHR", __NVALOR, N)
ENDIF

IF LRET 
	// ATUALIZA TOTAL DE KM OU TOT.HORAS E BASE CALCULO
	IF OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_BASE" }	)] == "K"	// BASE CALCULO
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDKM" }	)]:= M->FPP_KMFIM - M->FPP_KMINI
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])==PCAMPO }	)]:= M->&(PCAMPO)
	ELSE
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORTOT" }	)]:=LOCA04802(M->FPP_HORAI,M->FPP_HORAF) 
		IF !(PCAMPO == "FPP_PERMO")
			OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])==PCAMPO }	)]:= M->&(PCAMPO)
		ENDIF
	ENDIF
	
	// ATUALIZA VLR SEGURO E VLR.BASE SEG
	IF OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLBSEG" }	)] > 0	// VLR.BASE SEG
		 OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG" }	)]	:=  ;
		(OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLBSEG" }	)]	* OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERSEG" }	)])/100
	ENDIF	   
	IF OGETZLM:NAT > 1 
	   OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG" }	)]:=0
	ENDIF

	// VALOR TOTAL HORAS E VLR BASE HR
	_NMINDIA := OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDHR" }	)]
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOHR" }	)]	:=  ;
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR" }	)]	* _NMINDIA

	NPERISS:=OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERISS" }	)] 	// % ISS
	
	NTPSEGUR:=OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TIPO" }	)]	// TIPO SEGURO
	
	IF NTPSEGUR == "I" .OR. NTPSEGUR == "C"	// TIPO SEGURO
		IF OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_BASE" }	)] == "K"
			NCALC1:= (OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDKM" }	)]	* OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR" }	)]) +;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ANCORA" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TELESC" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_MONTAG" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DESMON" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TRSPES" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ACESSO" }	)]
		ELSE
			NCALC1:= ( /* OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDHR" }	)]	* */ OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOHR" }	)]) +;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ANCORA" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TELESC" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_MONTAG" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DESMON" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TRSPES" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ACESSO" }	)]
		ENDIF
	ELSE
		IF OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_BASE" }	)] == "K"
			NCALC1:= (OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDKM" }	)]	* OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR" }	)]) +;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES" }	)] +;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ANCORA" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TELESC" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_MONTAG" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DESMON" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TRSPES" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ACESSO" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMO" }	)]
		ELSE
			NCALC1:= ( /* OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDHR" }	)]	*  */ OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOHR" }	)]) +;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES" }	)] +;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ANCORA" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TELESC" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_MONTAG" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DESMON" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TRSPES" }	)]  + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG" }	)]  + ;
					  OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ACESSO" }	)]  //+ OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMO" }	)]
		ENDIF
	ENDIF				

	CTPSERV := POSICIONE("FP0",1,XFILIAL("FP0")+FPN->FPN_PROJET,"FP0_TIPOSE")	  //CAROLINE
	CTPISS  := OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TPISS" }	)]
	IF CTPSERV == "T" 
		NVALISS := 0 //FCALCICMT(NCALC1,NPERISS)	
	ELSE
	    NVALISS := LOCA00158(NCALC1,NPERISS,CTPISS)
	ENDIF
	
	IF OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TPISS" }	)] == "I" .OR. OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_TPISS" }	)] == "X"
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT" }	)]	:=  NCALC1  
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALISS" }	)]	:=  (NCALC1 * NPERISS) / 100
		// VALOR TOTAL MAO DE OBRA
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOTM" }	)]	:=  ;
		(OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMO" }	)]	* (OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT" }	)])) /100				
	ELSE
		// VALOR TOTAL MAO DE OBRA
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOTM" }	)]	:=  ;
		(OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMO" }	)]	* (OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT" }	)])) / 100//(OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT" }	)] - NVALISS)) /100		
		// VALOR TOTAL 
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALISS" }	)]	:=  NVALISS		
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT" }	)]	:= NCALC1+ OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALISS" }	)] 	
	ENDIF                                               
	
	// CÁLCULO RATEIO POR FILIAL 
	// BUSCA SE O GUINDASTE É TRELIÇADO E SE É DA MATRIZ 
	NVALTOTMED := OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT"})] 
	ST9->(DBSETORDER(1))
	IF ST9->(DBSEEK(XFILIAL("ST9") + OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_FROTA"})] ))
		IF ZZM->(DBSEEK(XFILIAL("ZZM")+ST9->T9_LCTP))
			IF "TRELICAD" $ ZZM->ZZM_DESC
				NVALTOTMED -= OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB"})]
				NVALTOTMED -= OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES"})]
			ENDIF
		ENDIF
	ENDIF	         

	// CÁLCULO VALOR DO COMERCIAL
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLVND"})]  :=  ; 
	        NVALTOTMED  *  ;
            OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERVND"})]  /  100 

	// CÁLCULO VALOR DA FILIAL DO BEM/MÁQUINA
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLMAQ"})]  :=  ; 
	        NVALTOTMED  *  ;
	        OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMAQ"})]  /  100

	// CÁLCULO VALOR DA FILIAL DO OPERADOR
	OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLMAO"})]  :=  ; 
 	        NVALTOTMED  *  ;
	        OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMAO"})]  /  100

	LOCA04809()

ENDIF

OGETZLM:REFRESH()
			
RETURN LRET 



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³FCHKCONTAB º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ FUNCAO PARA CALCULAR O TOTAL DAS MEDICOES NO ACOLS PARA    º±±
±±º          ³ GRAVAR NA ZLF                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION FCHKCONTAB(DMEDICAO)

LOCAL CQUERY 
LOCAL LRET       := .F. 
LOCAL AAREA      := GETAREA() 
LOCAL CALIASTRB  := GETNEXTALIAS() 
LOCAL DMVDTFIN   := SUPERGETMV("MV_DATAFIN",.F.,"") 
LOCAL DDATINI    := DMOBDTP 
LOCAL DDATFIM    := DDESDTP 
LOCAL LVLDTMD    := SUPERGETMV("MV_LOCX222",.F.,.T.) 

IF ! LOCA02003(DMEDICAO)			// VERIFICA A DATA DO PERÍODO FINANCEIRO
	RETURN .F. 
ENDIF 

IF DMVDTFIN > DMEDICAO				// VERIFICA DATA DO FECHAMENTO CONTÁBIL
	AVISO(STR0127,STR0128,{"OK"}) //"FECHAMENTO CONTÁBIL","NÃO É PERMITIDO O LANÇAMENTO APÓS O FECHAMENTO CONTÁBIL."
	RETURN .F. 
ENDIF 

// --> NOVA TRATATIVA PARA VERIFICAR A ÚLTIMA REVISÃO DA AS. 
IF LVLDTMD 
	AAREADTQ := FQ5->(GETAREA())
	FQ5->(DBSETORDER(9))			// VERIFICA LANÇAMENTO FORA DO PERÍODO DA AS. 
	FQ5->(DBSEEK(XFILIAL("FQ5")+CAS+CVIAGEM))
	
	WHILE ! FQ5->(EOF()) .AND. FQ5->FQ5_FILIAL==XFILIAL("FQ5") .AND. FQ5->FQ5_AS == CAS .AND. FQ5->FQ5_VIAGEM == CVIAGEM
		DDATINI	:= FQ5->FQ5_DATINI 
		DDATFIM	:= FQ5->FQ5_DATFIM 
		FQ5->(DBSKIP()) 
	ENDDO 
	FQ5->(RESTAREA(AAREADTQ)) 
	
	IF (DMEDICAO < DDATINI .OR. DMEDICAO > DDATFIM) 	// .AND. !ACOLS[N,LEN(ACOLS[N])]
		AVISO(STR0129,STR0130,{"OK"}) //"PERÍODO FORA DA AS"###"NÃO É PERMITIDO O LANÇAMENTO FORA DAS DATAS INÍCIO/FIM DA AS."
		RETURN .F. 
	ENDIF 
ENDIF 

// --> VERIFICA LANÇAMENTO FORA DO PERÍODO CONTÁBIL ABERTO
CQUERY := " SELECT CTG_STATUS "
CQUERY += " FROM "+RETSQLNAME("CTG")+" CTG "
CQUERY += " WHERE  CTG_FILIAL = '"+XFILIAL("CTG")+"'"
CQUERY += "   AND  CTG_EXERC = '"+LEFT(DTOS(DMEDICAO),4)+"'"
CQUERY += "   AND  '"+DTOS(DMEDICAO)+"' BETWEEN CTG_DTINI AND CTG_DTFIM "
CQUERY += "   AND  CTG.D_E_L_E_T_ = '' "
DBUSEAREA(.T. , "TOPCONN" , TCGENQRY(,,CQUERY) , CALIASTRB , .F. , .T.) 
IF EOF()
	AVISO(STR0131 , STR0132 , {"OK"}) //"CALENDÁRIO CONTÁBIL"###"NÃO FOI ENCONTRADO CALENDÁRIO CONTÁBIL NESTE PERÍODO."
ELSE
	IF CTG_STATUS == "1"
		LRET := .T.
	ELSE
		AVISO(STR0131 , STR0133 , {"OK"}) //"CALENDÁRIO CONTÁBIL"###"O CALENDÁRIO CONTÁBIL NESTE PERÍODO NÃO ESTÁ ABERTO."
	ENDIF
ENDIF
DBCLOSEAREA()

RESTAREA(AAREA)

RETURN LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ CALCVAR() º AUTOR ³ IT UP BUSINESS     º DATA ³ 18/09/2008 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ FUNCAO PARA CALCULAR O TOTAL DAS MEDICOES NO ACOLS PARA    º±±
±±º          ³ GRAVAR NA ZLF                                              º±±
±±º          ³ CHAMADA: EXCLUSIVA NESTE FONTE.                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04809(AHEADERAUX , ACOLSAUX , LREFRESH)

LOCAL NX := 0 

// DEFAULT POR COMPATIBILIDADE
DEFAULT ACOLSAUX   := OGETZLM:ACOLS
DEFAULT AHEADERAUX := OGETZLM:AHEADER
DEFAULT LREFRESH   := .T.

// VALIDA A CRIAÇÃO DAS VARIAVEIS PRIVATES
IF TYPE("CTIPOMED") == "U"
	_SETOWNERPRVT("CTIPOMED",FPN->FPN_TIPO)
ENDIF
 
IF TYPE("NVALSERV") == "U"
	_SETOWNERPRVT("NVALSERV",0)
ENDIF

IF TYPE("NVALISS")  == "U"
	_SETOWNERPRVT("NVALISS",0)
ENDIF

IF TYPE("NVALFRE")  == "U"
	_SETOWNERPRVT("NVALFRE",0)
ENDIF

IF TYPE("NVALSEG")  == "U"
	_SETOWNERPRVT("NVALSEG",0)
ENDIF

IF TYPE("_NVLRHOR") == "U"
	_SETOWNERPRVT("_NVLRHOR",0)
ENDIF

IF TYPE("NCALC2")   == "U"
	_SETOWNERPRVT("NCALC2",0)
ENDIF

IF TYPE("NCALC3")   == "U"
	_SETOWNERPRVT("NCALC3",0)
ENDIF

IF TYPE("NVALACRE") == "U"
	_SETOWNERPRVT("NVALACRE",0)
ENDIF

IF TYPE("NVALARRE") == "U"
	_SETOWNERPRVT("NVALARRE",0)
ENDIF

IF TYPE("NVALDESC") == "U"
	_SETOWNERPRVT("NVALDESC",0)
ENDIF

IF TYPE("NVALTOT")  == "U"
	_SETOWNERPRVT("NVALTOT",0)
ENDIF

IF TYPE("NVALBKP")  == "U"
	_SETOWNERPRVT("NVALBKP",0)
ENDIF

NVALSERV:= 0
NVALISS:= 0 
NCALC3 :=0

FOR NX:=1 TO LEN(ACOLSAUX)
	IF !GDDELETED(NX,AHEADERAUX,ACOLSAUX) .AND. IIF( CTIPOMED == "C", GDFIELDGET("FPP_ALTER",NX,.F.,AHEADERAUX,ACOLSAUX) == "S", .T.)			   
		IF GDFIELDGET("FPP_TPISS",NX,.F.,AHEADERAUX,ACOLSAUX) == "I" .OR. GDFIELDGET("FPP_TPISS",NX,.F.,AHEADERAUX,ACOLSAUX) == "X"
			NVALSERV :=  NVALSERV + GDFIELDGET("FPP_VLRTOT",NX,.F.,AHEADERAUX,ACOLSAUX)
		ELSE                        
			NCALC2	 := GDFIELDGET("FPP_VLTOHR",NX,.F.,AHEADERAUX,ACOLSAUX) 
			NCALC3	 += GDFIELDGET("FPP_VLTOHR",NX,.F.,AHEADERAUX,ACOLSAUX)
			NVALISS  += GDFIELDGET("FPP_VALISS",NX,.F.,AHEADERAUX,ACOLSAUX)
			NVALSERV += GDFIELDGET("FPP_VLRTOT",NX,.F.,AHEADERAUX,ACOLSAUX)  - GDFIELDGET("FPP_VALISS",NX,.F.,AHEADERAUX,ACOLSAUX) 
		ENDIF					
	ENDIF
NEXT

NVALTOT  := (NVALSERV + NVALISS+ NVALFRE + NVALSEG + _NVLRHOR + NVALACRE + NVALARRE) - NVALDESC
NVALSERV := (NVALSERV + NVALACRE + NVALARRE)	
NVALBKP  := NCALC3

IF LREFRESH
	OVALSERV:REFRESH()
	OVALISS:REFRESH()
	OVALTOT:REFRESH()
	OVALDESC:REFRESH()
ENDIF

RETURN



// ======================================================================= \\
FUNCTION LOCA04810() 			// MUDA O BROWSE
// ======================================================================= \\
// --> CHAMADA: EXCLUSIVA NESTE FONTE. 

LOCAL LRET  := .T.
LOCAL CITEM := ""

IF OGETZLM:NAT > 1
	IF EMPTY(OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_FROTA" }	)])
		_CLINHA  += STRZERO(OGETZLM:NAT,3,0) + "|"
		_CFROTA  := OGETZLM:ACOLS[OGETZLM:NAT-1][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_FROTA" }	)]
		_CDESCEQ := OGETZLM:ACOLS[OGETZLM:NAT-1][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DESCEQ"}	)]
		CITEM    := OGETZLM:ACOLS[OGETZLM:NAT-1][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"}	)]
		
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_FROTA" })] := _CFROTA
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DESCEQ"})] := _CDESCEQ
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM" })] := SOMA1(CITEM)
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERSEG"})] := 0
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLBSEG"})] := 0
		OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})] := 0
		LOCA04806(CPROJETO , COBRA , CAS , CVIAGEM , CTPAS) 
		
		NTOTHRREAL := 0
		AEVAL(OGETZLM:ACOLS,{|X,L| IF( !GDDELETED(L,OGETZLM:AHEADER,OGETZLM:ACOLS),NTOTHRREAL += GDFIELDGET("FPP_QTDHR",L,.F.,OGETZLM:AHEADER,OGETZLM:ACOLS) ,)}) 
		OTOTHRREAL:REFRESH()
	ENDIF
ENDIF 

OGETZLM:OBROWSE:REFRESH()

RETURN LRET  



// ======================================================================= \\
FUNCTION LOCA04811() 		// TELA DE DIGITACAO DE OBSERVAÇÕES  
// ======================================================================= \\
// --> CHAMADA: EXCLUSIVA NESTE FONTE. 
  
LOCAL ODLG		:= NIL

DEFINE MSDIALOG ODLG TITLE STR0134 FROM 000,000 TO 036,060 OF OMAINWND //"TELA DE OBSERVACOES"
	@ 005,010 SAY OEMTOANSI(STR0135) OF ODLG PIXEL  //"OBS. GERAL"
	@ 012,010 GET OOBSG VAR COBSG  SIZE 220,70 OF ODLG PIXEL MEMO WHEN LEDITA 
	
	@ 087, 010 SAY OEMTOANSI(STR0136) OF ODLG PIXEL //"OBS. DESCONTO"
	@ 094, 010 GET OOBSD VAR COBSD  SIZE 220,70 OF ODLG PIXEL MEMO WHEN LEDITA 
	
	@ 169, 010 SAY OEMTOANSI(STR0137) OF ODLG PIXEL //"OBS. ACRESCIMO"
	@ 176, 010 GET OOBSA VAR COBSA  SIZE 220,70 OF ODLG PIXEL MEMO WHEN LEDITA 
	DEFINE SBUTTON FROM 255,010 TYPE 1 ACTION (ODLG:END()) ENABLE OF ODLG 
ACTIVATE DIALOG ODLG CENTERED   

RETURN



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ DELEZLF   º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ FUNCAO EXECUTADA AO DELETAR LINHA NO ACOLS PARA SUBTRAIR O º±±
±±º          ³ VALOR DA LINHA TO TOTAL DA MEDICAO                         º±±
±±º          ³ CHAMADA: EXCLUSIVA NESTE FONTE.                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04812(NVALSERV , NVALISS) 

LOCAL CMINATU := ""
LOCAL NPOS    := 0 

IF LOCA04807("") .AND. _LAUTOR							// SE ESTÁ NO CADASTRO DE PESSOAS AUTORIZADAS PERMITO MANUTENÇÃO
	NVALSERV := 0
	NVALISS  := 0

	IF  OGETZLM:ACOLS[OGETZLM:NAT][LEN(OGETZLM:AHEADER)+1]
		OGETZLM:ACOLS[OGETZLM:NAT][LEN(OGETZLM:AHEADER)+1] := .F.
	ELSE   
		OGETZLM:ACOLS[OGETZLM:NAT][LEN(OGETZLM:AHEADER)+1] := .T.
	ENDIF   

    CMINATU := OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X| ALLTRIM(X[2]) == "FPP_MINUTA" } )]
	// CASO EXISTA MAIS DE UMA LINHA COM A MESMA MINUTA, DEVE-SE MARCAR TODAS
   	FOR NPOS := 1 TO LEN(OGETZLM:ACOLS)
		IF NPOS <> OGETZLM:NAT .AND. CMINATU == OGETZLM:ACOLS[NPOS][ASCAN(OGETZLM:AHEADER,{|X| ALLTRIM(X[2]) == "FPP_MINUTA" } )]
			IF  OGETZLM:ACOLS[NPOS][LEN(OGETZLM:AHEADER)+1]
				OGETZLM:ACOLS[NPOS][LEN(OGETZLM:AHEADER)+1] := .F.
			ELSE   
				OGETZLM:ACOLS[NPOS][LEN(OGETZLM:AHEADER)+1] := .T.
			ENDIF
		ENDIF
   	NEXT NPOS

	LOCA04809()

	OGETZLM:REFRESH()
	OVALSERV:REFRESH()
	OVALISS:REFRESH()
	OVALTOT:REFRESH()
	OTELA:REFRESH()
ELSE		
	MSGALERT(STR0138 , STR0020) //"USUÁRIO SEM PERMISSÃO PARA EXCLUIR MEDIÇÕES."###"GPO - LOCT035.PRW"
ENDIF

RETURN 



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ ZLMWHEN º AUTOR  ³ IT UP BUSINESS      º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ FUNÇÃO CRIADA PARA VALIDAR ALTERAÇÕES (X3_WHEN) NOS CAMPOS º±±
±±º          ³ DA MEDIÇÃO - TABELA ZLM.                                   º±±
±±º          ³      FPP_FILIAL , FPP_COD    , FPP_OS     , FPP_DTMEDI ,   º±±
±±º          ³      FPP_FROTA  , FPP_DESCEQ , FPP_HORAI  , FPP_HORAF  ,   º±±
±±º          ³      FPP_HORTOT , FPP_QTDHR  , FPP_BASE   , FPP_VALHOR ,   º±±
±±º          ³      FPP_VLTOHR , FPP_VLRMOB , FPP_VLRDES , FPP_TIPO   ,   º±±
±±º          ³      FPP_PERSEG , FPP_VLBSEG , FPP_VALSEG , FPP_TPISS  ,   º±±
±±º          ³      FPP_PERISS , FPP_VALISS , FPP_PERMO  , FPP_VLTOTM ,   º±±
±±º          ³      FPP_VLRTOT , FPP_TRSPES , FPP_MONTAG , FPP_DESMON ,   º±±
±±º          ³      FPP_CODLCR , FPP_ACESSO , FPP_ITEMBA , FPP_LINHA  ,   º±±
±±º          ³      FPP_OMPJ   , FPP_CCUSTO , FPP_CODGER , FPP_KMINI  ,   º±±
±±º          ³      FPP_KMFIM  , FPP_QTDKM  , FPP_USERGI , FPP_USERGA     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04813()

LOCAL _LRET := .F.

IF GDFIELDGET("FPP_LIBER",OGETZLM:NAT,.F.) == "1" 
	MSGALERT(STR0139 , STR0020) //"ITEM DA MEDIÇÃO NÃO PODE SER ALTERADO POIS JÁ ESTÁ LIBERADO."###"GPO - LOCT035.PRW"
	RETURN .F.
ENDIF

IF STRZERO(OGETZLM:NAT,3,0) $ _CLINHA	// SE É UMA NOVA LINHA PERMITO MANUTENÇÃO
	_LRET := .T.
ELSE
	IF _LAUTOR							// SE ESTÁ NO CADASTRO DE PESSOAS AUTORIZADAS PERMITO MANUTENÇÃO
		_LRET := .T.
	ELSE		
		MSGALERT(STR0140 , STR0020) //"USUÁRIO SEM PERMISSÃO PARA ALTERAR MEDIÇÕES."###"GPO - LOCT035.PRW"
	ENDIF
ENDIF

RETURN _LRET



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ SENHAMED  º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ AUTORIZA A O USUÁRIO EFETUAR A MANUTENÇÃO NA MEDIÇÃO       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
// --> CHAMADA NO  CAMPO : FPP_AUTORI 
/*/
FUNCTION LOCA04814()

LOCAL CUSER		:= SUBSTR(CUSUARIO,7,15)
LOCAL CSENHAD	:= ""
LOCAL CSENHAG	:= ""
LOCAL LOK  		:= .F.
LOCAL LRET 		:= .F.
LOCAL ODLGZLM



CSENHAD	:= SPACE(LEN(ALLTRIM(SUPERGETMV("MV_LOCX183",.F.,""))))
CSENHAG	:= ALLTRIM(SUPERGETMV("MV_LOCX183",.F.,""))

DEFINE MSDIALOG ODLGZLM TITLE STR0141 FROM 000,000 TO 180,250 PIXEL //"SENHA PARA LIBERAR A MEDIÇÃO / PARTE DIÁRIA [MV_LOCX183]"
	@ 010,010 TO 80,120
	@ 020,013 SAY OEMTOANSI(STR0142) 									OF ODLGZLM PIXEL //"INFORME O USUARIO:"
	@ 040,013 SAY OEMTOANSI(STR0143) 									OF ODLGZLM PIXEL //"INFORME A SENHA:"
	@ 020,060 GET CUSER		SIZE 50,8 PICTURE "@!" VALID !EMPTY(CUSER) 				OF ODLGZLM PIXEL
	@ 040,060 GET CSENHAD	SIZE 50,8 PICTURE "@!" VALID !EMPTY(CSENHAD) PASSWORD	OF ODLGZLM PIXEL
	@ 063,059 BMPBUTTON TYPE 1 ACTION {LOK := .T.,ODLGZLM:END()} 
	@ 063,089 BMPBUTTON TYPE 2 ACTION {LOK := .F.,ODLGZLM:END()} 
ACTIVATE MSDIALOG ODLGZLM CENTERED

IF LOK
	IF LEN(ALLTRIM(CSENHAD)) == LEN(CSENHAG)
		IF UPPER(ALLTRIM(CSENHAD)) $ UPPER(CSENHAG)
			LRET := .T.
			LOCA04808("FPP_AUTORI")
		ELSE
			MSGALERT(STR0144 , STR0020) //"SENHA ESTA INCORRETA!"###"GPO - LOCT035.PRW"
			LRET := .F.
		ENDIF
	ELSE
		MSGALERT(STR0145 , STR0020) //"SENHA ESTA INCOMPLETA!"###"GPO - LOCT035.PRW"
		LRET := .F.
	ENDIF
ELSE
	MSGALERT(STR0146 , STR0020) //"OPERAÇÃO CANCELADA!"###"GPO - LOCT035.PRW"
	LRET := .F.
ENDIF

RETURN LRET



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ LC035IP   º AUTOR  ³ IT UP BUSINESS    º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ INICIALIZADOR PADRÃO DOS CAMPOS  (FPP_VENDA, FPP_MAQUIN E  º±±
±±º          ³ FPP_MAO) REFERENTE AO RATEIO DE FILIAIS                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
FUNCTION LOCA04815(CCAMPO)

LOCAL XRET
LOCAL _FILIAL  := XFILIAL("FQ5")
LOCAL CTPSEGM  := ""
LOCAL AAREADTQ := FQ5->(GETAREA())
LOCAL AAREAZA5 := FP4->(GETAREA())
LOCAL AAREAZAG := FPA->(GETAREA())
LOCAL XPROJET
LOCAL XOBRA
LOCAL XVIAGEM
LOCAL XAS

IF INCLUI
	XPROJET	:= CPROJETO
	XOBRA	:= COBRA
	XVIAGEM	:= CVIAGEM
	XAS		:= CAS
ELSE
	XPROJET	:= FPN->FPN_PROJET
	XOBRA	:= FPN->FPN_OBRA
	XVIAGEM	:= FPN->FPN_VIAGEM
	XAS		:= FPN->FPN_AS
ENDIF

FQ5->(DBSETORDER(1))			// FQ5_FILIAL + FQ5_VIAGEM
IF FQ5->(DBSEEK(XFILIAL("FQ5")+XVIAGEM))
	_FILIAL := FQ5->FQ5_FILORI
	CTPSEGM := FQ5->FQ5_TPAS
ENDIF
FQ5->(RESTAREA(AAREADTQ))

IF CCAMPO == "FPP_VENDA"
	XRET := _FILIAL
ELSE 
	XRET := IIF(LEFT(CCAMPO,6)== "FPP_MA", _FILIAL, 0)
	IF CTPSEGM == "G"			// SEGMENTO GUINDASTES
		FP4->(DBSETORDER(3))	// FP4_FILIAL + FP4_AS + FP4_VIAGEM
		IF FP4->(DBSEEK(_FILIAL+XAS+XVIAGEM))
			IF LEFT(CCAMPO,6)== "FPP_MA"
				IF CCAMPO == "FPP_MAQUIN"
					XRET := FP4->FP4_FLMAQ
				ENDIF
				IF CCAMPO == "FPP_MAO"
					XRET := FP4->FP4_FLMO
				ENDIF
    		ELSE
				IF ZLK->(DBSEEK(XFILIAL("ZLK")+FP4->FP4_RATEIO))
					XRET := &("ZLK->"+CCAMPO)
				ENDIF
			ENDIF
		ENDIF
		FP4->(RESTAREA(AAREAZA5))
	ELSEIF CTPSEGM == "U"		// SEGMENTO GRUAS
		FPA->(DBSETORDER(2))	// FPA_FILIAL + FPA_PROJET + FPA_OBRA + FPA_AS + FPA_VIAGEM
		IF FPA->(DBSEEK(_FILIAL+XPROJET+XOBRA+XAS+XVIAGEM))
			IF LEFT(CCAMPO,6)== "FPP_MA"
				IF CCAMPO == "FPP_MAQUIN"
					XRET := FPA->FPA_FLMAQ
				ENDIF
				IF CCAMPO == "FPP_MAO"
					XRET := FPA->FPA_FLMO
				ENDIF
			ELSE
				IF ZLK->(DBSEEK(XFILIAL("ZLK")+FPA->FPA_RATEIO))
					XRET := &("ZLK->"+CCAMPO)
				ENDIF
			ENDIF
		ENDIF
		FPA->(RESTAREA(AAREAZAG))
	ENDIF
ENDIF

RETURN XRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ FVLFIELD  º AUTOR ³ IT UP BUSINESS     º DATA ³ 22/08/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION FVLFIELD(CFIELD, OOBJECT)
	
IF REPLACE(REPLACE(CFIELD,"M->",""),"FPP->","") == "FPP_QTDHR"
	NTOTHRREAL := 0
	AEVAL(OGETZLM:ACOLS,{|X,L| IF( !GDDELETED(L,OGETZLM:AHEADER,OGETZLM:ACOLS),NTOTHRREAL += GDFIELDGET("FPP_QTDHR",L,.F.,OGETZLM:AHEADER,OGETZLM:ACOLS) ,)}) 
	OTOTHRREAL:REFRESH()
ENDIF

IF LCOMP 		// .AND. REPLACE(REPLACE(CFIELD,"M->",""),"FPP->","") $ "FPP_VALHOR/FPP_BASE/FPP_HORAI/FPP_HORAF/FPP_HRPARA/FPP_MOTIVO/FPP_HORTOT/FPP_QTDHR" 
	// --> ALTERA A LINHA PARA ALTERADA
	GDFIELDPUT("FPP_ALTER","S", OOBJECT:OBROWSE:NAT, OOBJECT:AHEADER, OOBJECT:ACOLS,.F.)
ENDIF

RETURN .T.



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ MUDLEG    º AUTOR ³ IT UP BUSINESS     º DATA ³ 28/08/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ CHAMADA: VIA MENU - "MUDAR SITUAÇÃO"                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04816()

LOCAL ODIALOG
LOCAL ASITUA  := { STR0147,STR0148, STR0149 } //"1=DIGITADO"###"2=CONFIRMADO"###"6=CANCELADO"
LOCAL OSITUA , OBUTOK , OBUTCLOSE 
LOCAL NACTION := 0
LOCAL CALIAS  := GETNEXTALIAS()
LOCAL CALIASTRB := GETNEXTALIAS()
LOCAL AAREA	  := FPN->(GETAREA())

PRIVATE CSITUA  

IF !(FPN->FPN_SITUAC $ "1/2")
	MSGALERT(STR0150 , STR0020) //"SÓ PODE MUDAR SITUAÇÃO DE MEDIÇÕES 'DIGITADA' OU 'CONFIRMADA'."###"GPO - LOCT035.PRW"
	RETURN
ENDIF

REGTOMEMORY("FPN",.T.) //CABECALHO MEDICAO

CSITUA := FPN->FPN_SITUAC

DEFINE MSDIALOG ODIALOG FROM 0,0 TO 070,180  TITLE STR0151 PIXEL //"SELECIONE SITUAÇÃO"
	@ 001 ,001 SAY      OEMTOANSI(STR0152 )                                SIZE 50,8 PIXEL OF ODIALOG //"SITUAÇÃO"
	@ 001 ,040 COMBOBOX OSITUA VAR CSITUA ITEMS ASITUA  VALID PERTENCE("126") SIZE 50,8 PIXEL OF ODIALOG 
	
	@ 015, 001 BUTTON OBUTOK    PROMPT STR0153 SIZE 40,10 ACTION (NACTION := 1, ODIALOG:END()) OF ODIALOG PIXEL 	//WHEN LEDITA //"CONFIRMAR"
	@ 015, 050 BUTTON OBUTCLOSE PROMPT STR0154  SIZE 40,10 ACTION (NACTION := 0, ODIALOG:END()) OF ODIALOG PIXEL 	//WHEN LEDITA //"CANCELAR"
ACTIVATE MSDIALOG ODIALOG CENTERED 

IF NACTION == 0	
	RETURN
ENDIF

// Frank Zwarg Fuga em 20/09/2021
// Só pode ser cancelada a última medição ativa.
// Este controle tem haver com o retorno da numeração do bem.
If CSITUA == "6"
	_cProjet := FPN->FPN_PROJET
	IF SELECT("CALIASTRB") > 0
		(CALIASTRB)->(DBCLOSEAREA())
	ENDIF
	CQUERY := " SELECT FPN_COD FROM "+RETSQLNAME("FPN")
	CQUERY += " WHERE FPN_PROJET = '"+_cProjet+"' AND "
	CQUERY += " FPN_SITUAC <> '6' AND D_E_L_E_T_='' AND FPN_COD > '"+FPN->FPN_COD+"' "
	DBUSEAREA(.T. , "TOPCONN" , TCGENQRY(,,CQUERY) , CALIASTRB , .F. , .T.) 	

	If !(CALIASTRB)->(EOF())
		MsgAlert(STR0186,STR0182) //"Só pode ser cancelada a última medição."###"Atenção!"
		RestArea(aarea)
		Return .F.
	EndIf

	(CALIASTRB)->(DBCLOSEAREA())

	RestArea(aarea)

EndIF

BEGINSQL ALIAS CALIAS
	SELECT 
		R_E_C_N_O_ REC
	FROM 
		%TABLE:FPN%
	WHERE
		%NOTDEL%					AND
		FPN_FILIAL 	= %EXP:FPN->FPN_FILIAL%	AND
		FPN_COD		= %EXP:FPN->FPN_COD%
ENDSQL

DBSELECTAREA(CALIAS)

WHILE (CALIAS)->(!EOF())
	FPN->(DBGOTO((CALIAS)->REC))
	RECLOCK("FPN",.F.)
		FPN->FPN_SITUAC := CSITUA
		IF CSITUA == "6" .AND. FPN->FPN_TIPO $ "C/F"
			FPN->FPN_VALTOT := 0
			FPN->FPN_VALSER := 0
			FPN->FPN_MEDSEQ := SPACE(LEN(FPN->FPN_MEDSEQ))
		ENDIF
	FPN->(MSUNLOCK())
	(CALIAS)->(DBSKIP())
ENDDO 

(CALIAS)->(DBCLOSEAREA())

IF CSITUA == "6"    
	DBSELECTAREA("FPP") 
	FPP->(DBSETORDER(4)) 
	
	IF FPP->(DBSEEK(FPN->FPN_FILIAL + FPN->FPN_COD + "C")) 
		WHILE FPP->(!EOF()) .AND. FPP->FPP_FILIAL == FPN->FPN_FILIAL .AND. FPP->FPP_COD == FPN->FPN_COD .AND. FPP->FPP_TPMEDI == "C"

			// VERIFICA SE TEM MINUTA VINCULADA A MEDIÇÃO, CASO HOUVER, VOLTA O STATUS PARA BAIXADO E LIMPA O NUMERO DA MEDIÇÃO
			FPF->(DBSETORDER(2)) //FPF_FILIAL + FPF_MINUTA
			IF FPF->(DBSEEK(XFILIAL("FPF") + FPP->FPP_MINUTA))
				FPF->(RECLOCK("FPF", .F.))
				FPF->FPF_STATUS := "3"
				FPF->FPF_NROMED := ""
				FPF->(MSUNLOCK())
			ENDIF

			FPP->(RECLOCK("FPP",.F.))
			FPP->FPP_QTDHR  := 0 
			FPP->FPP_VLRTOT := 0 
			FPP->FPP_HRPARA := "09:00" 
			IF FPP->(FIELDPOS("FPP_MINUTA")) > 0
				FPP->FPP_MINUTA := ""
			ENDIF
			FPP->(MSUNLOCK())
			FPP->(DBSKIP())
		ENDDO 
	ENDIF
	
	IF FPP->(DBSEEK(FPN->FPN_FILIAL + FPN->FPN_COD + "F")) 
		WHILE FPP->(!EOF()) .AND. FPP->FPP_FILIAL == FPN->FPN_FILIAL .AND. FPP->FPP_COD == FPN->FPN_COD .AND. FPP->FPP_TPMEDI == "F"
			// VERIFICA SE TEM MINUTA VINCULADA A MEDIÇÃO, CASO HOUVER, VOLTA O STATUS PARA BAIXADO E LIMPA O NUMERO DA MEDIÇÃO
			FPF->(DBSETORDER(2)) 		// FPF_FILIAL + FPF_MINUTA
			IF FPF->(DBSEEK(XFILIAL("FPF") + FPP->FPP_MINUTA))
				FPF->(RECLOCK("FPF",.F.))
				FPF->FPF_STATUS := "3"
				FPF->FPF_NROMED := ""
				FPF->(MSUNLOCK())
			ENDIF

			FPP->(RECLOCK("FPP",.F.))
			FPP->FPP_QTDHR  := 0 
			FPP->FPP_VLRTOT := 0 
			FPP->FPP_HRPARA := "09:00" 
			IF FPP->(FIELDPOS("FPP_MINUTA")) > 0
				FPP->FPP_MINUTA := ""
			ENDIF 
			FPP->(MSUNLOCK())
			FPP->(DBSKIP())
		ENDDO 
	ENDIF

    IF EXISTBLOCK("LC35PCAN")	// PONTO DE ENTRADA PARA APÓS O CANCELAMENTO DA MEDIÇÃO
		EXECBLOCK("LC35PCAN",.T.,.T.,{FPN->FPN_AS})
	ENDIF	    

ENDIF

RESTAREA(AAREA)

RETURN



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ FEXISTCC º AUTOR ³ IT UP BUSINESS      º DATA ³ 19/12/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDACAO DA EXISTENCIA DO CC NA TABELA CTT                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION FEXISTCC(CCC)

LOCAL LRET := .F.

IF !EMPTY(CCC) .AND. CTB105CC(CCC)
	LRET := .T.
ENDIF

RETURN LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ FEXISTNAT º AUTOR ³ IT UP BUSINESS    º DATA ³  19/12/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDACAO DA EXISTENCIA DA NATUREZA NA TABELA SED          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION FEXISTNAT(CNATUREZ)

LOCAL LRET := .F.

IF EMPTY(ALLTRIM(CNATUREZ))
	LRET := .T.
ELSEIF FINVLDNAT(.F.,CNATUREZ)
	IF SED->(FIELDPOS("ED_MSBLQL")) > 0 .AND. POSICIONE("SED",1,XFILIAL("SED")+CNATUREZ,"ED_MSBLQL") == "1"
		SHOWHELPDLG(STR0155,{STR0156},1,{STR0157},1) //"NATUREZA BLOQUEADA"###"A NATUREZA SELECIONA ESTA BLOQUEADA PARA USO."###"SELECIONE OUTRA NATUREZA!"		
		LRET := .F.
	ELSE
		LRET := .T.
	ENDIF
ENDIF

RETURN LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ F035ESTPV º AUTOR ³ IT UP BUSINESS     º DATA ³ 20/12/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ ESTORNAR PV GERADO VIA MEDIÇÃO.                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04817() 

LOCAL ACABPV   := {}
LOCAL AITEMSC6 := {}
LOCAL AITEMPV  := {}
LOCAL CALIAS   := ""
LOCAL CFILBKP  := CFILANT

PRIVATE LMSERROAUTO := .F.    

DBSELECTAREA("SC5")
SC5->(DBSETORDER(1))

// --> VALIDA SE A MEDIÇÃO POSSUI PEDIDO DE VENDA
IF !EMPTY(FPN->FPN_NUMPV) .AND. !EMPTY(FPN->FPN_FILPV) .AND. FPN->FPN_SITUAC == "4" 

	// --> VALIDA SE O PEDIDO DE VENDAS EXISTE
	IF SC5->(MSSEEK(FPN->FPN_FILPV+FPN->FPN_NUMPV))

		// --> VALIDA SE O PEDIDO DE VENDAS FOI FATURADO
		IF EMPTY(SC5->C5_NOTA)

			// --> INICIA PROCESSO TRANSACIONAL -----------------------------
			BEGINTRAN()
			
				// --> MUDA O STATUS DO PEDIDO DE VENDAS
				RECLOCK("SC5",.F.)			
				SC5->C5_LIBEROK := ""
				SC5->(MSUNLOCK())
					
				// --> CARREGA INFORMACOES DO CABECALHO DO PEDIDO DE VENDA. 
				ACABPV   := RETARRAUTO("SC5")	
				
				// --> ZERA O CONTEUDO DAS VARIAVEIS DOS ITENS DO PEDIDO DE VENDAS
				AITEMSC6 := {}
				AITEMPV	 := {}
				CCODMED	 := ""
					
				// --> ABRE O ALIAS DOS ITENS
				DBSELECTAREA("SC6")
				SC6->(DBSETORDER(1))
				
				// --> POSICIONA NO ITERM DO PEDIDO			
				SC6->(MSSEEK(SC5->C5_FILIAL+SC5->C5_NUM))
				
				// --> ENQUANTO FOR O MESMO PEDIDO
				WHILE !EOF() .AND. SC6->C6_FILIAL == SC5->C5_FILIAL .AND. SC6->C6_NUM == SC5->C5_NUM
					// -->  ESTORNA DA LIBERAÇÃO DO ITEM DO PEDIDO DE VENDA. 
					RECLOCK("SC6",.F.)			
					SC6->C6_QTDLIB := 0
					SC6->C6_QTDEMP := 0 
					SC6->(MSUNLOCK()) 
					
					DBSELECTAREA("SC9")
					DBSETORDER(1)
					IF MSSEEK(SC6->C6_FILIAL+SC6->C6_NUM+SC6->C6_ITEM)		    					
						RECLOCK("SC9", .F.)
						SC9->C9_QTDLIB	:= 	0
						SC9->(MSUNLOCK())			
					ENDIF
				
					// --> CARREGA INFORMACOES DOS ITENS DO PEDIDO. 
					AITEMSC6 := RETARRAUTO("SC6")	
					
					// --> ADICIONA AO ARRAY QUE SERA UTILIZADO NA ROTINA MSEXECAUTO
					AADD(AITEMPV,ACLONE(AITEMSC6))
																	
					AITEMSC6 := {}				
					SC6->(DBSKIP())				
				ENDDO 
				
				// --> VALIDA SE OS ARRAYS FORAM PREENCHIDOS
				IF LEN(ACABPV) > 0 .AND. LEN(AITEMPV) > 0
					// --> ALTERA A FILIAL CORRENTE PARA A FILIAL DO PEDIDO
					CFILANT := SC5->C5_FILIAL
					
					// --> EXECUTA A ROTINA AUTOMATICA
					MSEXECAUTO({|X,Y,Z|MATA410(X,Y,Z)},ACABPV,AITEMPV,5) 
					
					// --> VALIDA SE A ROTINA RETORNOU ERRO
					IF LMSERROAUTO
						MOSTRAERRO() 				// --> MOSTRA ERRO
						DISARMTRANSACTION() 		// --> EFETUA ROLLBACK DA TRANSAÇÃO
					ELSE					   		
				   		CALIAS := GETNEXTALIAS() 	// --> RETORNA O PROXIMO ALIAS DISPONIVEL PARA UTILIZAR NA QUERY
				   		// --> QUERY PARA RETORNAR TODAS AS MEDIÇÕES (F,N,C) 
				   		//BEGINSQL ALIAS CALIAS
				   		//	SELECT R_E_C_N_O_ REC FROM %TABLE:FPN% WHERE %NOTDEL% AND FPN_FILIAL = %EXP:FPN->FPN_FILIAL% AND FPN_COD = %EXP:FPN->FPN_COD%
				   		//ENDSQL

						BEGINSQL ALIAS CALIAS
						SELECT 
							R_E_C_N_O_ REC
						FROM 
							%TABLE:FPN%
						WHERE
							%NOTDEL%					AND
							FPN_FILIAL 	= %EXP:FPN->FPN_FILIAL%	AND
							FPN_COD		= %EXP:FPN->FPN_COD%
						ENDSQL

				   		// --> ENQUANTO NÃO FOR FINAL DO ARQUIVO
			   			WHILE (CALIAS)->(!EOF()) 
			   				DBSELECTAREA("FPN")
			   				FPN->(DBGOTO((CALIAS)->REC))	// --> POSICIONA NO RECNO DA QUERY
			   				//LIMPA O CAMPO DE FILIAL, PEDIDO E VOLTA O STATUS DA MEDIÇÃO PARA 1
				   			RECLOCK("FPN",.F.)
			   				FPN->FPN_FILPV  := ""
							FPN->FPN_NUMPV  := ""
							FPN->FPN_SITUAC := "1"
				   			FPN->(MSUNLOCK())	
				   			(CALIAS)->(DBSKIP())
				   		ENDDO 
				   		(CALIAS)->(DBCLOSEAREA())
					ENDIF
				ENDIF 

			ENDTRAN()	
			// --> FINALIZA PROCESSO TRANSACIONAL ---------------------------

			// --> DESTRAVA TODOS OS REGISTROS LOCADOS (UTILIZADO POR CONTA DA TRANSAÇÃO)
			MSUNLOCKALL()
					


		ELSE				// --> IF EMPTY(SC5->C5_NOTA) 
			AVISO(STR0158,STR0159+CRLF+; //"ATENÇÃO"###"PEDIDO DE VENDAS JÁ FATURADO!"
					STR0160+SC5->C5_FILIAL+CRLF+; //"FILIAL: "
					STR0161+SC5->C5_NOTA+CRLF+; //"NOTA  : "
					STR0162+SC5->C5_SERIE,{"OK"}) //"SERIE : "
		ENDIF				// --> IF EMPTY(SC5->C5_NOTA) 
		
	ELSE					// --> IF SC5->(MSSEEK(FPN->FPN_FILPV+FPN->FPN_NUMPV))
		AVISO(STR0163,STR0164+CRLF+; //"ATENÇÃO"###"NÃO FOI POSSIVEL ENCONTRAR O PEDIDO DE VENDAS DESTA MEDIÇÃO!"
				STR0165+FPN->FPN_FILPV+CRLF+; //"FILIAL: "
				STR0166+FPN->FPN_NUMPV,{"OK"}) //"PEDIDO: "
	ENDIF 					// --> IF SC5->(MSSEEK(FPN->FPN_FILPV+FPN->FPN_NUMPV))
	
ELSE 						// --> IF !EMPTY(FPN->FPN_NUMPV) .AND. !EMPTY(FPN->FPN_FILPV) .AND. FPN->FPN_SITUAC == "4" 
	AVISO(STR0167,STR0168,{"OK"}) //"ATENÇÃO"###"ESTA MEDIÇÃO NÃO POSSUI PEDIDO DE VENDAS!"
ENDIF 						// --> IF !EMPTY(FPN->FPN_NUMPV) .AND. !EMPTY(FPN->FPN_FILPV) .AND. FPN->FPN_SITUAC == "4" 

CFILANT := CFILBKP	

RETURN



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ RETARRAUTO º AUTOR ³ IT UP BUSINESS    º DATA ³ 22/08/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION RETARRAUTO(CALIAS)

LOCAL AAREA    := (CALIAS)->(GETAREA())
LOCAL AAREASX3 := (LOCXCONV(1))->(GETAREA())
LOCAL AAUTO    := {}
LOCAL BEXEC    := {||AADD(AAUTO, { ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")), (CALIAS)->&(ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO"))), NIL} )}  
LOCAL BFOR     := {||(X3USO(GetSx3Cache(&(LOCXCONV(2)),"X3_USADO")) .AND. GetSx3Cache(&(LOCXCONV(2)),"X3_CONTEXT") <> "V") .OR. PREFIXOCPO(CALIAS)+"_FILIAL" == ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO"))}   
LOCAL BWHILE   := {||GetSx3Cache(&(LOCXCONV(2)),"X3_ARQUIVO") == CALIAS}  

DBSELECTAREA("SX3")
(LOCXCONV(1))->( DBSETORDER(1) )
(LOCXCONV(1))->( DBSEEK(CALIAS) )

(LOCXCONV(1))->(DBEVAL(BEXEC, BFOR , BWHILE))

RESTAREA(AAREASX3)
RESTAREA(AAREA)	

RETURN(AAUTO)



// ======================================================================= \\
STATIC FUNCTION FCALCCOMIS()
// ======================================================================= \\

RETURN NIL								// DESCONTINUADO 
/*
LOCAL NVALOR := 0       

FOR NX := 1 TO LEN(OGETZLM:ACOLS)
	NVALOR += OGETZLM:ACOLS[NX][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"}	)]
	NVALOR += OGETZLM:ACOLS[NX][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALISS"}	)]
NEXT NX    
NVALOR    += NVALPEDAG 
NDESCOMIS := NVALOR
ODESCOMIS:REFRESH()
OPANEL3:REFRESH()

RETURN
*/



// ======================================================================= \\
STATIC FUNCTION FCALCULAHE(LPERGUNTA) 	// CALCULA AS HORAS EXTRAS
// ======================================================================= \\
LOCAL ACOLSGRV  := {}
LOCAL ATURNOS   := {}
LOCAL AACRES    := {}

LOCAL NPOS
LOCAL DCORRENTE
LOCAL NDIASEM

LOCAL NVALORR
LOCAL CHORAR
LOCAL NHORAR
LOCAL _NZ
LOCAL NTMPTUR
LOCAL NDIF
LOCAL NPERC
LOCAL NVLRDIF

IF LPERGUNTA
	IF ! MSGYESNO(STR0169 , STR0020) //"CALCULA AS HORAS EXTRAS/ADICIONAIS ?"###"GPO - LOCT035.PRW"
		RETURN NIL
	ENDIF
ENDIF

FLIMPAHE(.F. , .F.)  									// LIMPA AS HORAS ADICIONAIS

_NITEM := LEN(OGETZLM:ACOLS)

FOR NPOS := 1 TO LEN(OGETZLM:ACOLS)

	AADD( ACOLSGRV, ACLONE(OGETZLM:ACOLS[NPOS]) )
        
	DCORRENTE := GDFIELDGET("FPP_DTMEDI",NPOS,.F.,OGETZLM:AHEADER,OGETZLM:ACOLS)
	IF FFERIADO( DCORRENTE )  							// VERIFICA SE A DATA INFORMADA É FERIADO
		NDIASEM := 1 									// FERIADO CONSIDERA DOMINGO
	ELSE
		NDIASEM := DOW( DCORRENTE )
	ENDIF

	ATURNOS := FTRAZTURNO(STRZERO(NDIASEM,1)) 			// TRAZ OS TURNOS DO PRODUTO INFORMADO

	IF LEN( ATURNOS ) > 0

		NVALORR := GDFIELDGET( "FPP_VALHOR", NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )	// VALOR POR HORA
		CHORAR  := GDFIELDGET( "FPP_HORAF" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )	// HORA FINAL//M->FPP_HORAF// FOI COMENTADO A PEDIDO DO CAUE POIS PODE FAZER A CORREÇÃO DA HORA FINAL VINDO A MINUTA NA MEDIÇÃO 
		NHORAR  := HTON(CHORAR)							// CONVERSÃO DE HH:MM PARA H.MM
		
		CHORA2  := M->FPP_HORAF
		NHORA2  := HTON(CHORA2)							// CONVERSÃO DE HH:MM PARA H.MM
            
		AACRES  := {}
		FOR _NZ := 1 TO LEN( ATURNOS )
			NTMPTUR := HTON(ATURNOS[_NZ][6])
            	// VERIFICO SE A HORA QUE VEM DA MINUTA É DIVERGENTE DA QUE O USUARIO COLOCOU SE SIM ACATO A QUE FOI DIGITADA NO MOMENTO 
			IF IIF(HTON(GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )) > NHORAR,NHORAR + 24,NHORAR) < IIF(HTON(M->FPP_HORAI) > NHORA2,NHORA2 + HTON(M->FPP_HORAI),NHORA2)
				NHORAR := NHORA2 
			ENDIF
			 
			DO CASE
			CASE GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ) < "0700" .AND. GDFIELDGET( "FPP_HORAF" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ) < "0700"
		    	GDFIELDPUT( "FPP_XTIPOH" , "E" , LEN(ACOLSGRV), OGETZLM:AHEADER, ACOLSGRV )
		    	GDFIELDPUT( "FPP_PERHAD" , CVALTOCHAR(ATURNOS[_NZ,10]) , LEN(ACOLSGRV), OGETZLM:AHEADER, ACOLSGRV )

			CASE IIF(HTON(GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )) > NHORAR,NHORAR + 24,NHORAR) >= NTMPTUR
				NDIF    := IIF(HTON(GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )) > NHORAR,NHORAR + 24,NHORAR) - NTMPTUR		// TEMPO DENTRO DA HORA ADICIONAL
				NPERC   := ATURNOS[_NZ, 10] 		// PERCENTUAL A SER ACRESCIDO NO VALOR HORA

			    // CORTE NAS HORAS EXCEDENTES DO REGISTRO ORIGINAL (MEDIÇÃO)
				IF GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ) < ATURNOS[_NZ, 6]
			    	GDFIELDPUT( "FPP_HORAF" , ATURNOS[_NZ, 6] , LEN(ACOLSGRV), OGETZLM:AHEADER, ACOLSGRV )
				ELSE
			    	GDFIELDPUT( "FPP_XTIPOH" , "E" , LEN(ACOLSGRV), OGETZLM:AHEADER, ACOLSGRV )
			    	GDFIELDPUT( "FPP_PERHAD" , CVALTOCHAR(ATURNOS[_NZ,10]) , LEN(ACOLSGRV), OGETZLM:AHEADER, ACOLSGRV )
				ENDIF
				    
			    NHRTOT := GDFIELDGET( "FPP_HORTOT" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )
			    NHRTOT -= NDIF
				IF NHRTOT < 0
			    	NHRTOT:=0
				ENDIF        
			    
				IF GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ) < ATURNOS[_NZ, 6]
					GDFIELDPUT( "FPP_HORTOT", NHRTOT , LEN(ACOLSGRV), OGETZLM:AHEADER, ACOLSGRV )	// NUM. HORAS TRABALHADAS
				ENDIF
                    
			    NHRTOT := GDFIELDGET( "FPP_QTDHR" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )
			    NHRTOT -= NDIF    
				IF NHRTOT < 0
					NHRTOT := 0 
			    ENDIF 
				    
				IF GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ) < ATURNOS[_NZ, 6]
			    	GDFIELDPUT( "FPP_QTDHR", NHRTOT , LEN(ACOLSGRV), OGETZLM:AHEADER, ACOLSGRV )	// NUM. HORAS REAL TRABALHADAS
                    ENDIF
                    
			    NVALOLD := GDFIELDGET( "FPP_VLTOHR" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )
			    NVALNEW := NHRTOT * NVALORR
			    _NDIF   := NVALOLD - NVALNEW
			    
			    IF GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ) < ATURNOS[_NZ, 6]
			    	GDFIELDPUT( "FPP_VLTOHR", NVALNEW , LEN(ACOLSGRV), OGETZLM:AHEADER, ACOLSGRV )	// VALOR MEDIÇÃO DAS HORAS
                    ENDIF
                    
			    NVALOLD := GDFIELDGET( "FPP_VLRTOT" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )
			    NVALNEW := NVALOLD - _NDIF
			    IF GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ) < ATURNOS[_NZ, 6]
			    	GDFIELDPUT( "FPP_VLRTOT", NVALNEW , LEN(ACOLSGRV), OGETZLM:AHEADER, ACOLSGRV )	// VALOR TOTAL DA MEDIÇÃO (LINHA)
			    ENDIF

				NVLRDIF  := NVALORR
				NVLRDIF  += NVALORR * NPERC / 100			// HORA COM ACRÉSCIMO

				IF GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ) < ATURNOS[_NZ, 6]
				    AADD( AACRES, { LEN(AACRES), NDIF, NVLRDIF, NVLRDIF * NDIF, IIF(HTON(GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS )) > HTON(ATURNOS[_NZ, 6]),GDFIELDGET( "FPP_HORAI" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ),ATURNOS[_NZ, 6]), GDFIELDGET( "FPP_HORAF" , NPOS, .F., OGETZLM:AHEADER, OGETZLM:ACOLS ),ATURNOS[_NZ, 10] } )
				ENDIF
				//              SEQ.       , HR  , VL.UNIT, VL. TOTAL     , H.INI          , H.FIM
			ENDCASE
		NEXT _NZ 

		ASORT( AACRES,,, {|X,Y| X[1] > Y[1]} )

		FOR _NZ := 1 TO LEN( AACRES )
			AADD(ACOLSGRV,ACLONE(OGETZLM:ACOLS[NPOS]))
			_NITEM++
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"})]  := STRZERO(_NITEM,LEN(ACOLSGRV[NPOS,ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"})]))
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_XTIPOH"})] := "E"
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORAI" })] := AACRES[_NZ, 5]
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORAF" })] := AACRES[_NZ, 6]
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_HRPARA"})] := ""
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_MOTIVO"})] := ""     
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERHAD"})] := CVALTOCHAR(AACRES[_NZ, 7])     
			IF AACRES[_NZ, 2] < 0
				NTOTHOR := 0
			ELSE
				NTOTHOR := AACRES[_NZ, 2]
			ENDIF
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORTOT"})] := NTOTHOR			// AACRES[_NZ,2]	// TOTAL HRS
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDHR" })] := NTOTHOR			// AACRES[_NZ,2]	// HRS REAL
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR"})] := AACRES[_NZ, 3]	// VALOR P/ HR
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOHR"})] := AACRES[_NZ, 4]	// VL. TOTAL HORAS
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT"})] := AACRES[_NZ, 4]	// VL. TOTAL DESTA MEDIÇÃO
			_NMINDIA := OGETZLM:ACOLS[OGETZLM:NAT][ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDHR" }	)]
			ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR" }	)]	* _NMINDIA 
		 //	ACOLSGRV[LEN(ACOLSGRV),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALISS"})]
		NEXT _NZ 

	ENDIF

NEXT NPOS 
	
FOR _NZ := 1 TO LEN( ACOLSGRV )
	IF _NZ  >  1
    	ACOLSGRV[_NZ,ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALSEG"})] := 0
		ACOLSGRV[_NZ,ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRMOB"})] := 0
		ACOLSGRV[_NZ,ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRDES"})] := 0
	 //	ACOLSGRV[_NZ,ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALISS"})] := 0
		ACOLSGRV[_NZ,ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOTM"})] := 0
		ACOLSGRV[_NZ,ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_PERMO" })] := 0
	ENDIF
NEXT _NZ
	
ASORT( ACOLSGRV,,, {|X,Y| DTOS(X[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})])+X[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"})] < DTOS(Y[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})])+Y[ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"})]} )

FOR NPOS := 1 TO LEN(ACOLSGRV)
	ACOLSGRV[NPOS,ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM"})] := STRZERO(NPOS,LEN(ACOLSGRV[NPOS,ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM"})]))
NEXT NPOS 

OGETZLM:ACOLS := ACLONE(ACOLSGRV)
OGETZLM:OBROWSE:REFRESH()

NTOTHRREAL := 0
AEVAL(OGETZLM:ACOLS,{|X,L| IF( !GDDELETED(L,OGETZLM:AHEADER,OGETZLM:ACOLS),NTOTHRREAL := FSOMAHORAS(NTOTHRREAL,GDFIELDGET("FPP_QTDHR",L,.F.,OGETZLM:AHEADER,OGETZLM:ACOLS)) ,)})
OTOTHRREAL:REFRESH()

LOCA04809()  				// CALCULA AS VARIÁVEIS DO ENCHOICE

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION FLIMPAHE(LPERGUNTA , LSHOWZBX) 		// LIMPA AS HORAS EXTRAS
// ======================================================================= \\

LOCAL CALIAS     := "FPP"
LOCAL CCHAVE     := XFILIAL(CALIAS)+CCODMED+CTIPOMED
LOCAL CCONDICAO  := 'FPP_FILIAL+FPP_COD+FPP_TPMEDI=="'+CCHAVE+'"'
LOCAL NINDICE    := 2
LOCAL CFILTRO    := CCONDICAO
LOCAL AHEADER    := OGETZLM:AHEADER
LOCAL ACOLSZLF
LOCAL NTOTHRREAL := 0

DEFAULT LSHOWZBX := .T.

IF LPERGUNTA
	IF ! MSGYESNO(STR0170 , STR0020) //"LIMPA AS HORAS ADICIONAIS?"###"GPO - LOCT035.PRW"
		RETURN NIL
	ENDIF
ENDIF

ACOLSZLF := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO, LSHOWZBX)

OGETZLM:ACOLS := ACLONE(ACOLSZLF)
OGETZLM:REFRESH()

AEVAL(OGETZLM:ACOLS,{|X,L| IF( !GDDELETED(L,OGETZLM:AHEADER,OGETZLM:ACOLS),NTOTHRREAL := FSOMAHORAS(NTOTHRREAL,GDFIELDGET("FPP_QTDHR",L,.F.,OGETZLM:AHEADER,OGETZLM:ACOLS)) ,)})
OTOTHRREAL:REFRESH()

LOCA04809()

RETURN NIL 



// ======================================================================= \\
STATIC FUNCTION FFERIADO(DDATA) 	// VERIFICA SE A DATA INFORMADA É FERIADO
// ======================================================================= \\

LOCAL CDIA , CMES , CANO , LRET := .F. 

CDIA := STRZERO(DAY(DDATA),2)
CMES := STRZERO(MONTH(DDATA),2)
CANO := SUBSTR(STRZERO(YEAR(DDATA),4),3,2)

SX5->(DBSETORDER(1))  				// X5_FILIAL+X5_TABELA+X5_CHAVE
SX5->(DBSEEK(XFILIAL("SX5")+"63")) 	// POSICIONA NA TABELA DE FERIADOS
WHILE SX5->(!EOF() .AND. X5_FILIAL+X5_TABELA==XFILIAL("SX5")+"63")
	IF SX5->(SUBSTR(X5_DESCRI,1,8)==CDIA+"/"+CMES+"/"+CANO)  //VERIFICA COM DD/MM/YY
		LRET := .T. 
		EXIT
	ELSE
		IF SX5->(SUBSTR(X5_DESCRI,1,8)==CDIA+"/"+CMES+SPACE(03))  //VERIFICA COM DD/MM
			LRET := .T. 
			EXIT
		ENDIF
	ENDIF
	SX5->(DBSKIP())
ENDDO 

RETURN(LRET)



// ======================================================================= \\
STATIC FUNCTION FTRAZTURNO(CDIASEM) 	// TRAZ OS TURNOS DO PRODUTO INFORMADO
// ======================================================================= \\

LOCAL ACOLS   := {}
LOCAL ACOLS0
LOCAL LSEMANA := CDIASEM $ "23456"

// POSICIONO NA ZA5 PELA ASSIM ASSIM PEGO A SEQUENCIA QUE DEVERÁ TER NA TABELA DE TURNOS
DBSELECTAREA("FP4")
FP4->(DBCLEARFILTER())
FP4->(DBSETFILTER({|| ALLTRIM(FP4->FP4_AS) == ALLTRIM(CAS)}," ALLTRIM(FP4->FP4_AS) == ALLTRIM(CAS)"))
FP4->(DBGOTOP())
CSEQGUI := FP4->FP4_SEQGUI

FPE->(DBSETORDER(2)) 						// FPE_FILIAL+FPE_PROJET+FPE_OBRA+FPE_SEQGUI
FPE->(DBSEEK(XFILIAL("FPE")+CPROJETO+COBRA+CSEQGUI))
WHILE FPE->(!EOF() .AND. FPE_FILIAL+FPE_PROJET+FPE_OBRA+FPE_SEQGUI==XFILIAL("FPE")+CPROJETO+COBRA+CSEQGUI)
	IF (CDIASEM == FPE->FPE_DIASEM .OR. ( LSEMANA .AND. FPE->FPE_DIASEM == "0" )) .AND.;
	   ((FPE->FPE_TIPOSE == "1" .AND. FP4->FP4_TIPOSE == "M") .OR. (FPE->FPE_TIPOSE <> "1" .AND. FP4->FP4_TIPOSE <> "M"))
		ACOLS0 := {}
		AADD( ACOLS0, FPE->FPE_PROJET )
		AADD( ACOLS0, FPE->FPE_OBRA   )
		AADD( ACOLS0, FPE->FPE_FROTA  )
		AADD( ACOLS0, FPE->FPE_SEQGUI )
		AADD( ACOLS0, FPE->FPE_TURNO  )
		AADD( ACOLS0, FPE->FPE_MINDIT )
		AADD( ACOLS0, FPE->FPE_HRINIT )
		AADD( ACOLS0, FPE->FPE_HOFIMT )
		AADD( ACOLS0, FPE->FPE_VALTUR )
		AADD( ACOLS0, FPE->FPE_PORCEN )
		AADD( ACOLS0, FPE->FPE_DIASEM )
		AADD( ACOLS0, .F.             )
		AADD( ACOLS , ACOLS0          )
	ENDIF

	FPE->(DBSKIP())
ENDDO 

ASORT( ACOLS,,, {|X,Y| X[6] > Y[6]} ) 		// ORDENANDO POR HORA APÓS

RETURN ACLONE(ACOLS)



// ======================================================================= \\
STATIC FUNCTION FTELATUR() 		// VISUALIZA O TURNO DO PROJETO INFORMADO
// ======================================================================= \\

LOCAL AAREAZBB   := FPE->(GETAREA())
LOCAL ACAMPOSSIM := {}
LOCAL NPOS,ATABAUX,ATABAUX0,CSEQGUI
LOCAL AITENS     := FMONTACBOX("FPE_DIASEM")

//-- COMENTADO POIS O SEQUENCIAL ESTA DANDO DIVERGENCIA NO RELACIONAMENTO COM O DO CADASTRO DE TURNOSCSEQGUI:="0"+SUBSTR(CAS,11,2)
// POSICIONO NA ZA5 PELA ASSIM ASSIM PEGO A SEQUENCIA QUE DEVERÁ TER NA TABELA DE TURNOS
DBSELECTAREA("FP4")
FP4->(DBCLEARFILTER())
FP4->(DBSETFILTER({|| ALLTRIM(FP4->FP4_AS) == ALLTRIM(CAS)}," ALLTRIM(FP4->FP4_AS) == ALLTRIM(CAS)"))
FP4->(DBGOTOP())

CSEQGUI := FP4->FP4_SEQGUI
AADD(ACAMPOSSIM,{"FPE_FROTA" ,""})
AADD(ACAMPOSSIM,{"FPE_TURNO" ,""})
AADD(ACAMPOSSIM,{"FPE_MINDIT",""})
AADD(ACAMPOSSIM,{"FPE_DIASEM",""})
AADD(ACAMPOSSIM,{"FPE_PORCEN",""})
AADD(ACAMPOSSIM,{"FPE_VALTUR",""})

ATABAUX := {}

DBSELECTAREA("FPE")
FPE->(DBSETORDER(2))  			// FPE_FILIAL+FPE_PROJET+FPE_OBRA+FPE_SEQGUI
FPE->(DBSEEK(XFILIAL("FPE")+CPROJETO+COBRA+CSEQGUI))
WHILE FPE->(!EOF() .AND. FPE_FILIAL+FPE_PROJET+FPE_OBRA+FPE_SEQGUI==XFILIAL("FPE")+CPROJETO+COBRA+CSEQGUI)
	ATABAUX0 := {}
	FOR NPOS:=1 TO LEN(ACAMPOSSIM)
		XVALOR := &(ACAMPOSSIM[NPOS,1])
		IF ACAMPOSSIM[NPOS,1] == "FPE_DIASEM"
			XVALOR := CARGAIT( AITENS, XVALOR )
		ENDIF
		FPE->(AADD(ATABAUX0, XVALOR)) 
	NEXT NPOS 
	AADD(ATABAUX0, "")			// TEXTO EM BRANCO
	AADD(ATABAUX,ATABAUX0)
	FPE->(DBSKIP())
ENDDO 

FPE->(RESTAREA(AAREAZBB))

FTELATUR1(ATABAUX)

RETURN



// ======================================================================= \\
STATIC FUNCTION CARGAIT(AITENS , XVALOR)	// RETORNA DESCRIÇÃO DO COMBO
// ======================================================================= \\

LOCAL CRET := XVALOR
LOCAL NI
	
FOR NI := 1 TO LEN( AITENS )
	IF LEFT( AITENS[NI], LEN(XVALOR) ) == XVALOR
		CRET := SUBSTR( AITENS[NI], LEN(XVALOR)+2 )
		EXIT
	ENDIF
NEXT

RETURN CRET



// ======================================================================= \\
STATIC FUNCTION FTELATUR1(ATABAUX)
// ======================================================================= \\

LOCAL AOBJECTS , AINFO , APOSGET , APOSOBJ , ASIZEAUT 
LOCAL CTITJAN  := STR0171 //"TURNOS"
LOCAL ABUTTONS := {}
LOCAL ODLG , OBROWSE , ACOLS , AHEADER , BHEADER  
LOCAL NPOS , LOK := .F. 

ACOLS:=ACLONE(ATABAUX)

IF LEN(ACOLS)==0
	MSGALERT(STR0172 , STR0020) //"NÃO EXISTEM REGISTROS!"###"GPO - LOCT035.PRW"
	RETURN
ENDIF

//
NPOS    := 0
AHEADER := {}
BHEADER := "{||ACOLS[OBROWSE:AT(),"+STRZERO(++NPOS,2)+"]}" ; AADD(AHEADER,{ALLTRIM(GETSX3CACHE("FPE_FROTA" ,"X3_TITULO")),&BHEADER,"C","@X",1,16,00})    
BHEADER := "{||ACOLS[OBROWSE:AT(),"+STRZERO(++NPOS,2)+"]}" ; AADD(AHEADER,{ALLTRIM(GETSX3CACHE("FPE_TURNO" ,"X3_TITULO")),&BHEADER,"C","@X",1,03,00})
BHEADER := "{||ACOLS[OBROWSE:AT(),"+STRZERO(++NPOS,2)+"]}" ; AADD(AHEADER,{ALLTRIM(GETSX3CACHE("FPE_MINDIT","X3_TITULO")),&BHEADER,"C","@R 99:99",1,05,00})
BHEADER := "{||ACOLS[OBROWSE:AT(),"+STRZERO(++NPOS,2)+"]}" ; AADD(AHEADER,{ALLTRIM(GETSX3CACHE("FPE_DIASEM","X3_TITULO")),&BHEADER,"C","@X",1,01,00})
BHEADER := "{||ACOLS[OBROWSE:AT(),"+STRZERO(++NPOS,2)+"]}" ; AADD(AHEADER,{ALLTRIM(GETSX3CACHE("FPE_PORCEN","X3_TITULO")),&BHEADER,"C","@E 999.99",2,06,02})
BHEADER := "{||ACOLS[OBROWSE:AT(),"+STRZERO(++NPOS,2)+"]}" ; AADD(AHEADER,{ALLTRIM(GETSX3CACHE("FPE_VALTUR","X3_TITULO")),&BHEADER,"N","@E 999,999,999.99",2,12,02})

BHEADER := "{||ACOLS[OBROWSE:AT(),"+STRZERO(++NPOS,2)+"]}" ; AADD(AHEADER,{"",&BHEADER,"C","",1,1,0})

IF OMAINWND:NCLIENTWIDTH > 800
	AOBJECTS:={}
	AADD(AOBJECTS,{100,010,.T., .T. } )  //ENCHOICE
	AADD(AOBJECTS,{100,090,.T., .T. } )  //MSGETDADOS
ELSE
	AOBJECTS:={}
	AADD(AOBJECTS,{100,012,.T., .T. } )  //ENCHOICE
	AADD(AOBJECTS,{100,088,.T., .T. } )  //MSGETDADOS
ENDIF
ASIZEAUT := MSADVSIZE()
AINFO    := {ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
APOSOBJ  := MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )
APOSGET  := MSOBJGETPOS((ASIZEAUT[3]-ASIZEAUT[1]),315,{{004,024,240,270}} )

DEFINE MSDIALOG ODLG FROM 0,0 TO 400,900 TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL
	OBROWSE:=FWBROWSE():NEW()
	OBROWSE:SETDATAARRAY()
	OBROWSE:SETARRAY(ACOLS)
	OBROWSE:SETCOLUMNS(AHEADER)
	OBROWSE:SETOWNER(ODLG)
	OBROWSE:DISABLEREPORT()
	OBROWSE:DISABLECONFIG()
	OBROWSE:ACTIVATE()
ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{||(LOK:=.T.,CLOSE(ODLG))},{||(LOK:=.F.,CLOSE(ODLG))},,ABUTTONS)

RETURN



// ======================================================================= \\
STATIC FUNCTION FSOMAHORAS(NHORA1,NHORA2)
// ======================================================================= \\

LOCAL NMINUTOS

NHORA1   := FMINUTOS2(SUBSTR(STRZERO(NHORA1,12,2),7,3)+SUBSTR(STRZERO(NHORA1,12,2),11,2))
NHORA2   := FMINUTOS2(SUBSTR(STRZERO(NHORA2,12,2),7,3)+SUBSTR(STRZERO(NHORA2,12,2),11,2))
NMINUTOS := NHORA1+NHORA2

NMINUTOS := FMASKHORA4(NMINUTOS)

//NMINUTOS -= _NCONANT // FRANK EM 16/09/2020

RETURN(NMINUTOS)



// ======================================================================= \\
STATIC FUNCTION FMASKHORA4(NMINUTOS)
// ======================================================================= \\

RETURN( VAL( STRZERO(INT(NMINUTOS/60),3)+STRZERO((NMINUTOS-(INT(NMINUTOS/60)*60)),2)) / 100 )



// ======================================================================= \\
STATIC FUNCTION FMINUTOS2(CHORA)
// ======================================================================= \\

RETURN( (VAL(SUBSTR(CHORA,1,3))*60)+VAL(SUBSTR(CHORA,4,2)) )



// ======================================================================= \\
STATIC FUNCTION HTON(CHORA) 
// ======================================================================= \\
// --> CONVERTE HORAS (HH:MM) EM NÚMEROS
LOCAL NHORAS := 0
LOCAL NTMP

CHORA  := STRTRAN(ALLTRIM(CHORA), ":", "")
CHORA  := RIGHT("000000" + CHORA, 4 )

NHORAS += VAL( LEFT( CHORA, 2 ) )

IF NHORAS > 24										// HORAS INVÁLIDA
	RETURN 0
ENDIF

NTMP   := VAL( RIGHT( CHORA, 2 ) )

IF NTMP > 59 .OR. (NHORAS == 24 .AND. NTMP > 0)		// MINUTOS INVÁLIDO
	RETURN NHORAS
ENDIF

NTMP   := NTMP * 100 / 60							// CONVERSÃO PARA DECIMAL
NTMP   := NTMP / 100

NHORAS += NTMP

RETURN NHORAS


/*
// ======================================================================= \\
STATIC FUNCTION NTOH(NHORA)
// ======================================================================= \\
// --> NÃO EXISTE CHAMADA PARA FUNÇÃO ! 
// --> CONVERTE HORAS (DECIMAL) PARA CARACTER FORMATADO (HH:MM)
LOCAL CHORAS := ""
LOCAL NTMP

CHORAS := STRZERO( INT(NHORA), 2 ) + ":"
NTMP   := NHORA - INT(NHORA)	// PEGANDO OS DECIMAIS
NTMP   := NTMP * 100
NTMP   := NTMP * 100 / 60		// CONVERTENDO PARA HORA
CHORAS += STRZERO( NTMP, 2 )

RETURN CHORAS
*/



// ======================================================================= \\
STATIC FUNCTION FMONTACBOX(CCAMPO)  
// ======================================================================= \\
// --> RETORNA O ARRAY COM OS TEXTOS DO X3_CBOX DO CAMPO INFORMADO
LOCAL NPOS
LOCAL ARET   := {}
LOCAL CCOMBO := ALLTRIM(GETSX3CACHE( CCAMPO,"X3_CBOX" ) ) 

WHILE !EMPTY(CCOMBO)
	NPOS := AT(";",CCOMBO)
	IF NPOS > 0
		AADD(ARET,SUBSTR(CCOMBO,1,NPOS-1))
		CCOMBO := SUBSTR(CCOMBO,NPOS+1,LEN(CCOMBO)-NPOS)
	ELSE
		AADD(ARET,CCOMBO)
		CCOMBO := ""
	ENDIF
ENDDO 

RETURN ACLONE(ARET)



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ FVLDOS    º AUTOR ³ IT UP BUSINESS     º DATA ³ 16/08/2016 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDA PREENCHIMENTO DA ORDEM DE SERVIÇO NA MEDIÇÃO E      º±±
±±º          ³ PREENCHE ITENS DA ZLM, DE ACORDO COM AS OS'S INFORMADAS.   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION FVLDOS() 

LOCAL _AAREAOLD  := GETAREA()
LOCAL _AAREASTJ  := STJ->(GETAREA())
LOCAL _AAREAZAG  := FPA->(GETAREA())
LOCAL _LRET      := .T.
LOCAL _CCONTEUDO := &(READVAR())
LOCAL _NRESULT   := 0
LOCAL _ATMPCOLS  := {}
LOCAL _AHEADER   := FHEADER(ACAMPOSSIM)
LOCAL ACOLS0     := {}
LOCAL _NX
LOCAL NPOS       := 0 
LOCAL _CQUERY    := ""

ITVLDVIG()

IF _LAUTOMA .AND. _NPOSCONT <> _NINFORMA
	MSGALERT(STR0173,STR0020) //("O VALOR NÃO PODE SER ALTERADO."###"ATENÇÃO!"
	RETURN .F.
ENDIF

OGETZLM:ACOLS[LEN(OGETZLM:ACOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORTOT"})] := 0
OGETZLM:ACOLS[LEN(OGETZLM:ACOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDHR" })] := 0
OGETZLM:ACOLS[LEN(OGETZLM:ACOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT"})] := 0
OGETZLM:ACOLS[LEN(OGETZLM:ACOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR"})] := 0
OGETZLM:ACOLS[LEN(OGETZLM:ACOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOHR"})] := 0
OGETZLM:OBROWSE:REFRESH()

NVALSERV:=OGETZLM:ACOLS[LEN(OGETZLM:ACOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORTOT"})]
OVALSERV:REFRESH()
NVALTOT:=OGETZLM:ACOLS[LEN(OGETZLM:ACOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT"})]
OVALTOT:REFRESH() 



IF VALTYPE(_CCONTEUDO) == "C"
	IF !EMPTY(_CCONTEUDO)
		DBSELECTAREA("STJ")
		STJ->(DBSETORDER(1))
		IF STJ->(!DBSEEK(XFILIAL("STJ") + _CCONTEUDO))
			MSGALERT(STR0174+_CCONTEUDO+STR0175 , STR0020) //"ORDEM DE SERVIÇO ["###"] NÃO ENCONTRADA!"###"GPO - LOCT035.PRW"
			_LRET := .F. 
		ENDIF 
	ENDIF 
ENDIF 

/*
IF !EMPTY(ALLTRIM(_COSENTRA))
	DBSELECTAREA("STJ")
	STJ->(DBSETORDER(1))
	STJ->(DBGOTOP())
	IF STJ->(DBSEEK(XFILIAL("STJ") + _COSENTRA))
		_NPOSCONT := STJ->TJ_POSCONT
	ENDIF
ENDIF
*/
// VALIDACAO SE EXISTEM OS DE ENTRADA E SAIDA - FRANK - 10/09/20
// INICIO ------------------------------------------------------
IF _CTIPOX == "L"

	_CQUERY := " SELECT FPN_OSSAID, FPN_OSENTR "
	_CQUERY += " FROM " + RETSQLNAME("FPN") 
	_CQUERY += " WHERE FPN_FILIAL = '" + XFILIAL("FPN") + "' " 
	_CQUERY += " AND FPN_AS = '" + CAS + "' " 
	_CQUERY += " AND FPN_SITUAC <> '6' "
	_CQUERY += " AND D_E_L_E_T_ = '' "
	IF SELECT("TRBFPN") > 0
		TRBFPN->(DBCLOSEAREA())
	ENDIF
	TCQUERY _CQUERY NEW ALIAS "TRBFPN"
	_LBLOQ := .T.
	
	IF TRBFPN->(EOF()) .and. .F. // Inibido o processo a pedido do Lui, por Frank em 12/07/21
		IF EMPTY(_COSSAIDA)
			MSGALERT(STR0176,STR0177) //"Falta uma medição com uma OS de instalação."###"ATENÇÃO!"
			TRBFPN->(DBCLOSEAREA())
			RETURN .F.
		ENDIF
	ENDIF
	
	
	// VALIDAR SE TEM OS DE SAIDA SEM OS DE INSTALACAO
	TRBFPN->(DBGOTOP())
	IF !EMPTY(_COSENTRA) 
		_LERRO := .T.
		WHILE !TRBFPN->(EOF())
			IF !EMPTY(TRBFPN->FPN_OSSAID)
				_LERRO := .F.
			ENDIF
			TRBFPN->(DBSKIP())
		ENDDO
		IF _LERRO
			MSGALERT(STR0178,STR0020) //"FALTA UMA MEDIÇÃO COM UMA OS DE INSTALAÇÃO."###"ATENÇÃO!"
			TRBFPN->(DBCLOSEAREA())
			RETURN .F.
		ENDIF
	ENDIF
				
	// VALIDAR SE JÁ EXISTE UMA OS DE DESINSTALACAO
	TRBFPN->(DBGOTOP())
	IF !EMPTY(_COSENTRA)
		_LERRO := .F.
		WHILE !TRBFPN->(EOF())
			IF !EMPTY(TRBFPN->FPN_OSENTR)
				_LERRO := .T.
			ENDIF
			TRBFPN->(DBSKIP())
		ENDDO
		IF _LERRO
			MSGALERT(STR0179,STR0180) //"JÁ EXISTE UMA OS DE DESINSTALAÇÃO."###"ATENÇÃO!"
			TRBFPN->(DBCLOSEAREA())
			RETURN .F.
		ENDIF
	ENDIF
		
		
	// VALIDAR SE JÁ EXISTE UMA OS DE INSTALACAO
	TRBFPN->(DBGOTOP())
	IF !EMPTY(_COSSAIDA)
		_LERRO := .F.
		WHILE !TRBFPN->(EOF())
			IF !EMPTY(TRBFPN->FPN_OSSAID)
				IF LALTERA
					_LERRO := .F.
				ELSE	
					_LERRO := .T.
				ENDIF	
			ENDIF
			TRBFPN->(DBSKIP())
		ENDDO
		IF _LERRO
			MSGALERT(STR0181,STR0182) //"JÁ EXISTE UMA OS DE INSTALAÇÃO."###"ATENÇÃO!"
			TRBFPN->(DBCLOSEAREA())
			RETURN .F.
		ENDIF
	ENDIF
	
	// SE ESTIVER EM BRANCO A INSTALACAO E EM BRANCO A DESINSTALACAO DEVE EXISTIR UMA OS DE INSTALACAO CADASTRADA
	IF EMPTY(_COSSAIDA) .AND. EMPTY(_COSENTRA)  .and. .F. // Inibido o processo a pedido do Lui, por Frank em 12/07/21
		_LTEM1 := .F.
		_LTEM2 := .F.
		TRBFPN->(DBGOTOP())
		_LERRO := .T.
		WHILE !TRBFPN->(EOF())
			IF !EMPTY(TRBFPN->FPN_OSENTR)
				_LTEM1 := .T.
			ENDIF
			IF !EMPTY(TRBFPN->FPN_OSSAID)
				_LTEM2 := .T.
			ENDIF
			TRBFPN->(DBSKIP())
		ENDDO
		IF _LTEM1 .AND. _LTEM2
			MSGALERT(STR0183,STR0184) //"FALTA UMA MEDIÇÃO COM UMA OS DE INSTALAÇÃO."###"ATENÇÃO!"
			TRBFPN->(DBCLOSEAREA())
			RETURN .F.
		ENDIF
	ENDIF
		
		
	// VALIDAR SE A QUANTIDADE INFORMADA É MENOR DO QUE A EXIBIDA NO HISTÓRICO - STP
	/*
	FPA->(DBSETORDER(2))
	IF FPA->(DBSEEK(XFILIAL("FPA")+CPROJETO+COBRA+CAS+CVIAGEM)) 
		STP->(DBSETORDER(2))
		IF STP->(DBSEEK(XFILIAL("STP")+FPA->FPA_GRUA))
			WHILE !STP->(EOF()) .AND. STP->TP_FILIAL == XFILIAL("STP") .AND. STP->TP_CODBEM == FPA->FPA_GRUA
				_NCONTAX := STP->TP_POSCONT
				STP->(DBSKIP())
			ENDDO
			IF _NCONTAX > _NPOSCONT
				_LRETORNO := .F.
				MSGALERT("O HORÍMETRO INFORMADO: "+ALLTRIM(STR(_NPOSCONT))+" É MENOR DO QUE O ATUAL: "+ALLTRIM(STR(_NCONTAX)),"ATENÇÃO!")
				TRBFPN->(DBCLOSEAREA())
				RETURN .F.
			ENDIF
		ENDIF
	ELSE
		_LRETORNO := .F.
		MSGALERT("BEM NÃO LOCALIZADO NO GPO.","ATENÇÃO!")
		TRBFPN->(DBCLOSEAREA())
		RETURN .F.
	ENDIF
	*/
	
	IF _NPOSCONT < _NCONANT
		MSGALERT(STR0185,STR0020) //"O VALOR INFORMADO É MENOR DO QUE O CONTADOR ANTERIOR."###"ATENÇÃO!"
		TRBFPN->(DBCLOSEAREA())
		RETURN .F.
	ENDIF
	
		
	
ENDIF
// FIM ---------------------------------------------------------


IF _LRET .AND. _NPOSCONT > 0

	IF CSEQUENCIA == "001"
		/* Frank 15/07/21
		DBSELECTAREA("STJ")
		STJ->(DBSETORDER(1))
		STJ->(DBGOTOP())
		IF EMPTY(ALLTRIM(_COSSAIDA)) .OR. STJ->(!DBSEEK(XFILIAL("STJ") + _COSSAIDA))
			RESTAREA( _AAREAZAG )
			RESTAREA( _AAREASTJ )
			RESTAREA( _AAREAOLD )
			RETURN _LRET
		ELSE
			_NCONANT := STJ->TJ_POSCONT
			_NRESULT := STJ->TJ_POSCONT
		ENDIF	
		*/
	ELSE
		IF SELECT("TRBHOR") > 0
			TRBHOR->(DBCLOSEAREA())
		ENDIF
		_CQUERY := " SELECT FPN_POSCON" + CRLF
		_CQUERY += " FROM " + RETSQLNAME("FPN") + " ZLF" + CRLF
		_CQUERY += " WHERE  FPN_FILIAL = '" + XFILIAL("FPN") + "'" + CRLF
		_CQUERY +=   " AND  FPN_AS     = '" + CAS + "'" + CRLF
		_CQUERY +=   " AND  FPN_VIAGEM = '" + CVIAGEM + "'" + CRLF
		_CQUERY +=   " AND  FPN_MEDSEQ > '001'" + CRLF
		_CQUERY +=   " AND  FPN_SITUAC NOT IN ('3','6')" + CRLF
		_CQUERY +=   " AND  ZLF.D_E_L_E_T_ = ''" + CRLF
		_CQUERY += " ORDER BY FPN_MEDSEQ DESC, FPN_POSCON DESC" + CRLF
		TCQUERY _CQUERY NEW ALIAS "TRBHOR"
		
		IF TRBHOR->(!EOF())
			_NRESULT := TRBHOR->FPN_POSCON
		ENDIF
		
		TRBHOR->(DBCLOSEAREA())
	ENDIF

	FOR _NX := 1 TO LEN(OGETZLM:ACOLS)
		AADD( _ATMPCOLS, ACLONE(OGETZLM:ACOLS[_NX]) )
	NEXT

	DBSELECTAREA("FPA")
	FPA->(DBSETORDER(3))

	_NTEMPXX := _NPOSCONT - _NCONANT // FRANK 16/09/2020

	IF FPA->(DBSEEK(XFILIAL("FPA") + CAS))
		
		IF EMPTY(ALLTRIM(_COSENTRA))
			//_NRESULT := _NPOSCONT - _NRESULT
			_NRESULT := _NTEMPXX //- _NRESULT
		ELSE
			DBSELECTAREA("STJ")
			STJ->(DBSETORDER(1))
			STJ->(DBGOTOP())
			IF STJ->(DBSEEK(XFILIAL("STJ") + _COSENTRA))
				_NTEMPXX := STJ->TJ_POSCONT - _NCONANT // FRANK 16/09/2020
				//_NRESULT := STJ->TJ_POSCONT - _NRESULT
				_NRESULT := _NTEMPXX //- _NRESULT
			ENDIF
		ENDIF
		
		_NRESULT := _NRESULT - FPA->FPA_HRFRAQ
		
		IF _NRESULT > 0 .AND. FPA->FPA_VLHREX > 0
			
			IF LEN(_ATMPCOLS) > 1 .OR. !EMPTY(DTOS(_ATMPCOLS[LEN(_ATMPCOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})]))
				
				IF _CTIPOX <> "L"
					ACOLS0:={}
					FOR NPOS:=1 TO LEN(_AHEADER)
						IF !_AHEADER[NPOS,10]=="V"  //X3_CONTEXT
							FPP->(AADD(ACOLS0,FIELDGET(FIELDPOS(_AHEADER[NPOS,2]))))
						ELSE
							FPP->(AADD(ACOLS0,CRIAVAR(_AHEADER[NPOS,2])))
						ENDIF
					NEXT
					AADD(ACOLS0,.F.  )  //DELETED     
					AADD(_ATMPCOLS,ACOLS0)
				ENDIF
				
			ENDIF		
			
			_ATMPCOLS[LEN(_ATMPCOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ITEM"  })] := STRZERO(LEN(OGETZLM:ACOLS),GETSX3CACHE("FPP_ITEM","X3_TAMANHO"))
			_ATMPCOLS[LEN(_ATMPCOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_ORDEM" })] := STRZERO(LEN(OGETZLM:ACOLS),GETSX3CACHE("FPP_ORDEM","X3_TAMANHO"))
			_ATMPCOLS[LEN(_ATMPCOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_DTMEDI"})] := DDATAF
			_ATMPCOLS[LEN(_ATMPCOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_HORTOT"})] := _NRESULT	// TOTAL HRS
			_ATMPCOLS[LEN(_ATMPCOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_QTDHR" })] := _NRESULT	// HRS REAL
		
			_NRESULT := _NRESULT * FPA->FPA_VLHREX
			
			_ATMPCOLS[LEN(_ATMPCOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VALHOR"})] := FPA->FPA_VLHREX // VALOR P/ HR
			_ATMPCOLS[LEN(_ATMPCOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLTOHR"})] := _NRESULT	// VL. TOTAL HORAS
			_ATMPCOLS[LEN(_ATMPCOLS),ASCAN(OGETZLM:AHEADER,{|X|ALLTRIM(X[2])=="FPP_VLRTOT"})] := _NRESULT	// VL. TOTAL DESTA MEDIÇÃO
		
			NVALTOT += _NRESULT
		
			OGETZLM:ACOLS := ACLONE(_ATMPCOLS)
			OGETZLM:OBROWSE:REFRESH()
		
			NTOTHRREAL := 0
			AEVAL(OGETZLM:ACOLS,{|X,L| IF( !GDDELETED(L,OGETZLM:AHEADER,OGETZLM:ACOLS),NTOTHRREAL := FSOMAHORAS(NTOTHRREAL,GDFIELDGET("FPP_QTDHR",L,.F.,OGETZLM:AHEADER,OGETZLM:ACOLS)) ,)})
			OTOTHRREAL:REFRESH()
		
			LOCA04809()  	// CALCULA AS VARIÁVEIS DO ENCHOICE
		
		ENDIF		
		
	ENDIF
ENDIF

OPOSCONT:REFRESH()
OVALTOT:REFRESH()

RESTAREA( _AAREAZAG )
RESTAREA( _AAREASTJ )
RESTAREA( _AAREAOLD )

RETURN _LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ CALCHOR   º AUTOR ³ IT UP BUSINESS     º DATA ³ 28/10/2016 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRIÇÃO ³ CALCULA O VALOR DO HORÍMETRO A SER FATURADO.               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION CALCHOR()

LOCAL _AAREAOLD := GETAREA()
LOCAL _AAREAZAG := FPA->(GETAREA())
LOCAL _NHORFAT  := _NPOSCONT - _NCONANT

DBSELECTAREA("FPA")
FPA->(DBSETORDER(3))
IF FPA->(DBSEEK(XFILIAL("FPA") + CAS))
	IF FPA->FPA_HRFRAQ < _NHORFAT
		_NHORFAT := _NHORFAT - FPA->FPA_HRFRAQ
		_NVLRHOR := FPA->FPA_VLHREX*_NHORFAT
	ELSE
		_NVLRHOR := 0
	ENDIF
ENDIF

RESTAREA( _AAREAZAG )
RESTAREA( _AAREAOLD )

RETURN _NVLRHOR



// ======================================================================= \\
STATIC FUNCTION GETDESCCOND(CCONDPAG) 
// ======================================================================= \\

DBSELECTAREA("SE4")
DBSETORDER(1)
IF DBSEEK(XFILIAL("SE4")+CCONDPAG)
	CDESCPAG := SE4->E4_DESCRI
ENDIF 	   

RETURN 



/*
// ======================================================================= \\
STATIC FUNCTION FMASKHORA(NMINUTOS)
// ======================================================================= \\
// --> NÃO EXISTE CHAMADA PARA FUNÇÃO ! 
RETURN( VAL( STRZERO(INT(NMINUTOS/60),2)+STRZERO(NMINUTOS-(INT(NMINUTOS/60)*60),2)) / 100 )
*/



/*
// ======================================================================= \\
STATIC FUNCTION FMASKHORA2(NMINUTOS)
// ======================================================================= \\
// --> NÃO EXISTE CHAMADA PARA FUNÇÃO ! 
RETURN( VAL( STRZERO(INT(NMINUTOS/60),2)+STRZERO((NMINUTOS-(INT(NMINUTOS/60)*60))*100/60,2)) / 100 )
*/



/*
// ======================================================================= \\
STATIC FUNCTION FMASKHORA3(NHORA)
// ======================================================================= \\
// --> NÃO EXISTE CHAMADA PARA FUNÇÃO ! 
RETURN(FMASKHORA2(FMINUTOS(SUBSTR(STRZERO(NHORA,6,2),2,2)+SUBSTR(STRZERO(NHORA,6,2),5,2))))
*/



/*
// ======================================================================= \\
STATIC FUNCTION FMINUTOS(CHORA)
// ======================================================================= \\

RETURN( (VAL(SUBSTR(CHORA,1,2))*60)+VAL(SUBSTR(CHORA,3,2)) )
*/


//-------------------------------------------------------------------
/*/{PROTHEUS.DOC} ITVLDVIG
VALIDACAO NA DATA INICIAL PARA ALIMENTAR AS VARIAVEIS FRANQUIA E VALOR EXCEDIDO
@AUTHOR FRANK ZWARG FUGA
@SINCE 10/09/2020
@VERSION P12
/*/
//-------------------------------------------------------------------
STATIC FUNCTION ITVLDVIG()
LOCAL _AAREA := GETAREA()
// FRANK FUGA - 14/08/19 - IDENTIFICAÇÃO DA FRANQUIA DE HORAS
FPA->(DBSETORDER(2))
IF FPA->(DBSEEK(XFILIAL("FPA")+CPROJETO+COBRA+CAS+CVIAGEM))
	_NFRAQ := FPA->FPA_HRFRAQ
	_NADIC := FPA->FPA_VLHREX
	_OFRAQ:REFRESH()
	_OADIC:REFRESH()
ENDIF
RESTAREA(_AAREA)
RETURN .T.


// FUNCAO PARA TRAZER O CONTADOR DA MEDICAO ANTERIOR
// FRANK ZWARG FUGA
// PROCESSO REALIZADO APÓS A DIGITAÇÃO DO NUMERO DA AS
STATIC FUNCTION FTRAZCONT
LOCAL _AAREA := GETAREA()
LOCAL _NREG  := SLF->(RECNO())
LOCAL _ATEMP := {}
LOCAL _NPOSX := 0

IF CSEQUENCIA > "001" .AND. _CTIPOX == "L" .AND. LINCLUI
	FPN->(DBSETORDER(3))
	FPN->(DBSEEK(XFILIAL("FPN")+CAS))
	WHILE !FPN->(EOF()) .AND. FPN->FPN_FILIAL == XFILIAL("FPN") .AND. FPN->FPN_AS == CAS
		IF FPN->FPN_SITUAC <> "6"
			_NPOSX := FPN->FPN_POSCON
		EndIF
		FPN->(DBSKIP())
	ENDDO
	FPN->(DBGOTO(_NREG))
	_NCONANT := _NPOSX
	OCONANT:REFRESH()
ENDIF
RESTAREA(_AAREA)
RETURN .T.

