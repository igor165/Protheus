#INCLUDE "loca049.ch" 
/*/{PROTHEUS.DOC} LOCA049.PRW
ITUP BUSINESS - TOTVS RENTAL
PROGRAMACAO DIARIA DE EQUIPAMENTOS - TRANSPORTES
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/
#INCLUDE "RWMAKE.CH"                                                                                                                                  
#INCLUDE "PROTHEUS.CH" 
#INCLUDE "TOPCONN.CH"                                                                                                                           

FUNCTION LOCA049()
LOCAL _CUSER		:= RETCODUSR(SUBSTR(CUSUARIO,7,15))  		// RETORNA O CÓDIGO DO USUÁRIO

PRIVATE _LUSER		:= .F.
PRIVATE CCADASTRO	:= STR0001 //"PROGRAMACAO DIARIA DE EQUIPAMENTOS - TRANSPORTES"
PRIVATE AROTINA		:= FMONTAROT()  							// MONTA O AROTINA
PRIVATE CDELFUNC	:= ".T." 									// VALIDACAO PARA A EXCLUSAO. PODE-SE UTILIZAR EXECBLOCK    
PRIVATE CEHTRANSP	:= .T. 										// VARIAVEL Q CONTROLA EDICAO DO CAMPO DATA DA PROG. CONFIGURADA NO CAMPO FPM_DTPROG NO SX3
PRIVATE ACOLSAUX	:= {}
PRIVATE ACOLSFULLAC := {} 
                                                                                                          
IF FQ1->(DBSEEK(XFILIAL("FQ1") + _CUSER + "LOCA049" , .T.)) 	// PROCURA O CÓDIGO DE USUÁRIO NA TABELA DE USUÁRIOS ANALIZADORES DE PROMOÇÕES (SZ5)
	_LUSER := .T.
ELSE
	_LUSER := .F.
ENDIF

DBSELECTAREA("ST9")
DBSETORDER(1)                                                                                               
MBROWSE(6,1,22,75,"ST9")

RETURN



// ======================================================================= \\
STATIC FUNCTION FMONTAROT() 				// MONTA O AROTINA
// ======================================================================= \\

LOCAL AROTINA := {} 

IF CNIVEL>=5
	AADD(AROTINA,{STR0002    , "AXPESQUI"   ,0,1}) //"PESQUISAR"
	AADD(AROTINA,{STR0003   , "LOCA04901" ,0,6}) //"VISUALIZAR"
	AADD(AROTINA,{STR0004  , "LOCA04902" ,0,4}) //"PROGRAMACAO"
ELSE
	AADD(AROTINA,{STR0002    , "AXPESQUI"   ,0,1})  //"PESQUISAR"
	AADD(AROTINA,{STR0003   , "LOCA04901" ,0,2})  //"VISUALIZAR"
ENDIF    
                                                                      
RETURN(AROTINA)



// ======================================================================= \\
FUNCTION LOCA04901()  					// AXVISUAL 
// ======================================================================= \\

FMANU(2)

RETURN



// ======================================================================= \\
FUNCTION LOCA04902() 					// AXALTERA 
// ======================================================================= \\

FMANU(4)                                                     

RETURN



// ======================================================================= \\
STATIC FUNCTION FMANU(POPC)
// ======================================================================= \\

LOCAL CTITJAN  := STR0005 //"PROGRAMACAO DIARIA FROTA - TRANSPORTE"
LOCAL NSTYLE 
LOCAL AAREAZLE := GETAREA()
LOCAL NPOS     := 0 
LOCAL NANO     := 0 

PRIVATE NOPC   := POPC  
PRIVATE AANOS  := {}
PRIVATE AMESES := {STR0006,STR0007,STR0008,STR0009,STR0010,STR0011,STR0012,STR0013,STR0014,STR0015,STR0016,STR0017}  //"JANEIRO"###"FEVEREIRO"###"MARÇO"###"ABRIL"###"MAIO"###"JUNHO"###"JULHO"###"AGOSTO"###"SETEMBRO"###"OUTUBRO"###"NOVEMBRO"###"DEZEMBRO"
PRIVATE CMES   := CANO := ""

PRIVATE OARIAL12N1  := TFONT():NEW("ARIAL",12,16,,.T.,,,,.T.,.F.)
PRIVATE OARIAL12N2  := TFONT():NEW("ARIAL",12,16,,.T.,,,,.T.,.F.)   
PRIVATE ODLGFRO , ODLGEQU , OFOLDERFRO , OFROTA , OANO , OMES 
PRIVATE CFROTA      := TRIM(ST9->T9_CODBEM)+" - "+TRIM(ST9->T9_NOME) 
PRIVATE CCODFROTA   := ST9->T9_CODBEM
PRIVATE CTIPOVEIC   := ST9->T9_TIPVEI

PRIVATE AHEADER		:= {}
PRIVATE ACOLS		:= {}       
PRIVATE AMARCADOS	:= {}
PRIVATE ADELETA		:= {}

PRIVATE NFOLDERFRO	:= 0
PRIVATE NFOLDEREQUI	:= 0

PRIVATE OFONT1		:= OARIAL12N1  //SAY
PRIVATE OFONT2		:= OARIAL12N2  //GET
PRIVATE AOBJECTS  	:= {}
PRIVATE AINFO     	:= {}
PRIVATE APOSGET   	:= {}
PRIVATE APOSOBJ   	:= {}    

PRIVATE CPERG	 	:= "LOCP017" 
PRIVATE CKEYP		:= ""
PRIVATE	CKEYS		:= ""

NSTYLE := GD_INSERT + GD_UPDATE + GD_DELETE 

IF ST9->T9_TIPOSE <> "T" 
	MSGALERT(STR0018 , STR0019)  //"OPERAÇÃO INCORRETA: FROTA DIFERENTE DE TRANSPORTE NÃO PODERÁ SER ALTERADA!"###"GPO - LOCT038.PRW"
	RETURN(.F.) 
ENDIF 

IF !PERGUNTE(CPERG,.T.)
	RETURN .F.
ENDIF   

CANO     := MV_PAR01
CMES     := AMESES[VAL(MV_PAR02)]
ASIZEAUT := MSADVSIZE()

FPM->(DBSELECTAREA("FPM"))
FPM->(DBSETORDER(1))     
REGTOMEMORY("FPM",.T.)  

IF OMAINWND:NCLIENTWIDTH > 800 
	AADD( AOBJECTS , { 100,008 , .T., .T. } )  	// ENCHOICE
	AADD( AOBJECTS , { 100,092 , .T., .T. } )  	// MSGETDADOS
ELSE
	AADD( AOBJECTS , { 100,030 , .T., .T. } )  	// ENCHOICE
	AADD( AOBJECTS , { 100,070 , .T., .T. } )  	// MSGETDADOS
ENDIF

AINFO 	:= {ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
APOSOBJ := MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )
APOSGET := MSOBJGETPOS((ASIZEAUT[3]-ASIZEAUT[1]),315,{{004,024,240,270}} ) 

NLIN1 := APOSOBJ[2,1]
NCOL1 := APOSOBJ[2,2]
NLIN2 := APOSOBJ[2,4]-APOSOBJ[2,2]  			// LARGURA
NCOL2 := APOSOBJ[2,3]-APOSOBJ[2,1]  			// ALTURA

APAGES  := {} 
ATITLES := {} 

AADD(ATITLES,STR0020)  //"PROGRAMACAO MENSAL"
NFOLDERFRO := LEN(ATITLES)  

AADD(ATITLES,STR0021		 )  //"ACESSORIOS"
NFOLDEREQU := LEN(ATITLES)

// --> PREENCHE ARRAY DOS ANOS
FOR NANO := YEAR(DDATABASE)-1 TO YEAR(DDATABASE)+12
	AADD(AANOS,STRZERO(NANO,4))
NEXT NANO 

DEFINE MSDIALOG ODLG FROM ASIZEAUT[7],0 TO ASIZEAUT[6],ASIZEAUT[5] TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL 
	//         TFOLDER():NEW(<NROW>  ,<NCOL>,<CPROMPT>,<CDLGNAMEN>,<OWND>,<NOPTION>,<NCLRFORE>,<NCLRBACK>,<LPIXEL>,<LDESIGN>,<NWIDTH>,<NHEIGHT>,<CMSG>) 
	OFOLDER := TFOLDER():NEW(NLIN1+15,NCOL1 ,ATITLES  ,APAGES     , ODLG ,         ,          ,          , .T.    , .F.     , NLIN2  ,NCOL2-15 ,      ) 
	
	FOR NPOS:=1 TO LEN(ATITLES)
		OFOLDER:ADIALOGS[NPOS]:OFONT:=ODLG:OFONT
	NEXT NPOS 
	
	OFOLDER:BSETOPTION := {|NINDO|LOCA04903(NINDO,OFOLDER:NOPTION,@ODLG,@OFOLDER)} 
	
	NLIN1 := APOSOBJ[1,1]
	NCOL1 := APOSOBJ[1,2]
	NLIN2 := APOSOBJ[1,3]
	NCOL2 := APOSOBJ[1,4]
	@ NLIN1,NCOL1 TO NLIN2+15,NCOL2 OF ODLG PIXEL 
	
	@ NLIN1+06,NCOL1+005 SAY   OEMTOANSI(STR0022)   SIZE 060,8          OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT1 //"ANO:"
	@ NLIN1+05,NCOL1+050 MSGET OANO  VAR CANO      SIZE 040,8 WHEN .F. OF ODLG PIXEL 
	
	@ NLIN1+06,NCOL1+100 SAY   OEMTOANSI(STR0023)   SIZE 060,8          OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT1      //"MES:"
	@ NLIN1+05,NCOL1+140 MSGET OMES  VAR CMES      SIZE 060,8 WHEN .F. OF ODLG PIXEL 
	    
	@ NLIN1+25,NCOL1+005 SAY   OEMTOANSI(STR0024) SIZE 065,8          OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT1        //"FROTA:"
	@ NLIN1+24,NCOL1+050 MSGET OFROTA  VAR CFROTA  SIZE 400,8 WHEN .F. OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT2      
	
	IF NFOLDERFRO > 0
		NLIN1 := 002
		NCOL1 := 003
		NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-35  	// ALTURA
		NCOL2 := APOSOBJ[2,4]-07
		FFOLDERFRO(NFOLDERFRO,NLIN1,NCOL1,NLIN2,NCOL2)
	ENDIF
	          
	IF NFOLDEREQU > 0 							// ACESSORIOS
		NLIN1 := 002
		NCOL1 := 003
		NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-35  	// ALTURA
		NCOL2 := APOSOBJ[2,4]-07
		FFOLDEREQUI(NFOLDEREQU,NLIN1,NCOL1,NLIN2,NCOL2)
	ENDIF
ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{||FSALVAR(ODLG)},{||FSAIR(ODLG)} ) 

RESTAREA(AAREAZLE)

RETURN 



// ======================================================================= \\
STATIC FUNCTION FFOLDERFRO(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2)
// ======================================================================= \\

LOCAL ACAMPOSSIM := {} 
LOCAL AAREAZL1   := GETAREA()    
LOCAL NSTYLE     := GD_INSERT + GD_UPDATE + GD_DELETE
LOCAL CALIAS , CCHAVE , CCONDICAO , NINDICE , CFILTRO 

IF !(_LUSER)
	NSTYLE := 0
ENDIF

CALIAS   := "FPM"
CCHAVE   := XFILIAL("FPM")+CANO+STRZERO(ASCAN(AMESES,CMES),2)+CCODFROTA
CCONDICAO:= 'FPM->FPM_FILIAL+FPM->FPM_ANOMES+FPM->FPM_FROTA=="'+CCHAVE+'"'
NINDICE  := 1  			// FPM_FILIAL + FPM_ANOMES + FPM_FROTA + DTOS(FPM_DTPROG) + HORA 
CFILTRO  := CCONDICAO

AADD(ACAMPOSSIM , {"FPM_DTPROG" , ""})
AADD(ACAMPOSSIM , {"FPM_DIASEM" , ""})
AADD(ACAMPOSSIM , {"FPM_STATUS" , ""})
AADD(ACAMPOSSIM , {"FPM_HORA"   , ""})   
AADD(ACAMPOSSIM , {"FPM_VIAGEM"	, ""}) 
AADD(ACAMPOSSIM , {"FPM_AS"   	, ""})
AADD(ACAMPOSSIM , {"FPM_PROJET"	, ""})
AADD(ACAMPOSSIM , {"FPM_OBRA"   , ""}) 
AADD(ACAMPOSSIM , {"FPM_CODMOT"	, ""})
AADD(ACAMPOSSIM , {"FPM_NOMMOT"	, ""})
AADD(ACAMPOSSIM , {"FPM_CODOPE"	, ""})
AADD(ACAMPOSSIM , {"FPM_NOMOPE"	, ""})
AADD(ACAMPOSSIM , {"FPM_LOCALI"	, ""})          
AADD(ACAMPOSSIM , {"FPM_FROTA1"	, ""})          
AADD(ACAMPOSSIM , {"FPM_FROTA2"	, ""})          
AADD(ACAMPOSSIM , {"FPM_FROTA3"	, ""})          
AADD(ACAMPOSSIM , {"FPM_FROTA4"	, ""})          
AADD(ACAMPOSSIM , {"FPM_OBS"    , ""}) 

AHEADER  := FHEADER(ACAMPOSSIM)
ACOLS    := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)
ACOLSAUX := ACLONE(ACOLS)		// FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO) 

//                             NTOP ,NLEFT,NBOTTOM,NRIGHT,NSTYLE,CLINHAOK      ,CTUDOOK,CINICPOS,AALTER,NFREEZE,NMAX,CFIELDOK    ,CSUPERDEL,CDELOK      ,OWND                     ,AHEADER,ACOLS} 
ODLGFRO := MSNEWGETDADOS():NEW(NLIN1,NCOL1,NLIN2  ,NCOL2 ,NSTYLE,"LOCA04905()",       ,        ,      ,       ,110 ,"LOCA04915()",         ,"LOCA04911()",OFOLDER:ADIALOGS[NFOLDER],AHEADER,ACOLS) 
ODLGFRO:OBROWSE:BCHANGE := {||LOCA04904()} 
RESTAREA(AAREAZL1) 

RETURN 



// ======================================================================= \\
STATIC FUNCTION FSALVAR(ODLG)
// ======================================================================= \\

LOCAL CMSGALERT := "" 
LOCAL NY        := 0 
LOCAL NX        := 0 

IF .T.		// MSGYESNO("CONFIRMA A ATUALIZAÇÃO DAS TABELAS ??")
	FOR NX:= 1 TO LEN(ODLGFRO:ACOLS)
   		_CCODMAT := ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODMOT" })]  
		_DDATA	 := ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG" })] 
		_OBRA	 := ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA" })] 
		_NUMAS	 := ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS" })]
		CA4MAT	 := POSICIONE("DA4",1,XFILIAL("DA4")+_CCODMAT,"DA4_MAT") 
		IF !ODLGFRO:ACOLS[NX][LEN(ODLGFRO:ACOLS[NX])] //!ODLGFRO:ACOLS[NX][LEN(AHEADER)+1]
			
			IF !LOCA04907("V",ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER, {|X| X[2]=="FPM_VIAGEM"})],ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER, {|X| X[2]=="FPM_STATUS"})] , ;
							  ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER, {|X| X[2]=="FPM_DTPROG"})],NX) 
				RETURN(.F.)
			ENDIF 
			FOR NY:= 1 TO 4
				DDTPRG	 := ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER, {|X| X[2]=="FPM_DTPROG"})]
				CCARRETA := ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER, {|X| X[2]=="FPM_FROTA"+CVALTOCHAR(NY)})]
				IF LOCA04910(DTOS(DDTPRG),CCARRETA) 
					MSGALERT(STR0025+ALLTRIM(CCARRETA)+STR0026+CVALTOCHAR(DDTPRG)+STR0027 , STR0019)  //"A CARRETA ["###"] JÁ ESTÁ PROGRAMADA NA DATA "###", CORRIGIR INCONSISTËNCIA"###"GPO - LOCT038.PRW"
					RETURN(.F.)
				ENDIF
			NEXT NY 

			IF SELECT("TMP") > 0
		 	     TMP->(DBCLOSEAREA())
		 	ENDIF
			CQUERY := " SELECT * "
			CQUERY += " FROM "+RETSQLNAME("FPQ")+" (NOLOCK) "
			CQUERY += " WHERE  D_E_L_E_T_ = '' "
			CQUERY += "   AND  FPQ_DATA   =  '" + DTOS(_DDATA) + "' "
			CQUERY += "   AND  FPQ_MAT    =  '" + CA4MAT       + "' "
			CQUERY += "   AND  FPQ_AS	  <> '" + _NUMAS       + "' "
			TCQUERY CQUERY NEW ALIAS "TMP"
		
			IF TMP->(!EOF())
				IF !EMPTY(_NUMAS)
					CMSGALERT += STR0028+_CCODMAT+STR0029+TABELA("75",TMP->FPQ_STATUS)+STR0030+CVALTOCHAR(_DDATA)+CHR(10)+CHR(13)  //"MOTORISTA "###" SELECIONADO ESTÁ PROGRAMADO COMO "###" PARA DATA "
					MSGALERT(CMSGALERT , STR0019)  //"GPO - LOCT038.PRW"
					TMP->(DBCLOSEAREA())
					RETURN(.F.)
				ENDIF
			ENDIF
				    
			TMP->(DBCLOSEAREA())
		ENDIF
		
		// SE HOUVER TROCA DE MOTORISTA 
        IF ASCAN( ACOLS, { |X|  X[1] =  DTOS(ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG" })] )  } ) > 0 
			IF ODLGFRO:ACOLS[NX][LEN(AHEADER)+1] .OR. (_CCODMAT <> ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODMOT" })] )
				CA4MAT	 := POSICIONE("DA4",1,XFILIAL("DA4")+ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODMOT" })] ,"DA4_MAT")
				/*
				CQUERY := " UPDATE "+RETSQLNAME("FPQ")+" "
				CQUERY += " SET   D_E_L_E_T_ = '*' "
				CQUERY += " WHERE FPQ_DATA = '"+DTOS(_DDATA)+"' "
				CQUERY += "	  AND FPQ_MAT  = '"+CA4MAT+"' " 
				CQUERY += "   AND FPQ_OBRA = '"+_OBRA +"' "
				CQUERY += "   AND FPQ_AS   = '"+_NUMAS+"' " 
				TCSQLEXEC(CQUERY)
				*/
			ENDIF
		ENDIF
	NEXT NX 
	
	IF XVALPERIODO()	
		FSALVAR000()
	ELSE
		RETURN(.F.)    
	ENDIF               
	
	IF .T.		// MSGYESNO("TABELAS ATUALIZADAS COM SUCESSO. DESEJA SAIR ??")
		ODLG:END()
	ENDIF
ENDIF                                                     

RETURN 



// ======================================================================= \\
STATIC FUNCTION FSAIR(ODLG)
// ======================================================================= \\

IF .T.//MSGYESNO("SAIR SEM GRAVAR. CONFIRMA ??")
	ODLG:END()
ENDIF

RETURN



// ======================================================================= \\
FUNCTION LOCA04903(NINDO,NESTOU,ODLG,OFOLDER)
// ======================================================================= \\

LOCAL LRET := .T.
LOCAL NI   := 0 
LOCAL NPOS := 0 

DO CASE

CASE NINDO==NFOLDERFRO

CASE NINDO==NFOLDEREQUI
	CNRAS    := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"   }	)]
	CPROJET  := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET" }	)]
	COBRA    := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"   }	)]
	CVIAGEM  := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM" }	)]
	
	IF VALTYPE(ODLGEQU) == "O"
		CNRAS    := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS" }	)]
		ACOLSTMP := {}
		FOR NI := 1 TO LEN(ACOLSFULLAC)
			IF ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"})] == CNRAS
				AADD(ACOLSTMP, ACLONE(ACOLSFULLAC[NI]) )
			ENDIF
		NEXT NI 
		IF EMPTY(ACOLSTMP)
			
			_NREG   := 0

			_CQUERY := " SELECT FPM_AS     , FPM_DTINI  , FPM_DTFIM  , FPM_PROJET , FPM_OBRA   , FPM_VIAGEM , FPM_QTACES , FPM_CODBEM , " 
			_CQUERY += "        FPM_DESCAC , FPM_CODFAN , FPM_STATU  , FPM_CARRET , FPM_UNIFIL , FPM_COMPR  , FPM_LARGUR , FPM_ALTURA , " 
			_CQUERY += "        FPM_PESO   , FPM_LOCAL  , FPM_CODOSM , FPM_DEVACE , " + RETSQLNAME("FPM") + ".R_E_C_N_O_ " 
			_CQUERY += " FROM " + RETSQLNAME("FPM") 
			_CQUERY += " WHERE  FPM_AS     = '" + CNRAS   + "'"
			_CQUERY += "   AND  FPM_PROJET = '" + CPROJET + "'"
			_CQUERY += "   AND  FPM_OBRA   = '" + COBRA   + "'"
			_CQUERY += "   AND  FPM_VIAGEM = '" + CVIAGEM + "'"
			_CQUERY += "   AND  FPM_ANOMES = ''"
			_CQUERY += "   AND  " + RETSQLNAME("FPM") + ".D_E_L_E_T_ = ''"
			_CQUERY += "  ORDER BY " + RETSQLNAME("FPM") + ".R_E_C_N_O_"
			TCQUERY _CQUERY NEW ALIAS "TRB"
			IF TRB->(EOF())
				ACOLS0 := {}
				FOR NPOS := 1 TO LEN(ODLGEQU:AHEADER)
					FPO->(AADD(ACOLS0,CRIAVAR(ODLGEQU:AHEADER[NPOS,2])))
				NEXT NPOS 
				AADD(ACOLS0, 0  )  		// NÚMERO DO REGISTRO
				AADD(ACOLS0,.F.  )  	// DELETED
				AADD(ACOLSTMP,ACOLS0)
				ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"    })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"  })]
				ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" })] := CTOD("  /  /  ") 
				ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" })] := CTOD("  /  /  ") 
				ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"})]
				ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  })]
				ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"})]
				ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_QTACES"})] := 0	// 1
			ELSE
				WHILE TRB->(!EOF())
					ACOLS0 := {}
					FOR NPOS := 1 TO LEN(ODLGEQU:AHEADER)
						FPO->(AADD(ACOLS0,CRIAVAR(ODLGEQU:AHEADER[NPOS,2])))
					NEXT NPOS 
					AADD(ACOLS0, TRB->R_E_C_N_O_  )  	// NÚMERO DO REGISTRO
					AADD(ACOLS0,.F.  )  				// DELETED
					AADD(ACOLSTMP,ACOLS0)
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"    })] := TRB->FPM_AS
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" })] := STOD(TRB->FPM_DTINI)
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" })] := STOD(TRB->FPM_DTFIM)
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"})] := TRB->FPM_PROJET
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  })] := TRB->FPM_OBRA
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"})] := TRB->FPM_VIAGEM
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_QTACES"})] := TRB->FPM_QTACES
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODBEM"})] := TRB->FPM_CODBEM
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DESCAC"})] := TRB->FPM_DESCAC
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODFAN"})] := TRB->FPM_CODFAN
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATU"})]  := TRB->FPM_STATU
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CARRET"})] := TRB->FPM_CARRET
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_UNIFIL"})] := TRB->FPM_UNIFIL
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_COMPR"})]  := TRB->FPM_COMPR
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_LARGUR"})] := TRB->FPM_LARGUR
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_ALTURA"})] := TRB->FPM_ALTURA
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PESO"})]   := TRB->FPM_PESO
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_LOCAL"})]  := TRB->FPM_LOCAL
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODOSM"})] := TRB->FPM_CODOSM
					ACOLSTMP[_NREG+1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DEVACE"})] := TRB->FPM_DEVACE
			    	_NREG++
			    	TRB->(DBSKIP())
				ENDDO					
			ENDIF
			TRB->(DBCLOSEAREA())					
		ENDIF
		ODLGEQU:ACOLS    := ACLONE(ACOLSTMP)
		ODLGEQU:NAT      := 1
		ODLGEQU:LNEWLINE := .F.
		ODLGEQU:REFRESH()
	ENDIF
		  
ENDCASE

DO CASE
CASE NESTOU==NFOLDERFRO
CASE NESTOU==NFOLDEREQUI
	ATUACACOLS()  			// ATUALIZANDO A ACOLSFULLAC COM AS ALTERAÇÕES DA ACOLS TEMPORÁRIA 
ENDCASE

OFOLDER:REFRESH()
ODLG:REFRESH()

SETFOCUS()

RETURN(LRET)



// ======================================================================= \\
STATIC FUNCTION FHEADER(ACAMPOSSIM)
// ======================================================================= \\

LOCAL NPOS,ATABAUX,AHEADER:={}

DBSELECTAREA("SX3")
DBSETORDER(2)  //X3_CAMPO
FOR NPOS:=1 TO LEN(ACAMPOSSIM)
	IF (LOCXCONV(1))->(DBSEEK(ALLTRIM(ACAMPOSSIM[NPOS,1])))
		ATABAUX:={}
		AADD(ATABAUX,TRIM(X3TITULO()))
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")        )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_PICTURE")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_TAMANHO")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_DECIMAL")      )  
		IF LEN(ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_VALID"))) > 0  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VALID")  + " .AND. LOCA04907('M')")
		ELSE
			AADD(ATABAUX," LOCA04907('M')")
		ENDIF 
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_USADO")        )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_TIPO")         )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_F3")           )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CONTEXT")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CBOX")         )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_RELACAO")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_WHEN")                                    ) 
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VISUAL")                                  )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VLDUSER")      )                                       
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_PICTVAR")      )                                                 
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_OBRIGAT")      )                              
		AADD(AHEADER,ATABAUX         )
	ENDIF
NEXT

IF LEN(ALLTRIM(AHEADER[ASCAN(AHEADER,{ |X| X[2]="FPM_VIAGEM"})][6])) > 0
	AHEADER[ASCAN(AHEADER,{ |X| X[2]="FPM_VIAGEM"})][6] += " .AND. LOCA04907('V')"
ELSE
	AHEADER[ASCAN(AHEADER,{ |X| X[2]="FPM_VIAGEM"})][6] := " LOCA04907('V')"
ENDIF       
   
DBSETORDER(1)  //X3_ARQUIVO+X3_ORDEM

RETURN(ACLONE(AHEADER))



// ======================================================================= \\
STATIC FUNCTION FCOLS(AHEADER, CALIAS, NINDICE, CCHAVE, CCONDICAO, CFILTRO)
// ======================================================================= \\

LOCAL NPOS , ACOLS0 , ACOLS := {} 

(CALIAS)->(DBSETORDER(NINDICE))
(CALIAS)->(DBSEEK(CCHAVE,.T.))
WHILE (CALIAS)->(!EOF() .AND. &CCONDICAO)
	IF !(CALIAS)->(&CFILTRO)
		(CALIAS)->(DBSKIP())
        LOOP
	ENDIF
	ACOLS0:={}
	FOR NPOS:=1 TO LEN(AHEADER)
		IF !AHEADER[NPOS,10]=="V"  		// X3_CONTEXT
			(CALIAS)->(AADD(ACOLS0,FIELDGET(FIELDPOS(AHEADER[NPOS,2]))))
		ELSE
			(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
		ENDIF
	NEXT NPOS 
	AADD(ACOLS0,.F.  )  				// DELETED     
	AADD(ACOLS,ACOLS0)    
	(CALIAS)->(DBSKIP())  
ENDDO 

IF EMPTY(ACOLS)
	ACOLS0 := {} 
	FOR NPOS:=1 TO LEN(AHEADER)
		(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
	NEXT NPOS 
	AADD(ACOLS0,.F.  )  //DELETED
	AADD(ACOLS,ACOLS0)
ENDIF

RETURN(ACLONE(ACOLS))



// ======================================================================= \\
STATIC FUNCTION FGRAVATUDO(CALIAS,AHEADER,ACOLS)  
// ======================================================================= \\
// --> GRAVA TODOS OS CAMPOS DO ACOLS
LOCAL NPOS , CCAMPO , _NTAMANHO 
LOCAL _CMSGALERT := ""
LOCAL _LOK := .T.

FOR NPOS:=1 TO LEN(AHEADER)
	CCAMPO := AHEADER[NPOS,2]
	IF ALLTRIM(CCAMPO) $ "FPM_COMPR#FPM_LARGUR#FPM_ALTURA#FPM_PESO"
		_NTAMANHO := GETSX3CACHE(CCAMPO,"X3_TAMANHO")
		IF _NTAMANHO <= LEN(SUBSTR(ALLTRIM(STR(ACOLS[NPOS])),1,IIF(AT(".",ALLTRIM(STR(ACOLS[NPOS])))==0,LEN(ALLTRIM(STR(ACOLS[NPOS]))),AT(".",ALLTRIM(STR(ACOLS[NPOS])))-1)))+2
			_CMSGALERT := "O CAMPO " + ALLTRIM(GETSX3CACHE(CCAMPO,"X3_TITULO")) + STR0031 + ;  //" NÃO SERÁ GRAVADO, POIS ESTÁ COM TAMANHO "
			              PADL("",VAL(ALLTRIM(STR(LEN(SUBSTR(ALLTRIM(STR(ACOLS[NPOS])),1,IIF(AT(".",ALLTRIM(STR(ACOLS[NPOS])))==0,LEN(ALLTRIM(STR(ACOLS[NPOS]))),AT(".",ALLTRIM(STR(ACOLS[NPOS])))-1)))))),"9") + ".99" +;
			              STR0032 + PADL("",VAL(ALLTRIM(STR(_NTAMANHO-1))),"9") + ".99!" //", DEVENDO TER NO MÁXIMO O TAMANHO "
			_LOK := .F. 
			EXIT 
		ENDIF
	ENDIF
	(CALIAS)->(&CCAMPO):=ACOLS[NPOS]
NEXT NPOS 

IF !_LOK
	MSGALERT(_CMSGALERT , STR0019) //"GPO - LOCT038.PRW"
ENDIF

RETURN(.T.)



// ======================================================================= \\
STATIC FUNCTION FSALVAR000()
// ======================================================================= \\

PROCESSA({||FSALVAR001()},STR0033) //"AGUARDE... ATUALIZANDO AS TABELAS"

RETURN



// ======================================================================= \\
STATIC FUNCTION FSALVAR001()
// ======================================================================= \\

PROCREGUA(LEN(OFOLDER:ADIALOGS))

INCPROC(STR0034) //"ATUALIZANDO... PROGRAMACAO DIARIA - TRANSPORTE"

IF NFOLDERFRO>0
	FSALVARFRO("FPM",ODLGFRO:AHEADER,ODLGFRO:ACOLS)
ENDIF  

IF NFOLDEREQU>0
	FSALVAREQU("FPO",ODLGEQU:AHEADER,ODLGEQU:ACOLS) //FSALVAREQU("FPO",ODLGEQU:AHEADER,ACOLSFULLAC)
ENDIF 

RETURN 



// ======================================================================= \\
STATIC FUNCTION FSALVARFRO(CALIAS,AHEADER,ACOLS) 
// ======================================================================= \\

LOCAL NPOS
LOCAL CPROJETO   := ""
LOCAL COBRA      := ""
LOCAL CVIAGEM    := ""
LOCAL DDATA      := DDATABASE
LOCAL NITEMDTR   := 0
LOCAL LREPLICA   := .F.
LOCAL I          := 0 
//LOCAL CTPCARRE := SUPERGETMV("MV_LOCX037",.F.,"")
//LOCAL NITEMZL9 := 0

DBSELECTAREA(CALIAS)  
DBSETORDER(3)

FOR NPOS:=1 TO LEN(ACOLS)

	IF !ACOLS[NPOS,LEN(AHEADER)+1]

		IF !EMPTY(ACOLS[NPOS,1]) .AND. YEAR(ACOLS[NPOS,1]) == VAL(MV_PAR01) .AND. MONTH(ACOLS[NPOS,1]) == VAL(MV_PAR02)
			CCHAVEAUX := XFILIAL("FPM")+CANO+STRZERO(ASCAN(AMESES,CMES),2)+CCODFROTA
			CCHAVEAUX += "T"+DTOS( ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG"})] )
			CCHAVEAUX +=           ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_HORA"})]
			IF FPM->(DBSEEK(CCHAVEAUX))
				RECLOCK(CALIAS,.F.)
			ELSE
				RECLOCK(CALIAS,.T.)
			ENDIF          
			FGRAVATUDO(CALIAS,AHEADER,ACOLS[NPOS])  //GRAVA TODOS OS CAMPOS DO ACOLS
			(CALIAS)->FPM_FILIAL	:= XFILIAL(CALIAS)
			(CALIAS)->FPM_ANOMES	:= MV_PAR01+STRZERO(ASCAN(AMESES,CMES),2)
			(CALIAS)->FPM_FROTA		:= CCODFROTA    
			(CALIAS)->FPM_TIPO		:= "T"
			(CALIAS)->FPM_CODBEM	:= SPACE(06)
			(CALIAS)->(MSUNLOCK())
			// SOMENTE PROGRAMA MOTORISTA NO TIME SHEET SE HOUVER AS PREENCHIDA.
			IF !EMPTY(ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODMOT"})]) .AND.;
				!EMPTY(ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"})])
				CMAT 	:= (ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODMOT"})])
				CVIAGEM := (ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"})]) 
				DDATA	:= (ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG"})]) 
				CAS     := (ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"})]) 
				CPROJETO:= (ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"})]) 
				COBRA   := (ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"})]) 
				FPROGMOTO(CMAT,CVIAGEM,DDATA,CAS,CPROJETO,COBRA)
			ENDIF
			IF LREPLICA 
				FOR I = 1 TO 4                                                 
					DO CASE 
	                CASE I ==1                                                     
						_NVAFROTA := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA1"})]
						_NFROTA1  := CCODFROTA
						_NFROTA2  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA2"})]
						_NFROTA3  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA3"})]
						_NFROTA4  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA4"})]
	                CASE I ==2                                                     
						_NVAFROTA := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA2"})]
						_NFROTA2  := CCODFROTA
						_NFROTA1  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA1"})]
						_NFROTA3  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA3"})]
						_NFROTA4  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA4"})]
	                CASE I ==3                                                     
						_NVAFROTA := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA3"})]
						_NFROTA3  := CCODFROTA
						_NFROTA2  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA2"})]
						_NFROTA1  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA1"})]
						_NFROTA4  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA4"})]
	                CASE I ==4                                                     
						_NVAFROTA := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA4"})]  
						_NFROTA4  := CCODFROTA
						_NFROTA2  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA2"})]
						_NFROTA3  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA3"})]
						_NFROTA1  := ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA1"})]
					ENDCASE 
			     
					IF LEN(_NVAFROTA)>0
		                CCHAVEAUX:=XFILIAL("FPM")+CANO+STRZERO(ASCAN(AMESES,CMES),2)+_NVAFROTA
		    	        CCHAVEAUX+="T"+DTOS( ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG"})] )
				        CCHAVEAUX+=ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_HORA"})] 
				        IF FPM->(DBSEEK(CCHAVEAUX))
					       RECLOCK(CALIAS,.F.)
				        ELSE
					       RECLOCK(CALIAS,.T.)
				        ENDIF          
				        FGRAVATUDO(CALIAS,AHEADER,ACOLS[NPOS])  	// GRAVA TODOS OS CAMPOS DO ACOLS
				        (CALIAS)->FPM_FILIAL := XFILIAL(CALIAS) 
				        (CALIAS)->FPM_ANOMES := MV_PAR01+STRZERO(ASCAN(AMESES,CMES),2)
				        (CALIAS)->FPM_FROTA	 := _NVAFROTA    
				        (CALIAS)->FPM_TIPO	 := "T"
				        (CALIAS)->FPM_CODBEM := SPACE(06) 
				        (CALIAS)->FPM_FROTA1 :=_NFROTA1
				        (CALIAS)->FPM_FROTA2 :=_NFROTA2
				        (CALIAS)->FPM_FROTA3 :=_NFROTA3
				        (CALIAS)->FPM_FROTA4 :=_NFROTA4 
					ENDIF   
				NEXT I 
			ENDIF
	        
			IF  GDFIELDGET("FPM_STATUS" , NPOS , .F., ODLGFRO:AHEADER, ODLGFRO:ACOLS) == "3"
				CPROJETO := GDFIELDGET("FPM_PROJET"   , NPOS , .F., ODLGFRO:AHEADER, ODLGFRO:ACOLS)
				COBRA    := GDFIELDGET("FPM_OBRA"     , NPOS , .F., ODLGFRO:AHEADER, ODLGFRO:ACOLS)
				CVIAGEM  := GDFIELDGET("FPM_VIAGEM"   , NPOS , .F., ODLGFRO:AHEADER, ODLGFRO:ACOLS)
				DDATA    := GDFIELDGET("FPM_DTPROG"   , NPOS , .F., ODLGFRO:AHEADER, ODLGFRO:ACOLS)
	            
				DBSELECTAREA("DTR")
				AAREADTR := DTR->(GETAREA())
				DBSETORDER(7)								// DTR_FILIAL + DTR_SOT + DTR_OBRA + DTR_VIAGEM + DTR_CODVEI 
				IF MSSEEK(XFILIAL("DTR") + CPROJETO + COBRA + CVIAGEM + ST9->T9_CODBEM )
					RECLOCK("DTR",.F.)
				ELSE
					RECLOCK("DTR",.T.)
				ENDIF               
				DTR->DTR_FILIAL := XFILIAL("DTR") 			// C.T.R.C
				DTR->DTR_SOT    := CPROJETO
				DTR->DTR_OBRA   := COBRA
				DTR->DTR_VIAGEM := CVIAGEM                                                                             
				DTR->DTR_ITEM   := STRZERO(++NITEMDTR,2)
				DTR->DTR_CODVEI := ST9->T9_CODBEM
				DTR->DTR_DTPROG := DDATA
				DTR->DTR_TIPO   := "P"  
				DTR->DTR_CODMOT := GDFIELDGET("FPM_CODMOT"   , NPOS , .F., ODLGFRO:AHEADER, ODLGFRO:ACOLS)
				MSUNLOCK()
	            
	            RESTAREA(AAREADTR)
	                                                                                         
	            CSEQ := VERSEQ(CPROJETO , COBRA , CVIAGEM)	// STRZERO(++NITEMZL9,3)
	            
				DBSELECTAREA("ZL9") 						// ORDEM DE CARREGAMENTO E COLETA
				DBSETORDER(2) 								// ZL9_FILIAL + ZL9_PROJET + ZL9_OBRA + ZL9_VIAGEM + ZL9_CODVEI 
				IF MSSEEK(XFILIAL("ZL9") + CPROJETO + COBRA + CVIAGEM + ST9->T9_CODBEM )
					RECLOCK("ZL9",.F.)
				ELSE
					RECLOCK("ZL9",.T.)
				ENDIF               
	            ZL9->ZL9_FILIAL := XFILIAL("ZL9")
	            ZL9->ZL9_SEQ    := CSEQ
	            ZL9->ZL9_PROJET := CPROJETO
	            ZL9->ZL9_OBRA   := COBRA
	            ZL9->ZL9_VIAGEM := CVIAGEM
	            ZL9->ZL9_DTPROG := DDATA
	            ZL9->ZL9_FROTA  := ST9->T9_CODBEM 
	            ZL9->ZL9_PLACA  := ST9->T9_PLACA
	            ZL9->ZL9_MOTORI := GDFIELDGET("FPM_CODMOT"   , NPOS , .F., ODLGFRO:AHEADER, ODLGFRO:ACOLS)
	            ZL9->ZL9_NOMEMO := GDFIELDGET("FPM_NOMMOT"   , NPOS , .F., ODLGFRO:AHEADER, ODLGFRO:ACOLS)
				MSUNLOCK()
			ENDIF
		ENDIF

	ELSE                     

		IF FPM->(DBSEEK( XFILIAL("FPM")+CANO+STRZERO(ASCAN(AMESES,CMES),2)+CCODFROTA+"T"+; 
				DTOS( ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG"})] )+;
				ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_HORA"})]))

			RECLOCK("FPM",.F.)
			FPM->(DBDELETE())
			MSUNLOCK()    

			// --> ROTINA PARA EXCLUIR VÍNCULO COM A CTRB   (*INICIO*)
			IF SELECT("TRAB") > 0
				TRAB->(DBCLOSEAREA())
			ENDIF
			CQUERY := " SELECT FPM_AS " 
			CQUERY += " FROM " + RETSQLNAME("FPM") 
			CQUERY += " WHERE  D_E_L_E_T_ = '' "
			CQUERY += "   AND  FPM_AS     = '" + FPM->FPM_AS     + "'" 
			CQUERY += "   AND  FPM_VIAGEM = '" + FPM->FPM_VIAGEM + "'" 
			DBUSEAREA(.T. , "TOPCONN" , TCGENQRY(,,CQUERY) , "TRAB" , .F. , .T.) 

			IF EMPTY(TRAB->FPM_AS) 
				FQ5->(DBSETORDER(1)) 
				IF FQ5->(DBSEEK(XFILIAL("FQ5")+FPM->FPM_VIAGEM)) 
					FQ5->(RECLOCK("FQ5",.F.)) 
					FQ5->FQ5_FRTINT := "N" 
					FQ5->(MSUNLOCK()) 
				ENDIF 
			ENDIF 

			IF SELECT("TRAB") > 0 
				TRAB->(DBCLOSEAREA()) 
			ENDIF
			// --> ROTINA PARA EXCLUIR VÍNCULO COM A CTRB   (*FINAL* )

		ENDIF	

	ENDIF    

NEXT NPOS 

RETURN      



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±± 
±±ºPROGRAMA  ³ PESQZLE   º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ PESQUISA DA CONSULTA ESPECIFICA                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
/*	// --> NÃO EXISTE CHAMADA DESTA FUNÇÃO.
STATIC FUNCTION PESQZLE(ADTQ,CCAMPO,OLISTBOX,OCBX)

NPOS := ASCAN(ADTQ, {|X| X[OCBX:NAT] == ALLTRIM(UPPER(CCAMPO)) })   
 
RETURN NPOS                                    
*/



// ======================================================================= \\
STATIC FUNCTION VERSEQ(CPROJETO , COBRA , CVIAGEM)
// ======================================================================= \\

LOCAL NSEQZL9 := 1

DBSELECTAREA("ZL9")
DBSETORDER(1)
DBGOTOP()

IF MSSEEK(XFILIAL("ZL9") + CPROJETO + COBRA + CVIAGEM )
	WHILE !EOF() .AND. ZL9->ZL9_PROJET + ZL9->ZL9_OBRA + ZL9->ZL9_VIAGEM == CPROJETO + COBRA + CVIAGEM 
		NSEQZL9 := VAL(ZL9->ZL9_SEQ)
		ZL9->(DBSKIP())
	ENDDO 
	NSEQZL9 := NSEQZL9 + 1
ENDIF

RETURN(STRZERO(NSEQZL9,3))    



// ======================================================================= \\
FUNCTION LOCA04904()  					// MUDA O BROWSE
// ======================================================================= \\

LOCAL LRET := .T.

IF VALTYPE(ODLGFRO)=="O"  					// SE O OBJETO JÁ FOI CRIADO
	IF ODLGFRO:NAT > 1
		IF EMPTY(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG" })])
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG" })]	:= CTOD("  /  /  ")
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_HORA" })]		:= "    "
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS" })]		:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA" })]		:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODMOT" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODMOT" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_NOMMOT" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_NOMMOT" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODOPE" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODOPE" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_NOMOPE" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_NOMOPE" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_LOCALI" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_LOCALI" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA1" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA1" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA2" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA2" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA3" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA3" })]
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA4" })]	:= ODLGFRO:ACOLS[(ODLGFRO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_FROTA4" })]
		ENDIF
	ENDIF
	ODLGFRO:OBROWSE:REFRESH()
ENDIF

RETURN LRET                 
                                 


// ======================================================================= \\
FUNCTION LOCA04905()					// VALIDA SE A LINHA ESTÁ OK 
// ======================================================================= \\
LOCAL LRET := .T.          

LRET := LOCA04906("9")

RETURN LRET 


// ======================================================================= \\
FUNCTION LOCA04906(_COPC , _CCAMPO) 
// ======================================================================= \\

LOCAL _LRET 	 := .T.
LOCAL _CDTPROG	 := IIF(_COPC $ "9|1|" , ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG" })]  ,M->FPM_DTPROG)
LOCAL _CZESTATUS := IIF(_COPC $ "9|1|" , ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS" })]  ,M->FPM_STATUS)
LOCAL _CZEVIAGEM := IIF(_COPC $ "9|1|" , ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM" })]  ,M->FPM_VIAGEM)

IF _COPC == "1" .OR. _COPC == "9"	//DATA DA PROGRAMAÇÃO OU VALIDAÇÃO DA LINHA OK
	IF EMPTY(_CDTPROG)
		_LRET := .F.
		MSGALERT(STR0035 , STR0019) //"ATENÇÃO !!! O CAMPO DATA DE PROGRAMAÇÃO É DE PREENCHIMENTO OBRIGATÓRIO."###"GPO - LOCT038.PRW"
	ENDIF
	IF YEAR(_CDTPROG) <> VAL(MV_PAR01) .OR. MONTH(_CDTPROG) <> VAL(MV_PAR02)
		_LRET := .F.
		MSGALERT(STR0036 + ALLTRIM(MV_PAR02) + STR0037 + ALLTRIM(MV_PAR01) + "." , STR0019) //"ATENÇÃO !!! O CAMPO DATA DE PROGRAMAÇÃO SÓ ACEITARÁ LANÇAMENTOS NO MÊS "###" E ANO "###"GPO - LOCT038.PRW"
	ENDIF
	IF _CZESTATUS $ '2|7|8|4|5|6|3' .AND. EMPTY(_CZEVIAGEM)
		MSGALERT(STR0038 , STR0019)  //"VIAGEM NÃO PREECHIDA! PARA OS STATUS 2-3-4-5-6-7-8 É NECESSÁRIO O PREENCHIMENTO DA VIAGEM."###"GPO - LOCT038.PRW"
		_LRET := .F.
	ELSEIF _CZESTATUS == "1" 
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM" })] 	:= SPACE(6)
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS" })] 		:= SPACE(25)
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET" })]	:= SPACE(10)
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA" })]		:= SPACE(4)				
	ENDIF 
ENDIF                         
_LRET := LOCA04907("V" , ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER, {|X| X[2]=="FPM_VIAGEM"})],;
						 ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER, {|X| X[2]=="FPM_STATUS"})],;
						 ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER, {|X| X[2]=="FPM_DTPROG"})])

RETURN _LRET                 



// ======================================================================= \\
FUNCTION LOCA04907(CTIPO,CVIAGEM,CSTATUS,DDTPRG,NLIN)
// ======================================================================= \\

LOCAL LRET 		:= .T. 
LOCAL NX        := 0 
//LOCAL LTPAS   := .T.
//LOCAL LSTATUS	:= .T.
//LOCAL LJNT    := .T.
//LOCAL LDATAENC:= .T. 

DEFAULT CVIAGEM := M->FPM_VIAGEM
DEFAULT CSTATUS := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS" })]//M->FPM_STATUS
DEFAULT DDTPRG	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTPROG" })]//M->FPM_DTPROG
DEFAULT CTIPO	:= "V"
DEFAULT NLIN	:= ODLGFRO:NAT
			
//(!EMPTY(FQ5->FQ5_DATAENC) .OR. !EMPTY(FQ5->FQ5_DATAENC).AND. FQ5->FQ5_STATUS == '1').OR. FQ5->FQ5_STATUS == '6') .AND. FQ5->FQ5_TPAS <> 'F' .AND. EMPTY(FQ5->FQ5_JUNTO)
IF CTIPO == "V"							// VALIDADE DA AS
	IF !CSTATUS $ '1|M|F|9' 
   		CNUMAS := POSICIONE("FQ5",1,XFILIAL("FQ5")+CVIAGEM,"FQ5_AS")
		IF !LOCA05308(CNUMAS,.T.) 		// !(LDATAENC .AND. LSTATUS .AND. LTPAS .AND. LJNT) 
			LRET := .F.
			MSGALERT(STR0039+CVALTOCHAR(DDTPRG)+"]" , STR0019)  //"A VIAGEM NÃO PODE SER SELECIONADA. FAVOR REVISAR A PROGRAMAÇÃO - DATA: ["###"GPO - LOCT038.PRW"
			RETURN(LRET)
		ENDIF
	ENDIF
	
	IF !CSTATUS $ "2|7|8|M"				// "3|6|M" 
		DDTINI := POSICIONE("FQ5",1,XFILIAL("FQ5")+CVIAGEM,"FQ5_DATINI")
		DDTFIM := POSICIONE("FQ5",1,XFILIAL("FQ5")+CVIAGEM,"FQ5_DATFIM")
		
		IF !(DDTINI <= DDTPRG .AND. DDTFIM >= DDTPRG)
			IF !(EMPTY(CVIAGEM) .AND. CSTATUS == "M")
				IF !EMPTY(CVIAGEM)
					LRET := .F. 
					MSGALERT(STR0040+CVALTOCHAR(DDTPRG)+STR0041+CVALTOCHAR(DDTINI)+STR0042+CVALTOCHAR(DDTFIM)+"]" , STR0019)  //"A DATA PROGRAMADA ["###"] NÃO ESTÁ DENTRO DO PERÍODO VIGENTE DA AS DE ["###"] ATÉ ["###"GPO - LOCT038.PRW"
		  		ENDIF
	  		ENDIF
		ENDIF               

	ELSEIF CSTATUS $ "1|M" .AND. !EMPTY(ODLGFRO:ACOLS[NLIN][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM" })])
		MSGALERT(STR0043 , STR0019) //"VIAGEM NÃO PODERÁ SER MENCIONADA PARA STATUS SELECIONADO"###"GPO - LOCT038.PRW"
		ODLGFRO:ACOLS[NLIN][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"})] := SPACE(06) 
		ODLGFRO:ACOLS[NLIN][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"    })] := SPACE(25) 
		ODLGFRO:ACOLS[NLIN][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"})] := SPACE(10) 
		ODLGFRO:ACOLS[NLIN][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  })] := SPACE(04) 
		ODLGFRO:REFRESH()
		LRET := .F.
	ENDIF

ELSEIF CTIPO == "D"						// DATA DE PROGRAMACAO
	FOR NX := 1 TO LEN(ODLGFRO:ACOLS)
 		IF ASCAN(ODLGFRO:ACOLS,{|X| X[1]==M->FPM_DTPROG}) > 0
 			LRET := .F. 
 			MSGALERT(STR0044+CVALTOCHAR(M->FPM_DTPROG)+STR0045 , STR0019)  //"DATA ["###"] JÁ PROGRAMADA PARA A FROTA. CORRIGIR INCONSISTENCIA."###"GPO - LOCT038.PRW"
 			RETURN(LRET)
 		ENDIF
 	NEXT NX 

ELSEIF CTIPO == "M"						// MANUTENCAO 
	IF M->FPM_STATUS $ "1" .AND. !EMPTY(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM" })])
		MSGINFO(STR0046 , STR0019) //"VIAGEM NÃO PODERÁ SER MENCIONADA PARA STATUS DISPONÍVEL"###"GPO - LOCT038.PRW"
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"})] := SPACE(06) 
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"    })] := SPACE(25) 
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"})] := SPACE(10) 
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  })] := SPACE(04) 
		ODLGFRO:REFRESH()
	ENDIF
	IF ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS" })] == "9"
		LRET := .F.
		MSGALERT(STR0047 , STR0019) //"PROGRAMAÇÃO DE MANUTENÇÃO NÃO PODERÁ SER ALTERADA"###"GPO - LOCT038.PRW"
		RETURN(LRET)
	ENDIF  

//ELSEIF CTIPO == "T"					// MOTORISTA

ENDIF

RETURN(LRET)


/*
// ======================================================================= \\
FUNCTION LOCA04908(PTIPO)
// ======================================================================= \\
//	// --> NÃO EXISTE CHAMADA DESTA FUNÇÃO.
LOCAL CALIAS   := ALIAS()
LOCAL AAREA    := GETAREA()
LOCAL CCHAVE
LOCAL NPOSLIST := 0
LOCAL OLISTBOX, OCONF, OCANC, OVISU
LOCAL ODLG
LOCAL OCBX , AORD := {"NR. AS","VIAGEM","CLIENTE"}
LOCAL OBIGGET , CCAMPO := CRIAVAR("FPM_AS")+CRIAVAR("FPM_VIAGEM") 
LOCAL ADTQ     := {}

PRIVATE CVIAGEM := ""
PRIVATE NORD := 1, CORD:="1",LOK := .F.

STATIC CRETDTQ

CQUERY := "	SELECT FQ5_AS,FQ5_SOT,FQ5_OBRA,FQ5_VIAGEM,FQ5_NOMCLI "
CQUERY += "	FROM "+RETSQLNAME("FQ5") 
CQUERY += "	WHERE D_E_L_E_T_ = ' ' "
CQUERY += "		AND FQ5_ENCERR <> '2' "
CQUERY += " 	AND FQ5_TPAS IN('T') "  
CQUERY += " 	AND ((FQ5_DATFEC <> '' OR FQ5_DATENC <> '' AND FQ5_STATUS = '1') "
CQUERY += "     	OR FQ5_STATUS = '6' )"
CQUERY += " 	AND FQ5_JUNTO = '' "
CQUERY += " 	AND FQ5_STATUS <> '9' " 
//CQUERY += "		AND FQ5_EQUIP = '"+CCODFROTA+"'"
CQUERY += "	GROUP BY FQ5_AS,FQ5_SOT,FQ5_OBRA,FQ5_VIAGEM,FQ5_NOMCLI "
CQUERY += "	ORDER BY FQ5_AS"

IF SELECT("TRB") > 0
	DBSELECTAREA("TRB")
	TRB->(DBCLOSEAREA())
ENDIF

DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRB", .F., .T.)

IF TRB->(EOF())
	MSGSTOP("NO EXISTEM REGISTROS CADASTRADOS.")
	TRB->(DBCLOSEAREA())
	RETURN .F.
ENDIF

WHILE ! TRB->(EOF())
	AADD(ADTQ, { ALLTRIM(TRB->FQ5_AS    ) 	,;
				ALLTRIM(TRB->FQ5_VIAGEM) 	,;
				ALLTRIM(TRB->FQ5_SOT   ) 	,;
				ALLTRIM(TRB->FQ5_OBRA  ) 	,;
				ALLTRIM(TRB->FQ5_NOMCLI) } )
	TRB->(DBSKIP())
ENDDO

TRB->(DBCLOSEAREA())

DEFINE MSDIALOG ODLG FROM 00,00 TO 400,490 PIXEL TITLE OEMTOANSI("PESQUISAR")
	@ 05,05 COMBOBOX OCBX VAR CORD ITEMS AORD SIZE 206,36 PIXEL OF ODLG FONT ODLG:OFONT
	@ 22,005 MSGET OBIGGET VAR CCAMPO SIZE 206,10 PIXEL
	@ 05,215 BUTTON OCONF PROMPT "PESQUISAR" SIZE 30,10  FONT ODLG:OFONT ;  
			ACTION (OLISTBOX:NAT := PESQZLQ1(ADTQ,ALLTRIM(CCAMPO),OLISTBOX,OCBX),; //'PESQUISAR'
					OLISTBOX:BLINE:={||{ADTQ[OLISTBOX:NAT][1],;
										ADTQ[OLISTBOX:NAT][2],;
				   						ADTQ[OLISTBOX:NAT][3],;
				   						ADTQ[OLISTBOX:NAT][4],;
										ADTQ[OLISTBOX:NAT][5]}},OCONF:SETFOCUS())  OF ODLG PIXEL
				
				OCBX:BCHANGE := {|| PESQZLQ1(ADTQ,ALLTRIM(CCAMPO),OLISTBOX,OCBX) }
			
	@ 0,0 BITMAP OBMP RESNAME "PROJETOAP" OF ODLG SIZE 100,300 NOBORDER WHEN .F. PIXEL

	OLISTBOX := TWBROWSE():NEW( 40,05,204,140,,{"NUMERO AS","VIAGEM","PROJETO","OBRA","CLIENTE"},,ODLG,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
	OLISTBOX:SETARRAY(ADTQ)
	OLISTBOX:BLINE := { ||{	ADTQ[OLISTBOX:NAT][1],;
							ADTQ[OLISTBOX:NAT][2],;
							ADTQ[OLISTBOX:NAT][3],;
							ADTQ[OLISTBOX:NAT][4],;
							ADTQ[OLISTBOX:NAT][5] }}

	OLISTBOX:BLDBLCLICK := { ||EVAL(OCONF:BACTION), ODLG:END()}

	@ 185,05  BUTTON OCONF PROMPT "CONFIRMA"   SIZE 45 ,10   FONT ODLG:OFONT ACTION (LOK:=.T.,CCHAVE:=ADTQ[OLISTBOX:NAT][1],CVIAGEM:=ADTQ[OLISTBOX:NAT][2],ODLG:END())  OF ODLG PIXEL
	@ 185,55  BUTTON OCANC PROMPT "CANCELA"    SIZE 45 ,10   FONT ODLG:OFONT ACTION (LOK:=.F.,ODLG:END())  OF ODLG PIXEL

	IF NPOSLIST > 0

		OLISTBOX:NAT := NPOSLIST
		OLISTBOX:BLINE := { ||{	ADTQ[OLISTBOX:NAT][1],;
								ADTQ[OLISTBOX:NAT][2],;
								ADTQ[OLISTBOX:NAT][3],;
								ADTQ[OLISTBOX:NAT][4],;
								ADTQ[OLISTBOX:NAT][5] }}
                                
		OCONF:SETFOCUS()

	ENDIF

ACTIVATE MSDIALOG ODLG CENTERED
//VARIAVEL UTILIZADA NO RETORNO SXB

IF PTIPO = "T"
	CRETDTQ := CVIAGEM
ELSE
	CRETDTQ := CCHAVE
ENDIF

RETURN LOK
*/


/*
// ======================================================================= \\
STATIC FUNCTION PESQZLQ1(ADTQ,CCAMPO,OLISTBOX,OCBX)
// ======================================================================= \\
//	// --> NÃO EXISTE CHAMADA DESTA FUNÇÃO. (A ÚNICA, ESTÁ COMENTADA) 
NORD := OCBX:NAT

IF OCBX:NAT == 3
	ASORT(ADTQ,,,{|X,Y| X[5] < Y[5] })
	OLISTBOX:AARRAY:=ADTQ
	NPOS := ASCAN(ADTQ, {|X| X[5] = ALLTRIM(UPPER(CCAMPO)) })
ELSE
	ASORT(ADTQ,,,{|X,Y| X[OCBX:NAT] < Y[OCBX:NAT] })
	OLISTBOX:AARRAY:=ADTQ
	NPOS := ASCAN(ADTQ, {|X| X[OCBX:NAT] == ALLTRIM(UPPER(CCAMPO)) })
ENDIF

OLISTBOX:REFRESH()

IF NPOS == 0 .AND. !EMPTY(CCAMPO)
	MSGALERT("NÃO ENCONTRADO" , "GPO - LOCT038.PRW") 
	NPOS:=1
ENDIF

RETURN NPOS
*/



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ XRETDTQ   º AUTOR ³ IT UP BUSINESS     º DATA ³ 07/05/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ RETORNO DA CONSULTA ESPECIFICA                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA04909()

RETURN(CRETDTQ) 



// ======================================================================= \\
FUNCTION LOCA04910(DDTPRG,CCARRETA)
// ======================================================================= \\

LOCAL LRET := .F.

// --> RETORNANDO .T. SIGNIFICA QUE EXISTE FROTA PROGRAMADA PARA DATA MENCIONADA                  
IF !EMPTY(CCARRETA)
	CQUERY := " SELECT TOP 1 FPM_FROTA1 , FPM_FROTA2 , FPM_FROTA3 , FPM_FROTA4 "
	CQUERY += " FROM "+RETSQLNAME("FPM")
	CQUERY += " WHERE D_E_L_E_T_ = ''  "
	CQUERY += "		AND FPM_FILIAL = '"+XFILIAL("FPM")+"' "
	CQUERY += "		AND FPM_FROTA <> '"+CCODFROTA+"' "
	CQUERY += "		AND FPM_DTPROG = '"+DDTPRG+"' AND "
	CQUERY += " ( "
	CQUERY += "     FPM_FROTA1 IN ('"+CCARRETA+"')" 
	CQUERY += "  OR FPM_FROTA2 IN ('"+CCARRETA+"')"
	CQUERY += "  OR FPM_FROTA3 IN ('"+CCARRETA+"')"
	CQUERY += "  OR FPM_FROTA4 IN ('"+CCARRETA+"')"
	CQUERY += " ) 
	TCQUERY CQUERY NEW ALIAS "TMPZ"

	IF TMPZ->(!EOF()) 
		LRET := .T.	
	ENDIF 
	
	TMPZ->(DBCLOSEAREA())
ENDIF

RETURN(LRET)                                           



// ======================================================================= \\
FUNCTION LOCA04911() 
// ======================================================================= \\
LOCAL LRET := .T.

IF ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS" })] == '9'
	LRET := .F.
	MSGALERT("OPERAÇÃO INVÁLIDA! STATUS DE MANUTENÇÃO NÃO PODERÁ SER ALTERADO/EXCLUÍDO." , "GPO - LOCT038.PRW") 
ENDIF                                                                                            

RETURN(LRET)



// ======================================================================= \\
STATIC FUNCTION FPROGMOTO(CMAT,CVIAGEM,DDATA,CAS,CPROJETO,COBRA)
// ======================================================================= \\

CDESC  := POSICIONE("FQ5",1,XFILIAL("FQ5")+CVIAGEM,"FQ5_NOMCLI") 
CA4MAT := POSICIONE("DA4",1,XFILIAL("DA4")+CMAT   ,"DA4_MAT"   ) 
CSRATS := POSICIONE("SRA",1,XFILIAL("SRA")+CA4MAT ,"RA_TSHEET" ) 

IF !EMPTY(CA4MAT) .AND. CSRATS == "S" 
	DBSELECTAREA("FPQ")
	DBSETORDER(1)
	IF !DBSEEK(XFILIAL("FPQ")+CA4MAT+DTOS(DDATA))
		RECLOCK("FPQ",.T.) 
			FPQ_FILIAL	:= XFILIAL("FPQ")
			FPQ_MAT		:= CA4MAT 
			FPQ_DATA	:= DDATA
			FPQ_AGENDA	:= "2"
			FPQ_STATUS	:= "OBRA"
			FPQ_AS		:= CAS
			FPQ_DESC	:= CDESC
			FPQ_PROJETO	:= CPROJETO
			FPQ_OBRA	:= COBRA
			FPQ_FILMAT	:= XFILIAL("FPQ")
			FPQ_TIPINC	:= "A"
		FPQ->(MSUNLOCK())  
	ENDIF
ENDIF

RETURN 



// ======================================================================= \\
FUNCTION LOCA04912()
// ======================================================================= \\
// --> CHAMADA: VALIDAÇÃO USUÁRIO - CAMPO FPM_VIAGEM

LOCAL AAREA    := GETAREA()
LOCAL AAREADTQ := FQ5->(GETAREA())	
LOCAL CVIAGEM  := M->FPM_VIAGEM
LOCAL LRET	   := .T.

IF !EMPTY(ACOLS[N, GDFIELDPOS("FPM_AS")])
	DBSELECTAREA("FQ5")
	DBSETORDER(9)
	IF !DBSEEK(XFILIAL("FQ5")+ACOLS[N, GDFIELDPOS("FPM_AS")]+CVIAGEM)
		MSGALERT("ATENÇÃO! ESTÁ VIAGEM NÃO PERTENCE A FROTA" , "GPO - LOCT038.PRW") 
		LRET := .F.
	ENDIF                                    
ENDIF

RESTAREA(AAREADTQ)
RESTAREA(AAREA)

RETURN(LRET)



// ======================================================================= \\
STATIC FUNCTION XVALPERIODO()
// ======================================================================= \\

LOCAL AAREA    := GETAREA()
LOCAL AAREAZLE := FPM->(GETAREA())
LOCAL CQUERY   := ""
LOCAL LRET     := .T.    
LOCAL CANOMES  := "" 
LOCAL CRET     := ""
LOCAL CEOL     := CHR(13)+CHR(10) 
LOCAL NX       := 0 

IF SELECT("TR02") > 0
	TR02->(DBCLOSEAREA())
ENDIF           
CQUERY := " SELECT ZAE.FP8_TRANSP , DTQ.FQ5_AS , DTQ.FQ5_DATINI , DTQ.FQ5_DATFIM " 
CQUERY += " FROM "+RETSQLNAME("FP8")+" ZAE " 
CQUERY += "        LEFT OUTER JOIN "+RETSQLNAME("ZA7")+" ZA7 "
CQUERY += "                        ON (ZA7.ZA7_FILIAL = ZAE.FP8_FILIAL AND ZA7.ZA7_PROJET = ZAE.FP8_PROJET AND ZA7.ZA7_OBRA = ZAE.FP8_OBRA AND ZA7.ZA7_SEQTRA = ZAE.FP8_SEQTRA AND ZA7.D_E_L_E_T_='') "
CQUERY += "        LEFT OUTER JOIN "+RETSQLNAME("FQ5")+" DTQ "
CQUERY += "                        ON (DTQ.FQ5_SOT = ZA7.ZA7_PROJET AND DTQ.FQ5_OBRA = ZA7.ZA7_OBRA AND DTQ.FQ5_VIAGEM = ZA7.ZA7_VIAGEM AND DTQ.D_E_L_E_T_='') "
CQUERY += " WHERE  ZAE.D_E_L_E_T_ = '' "
CQUERY += "   AND  ZAE.FP8_FILIAL =  '"+XFILIAL("FP8")+"' "	 
CQUERY += "   AND  ZAE.FP8_TRANSP =  '"+CCODFROTA     +"' "	
CQUERY += "   AND  ZA7.ZA7_VIAGEM <> '      ' "
CQUERY += "   AND  DTQ.FQ5_JUNTO  =  '   ' "	
CQUERY := CHANGEQUERY(CQUERY)		                                
TCQUERY CQUERY NEW ALIAS TR02

TCSETFIELD("TR02","FQ5_DATINI","D",08,00)                                
TCSETFIELD("TR02","FQ5_DATFIM","D",08,00)
	
IF LRET 
	CANOMES := ALLTRIM(MV_PAR01)+ALLTRIM(MV_PAR02)
	FOR NX := 1 TO LEN(ODLGFRO:ACOLS) 
		IF ODLGFRO:ACOLS[NX,LEN(ODLGFRO:ACOLS[NX])]		// SE ESTIVER DELETADO
			DBSELECTAREA("FPM")
			DBSETORDER(1)
			IF DBSEEK(XFILIAL("FPM")+CANOMES+CCODFROTA+DTOS(ACOLS[NX,1]))
				IF ALLTRIM(ODLGFRO:ACOLS[NX,6]) == ALLTRIM(FPM->FPM_AS) .AND. !EMPTY(ODLGFRO:ACOLS[NX,6])
					LRET := .F. 
					CRET += "AS: "+ALLTRIM(FPM->FPM_AS)+"("+DTOC(ODLGFRO:ACOLS[1,1])+" A "+DTOC(ODLGFRO:ACOLS[LEN(ODLGFRO:ACOLS),1])+")"+CEOL
					EXIT
				ENDIF
			ELSE
				LRET := .F.
				EXIT
			ENDIF
		ENDIF
	NEXT NX
ENDIF

IF !LRET
	MSGALERT("ATENÇÃO! VERIFICAR PERIODO DA(S) AS(S) ABAIXO(S)"+CEOL+CRET , "GPO - LOCT038.PRW") 
ENDIF
	
IF SELECT("TR02") > 0
	TR02->(DBCLOSEAREA())
ENDIF

RESTAREA(AAREAZLE)	
RESTAREA(AAREA)

RETURN(LRET)



// ======================================================================= \\
FUNCTION LOCA04913() 
// ======================================================================= \\
// --> CHAMADA: VALIDAÇÃO USUÁRIO - CAMPO FPM_HORA 

LOCAL CHORA		:= M->FPM_HORA
LOCAL AHORA     := {}  
LOCAL LVALIDO   := .T.    
    
CHORA := SUBSTR(CHORA,1,2)+":"+(SUBSTR(CHORA,3,2))
    
IF ALLTRIM(CHORA)  <> ""
	AHORA := STRTOKARR(CHORA,":")
	IF VAL(AHORA[1]) > 23   .OR. VAL(AHORA[2]) > 59  
		LVALIDO := .F.        
	ENDIF
	IF LEN(ALLTRIM(AHORA[1])) <> 2  .OR. LEN(ALLTRIM(AHORA[2])) <> 2 
		LVALIDO := .F.
	ENDIF    
ENDIF
    
RETURN LVALIDO     



// ======================================================================= \\
STATIC FUNCTION ATUACACOLS()
// ======================================================================= \\

LOCAL NPOSCODBEM := ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODBEM"})
LOCAL NPOSDTINI  := ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})
LOCAL NASG       := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"})]
LOCAL NI         := 0 

FOR NI := 1 TO LEN(ODLGEQU:ACOLS)
	IF ! EMPTY(ODLGEQU:ACOLS[NI, NPOSCODBEM])
		NPOS    := 0
		NRECORD := ODLGEQU:ACOLS[NI, LEN(ODLGEQU:AHEADER)+1]
		IF NRECORD == 0
			NPOS := ASCAN(ACOLSFULLAC, {|X| (X[NPOSCODBEM] == ODLGEQU:ACOLS[NI, NPOSCODBEM] .AND. X[ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})] == NASG .AND. X[NPOSDTINI] == ODLGEQU:ACOLS[NI, NPOSDTINI] )})
			IF NPOS == 0
				AADD(ACOLSFULLAC, ODLGEQU:ACOLS[NI])
			ENDIF
		ELSE
			NPOS := ASCAN(ACOLSFULLAC, {|X| X[LEN(ODLGEQU:AHEADER)+1] == NRECORD})
		ENDIF
		IF NPOS > 0
			ACOLSFULLAC[NPOS] := ACLONE(ODLGEQU:ACOLS[NI])
		ENDIF
	ENDIF
NEXT NI 

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION FSALVAREQU(CALIAS,AEQHEADER,AEQCOLS)
// ======================================================================= \\

LOCAL NPOS 
LOCAL NRECORD 	
LOCAL NPOSCBE   := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_CODBEM"})
LOCAL NPOSDTINI := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" })
LOCAL NPOSDTFIM := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" })
LOCAL NPOSNRAS  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"    })
LOCAL NPOSNOME  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_DESCAC"})
LOCAL NPOSPACK  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_CARRET"})
LOCAL NPOSPROJ  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"})
LOCAL NPOSOBRA  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  })
LOCAL NPOSQTAC  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_QTACES"})
LOCAL NPOSCOMP  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_COMPR" })
LOCAL NPOSLARG  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_LARGUR"})
LOCAL NPOSALTU  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_ALTURA"})
LOCAL NPOSPESO  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPM_PESO"  })

LOCAL CDIFPACK  := ""

DBSELECTAREA("FPM")
DBSETORDER(1)
FOR NPOS:=1 TO LEN(AEQCOLS)
	NRECORD := AEQCOLS[NPOS,LEN(AEQCOLS[NPOS])-1]
	IF EMPTY(NRECORD)
		NRECORD := 0
		//AEQCOLS[NPOS, LEN( AEQCOLS[NPOS] )-1 ]
	ENDIF

	IF !AEQCOLS[NPOS,LEN(AEQCOLS[NPOS])] .AND. !EMPTY(AEQCOLS[NPOS][NPOSCBE]) // .AND. !EMPTY(ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})])	// NÃO GRAVO PROGRAMAÇÃO SEM DATA INFORMADA
		IF NRECORD > 0 					// !INCLUI .AND. ALTERA
			FPM->(DBGOTO(NRECORD))		// POSICIONO NO REGISTRO CORRETO
			RECLOCK("FPM",.F.)
			
			IF /*NTPSE != "A" .AND.*/ !EMPTY(FPM->FPM_CARRET) .AND. (FPM->FPM_CARRET != AEQCOLS[NPOS,NPOSPACK]  .OR. FPM->FPM_CODBEM != AEQCOLS[NPOS,NPOSCBE]   ;
																.OR. FPM->FPM_DTINI  != AEQCOLS[NPOS,NPOSDTINI] .OR. FPM->FPM_DTFIM  != AEQCOLS[NPOS,NPOSDTFIM] ;
																.OR. FPM->FPM_AS     != AEQCOLS[NPOS,NPOSNRAS]  .OR. FPM->FPM_DESCAC != AEQCOLS[NPOS,NPOSNOME]  ;
																.OR. FPM->FPM_PROJET != AEQCOLS[NPOS,NPOSPROJ]  .OR. FPM->FPM_OBRA   != AEQCOLS[NPOS,NPOSOBRA]  ;
																.OR. FPM->FPM_QTACES != AEQCOLS[NPOS,NPOSQTAC]  .OR. FPM->FPM_COMPR  != AEQCOLS[NPOS,NPOSCOMP]  ;
																.OR. FPM->FPM_LARGUR != AEQCOLS[NPOS,NPOSLARG]  .OR. FPM->FPM_ALTURA != AEQCOLS[NPOS,NPOSALTU]  ;
																.OR. FPM->FPM_PESO   != AEQCOLS[NPOS,NPOSPESO])

			 //	POSICIONE("FP1",1,XFILIAL("FP1")+FPM->FPM_PROJET+FPM->FPM_OBRA,"FP1_MUNORI")
		   		POSICIONE("FP1",1,XFILIAL("FP1")+FPM->FPM_PROJET+FPM->FPM_OBRA,"FP1_MUNORI")
	   			POSICIONE("SA1",1,XFILIAL("SA1")+FPM->FPM_CODCLI+FPM->FPM_LOJA,"A1_NOME")
		
	   		 //	CDIFPACK += "<TR><TD>"+ FPM->FPM_PROJET		    +"</TD>"
	   		 //	CDIFPACK += "<TD>"    + FPM->FPM_OBRA			+"</TD>"  
	   			CDIFPACK += "<TR><TD>"+ FPM->FPM_PROJET			+"</TD>"
				CDIFPACK += "<TD>"    + FPM->FPM_OBRA			+"</TD>"
				CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSNRAS]  +"</TD>"
					
				CDIFPACK += "<TD>"    + FPM->FPM_CODCLI         +"</TD>"
				CDIFPACK += "<TD>"    + FPM->FPM_LOJA           +"</TD>"
				CDIFPACK += "<TD>"    + SA1->A1_NOME            +"</TD>"

				CDIFPACK += "<TD>"    + ALLTRIM(FP1->FP1_MUNORI)+"/"+FP1->FP1_ESTORI +"</TD>"

				CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSCBE]   +"</TD>"
				CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSNOME]  +"</TD>"
				CDIFPACK += "<TD>"    + CCODFROTA               +"</TD>"
				
				CDIFPACK += "<TD>"    + DTOC(AEQCOLS[NPOS,NPOSDTINI]) +"</TD>"
				CDIFPACK += "<TD>"    + DTOC(AEQCOLS[NPOS,NPOSDTFIM]) +"</TD>"
				CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSPACK]        +"</TD></TR>"
			ENDIF
			
		ELSE											// NOVO REGISTRO
	   		POSICIONE("FP1",1,XFILIAL("FP1")+FPM->FPM_PROJET+FPM->FPM_OBRA,"FP1_MUNORI")
	   		POSICIONE("SA1",1,XFILIAL("SA1")+FPM->FPM_CODCLI+FPM->FPM_LOJA,"A1_NOME")
		
	   		CDIFPACK += "<TR><TD>"+ FPM->FPM_PROJET			+"</TD>"
			CDIFPACK += "<TD>"    + FPM->FPM_OBRA			+"</TD>"
			CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSNRAS]  +"</TD>"
			
			CDIFPACK += "<TD>"    + FPM->FPM_CODCLI         +"</TD>"
			CDIFPACK += "<TD>"    + FPM->FPM_LOJA           +"</TD>"
			CDIFPACK += "<TD>"    + SA1->A1_NOME            +"</TD>"
                             
			CDIFPACK += "<TD>"    + CVALTOCHAR(ALLTRIM(FP1->FP1_MUNORI))+"/"+CVALTOCHAR(FP1->FP1_ESTORI) +"</TD>"
			CDIFPACK += "<TD>"    + CVALTOCHAR(CVALTOCHAR(AEQCOLS[NPOS,NPOSCBE]))	+"</TD>"
			//-->> A LINHA ABAIXO ESTAVA COMENTADA
			CDIFPACK += "<TD>"    + IIF(NPOSNOME == 0,"&NBSP;",CVALTOCHAR(AEQCOLS[NPOS,NPOSNOME]) )       		+"</TD>"
			CDIFPACK += "<TD>"    + CVALTOCHAR(CCODFROTA)                     		+"</TD>"
			
			CDIFPACK += "<TD>"    + CVALTOCHAR(DTOC(AEQCOLS[NPOS,NPOSDTINI])) +"</TD>"
			CDIFPACK += "<TD>"    + CVALTOCHAR(DTOC(AEQCOLS[NPOS,NPOSDTFIM])) +"</TD>"
			RECLOCK("FPM",.T.)
		ENDIF
		FGRAVATUDO("FPM",AEQHEADER,AEQCOLS[NPOS])  //GRAVA TODOS OS CAMPOS DO ACOLS
		FPM->FPM_FILIAL	:= XFILIAL("FPM")

		MSUNLOCK()
		//MANDA E-MAIL DO REGISTRO CRIADO

	ENDIF

	IF AEQCOLS[NPOS,LEN(AEQCOLS[NPOS])] .AND. NRECORD <> 0
		FPM->(DBGOTO(NRECORD))		// POSICIONO NO REGISTRO CORRETO
		POSICIONE("FP1",1,XFILIAL("FP1")+FPM->FPM_PROJET+FPM->FPM_OBRA,"FP1_MUNORI")
		POSICIONE("SA1",1,XFILIAL("SA1")+FPM->FPM_CODCLI+FPM->FPM_LOJA,"A1_NOME")
		
		CDIFPACK += "<TR><TD>"+ FPM->FPM_PROJET			+"</TD>"
		CDIFPACK += "<TD>"    + FPM->FPM_OBRA			+"</TD>"
		CDIFPACK += "<TD>"    + FPM->FPM_AS			    +"</TD>"
		CDIFPACK += "<TD>"    + FPM->FPM_CODCLI			+"</TD>"
		CDIFPACK += "<TD>"    + FPM->FPM_LOJA			+"</TD>"
		CDIFPACK += "<TD>"    + FPM->FPM_NOMCLI			+"</TD>"

		CDIFPACK += "<TD>"    + ALLTRIM(FP1->FP1_MUNORI)+"/"+FP1->FP1_ESTORI +"</TD>"

		CDIFPACK += "<TD>"    + FPM->FPM_CODBEM			+"</TD>"
		CDIFPACK += "<TD>"    + IIF(EMPTY(FPM->FPM_DESCAC),SPACE(20),FPM->FPM_DESCAC)			+"</TD>"
		CDIFPACK += "<TD>"    + CCODFROTA				+"</TD>"
		
		CDIFPACK += "<TD>"    + CVALTOCHAR(FPM->FPM_DTINI)	+"</TD>"
		CDIFPACK += "<TD>"    + CVALTOCHAR(FPM->FPM_DTFIM)	+"</TD>"
		CDIFPACK += "<TD>"    + FPM->FPM_CARRET			+"</TD></TR>"
		RECLOCK("FPM",.F.)
			DBDELETE()
		MSUNLOCK()
	ENDIF
NEXT NPOS 
	
IF !EMPTY(CDIFPACK)
	CCABEC := "<HTML><BODY>"
	CCABEC += "<B>ALTERAÇÃO DE PACKLIST NA PROGRAMAÇÃO DE FROTA/ACESSÓRIOS</B><BR><BR>"
	CCABEC += "<TABLE BORDER='1'>"

	CCABEC += "<TR><TH>PROJETO</TH>"
	CCABEC +=     "<TH>OBRA</TH>"
	CCABEC +=     "<TH>AS</TH>"
	CCABEC +=     "<TH>CÓD.CLIENTE</TH>"
	CCABEC +=     "<TH>LOJA</TH>"
	CCABEC +=     "<TH>NOME CLIENTE</TH>"
	CCABEC +=     "<TH>MUNICÍPIO/UF</TH>"
	CCABEC +=     "<TH>CÓD. ACESSÓRIO</TH>"
	CCABEC +=     "<TH>DESCRIÇÃO</TH>"
	CCABEC +=     "<TH>FROTA</TH>"
	CCABEC +=     "<TH>DT. INÍCIO</TH>"
	CCABEC +=     "<TH>DT. FIM</TH>"
	CCABEC +=     "<TH>NOVO PACK LIST</TH></TR>"
	
	CFROM  := ALLTRIM(USRRETNAME(RETCODUSR())) + " <" + ALLTRIM(USRRETMAIL(RETCODUSR())) + ">"
	CDEST  := CPARA := ALLTRIM( GETMV("MV_LOCX249") )   // LISTA DE E-MAILS INFORMANDO A MUDANÇA DO PACK LIST
	CFROM  := ALLTRIM(GETMV("MV_RELFROM"))

	LOCA05909(CFROM, CDEST, CFROM, "MUDANÇA DE PACKLIST NA PROGRAMAÇÃO DIÁRIA DE FROTA/ACESSÓRIO", CCABEC + CDIFPACK + "</TABLE></BODY></HTML>",NIL,"")
ENDIF

RETURN 



// ======================================================================= \\
STATIC FUNCTION FFOLDEREQUI(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2)
// ======================================================================= \\

// CRIACAO DO OBJETO FOLDER PARA PROGRAMACAO DE ACESSORIOS
// INCLUSAO DE FPM_OS E FPM_MOT_OS
LOCAL ACAMPOSSIM  := {}
LOCAL NSTYLE      := IIF(NOPC==2, 0, GD_INSERT + GD_UPDATE + GD_DELETE) 
LOCAL CALIAS , CCHAVE , CCONDICAO , NINDICE , CFILTRO 
//LOCAL LROTATIVO := .F.

PRIVATE NTPSE := "A"

CALIAS := "FPM"
CCHAVE := XFILIAL(CALIAS)+CCODFROTA 

IF ST9->T9_TIPOSE == "A"		// ACESSÓRIOS 
	CCONDICAO := 'FPM->FPM_FILIAL+FPM->FPM_CODBEM=="'+CCHAVE+'"'
	NINDICE   := 2
	CFILTRO   := '.T.'

	AADD(ACAMPOSSIM,{"FPM_NRAS" 	,"V"})
	AADD(ACAMPOSSIM,{"FPM_STATU"	,"" }) 
	AADD(ACAMPOSSIM,{"FPM_DTINI" 	,"" })
	AADD(ACAMPOSSIM,{"FPM_DTFIM" 	,"" })
	AADD(ACAMPOSSIM,{"FPM_CODCLI"  	,"" })
	AADD(ACAMPOSSIM,{"FPM_LOJA"   	,"" })
	AADD(ACAMPOSSIM,{"FPM_QTACES"	,"" }) 
	AADD(ACAMPOSSIM,{"FPM_LOCAL"	,"" })
	AADD(ACAMPOSSIM,{"FPM_PROJET"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_OBRA"		,"V"})
	AADD(ACAMPOSSIM,{"FPM_VIAGEM"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_FILNF"	,"V"}) 
	AADD(ACAMPOSSIM,{"FPM_NUMNF"	,"V"}) 
	AADD(ACAMPOSSIM,{"FPM_SERNF"	,"V"}) 
	AADD(ACAMPOSSIM,{"FPM_CLINF"	,"V"}) 
	AADD(ACAMPOSSIM,{"FPM_LOJNF"	,"V"}) 
	AADD(ACAMPOSSIM,{"FPM_DESCAC" 	,"V"})
ELSE
	CCONDICAO := 'FPM->FPM_FILIAL+FPM->FPM_FROTA=="'+CCHAVE+'"'
	NINDICE   := 3	//1 - ALTERADO PARA MOSTRAR POR ORDEM DE DATA E AS (ANDRÉ 12/01/09)
	CFILTRO   := '!EMPTY(FPM_CODBEM)'

	AADD(ACAMPOSSIM,{"FPM_AS"     	,"V"})
	AADD(ACAMPOSSIM,{"FPM_CODBEM"  	,"" })
	AADD(ACAMPOSSIM,{"FPM_DESCAC" 	,"V"})
	AADD(ACAMPOSSIM,{"FPM_CODFAN" 	,"V"})//T9_CODFA
	AADD(ACAMPOSSIM,{"FPM_STATU"	,"" }) 
	AADD(ACAMPOSSIM,{"FPM_DTINI" 	,"" })
	AADD(ACAMPOSSIM,{"FPM_DTFIM" 	,"" })
	AADD(ACAMPOSSIM,{"FPM_CARRET"	,"" }) 
	AADD(ACAMPOSSIM,{"FPM_QTACES"	,"" }) 
	AADD(ACAMPOSSIM,{"FPM_PROJET"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_OBRA"		,"V"})
	AADD(ACAMPOSSIM,{"FPM_VIAGEM"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_UNIFIL" 	,"" })
	AADD(ACAMPOSSIM,{"FPM_COMPR" 	,"" })
	AADD(ACAMPOSSIM,{"FPM_LARGUR" 	,"" })
	AADD(ACAMPOSSIM,{"FPM_ALTURA" 	,"" })
	AADD(ACAMPOSSIM,{"FPM_PESO" 	,"" })
	AADD(ACAMPOSSIM,{"FPM_FILNF"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_NUMNF"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_SERNF"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_CLINF"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_LOJNF"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_MAILF"	,"V"})   // DATA ENVIO DE E-MAIL PARA O FISCAL.
	AADD(ACAMPOSSIM,{"FPM_LOCAL"	,"" })
	AADD(ACAMPOSSIM,{"FPM_CODOSM"	,"" })   // CAMPOS CRIADOS PARA TRARAR MANUTENCAO DA PROGRAMACAO PELO MANUTENCAO DE ATIVOS.
	AADD(ACAMPOSSIM,{"FPM_MOT_OS"	,"" })   // CAMPOS CRIADOS PARA TRARAR MANUTENCAO DA PROGRAMACAO PELO MANUTENCAO DE ATIVOS.
	AADD(ACAMPOSSIM,{"FPM_ZLESC6"	,"V"})   // CAMPOS PARA VÍNCULO DA ZLE COM A SC6 
	AADD(ACAMPOSSIM,{"FPM_ZLESD3"	,"V"})
	AADD(ACAMPOSSIM,{"FPM_DEVACE"	,"V"})
ENDIF

AHEADER:=FHEADER(ACAMPOSSIM)

NPOS := ASCAN(AHEADER, {|X|, ALLTRIM(X[2]) == "FPM_STATUS"})	// STATUS PERMITIDOS P/ ACESSÓRIOS 
IF NPOS > 0
	IF ST9->T9_TIPOSE == "A"
	 //	AHEADER[NPOS][6] := "PERTENCE('1')"
	ELSE
		AHEADER[NPOS][6] := "PERTENCE('R')"
	ENDIF
ENDIF

ACOLS    := FCOLS(AHEADER, CALIAS, NINDICE, CCHAVE, CCONDICAO, CFILTRO) 
ACOLSCOM := ACOLS 

ODLGEQU:=MSNEWGETDADOS():NEW(NLIN1,NCOL1,NLIN2  ,NCOL2 ,NSTYLE ,"LOCA04917()" ,       ,""      ,      ,       ,9999,,.F.      ,"LOCA04918()",OFOLDER:ADIALOGS[NFOLDER],AHEADER,ACOLS)
ODLGEQU:OBROWSE:ALIGN:= CONTROL_ALIGN_ALLCLIENT
ODLGEQU:OBROWSE:BCHANGE:={||LOCA04914(NFOLDER)}

RETURN

                                                 

// ======================================================================= \\
FUNCTION LOCA04914(PGET)  			// MUDA O BROWSE
// ======================================================================= \\

LOCAL LRET		:= .T.
LOCAL CNRAS		:= ""
LOCAL CPROJETO	:= ""
LOCAL COBRA		:= ""
LOCAL CVIAGEM	:= ""
LOCAL DDATAF    := CTOD("  /  /  ")
LOCAL DDATAI	:= CTOD("  /  /  ")
LOCAL NX        := 0 

NTPSE := "A"

PGET := 2
DO CASE
	CASE PGET == 1		// ABA FROTA
		
		IF LEN(ODLGFRO:ACOLS[ODLGFRO:NAT]) == (LEN(ODLGFRO:AHEADER) + 1)									// INCLUÍNDO UMA NOVA LINHA SEM O RECNO()
			AADD(ODLGFRO:ACOLS[ODLGFRO:NAT],ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:ACOLS[ODLGFRO:NAT])])	// DUPLICO A ÚLTIMA LINHA
			ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:ACOLS[ODLGFRO:NAT])-1] := 0							// ZERO A COLUNA DO RECNO()
		ENDIF

		IF ODLGFRO:NAT > 1 .AND. !ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:AHEADER)+2]
			IF  EMPTY(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS" }	)]) .AND.;
				(EMPTY(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" }	)]) .OR.;
				(      ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" }	)] = DDATABASE .AND. ;
				ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" }	)] = DDATABASE))
				
				CNRAS	:=ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"   }	)]
				CPROJETO:=ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET" }	)]
				COBRA	:=ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"   }	)]
				CVIAGEM	:=ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM" }	)]
				DDATAF  :=ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"  }	)]
				
				CCODCLI :=ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODCLI" }	)]
				CLOJACLI:=ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_LOJA"   }	)]
				CNOMECLI:=ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_NOMCLI" }	)]
				

				ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" } 	)]	:= CTOD("  /  /  ")
				ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" } 	)]	:= CTOD("  /  /  ")
				ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_MAILF"  }	)]	:= CTOD("")

				ODLGFRO:OBROWSE:REFRESH()
			ENDIF
		ENDIF
		
	CASE PGET == 3
		
		IF LEN(ODLGEQU:ACOLS[ODLGEQU:NAT]) == (LEN(ODLGEQU:AHEADER) + 1)									// INCLUÍNDO UMA NOVA LINHA SEM O RECNO()
			AADD(ODLGEQU:ACOLS[ODLGEQU:NAT],ODLGEQU:ACOLS[ODLGEQU:NAT][LEN(ODLGEQU:ACOLS[ODLGEQU:NAT])])	// DUPLICO A ÚLTIMA LINHA
			ODLGEQU:ACOLS[ODLGEQU:NAT][LEN(ODLGEQU:ACOLS[ODLGEQU:NAT])-1] := 0							// ZERO A COLUNA DO RECNO()
		ENDIF
		IF NTPSE <> "A" 
			IF ODLGEQU:NAT > 1 .AND. !ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:AHEADER)+2]
				IF EMPTY(ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS" }	)])
					// VALORES DA LINHA ANTERIOR
					CNRAS    := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"  }	)]
					CPROJETO := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"}	)]
					COBRA	 := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  }	)]
					CVIAGEM	 := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"}	)]
					DDATAI   := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" }	)]
					DDATAF   := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" }	)]
					// VALORES DA LINHA NOVA.
					ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"  }	)]	:= CNRAS
					ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" }	)]	:= CTOD("") //DDATAI //CTOD("  /  /  ")
					ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" }	)]	:= CTOD("") //DDATAF //CTOD("  /  /  ")		// DDATAF
					ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"}	)]	:= CPROJETO
					ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  }	)]	:= COBRA
					ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"}	)]	:= CVIAGEM
					
					ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS"}	)]	:= ""	//"R"	// R=RESERVADO 
					
					ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_MAILF"}	)]	:= CTOD("")
					ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_QTACES" })]:= 0
					ODLGEQU:OBROWSE:REFRESH()
				ENDIF
			ENDIF
		ENDIF
ENDCASE

// VALIDAÇÃO DO LINHA OK
IF OFOLDER:NOPTION == 2		// FOLDER FROTA OU ACESSÓRIO
	
	OAUX:= ODLGEQU

	IF EMPTY(ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS" }	)])
		// VALORES DA LINHA ANTERIOR
		CNRAS    := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"  }	)]
		CPROJETO := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"}	)]
		COBRA	 := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  }	)]
		CVIAGEM	 := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"}	)]
		DDATAI   := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" }	)]
		DDATAF   := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" }	)]
		// VALORES DA LINHA NOVA.
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_AS"  }	)]	:= CNRAS
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" }	)]	:= CTOD("") //DDATAI //CTOD("  /  /  ")
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" }	)]	:= CTOD("") //DDATAF //CTOD("  /  /  ")		// DDATAF
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"}	)]	:= CPROJETO
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  }	)]	:= COBRA
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_VIAGEM"}	)]	:= CVIAGEM
		
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATU"}	)]	:= ""	//"R"	// R=RESERVADO <-- SOLICITAÇÃO DO LUI EM 04/10/2011 - CRISTIAM ROSSI
		
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_MAILF"}	)]	:= CTOD("")
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_QTACES" })]:= 0
		ODLGEQU:OBROWSE:REFRESH()

		AADD(ODLGEQU:ACOLS[ODLGEQU:NAT],ODLGEQU:ACOLS[ODLGEQU:NAT][LEN(ODLGEQU:ACOLS[ODLGEQU:NAT])])	// DUPLICO A ÚLTIMA LINHA
		ODLGEQU:ACOLS[ODLGEQU:NAT][LEN(ODLGEQU:ACOLS[ODLGEQU:NAT])-1] := 0							// ZERO A COLUNA DO RECNO()

	ENDIF

	IF !OAUX:ACOLS[OAUX:NAT,LEN(OAUX:ACOLS[OAUX:NAT])] .AND. !OAUX:ACOLS[OAUX:NAT,ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATU"})] $ "ESA"	// NÃO DELETADO E STATUS != ES (ENTRADA/SAÍDA NF)
		CPROATU	:=	OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])==IF(OFOLDER:NOPTION==1,"FPM_PROJET","FPM_CODBEM")})]
		DDTIATU	:=	OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})]
		DDTFATU	:=	OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})]
		FOR NX := 1 TO LEN(OAUX:ACOLS)
			// NAO VALIDAR QUANDO FOR FOR A LINHA CORRENTE, SE ESTIVER DELETADO E STATUS != ES (ENTRADA/SAÍDA NF)
			IF OAUX:NAT != NX .AND. !OAUX:ACOLS[NX,LEN(OAUX:ACOLS[NX])] .AND. !OAUX:ACOLS[NX,ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATU"})] $ "ES"
				CPRONX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])==IF(OFOLDER:NOPTION==1,"FPM_PROJET","FPM_CODBEM")})]
				DDTINX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})]
				DDTFNX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})]

				XTPACESSOR := ""
				CBEM	   :=  CCODFROTA	// OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODBEM"})]
				XTPACESSOR := ST9->T9_ACESSOR
				IF OFOLDER:NOPTION == 3 .AND. EMPTY(XTPACESSOR)
					CBEM := ODLGEQU:ACOLS[NX][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODBEM"})]
					XTPACESSOR := POSICIONE("ST9",1,XFILIAL("ST9")+CBEM,"T9_ACESSOR")
				ENDIF
			   	IF XTPACESSOR != "R" .AND.((DDTIATU >= DDTINX	.AND. DDTIATU <= DDTFNX) .OR. ( DDTFATU >= DDTINX .AND. DDTFATU <= DDTFNX)) .AND. ((CPROATU == CPRONX) .AND. (NX <> OAUX:NAT)) .AND.;
				   	!OAUX:ACOLS[NX,ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATU"})] $ "ESA" 
				   	IF DDTIATU > DDTFNX //DDTCORTE
						MSGSTOP("FAVOR CORRIJA AS DATAS: "+ CHAR(10) + DTOC(DDTIATU)+' A '+DTOC(DDTFATU)+'  !  '+DTOC(DDTINX)+' A '+DTOC(DDTFNX) ,'ATENÇÃO: CONFLITO DE PERÍODOS')
						OAUX:GOTO(OAUX:NAT)//OAUX:GOTO(NX)
						OAUX:OBROWSE:REFRESH()
						EXIT
					ENDIF
				ENDIF
			ENDIF
		NEXT
	ENDIF
ENDIF

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA04915()
// ======================================================================= \\

LOCAL LRET    := .T.
LOCAL XSTATUS := ""
LOCAL XAS     := ""
LOCAL XDTINI  := CTOD("")
LOCAL XDTFIM  := CTOD("")
LOCAL XSITMAN := SPACE(1) 
LOCAL NSOMA	  := 0 
LOCAL NX      := 0 

NTPSE:= "A" 

IF NTPSE == "A"		// ACESSÓRIOS
	IF !EMPTY(ODLGEQU:ACOLS[N, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_NRAS"})])
		MSGALERT("VINCULO COM PROGRAMAÇÃO DE FROTA. NÃO É POSSÍVEL ALTERAR ESTE REGISTRO!" , "GPO - LOCT038.PRW")
		RETURN .F.
	ENDIF  
	DDTINI := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})]
	DDTFIM := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})] 
ENDIF

OAUX := IF(OFOLDER:NOPTION==NFOLDERFRO, ODLGFRO, ODLGEQU)

IF OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS"})] $ "E;S;A"
//	MSGALERT('ESTA LINHA NÃO PODE SER MODIFICADA!','VINCULO COM NF')
//	RETURN .F.
ENDIF
	
IF !EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_NUMNF"})]) .AND. OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS"})] $ "E;S;A"
	MSGALERT("NÃO É POSSÍVEL ALTERAR ESTE REGISTRO, POIS JÁ POSSUI UMA NOTA !" , "GPO - LOCT038.PRW") 
	RETURN .F.
ENDIF

IF OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS"})] $ "C"
	MSGALERT("ESTA LINHA NÃO PODE SER MODIFICADA, POSSUI VINCULO COM MANUTENÇÃO !" , "GPO - LOCT038.PRW")
	RETURN .F.
ENDIF

XDTINI  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})]
XDTFIM  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})]

// 	VALIDAÇÃO DA SITUAÇÃO DE ATIVIDADE DA FROTA
IF READVAR() == "M->FPM_FROTA" .AND. OFOLDER:NOPTION==NFOLDERFRO
	XSITMAN := POSICIONE("ST9",1,XFILIAL("ST9")+M->FPM_FROTA,"T9_SITMAN")
	IF XSITMAN == "I"
		MSGALERT("ESTA FROTA ["+ALLTRIM(M->FPM_FROTA)+"] NÃO ESTÁ ATIVA !" , "GPO - LOCT038.PRW") 
		RETURN .F.
	ENDIF
ENDIF

IF READVAR() == "M->FPM_NRAS" .AND. OFOLDER:NOPTION==NFOLDERFRO
	// VERIFICA SE A MESMA AS PODE TER OUTRA FROTA - CRISTIAM ROSSI EM 01/10/2014
	IF EMPTY(M->FPM_NRAS)
		MSGALERT("DIGITE O NÚMERO DA AS - PREENCHIMENTO OBRIGATÓRIO !" , "GPO - LOCT038.PRW")
		RETURN .F.
	ENDIF

	LACHOU := .F.
	AAREADTQ := FQ5->( GETAREA() )
	FQ5->( DBSETORDER( 9 ) )
	FQ5->( DBSEEK( XFILIAL("FQ5") + M->FPM_NRAS, .T.) )
	WHILE ! FQ5->( EOF() ) .AND. FQ5->FQ5_AS == M->FPM_NRAS
		IF FQ5->FQ5_GUINDA == CCODFROTA .AND. FQ5->FQ5_STATUS == "6" .AND. FQ5->FQ5_DATINI > DDTCORTE // VARIÁVEL DECLARADA NO INÍCIO DO PROGRAMA
			LACHOU := .T.
			EXIT
		ENDIF
		FQ5->( DBSKIP() )
	ENDDO 

	FQ5->( RESTAREA( AAREADTQ ) )

	IF ! LACHOU
		MSGALERT("AS INVÁLIDA. VERIFIQUE A FROTA E O STATUS DA MESMA!" , "GPO - LOCT038.PRW") 
		RETURN .F.
	ENDIF

	IF EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODCLI"})])
		OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODCLI"})] := POSICIONE("AAM",1,XFILIAL("AAM")+FQ5->FQ5_CONTRA,"AAM_CODCLI")
		OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_LOJA"  })] := AAM->AAM_LOJA
		OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_NOMCLI"})] := POSICIONE("SA1",1,XFILIAL("SA1")+AAM->AAM_CODCLI+AAM->AAM_LOJA,"A1_NOME")
	ENDIF
ENDIF

// VALIDAÇÃO DA SITUAÇÃO DO BEM/ACESSÓRIO
IF READVAR() == "M->FPM_CODBEM" .AND. OFOLDER:NOPTION==NFOLDEREQU
	XSITMAN := POSICIONE("ST9",1,XFILIAL("ST9")+M->FPM_CODBEM,"T9_SITMAN")
	IF ST9->T9_TIPOSE != "A"
		MSGALERT("O BEM SELECIONADO DEVE SER OBRIGATORIAMENTE UM ACESSÓRIO" , "GPO - LOCT038.PRW") 
		RETURN .F.
	ENDIF

	IF XSITMAN == "I"
		MSGALERT("ESTE ACESSÓRIO NÃO ESTÁ ATIVO" , "GPO - LOCT038.PRW")
		RETURN .F.
	ENDIF
	
	// VERIFICAR A QUANTIDADE DE ESTOQUE...
	W_QTDACE  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_QTACES"}) ]				// QUANTIDADE DIGITADA
	
	IF NTPSE != "A" .AND. ST9->T9_ACESSOR == "R"
		//IF ! FLOCASB2(M->FPM_CODBEM,W_QTDACE)
		//	MSGALERT("VALOR INVÁLIDO - AC. TIPO PADRAO OU OPCIONAL" , "GPO - LOCT038.PRW") 
		//	RETURN .F.
		//ENDIF
	ENDIF
ENDIF

IF READVAR() == "M->FPM_STATUS"
	IF EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_NRAS"})]) .AND. M->FPM_STATUS $ '3,5,6'
		MSGALERT("OS STATUS: TRAB, MONTA E DESMONTA. REQUER UMA AS, CADASTRE-A PRIMEIRO - AS EM BRANCO" , "GPO - LOCT038.PRW")
		LRET := .F.
	ENDIF
	IF !EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_NRAS"})]) .AND. M->FPM_STATUS == '1'
		MSGALERT("O STATUS: DISPONÍVEL NÃO PODE HAVER AS CADASTRADA - AS PREENCHIDA" , "GPO - LOCT038.PRW")
		LRET := .F.
	ENDIF
	XSTATUS := M->FPM_STATUS
	XDTINI  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})]
	XDTFIM  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})]
ENDIF

IF READVAR() == "M->FPM_DTINI"
	NLINANT := IIF( OAUX:NAT == 1, 1, OAUX:NAT-1 )
	XDTANT  := OAUX:ACOLS[ NLINANT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})]
	XSTATUS := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS"})]
	XDTINI  := M->FPM_DTINI
	XDTFIM  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})]
	IF OAUX:NAT > 1  .AND. ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODBEM"}) <> 0
		NPDTINI:= ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})
		NPDTFIM:= ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})
		NPCODBE:= ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODBEM"})
	ELSEIF !EMPTY(XDTFIM) 
		IF XDTINI > XDTFIM
			LRET := .F.
			MSGALERT("DATA INICIAL MAIOR QUE A DATA FINAL" , "GPO - LOCT038.PRW")
		ENDIF
	ENDIF
	XPROJET := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"})]
	XOBRA   := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  })]
	XNRAS   := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_NRAS"  })]
    ENDIF
XPROJET := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PROJET"})]
XOBRA   := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_OBRA"  })]
XNRAS   := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_NRAS"  })] 
	
IF NTPSE <> "A" .AND. OFOLDER:NOPTION == NFOLDEREQU .AND. READVAR() == "M->FPM_CARRET"
	XYZ_POS := ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CARRET"})
	ABX_POS := OAUX:NAT
	ZYX_CONT := OAUX:ACOLS[ ABX_POS ][ XYZ_POS ]   
	ZYX_CONT := M->FPM_CARRET
	IF EMPTY( ZYX_CONT )
		MSGALERT("PREENCHA O NÚMERO DE SEQUÊNCIA CARRETA - PREENCHIMENTO OBRIGATÓRIO" , "GPO - LOCT038.PRW")
		LRET := .F.
	ENDIF
ENDIF

IF READVAR() == "M->FPM_QTACES" .AND. OFOLDER:NOPTION==NFOLDEREQU
	W_QTDACE  := M->FPM_QTACES	// OAUX:ACOLS[W_LINHA ,W_COLU  ]				// QUANTIDADE DIGITADA
	
	IF W_QTDACE == 0
		MSGALERT("FAVOR INFORMAR QUANTIDADE MAIOR QUE ZERO PARA OS ACESSÓRIOS" , "GPO - LOCT038.PRW") 
		RETURN .F.
	ENDIF

	IF NTPSE=="A"
		W_CODBEM  := CCODFROTA
		W_TIPOACE := ST9->T9_ACESSOR
		W_CODVAI  := CCODFROTA
	ELSE
		W_LINHA   := OAUX:NAT
		W_COLU    := ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_QTACES"})
		W_CODBEM  := ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODBEM"})
		W_CODVAI  := OAUX:ACOLS[W_LINHA,W_CODBEM]               // CODIGO DO PRODUTO
		// TIPO DE ACESSORIO
		W_TIPOACE := POSICIONE("ST9",1,XFILIAL("ST9")+W_CODVAI,"T9_ACESSOR")
	ENDIF

	// SE ROTATIVO, QUANTIDADE VARIAVEL MAIOR QUE ZERO
	IF W_TIPOACE == "R" .AND. W_QTDACE <= 0
		MSGALERT("VALOR INVÁLIDO - AC. TIPO ROTATIVO" , "GPO - LOCT038.PRW")
		RETURN .F.
	ENDIF
		
	// SE OPCIONAL OU PADRAO , QUANTIDADE SOMENTE 1
	IF W_TIPOACE # "R" .AND. W_QTDACE # 1
		MSGALERT("A QUANTIDADE DE ACESSÓRIOS NÃO ROTATIVOS DEVE SER 1 - AC. TIPO PADRAO OU OPCIONAL" , "GPO - LOCT038.PRW") 
		RETURN .F.
	ENDIF

	DDTINI := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})]
	DDTFIM := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})] 
	// VERIFICA SE EXISTE ESTOQUE PARA O STATUS DISPONIVEL
	IF OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS"})] == "1"
		CCODPROD:= POSICIONE("ST9",1,XFILIAL("ST9")+W_CODVAI, "T9_CODESTO") //CÓDIGO DO ESTOQUE PARA O ACESSÓRIO EM QUESTÃO.
		NQTDESTO:= POSICIONE("SB2",1,XFILIAL("SB2")+CCODPROD, "B2_QATU") 
		FOR NX := 1 TO LEN(ODLGEQU:ACOLS)
			IF ODLGEQU:ACOLS[NX,2] == "1" .AND. (ODLGEQU:NAT <> NX)
				NSOMA += ODLGEQU:ACOLS[NX,7]
			ENDIF
		NEXT NX
		IF (NQTDESTO - NSOMA) <= 0
			MSGALERT("SEM ESTOQUE DISPONIVEL PARA O ACESSÓRIO ["+ALLTRIM(W_CODVAI)+"]" , "GPO - LOCT038.PRW") 
		    RETURN .F.
		ENDIF
	ENDIF
		
	LRET := LOCA05222(W_CODVAI, DTOS(DDTINI), DTOS(DDTFIM))
ENDIF

// FUNCAO DE VALIDACAO 
IF LRET .AND. XSTATUS == "3"	// CONSISTE SE O PERÍODO TRABALHANDO ESTÁ DENTRO DA AS (DTQ)
	XAS := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPM_NRAS"})]
	FQ5->(DBSETORDER(9))		// FQ5_FILIAL + FQ5_AS + FQ5_VIAGEM
	IF ! FQ5->(DBSEEK(XFILIAL("FQ5")+XAS,.T.))
		MSGALERT("A AS: ["+XAS+"] NÃO FOI ENCONTRADA, VERIFIQUE! " , "GPO - LOCT038.PRW") 
		LRET := .F.
	ELSE
		IF XDTINI < FQ5->FQ5_DATINI .OR. XDTINI > FQ5->FQ5_DATFIM
			MSGALERT("A DATA INICIAL: "+DTOC(XDTINI)+" ESTÁ FORA DA AS !"+CHR(10)+CHR(13)+"INICIO:["+DTOC(FQ5->FQ5_DATINI)+"] - FINAL:["+DTOC(FQ5->FQ5_DATFIM)+"] - INCONSISTÊNCIA DE DATA INICIAL" , "GPO - LOCT038.PRW") 
			LRET := .F.
		ENDIF
		IF XDTFIM < FQ5->FQ5_DATINI .OR. XDTFIM > FQ5->FQ5_DATFIM
			MSGALERT("A DATA FINAL: "+DTOC(XDTFIM)+" ESTÁ FORA DA AS !"+CHR(10)+CHR(13)+"INICIO:["+DTOC(FQ5->FQ5_DATINI)+"] - FINAL:["+DTOC(FQ5->FQ5_DATFIM)+"] - INCONSISTÊNCIA DE DATA FINAL" , "GPO - LOCT038.PRW") 
			LRET := .F.
		ENDIF
	ENDIF
ENDIF

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA04916(CCAMPO)					// VALIDAÇÕES
// ======================================================================= \\
// --> CHAMADA: VALIDAÇÃO USUÁRIO - CAMPO FPM_CARRET & FPM_DTFIM 
LOCAL LRET   := .T.

IF UPPER(CCAMPO)==UPPER("FPM_CARRET")
	M->FPM_CARRET := RIGHT("000" + ALLTRIM(M->FPM_CARRET), 3)	// PREENCHER COM ZEROS À ESQUERDA.
ENDIF

IF     UPPER(CCAMPO)==UPPER("FPM_DTINI")						// EMPTY(ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })]) 
	ZLEDTINI := M->FPM_DTINI
	ZLEDTFIM := (ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM" })]) 
ELSEIF UPPER(CCAMPO)==UPPER("FPM_DTFIM")
	ZLEDTINI := (ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI" })])
	ZLEDTFIM := M->FPM_DTFIM	
ENDIF

DO CASE
CASE UPPER(CCAMPO)==UPPER("FPM_CODBEM")
	IF VALTYPE(ODLGEQUI)=="O"  									// SE O OBJETO JÁ FOI CRIADO
		_CCODBEM	:= M->FPO_CODBEM
		_CFROTA		:= IIF(!EMPTY(_CCODBEM),POSICIONE("ST9",1,XFILIAL("ST9") + _CCODBEM,"T9_CODFA"),"")
		IF !EMPTY(_CFROTA)
			ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CODFAN" })] := _CFROTA
		ENDIF
		IF !EMPTY(_CCODBEM)
			ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_COMPR" })] := VAL(REPLACE(("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000002","TB_DETALHE")),",","."))//VAL("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000002","TB_DETALHE"))
			ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_LARGUR"})] := VAL(REPLACE(("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000003","TB_DETALHE")),",","."))//VAL("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000003","TB_DETALHE"))
			ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_ALTURA"})] := VAL(REPLACE(("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000001","TB_DETALHE")),",","."))//VAL("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000001","TB_DETALHE"))
			ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPM_PESO"  })] := VAL(REPLACE(("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000004","TB_DETALHE")),",","."))//VAL("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000004","TB_DETALHE"))
		ENDIF
		IF CCODFROTA <> _CFROTA .AND. !EMPTY(_CFROTA)
			MSGALERT("O ACESSÓRIO " + ALLTRIM(_CCODBEM) + ", PERTENCE A FROTA " + ALLTRIM(_CFROTA) + ".")
		ELSEIF CCODFROTA <> _CFROTA .AND. EMPTY(_CFROTA)
			MSGALERT("O ACESSÓRIO " + ALLTRIM(_CCODBEM) + ", NÃO POSSUI NENHUMA FROTA VINCULADA.")
		ENDIF
	ENDIF
CASE UPPER(CCAMPO)==UPPER("FPM_DTINI") .AND. EMPTY(M->FPM_DTINI)
	MSGALERT("O CAMPO DE DATA INICIAL NÃO PODE ESTAR VAZIO !" , "GPO - LOCT038.PRW")
	LRET := .F.
CASE UPPER(CCAMPO)==UPPER("FPM_DTFIM") .AND. EMPTY(M->FPM_DTFIM)
	MSGALERT("O CAMPO DE DATA FINAL NÃO PODE ESTAR VAZIO !" , "GPO - LOCT038.PRW")
	LRET := .F.
CASE (UPPER(CCAMPO)==UPPER("FPM_DTINI") .OR. UPPER(CCAMPO)==UPPER("FPM_DTFIM")) .AND. !EMPTY(M->FPM_DTINI) .AND. !EMPTY(M->FPM_DTFIM) .AND. ZLEDTFIM  < ZLEDTINI
	MSGALERT("O CAMPO DE DATA FINAL NÃO PODE SER MENOR QUE A DATA INICIAL !" , "GPO - LOCT038.PRW") 
	LRET := .F.
ENDCASE

IF ! LRET
	RETURN LRET
ENDIF
	
RETURN(LRET)



// ======================================================================= \\
FUNCTION LOCA04917()
// ======================================================================= \\

LOCAL LRET := .T.
LOCAL OOBJ := ODLGFRO			// PROGRAMAÇÃO MENSAL

NTPSE := "A"

IF NTPSE <> "A" 
	IF OFOLDER:NOPTION == 2		// ACESSÓRIOS
		OOBJ := ODLGEQU
		IF OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_QTACES"})] == 0
			MSGALERT("FAVOR INFORMAR QUANTIDADE MAIOR QUE ZERO PARA OS ACESSÓRIOS" , "GPO - LOCT038.PRW")
			RETURN .F.
		ENDIF
	ENDIF
	
	IF EMPTY(OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})]) .OR. EMPTY(OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})])
		MSGALERT("PREENCHIMENTO OBRIGATÓRIO DA DATA INICIAL E DATA FINAL." , "GPO - LOCT038.PRW")
		LRET := .F.
	ENDIF
	
	IF LRET .AND. OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})] < OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})] .AND. !OOBJ:ACOLS[OOBJ:NAT][LEN(OOBJ:AHEADER)+2]
		MSGALERT("A DATA FINAL E MENOR QUE A DATA INICIAL!!!" , "GPO - LOCT038.PRW") 
		LRET:= .F.
	ENDIF
	
	IF OFOLDER:NOPTION == 3 .AND. EMPTY( OOBJ:ACOLS[ OOBJ:NAT ][ ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CARRET"})] ) .AND. ;
		!OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS"})] $ "A|E|S"
		MSGALERT("PREENCHIMENTO OBRIGATÓRIO DO NÚMERO DE SEQUÊNCIA CARRETA" , "GPO - LOCT038.PRW")
	//	LRET := .F.
	ENDIF
	
ELSE
	OOBJ := ODLGEQU
ENDIF

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA04918()
// ======================================================================= \\

LOCAL LRET := .T.
LOCAL OOBJ := ODLGFRO			// PROGRAMAÇÃO MENSAL

NTPSE := "A"

IF NTPSE <> "A" 
	IF OFOLDER:NOPTION == 2		// ACESSÓRIOS
		OOBJ := ODLGEQU
		IF OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_QTACES"})] == 0
			MSGINFO("FAVOR INFORMAR QUANTIDADE MAIOR QUE ZERO PARA OS ACESSÓRIOS" , "GPO - LOCT038.PRW")
			RETURN .F.
		ENDIF
	ENDIF
	
	IF EMPTY(OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})]) .OR. EMPTY(OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})])
		MSGALERT("PREENCHA AS DATAS INICIAL E FINAL - PREENCHIMENTO OBRIGATÓRIO" , "GPO - LOCT038.PRW")
		LRET := .F.
	ENDIF
	
	IF LRET .AND. OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTFIM"})] < OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_DTINI"})] .AND. !OOBJ:ACOLS[OOBJ:NAT][LEN(OOBJ:AHEADER)+2]
		MSGALERT("A DATA FINAL INVÁLIDA, NÃO PODE SER MENOR QUE A DATA INICIAL !" , "GPO - LOCT038.PRW") 
		LRET := .F.
	ENDIF
	
	IF OFOLDER:NOPTION == 3 .AND. EMPTY( OOBJ:ACOLS[ OOBJ:NAT ][ ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_CARRET"})] ) .AND.;
		!OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS"})] $ "A|E|S"
		MSGALERT("PREENCHA O NÚMERO DE SEQUÊNCIA CARRETA - PREENCHIMENTO OBRIGATÓRIO" , "GPO - LOCT038.PRW") 
	//	LRET := .F.
	ENDIF
	
ELSE
	OOBJ := ODLGEQU
ENDIF

RETURN LRET
