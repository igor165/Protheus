#INCLUDE "loca052.ch" 

/*/{PROTHEUS.DOC} LOCA052.PRW
ITUP BUSINESS - TOTVS RENTAL
PROGRAMACAO DIARIA GUINDASTE
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/
#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "AP5MAIL.CH"

FUNCTION LOCA052()
LOCAL   CCONDFIL

PRIVATE CCADASTRO := STR0001 //"PROGRAMACAO DIARIA DE EQUIPAMENTOS"
PRIVATE AROTINA   := FMONTAROT()	// MONTA O AROTINA
PRIVATE CDELFUNC  := ".T." 			// VALIDACAO PARA A EXCLUSAO. PODE-SE UTILIZAR EXECBLOCK
PRIVATE OAUX                        // ESTÁ VARIAVEL ESTVA DECLARADA COMO LOCAL NA STATIC FUNCTION FOKZLG(). ALTERADO POR JESUS-BIALE
PRIVATE AACOLSMOANT                 // VARIAVEL UTILIZADA PARA VERIFICAR SE HOUVE ALTERAÇÕES NO ACOLS DA ABA DE MÃO DE OBRA
PRIVATE AHEADERMO                   // VARIAVEL UTILIZADA PARA GUARDAR O AHEADER DA ABA MÃO DE OBRA           
PRIVATE CDATAFOL  := ""
PRIVATE DINIAUX   := CTOD("")
PRIVATE DFIMAUX   := CTOD("")
PRIVATE DDTCORTE 
 
//IF !LOCA061() 								// --> VALIDAÇÃO DO LICENCIAMENTO (WS) DO GPO 
//	RETURN 
//ENDIF 

// CRIACAO AUTOMATICA DO PARAMETRO MV_LOCX044 NO CASO DE NÃO EXISTIR
SX6->(DBSETORDER(1))
IF !SX6->(DBSEEK(XFILIAL("SX6")+"MV_LOCX044"))
	/*
	SX6->(RECLOCK("SX6",.T.))
	SX6->X6_FIL			:= XFILIAL("SX6")
	SX6->X6_VAR			:= "MV_LOCX044"
	SX6->X6_TIPO		:= "D"
	SX6->X6_PROPRI		:= "R"
	SX6->X6_DESCRIC		:= STR0002 //"VALIDACAO DA DATA NA PROG.DIARIA"
	SX6->(MSUNLOCK())
	*/
ENDIF
DDTCORTE := GETMV("MV_LOCX044")

CCONDFIL := "T9_TIPOSE='E' OR T9_TIPOSE='A'"

DBSELECTAREA("ST9")
DBSETORDER(1)

MBROWSE(6,1,22,75,"ST9"  ,       ,,,,,      ,,,,,,,,CCONDFIL)

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION FMONTAROT()  		// MONTA O AROTINA
// ======================================================================= \\

LOCAL AROTINA := {}

AADD(AROTINA,{STR0003         , "AXPESQUI"   , 0 , 1}) //"PESQUISAR"
AADD(AROTINA,{STR0004        , "LOCA05201"  , 0 , 2}) //"VISUALIZAR"
AADD(AROTINA,{STR0005       , "LOCA05202"  , 0 , 4}) //"PROGRAMACAO"
AADD(AROTINA,{STR0006  , "U_LOCI050 " , 0 , 5}) //"AUTORIZ DE SAIDA"
AADD(AROTINA,{STR0007 , "LOCA05219" , 0 , 6}) //"PESQ. AS / VIAGEM"

RETURN AROTINA



// ======================================================================= \\
FUNCTION LOCA05201() 
// ======================================================================= \\
// --> CHAMADA: MENU - "VISUALIZAR" 

LOCAL APARAMBOX := {}
LOCAL ARET 		:= {}  
LOCAL CDTINI    := CTOD("")  
LOCAL CDTFIM    := CTOD("") 

PRIVATE LCANCEL := .F.
PRIVATE NTPSE   := ST9->T9_TIPOSE 

AADD(APARAMBOX,{1,STR0008, CDTINI, "@E XX/XX/XXXX", "", "", "", 50, .T.}) // TIPO CARACTERE //"DATA DE "
AADD(APARAMBOX,{1,STR0009, CDTFIM, "@E XX/XX/XXXX", "", "", "", 50, .T.}) // TIPO CARACTERE //"DATA ATÉ"
IF PARAMBOX(APARAMBOX,STR0010,@ARET,,,,,,,,.F.)        //"PARÂMETROS"
	DINIAUX := ARET[1] 
	DFIMAUX := ARET[2]
	FMANU(2)
ENDIF 

RETURN NIL



// ======================================================================= \\
FUNCTION LOCA05202() 
// ======================================================================= \\
// --> CHAMADA: MENU - "PROGRAMACAO" 

LOCAL APARAMBOX := {}
LOCAL ARET 		:= {}  
LOCAL CDTINI    := CTOD("")  
LOCAL CDTFIM    := CTOD("") 

PRIVATE LCANCEL := .F.
PRIVATE NTPSE := ST9->T9_TIPOSE 

AADD(APARAMBOX,{1,STR0008, CDTINI, "@E XX/XX/XXXX", "", "", "", 50, .T.}) // TIPO CARACTERE //"DATA DE "
AADD(APARAMBOX,{1,STR0009, CDTFIM, "@E XX/XX/XXXX", "", "", "", 50, .T.}) // TIPO CARACTERE //"DATA ATÉ"
IF PARAMBOX(APARAMBOX,STR0010,@ARET,,,,,,,,.F.)        //"PARÂMETROS"
	DINIAUX := ARET[1] 
	DFIMAUX := ARET[2]
	FMANU(4)
ENDIF 

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION FMANU(POPC)		
// ======================================================================= \\
// PROGRAMA PRINCIPAL 

LOCAL CTITJAN  := STR0011 //"PROGRAMACAO DIARIA FROTA"
LOCAL NSTYLE 
LOCAL AAREAZLG := GETAREA()
LOCAL NPOS     := 0 
LOCAL ABUTTONS :={ {"ANALITIC",{|| LOCA05211() },OEMTOANSI(STR0012)        ,OEMTOANSI(STR0013  ) },; //"CESTA DE ACESSÓRIOS"###"CESTA"
                   {"S4WB011N",{|| DESMOBI()     },OEMTOANSI(STR0014)     ,OEMTOANSI(STR0015)},; //"DESMOBILIZA ACESSÓRIOS"###"DESMOBI"
                   {"S4WB011N",{|| MOVACES()     },OEMTOANSI(STR0016)     ,OEMTOANSI(STR0017)},; //"RETORNO DE ACESSÓRIOS"###"RET.ACESS."
                   {"EDITABLE",{|| DLGEMAIL()    },OEMTOANSI(STR0018),OEMTOANSI(STR0019)}} //"ENVIA E-MAIL SOLICITANDO NF"###"E-MAIL FISCAL"

PRIVATE NOPC := POPC
PRIVATE OARIAL12N1  := TFONT():NEW("ARIAL",12,16,,.T.,,,,.T.,.F.)
PRIVATE OARIAL12N2  := TFONT():NEW("ARIAL",12,16,,.T.,,,,.T.,.F.)
PRIVATE ODLGFRO, ODLGEQU, ODLGMO, OFOLDERFRO,OFROTA
PRIVATE CFROTA      := TRIM(ST9->T9_CODBEM)+" - "+TRIM(ST9->T9_NOME)
PRIVATE CCODFROTA   := ST9->T9_CODBEM
PRIVATE CCODFANTA   := ST9->T9_CODFA
PRIVATE AHEADER		:= {}
PRIVATE ACOLS		:= {}
PRIVATE ACOLSCOM	:= {}
PRIVATE AMARCADOS	:= {}
PRIVATE ADELETA		:= {}
PRIVATE _ABUTTON	:= {}
PRIVATE NFOLDERFRO	:= 0
PRIVATE NFOLDERMO	:= 0
PRIVATE NFOLDEREQUI	:= 0
PRIVATE OFONT1		:= OARIAL12N1  				// SAY
PRIVATE OFONT2		:= OARIAL12N2  				// GET
PRIVATE AOBJECTS  	:= {}
PRIVATE AINFO     	:= {}
PRIVATE APOSGET   	:= {}
PRIVATE APOSOBJ   	:= {}
PRIVATE CKEYP		:= ""
PRIVATE	CKEYS		:= ""
PRIVATE CTPAS		:= ""
PRIVATE ACOLSFULLAC := {} 						// ACOLS COM TODOS OS ACESSÓRIOS 
PRIVATE ACOLSFULLMO := {} 						// ACOLS COM TODOS OS OPERADORES 

NSTYLE   := GD_INSERT + GD_UPDATE + GD_DELETE 
ASIZEAUT := MSADVSIZE() 

FPL->(DBSELECTAREA("FPL"))
FPL->(DBSETORDER(1))
REGTOMEMORY("FPL",.T.)

FPO->(DBSELECTAREA("FPO"))
FPO->(DBSETORDER(1))
REGTOMEMORY("FPO")

IF OMAINWND:NCLIENTWIDTH > 800
	AADD( AOBJECTS, {  100, 008, .T., .T. } ) 	// ENCHOICE
	AADD( AOBJECTS, {  100, 092, .T., .T. } ) 	// MSGETDADOS
ELSE
	AADD( AOBJECTS, {  100, 030, .T., .T. } ) 	// ENCHOICE
	AADD( AOBJECTS, {  100, 070, .T., .T. } ) 	// MSGETDADOS
ENDIF

AINFO 	:= {ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
APOSOBJ := MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )
APOSGET := MSOBJGETPOS((ASIZEAUT[3]-ASIZEAUT[1]),315,{{004,024,240,270}} )

NLIN1:=APOSOBJ[2,1]
NCOL1:=APOSOBJ[2,2]
NLIN2:=APOSOBJ[2,4]-APOSOBJ[2,2] 				// LARGURA
NCOL2:=APOSOBJ[2,3]-APOSOBJ[2,1] 				// ALTURA

APAGES :={}
ATITLES:={}
IF ST9->T9_TIPOSE == "A"						// ACESSÓRIOS 
	AADD(ATITLES,STR0020			) ; NFOLDEREQU	:=LEN(ATITLES) //"ACESSORIOS"
	ABUTTONS := {}								// SOME COM OS BOTÕES DE CESTA, DEMOBILIZA E E-MAIL
ELSE
	AADD(ATITLES,STR0021	) ; NFOLDERFRO	:=LEN(ATITLES) //"PROGRAMACAO MENSAL"
	AADD(ATITLES,STR0022			) ; NFOLDERMO	:=LEN(ATITLES) //"MAO DE OBRA"
	AADD(ATITLES,STR0020			) ; NFOLDEREQU	:=LEN(ATITLES) //"ACESSORIOS"
ENDIF

DEFINE MSDIALOG ODLG FROM ASIZEAUT[7],0 TO ASIZEAUT[6],ASIZEAUT[5] TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL

//	TFOLDER():NEW(<NROW>,<NCOL>,<CPROMPT>,<CDLGNAMEN>,<OWND> ,<NOPTION>,<NCLRFORE>,<NCLRBACK>,<.LPIXEL.>,<.LDESIGN.>,<NWIDTH>,<NHEIGHT>,<CMSG>)
	OFOLDER := TFOLDER():NEW(NLIN1+15 ,NCOL1 ,ATITLES  ,APAGES     ,ODLG   ,         ,          ,          ,.T.       ,.F.        ,NLIN2   ,NCOL2-15    ,      )

	FOR NPOS:=1 TO LEN(ATITLES)
		OFOLDER:ADIALOGS[NPOS]:OFONT := ODLG:OFONT
	NEXT NPOS 

	OFOLDER:BSETOPTION := {|NINDO|LOCA05205(NINDO,OFOLDER:NOPTION,@ODLG,@OFOLDER)}

	NLIN1 := APOSOBJ[1,1]
	NCOL1 := APOSOBJ[1,2]
	NLIN2 := APOSOBJ[1,3]
	NCOL2 := APOSOBJ[1,4]
	@ NLIN1,NCOL1 TO NLIN2+15,NCOL2 OF ODLG PIXEL

	IF ST9->T9_TIPOSE == "A" 
		@ NLIN1+15,NCOL1+005 SAY OEMTOANSI(STR0023) SIZE 065,8   OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT1 //"ACESSORIO:"
		@ NLIN1+14,NCOL1+090 MSGET OFROTA  VAR CFROTA  SIZE 400,8 WHEN .F. OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT2
	ELSE
		@ NLIN1+15,NCOL1+005 SAY OEMTOANSI(STR0024) SIZE 065,8   OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT1 //"FROTA:"
		@ NLIN1+14,NCOL1+050 MSGET OFROTA  VAR CFROTA  SIZE 400,8 WHEN .F. OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT2
	ENDIF

	IF NFOLDERFRO > 0
		NLIN1 := 002
		NCOL1 := 003
		NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-35  //ALTURA
		NCOL2 := APOSOBJ[2,4]-07
		FFOLDERFRO(NFOLDERFRO,NLIN1,NCOL1,NLIN2,NCOL2)
	ENDIF

	IF NFOLDERMO > 0
		NLIN1 := 002
		NCOL1 := 003
		NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-35  //ALTURA
		NCOL2 := APOSOBJ[2,4]-07
		FFOLDERMO(NFOLDERMO,NLIN1,NCOL1,NLIN2,NCOL2)
	ENDIF

	IF NFOLDEREQU > 0 //ACESSORIOS
		NLIN1 := 002
		NCOL1 := 003
		NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-35  //ALTURA
		NCOL2 := APOSOBJ[2,4]-07
		FFOLDEREQUI(NFOLDEREQU,NLIN1,NCOL1,NLIN2,NCOL2)
	ENDIF

ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{|| IIF(NOPC==2, ODLG:END(),IIF( VALCAFIN(), FSALVAR(ODLG),)) },{||FSAIR(ODLG)},,ABUTTONS)

RESTAREA(AAREAZLG)

RETURN



// ======================================================================= \\
STATIC FUNCTION VALCAFIN() 
// ======================================================================= \\
// --> VALIDADOR - FUNCOES DA PROGRAMACAO DE FROTA E ACESSORIOS

LOCAL LRET  := .T.  
LOCAL NSOMA := 0
LOCAL NX    := 0 
LOCAL DI    := 0 
LOCAL _NX   := 0 

IF NTPSE != "A"
	ATUACACOLS()  // ATUALIZANDO A ACOLSFULLAC COM AS ALTERAÇÕES DA ACOLS TEMPORÁRIA - ACESSORIOS 
	LRET := LOCA05220()
	IF ! LRET
		RETURN .F.
	ENDIF
ELSE
	// VALIDAÇÃO DOS ITENS DO ACOLS SÓ QUANDO ESTIVER PROGRAMANDO DETERMINADO ACESSÓRIO.
	NPOSQTDE 	:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_QTACES" }  )	//POSICAO CAMPO QUANTIDADE DE ACESSÓRIOS
	NPOSDINIAC 	:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_DTINI"  }  )	//POSICAO CAMPO DATA INICIAL PROGRAMACAO
	NPOSDFIMAC	:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_DTFIM"  }  )	//POSICAO CAMPO DATA FINAL PROGRAMACAO
	NPOSSTATUS 	:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_STATUS" }  )	//POSICAO CAMPO STATUS DO ACESSÓRIO
	NPOSAS		:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_NRAS"   }  )	//POSICAO CAMPO Nº AS

	FOR NX := 1 TO LEN(ODLGEQU:ACOLS)
		IF EMPTY(ODLGEQU:ACOLS[ NX, NPOSAS]) .AND. !ODLGEQU:ACOLS[NX, LEN(ODLGEQU:AHEADER)+2]

			IF EMPTY(ODLGEQU:ACOLS[NX, NPOSDINIAC]) .OR. EMPTY(ODLGEQU:ACOLS[NX, NPOSDFIMAC])
				MSGSTOP(STR0025 , STR0026)  //"ATENÇÃO: OS CAMPOS DATA INÍCIO E DADA FINAL DEVEM ESTAR PREENCHIDAS !"###"GPO - LOCT049.PRW"
				ODLGEQU:GOTO(NX)
				ODLGEQU:OBROWSE:REFRESH()
				RETURN .F.
			ENDIF

			IF ODLGEQU:ACOLS[NX, NPOSQTDE] == 0
				MSGSTOP(STR0027 , STR0026)  //"ATENÇÃO: A QUANTIDADE DEVE SER PREENCHIDA!"###"GPO - LOCT049.PRW"
				ODLGEQU:GOTO(NX)
				ODLGEQU:OBROWSE:REFRESH()
				RETURN .F.
			ENDIF

			IF EMPTY(ODLGEQU:ACOLS[NX, NPOSSTATUS])
				MSGSTOP(STR0028 , STR0026)  //"O STATUS DEVE ESTAR PREENCHIDO!"###"GPO - LOCT049.PRW"
				ODLGEQU:GOTO(NX)
				ODLGEQU:OBROWSE:REFRESH()
				RETURN .F.
			ENDIF
		ENDIF 
	NEXT NX 
ENDIF

// VALIDA A MÃO DE OBRA
__CFOLMES := ALLTRIM(STR((VAL(GETMV("MV_FOLMES")))))
__CFOLMES := __CFOLMES+"01"
__CFOLMES := STOD(__CFOLMES) - 10
__CFOLMES := SUBSTR(DTOS(__CFOLMES),1,6)+"20"  
IF LRET .AND. OFOLDER:NOPTION == NFOLDERMO
	IF ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM"})] < ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI"})] 
		MSGALERT(STR0029 , STR0026)  //"PREENCHIMENTO OBRIGATORIO. A DATA FINAL E MENOR QUE A DATA INICIAL!!!"###"GPO - LOCT049.PRW"
		LRET := .F.
	ELSEIF ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI"})] < STOD(__CFOLMES)
	     CMSGDATA  := ""
	     CMSGDATA2 := ""
	     CMSGDATA  := DTOC(ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI"})])
	     CMSGDATA2 := DTOC(STOD(__CFOLMES) - 1)
		 MSGALERT(STR0030 + CMSGDATA + STR0031 + CMSGDATA2 + STR0032 , STR0026)  //"A DATA DE MÃO DE OBRA NÃO PODE SER MENOR QUE O FECHAMENTO DA FOLHA, DA DATA "###" ATÉ "###" NÃO SERÁ CONSIDERADO PARA O TIMESHEET"###"GPO - LOCT049.PRW"
	ENDIF
ENDIF

IF ! LRET
	RETURN .F.
ENDIF

// --> VALIDAÇÃO ACESSÓRIOS
FOR _NX := 1 TO LEN(ODLGEQU:ACOLS)
	IF !ODLGEQU:ACOLS[_NX,LEN(ODLGEQU:AHEADER)+2] .AND. !ODLGEQU:ACOLS[_NX, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ESC9A"
		WCODBEM   := IF(NTPSE == "A", CCODFROTA, ODLGEQU:ACOLS[_NX, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})] )
		WDTINI    := ODLGEQU:ACOLS[_NX, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
		WDTFIM    := ODLGEQU:ACOLS[_NX, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
		IF (NTPSE == "A" .AND. ST9->T9_ACESSOR != "R") .OR. POSICIONE("ST9",1,XFILIAL("ST9")+WCODBEM,"T9_ACESSOR") != "R"

			FOR DI := _NX+1 TO LEN(ODLGEQU:ACOLS)
				IF  !ODLGEQU:ACOLS[DI,LEN(ODLGEQU:AHEADER)+2] .AND. ;
				    !ODLGEQU:ACOLS[DI, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ESC9A" .AND. ;
				    IF(NTPSE == "A", .T., ODLGEQU:ACOLS[DI, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})] == WCODBEM) .AND. ;
					((ODLGEQU:ACOLS[DI, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})] <= WDTINI .AND. ;
					ODLGEQU:ACOLS[DI, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] >= WDTINI) .OR.  ;
					(ODLGEQU:ACOLS[DI, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})] <= WDTFIM .AND. ;
					ODLGEQU:ACOLS[DI, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] >= WDTFIM) .OR.  ;
					(ODLGEQU:ACOLS[DI, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})] >= WDTINI .AND. ;
					ODLGEQU:ACOLS[DI, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] <= WDTFIM))

					MSGALERT(STR0033+WCODBEM+STR0034 , STR0026)  //"O ACESSÓRIO "###" ESTÁ ENCAVALANDO DATAS NESTA PROGRAMAÇÃO, VERIFIQUE!"###"GPO - LOCT049.PRW"
					ODLGEQU:GOTO(DI)
					ODLGEQU:OBROWSE:REFRESH()
					LRET := .F.
				ENDIF
			NEXT DI 
		ENDIF
			
		DDTINI := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
		DDTFIM := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] 

		// --> VERIFICA SE EXISTE ESTOQUE PARA O STATUS DISPONIVEL
		IF OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] == "1"
			CCODPROD:= POSICIONE("ST9",1,XFILIAL("ST9")+WCODBEM, "T9_CODESTO") //CÓDIGO DO ESTOQUE PARA O ACESSÓRIO EM QUESTÃO.
			NQTDESTO:= POSICIONE("SB2",1,XFILIAL("SB2")+CCODPROD, "B2_QATU") 
			FOR NX := 1 TO LEN(ODLGEQU:ACOLS)
				IF ODLGEQU:ACOLS[NX,2] == "1" .AND. (ODLGEQU:NAT <> NX)
					NSOMA += ODLGEQU:ACOLS[NX,7]
				ENDIF
			NEXT NX

			IF ! EMPTY(WCODBEM) .AND. (NQTDESTO - NSOMA) <= 0
				MSGINFO(STR0035+WCODBEM , STR0026) //"SEM ESTOQUE DISPONIVEL PARA O ACESSÓRIO "###"GPO - LOCT049.PRW"
			    RETURN .F.
			ENDIF
		ENDIF
	ENDIF
NEXT

RETURN LRET 



// ======================================================================= \\
STATIC FUNCTION FFOLDERFRO(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2) 
// ======================================================================= \\
// --> CRIA O OBJETO FOLDER PRA A PROGRAMACAO DE FROTA

LOCAL ACAMPOSSIM  	:= {}
LOCAL NSTYLE        := IIF(NOPC==2, 0, GD_INSERT + GD_UPDATE + GD_DELETE)
LOCAL CALIAS,CCHAVE,CCONDICAO,NINDICE,CFILTRO

CALIAS    := "FPO"
CCHAVE    := CCODFROTA

CCONDICAO := 'FPO->FPO_FROTA == "'+CCHAVE+'"'    	// --> PARA QUE TODA PROGRAMAÇÃO FOSSE VISTA EM QUALQUER FILIAL.
NINDICE   := 1
IF !EMPTY(DINIAUX) .AND. !EMPTY(DFIMAUX)
	CFILTRO := 'EMPTY(FPO->FPO_CODBEM) .AND. FPO->FPO_DTINI >= DINIAUX .AND. FPO->FPO_DTFIM <= DFIMAUX'
ELSE
	CFILTRO := 'EMPTY(FPO->FPO_CODBEM)'
ENDIF

AADD(ACAMPOSSIM,{"FPO_NRAS"   	,"" })
AADD(ACAMPOSSIM,{"FPO_DTINI"	,"" })
AADD(ACAMPOSSIM,{"FPO_DTFIM"	,"" })
AADD(ACAMPOSSIM,{"FPO_HRINI"	,"" })
AADD(ACAMPOSSIM,{"FPO_HRFIM"	,"" })      
AADD(ACAMPOSSIM,{"FPO_CODCLI"  	,"V"})
AADD(ACAMPOSSIM,{"FPO_LOJA"   	,"V"})
AADD(ACAMPOSSIM,{"FPO_NOMCLI"  	,"V"})
AADD(ACAMPOSSIM,{"FPO_STATUS"	,"" })
AADD(ACAMPOSSIM,{"FPO_FINAL" 	,"" })
AADD(ACAMPOSSIM,{"FPO_OBS"		,"" })
AADD(ACAMPOSSIM,{"FPO_PROJET"	,"V"})
AADD(ACAMPOSSIM,{"FPO_OBRA"		,"V"})
AADD(ACAMPOSSIM,{"FPO_REVISA"	,"V"}) 
AADD(ACAMPOSSIM,{"FPO_CARRET"	,"" })		// PACKING LIST 
AADD(ACAMPOSSIM,{"FPO_VIAGEM"	,"V"})
AADD(ACAMPOSSIM,{"FPO_FILNF"	,"V"}) 
AADD(ACAMPOSSIM,{"FPO_NUMNF"	,"V"}) 
AADD(ACAMPOSSIM,{"FPO_SERNF"	,"V"}) 
AADD(ACAMPOSSIM,{"FPO_CLINF"	,"V"}) 
AADD(ACAMPOSSIM,{"FPO_LOJNF"	,"V"}) 
AADD(ACAMPOSSIM,{"FPO_MAILF"	,"V"})		// DATA ENVIO DE E-MAIL PARA O FISCAL 
AADD(ACAMPOSSIM,{"FPO_LOCAL"	,"" })
AADD(ACAMPOSSIM,{"FPO_OS"	    ,"V"})		// CAMPOS CRIADOS PARA TRARAR MANUTENCAO DA PROGRAMACAO PELO MANUTENCAO DE ATIVOS 
AADD(ACAMPOSSIM,{"FPO_MOT_OS"	,"V"}) 		// CAMPOS CRIADOS PARA TRARAR MANUTENCAO DA PROGRAMACAO PELO MANUTENCAO DE ATIVOS 
AADD(ACAMPOSSIM,{"FPO_ZLGSC6"	,"V"}) 		// CAMPOS PARA VÍNCULO DA ZLG COM A SC6 
AADD(ACAMPOSSIM,{"FPO_ZLGSD3"	,"V"})
AADD(ACAMPOSSIM,{"FPO_DEVACE"	,"V"})
AADD(ACAMPOSSIM,{"FPO_REGORI"	,"V"})

IF EXISTBLOCK("LC049FRO") 					// PONTO DE ENTRADA PARA GRAVAÇÃO DE NOVOS CAMPOS NA ZLG
	ACAMPOSSIM := EXECBLOCK("LC049FRO",.T.,.T.,{ ACAMPOSSIM })
ENDIF 

AHEADER := FHEADER(ACAMPOSSIM) 
ACOLS   := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO,1,"PR") 
ASORT(ACOLS,,, { |X,Y| X[2]+X[3] < Y[2]+Y[3] })	// ORDENAR POR PACKING LIST + C?DIGO

DBSELECTAREA("FPO")
FPO->(DBSETORDER(1))

//                           NTOP ,NLEFT,NBOTTOM,NRIGHT,NSTYLE,CLINHAOK      ,CTUDOOK ,CINICPOS,AALTER,NFREEZE,NMAX,CFIELDOK    ,CSUPERDEL,CDELOK         ,OWND                     ,AHEADER,ACOLS}
ODLGFRO:=MSNEWGETDADOS():NEW(NLIN1,NCOL1,NLIN2  ,NCOL2 ,NSTYLE,"LOCA05207()"    ,        ,			,      ,       ,9999,"LOCA05203()",.F.      ,"LOCA05206()",OFOLDER:ADIALOGS[NFOLDER],AHEADER,ACOLS)
ODLGFRO:OBROWSE:ALIGN   := CONTROL_ALIGN_ALLCLIENT 
ODLGFRO:OBROWSE:BCHANGE := {||LOCA05214(NFOLDER)} 
ODLGFRO:OBROWSE:BDELETE := {||LOCA05227() } 

RETURN NIL 



// ======================================================================= \\
FUNCTION LOCA05203()
// ======================================================================= \\

LOCAL LRET    := .T.
LOCAL XSTATUS := ""
LOCAL XAS     := ""
LOCAL XDTINI  := CTOD("")
LOCAL XDTFIM  := CTOD("")
LOCAL XSITMAN := SPACE(1) 
LOCAL NSOMA	  := 0 
LOCAL NX      := 0 

IF NTPSE == "A"		// ACESSÓRIOS
	IF !EMPTY(ODLGEQU:ACOLS[N, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})])
		MSGALERT(STR0036 , STR0026)  //"VINCULO COM PROGRAMAÇÃO DE FROTA. NÃO É POSSÍVEL ALTERAR ESTE REGISTRO !"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF  
	DDTINI := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
	DDTFIM := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] 
ENDIF

OAUX := IF(OFOLDER:NOPTION==NFOLDERFRO, ODLGFRO, ODLGEQU)

IF !EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NUMNF"})]) .AND. OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "E;S;A"
	MSGALERT(STR0037 , STR0026) //"NÃO É POSSÍVEL ALTERAR ESTE REGISTRO! JÁ POSSUI NOTA !"###"GPO - LOCT049.PRW"
	RETURN .F.
ENDIF

IF OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "C"
	MSGALERT(STR0038 , STR0026)  //"VINCULO COM MANUTENÇÃO. ESTA LINHA NÃO PODE SER MODIFICADA!"###"GPO - LOCT049.PRW"
	RETURN .F.
ENDIF

XDTINI  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
XDTFIM  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]

// --> VALIDAÇÃO DA SITUAÇÃO DE ATIVIDADE DA FROTA
IF READVAR() == "M->FPO_FROTA" .AND. OFOLDER:NOPTION==NFOLDERFRO
	XSITMAN := POSICIONE("ST9",1,XFILIAL("ST9")+M->FPO_FROTA,"T9_SITMAN")
	IF XSITMAN == "I"
		MSGALERT(STR0039 , STR0026)  //"ESTA FROTA NÃO ESTÁ ATIVA"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF
ENDIF

IF READVAR() == "M->FPO_NRAS" .AND. OFOLDER:NOPTION==NFOLDERFRO
	IF EMPTY(M->FPO_NRAS)
		MSGALERT(STR0040 , STR0026)  //"ATENÇÃO: DIGITE O Nº DA AS"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF

	LACHOU := .F.
	AAREADTQ := FQ5->( GETAREA() )
	FQ5->( DBSETORDER( 9 ) )
	FQ5->( DBSEEK( XFILIAL("FQ5") + M->FPO_NRAS, .T.) )
	WHILE ! FQ5->( EOF() ) .AND. FQ5->FQ5_AS == M->FPO_NRAS
		IF FQ5->FQ5_GUINDA == CCODFROTA .AND. FQ5->FQ5_STATUS == "6" .AND. FQ5->FQ5_DATINI > DDTCORTE // VARIÁVEL DECLARADA NO INÍCIO DO PROGRAMA
			LACHOU := .T.
			EXIT
		ENDIF
		FQ5->( DBSKIP() )
	ENDDO 

	FQ5->( RESTAREA( AAREADTQ ) )

	IF ! LACHOU
		MSGALERT(STR0041 , STR0026)  //"ATENÇÃO: AS INVÁLIDA. VERIFIQUE A FROTA E O STATUS DA MESMA!"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF

	IF EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODCLI"})])
		OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODCLI"})] := POSICIONE("AAM",1,XFILIAL("AAM")+FQ5->FQ5_CONTRA,"AAM_CODCLI")
		OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_LOJA"  })] := AAM->AAM_LOJA
		OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NOMCLI"})] := POSICIONE("SA1",1,XFILIAL("SA1")+AAM->AAM_CODCLI+AAM->AAM_LOJA,"A1_NOME")
	ENDIF
ENDIF

// --> VALIDAÇÃO DA SITUAÇÃO DO BEM/ACESSÓRIO
IF READVAR() == "M->FPO_CODBEM" .AND. OFOLDER:NOPTION==NFOLDEREQU
	XSITMAN := POSICIONE("ST9",1,XFILIAL("ST9")+M->FPO_CODBEM,"T9_SITMAN")
	IF ST9->T9_TIPOSE != "A"
		MSGALERT(STR0042 , STR0026) //"INCONSISTENCOA: O BEM SELECIONADO DEVE SER UM ACESSÓRIO"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF

	IF XSITMAN == "I"
		MSGALERT(STR0043 , "GPO - LOCT049.PRW") //"ESTE ACESSÓRIO NÃO ESTÁ ATIVO !"
		RETURN .F.
	ENDIF

	W_QTDACE := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES"}) ]				// QUANTIDADE DIGITADA
	IF NTPSE != "A" .AND. ST9->T9_ACESSOR == "R"
		IF ! FLOCASB2(M->FPO_CODBEM,W_QTDACE)
			MSGALERT(STR0044 , STR0026)  //"VALOR INVÁLIDO - AC. TIPO PADRAO OU OPCIONAL"###"GPO - LOCT049.PRW"
			RETURN .F.
		ENDIF
	ENDIF
ENDIF

IF READVAR() == "M->FPO_STATUS"
	IF EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]) .AND. M->FPO_STATUS $ "3,5,6"
		MSGALERT(STR0045 , STR0026)  //"OS STATUS: TRAB, MONTA E DESMONTA. REQUER UMA AS, CADASTRE-A PRIMEIRO. AS EM BRANCO"###"GPO - LOCT049.PRW"
		LRET := .F. 
	ENDIF 
	IF !EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]) .AND. M->FPO_STATUS == "1"
		MSGALERT(STR0046 , STR0026) //"O STATUS: DISPONÍVEL NÃO PODE HAVER AS CADASTRADA! AS PREENCHIDA !"###"GPO - LOCT049.PRW"
		LRET := .F.
	ENDIF
	XSTATUS := M->FPO_STATUS
	XDTINI  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
	XDTFIM  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
ENDIF

IF READVAR() == "M->FPO_DTINI"
	NLINANT := IIF( OAUX:NAT == 1, 1, OAUX:NAT-1 )
	XDTANT  := OAUX:ACOLS[ NLINANT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
	XSTATUS := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})]
	XDTINI  := M->FPO_DTINI
	XDTFIM  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
	IF OAUX:NAT > 1  .AND. ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"}) <> 0
		NPDTINI:= ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})
		NPDTFIM:= ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})
		NPCODBE:= ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})

	ELSEIF !EMPTY(XDTFIM) 
		IF XDTINI > XDTFIM
			LRET := .F.
			MSGALERT(STR0047 , STR0026)  //"DATA INICIAL MAIOR QUE A DATA FINAL"###"GPO - LOCT049.PRW"
		ENDIF
	ENDIF

	XPROJET := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
	XOBRA   := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })]
	XNRAS   := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })]
ENDIF

// --> FUNCAO DE VALIDACAO
IF READVAR() == "M->FPO_DTFIM"
	XSTATUS := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})]
	XDTINI  := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
	XDTFIM  := M->FPO_DTFIM
	IF ! EMPTY(XDTINI) 
		IF XDTFIM < XDTINI
			LRET := .F.
			MSGALERT(STR0048 , STR0026)  //"DATA FINAL MENOR QUE A DATA INICIAL"###"GPO - LOCT049.PRW"
		ENDIF
	ENDIF

	XPROJET := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
	XOBRA   := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })]
	XNRAS   := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })] 
ENDIF 

IF NTPSE <> "A" .AND. OFOLDER:NOPTION == NFOLDEREQU .AND. READVAR() == "M->FPO_CARRET"
	XYZ_POS := ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CARRET"})
	ABX_POS := OAUX:NAT
	ZYX_CONT := OAUX:ACOLS[ ABX_POS ][ XYZ_POS ]   
	ZYX_CONT := M->FPO_CARRET
	IF EMPTY( ZYX_CONT )
		MSGALERT(STR0049 , "GPO - LOCT049.PRW")  //"PREENCHA O NÚMERO DE SEQUÊNCIA CARRETA. PREENCHIMENTO OBRIGATÓRIO !"
		LRET := .F.
	ENDIF
ENDIF

IF READVAR() == "M->FPO_QTACES" .AND. OFOLDER:NOPTION==NFOLDEREQU
	W_QTDACE  := M->FPO_QTACES	// OAUX:ACOLS[W_LINHA ,W_COLU  ]				// QUANTIDADE DIGITADA
	
	IF W_QTDACE == 0
		MSGINFO(STR0050 , STR0026) //"FAVOR INFORMAR QUANTIDADE MAIOR QUE ZERO PARA OS ACESSÓRIOS"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF

	IF NTPSE == "A"
		W_CODBEM  := CCODFROTA
		W_TIPOACE := ST9->T9_ACESSOR
		W_CODVAI  := CCODFROTA
	ELSE
		W_LINHA   := OAUX:NAT
		W_COLU    := ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES"})
		W_CODBEM  := ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})
		W_CODVAI  := OAUX:ACOLS[W_LINHA,W_CODBEM]               // CODIGO DO PRODUTO
		// --> TIPO DE ACESSORIO
		W_TIPOACE := POSICIONE("ST9",1,XFILIAL("ST9")+W_CODVAI,"T9_ACESSOR")
	ENDIF

	// --> SE ROTATIVO, QUANTIDADE VARIAVEL MAIOR QUE ZERO
	IF W_TIPOACE == "R" .AND. W_QTDACE <= 0
		MSGALERT(STR0051 , STR0026)  //"VALOR INVÁLIDO - AC. TIPO ROTATIVO"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF
		
	// --> SE OPCIONAL OU PADRAO , QUANTIDADE SOMENTE 1
	IF W_TIPOACE # "R" .AND. W_QTDACE # 1
		MSGALERT(STR0052 , STR0026)  //"A QUANTIDADE DE ACESSÓRIOS NÃO ROTATIVOS DEVE SER 1 - AC. TIPO PADRAO OU OPCIONAL"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF

	DDTINI := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
	DDTFIM := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] 

	// --> VERIFICA SE EXISTE ESTOQUE PARA O STATUS DISPONIVEL
	IF OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] == "1"
		CCODPROD := POSICIONE("ST9",1,XFILIAL("ST9")+W_CODVAI, "T9_CODESTO") //CÓDIGO DO ESTOQUE PARA O ACESSÓRIO EM QUESTÃO.
		NQTDESTO := POSICIONE("SB2",1,XFILIAL("SB2")+CCODPROD, "B2_QATU") 
		FOR NX := 1 TO LEN(ODLGEQU:ACOLS)
			IF ODLGEQU:ACOLS[NX,2] == "1" .AND. (ODLGEQU:NAT <> NX)
				NSOMA += ODLGEQU:ACOLS[NX,7]
			ENDIF
		NEXT NX
		IF (NQTDESTO - NSOMA) <= 0
			MSGINFO(STR0035+W_CODVAI , STR0026)  //"SEM ESTOQUE DISPONIVEL PARA O ACESSÓRIO "###"GPO - LOCT049.PRW"
		    RETURN .F.
		ENDIF
	ENDIF
		
	LRET:= LOCA05222(W_CODVAI, DTOS(DDTINI), DTOS(DDTFIM))
ENDIF

IF LRET .AND. XSTATUS == "3"	// CONSISTE SE O PERÍODO TRABALHANDO ESTÁ DENTRO DA AS (DTQ)
	XAS     := OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]
	FQ5->(DBSETORDER(9))	// FQ5_FILIAL + FQ5_AS + FQ5_VIAGEM
	IF ! FQ5->(DBSEEK(XFILIAL('FQ5')+XAS,.T.))
		MSGALERT(STR0053+XAS+STR0054 , STR0026)  //"A AS ["###"] NÃO FOI ENCONTRADA, VERIFIQUE! "###"GPO - LOCT049.PRW"
		LRET := .F.
	ELSE
		IF XDTINI < FQ5->FQ5_DATINI .OR. XDTINI > FQ5->FQ5_DATFIM
			MSGALERT('A DATA INICIAL: '+DTOC(XDTINI)+' ESTÁ FORA DA AS: '+DTOC(FQ5->FQ5_DATINI)+' A '+DTOC(FQ5->FQ5_DATFIM) , STR0026) //"GPO - LOCT049.PRW"
			LRET := .F.
		ENDIF
		IF XDTFIM < FQ5->FQ5_DATINI .OR. XDTFIM > FQ5->FQ5_DATFIM
			MSGALERT('A DATA FINAL: '+DTOC(XDTFIM)+' ESTÁ FORA DA AS: '+DTOC(FQ5->FQ5_DATINI)+' A '+DTOC(FQ5->FQ5_DATFIM)   , STR0026) //"GPO - LOCT049.PRW"
			LRET := .F.
		ENDIF
	ENDIF
ENDIF

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION FFOLDEREQUI(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2)
// ======================================================================= \\

LOCAL ACAMPOSSIM := {}
LOCAL NSTYLE     := IIF(NOPC==2, 0, GD_INSERT + GD_UPDATE + GD_DELETE) 
LOCAL NJ         := 0 
LOCAL NI         := 0 
LOCAL CALIAS , CCHAVE , CCONDICAO , NINDICE , CFILTRO 

	CALIAS    := "FPO"
	CCHAVE    := XFILIAL(CALIAS)+CCODFROTA

	IF ST9->T9_TIPOSE == "A"		// ACESSÓRIOS ETG02 - MAICKCON

		CCONDICAO := 'FPO->FPO_FILIAL+FPO->FPO_CODBEM=="'+CCHAVE+'"'
		NINDICE   := 2

	    IF !EMPTY(DINIAUX) .AND. !EMPTY(DFIMAUX)
	       CFILTRO := 'FPO->FPO_DTINI >= DINIAUX .AND. FPO->FPO_DTFIM <= DFIMAUX '
	    ELSE
	       CFILTRO := '.T.'
	    ENDIF 

		AADD(ACAMPOSSIM,{"FPO_NRAS" 	,"V"})
		AADD(ACAMPOSSIM,{"FPO_STATUS"	,"" }) 
		AADD(ACAMPOSSIM,{"FPO_DTINI" 	,"" })
		AADD(ACAMPOSSIM,{"FPO_DTFIM" 	,"" })
		AADD(ACAMPOSSIM,{"FPO_CODCLI"  	,"" })
		AADD(ACAMPOSSIM,{"FPO_LOJA"   	,"" })
		AADD(ACAMPOSSIM,{"FPO_QTACES"	,"" }) 
		AADD(ACAMPOSSIM,{"FPO_LOCAL"	,"" })
		AADD(ACAMPOSSIM,{"FPO_PROJET"	,"V"})
		AADD(ACAMPOSSIM,{"FPO_OBRA"		,"V"})
		AADD(ACAMPOSSIM,{"FPO_VIAGEM"	,"V"})
		AADD(ACAMPOSSIM,{"FPO_FILNF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_NUMNF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_SERNF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_CLINF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_LOJNF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_DESCAC" 	,"V"})

	ELSE

		CCONDICAO := 'FPO->FPO_FILIAL+FPO->FPO_FROTA=="'+CCHAVE+'"'
		NINDICE   := 3	//1 - ALTERADO PARA MOSTRAR POR ORDEM DE DATA E AS (ANDRÉ 12/01/09)
	    IF !EMPTY(DINIAUX) .AND. !EMPTY(DFIMAUX)
			CFILTRO := '!EMPTY(FPO_CODBEM) .AND. FPO->FPO_DTINI >= DINIAUX .AND. FPO->FPO_DTFIM <= DFIMAUX '
	    ELSE
			CFILTRO := '!EMPTY(FPO_CODBEM)'
	    ENDIF

		AADD(ACAMPOSSIM,{"FPO_NRAS" 	,"V"})
		AADD(ACAMPOSSIM,{"FPO_CODBEM"  	,"" })
		AADD(ACAMPOSSIM,{"FPO_DESCAC" 	,"V"})
		AADD(ACAMPOSSIM,{"FPO_CODFAN" 	,"V"})	//T9_CODFA
		AADD(ACAMPOSSIM,{"FPO_STATUS"	,"" }) 
		AADD(ACAMPOSSIM,{"FPO_DTINI" 	,"" })
		AADD(ACAMPOSSIM,{"FPO_DTFIM" 	,"" })
		AADD(ACAMPOSSIM,{"FPO_CARRET"	,"" }) 
		AADD(ACAMPOSSIM,{"FPO_QTACES"	,"" }) 
		AADD(ACAMPOSSIM,{"FPO_PROJET"	,"V"})
		AADD(ACAMPOSSIM,{"FPO_OBRA"		,"V"})
		AADD(ACAMPOSSIM,{"FPO_VIAGEM"	,"V"})
		AADD(ACAMPOSSIM,{"FPO_UNIFIL" 	,"" })
		AADD(ACAMPOSSIM,{"FPO_COMPR" 	,"" })
		AADD(ACAMPOSSIM,{"FPO_LARGUR" 	,"" })
		AADD(ACAMPOSSIM,{"FPO_ALTURA" 	,"" })
		AADD(ACAMPOSSIM,{"FPO_PESO" 	,"" })
		AADD(ACAMPOSSIM,{"FPO_FILNF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_NUMNF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_SERNF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_CLINF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_LOJNF"	,"V"}) 
		AADD(ACAMPOSSIM,{"FPO_MAILF"	,"V"})   // DATA ENVIO DE E-MAIL PARA O FISCAL 
		AADD(ACAMPOSSIM,{"FPO_LOCAL"	,"" })
		AADD(ACAMPOSSIM,{"FPO_OS"	    ,"" })   // CAMPOS CRIADOS PARA TRARAR MANUTENCAO DA PROGRAMACAO PELO MANUTENCAO DE ATIVOS 
		AADD(ACAMPOSSIM,{"FPO_MOT_OS"	,"" })   // CAMPOS CRIADOS PARA TRARAR MANUTENCAO DA PROGRAMACAO PELO MANUTENCAO DE ATIVOS 
		AADD(ACAMPOSSIM,{"FPO_ZLGSC6"	,"V"})   // CAMPOS PARA VÍNCULO DA ZLG COM A SC6 
		AADD(ACAMPOSSIM,{"FPO_ZLGSD3"	,"V"})
		AADD(ACAMPOSSIM,{"FPO_DEVACE"	,"V"})

	ENDIF

	AHEADER:=FHEADER(ACAMPOSSIM)

	NPOS := ASCAN(AHEADER, {|X|, ALLTRIM(X[2]) == "FPO_STATUS"})	// STATUS PERMITIDOS P/ ACESSÓRIOS - CRISTIAM ROSSI EM 14/10/2011
	IF NPOS > 0
		IF ST9->T9_TIPOSE != "A"
			AHEADER[NPOS][6] := "PERTENCE('R')"
		ENDIF
	ENDIF

	ACOLS:=FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO,3)
	ACOLSCOM := ACOLS
	
	IF ST9->T9_TIPOSE == "A"
		ACOLSFULLAC := ACLONE(ACOLS)		// ACOLS COM TODOS OS ACESSÓRIOS - CRISTIAM ROSSI EM 01/06/2011
	ELSE
		FOR NI:=1 TO LEN(ACOLS)
			FOR NJ:=1 TO LEN(ODLGFRO:ACOLS)
				IF !ODLGFRO:ACOLS[NJ, LEN(ODLGFRO:AHEADER)+2] .AND. ;
				    ACOLS[NI, ASCAN(AHEADER,{|X| ALLTRIM(X[2])=="FPO_NRAS"})] == ODLGFRO:ACOLS[NJ, ASCAN(ODLGFRO:AHEADER,{|X| ALLTRIM(X[2])=="FPO_NRAS"})]
					AADD(ACOLSFULLAC, ACLONE(ACOLS[NI]))
				ENDIF
			NEXT NJ 
		NEXT NI 
	ENDIF
	//                            NTOP ,NLEFT,NBOTTOM,NRIGHT,NSTYLE ,CLINHAOK       ,CTUDOOK,CINICPOS,AALTER,NFREEZE,NMAX,CFIELDOK    ,CSUPERDEL,CDELOK         ,OWND                     ,AHEADER,ACOLS}
	ODLGEQU:=MSNEWGETDADOS():NEW(NLIN1,NCOL1,NLIN2  ,NCOL2 ,NSTYLE ,"LOCA05207()" ,       ,""      ,      ,       ,9999,"LOCA05203()",.F.      ,"LOCA05206()",OFOLDER:ADIALOGS[NFOLDER],AHEADER,ACOLS)
	ODLGEQU:OBROWSE:ALIGN:= CONTROL_ALIGN_ALLCLIENT
	ODLGEQU:OBROWSE:BCHANGE:={||LOCA05214(NFOLDER)}

RETURN 



// ======================================================================= \\
STATIC FUNCTION FFOLDERMO(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2)
// ======================================================================= \\

LOCAL ACAMPOSSIM := {}
LOCAL NSTYLE := IIF(NOPC==2, 0, GD_INSERT + GD_UPDATE + GD_DELETE)  // CORREÇÃO - CRISTIAM ROSSI EM 09/05/2011
LOCAL CALIAS,CCHAVE,CCONDICAO,NINDICE,CFILTRO

CALIAS    := "FPL"
CCHAVE    := XFILIAL(CALIAS)+CCODFROTA
CCONDICAO := 'FPL->FPL_FILIAL+FPL->FPL_FROTA=="'+CCHAVE+'"'
NINDICE   := 1  //FPL_FILIAL+FPL_FROTA+FPL_ITEM
IF !EMPTY(DINIAUX) .AND. !EMPTY(DFIMAUX)
	CFILTRO := 'FPL->FPL_FILIAL + FPL->FPL_FROTA == "' + CCHAVE + '" .AND. FPL->FPL_DTINI >= DINIAUX .AND. FPL->FPL_DTFIM <= DFIMAUX '
ELSE
	CFILTRO := CCONDICAO
ENDIF

AADD(ACAMPOSSIM,{"FPL_ITEM"     ,""})
AADD(ACAMPOSSIM,{"FPL_AS"   	,""})
AADD(ACAMPOSSIM,{"FPL_MATRIC"   ,""})
AADD(ACAMPOSSIM,{"FPL_FILMAT"   ,"V"})
AADD(ACAMPOSSIM,{"FPL_NOME"     ,""})
AADD(ACAMPOSSIM,{"FPL_FUNCAO"	,"V"}) 
AADD(ACAMPOSSIM,{"FPL_DTINI"    ,""})
AADD(ACAMPOSSIM,{"FPL_DTFIM"    ,""})
AADD(ACAMPOSSIM,{"FPL_PROJET"	,""})
AADD(ACAMPOSSIM,{"FPL_OBRA"		,""})
AADD(ACAMPOSSIM,{"FPL_VIAGEM"	,""})

AHEADER := FHEADER(ACAMPOSSIM)
ACOLS := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO,2)
ACOLSFULLMO  := ACLONE(ACOLS)	// ACOLS COM TODOS OS OPERADORES 
AACOLSMOANT  := ACLONE(ACOLS) 

//                               NTOP ,NLEFT,NBOTTOM,NRIGHT,NSTYLE,CLINHAOK      ,CTUDOOK,CINICPOS,AALTER,NFREEZE,NMAX,CFIELDOK,CSUPERDEL,CDELOK,OWND                     ,AHEADER,ACOLS}
AHEADERMO := ACLONE(AHEADER) 
ODLGMO    := MSNEWGETDADOS():NEW(NLIN1,NCOL1,NLIN2  ,NCOL2 ,NSTYLE,"LOCA05208()",       ,"+FPL_ITEM",      ,       ,9999,"LOCA05204",         ,.T.   ,OFOLDER:ADIALOGS[NFOLDER],AHEADER,ACOLS)
ODLGMO:OBROWSE:ALIGN   := CONTROL_ALIGN_ALLCLIENT
ODLGMO:OBROWSE:BCHANGE := {||LOCA05215(NFOLDER)}

RETURN 



// ======================================================================= \\
FUNCTION LOCA05204()		/// VALIDADOR DE CAMPOS - PROGRAMACAO DE MAO DE OBRA
// ======================================================================= \\

LOCAL LRET    := .T.
LOCAL CVARUSO := STRTRAN(READVAR(),"M->","")
LOCAL XVALOR  := &(READVAR())
LOCAL NI      := 0 

IF CVARUSO == "FPL_MATRIC"
	IF EMPTY(POSICIONE("SRA",1,XFILIAL("FPL")+XVALOR,"RA_NOME")) 
		MSGALERT(STR0055+XVALOR+STR0056 , STR0026)  //"A MATRÍCULA ["###"] NÃO FOI ENCONTRADA NO CADASTRO DE FUNCIONÁRIOS!"###"GPO - LOCT049.PRW"
		LRET := .F.
	ENDIF
	ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPL_FUNCAO"})] := POSICIONE("SRJ",1,SRA->RA_FILIAL+SRA->RA_CODFUNC,"RJ_DESC")
ENDIF

IF LRET .AND. CVARUSO $ "FPL_DTINI;FPL_DTFIM" .AND. EMPTY(XVALOR)
	MSGALERT(STR0057 , STR0026)  //"PREENCHA UMA DATA"###"GPO - LOCT049.PRW"
	LRET := .F.
ENDIF

IF LRET	.AND. !EMPTY(ACOLS[N,ASCAN(AHEADER, {|X|ALLTRIM(X[2])=="FPL_MATRIC"})])
	NPOSAS  := ASCAN(AHEADER, {|X|ALLTRIM(X[2])=="FPL_AS"})
	NPOSMAT := ASCAN(AHEADER, {|X|ALLTRIM(X[2])=="FPL_MATRIC"})
	NPOSDTI := ASCAN(AHEADER, {|X|ALLTRIM(X[2])=="FPL_DTINI"})
	NPOSDTF := ASCAN(AHEADER, {|X|ALLTRIM(X[2])=="FPL_DTFIM"})
	
	CAS     := IIF(CVARUSO=="FPL_AS"    , XVALOR, ACOLS[N,NPOSAS] )
	CMATR   := IIF(CVARUSO=="FPL_MATRIC", XVALOR, ACOLS[N,NPOSMAT])
	CFILMAT := ACOLS[N,ASCAN(AHEADER, {|X|ALLTRIM(X[2])=="FPL_FILMAT"})]		// SOLICITAÇÃO RODRIGO EM 27/06/2011 - CRISTIAM ROSSI
	DINI    := IIF(CVARUSO=="FPL_DTINI" , XVALOR, ACOLS[N,NPOSDTI])
	DFIM    := IIF(CVARUSO=="FPL_DTFIM" , XVALOR, ACOLS[N,NPOSDTF])

	FOR NI := 1 TO LEN(ACOLS)		// VERIFICAR SE O FUNCIONÁRIO ESTÁ ALOCADO NO PERÍODO NESTA AS
		IF !ACOLS[NI,LEN(AHEADER)+2] .AND. NI != N .AND. ACOLS[NI,NPOSMAT] == CMATR
			IF (ACOLS[NI,NPOSDTI] <= DINI .AND. ACOLS[NI,NPOSDTF] >= DINI) .OR. (ACOLS[NI,NPOSDTI] <= DFIM .AND. ACOLS[NI,NPOSDTF] >= DFIM) .OR. (ACOLS[NI,NPOSDTI] >= DINI .AND. ACOLS[NI,NPOSDTF] <= DFIM)
				MSGALERT(STR0058+CMATR+"-"+ALLTRIM(ACOLS[N,ASCAN(AHEADER, {|X|ALLTRIM(X[2])=="FPL_NOME"})])+STR0059 , STR0026) //"O FUNCIONÁRIO "###" ESTÁ ALOCADO NESTA AS"###"GPO - LOCT049.PRW"
				LRET := .F.
				EXIT
			ENDIF
		ENDIF
	NEXT
	
	IF LRET
		FOR NI := 1 TO LEN(ACOLSFULLMO)		// VERIFICAR SE O FUNCIONÁRIO ESTÁ ALOCADO NO PERÍODO NESTA FROTA
			IF ! ACOLSFULLMO[NI,LEN(AHEADER)+2]
				IF ACOLSFULLMO[NI,NPOSMAT] == CMATR .AND. ACOLSFULLMO[NI,NPOSAS] != CAS
					IF (ACOLSFULLMO[NI,NPOSDTI]  <= DINI .AND. ACOLSFULLMO[NI,NPOSDTF] >= DINI) .OR. ; 
						(ACOLSFULLMO[NI,NPOSDTI] <= DFIM .AND. ACOLSFULLMO[NI,NPOSDTF] >= DFIM) .OR. ; 
						(ACOLSFULLMO[NI,NPOSDTI] >= DINI .AND. ACOLSFULLMO[NI,NPOSDTF] <= DFIM)
					
						MSGALERT(STR0058+CMATR+"-"+ALLTRIM(ACOLS[N,ASCAN(AHEADER, {|X|ALLTRIM(X[2])=="FPL_NOME"})])+STR0060+ACOLSFULLMO[NI,NPOSAS] , STR0026)  //"O FUNCIONÁRIO "###" ESTÁ ALOCADO NA AS "###"GPO - LOCT049.PRW"
						LRET := .F.
						EXIT
					ENDIF
				ENDIF
			ENDIF
		NEXT
	ENDIF
	
	IF LRET		// VERIFICAR ALOCAÇÃO DO RECURSO NAS DEMAIS FROTAS
		CALIAS := ALIAS()
		
		IF SELECT("TRAB") > 0
			TRAB->(DBCLOSEAREA())
		ENDIF
		
		CQUERY := "SELECT TOP(1) FPL_AS, FPL_DTINI, FPL_DTFIM, FPL_PROJET, FPL_VIAGEM FROM " + RETSQLNAME("FPL")+" (NOLOCK) WHERE D_E_L_E_T_ = ' ' "
		CQUERY += "AND FPL_MATRIC = '" + CMATR + "' "
		CQUERY += "AND FPL_FILMAT = '" + CFILMAT + "' "
		CQUERY += "AND FPL_AS <> '" + CAS + "' "
		CQUERY += "AND FPL_DTINI > '' AND FPL_DTFIM > ''"
		CQUERY += "AND ((FPL_DTINI <= '" + DTOS(DINI) + "' AND FPL_DTFIM >= '" + DTOS(DINI) + "') OR "
		CQUERY +=      "(FPL_DTINI <= '" + DTOS(DFIM) + "' AND FPL_DTFIM >= '" + DTOS(DFIM) + "') OR "
		CQUERY +=      "(FPL_DTINI >= '" + DTOS(DINI) + "' AND FPL_DTFIM <= '" + DTOS(DFIM) + "')) "
		
		DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRAB", .F., .T.)
		TCSETFIELD("TRAB","FPL_DTINI",   "D",8,0)
		TCSETFIELD("TRAB","FPL_DTFIM",   "D",8,0)
		
		IF ! TRAB->(EOF())
			CNOMCLI1 := POSICIONE("FQ5",1,XFILIAL("FQ5")+TRAB->FPL_VIAGEM,"FQ5_NOMCLI")
			MSGSTOP(STR0058+CMATR+"-"+ALLTRIM(ACOLS[N,ASCAN(AHEADER, {|X|ALLTRIM(X[2])=="FPL_NOME"})])+STR0061+CHR(10)+STR0062+TRAB->FPL_AS+STR0063+ALLTRIM(TRAB->FPL_PROJET)+STR0064+ALLTRIM(CNOMCLI1)+STR0065+DTOC(TRAB->FPL_DTINI)+STR0031+DTOC(TRAB->FPL_DTFIM) , STR0026)  //"O FUNCIONÁRIO "###" ESTÁ ALOCADO NA"###"AS: "###" PROJETO: "###" CLIENTE: "###" DE "###" ATÉ "###"GPO - LOCT049.PRW"
			LRET := .F.
		ENDIF
		
		IF SELECT("TRAB") > 0
			TRAB->(DBCLOSEAREA())
		ENDIF
	
		DBSELECTAREA(CALIAS)
	ENDIF
ENDIF
	
RETURN LRET



// ======================================================================= \\
STATIC FUNCTION FSALVAR(ODLG)	
// ======================================================================= \\
// --> FUNCAO DE DISPARO PARA SALVAR DADOS.

IF NTPSE == "A" 
	FSALVAR000()
	ODLG:END()
ELSE
	IF VALIDPROG()
		FSALVAR000()
		ODLG:END()
	ELSE
		MSGSTOP(STR0066 , STR0026)  //"ATENÇÃO: NÃO FOI POSSÍVEL GRAVAR A PROGRAMAÇÃO PARA A FROTA SELECIONADA"###"GPO - LOCT049.PRW"
	ENDIF
ENDIF

RETURN 



// ======================================================================= \\
STATIC FUNCTION FSAIR(ODLG)
// ======================================================================= \\

ODLG:END()

RETURN



// ======================================================================= \\
FUNCTION LOCA05205(NINDO , NESTOU , ODLG , OFOLDER) 
// ======================================================================= \\
// --> RECRIA AS ARRAYS DE CONTROLE (ACOLS) PARA CADA MUDANÇA DE JANELA

LOCAL LRET := .T.
LOCAL NPOS := 0 
LOCAL NI   := 0 

	IF NESTOU == NFOLDERFRO .AND. EMPTY(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})])
		AVISO(STR0067,STR0068,{"OK"},,STR0069) //"OPERAÇÃO CANCELADA"###"PREENCHA O Nº DA AS ANTES DE MUDAR DE ABA"###"ATENÇÃO!"
		RETURN .F.
	ENDIF

	DO CASE
		CASE NINDO==NFOLDERFRO

		CASE NINDO==NFOLDEREQUI
			CNRAS    := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"   }	)]
			CPROJET  := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET" }	)]
			COBRA    := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"   }	)]
			CVIAGEM  := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM" }	)]
			DINI	 := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"  }	)]
 			DFIM	 := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"  }	)]
			
			IF VALTYPE(ODLGEQU) == "O"
				CNRAS    := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS" }	)]
				ACOLSTMP := {}
				FOR NI := 1 TO LEN(ACOLSFULLAC)
					IF ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})] == CNRAS
						AADD(ACOLSTMP, ACLONE(ACOLSFULLAC[NI]) )
					ENDIF
				NEXT
				IF EMPTY(ACOLSTMP)
					ACOLS0 := {}
					FOR NPOS := 1 TO LEN(ODLGEQU:AHEADER)
						FPO->(AADD(ACOLS0,CRIAVAR(ODLGEQU:AHEADER[NPOS,2])))
					NEXT NPOS 
					AADD(ACOLS0, 0  )  //NÚMERO DO REGISTRO
					AADD(ACOLS0,.F.  )  //DELETED

					AADD(ACOLSTMP,ACOLS0)
					ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })]
					ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" })] := CTOD("  /  /  ") 
					ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })] := CTOD("  /  /  ") 
					ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
					ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })]
					ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})]
					ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES"})] := 0//1
				ENDIF

				NPOSBEM := ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"  })	// ORDENADO POR
				NPOSDT  := ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"   })	// CODBEM + DTINI
				ASORT( ACOLSTMP,,,{|_COLA, _COLB| _COLA[NPOSBEM]+DTOS(_COLA[NPOSDT]) < _COLB[NPOSBEM]+DTOS(_COLB[NPOSDT]) } )

				ODLGEQU:ACOLS    := ACLONE(ACOLSTMP)
				ODLGEQU:NAT      := 1
				ODLGEQU:LNEWLINE := .F.
				ODLGEQU:REFRESH()
			ENDIF
			
		CASE NINDO==NFOLDERMO
			IF VALTYPE(ODLGFRO) == "O"
				IF ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)] < ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)] .AND.  !ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:AHEADER)+2]
					MSGALERT(STR0070 , STR0026)  //"A DATA FINAL E MENOR QUE A DATA INICIAL !"###"GPO - LOCT049.PRW"
					LRET := .F.
				ENDIF
				
				CNRAS := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS" }	)]
				
				IF VALTYPE(ODLGMO) == "O"
					ACOLSTMP := {}
					NCONT    := 1
					NPITEM   := ASCAN(ODLGMO:AHEADER, {|X| ALLTRIM(X[2])=="FPL_ITEM"})
					FOR NI := 1 TO LEN(ACOLSFULLMO)
						IF ACOLSFULLMO[NI][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"})] == CNRAS
							ACOLSFULLMO[NI,NPITEM] := STRZERO(NCONT++, ODLGMO:AHEADER[NPITEM,4])
							AADD(ACOLSTMP, ACLONE(ACOLSFULLMO[NI]) )
						ENDIF
					NEXT
					
					IF EMPTY(ACOLSTMP)
						ACOLS0:={}
						FOR NPOS:=1 TO LEN(ODLGMO:AHEADER)
							FPL->(AADD(ACOLS0,CRIAVAR(ODLGMO:AHEADER[NPOS,2])))
						NEXT
						AADD(ACOLS0, 0	 )   //NÚMERO DO REGISTRO
						AADD(ACOLS0,.F.  )  //DELETED
						
						AADD(ACOLSTMP,ACOLS0)
					
						ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_ITEM"  })] := STRZERO(1, ODLGMO:AHEADER[NPITEM,4])
						ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"    })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})] 
						ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI" })] := CTOD("  /  /  ") 
						ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM" })] := CTOD("  /  /  ") 
						ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
						ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"})]
						ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_VIAGEM"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})]
					ENDIF
					
					ODLGMO:ACOLS    := ACLONE(ACOLSTMP)
					ODLGMO:NAT      := 1
					ODLGMO:LNEWLINE := .F.
					ODLGMO:REFRESH()
				ENDIF
			ENDIF
	ENDCASE

	DO CASE
	CASE NESTOU==NFOLDERFRO
		IF VALTYPE(ODLGFRO)=="O"
			IF ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)] < ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)]  .AND. !ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:AHEADER)+2]
				MSGALERT(STR0070 , STR0026) //"A DATA FINAL E MENOR QUE A DATA INICIAL !"###"GPO - LOCT049.PRW"
				LRET:= .F.
			ENDIF
		ENDIF

	CASE NESTOU==NFOLDEREQUI
		ATUACACOLS()  // ATUALIZANDO A ACOLSFULLAC COM AS ALTERAÇÕES DA ACOLS TEMPORÁRIA - CRISTIAM ROSSI EM 01/06/2011

	CASE NESTOU==NFOLDERMO
		ATUMOACOLS()  // ATUALIZANDO A ACOLSFULLMO COM AS ALTERAÇÕES DA ACOLS TEMPORÁRIA - CRISTIAM ROSSI EM 09/06/2011
	ENDCASE

	OFOLDER:REFRESH()
	ODLG:REFRESH()

	SETFOCUS()

RETURN(LRET)



// ======================================================================= \\
STATIC FUNCTION ATUACACOLS()
// ======================================================================= \\
// --> PARA QUARDAR AS INFORMAÇÕES DE ACESSÓRIOS QUANDO O USUÁRIO MUDAR 
//     DE PASTA OU FOR GRAVAR OS DADOS

LOCAL NPOSCODBEM := ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})
LOCAL NPOSDTINI  := ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})
LOCAL NASG       := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]
LOCAL NI         := 0 

FOR NI := 1 TO LEN(ODLGEQU:ACOLS)
	IF ! EMPTY(ODLGEQU:ACOLS[NI, NPOSCODBEM])
		NPOS    := 0
		NRECORD := ODLGEQU:ACOLS[NI, LEN(ODLGEQU:AHEADER)+1]

		IF NRECORD == 0
			NPOS := ASCAN(ACOLSFULLAC, {|X| (X[NPOSCODBEM] == ODLGEQU:ACOLS[NI, NPOSCODBEM] .AND. X[ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})] == NASG .AND. X[NPOSDTINI] == ODLGEQU:ACOLS[NI, NPOSDTINI] )})
			IF NPOS == 0
				AADD(ACOLSFULLAC, ODLGEQU:ACOLS[NI])
			ENDIF
		ELSE
			NPOS := ASCAN(ACOLSFULLAC, {|X| X[LEN(ODLGEQU:AHEADER)+1] == NRECORD})
		ENDIF

		IF NPOS > 0
			ACOLSFULLAC[NPOS] := ACLONE(ODLGEQU:ACOLS[NI])
		ENDIF
	ENDIF
NEXT

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION ATUMOACOLS() 
// ======================================================================= \\
// --> PARA GUARDAR AS INFORMAÇÕES DE M.O. QUANDO O USUARIO MUDAR DE 
//     PASTA OU FOR GRAVAR OS DADOS

LOCAL NPAS   := ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"})
LOCAL NPITEM := ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_ITEM"})
LOCAL NI     := 0 

FOR NI := 1 TO LEN(ODLGMO:ACOLS)
	NPOS    := 0
	NRECORD := ODLGMO:ACOLS[NI, LEN(ODLGMO:AHEADER)+1]
	IF NRECORD == 0
		NPOS := ASCAN(ACOLSFULLMO, {|X| X[NPAS] == ODLGMO:ACOLS[NI,NPAS] .AND. X[NPITEM] == ODLGMO:ACOLS[NI,NPITEM]})
		IF NPOS == 0
			IF ! EMPTY( ODLGMO:ACOLS[NI][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_MATRIC"})] )
				AADD(ACOLSFULLMO, ODLGMO:ACOLS[NI])
			ENDIF
		ENDIF
	ELSE
		NPOS := ASCAN(ACOLSFULLMO, {|X| X[LEN(ODLGMO:AHEADER)+1] == NRECORD})
	ENDIF
	IF NPOS > 0
		ACOLSFULLMO[NPOS] := ACLONE(ODLGMO:ACOLS[NI])
	ENDIF
NEXT

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION FHEADER(ACAMPOSSIM)	// CRIA A ARRAY DE CABECALHOS
// ======================================================================= \\

LOCAL NPOS,ATABAUX,AHEADER:={}

	DBSELECTAREA("SX3")
	DBSETORDER(2)  //X3_CAMPO
	FOR NPOS:=1 TO LEN(ACAMPOSSIM)
		IF (LOCXCONV(1))->(DBSEEK(ALLTRIM(ACAMPOSSIM[NPOS,1])))
			ATABAUX:={}
			AADD(ATABAUX,TRIM(X3TITULO()))
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")        )   
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_PICTURE")      )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_TAMANHO")      )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_DECIMAL")      )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VALID")        )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_USADO")        )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_TIPO")         )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_F3")           )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CONTEXT")      )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CBOX")         )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_RELACAO")      )  
			AADD(ATABAUX,".T."           )
			//		AADD(ATABAUX,X3_VISUAL       )
			IF !EMPTY(ACAMPOSSIM[NPOS,2] )
				AADD(ATABAUX,ACAMPOSSIM[NPOS,2])
			ELSE
				AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VISUAL")   )  
			ENDIF
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VLDUSER")      )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_PICTVAR")      )  
			AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_OBRIGAT")      )  
			AADD(AHEADER,ATABAUX         )
		ENDIF
	NEXT
	DBSETORDER(1)  //X3_ARQUIVO+X3_ORDEM

RETURN(ACLONE(AHEADER))



// ======================================================================= \\
STATIC FUNCTION FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO,NONDE,COPCAO)
// ======================================================================= \\
// --> CARREGA AS ARRAYS ACOLS

LOCAL NPOS,ACOLS0,ACOLS:={}
LOCAL L_E_ACESSO := .F. 
DEFAULT NONDE := 1 
DEFAULT COPCAO = '0'

IF COPCAO == 'PR'						// --> PARA QUE TODA PROGRAMAÇÃO FOSSE VISTA EM QUALQUER FILIAL.
	// REMOVIDO POR FRANK E INSERIDO NO WHILE
	//CARQUIVO := CRIATRAB(,.F.)
	//INDREGUA(CALIAS,CARQUIVO,"FPO_FROTA",,CCONDICAO)

	//DBSELECTAREA(CALIAS)
	//NINDEX := RETINDEX(CALIAS)
	//#IFNDEF TOP
	//   DBSETINDEX(CARQUIVO+ORDBAGEXT())
	//#ENDIF
	//DBSETORDER(NINDEX+1)
ELSE
	(CALIAS)->(DBSETORDER(NINDICE)) 	// SETA O INDICE 1
	(CALIAS)->(DBSEEK(CCHAVE,.T.))
ENDIF

(CALIAS)->(DBGOTOP())
WHILE (CALIAS)->(!EOF() .AND. &CCONDICAO)
	IF !(CALIAS)->(&CFILTRO)
		(CALIAS)->(DBSKIP())
		LOOP
	ENDIF
	IF !(CALIAS)->(&CCONDICAO)
		(CALIAS)->(DBSKIP())
		LOOP
	ENDIF
	ACOLS0:={}
	FOR NPOS:=1 TO LEN(AHEADER)
		IF !AHEADER[NPOS,10]=="V"  //X3_CONTEXT
			(CALIAS)->(AADD(ACOLS0,FIELDGET(FIELDPOS(AHEADER[NPOS,2]))))
		ELSE
			(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
		ENDIF
		IF NONDE == 3 .AND. AHEADER[NPOS,2] == "FPO_CODBEM"
			CCOMOE := (CALIAS)->( FIELDGET( FIELDPOS( AHEADER[NPOS,2] ) ) )
			L_E_ACESSO := FVEONDE( CCOMOE )
		ENDIF
		IF NONDE == 3 .AND. AHEADER[NPOS,2] == "FPO_QTACES" .AND. L_E_ACESSO
			AHEADER[NPOS,14] := "A"
			L_E_ACESSO := .F.
		ENDIF
	NEXT
	AADD(ACOLS0,(CALIAS)->(RECNO())  )  //NÚMERO DO REGISTRO
	AADD(ACOLS0,.F.  )                   //DELETED
	AADD(ACOLS,ACOLS0)
	(CALIAS)->(DBSKIP())
ENDDO

IF EMPTY(ACOLS)
	ACOLS0:={}
	FOR NPOS:=1 TO LEN(AHEADER)
		(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
	NEXT
	AADD(ACOLS0,0	 )  //NÚMERO DO REGISTRO
	AADD(ACOLS0,.F.  )  //DELETED
	AADD(ACOLS,ACOLS0)
ENDIF  

RETURN(ACLONE(ACOLS))



// ======================================================================= \\
STATIC FUNCTION FVEONDE(COQUE)		
// ======================================================================= \\
// --> VERIFICA (QUANDO ACESSORIO) SE TIPO É ROTATIVO - SE SIM, RETORNA .T.

LOCAL AAREA := GETAREA()
LOCAL LRET := .F.

DBSELECTAREA("ST9")
DBSETORDER(1)
IF DBSEEK(XFILIAL("ST9")+COQUE)
	LRET := (ST9->T9_ACESSOR == "R")
ENDIF

RESTAREA(AAREA)

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION FGRAVATUDO(CALIAS,AHEADER,ACOLS)  	//GRAVA TODOS OS CAMPOS DO ACOLS
// ======================================================================= \\

LOCAL NPOS,CCAMPO
FOR NPOS:=1 TO LEN(AHEADER)
	CCAMPO := AHEADER[NPOS,2]
	(CALIAS)->(&CCAMPO) := ACOLS[NPOS]
NEXT

RETURN(.T.)



// ======================================================================= \\
STATIC FUNCTION FSALVAR000()
// ======================================================================= \\
// PROGRAMA DE GRAVACAO.

LOCAL NI   := 0 
LOCAL ND   := 0 
LOCAL NPOS := 0 

IF NTPSE <> "A" 
	ATUACACOLS()  // ATUALIZANDO A ACOLSFULLAC COM AS ALTERAÇÕES DA ACOLS TEMPORÁRIA - ACESSORIOS
	ATUMOACOLS()  // ATUALIZANDO A ACOLSFULLMO COM AS ALTERAÇÕES DA ACOLS TEMPORÁRIA - MAO DE OBRA
	
	// EXCLUSÃO DE PROGRAMAÇÃO M.O. NO TIME SHEET - CRISTIAM ROSSI EM 20/06/2011
	FPQ->(DBSETORDER(2))
	AEXCLU := {}	// REGISTROS PARA EXCLUSÃO	
	FOR NI := 1 TO LEN(ACOLSFULLMO)
		CMATRICULA := ACOLSFULLMO[NI][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_MATRIC"})]
		CFILMAT    := ACOLSFULLMO[NI][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_FILMAT"})]
		NRECNO     := ACOLSFULLMO[NI,LEN(ODLGMO:AHEADER)+1]
		IF ! EMPTY( CMATRICULA ) .AND. NRECNO > 0
			
			DINI := ACOLSFULLMO[NI][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI"})]
			DFIM := ACOLSFULLMO[NI][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM"})]
			
			FPL->(DBGOTO(NRECNO))
			
			IF ACOLSFULLMO[NI,LEN(ODLGMO:AHEADER)+2]	// SE ESTIVER DELETADA A LINHA
				IF ! EMPTY(FPL->FPL_DTINI) .AND. ! EMPTY(FPL->FPL_DTFIM)
					FOR ND := FPL->FPL_DTINI TO FPL->FPL_DTFIM	// SELEC. REGISTROS DESPROGRAMADOS DATA INICIAL ATÉ DATA FINAL
						AADD(AEXCLU, XFILIAL('FPQ')+CMATRICULA+CFILMAT+DTOS(ND))
					NEXT ND
				ENDIF
			ELSE
				IF ! EMPTY(DINI) .AND. ! EMPTY(DFIM)
					FOR ND := FPL->FPL_DTINI TO DINI-1	// SELEC. REGISTROS DESPROGRAMADOS DATA INICIAL
						AADD(AEXCLU, XFILIAL('FPQ')+CMATRICULA+CFILMAT+DTOS(ND))
					NEXT ND 
					
					FOR ND := DFIM+1 TO FPL->FPL_DTFIM	// SELEC. REGISTROS DESPROGRAMADOS DATA FINAL
						AADD(AEXCLU, XFILIAL('FPQ')+CMATRICULA+CFILMAT+DTOS(ND))
					NEXT ND
				ENDIF
			ENDIF
			
		ENDIF
	NEXT NI 
ENDIF

PROCESSA({||FSALVAR001()},STR0071) //"AGUARDE... ATUALIZANDO AS TABELAS"

//INCLUIR ROTINA DE E-MAIL AQUI

IF NTPSE <> "A" 
	// RECARREGO A ACOLSFULLAC PARA ATUALIZAR CONFORME DADOS DA TABELA.
	CALIAS   := "FPO"
	CCHAVE   := XFILIAL(CALIAS)+CCODFROTA
	CCONDICAO:= 'FPO->FPO_FILIAL+FPO->FPO_FROTA=="'+CCHAVE+'"'
	NINDICE  := 3	//1 - ALTERADO PARA MOSTRAR POR ORDEM DE DATA E AS (ANDRÉ 12/01/09)
	CFILTRO  := '!EMPTY(FPO_CODBEM)' 
	
	ACOLS := FCOLS(ODLGEQU:AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO,3)
	ACOLSFULLAC := ACLONE(ACOLS)		// ACOLS COM TODOS OS ACESSÓRIOS - CRISTIAM ROSSI EM 01/06/2011
	
	// RECARREGA A ABA DE ACESSÓRIOS
	CNRAS   := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS" }	)]
	ACOLSTMP := {}
	FOR NI := 1 TO LEN(ACOLSFULLAC)
		IF ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})] == CNRAS
			AADD(ACOLSTMP, ACLONE(ACOLSFULLAC[NI]) )
		ENDIF
	NEXT
	
	IF EMPTY(ACOLSTMP)
		ACOLS0:={}
		FOR NPOS:=1 TO LEN(ODLGEQU:AHEADER)
			FPO->(AADD(ACOLS0,CRIAVAR(ODLGEQU:AHEADER[NPOS,2])))
		NEXT NPOS 
		AADD(ACOLS0, 0	 )  //NÚMERO DO REGISTRO
		AADD(ACOLS0,.F.  )  //DELETED
		
		AADD(ACOLSTMP,ACOLS0)
		
		ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]
		ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" })] := CTOD("  /  /  ") 
		ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })] := CTOD("  /  /  ") 
		ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
		ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"})]
		ACOLSTMP[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})]
	ENDIF
	
	ODLGEQU:ACOLS := ACLONE(ACOLSTMP)
	ODLGEQU:NAT := 1
	ODLGEQU:REFRESH()

	
	// RECARREGO A ACOLSFULLMO PARA ATUALIZAR CONFORME DADOS DA TABELA.
	CALIAS    := "FPL"
	CCHAVE    := XFILIAL(CALIAS)+CCODFROTA
	CCONDICAO := 'FPL->FPL_FILIAL+FPL->FPL_FROTA=="'+CCHAVE+'"'
	NINDICE   := 1  //FPL_FILIAL+FPL_FROTA+FPL_ITEM
	CFILTRO   := CCONDICAO

 //	ACOLS       := FCOLS(ODLGMO:AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)
	ACOLS       := FCOLS(ODLGMO:AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO,2)
	ACOLSFULLMO := ACLONE(ACOLS)		// ACOLS COM TODOS OS OPERADORES - CRISTIAM ROSSI EM 09/06/2011
	
	// RECARREGA A ABA MÃO DE OBRA
	CNRAS    := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS" }	)]
	ACOLSTMP := {}
	FOR NI := 1 TO LEN(ACOLSFULLMO)
		IF ACOLSFULLMO[NI][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"})] == CNRAS
			AADD(ACOLSTMP, ACLONE(ACOLSFULLMO[NI]) )
		ENDIF
	NEXT NI 
	
	IF EMPTY(ACOLSTMP)
		ACOLS0 := {}
		FOR NPOS := 1 TO LEN(ODLGMO:AHEADER)
			FPL->(AADD(ACOLS0,CRIAVAR(ODLGMO:AHEADER[NPOS,2])))
		NEXT
		AADD(ACOLS0, 0	 )  //NÚMERO DO REGISTRO
		AADD(ACOLS0,.F.  )  //DELETED
		
		AADD(ACOLSTMP,ACOLS0)
		
		ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"    })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]
		ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI" })] := CTOD("  /  /  ")  // CJDECAMPOS
		ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM" })] := CTOD("  /  /  ")  // CJDECAMPOS
		ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
		ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"})]
		ACOLSTMP[1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_VIAGEM"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})]
	ENDIF
	
	ODLGMO:ACOLS := ACLONE(ACOLSTMP)
	ODLGMO:NAT   := 1
	ODLGMO:REFRESH()
ENDIF

RETURN



// ======================================================================= \\
STATIC FUNCTION FSALVAR001()
// ======================================================================= \\

PROCREGUA(LEN(OFOLDER:ADIALOGS))

INCPROC(STR0072) //"ATUALIZANDO... PROGRAMACAO DIARIA"

IF NFOLDERFRO>0
	FSALVARFRO("FPO",ODLGFRO:AHEADER,ODLGFRO:ACOLS)
ENDIF

IF NFOLDERMO>0
	FSALVARMO("FPL",ODLGMO:AHEADER,ACOLSFULLMO)
ENDIF

IF NFOLDEREQU>0
	IF NTPSE == "A" 
		FSALVAREQU("FPO",ODLGEQU:AHEADER,ODLGEQU:ACOLS)
	ELSE
		FSALVAREQU("FPO",ODLGEQU:AHEADER,ACOLSFULLAC)
	ENDIF
ENDIF

RETURN NIL 



// ======================================================================= \\
STATIC FUNCTION FSALVARFRO(CALIAS,AHEADER,AGRAVOLS)
// ======================================================================= \\

LOCAL AAREA := GETAREA()
LOCAL NPOS 
LOCAL CNAS 
LOCAL NPOSCOD
                     
CLOG := ""

DBSELECTAREA("FPO")
DBSETORDER(1)
FOR NPOS:=1 TO LEN(AGRAVOLS)
	NRECORD := AGRAVOLS[NPOS,LEN(AHEADER)+1]
	NPOSCOD := ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})
	
	IF NRECORD > 0
		DBGOTO(NRECORD)
	ENDIF
	
	IF ! AGRAVOLS[NPOS,LEN(AHEADER)+2] .AND. ! EMPTY(AGRAVOLS[NPOS,NPOSCOD])
		RECLOCK("FPO", NRECORD == 0)
		FGRAVATUDO("FPO",AHEADER,AGRAVOLS[NPOS])  //GRAVA TODOS OS CAMPOS DO ACOLS
		FPO->FPO_FILIAL	:= XFILIAL(CALIAS)
		FPO->FPO_FROTA	:= CCODFROTA
		MSUNLOCK()
		
		IF GDFIELDGET("FPO_STATUS"	,NPOS,.F.,AHEADER,AGRAVOLS) $ "2;4"
			CNAS := GDFIELDGET("FPO_NRAS"	,NPOS,.F.,AHEADER,AGRAVOLS)
			IF !EMPTY(CNAS)
				VALIMOB(CNAS,AHEADER,AGRAVOLS)
			ENDIF
		ENDIF
	ENDIF
	
	IF AGRAVOLS[NPOS,LEN(AHEADER)+2]
		IF NRECORD > 0
			RECLOCK("FPO",.F.)
			DBDELETE()
			MSUNLOCK()
		ENDIF
	ENDIF
NEXT                  

RESTAREA(AAREA)

RETURN 



// ======================================================================= \\
STATIC FUNCTION VALIMOB(CNAS,AHEADER,ACOLS) 
// ======================================================================= \\
// --> LIBERACAO DOS ITENS DOS PEDIDOS DE VENDA BASEADOS NAS PROGRAMAÇÕES

LOCAL AAREA := GETAREA()
LOCAL CPRO , CFIORI , CTPSER , CNUMPED 
LOCAL NI    := 0 
Local _MV_LOC173 := GETMV("MV_LOCX173")
Local _MV_LOC170 := GETMV("MV_LOCX170")
Local _MV_LOC171 := GETMV("MV_LOCX171")
Local _MV_LOC174 := GETMV("MV_LOCX174")
Local _MV_LOC175 := GETMV("MV_LOCX175")
Local _MV_LOC169 := GETMV("MV_LOCX169")

DBSELECTAREA("FQ5")
FQ5->(DBSETORDER(9))
FQ5->(DBSEEK(XFILIAL("FQ5")+CNAS))
CPRO    := FQ5->FQ5_SOT
CFIORI  := FQ5->FQ5_FILORI

DBSELECTAREA("FP0")
FP0->(DBSETORDER(1))
FP0->(DBSEEK(CFIORI+CPRO))
CTPSER  := FP0->FP0_TIPOSE
CNUMPED := FP0->FP0_NUMPED
CCODCLI := FP0->FP0_CLI
CLOJCLI := FP0->FP0_LOJA

IF CTPSER == "E"		// EQUIPAMENTOS
	DBSELECTAREA("FP4")
	FP4->(DBSETORDER(2))
	FP4->(DBSEEK(CFIORI + FQ5->FQ5_SOT + FQ5->FQ5_OBRA + FQ5->FQ5_AS + FQ5->FQ5_VIAGEM))
	
	IF FP4->FP4_TPMEDM == "O"
		FOR NI := 1 TO LEN(ACOLS)
			IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "2" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
				LOCA042( _MV_LOC173, CNUMPED, 1, CCODCLI, CLOJCLI, FP4->FP4_VRMOB, FP4->FP4_GUINDA, "N")
				EXIT
			ENDIF
		NEXT
	ELSEIF FP4->FP4_TPMEDM == "E"
		FOR NI := 1 TO LEN(ACOLS)
			IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "4" .AND. GDFIELDGET("FPO_FINAL" ,NI,.F.,AHEADER,ACOLS) == "1" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
				LOCA042( _MV_LOC173, CNUMPED, 1, CCODCLI, CLOJCLI, FP4->FP4_VRMOB, FP4->FP4_GUINDA, "N")
				EXIT
			ENDIF
		NEXT
	ENDIF

	IF FP4->FP4_TPMEDD == "C"
		FOR NI := 1 TO LEN(ACOLS)
			IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "2" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
				LOCA042( _MV_LOC170, CNUMPED, 1, CCODCLI, CLOJCLI, FP4->FP4_VRDES, FP4->FP4_GUINDA, "N")
				EXIT
			ENDIF
		NEXT
	ELSEIF FP4->FP4_TPMEDD == "O"
		FOR NI := 1 TO LEN(ACOLS)
			IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "3" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
				LOCA042( _MV_LOC170, CNUMPED, 1, CCODCLI, CLOJCLI, FP4->FP4_VRDES, FP4->FP4_GUINDA, "N")
				EXIT
			ENDIF
		NEXT
	ELSEIF FP4->FP4_TPMEDD == "E"
		FOR NI := 1 TO LEN(ACOLS)
			IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "4" .AND. GDFIELDGET("FPO_FINAL" ,NI,.F.,AHEADER,ACOLS) == "1" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
				LOCA042( _MV_LOC170, CNUMPED, 1, CCODCLI, CLOJCLI, FP4->FP4_VRDES, FP4->FP4_GUINDA, "N")
				EXIT
			ENDIF
		NEXT
	ENDIF	

ELSEIF CTPSER == "L"  // LOCAÇÃO
	DBSELECTAREA("SC9")
	SC9->(DBSETORDER(9))
	
	DBSELECTAREA("FPA")
	FPA->(DBSETORDER(2))
	FPA->(DBSEEK(CFIORI + FQ5->FQ5_SOT + FQ5->FQ5_OBRA + FQ5->FQ5_AS + FQ5->FQ5_VIAGEM))
	
	IF !SC9->(DBSEEK(CFIORI+CNUMPED+_MV_LOC173+FPA->FPA_GRUA))
		IF FPA->FPA_TPMOBI == "1"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "2" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC173, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_VRMOB, FPA->FPA_GRUA, "N" )
					IF FPA_TPDESM == "3"
						LOCA042( _MV_LOC170, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_VRDES, FPA->FPA_GRUA, "N" )
					ENDIF
					EXIT
				ENDIF
			NEXT
		ELSEIF FPA->FPA_TPMOBI == "3"
		ENDIF
	ENDIF

	IF !SC9->(DBSEEK(CFIORI+CNUMPED+_MV_LOC170+FPA->FPA_GRUA))
		IF FPA->FPA_TPDESM == "1"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "2" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC170, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_VRDES, FPA->FPA_GRUA, "N" )
					EXIT
				ENDIF
			NEXT
		ELSEIF FPA->FPA_TPDESM == "3"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "4" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC170, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_VRDES, FPA->FPA_GRUA, "N" )
					EXIT
				ENDIF
			NEXT
		ELSEIF FPA->FPA_TPDESM == "4"
		ENDIF
	ENDIF

	IF !SC9->(DBSEEK(CFIORI+CNUMPED+_MV_LOC174+FPA->FPA_GRUA))
		IF FPA->FPA_TPMED1 == "1"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "2" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC174, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_MONTAG, FPA->FPA_GRUA, "N" )
					IF FPA_TPMED2 == "3"
						LOCA042( _MV_LOC171, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_DESMON, FPA->FPA_GRUA, "N" )
					ENDIF
					EXIT
				ENDIF
			NEXT
		ELSEIF FPA->FPA_TPMED1 == "3"
		ENDIF
	ENDIF

	IF !SC9->(DBSEEK(CFIORI+CNUMPED+_MV_LOC171+FPA->FPA_GRUA))
		IF FPA->FPA_TPMED2 == "1"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "2" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC171, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_DESMON, FPA->FPA_GRUA, "N" )
					EXIT
				ENDIF
			NEXT NI 
		ELSEIF FPA->FPA_TPMED2 == "3"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "4" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC171, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_DESMON, FPA->FPA_GRUA, "N" )
					EXIT
				ENDIF
			NEXT NI 
		ELSEIF FPA->FPA_TPMED2 == "4"
		ENDIF
	ENDIF

	IF !SC9->(DBSEEK(CFIORI+CNUMPED+_MV_LOC175+FPA->FPA_GRUA))
		IF FPA->FPA_TPMED3 == "1"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "2" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC175, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_TELESC, FPA->FPA_GRUA, "N" )
					EXIT
				ENDIF
			NEXT NI 
		ELSEIF FPA->FPA_TPMED3 == "3"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "3" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC175, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_TELESC, FPA->FPA_GRUA, "N" )
					EXIT
				ENDIF
			NEXT NI 
		ENDIF
	ENDIF

	IF !SC9->(DBSEEK(CFIORI+CNUMPED+_MV_LOC169+FPA->FPA_GRUA))
		IF FPA->FPA_TPMED4 == "1"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "2" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC169, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_ANCORA, FPA->FPA_GRUA, "N" )
					EXIT
				ENDIF
			NEXT NI 
		ELSEIF FPA->FPA_TPMED4 == "3"
			FOR NI := 1 TO LEN(ACOLS)
				IF GDFIELDGET("FPO_STATUS" ,NI,.F.,AHEADER,ACOLS) == "3" .AND. !ACOLS[NI,LEN(ACOLS[NI])]
					LOCA042( _MV_LOC169, CNUMPED, 1, CCODCLI, CLOJCLI, FPA->FPA_ANCORA, FPA->FPA_GRUA, "N" )
					EXIT
				ENDIF
			NEXT NI 
		ENDIF
	ENDIF
ENDIF

RESTAREA(AAREA)

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION FSALVARMO(CALIAS,AMOHEADER,AMOCOLS)
// ======================================================================= \\

LOCAL AAREA     := GETAREA()
LOCAL NPOSATUAL := 1
LOCAL ADEL      := {}
LOCAL AINC      := {}
LOCAL AALT      := {}
LOCAL _NPOS2    := 1
LOCAL NI        := 1
LOCAL LALTDEL   := .F.
LOCAL ATIRO     := ACLONE(AEXCLU)
LOCAL CFOLMES   := ALLTRIM(STR((VAL(GETMV("MV_FOLMES")))))
LOCAL DTMP      := 0 
LOCAL NJ        := 0 
LOCAL NXDEL     := 0 

CFOLMES := CFOLMES+"01"
CFOLMES := STOD(CFOLMES) - 10 
CFOLMES := STOD(SUBSTR(DTOS(CFOLMES),1,6)+"20") 

DBSELECTAREA("FPL")
// ALOCACAO DE MO PARA EQUIPAMENTOS
FOR NPOSATUAL := 1 TO LEN(AMOCOLS)
	NPOSMAT := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_MATRIC"})
	NRECORD := AMOCOLS[NPOSATUAL,LEN(AMOHEADER)+1]
	IF EMPTY(AMOCOLS[NPOSATUAL,NPOSMAT])
		LOOP
	ENDIF
	IF NRECORD > 0
		DBGOTO(NRECORD)
	ENDIF
	IF AMOCOLS[NPOSATUAL, LEN(AMOHEADER)+2]		// ESTÁ DELETADO
		IF AMOCOLS[NPOSATUAL][13] = .T.
			IF NRECORD > 0
				AADD(ADEL, AMOCOLS[NPOSATUAL]) 
				RECLOCK("FPL", .F.)
				DBDELETE()
				MSUNLOCK()
			ENDIF
		ENDIF
	ELSE
		RECLOCK("FPL", NRECORD == 0)
		FGRAVATUDO("FPL",AMOHEADER,AMOCOLS[NPOSATUAL])  //GRAVA TODOS OS CAMPOS DO AMOCOLS
		FPL->FPL_FILIAL := XFILIAL("FPL")
		FPL->FPL_FROTA	:= CCODFROTA
		MSUNLOCK()			

		IF NRECORD == 0
			AADD(AINC, AMOCOLS[NPOSATUAL]) //INCLUIDA POR JESUS
		ELSE
			//VERIFICANDO SE ALGUM CAMPO FOI ALTERADO
			FOR _NPOS2 := 1 TO LEN(AMOHEADER)
				IF AMOCOLS[NPOSATUAL, _NPOS2] <> AACOLSMOANT[NPOSATUAL, _NPOS2]
					IF _NPOS2 # NPOSMAT // SE NAO FOR ALTERACAO DE MATRICULA
						AADD(AALT, AMOCOLS[NPOSATUAL])
						EXIT
					ELSE // SE ALTERACAO DE MATRICULA 
						AADD(AINC,AMOCOLS[NPOSATUAL]   )
						AADD(ADEL,AACOLSMOANT[NPOSATUAL])
						LALTDEL := .T.
						EXIT 
					ENDIF
				ENDIF
			NEXT
		ENDIF
	ENDIF
NEXT

IF LEN(ADEL) > 0 .OR. LEN(AINC) > 0 .OR. LEN(AALT) > 0
	ENVMAILMO(ADEL, AINC, AALT)
ENDIF

// --> TRATAMENTO PARA INCLUSÃO DE REGISTROS NA TABELA ZM0.
XNUMACOLS := LEN(AMOCOLS)
FOR NPOSATUAL := 1 TO XNUMACOLS
	NPOSMAT := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_MATRIC"})
	NRECORD := AMOCOLS[NPOSATUAL,LEN(AMOHEADER)+1]
	IF EMPTY(AMOCOLS[NPOSATUAL,NPOSMAT])
		LOOP
	ENDIF

	IF NRECORD > 0
		DBGOTO(NRECORD)
	ENDIF

	IF AMOCOLS[NPOSATUAL, LEN(AMOHEADER)+2]	// ESTÁ DELETADO
		DBSELECTAREA("FPU")
		DBSETORDER(2)
		A_1 := AMOCOLS[NPOSATUAL,02]
		A_2 := AMOCOLS[NPOSATUAL,10]
		A_3 := AMOCOLS[NPOSATUAL,09]
		A_4 := AMOCOLS[NPOSATUAL,03]
		IF ! DBSEEK(XFILIAL("FPU")+ A_1 +A_2 + A_3 + A_4)
			IF NRECORD > 0
				AADD(ADEL, AMOCOLS[NPOSATUAL]) //INCLUIDA POR JESUS-BIALE 11/07/2011
				RECLOCK("FPU", .F.)
				DBDELETE()
				FPU->(MSUNLOCK())
			ENDIF
		ENDIF
	ELSE
		DBSELECTAREA("FPU")
		DBSETORDER(2)
		A_1 := AMOCOLS[NPOSATUAL,02]
		A_2 := AMOCOLS[NPOSATUAL,10]
		A_3 := AMOCOLS[NPOSATUAL,09]
		A_4 := AMOCOLS[NPOSATUAL,03]
		IF ! DBSEEK(XFILIAL("FPU")+ A_1 +A_2 + A_3 + A_4)
			FPU->(RECLOCK("FPU",.T.))
			FPU->FPU_FILIAL := XFILIAL("FPU")
			FPU->FPU_AS     := AMOCOLS[NPOSATUAL, 02]
			FPU->FPU_OBRA   := AMOCOLS[NPOSATUAL, 10]
			FPU->FPU_PROJ   := AMOCOLS[NPOSATUAL, 09]
			FPU->FPU_MAT    := AMOCOLS[NPOSATUAL, 03]
			FPU->FPU_NOME   := AMOCOLS[NPOSATUAL, 05]
			FPU->FPU_DTLIM  := POSICIONE("FQ5",9,XFILIAL("FQ5")+AMOCOLS[NPOSATUAL, 02],"FQ5_DATINI")
			FPU->FPU_DESIST := "2"
			FPU->FPU_CONTRO := "01"
			FPU->(MSUNLOCK())
		ENDIF
	ENDIF
NEXT

FOR NJ := 1 TO LEN(ATIRO)			// LOCALIZA REGISTRO DO TIME SHEET E EXCLUI CONF. MATRIZ AEXCLU
	IF FPQ->(DBSEEK(ATIRO[NJ]))
		IF FPQ->FPQ_TIPINC == "A" 
			FPQ->(RECLOCK('FPQ',.F.))
			FPQ->(DBDELETE())
			FPQ->(MSUNLOCK())
		ENDIF 
	ENDIF 
NEXT NJ 

DBSELECTAREA("FQ5")
NORDERDTQ := DBSETORDER()
NPOSDTQ   := RECNO()
FPQ->(DBSETORDER(1))
FOR NI := 1 TO LEN(AMOCOLS)
	NPOSMATRI  := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_MATRIC"})		
	NPOSFILMAT := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_FILMAT"})
	CMATRICULA := AMOCOLS[NI][NPOSMATRI]
	CFILMAT    := AMOCOLS[NI][NPOSFILMAT]
	IF EMPTY(AMOCOLS[NI,NPOSMATRI])
		LOOP
	ENDIF
	
	// SE MATRICULA ESTA ZERADA OU EH DELECAO
	IF ! EMPTY( CMATRICULA ) .AND. ! AMOCOLS[NI,LEN(AMOHEADER)+2]
		NPOSCAS := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"})
		NPODINI := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI"})
		NPODFIM := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM"})
		CAS  	:= AMOCOLS[NI][NPOSCAS]
		DINI    := AMOCOLS[NI][NPODINI]
		DFIM    := AMOCOLS[NI][NPODFIM]

	    // POSICIONANDO NO DTQ
	    DBSELECTAREA("FQ5")
	    DBSETORDER(9)
	    DBSEEK( XFILIAL("FQ5")+CAS )
		IF ! EMPTY(DINI) .AND. ! EMPTY(DFIM)
			FOR DTMP := DINI TO DFIM
			 //	IF DTMP >= FQ5->FQ5_DATINI .AND. DTMP <= FQ5->FQ5_DATFIM
					DBSELECTAREA("FPQ")
					DBSETORDER(1)
					IF DBSEEK( XFILIAL("FPQ")+CMATRICULA+DTOS(DTMP)) //SE NAO LOCALIZAR O REGISTRO
						NPOSPROJ :=  ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"})
						NPOSOBRA :=  ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  })
						IF FPQ->FPQ_TIPINC != "M"
						//	CDATAFOL := SUBSTR(DTOS(DTMP),1,6) //RENATO RUY BERNARDO - 05/06/2012 - COMENTADO PARA USAR A DATA COMPLETA NA FOLHA
							CDATAFOL := DTMP
						//	CFOLMES  := STOD(ALLTRIM(STR((VAL(GETMV("MV_FOLMES")))))+"20")//INCLUSÃO DA DATA DE FECHAMENTO DA FOLHA
							IF CDATAFOL >= CFOLMES
								IF FPQ->(FPQ_AS+FPQ_PROJET+FPQ_OBRA+ALLTRIM(FPQ_STATUS)) == CAS+AMOCOLS[NI][NPOSPROJ]+ACOLSFULLMO[NI][NPOSOBRA]+"OBRA"
									FPQ->(RECLOCK('FPQ',.F.))
									FPQ->FPQ_FILIAL := CFILMAT 
									FPQ->FPQ_MAT    := CMATRICULA
									FPQ->FPQ_FILMAT := CFILMAT
									FPQ->FPQ_DATA   := DTMP
									FPQ->FPQ_AGENDA := '2'
									FPQ->FPQ_STATUS := 'OBRA'
									FPQ->FPQ_AS     := CAS
									FPQ->FPQ_PROJET := AMOCOLS[NI][NPOSPROJ]
									FPQ->FPQ_OBRA   := AMOCOLS[NI][NPOSOBRA]
									FPQ->FPQ_DESC   := POSICIONE('FQ5',9,XFILIAL('FQ5')+CAS,"FQ5_NOMCLI")
									FPQ->FPQ_TIPINC := "A"
									FPQ->(MSUNLOCK())
								ENDIF                 
							ENDIF
						ENDIF
					ELSE
						NPOSPROJ :=  ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"})
						NPOSOBRA :=  ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  })
					 //	CDATAFOL  := SUBSTR(DTOS(DTMP),1,6) 							// COMENTADO PARA USAR A DATA COMPLETA NA FOLHA
						CDATAFOL  := DTMP
					 //	CFOLMES := STOD(ALLTRIM(STR((VAL(GETMV("MV_FOLMES")))))+"20")	// INCLUSÃO DA DATA DE FECHAMENTO DA FOLHA
						IF CDATAFOL >= CFOLMES
							FPQ->(RECLOCK('FPQ',.T.))
							FPQ->FPQ_FILIAL := CFILMAT 
							FPQ->FPQ_MAT    := CMATRICULA
							FPQ->FPQ_FILMAT := CFILMAT
							FPQ->FPQ_DATA   := DTMP
							FPQ->FPQ_AGENDA := '2'
							FPQ->FPQ_STATUS := 'OBRA'
							FPQ->FPQ_AS     := CAS
							FPQ->FPQ_PROJET := AMOCOLS[NI][NPOSPROJ]
							FPQ->FPQ_OBRA   := AMOCOLS[NI][NPOSOBRA]
							FPQ->FPQ_DESC   := POSICIONE('FQ5',9,XFILIAL('FQ5')+CAS,"FQ5_NOMCLI")
							FPQ->FPQ_TIPINC := "A"
							FPQ->(MSUNLOCK())   
						ENDIF
					ENDIF
			 //	ENDIF
			NEXT
		ENDIF
	ELSEIF ! EMPTY(CMATRICULA) .AND. AMOCOLS[NI,LEN(AMOHEADER)+2]
		NPOSCAS := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"})
		NPODINI := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI"})
		NPODFIM := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM"})
		CFILMAT := AMOCOLS[NI][ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_FILMAT"})]
		CAS  	:= AMOCOLS[NI][NPOSCAS]
		DINI    := AMOCOLS[NI][NPODINI]
		DFIM    := AMOCOLS[NI][NPODFIM]
	    // POSICIONANDO NO DTQ
	    DBSELECTAREA("FQ5")
	    DBSETORDER(9)
	    DBSEEK( XFILIAL("FQ5")+CAS )

		IF ! EMPTY(DINI) .AND. ! EMPTY(DFIM)
			FOR DTMP := DINI TO DFIM
			//	IF DTMP >= FQ5->FQ5_DATINI .AND. DTMP <= FQ5->FQ5_DATFIM
					DBSELECTAREA("FPQ")
					DBSETORDER(2)
					CKEYZLO := XFILIAL("FPQ")+CMATRICULA+CFILMAT+DTOS(DTMP)
					IF ASCAN(ATIRO,{|X| X == CKEYZLO}) # 0
						LOOP
					ENDIF
					IF DBSEEK( CKEYZLO ) //SE NAO LOCALIZAR O REGISTRO
						NPOSPROJ :=  ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"})
						NPOSOBRA :=  ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  })
						IF FPQ->FPQ_TIPINC != "M"
							IF FPQ->(FPQ_AS+FPQ_PROJET+FPQ_OBRA+ALLTRIM(FPQ_STATUS)) == CAS+AMOCOLS[NI][NPOSPROJ]+ACOLSFULLMO[NI][NPOSOBRA]+"OBRA"
								FPQ->(RECLOCK('FPQ',.F.))
								DBDELETE()
								FPQ->(MSUNLOCK())
							ENDIF
						ENDIF
					ENDIF
			 //	ENDIF
			NEXT
		ENDIF
	ENDIF
NEXT

// --> VERIFICA MATRICULAS ALTERADAS DIRETAMENTE
IF LALTDEL .AND. LEN(ADEL) # 0
	FOR NXDEL := 1 TO LEN(ADEL)
		NPOSCAS := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"		})
		NPODINI := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI"	})
		NPODFIM := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM"	})
		NPOMATR := ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_MATRIC"	})
		CAS  	:= ADEL[NXDEL][NPOSCAS]
		DINI    := ADEL[NXDEL][NPODINI]
		DFIM    := ADEL[NXDEL][NPODFIM]
	    // POSICIONANDO NO DTQ
	    DBSELECTAREA("FQ5")
	    DBSETORDER(9)
	    DBSEEK( XFILIAL("FQ5")+CAS )
		IF ! EMPTY(DINI) .AND. ! EMPTY(DFIM)
			FOR DTMP := DINI TO DFIM
				IF DTMP >= FQ5->FQ5_DATINI .AND. DTMP <= FQ5->FQ5_DATFIM
					DBSELECTAREA("FPQ")
					DBSETORDER(1)
					IF DBSEEK( XFILIAL("FPQ")+ADEL[NXDEL][NPOMATR]+DTOS(DTMP)) //SE NAO LOCALIZAR O REGISTRO
						NPOSPROJ :=  ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"})
						NPOSOBRA :=  ASCAN(AMOHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  })
						IF FPQ->FPQ_TIPINC != "M"
							IF FPQ->(FPQ_AS+FPQ_PROJET+FPQ_OBRA+ALLTRIM(FPQ_STATUS)) == CAS+ADEL[NXDEL][NPOSPROJ]+ADEL[NXDEL][NPOSOBRA]+"OBRA"
								FPQ->(RECLOCK('FPQ',.F.))
								DBDELETE()
								FPQ->(MSUNLOCK())
							ENDIF
						ENDIF
					ENDIF
				ENDIF
			NEXT DTMP 
		ENDIF
	NEXT NXDEL 
ENDIF

DBSELECTAREA("FQ5")
DBSETORDER( NORDERDTQ )
DBGOTO( NPOSDTQ )

RESTAREA(AAREA)

RETURN 



// ======================================================================= \\
STATIC FUNCTION FSALVAREQU(CALIAS,AEQHEADER,AEQCOLS)
// ======================================================================= \\

LOCAL NPOS 
LOCAL NRECORD 	
LOCAL NPOSCBE   := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})
LOCAL NPOSDTINI := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" })
LOCAL NPOSDTFIM := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })
LOCAL NPOSNRAS  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })
LOCAL NPOSNOME  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_DESCAC"})
LOCAL NPOSPACK  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_CARRET"})
LOCAL NPOSPROJ  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})
LOCAL NPOSOBRA  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })
LOCAL NPOSQTAC  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES"})
LOCAL NPOSCOMP  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_COMPR"})
LOCAL NPOSLARG  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_LARGUR"})
LOCAL NPOSALTU  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_ALTURA"})
LOCAL NPOSPESO  := ASCAN(AEQHEADER,{|X|ALLTRIM(X[2])=="FPO_PESO"})
LOCAL CDIFPACK  := ""

	IF NTPSE == "A"		// É ACESSÓRIO SOMENTE
		NPOSCBE   := NPOSDTINI	// PREENCHO COM ALGO SÓ PARA SALVAR EM CASO DE ALTERAÇÃO
	ENDIF
    
	CLOG := ""
	DBSELECTAREA("FPO")
	DBSETORDER(1)
	FOR NPOS:=1 TO LEN(AEQCOLS)
		NRECORD 	:= AEQCOLS[NPOS,LEN(AEQHEADER)+1]
		IF !AEQCOLS[NPOS,LEN(AEQHEADER)+2] .AND. !EMPTY(AEQCOLS[NPOS][NPOSCBE]) // .AND. !EMPTY(ACOLS[NPOS][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})])	// NÃO GRAVO PROGRAMAÇÃO SEM DATA INFORMADA
			IF NRECORD > 0				// REGISTRO JÁ EXISTENTE
				FPO->(DBGOTO(NRECORD))	// POSICIONO NO REGISTRO CORRETO
				RECLOCK("FPO",.F.)
				
				IF NTPSE != "A" .AND. !EMPTY(FPO->FPO_CARRET) .AND. (FPO->FPO_CARRET != AEQCOLS[NPOS,NPOSPACK] .OR. FPO->FPO_CODBEM != AEQCOLS[NPOS,NPOSCBE] ;
																		.OR. FPO->FPO_DTINI != AEQCOLS[NPOS,NPOSDTINI] .OR. FPO->FPO_DTFIM != AEQCOLS[NPOS,NPOSDTFIM];
																		.OR. FPO->FPO_NRAS != AEQCOLS[NPOS,NPOSNRAS] .OR. FPO->FPO_DESCAC != AEQCOLS[NPOS,NPOSNOME];
																		.OR. FPO->FPO_PROJET != AEQCOLS[NPOS,NPOSPROJ] .OR. FPO->FPO_OBRA != AEQCOLS[NPOS,NPOSOBRA];
																		.OR. FPO->FPO_QTACES != AEQCOLS[NPOS,NPOSQTAC] .OR. FPO->FPO_COMPR != AEQCOLS[NPOS,NPOSCOMP];
																		.OR. FPO->FPO_LARGUR != AEQCOLS[NPOS,NPOSLARG] .OR. FPO->FPO_ALTURA != AEQCOLS[NPOS,NPOSALTU];
																		.OR. FPO->FPO_PESO != AEQCOLS[NPOS,NPOSPESO])

					POSICIONE("FP1",1,XFILIAL("FP1")+FP0->FP0_PROJET+FP4->FP4_OBRA,"FP1_MUNORI")
		   			POSICIONE("SA1",1,XFILIAL("SA1")+FPO->FPO_CODCLI+FPO->FPO_LOJA,"A1_NOME")
			
		   			CDIFPACK += "<TR><TD>"+ FP0->FP0_PROJET			+"</TD>"
					CDIFPACK += "<TD>"    + FP4->FP4_OBRA			+"</TD>"
					CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSNRAS]        +"</TD>"
					
					CDIFPACK += "<TD>"    + FPO->FPO_CODCLI      +"</TD>"
					CDIFPACK += "<TD>"    + FPO->FPO_LOJA        +"</TD>"
					CDIFPACK += "<TD>"    + SA1->A1_NOME         +"</TD>"

					CDIFPACK += "<TD>"    + ALLTRIM(FP1->FP1_MUNORI)+"/"+FP1->FP1_ESTORI +"</TD>"

					CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSCBE]         +"</TD>"
					CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSNOME]        +"</TD>"
					CDIFPACK += "<TD>"    + CCODFROTA                     +"</TD>"
					
					CDIFPACK += "<TD>"    + DTOC(AEQCOLS[NPOS,NPOSDTINI]) +"</TD>"
					CDIFPACK += "<TD>"    + DTOC(AEQCOLS[NPOS,NPOSDTFIM]) +"</TD>"
					CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSPACK]       +"</TD></TR>"
				ENDIF
				
			ELSE											// NOVO REGISTRO

		   		POSICIONE("FP1",1,XFILIAL("FP1")+FP0->FP0_PROJET+FP4->FP4_OBRA,"FP1_MUNORI")
		   		POSICIONE("SA1",1,XFILIAL("SA1")+FPO->FPO_CODCLI+FPO->FPO_LOJA,"A1_NOME")
			
		   		CDIFPACK += "<TR><TD>"+ FP0->FP0_PROJET			+"</TD>"
				CDIFPACK += "<TD>"    + FP4->FP4_OBRA			+"</TD>"
				CDIFPACK += "<TD>"    + AEQCOLS[NPOS,NPOSNRAS]        +"</TD>"
				
				CDIFPACK += "<TD>"    + FPO->FPO_CODCLI      +"</TD>"
				CDIFPACK += "<TD>"    + FPO->FPO_LOJA        +"</TD>"
				CDIFPACK += "<TD>"    + SA1->A1_NOME         +"</TD>"
                             
				CDIFPACK += "<TD>"    + CVALTOCHAR(ALLTRIM(FP1->FP1_MUNORI))+"/"+CVALTOCHAR(FP1->FP1_ESTORI) +"</TD>"
				CDIFPACK += "<TD>"    + CVALTOCHAR(CVALTOCHAR(AEQCOLS[NPOS,NPOSCBE]))	+"</TD>"
				//-->> A LINHA ABAIXO ESTAVA COMENTADA
				CDIFPACK += "<TD>"    + IIF(NPOSNOME == 0,"&NBSP;",CVALTOCHAR(AEQCOLS[NPOS,NPOSNOME]) )       		+"</TD>"
				CDIFPACK += "<TD>"    + CVALTOCHAR(CCODFROTA)                     		+"</TD>"
				
				CDIFPACK += "<TD>"    + CVALTOCHAR(DTOC(AEQCOLS[NPOS,NPOSDTINI])) +"</TD>"
				CDIFPACK += "<TD>"    + CVALTOCHAR(DTOC(AEQCOLS[NPOS,NPOSDTFIM])) +"</TD>"
				RECLOCK("FPO",.T.)
			ENDIF

			FGRAVATUDO("FPO",AEQHEADER,AEQCOLS[NPOS])  //GRAVA TODOS OS CAMPOS DO ACOLS
			FPO->FPO_FILIAL	:= XFILIAL("FPO")

			IF NTPSE != "A"
				FPO->FPO_FROTA	:= CCODFROTA
				FPO->FPO_CODCLI	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODCLI"	})]
				FPO->FPO_LOJA	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_LOJA"	})]
				FPO->FPO_NOMCLI	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NOMCLI"	})]
			ELSE
				FPO->FPO_CODBEM	:= CCODFROTA
			ENDIF
			MSUNLOCK()
			//MANDA E-MAIL DO REGISTRO CRIADO

		ENDIF

		IF AEQCOLS[NPOS,LEN(AEQHEADER)+2] .AND. NRECORD <> 0
			FPO->(DBGOTO(NRECORD))		// POSICIONO NO REGISTRO CORRETO
			POSICIONE("FP1",1,XFILIAL("FP1")+FP0->FP0_PROJET+FP4->FP4_OBRA,"FP1_MUNORI")
			POSICIONE("SA1",1,XFILIAL("SA1")+FPO->FPO_CODCLI+FPO->FPO_LOJA,"A1_NOME")
			
			CDIFPACK += "<TR><TD>"+ FP0->FP0_PROJET			+"</TD>"
			CDIFPACK += "<TD>"    + FP4->FP4_OBRA			+"</TD>"
			
			CDIFPACK += "<TD>"    + FPO->FPO_NRAS			+"</TD>"
			
			CDIFPACK += "<TD>"    + FPO->FPO_CODCLI			+"</TD>"
			CDIFPACK += "<TD>"    + FPO->FPO_LOJA			+"</TD>"
			CDIFPACK += "<TD>"    + FPO->FPO_NOMCLI			+"</TD>"

			CDIFPACK += "<TD>"    + ALLTRIM(FP1->FP1_MUNORI)+"/"+FP1->FP1_ESTORI +"</TD>"

			CDIFPACK += "<TD>"    + FPO->FPO_CODBEM			+"</TD>"
			CDIFPACK += "<TD>"    + IIF(EMPTY(FPO->FPO_DESCAC),SPACE(20),FPO->FPO_DESCAC)			+"</TD>"
			CDIFPACK += "<TD>"    + CCODFROTA				+"</TD>"
			
			CDIFPACK += "<TD>"    + CVALTOCHAR(FPO->FPO_DTINI)	+"</TD>"
			CDIFPACK += "<TD>"    + CVALTOCHAR(FPO->FPO_DTFIM)	+"</TD>"
			CDIFPACK += "<TD>"    + FPO->FPO_CARRET			+"</TD></TR>"
			RECLOCK("FPO",.F.)
				DBDELETE()
			MSUNLOCK()
		ENDIF
	NEXT
	
	IF !EMPTY(CDIFPACK)
		CCABEC := "<HTML><BODY>" //"<HTML><BODY>"
		CCABEC += "<B>"+STR0074+"</B><BR><BR>" //"<B>ALTERAÇÃO DE PACKLIST NA PROGRAMAÇÃO DE FROTA/ACESSÓRIOS</B><BR><BR>"
		CCABEC += "<TABLE BORDER='1'>" //"<TABLE BORDER='1'>"

		CCABEC +=     "<TR><TH>"+STR0076+"</TH>" //"<TR><TH>PROJETO</TH>"
		CCABEC +=     "<TH>"+STR0077+"</TH>" //"<TH>OBRA</TH>"
		CCABEC +=     "<TH>"+STR0078+"</TH>" //"<TH>AS</TH>"
		CCABEC +=     "<TH>"+STR0079+"</TH>" //"<TH>CÓD.CLIENTE</TH>"
		CCABEC +=     "<TH>"+STR0080+"</TH>" //"<TH>LOJA</TH>"
		CCABEC +=     "<TH>"+STR0081+"</TH>" //"<TH>NOME CLIENTE</TH>"
		CCABEC +=     "<TH>"+STR0082+"</TH>" //"<TH>MUNICÍPIO/UF</TH>"
		CCABEC +=     "<TH>"+STR0083+"</TH>" //"<TH>CÓD. ACESSÓRIO</TH>"
		CCABEC +=     "<TH>"+STR0084+"</TH>" //"<TH>DESCRIÇÃO</TH>"
		CCABEC +=     "<TH>"+STR0085+"</TH>" //"<TH>FROTA</TH>"
		CCABEC +=     "<TH>"+STR0086+"</TH>" //"<TH>DT. INÍCIO</TH>"
		CCABEC +=     "<TH>"+STR0087+"</TH>" //"<TH>DT. FIM</TH>"
		CCABEC +=     "<TH>"+STR0088+"</TH></TR>" //"<TH>NOVO PACK LIST</TH></TR>"
		
		CFROM 	:= ALLTRIM(USRRETNAME(RETCODUSR())) + " <" + ALLTRIM(USRRETMAIL(RETCODUSR())) + ">"
		CDEST   := CPARA := ALLTRIM( GETMV("MV_LOCX249",,"") )   // LISTA DE E-MAILS INFORMANDO A MUDANÇA DO PACK LIST
		CFROM   := ALLTRIM(GETMV("MV_RELFROM"))

		LOCA05909(CFROM, CDEST, CFROM, STR0089, CCABEC + CDIFPACK + "</TABLE></BODY></HTML>",NIL,"") //"MUDANÇA DE PACKLIST NA PROGRAMAÇÃO DIÁRIA DE FROTA/ACESSÓRIO"
	ENDIF

RETURN 



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ LINZLGDEL º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ PERMITE OU NÃO A EXCLUSÃO DE ITENS DO ACOLS, SE FOR        º±±
±±º          ³ REGISTRO DE ENTRADA/SAÍDA DE NF NÃO PERMITE                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA05206()

LOCAL LRET := .T.
LOCAL NY   := 0 

IF NTPSE == "A"							// ACESSÓRIOS
	IF !EMPTY(ACOLS[N, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})])	// SE REGISTRO ORIUNDO DE PROGRAMAÇÃO DE FROTA
		MSGALERT(STR0090 , STR0026) //"NÃO É POSSÍVEL EXCLUIR ESTE REGISTRO! STATUS AUTOMÁTICO - VINCULO COM PROGRAMAÇÃO DE FROTA"###"GPO - LOCT049.PRW"
		LRET := .F.
	ENDIF
ELSE
	IF OFOLDER:NOPTION == NFOLDEREQU	// VERIFICAÇÃO SE O ACESSÓRIO POSSUI NF DE SAÍDA OU ENTRADA - CRISTIAM ROSSI EM 20/10/2011
		IF ACOLS[N, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] == "R"	// ACESSÓRIO RESERVADO
			XZLWSC6 := ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_ZLGSC6"})]
			FOR NY := 1 TO LEN(ACOLS)
				IF !ACOLS[NY][LEN(AHEADER)+2] .AND. ;
					ACOLS[NY, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "E;S" .AND. ;	// SE EXISTIR NF NÃO PERMITE EXCLUIR!!!!
					ACOLS[NY, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_ZLGSC6"})] == XZLWSC6
					
					XMSG := STR0091 + ALLTRIM(ACOLS[NY, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]) //"O ACESSÓRIO: "
					XMSG += STR0092 + ALLTRIM(ACOLS[NY, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_NUMNF"})]) //" POSSUI MOVIMENTO DE  NF Nº: "
					XMSG += STR0093 + ALLTRIM(ACOLS[NY, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_SERNF"})]) + CRLF //" SÉRIE: "###"FPO_SERNF"
					XMSG += STR0095 //"PARA ALTERAR OU EXCLUIR ESTE REGISTRO, ESTORNE AS NF"
					AVISO(STR0096,XMSG,{"OK"},2,STR0097) //"EXISTE NF PARA ESTE ACESSÓRIO"###"EXCLUSÃO CANCELADA!"

					RETURN .F.
				ENDIF
			NEXT
		ENDIF
	ENDIF
ENDIF

IF ACOLS[N, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "E;S;A"	// REGISTRO DE SAÍDA OU ENTRADA DE NF OU ACERTO
	MSGALERT("NÃO É POSSÍVEL EXCLUIR ESTE REGISTRO! STATUS AUTOMÁTICO - VINCULO NF" , "GPO - LOCT049.PRW") 
	LRET := .F.
ENDIF

IF ACOLS[N, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "9C"		// MANUTENÇÃO PREVENTIVA OU CORRETIVA
	MSGALERT(STR0098 , STR0026) //"NÃO É POSSÍVEL EXCLUIR ESTE REGISTRO! STATUS AUTOMÁTICO - VINCULO MANUTENÇÕES"###"GPO - LOCT049.PRW"
	LRET := .F.
ENDIF

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA05207()
// ======================================================================= \\

LOCAL LRET := .T.
LOCAL OOBJ := ODLGFRO			// PROGRAMAÇÃO MENSAL

IF NTPSE <> 'A' 
	IF OFOLDER:NOPTION == 3		// ACESSÓRIOS
		OOBJ := ODLGEQU
		IF OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES"})] == 0
			MSGINFO(STR0050 , STR0026)  //"FAVOR INFORMAR QUANTIDADE MAIOR QUE ZERO PARA OS ACESSÓRIOS"###"GPO - LOCT049.PRW"
			RETURN .F.
		ENDIF
	ENDIF
	IF EMPTY(OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]) .OR. EMPTY(OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})])
		MSGALERT(STR0099 , STR0026) //"OBRIGATÓRIO O PREENCHIMENTO DA DATA INICIAL E DATA FINAL"###"GPO - LOCT049.PRW"
		LRET := .F.
	ENDIF
	IF LRET .AND. OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] < OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})] .AND. !OOBJ:ACOLS[OOBJ:NAT][LEN(OOBJ:AHEADER)+2]
		MSGALERT(STR0100 , STR0026) //"A DATA FINAL E MENOR QUE A DATA INICIAL!!!"###"GPO - LOCT049.PRW"
		LRET:= .F.
	ENDIF
	IF OFOLDER:NOPTION == 3 .AND. EMPTY( OOBJ:ACOLS[ OOBJ:NAT ][ ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CARRET"})] ) .AND.;
		!OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "A|E|S"
		MSGALERT(STR0101 , STR0026)  //"OBRIGATÓRIO O PREENCHIMENTO O NÚMERO DE SEQUÊNCIA CARRETA"###"GPO - LOCT049.PRW"
	 //	LRET := .F.
	ENDIF

	IF LRET	.AND. !OOBJ:ACOLS[OOBJ:NAT][LEN(OOBJ:AHEADER)+2]
		_CHORAFIM	:= OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})]
		_DDTINI	    := OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
		_CHORAINI	:= OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})]
		_DDTFIM	    := OOBJ:ACOLS[OOBJ:NAT][ASCAN(OOBJ:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
		
		IF _DDTINI == _DDTFIM
			IF (_CHORAINI > _CHORAFIM) .AND. (_CHORAFIM != "0000")
				LRET := .F.
				MSGALERT(STR0102 , STR0103)  //"O HORÁRIO NÃO PODE ULTRAPASSAR DE UM DIA PARA O OUTRO."###"GPO LOCT049.PRW "
			ENDIF 
			IF _CHORAINI == _CHORAFIM
				LRET := .F.
				MSGALERT(STR0104 , STR0103)  //"O HORÁRIO INÍCIO E TÉRMINO DEVEM SER DIFERENTES."###"GPO LOCT049.PRW "
			ENDIF 
		ENDIF
	ENDIF 

ELSE
	OOBJ := ODLGEQU
ENDIF

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA05208()
// ======================================================================= \\

LOCAL LRET := .T.

IF VALTYPE(ODLGMO)=="O"
	IF LRET .AND. EMPTY(ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_NOME"})])
		MSGALERT(STR0105 , STR0026)  //"PREENCHIMENTO OBRIGATORIO DA MATRÍCULA !"###"GPO - LOCT049.PRW"
		LRET := .F.
	ENDIF
	IF LRET .AND. (EMPTY(ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI"})]) .OR. EMPTY(ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM"})]))
		MSGALERT(STR0106 , STR0026) //"PREENCHIMENTO OBRIGATORIO DO CAMPO DATA INICIAL E DATA FINAL !"###"GPO - LOCT049.PRW"
		LRET := .F.
	ENDIF
	IF LRET .AND. ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM"})] < ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI"})]
		MSGALERT(STR0070 , STR0026)  //"A DATA FINAL E MENOR QUE A DATA INICIAL !"###"GPO - LOCT049.PRW"
		LRET := .F.
	ENDIF
ENDIF

RETURN LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±PROGRAMA   ³ PESQZLG   º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ PESQUISA DA CONSULTA ESPECIFICA                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
/*
STATIC FUNCTION PESQZLG(ADTQ , CCAMPO , OLISTBOX , OCBX) 

RETURN ASCAN(ADTQ, {|X| X[OCBX:NAT] == ALLTRIM(UPPER(CCAMPO)) }) 
*/



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±PROGRAMA   ³ CONSULTAS º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ CONSULTA ESPECIFICA PARA NUMERO DE AS                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA05209(PTIPO)

LOCAL CCHAVE
LOCAL CVIAGEM 
LOCAL NPOSLIST := 0
LOCAL OLISTBOX , OCONF , OCANC  
LOCAL ODLG
LOCAL OCBX, AORD := {STR0107,STR0108,STR0109} //"NR. AS"###"VIAGEM"###"CLIENTE"
LOCAL OBIGGET, CCAMPO := CRIAVAR("FPM_AS")+CRIAVAR("FPM_VIAGEM")
LOCAL ADTQ  	:= {}

PRIVATE NORD := 1, CORD:="1",LOK := .F.

STATIC CRETZLE

IF SELECT("TRB") > 0
	DBSELECTAREA("TRB")
	DBCLOSEAREA()
ENDIF
CQUERY := " SELECT  FQ5_AS , FQ5_SOT , FQ5_OBRA , FQ5_VIAGEM , FQ5_NOMCLI "
CQUERY += " FROM "+RETSQLNAME("FQ5")+" (NOLOCK) "
CQUERY += " WHERE   D_E_L_E_T_ = '' "
CQUERY += "   AND   FQ5_ENCERR != '2' "
CQUERY += "   AND   FQ5_TPAS IN ('T','G','U', 'P','M') "
CQUERY += "   AND   FQ5_STATUS != '9' "
CQUERY += "GROUP BY FQ5_AS,FQ5_SOT,FQ5_OBRA,FQ5_VIAGEM,FQ5_NOMCLI "
CQUERY += "ORDER BY FQ5_AS"
DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRB", .F., .T.)

DBSELECTAREA("TRB")
DBGOTOP()

IF TRB->(EOF())
	MSGSTOP(STR0110 , STR0026)  //"NÃO EXISTEM REGISTROS CADASTRADOS."###"GPO - LOCT049.PRW"
	TRB->(DBCLOSEAREA())
	RETURN .F.
ENDIF

TRB->(DBGOTOP())
WHILE ! TRB->(EOF())
	AADD(ADTQ, {	ALLTRIM(TRB->FQ5_AS    ) ,;
	ALLTRIM(TRB->FQ5_VIAGEM) ,;
	ALLTRIM(TRB->FQ5_SOT   ) ,;
	ALLTRIM(TRB->FQ5_OBRA  ) ,;
	ALLTRIM(TRB->FQ5_NOMCLI) } )
	TRB->(DBSKIP())
ENDDO 

TRB->(DBCLOSEAREA())

DEFINE MSDIALOG ODLG FROM 00,00 TO 400,490 PIXEL TITLE OEMTOANSI(STR0003) //"PESQUISAR"

	@05,05 COMBOBOX OCBX VAR CORD ITEMS AORD SIZE 206,36 PIXEL OF ODLG FONT ODLG:OFONT

	@ 22,005 MSGET OBIGGET VAR CCAMPO SIZE 206,10 PIXEL
	@ 05,215 BUTTON OCONF PROMPT STR0003 SIZE 30,10  FONT ODLG:OFONT   ACTION (OLISTBOX:NAT := PESQZLQ(ADTQ,ALLTRIM(CCAMPO),OLISTBOX,OCBX),; //"PESQUISAR"
						OLISTBOX:BLINE:={||{ADTQ[OLISTBOX:NAT][1],ADTQ[OLISTBOX:NAT][2],;
											ADTQ[OLISTBOX:NAT][3],ADTQ[OLISTBOX:NAT][4],;
											ADTQ[OLISTBOX:NAT][5]}},OCONF:SETFOCUS()) OF ODLG PIXEL
	OCBX:BCHANGE := {|| PESQZLQ(ADTQ,ALLTRIM(CCAMPO),OLISTBOX,OCBX) }

	@ 0,0 BITMAP OBMP RESNAME STR0111 OF ODLG SIZE 100,300 NOBORDER WHEN .F. PIXEL //"PROJETOAP"
	OLISTBOX := TWBROWSE():NEW( 40,05,204,140,,{STR0112,STR0108,STR0113,STR0114,STR0109},,ODLG,,,,,,,,,,,,.F.,,.T.,,.F.,,,) //"NUMERO AS"###"VIAGEM"###"PROJETO"###"OBRA"###"CLIENTE"
	OLISTBOX:SETARRAY(ADTQ)
	OLISTBOX:BLINE := { ||{ADTQ[OLISTBOX:NAT][1],ADTQ[OLISTBOX:NAT][2],;
	ADTQ[OLISTBOX:NAT][3],ADTQ[OLISTBOX:NAT][4],ADTQ[OLISTBOX:NAT][5] }}
	OLISTBOX:BLDBLCLICK := { ||EVAL(OCONF:BACTION), ODLG:END()}

	@ 185,05 	BUTTON OCONF PROMPT STR0115 		SIZE 45 ,10   FONT ODLG:OFONT ACTION (LOK:=.T.,CCHAVE:=ADTQ[OLISTBOX:NAT][1],CVIAGEM:=ADTQ[OLISTBOX:NAT][2],ODLG:END())  OF ODLG PIXEL //"CONFIRMA"
	@ 185,55 	BUTTON OCANC PROMPT STR0116  		SIZE 45 ,10   FONT ODLG:OFONT ACTION (LOK:=.F.,ODLG:END())  OF ODLG PIXEL //"CANCELA"

	IF NPOSLIST > 0
		OLISTBOX:NAT := NPOSLIST
		OLISTBOX:BLINE := { ||{ADTQ[OLISTBOX:NAT][1],ADTQ[OLISTBOX:NAT][2],;
		ADTQ[OLISTBOX:NAT][3],ADTQ[OLISTBOX:NAT][4],ADTQ[OLISTBOX:NAT][5] }}
		OCONF:SETFOCUS()
	ENDIF

ACTIVATE MSDIALOG ODLG CENTERED

// VARIAVEL UTILIZADA NO RETORNO SXB
IF PTIPO = "T"
	CRETZLE := CVIAGEM
ELSE
	CRETZLE := CCHAVE
ENDIF

RETURN LOK 



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±PROGRAMA   ³ RETZLE    º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ RETORNO DA CONSULTA ESPECIFICA                             º±±
±±º          ³ CHAMADA: CONSULTA PADRÃO - "ZLDDTQ", "ZLFDTQ" E "ZLGDTQ"   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA05210()

RETURN(CRETZLE)



// ======================================================================= \\
STATIC FUNCTION PESQZLQ(ADTQ,CCAMPO,OLISTBOX,OCBX)
// ======================================================================= \\

NORD := OCBX:NAT

IF OCBX:NAT == 3
	ASORT(ADTQ,,,{|X,Y| X[5] < Y[5] })
	OLISTBOX:AARRAY := ADTQ 
	NPOS := ASCAN(ADTQ, {|X| X[5] = ALLTRIM(UPPER(CCAMPO)) })
ELSE
	ASORT(ADTQ,,,{|X,Y| X[OCBX:NAT] < Y[OCBX:NAT] })
	OLISTBOX:AARRAY := ADTQ 
	NPOS := ASCAN(ADTQ, {|X| X[OCBX:NAT] == ALLTRIM(UPPER(CCAMPO)) })
ENDIF

OLISTBOX:REFRESH()

IF NPOS == 0 .AND. !EMPTY(CCAMPO)
	MSGALERT(STR0117 , STR0026)  //"NÃO ENCONTRADO !"###"GPO - LOCT049.PRW"
	NPOS := 1 
ENDIF

RETURN NPOS



/*
// ======================================================================= \\
STATIC FUNCTION PRORROGAR() 
// ======================================================================= \\
// --> CHAMADA: NÃO EXISTE CHAMADA - DESCONTINUADO 
LOCAL DDATEINI  := DDATABASE
LOCAL DDATEFIM  := DDATABASE
LOCAL LOK       := .F.
LOCAL OBMP , ODLG , OFONT 
LOCAL AAUX      := {}

DEFINE FONT OFONT NAME "ARIAL" SIZE 0,-11 BOLD    // NEGRITO

DEFINE MSDIALOG OTELA FROM 00,00 TO 150,200 PIXEL TITLE OEMTOANSI("PRORROGAÇÃO")
	@ 010,020 SAY OEMTOANSI("DIGITE A DATA FINAL ") OF OTELA PIXEL COLOR CLR_HRED FONT OFONT
	@ 022,035 MSGET ODATE VAR DDATEFIM    VALID !EMPTY(DDATEFIM)   SIZE 045,10  OF OTELA PIXEL
	
	@ 0,0 BITMAP OBMP RESNAME "PROJETOAP" OF OTELA SIZE 100,300 NOBORDER WHEN .F. PIXEL
	
	@ 040, 05 BUTTON OCONF PROMPT "CONFIRMA" SIZE 45 ,10 FONT OTELA:OFONT ACTION (LOK:=.T.,OTELA:END())  OF OTELA PIXEL
	@ 040, 55 BUTTON OCANC PROMPT "CANCELA"  SIZE 45 ,10 FONT OTELA:OFONT ACTION (LOK:=.F.,OTELA:END())  OF OTELA PIXEL
ACTIVATE MSDIALOG OTELA CENTERED

IF LOK
	
	NPOSHEAD	:= ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPM_STATUS" }) //POSICAO DO CAMPO NO VETOR
	NPOSACOL    := ASCAN(ODLGFRO:ACOLS  ,{|X|ALLTRIM(X[NPOSHEAD])=="8" })	  //LINHA COM CONTEUDO
	
	IF NPOSACOL == 0
		DDATEINI  := GDFIELDGET("FPM_DTPROG" , LEN(ODLGFRO:ACOLS) , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CAS       := GDFIELDGET("FPM_AS"     , LEN(ODLGFRO:ACOLS) , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CPROJETO  := GDFIELDGET("FPM_PROJET" , LEN(ODLGFRO:ACOLS) , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		COBRA     := GDFIELDGET("FPM_OBRA"   , LEN(ODLGFRO:ACOLS) , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CVIAGEM   := GDFIELDGET("FPM_VIAGEM" , LEN(ODLGFRO:ACOLS) , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CPROP     := GDFIELDGET("FPM_PROP"   , LEN(ODLGFRO:ACOLS) , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CLOCTRA   := GDFIELDGET("FPM_LOCTRA" , LEN(ODLGFRO:ACOLS) , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
	ELSE
		DDATEINI  := GDFIELDGET("FPM_DTPROG" , NPOSACOL , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CAS       := GDFIELDGET("FPM_AS"     , NPOSACOL , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CPROJETO  := GDFIELDGET("FPM_PROJET" , NPOSACOL , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		COBRA     := GDFIELDGET("FPM_OBRA"   , NPOSACOL , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CVIAGEM   := GDFIELDGET("FPM_VIAGEM" , NPOSACOL , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CPROP     := GDFIELDGET("FPM_PROP"   , NPOSACOL , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
		CLOCTRA   := GDFIELDGET("FPM_LOCTRA" , NPOSACOL , .F. , ODLGFRO:AHEADER , ODLGFRO:ACOLS)
	ENDIF
	
	IF  DDATEINI >= DDATEFIM
		MSGALERT("DATA INFORMADA É MENOR OU IGUAL QUE DATA JA PROGRAMADA !!!" , "GPO - LOCT049.PRW")
		RETURN .F.
	ENDIF
	
	IF NPOSACOL > 0
		FOR NY := 1 TO LEN(ODLGFRO:ACOLS)
			IF NY >= NPOSACOL
				ODLGFRO:ACOLS[NY][NPOSHEAD] := "4"
			ENDIF
		NEXT
	ENDIF
	
	DDATEINI := DDATEINI + 1
	FOR NZ := DDATEINI  TO DDATEFIM
		AADD(ODLGFRO:ACOLS , { DDATEINI,;
							   DIASEMANA(DDATEINI)         ,;
							   IIF(NZ == DDATEFIM,"8","4") ,;
							   CAS                         ,;
							   CPROJETO                    ,;
							   COBRA                       ,;
							   CVIAGEM                     ,;
							   CPROP                       ,;
							   CLOCTRA                     ,;
							   .F.                         })
		DDATEINI++
	NEXT
	
ENDIF

ODLGFRO:REFRESH()

RETURN LOK
*/



// ======================================================================= \\
FUNCTION LOCA05211()
// ======================================================================= \\
// --> CHAMADA: MENU - "CESTA DE ACESSÓRIOS" 

LOCAL AAREA	    	:= GETAREA()
LOCAL CQUERY    	:= ""
LOCAL LTODOS		:= .F.
LOCAL OOK       	:= LOADBITMAP( GETRESOURCES(), "LBOK"       )
LOCAL ONO   		:= LOADBITMAP( GETRESOURCES(), "LBNO"       )
LOCAL LCANCEL		:= .F.
LOCAL XSTRU			:= {}
LOCAL _NZ           := 0 
LOCAL NW            := 0 
LOCAL NX            := 0 
//LOCAL CARQ 
//LOCAL CDISP		:= "DISPONIVEL"
//LOCAL ODISPO    	:= LOADBITMAP( GETRESOURCES(), "BR_VERDE"   )
//LOCAL OINDIS		:= LOADBITMAP( GETRESOURCES(), "BR_VERMELHO")

PRIVATE LMARCADOS	:= .F.
PRIVATE AACESSO  	:= {}

IF ! OFOLDER:NOPTION == NFOLDEREQU
	MSGSTOP(STR0118 , STR0026)  //"ATENÇÃO: FAVOR SELECIONAR A ABA ACESSORIOS !!"###"GPO - LOCT049.PRW"
	RETURN 
ENDIF 

CQUERY := "SELECT XBEM, XBEMNOME, XBEMTIPO, EQUIPA, DISPONIVEL, VIAGEM, FROTA, PROJETO, DTINI, DTFIM  FROM ( "
CQUERY += "(SELECT T9_CODBEM AS XBEM, T9_NOME AS XBEMNOME, T9_ACESSOR AS XBEMTIPO, ' ' AS EQUIPA, "
CQUERY += "       ISNULL(FPO_CODBEM ,'.F.') AS DISPONIVEL, "
CQUERY += "       ISNULL(FPO_VIAGEM ,'.F.') AS VIAGEM,     "
CQUERY += "       ISNULL(FPO_FROTA  ,'.F.') AS FROTA,      "
CQUERY += "       ISNULL(FPO_PROJET ,'.F.') AS PROJETO,    "
CQUERY += "       ISNULL(FPO_DTINI  ,'.F.') AS DTINI,      "
CQUERY += "       ISNULL(FPO_DTFIM  ,'.F.') AS DTFIM       "
CQUERY += " FROM " + RETSQLNAME("ST9") + " ST9 LEFT JOIN " + RETSQLNAME("FPO") + " ZLG ON T9_CODBEM = FPO_CODBEM AND ZLG.D_E_L_E_T_ = '' AND FPO_FILIAL = '" + XFILIAL("FPO") + "' "
CQUERY += "WHERE ST9.T9_FILIAL  = '" + XFILIAL("ST9") + "' AND "
CQUERY += "      ST9.D_E_L_E_T_ = '' 				       AND "
CQUERY += "      ST9.T9_CODFA   = '" + CCODFANTA      + "' AND "
CQUERY += "      ST9.T9_SITMAN  <> 'I'                     AND "
CQUERY += "      ST9.T9_TIPOSE  = 'A') "
CQUERY += "UNION "
CQUERY += "(SELECT FPW_CODACE AS XBEM , T9_NOME AS XBEMNOME, FPW_ACESSO AS XBEMTIPO, FPW_EQUIP AS EQUIPA, "
CQUERY += "       '.F.' AS DISPONIVEL, "
CQUERY += "       '.F.' AS VIAGEM,     "
CQUERY += "       '.F.' AS FROTA,      "
CQUERY += "       '.F.' AS PROJETO,    "
CQUERY += "       '.F.' AS DTINI,      "
CQUERY += "       '.F.' AS DTFIM       "
CQUERY += "FROM " + RETSQLNAME("FPW") + " ZM2 "
CQUERY += "INNER JOIN "+ RETSQLNAME("ST9") + " ST9X ON ST9X.T9_CODBEM = ZM2.FPW_CODACE AND ST9X.T9_SITMAN <> 'I' AND ST9X.D_E_L_E_T_ = '' "
CQUERY += "WHERE ZM2.D_E_L_E_T_ = '' AND ZM2.FPW_EQUIP = '"+ CCODFROTA +"')) TMP ORDER BY XBEM, DTINI"
//CQUERY := CHANGEQUERY(CQUERY)
IF SELECT("QRY") > 0
	DBSELECTAREA("QRY")
	DBCLOSEAREA()
ENDIF
TCQUERY CQUERY NEW ALIAS "QRY"

NVLRGERADO := 0
NQTDTIT    := 0

AADD(XSTRU,{"XBEM"		,"C",  30, 0}) 
AADD(XSTRU,{"XBEMNOME" 	,"C",  40, 0}) 
AADD(XSTRU,{"XBEMTIPO"	,"C",  10, 0}) 
AADD(XSTRU,{"FROTA"    	,"C",  30, 0}) //"FROTA"
AADD(XSTRU,{"VIAGEM"   	,"C",  10, 0}) //"VIAGEM"
AADD(XSTRU,{"PROJETO"  	,"C",  30, 0}) //"PROJETO"
AADD(XSTRU,{"DTINI"    	,"D",   8, 0})
AADD(XSTRU,{"DTFIM"    	,"D",   8, 0})

//CARQ := CRIATRAB(XSTRU,.T.)

IF SELECT("TRB") > 0 
	TRB->(DBCLOSEAREA()) 
ENDIF

//DBUSEAREA(.T.,,CARQ,"TRB",.T.)

CT49  := "T49"+SUBSTR(TIME(),1,2)+SUBSTR(TIME(),4,2)+SUBSTR(TIME(),7,2)
//CTI61 := "TI61"+SUBSTR(TIME(),1,2)+SUBSTR(TIME(),4,2)+SUBSTR(TIME(),7,2)
IF TCCANOPEN(CT49)
   	TCDELFILE(CT49)
ENDIF
DBCREATE(CT49, XSTRU, "TOPCONN")
DBUSEAREA(.T., "TOPCONN", CT49, ("TRB"), .F., .F.)
//DBCREATEINDEX(CTI61, "RA_MAT+DTOC(FPQ_DATA)"         , {|| RA_MAT+DTOC(FPQ_DATA)         })
//TRB->( DBCLEARINDEX() ) //FORÇA O FECHAMENTO DOS INDICES ABERTOS
//DBSETINDEX(CTI61) //ACRESCENTA A ORDEM DE INDICE PARA A ÁREA ABERTA


DBSELECTAREA("QRY")
DBGOTOP()

// --> BLOCO ESCRITO PARA SELECIONAR ADIANTAMENTOS
IF QRY->(EOF())
	MSGSTOP(STR0120 , STR0026)  //"NÃO EXISTEM ACESSORIOS PARA ESSA FROTA."###"GPO - LOCT049.PRW"
	QRY->(DBCLOSEAREA())
	TRB->(DBCLOSEAREA())
	RESTAREA(AAREA)
	RETURN
ENDIF

QRY->(DBGOTOP())
WHILE !QRY->(EOF())
	
	IF QRY->FROTA <> ".F."
		_LRECL := .T.
	ELSE
		_LRECL := .F.
	ENDIF
	
	DBSELECTAREA("TRB")
	
	IF TRB->XBEM != ALLTRIM(QRY->XBEM)
		RECLOCK("TRB",.T.)
	ELSE
		RECLOCK("TRB",.F.)
	ENDIF
	TRB->XBEM		:= ALLTRIM(QRY->XBEM)
	TRB->XBEMNOME	:= ALLTRIM(QRY->XBEMNOME)
	TRB->XBEMTIPO   := IIF(QRY->XBEMTIPO == "P",STR0121,IIF(QRY->XBEMTIPO == "O",STR0122,IIF(QRY->XBEMTIPO == "R",STR0123,STR0124))) //"PADRAO"###"OPCIONAL"###"ROTATIVO"###"INDEFINIDO"

	IF _LRECL
		TRB->FROTA		:= POSICIONE("ST9",1,XFILIAL("ST9")+ALLTRIM(QRY->FROTA),"T9_CODFA")
		TRB->VIAGEM		:= ALLTRIM(QRY->VIAGEM)
		TRB->PROJETO	:= ALLTRIM(QRY->PROJETO)
		TRB->DTINI		:= STOD(QRY->DTINI)
		TRB->DTFIM		:= STOD(QRY->DTFIM)
	ELSE
		TRB->FROTA		:= ALLTRIM(STR0125) //"DISPONIVEL"
		TRB->VIAGEM		:= ALLTRIM("N/A")
		TRB->PROJETO	:= ALLTRIM("N/A")
		TRB->DTINI		:= CTOD("  /  /  ")
		TRB->DTFIM		:= CTOD("  /  /  ")
	ENDIF
	TRB->(MSUNLOCK())
	DBSELECTAREA("QRY")
	QRY->(DBSKIP())
ENDDO 

DBSELECTAREA("TRB")
DBGOTOP()
WHILE !TRB->(EOF())
	
	AADD(AACESSO,  {.F.,;
	TRB->XBEM,;
	TRB->XBEMNOME,;
	TRB->XBEMTIPO,;
	TRB->FROTA,;
	TRB->DTINI,;
	TRB->DTFIM,;
	TRB->VIAGEM,;
	TRB->PROJETO;
	})

	TRB->(DBSKIP())
ENDDO 

TRB->(DBCLOSEAREA())
TCSQLEXEC("DROP TABLE "+CT49)

DEFINE MSDIALOG ODLG2 FROM  000,000 TO 430,780 TITLE STR0126 PIXEL //"SELECIONE OS ACESSORIOS"
@ 012,000 LISTBOX OLBX FIELDS HEADER "", STR0127, STR0128,STR0129,STR0119,"DATA INI","DATA FIM",STR0108,STR0113  SIZE 380,170 OF ODLG2 PIXEL ON DBLCLICK (MARCARREGI(.F.)) //"CODIGO"###"DESCRICAO"###"TIPO"###"FROTA"###"VIAGEM"###"PROJETO"
OLBX:SETARRAY(AACESSO)
OLBX:BLINE := { || {IF( AACESSO[OLBX:NAT,01],OOK,ONO),; 	// CHECKBOX
						AACESSO[OLBX:NAT,02],; 				// CÓDIGO DA FROTA / EQUIPAMENTO /ACESSÓRIO
						AACESSO[OLBX:NAT,03],;				// DESCRIÇÃO DA FROTA / ACESSÓRIO
						AACESSO[OLBX:NAT,04],;				// TIPO DE ACESSÓRIO
						AACESSO[OLBX:NAT,05],;				// PARA QUAL FROTA ESSE ACESSAORIO ESTA ALOCADO (CODIGO FANTASIA)
						AACESSO[OLBX:NAT,06],;             // DATA INICIAL DA PROGRAMAÇÃO
						AACESSO[OLBX:NAT,07],;             // DATA FINAL DA PROGRAMAÇÃO
						AACESSO[OLBX:NAT,08],;             // EM QUAL VIAGEM
						AACESSO[OLBX:NAT,09];              // EM QUAL PROJETO
						}}
OLBX:NFREEZE  := 1
@ 000,000 BITMAP OBMP RESNAME STR0111 OF ODLG2 SIZE 420,780 NOBORDER WHEN .F. PIXEL //"PROJETOAP"

@ 195,0.5	CHECKBOX OCHK VAR LTODOS PROMPT STR0130 SIZE 70, 10 OF ODLG2 PIXEL ON CLICK MARCARREGI(.T.) //"MARCA/DESMARCA TODOS"
OCHK:OFONT := ODLG:OFONT
OBMP:REFRESH(.T.)

@ 200, 325 BUTTON "OK"       SIZE 28,13 PIXEL OF ODLG2 ACTION (ODLG2:END())
@ 200, 360 BUTTON STR0197 SIZE 28,13 PIXEL OF ODLG2 ACTION (LCANCEL:=.T., ODLG2:END()) // "CANCELAR"

ACTIVATE MSDIALOG ODLG2 CENTERED

//DELETE FILE (CARQ  + ".DTC")
RESTAREA(AAREA)

IF LCANCEL
	RETURN
ENDIF

ALINMAT := ACLONE( ODLGEQU:ACOLS[1] )

FOR NX:= 1 TO LEN(AACESSO)
	IF AACESSO[NX,01]

		FOR _NZ := 1 TO LEN( ODLGFRO:ACOLS )

			IF ! ATAIL( ODLGFRO:ACOLS[_NZ] ) .AND. ;
				GDFIELDGET("FPO_NRAS",_NZ,,ODLGFRO:AHEADER,ODLGFRO:ACOLS) == GDFIELDGET("FPO_NRAS",ODLGFRO:NAT,,ODLGFRO:AHEADER,ODLGFRO:ACOLS) .AND. ;
				ODLGFRO:ACOLS[_NZ][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS" })] == "R"

				LBRANCO := .F.
				FOR NW := 1 TO LEN(ODLGEQU:ACOLS)
					IF EMPTY(ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})])
						LBRANCO := .T.
						EXIT
					ENDIF
				NEXT

				IF ! LBRANCO
					AADD( ODLGEQU:ACOLS, ACLONE(ALINMAT) )
					NW := LEN( ODLGEQU:ACOLS )
				ENDIF

				ODLGEQU:ACOLS[NW][LEN(ODLGEQU:ACOLS[NW])-1] := 0							// ZERO A COLUNA DO RECNO()

				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})] // 1
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})] := AACESSO[NX, 02]  // 2
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DESCAC"})] := AACESSO[NX, 03]  // 3
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODFAN"})] := POSICIONE("ST9",1,XFILIAL("ST9")+TRIM(AACESSO[NX, 02]),"T9_CODFA") // 4
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] := "R"
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" })] := ODLGFRO:ACOLS[_NZ][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" })]  // 6
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })] := ODLGFRO:ACOLS[_NZ][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })] // 7
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})] // 8
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })] // 9
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})] := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})] // 10

				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CARRET"})] := "001"
				// DETALHES DO ACESSORIO
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_COMPR" })] := VAL('0'+POSICIONE("STB",1,XFILIAL("STB")+LEFT(AACESSO[NX, 02],16)+"000002","TB_DETALHE"))  // 11
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_LARGUR"})] := VAL('0'+POSICIONE("STB",1,XFILIAL("STB")+LEFT(AACESSO[NX, 02],16)+"000003","TB_DETALHE"))  // 12
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_ALTURA"})] := VAL('0'+POSICIONE("STB",1,XFILIAL("STB")+LEFT(AACESSO[NX, 02],16)+"000001","TB_DETALHE")) // 13
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PESO"  })] := VAL('0'+POSICIONE("STB",1,XFILIAL("STB")+LEFT(AACESSO[NX, 02],16)+"000004","TB_DETALHE")) // 14
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_MAILF" })] := CTOD("") // 15
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OS"    })] := SPACE(LEN(FPO->FPO_OS)) // 16
				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_MOT_OS"})] := SPACE(LEN(FPO->FPO_MOT_OS)) // 17

				ODLGEQU:ACOLS[NW][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES"})] := 1	//1  // 18

			ENDIF
		NEXT

	ENDIF
NEXT NX 

ODLGEQU:OBROWSE:REFRESH()

RETURN



// ======================================================================= \\
STATIC FUNCTION DESMOBI() 
// ======================================================================= \\
// --> CHAMADA: MENU - "DESMOBILIZA ACESSÓRIOS"   ( DESMOBILIZA OS ACESSÓRIOS ANTECIPANDO A DATA FINAL ) 

LOCAL DDATAATU  := ODLGEQU:ACOLS[1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
LOCAL DDATANEW  := CTOD("//")
LOCAL LOK       := .F.
LOCAL NPOS      := 0 
LOCAL OBMP , OFONT 

IF !OFOLDER:NOPTION==NFOLDEREQU
	MSGSTOP(STR0198 , STR0199) //"ATENÇÃO: FAVOR SELECIONAR A ABA ACESSORIOS !!"###"GPO - LOCT049.PRW"
	RETURN
ENDIF

DEFINE FONT OFONT NAME "ARIAL" SIZE 0,-11 BOLD    // NEGRITO

DEFINE MSDIALOG OTELA FROM 00,00 TO 150,200 PIXEL TITLE OEMTOANSI(STR0200)
	@ 007,020 SAY OEMTOANSI(STR0201) OF OTELA PIXEL 	// COLOR CLR_HRED FONT OFONT //"DATA ATUAL DA DESMOBILIZAÇÃO"
	@ 015,030 MSGET ODATE VAR DDATAATU    VALID !EMPTY(DDATAATU)   SIZE 045,10  OF OTELA PIXEL
	@ 032,020 SAY OEMTOANSI(STR0202)  OF OTELA PIXEL //"NOVA DATA DE DESMOBILIZAÇÃO"
	@ 040,030 MSGET ODATE VAR DDATANEW    VALID !EMPTY(DDATANEW) .AND. DDATANEW<DDATAATU  SIZE 045,10  OF OTELA PIXEL
	
	@ 0,0 BITMAP OBMP RESNAME STR0203 OF OTELA SIZE 100,300 NOBORDER WHEN .F. PIXEL // "PROJETO"
	
	@ 060,05 	BUTTON OCONF PROMPT STR0204 SIZE 45 ,10 FONT OTELA:OFONT ACTION (LOK:=.T.,OTELA:END())  OF OTELA PIXEL //"CONFIRMA"
	@ 060,55 	BUTTON OCANC PROMPT STR0205  SIZE 45 ,10 FONT OTELA:OFONT ACTION (LOK:=.F.,OTELA:END())  OF OTELA PIXEL //"CANCELA"
ACTIVATE MSDIALOG OTELA CENTERED

IF LOK
	FOR NPOS:=1 TO LEN(ACOLS)
		IF  ODLGEQU:ACOLS[NPOS][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] =  DDATAATU
			ODLGEQU:ACOLS[NPOS][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] := DDATANEW
		ENDIF
	NEXT NPOS
ENDIF

ODLGEQU:OBROWSE:REFRESH()

RETURN LOK 



// ======================================================================= \\
STATIC FUNCTION MARCARREGI(LTODOS)
// ======================================================================= \\

LOCAL NI := 0 

IF LTODOS
	LMARCADOS := ! LMARCADOS
	FOR NI := 1 TO LEN(AACESSO)
		IF FVALDT(AACESSO[NI,6],AACESSO[NI,7])
			AACESSO[NI,1] := LMARCADOS
		ENDIF
	NEXT
ELSE
	// VALIDA A DATA SE ACESSORIO AINDA ATIVO
	IF FVALDT(AACESSO[OLBX:NAT,6],AACESSO[OLBX:NAT,7]) // .AND. ! AACESSO[OLBX:NAT,1]
		AACESSO[OLBX:NAT,1] := ! AACESSO[OLBX:NAT,1]
	ENDIF
ENDIF

OLBX:REFRESH(.T.)
ODLG2:REFRESH(.T.)
OBMP:REFRESH(.T.)

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION FVALDT(DINI, DFIM)
// ======================================================================= \\
// --> RETORNA .T. SE O ACESSÓRIO ESTIVER DISPONÍVEL.

LOCAL LRET := .T.
LOCAL DFROINI := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
LOCAL DFROFIM := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]

IF (DINI <= DFROINI .AND. DFIM >= DFROINI) .OR. (DINI <= DFROFIM .AND. DFIM >= DFROFIM) .OR. (DINI >= DFROINI .AND. DFIM <= DFROFIM)
	LRET := .F.
ENDIF

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA05212(PCAMPO)
// ======================================================================= \\
// --> CHAMADA: GATILHO DO  CAMPO  FPL_AS 

LOCAL AAREAZA5  := GETAREA()
LOCAL DRET      := CTOD("//")
LOCAL CPROJETO	:= ""
LOCAL COBRA		:= ""
LOCAL CNRAS		:= ""
LOCAL CVIAGEM	:= ""

DO CASE
CASE OFOLDER:NOPTION == NFOLDERFRO
	CPROJETO:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
	COBRA	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })]
	CNRAS	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })]
	CVIAGEM	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})]
	
CASE OFOLDER:NOPTION == NFOLDERMO
	CPROJETO:= ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"})]
	COBRA	:= ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  })]
	CNRAS	:= ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"    })]
	CVIAGEM	:= ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_VIAGEM"})]
	
CASE OFOLDER:NOPTION == NFOLDEREQU
	CPROJETO:= ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
	COBRA	:= ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })]
	CNRAS	:= ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })]
	CVIAGEM	:= ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})]
ENDCASE

CTPAS:= POSICIONE("FQ5",9,XFILIAL("FQ5")+CNRAS+CVIAGEM,"FQ5_TPAS")

IF CTPAS == "E"
	DBSELECTAREA("FP4")
	FP4->(DBSETORDER(2))
	IF FP4->(DBSEEK(XFILIAL("FP4")+CPROJETO+COBRA+CNRAS+CVIAGEM))
		IF PCAMPO == "FPO_DTINI" .OR. PCAMPO == "FPL_DTINI"
			DRET	:= FP4->FP4_DTINI
		ELSEIF 	PCAMPO == "FPO_DTFIM" .OR. PCAMPO == "FPL_DTFIM"
			DRET	:= FP4->FP4_DTFIM
		ELSE
			DRET	:= CTOD("//")
		ENDIF
	ENDIF
ELSE
	DBSELECTAREA("FPA")
	FPA->(DBSETORDER(2))
	IF FPA->(DBSEEK(XFILIAL("FPA")+CPROJETO+COBRA+CNRAS+CVIAGEM))
		
		IF PCAMPO == "FPO_DTINI" .OR. PCAMPO == "FPL_DTINI"
			DRET:= FPA->FPA_DTINI
		ELSEIF 	PCAMPO == "FPO_DTFIM"	.OR. PCAMPO == "FPL_DTFIM"
			DRET:= FPA->FPA_DTFIM
		ELSE
			DRET:= CTOD("//")
		ENDIF
	ENDIF
ENDIF

RESTAREA(AAREAZA5)

RETURN DRET 



// ======================================================================= \\
FUNCTION LOCA05213(PCAMPO)
// ======================================================================= \\
// --> CHAMADA: GATILHO DOS CAMPOS FPM_NRAS E FPO_NRAS 

LOCAL AAREAZA0 := GETAREA()
LOCAL CCLIZA0  := ""
LOCAL CLOJZA0  := ""
LOCAL CRET     := ""
LOCAL CNRAS	   := ""
LOCAL CVIAGEM  := ""
LOCAL LVAZIO   := IIF(EMPTY(M->FPO_NRAS), .T. , .F. ) 

DO CASE
CASE OFOLDER:NOPTION == NFOLDERFRO
	CPROJETO:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
	COBRA	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })]
	CNRAS	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })]
	CVIAGEM	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})]
CASE OFOLDER:NOPTION == NFOLDERMO
	CPROJETO:= ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"})]
	COBRA	:= ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  })]
	CNRAS	:= ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"    })]
	CVIAGEM	:= ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_VIAGEM"})]
CASE OFOLDER:NOPTION == NFOLDEREQUI
	CPROJETO:= ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
	COBRA	:= ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  })]
	CNRAS	:= ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  })]
	CVIAGEM	:= ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"})]
ENDCASE

CCONTRA := POSICIONE("FQ5",9,XFILIAL("FQ5")+CNRAS+CVIAGEM,"FQ5_CONTRA")

DBSELECTAREA("AAM")
AAM->(DBSETORDER(1))
IF AAM->(DBSEEK(XFILIAL("AAM")+CCONTRA))
	CCLIZA0:=	AAM->AAM_CODCLI
	CLOJZA0:=	AAM->AAM_LOJA
ENDIF

FP1->(DBSELECTAREA("FP1"))
FP1->(DBSETORDER(1))
IF FP1->(DBSEEK(XFILIAL("FP1")+CPROJETO+COBRA))
	CCLIZA0 := ALLTRIM(FP1->FP1_CLIORI)
	CLOJZA0 := ALLTRIM(FP1->FP1_LOJORI)
	IF EMPTY(CCLIZA0) .AND. EMPTY(CLOJZA0)
	   FP0->(DBSELECTAREA("FP0"))
	   FP0->(DBSETORDER(1))
	   IF FP0->(DBSEEK(XFILIAL("FP0")+CPROJETO))
		  CCLIZA0 := ALLTRIM(FP0->FP0_CLI)
		  CLOJZA0 := ALLTRIM(FP0->FP0_LOJA)
	   ENDIF
	ENDIF
ENDIF

SA1->(DBSELECTAREA("SA1")) 
SA1->(DBSETORDER(1))
IF SA1->(DBSEEK(XFILIAL("SA1") + CCLIZA0 + CLOJZA0)) .AND. ! LVAZIO
	IF PCAMPO == "FPO_CODCLI"
		CRET	:= SA1->A1_COD
	ELSEIF 	PCAMPO == "FPO_LOJA"
		CRET	:= SA1->A1_LOJA
	ELSEIF PCAMPO == "FPO_NOMCLI"
		CRET	:= SA1->A1_NOME
	ELSE
		CRET	:= ""
	ENDIF
ELSE
	IF LVAZIO
		IF PCAMPO == "FPO_CODCLI"
			CRET := SPACE(LEN( SA1->A1_COD  ))
		ELSEIF PCAMPO == "FPO_LOJA"
			CRET := SPACE(LEN( SA1->A1_LOJA ))
		ENDIF	
	ENDIF
ENDIF

RESTAREA(AAREAZA0)

RETURN CRET



// ======================================================================= \\
FUNCTION LOCA05214(PGET)  //MUDA O BROWSE
// ======================================================================= \\

LOCAL LRET		:= .T.
LOCAL CNRAS		:= ""
LOCAL CPROJETO	:= ""
LOCAL COBRA		:= ""
LOCAL CVIAGEM	:= ""
LOCAL DDATAF    := CTOD("  /  /  ")
LOCAL DDATAI	:= CTOD("  /  /  ")
LOCAL NX        := 0 

IF NTPSE == "A" 
	PGET := 3
ENDIF
DO CASE
CASE PGET == 1		// ABA FROTA
	IF LEN(ODLGFRO:ACOLS[ODLGFRO:NAT]) == (LEN(ODLGFRO:AHEADER) + 1)									// INCLUÍNDO UMA NOVA LINHA SEM O RECNO()
		AADD(ODLGFRO:ACOLS[ODLGFRO:NAT],ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:ACOLS[ODLGFRO:NAT])])	// DUPLICO A ÚLTIMA LINHA
		ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:ACOLS[ODLGFRO:NAT])-1] := 0								// ZERO A COLUNA DO RECNO()
	ENDIF

	IF ODLGFRO:NAT > 1 .AND. !ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:AHEADER)+2]
		IF  EMPTY(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS" }	)]) .AND.;
			(EMPTY(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)]) .OR.;
			(      ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)] = DDATABASE .AND. ;
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)] = DDATABASE))
			
			CNRAS	 := ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"   })]
			CPROJETO := ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET" })]
			COBRA	 := ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"   })]
			CVIAGEM	 := ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM" })]
			DDATAF   := ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"  })]
			
			CCODCLI  := ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODCLI"})]
			CLOJACLI := ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_LOJA"  })]
			CNOMECLI := ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NOMCLI"})]
			
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})] := CTOD("  /  /  ") 
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] := CTOD("  /  /  ") 
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_MAILF"})] := CTOD("") 

			ODLGFRO:OBROWSE:REFRESH()
		ENDIF
	ENDIF
	
CASE PGET == 3
	IF LEN(ODLGEQU:ACOLS[ODLGEQU:NAT]) == (LEN(ODLGEQU:AHEADER) + 1)									// INCLUÍNDO UMA NOVA LINHA SEM O RECNO()
		AADD(ODLGEQU:ACOLS[ODLGEQU:NAT],ODLGEQU:ACOLS[ODLGEQU:NAT][LEN(ODLGEQU:ACOLS[ODLGEQU:NAT])])	// DUPLICO A ÚLTIMA LINHA
		ODLGEQU:ACOLS[ODLGEQU:NAT][LEN(ODLGEQU:ACOLS[ODLGEQU:NAT])-1] := 0							// ZERO A COLUNA DO RECNO()
		
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" })] := CTOD("  /  /  ")
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })] := CTOD("  /  /  ")
		ODLGEQU:OBROWSE:REFRESH()
	ENDIF

	IF NTPSE <> "A" 
		IF ODLGEQU:NAT > 1 .AND. !ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:AHEADER)+2]
			IF EMPTY(ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS" }	)])
				// VALORES DA LINHA ANTERIOR
				CNRAS    := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  }	)]
				CPROJETO := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"}	)]
				COBRA	 := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  }	)]
				CVIAGEM	 := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"}	)]
				DDATAI   := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)]
				DDATAF   := ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)]
				// VALORES DA LINHA NOVA.
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"  }	)]	:= CNRAS
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)]	:= CTOD("") //DDATAI //CTOD("  /  /  ")
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)]	:= CTOD("") //DDATAF //CTOD("  /  /  ")		// DDATAF
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"}	)]	:= CPROJETO
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"  }	)]	:= COBRA
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_VIAGEM"}	)]	:= CVIAGEM
				
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"}	)]	:= ""	//"R"	// R=RESERVADO <-- SOLICITAÇÃO DO LUI EM 04/10/2011 - CRISTIAM ROSSI
				
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_MAILF"}	)]	:= CTOD("")
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES" })]:= 0
				ODLGEQU:OBROWSE:REFRESH()
			ENDIF
		ENDIF
	ENDIF
ENDCASE

IF VALTYPE(ODLGFRO)=="O" .AND. !EMPTY(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)])
	IF ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:AHEADER)+2] .AND. ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] < ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)]
		MSGALERT(STR0100 , STR0026) //"A DATA FINAL E MENOR QUE A DATA INICIAL!!!"###"GPO - LOCT049.PRW"
		LRET:= .F.
	ENDIF
ENDIF

// VALIDAÇÃO DO LINHA OK
IF OFOLDER:NOPTION == 1 .OR. OFOLDER:NOPTION == 3		// FOLDER FROTA OU ACESSÓRIO
	OAUX := IF(OFOLDER:NOPTION==1, ODLGFRO, ODLGEQU)	// VERIFICAÇÃO SE AS DATAS ESTÃO EM CONFLITO
	IF NTPSE == 'A' 
		OAUX:= ODLGEQU
	ENDIF
	IF !OAUX:ACOLS[OAUX:NAT,LEN(OAUX:AHEADER)+2] .AND. !OAUX:ACOLS[OAUX:NAT,ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ESA"	// NÃO DELETADO E STATUS != ES (ENTRADA/SAÍDA NF)
	 //	CPROATU	:= OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
		CPROATU	:= OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])==IF(OFOLDER:NOPTION==1,"FPO_PROJET","FPO_CODBEM")})]
		DDTIATU	:= OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
		DDTFATU	:= OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
		// ADICIONADO O CONTROLE PELO HORARIO ALEM DAS DATAS INICIAL E FINAL
		CHRIATU	:= OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})]
		CHRFATU	:= OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})]

		FOR NX := 1 TO LEN(OAUX:ACOLS)
			// NAO VALIDAR QUANDO FOR FOR A LINHA CORRENTE, SE ESTIVER DELETADO E STATUS != ES (ENTRADA/SAÍDA NF)
			IF OAUX:NAT != NX .AND. !OAUX:ACOLS[NX,LEN(OAUX:AHEADER)+2] .AND. !OAUX:ACOLS[NX,ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ES"
			 //	CPRONX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})]
				CPRONX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])==IF(OFOLDER:NOPTION==1,"FPO_PROJET","FPO_CODBEM")})]
				DDTINX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
				DDTFNX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
				// ADICIONADO O CONTROLE PELO HORARIO ALEM DAS DATAS INICIAL E FINAL
				CHRINX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})]
				CHRFNX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})]

				XTPACESSOR := ""
				IF NTPSE == "A" 
					CBEM	   :=  CCODFROTA	// OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]
					XTPACESSOR := ST9->T9_ACESSOR
				ENDIF

				IF OFOLDER:NOPTION == 3 .AND. EMPTY(XTPACESSOR)
					CBEM := ODLGEQU:ACOLS[NX][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]
					XTPACESSOR := POSICIONE("ST9",1,XFILIAL("ST9")+CBEM,"T9_ACESSOR")
				ENDIF

			   	IF XTPACESSOR != "R"    .AND.;
			   	( ( DDTIATU >= DDTINX   .AND. DDTIATU <= DDTFNX    .AND. CHRIATU > CHRINX  .AND. CHRIATU < CHRFNX  ) .OR.; 
			   	  ( DDTFATU >= DDTINX   .AND. DDTFATU <= DDTFNX    .AND. CHRFATU > CHRINX  .AND. CHRFATU < CHRFNX  ) .OR.;
			   	  ( DDTIATU >= DDTINX   .AND. DDTFATU <= DDTFNX    .AND. CHRIATU == CHRINX .AND. CHRFATU == CHRFNX ) ) .AND.; 
			   	( ( CPROATU == CPRONX ) .AND. ( NX <> OAUX:NAT ) ) .AND. ;
				   	!OAUX:ACOLS[NX,ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ESA" 
				   	IF DDTIATU > DDTCORTE
						MSGSTOP(STR0131+ CHAR(10) + DTOC(DDTIATU)+' A '+DTOC(DDTFATU)+'  !  '+DTOC(DDTINX)+' A '+DTOC(DDTFNX) , STR0026)  //"ATENÇÃO: CONFLITO DE PERÍODOS. FAVOR CORRIJA AS DATAS: "###"GPO - LOCT049.PRW"
						OAUX:GOTO(NX)
						OAUX:OBROWSE:REFRESH()
						EXIT
					ENDIF
				ENDIF
			ENDIF
		NEXT NX 
	ENDIF
ENDIF

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA05215(PGET)  			// MUDA O BROWSE
// ======================================================================= \\

LOCAL LRET:=.T.
LOCAL CNRAS:= ""
LOCAL CPROJETO	:=""
LOCAL COBRA		:=""
LOCAL CVIAGEM	:=""
LOCAL DDATEZ 	:= CTOD("")

IF ODLGMO:NAT > 1
	IF EMPTY(ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"})])
		CNRAS 	:= ODLGMO:ACOLS[ODLGMO:NAT-1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"    })]
		CPROJETO:= ODLGMO:ACOLS[ODLGMO:NAT-1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"})]
		COBRA 	:= ODLGMO:ACOLS[ODLGMO:NAT-1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  })]
		CVIAGEM	:= ODLGMO:ACOLS[ODLGMO:NAT-1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_VIAGEM"})]
		DDATAE	:= ODLGMO:ACOLS[ODLGMO:NAT-1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI" })]
		DDATAS	:= ODLGMO:ACOLS[ODLGMO:NAT-1][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM" })]
		
		ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_AS"    }	)]	:= CNRAS
		IF !EMPTY(ODLGMO:ACOLS[ODLGMO:NAT][9])
			ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI" }	)]	:= DDATAE
			ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM"}	)]	:= DDATAS
		ELSE
			ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTINI" }	)]	:= DDATEZ
			ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_DTFIM"}	)]	:= DDATEZ
		ENDIF
		ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_PROJET"}	)]	:= CPROJETO
		ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_OBRA"  }	)]	:= COBRA
		ODLGMO:ACOLS[ODLGMO:NAT][ASCAN(ODLGMO:AHEADER,{|X|ALLTRIM(X[2])=="FPL_VIAGEM"}	)]	:= CVIAGEM
		ODLGMO:ACOLS[ODLGMO:NAT][LEN(ODLGMO:AHEADER)+1]	:= 0
		AADD(ODLGMO:ACOLS[ODLGMO:NAT],.F.)
		
		ODLGMO:OBROWSE:REFRESH()
	ENDIF
ENDIF

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA05216(PGET)  			// MUDA O BROWSE
// ======================================================================= \\

LOCAL DDTANT := CTOD("//")
LOCAL DRET	 := CRIAVAR("FPO_DTFIM")

IF PGET == 1
	IF ODLGFRO:NAT > 1
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)]:= CTOD("  /  /  ") 
		//--------------------------------------
		//-->NAO MUDAR A ORDEM DO IF<--
		//--------------------------------------
		IF 	    M->FPO_DTINI  == ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" })]
			DDTANT:= M->FPO_DTINI
		ELSEIF  M->FPO_DTINI  == ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })] .OR. ; 
			    M->FPO_DTINI  <= ODLGFRO:ACOLS[ODLGFRO:NAT-1][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })]
			DDTANT:= M->FPO_DTINI -1
		ENDIF
		ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)]:= CTOD("  /  /  ")//DDATAINI
		ODLGFRO:OBROWSE:REFRESH()
	ENDIF
ENDIF

IF PGET == 3
	IF ODLGEQU:NAT > 1
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)]:= CTOD("  /  /  ")//M->FPO_DTINI
		IF 	M->FPO_DTINI  == ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" }	)]
			DDTANT:= M->FPO_DTINI
		ELSEIF  M->FPO_DTINI  == ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)] .OR. ;
			M->FPO_DTINI  <= ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)]
			DDTANT:= M->FPO_DTINI -1
		ENDIF
		ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)]:=CTOD("//")
		ODLGEQU:ACOLS[ODLGEQU:NAT-1][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)]:=CTOD("  /  /  ")//DDTANT
		ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" }	)]:=CRIAVAR("FPO_DTFIM")
		ODLGEQU:OBROWSE:REFRESH()
	ENDIF
ENDIF

RETURN DRET



// ======================================================================= \\
FUNCTION LOCA05217(CCAMPO)			// VALIDAÇÕES
// ======================================================================= \\

LOCAL LRET   := .T.
LOCAL _NAREA := ALIAS()
LOCAL DI     := 0 

IF UPPER(CCAMPO)==UPPER("FPO_CARRET")
	M->FPO_CARRET := RIGHT("000" + ALLTRIM(M->FPO_CARRET), 3)		// PREENCHER COM ZEROS À ESQUERDA.
ENDIF

IF OFOLDER:NOPTION == 1 .AND. VALTYPE(ODLGFRO)=="O"					// PASTA FROTAS
	IF ODLGFRO:ACOLS[ODLGFRO:NAT, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ES"
		MSGALERT(STR0132 , STR0026)  //"ESTA LINHA NÃO PODE SER MODIFICADA! VINCULO COM NF !"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF
ENDIF

IF OFOLDER:NOPTION == 3 .AND. VALTYPE(ODLGEQU)=="O"					// PASTA ACESSÓRIOS
	IF ODLGEQU:ACOLS[ODLGEQU:NAT, ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ES"
		MSGALERT(STR0132 , STR0026)  //"ESTA LINHA NÃO PODE SER MODIFICADA! VINCULO COM NF !"###"GPO - LOCT049.PRW"
		RETURN .F.
	ENDIF
ENDIF


IF OFOLDER:NOPTION==NFOLDEREQU	// SÓ VALIDA O FOLDER ACESSORIOS
	IF UPPER(CCAMPO)==UPPER("FPO_DTINI")//EMPTY(ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })]) 
		ZLGDTINI := M->FPO_DTINI
		ZLGDTFIM := (ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })]) //

	ELSEIF UPPER(CCAMPO)==UPPER("FPO_DTFIM")
		ZLGDTINI := (ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" })])
		ZLGDTFIM := M->FPO_DTFIM	
	ENDIF

	DO CASE
	CASE UPPER(CCAMPO)==UPPER("FPO_CODBEM")
		IF VALTYPE(ODLGFRO)=="O"  //SE O OBJETO JÁ FOI CRIADO
			_CCODBEM := M->FPO_CODBEM
			_CFROTA	 := IIF(!EMPTY(_CCODBEM),POSICIONE("ST9",1,XFILIAL("ST9") + _CCODBEM,"T9_CODFA"),"")
			
			IF !EMPTY(_CFROTA)
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODFAN" })] := _CFROTA
			ENDIF
			
			IF !EMPTY(_CCODBEM)
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_COMPR" })] := VAL(REPLACE(("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000002","TB_DETALHE")),",","."))//VAL("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000002","TB_DETALHE"))
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_LARGUR"})] := VAL(REPLACE(("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000003","TB_DETALHE")),",","."))//VAL("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000003","TB_DETALHE"))
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_ALTURA"})] := VAL(REPLACE(("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000001","TB_DETALHE")),",","."))//VAL("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000001","TB_DETALHE"))
				ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PESO"  })] := VAL(REPLACE(("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000004","TB_DETALHE")),",","."))//VAL("0"+POSICIONE("STB",1,XFILIAL("STB") + _CCODBEM+"000004","TB_DETALHE"))
			ENDIF
			
			IF     CCODFROTA <> _CFROTA .AND. !EMPTY(_CFROTA) 
				MSGALERT(STR0033 + ALLTRIM(_CCODBEM) + STR0133 + ALLTRIM(_CFROTA) + "." , STR0026)  //"O ACESSÓRIO "###", PERTENCE A FROTA "###"GPO - LOCT049.PRW"
			ELSEIF CCODFROTA <> _CFROTA .AND.  EMPTY(_CFROTA) 
				MSGALERT(STR0033 + ALLTRIM(_CCODBEM) + STR0134 , STR0026)  //"O ACESSÓRIO "###", NÃO POSSUI NENHUMA FROTA VINCULADA."###"GPO - LOCT049.PRW"
			ENDIF
		ENDIF

	CASE UPPER(CCAMPO)==UPPER("FPO_DTINI") .AND. EMPTY(M->FPO_DTINI)
		MSGALERT(STR0135 , STR0026) //"O CAMPO DATA INICIAL NÃO PODE ESTAR VAZIO."###"GPO - LOCT049.PRW"
		LRET := .F.

	CASE UPPER(CCAMPO)==UPPER("FPO_DTFIM") .AND. EMPTY(M->FPO_DTFIM)
		MSGALERT(STR0136 , STR0026) //"O CAMPO DATA FINAL NÃO PODE ESTAR VAZIO."###"GPO - LOCT049.PRW"
		LRET := .F.

	CASE (UPPER(CCAMPO)==UPPER("FPO_DTINI") .OR. UPPER(CCAMPO)==UPPER("FPO_DTFIM")) .AND. !EMPTY(M->FPO_DTINI) .AND. !EMPTY(M->FPO_DTFIM) .AND. ZLGDTFIM  < ZLGDTINI 
		MSGALERT(STR0137 , STR0026)  //"O CAMPO DATA FINAL NÃO PODE SER MENOR QUE A DATA INICIAL."###"GPO - LOCT049.PRW"
		LRET := .F. 
	ENDCASE 

	IF ! LRET 
		RETURN LRET 
	ENDIF 

	// VERIFICAR SE O ACESSÓRIO ESTÁ EM USO POR OUTRA FROTA. 
	_DDATI := DTOS(ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})])
	_DDATF := DTOS(ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})])
	IF ALLTRIM(CCAMPO)=="FPO_DTINI"
		 _DDATI := DTOS(M->FPO_DTINI)
	ENDIF
	IF ALLTRIM(CCAMPO)=="FPO_DTFIM"
		 _DDATF := DTOS(M->FPO_DTFIM)
	ENDIF

	IF UPPER(CCAMPO)==UPPER("FPO_CODBEM")
		_CODBEM	:= M->FPO_CODBEM
	ELSEIF NTPSE == "A"
		_CODBEM	:= CCODFROTA
	ELSE
		_CODBEM	:= ODLGEQU:ACOLS[ODLGEQU:NAT][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]
	ENDIF

	IF SELECT("TEMP") > 0
		TEMP->(DBCLOSEAREA())
	ENDIF
	
	CQUERY := "SELECT FPO_FILIAL, FPO_FROTA, FPO_DTINI, FPO_DTFIM, FPO_NRAS, T9_ACESSOR "
	CQUERY += "FROM "  + RETSQLNAME("FPO") + " ZLG "
	CQUERY += "JOIN "  + RETSQLNAME("ST9") + " ST9 ON FPO_CODBEM = T9_CODBEM AND ST9.D_E_L_E_T_ = '' "
	CQUERY += "WHERE ZLG.D_E_L_E_T_ = ' ' AND " + ALLTRIM(STR(ODLGEQU:ACOLS[ODLGEQU:NAT][LEN(AHEADER)+1])) + " <> ZLG.R_E_C_N_O_ "
	CQUERY += "AND FPO_FROTA <> '"+ CCODFROTA +"' "
	CQUERY += "AND FPO_CODBEM = '" + _CODBEM + "' AND FPO_STATUS NOT IN ('E','S','A') AND "		// MESMO ACESSÓRIO PORÉM COM STATUS DIFERENTE DE ENTRADA/SAÍDA NF
	CQUERY +=            "((FPO_DTINI <= '" + _DDATI + "' AND FPO_DTINI <= '" + _DDATF + "' AND FPO_DTFIM >= '" + _DDATI + "' AND FPO_DTFIM >= '" + _DDATF + "') OR "	// PERÍODO TOTALMENTE DENTRO DO LANÇAMENTO
	CQUERY +=            " (FPO_DTINI >= '" + _DDATI + "' AND FPO_DTINI <= '" + _DDATF + "' AND FPO_DTFIM >= '" + _DDATI + "' AND FPO_DTFIM <= '" + _DDATF + "') OR "	// PERÍODO TOTALMENTE FORA DO LANÇAMENTO
	CQUERY +=            " (FPO_DTINI <= '" + _DDATI + "' AND FPO_DTINI <= '" + _DDATF + "' AND FPO_DTFIM >= '" + _DDATI + "' AND FPO_DTFIM <= '" + _DDATF + "') OR "	// LANÇAMENTO TERMINA NO PERÍODO
	CQUERY +=            " (FPO_DTINI >= '" + _DDATI + "' AND FPO_DTINI <= '" + _DDATF + "' AND FPO_DTFIM >= '" + _DDATI + "' AND FPO_DTFIM >= '" + _DDATF + "')) "		// LANÇAMENTO INICIA NO PERÍODO
	CQUERY := CHANGEQUERY(CQUERY)
	TCQUERY CQUERY NEW ALIAS "TEMP"
	
	IF TEMP->(!EOF()) .AND. TEMP->T9_ACESSOR != 'R'

		IF EMPTY(TEMP->FPO_FROTA)
			XMSG := STR0033 + ALLTRIM(_CODBEM) + STR0138 //"O ACESSÓRIO "###", ENCONTRA-SE DISPONÍVEL NO PERÍODO DE "
			XMSG += SUBSTR(TEMP->FPO_DTINI,7,2) + "/" + SUBSTR(TEMP->FPO_DTINI,5,2) + "/" + SUBSTR(TEMP->FPO_DTINI,1,4)	+ " A "
			XMSG += SUBSTR(TEMP->FPO_DTFIM,7,2) + "/" + SUBSTR(TEMP->FPO_DTFIM,5,2) + "/" + SUBSTR(TEMP->FPO_DTFIM,1,4)	+ STR0139 //", CONSULTE A PROGRAMAÇÃO DO MESMO!"
		ELSE
			XMSG := STR0033 + ALLTRIM(_CODBEM) + STR0140 + ALLTRIM(TEMP->FPO_FROTA) //"O ACESSÓRIO "###", ENCONTRA-SE INFORMADO NA FROTA "
			XMSG += STR0141 + ALLTRIM(TEMP->FPO_NRAS) + STR0142 //" - AS "###", NO PERÍODO DE "
			XMSG += SUBSTR(TEMP->FPO_DTINI,7,2) + "/" + SUBSTR(TEMP->FPO_DTINI,5,2) + "/" + SUBSTR(TEMP->FPO_DTINI,1,4)	+ " A "
			XMSG += SUBSTR(TEMP->FPO_DTFIM,7,2) + "/" + SUBSTR(TEMP->FPO_DTFIM,5,2) + "/" + SUBSTR(TEMP->FPO_DTFIM,1,4)	+ STR0143 + TEMP->FPO_FILIAL //", NA FILIAL "
		ENDIF
		AVISO(STR0144,XMSG,{"OK"},2,STR0145) //"ENCAVALAMENTO DE DATAS DO ACESSÓRIO"###"VERIFIQUE!"

		LRET	:= .F.
	ELSE
		LRET	:= .T.
	ENDIF
	
	IF SELECT("TEMP") > 0
		TEMP->(DBCLOSEAREA())
	ENDIF 
ENDIF

IF OFOLDER:NOPTION == 1 .AND. VALTYPE(ODLGFRO)=="O" //FAZ VERIFICAÇÃO DE FROTA
 
	_DDATI := DTOS(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})])
	_DDATF := DTOS(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })])
	_CHORI := ALLTRIM(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI" })])  
	_CHORM := ALLTRIM(ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM" })])  

	IF READVAR() == "M->FPO_DTINI"
		_DDATI := DTOS(M->FPO_DTINI)
	ENDIF
	IF READVAR() == "M->FPO_DTFIM"
		_DDATF := DTOS(M->FPO_DTFIM)
	ENDIF
	IF READVAR() == "M->FPO_HRINI"
		_CHORI := M->FPO_HRINI
	ENDIF
	IF READVAR() == "M->FPO_HRFIM"
		_CHORM := M->FPO_HRFIM
	ENDIF
	
	IF SELECT("TEMP") > 0
		TEMP->(DBCLOSEAREA())
	ENDIF
	
	FOR DI := 1 TO LEN(ODLGFRO:ACOLS)
	   _CSTSATU := ODLGFRO:ACOLS[DI, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS" })]
	   _DDTIATU := ODLGFRO:ACOLS[DI, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI" })]
	   _DDTFATU := ODLGFRO:ACOLS[DI, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM" })]
	   _CHRIATU := ODLGFRO:ACOLS[DI, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI" })]
	   _CHRFATU := ODLGFRO:ACOLS[DI, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM" })]

		IF ODLGFRO:OBROWSE:NAT != DI      //VERIFICA SE A COMPARAÇÃO É A MESMA LINHA 
	  		IF (!_CSTSATU $ "E|S|C|9") .AND.;
		       ( ( _DDTIATU >= STOD(_DDATI) .AND. _DDTFATU <= STOD(_DDATF) .AND. _CHRIATU >  _CHORI .AND. _CHRFATU <  _CHORM ) .OR.;
				 ( _DDTIATU >= STOD(_DDATI) .AND. _DDTFATU <= STOD(_DDATF) .AND. _CHRIATU >  _CHORI .AND. _CHRFATU <  _CHORM ) .OR.;
				 ( _DDTIATU >= STOD(_DDATI) .AND. _DDTFATU <= STOD(_DDATF) .AND. _CHRIATU == _CHORI .AND. _CHRFATU == _CHORM ) )
				MSGALERT(STR0146 , STR0026)  //"ENCAVALAMENTO DE DATAS DE FROTA"###"GPO - LOCT049.PRW"
				LRET := .F.
				EXIT
			ENDIF
		ENDIF
	NEXT
ENDIF

DBSELECTAREA(_NAREA)

RETURN(LRET)



// ======================================================================= \\
STATIC FUNCTION VALIDPROG()			// VALIDAÇÕES
// ======================================================================= \\

LOCAL LRET := .T.
LOCAL NX , NY 
LOCAL DDTIATU , DDTINX
LOCAL DDTFATU , DDTFNX
LOCAL LVLDTMD := SUPERGETMV("MV_LOCX222",.F.,.T.)
LOCAL _NX     := 0 
LOCAL DI      := 0 
LOCAL NI      := 0 

FOR NX := 1 TO LEN(ODLGFRO:ACOLS)
	// POSICIONA NA LINHA ATUAL PARA VALIDAR COM TODAS AS LINHAS DO MESMO
	DDTIATU	:=	ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
	DDTFATU	:=	ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
	// ADICIONADO O CONTROLE PELO HORARIO ALEM DAS DATAS INICIAL E FINAL
	CHRIATU	:= ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})]
	CHRFATU	:= ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})]

	// NAO VALIDAR QUANDO ESTIVE DELETADO
	IF !ODLGFRO:ACOLS[NX,LEN(ODLGFRO:AHEADER)+2] .AND. !ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "E;S" // .AND. !EMPTY(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})])

		FOR NY := NX+1 TO LEN(ODLGFRO:ACOLS)
			DDTINX	:=	ODLGFRO:ACOLS[NY][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
			DDTFNX	:=	ODLGFRO:ACOLS[NY][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
			// ADICIONADO O CONTROLE PELO HORARIO ALEM DAS DATAS INICIAL E FINAL
			CHRINX	:=	ODLGFRO:ACOLS[NY][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})]
			CHRFNX	:=	ODLGFRO:ACOLS[NY][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})]
			
			IF DDTINX > DDTCORTE
				// VALIDAR POR FROTA SEM ESTABELECER FILIAL E AS
				IF	!ODLGFRO:ACOLS[NY,LEN(ODLGFRO:AHEADER)+2] .AND. ;
					!ODLGFRO:ACOLS[NY,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "E;S" .AND. ;
				 	((DDTIATU >= DDTINX	.AND. DDTIATU <= DDTFNX .AND. CHRIATU > CHRINX .AND. CHRIATU < CHRFNX  ) .OR. ( DDTFATU >= DDTINX .AND. DDTFATU <= DDTFNX .AND. CHRFATU > CHRINX .AND. CHRFATU < CHRFNX )) 

					XMSG := STR0147 + ALLTRIM(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]) + CRLF //"A PROGRAMAÇÃO DA AS: "
					XMSG += STR0065 + DTOC(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]) //" DE "
					XMSG += "-"+SUBSTR(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})],1,2)+":"+SUBSTR(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})],3,2)
					XMSG += STR0031 + DTOC(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]) //" ATÉ "
					XMSG += "-"+SUBSTR(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})],1,2)+":"+SUBSTR(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})],3,2)
					XMSG += STR0148+CRLF //" ESTÁ EM CONFLITO COM"
					XMSG += STR0147 + ALLTRIM(ODLGFRO:ACOLS[NY,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]) + CRLF //"A PROGRAMAÇÃO DA AS: "
					XMSG += STR0065 + DTOC(ODLGFRO:ACOLS[NY,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]) //" DE "
					XMSG += "-"+SUBSTR(ODLGFRO:ACOLS[NY,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})],1,2)+":"+SUBSTR(ODLGFRO:ACOLS[NY,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})],3,2)
					XMSG += STR0031 + DTOC(ODLGFRO:ACOLS[NY,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]) //" ATÉ "
					XMSG += "-"+SUBSTR(ODLGFRO:ACOLS[NY,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})],1,2)+":"+SUBSTR(ODLGFRO:ACOLS[NY,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})],3,2)

					AVISO(STR0149,XMSG,{"OK"},2,"VERIFIQUE!") //"CONFLITO DE DATAS NA FROTA"

					ODLGFRO:GOTO(NY)
					ODLGFRO:OBROWSE:REFRESH()
					LRET:= .F.
					EXIT
				ENDIF
			ENDIF
		NEXT
	ENDIF

NEXT

// VERIFICAÇÃO SE A PROGRAMAÇÃO ESTÁ COERENTE COM A AS (ZLG X DTQ-ZA0) - CRISTIAM ROSSI EM 09/07/2011
FQ5->(DBSETORDER(9))		// FQ5_FILIAL + FQ5_AS + FQ5_VIAGEM

ATMP  := {}					// SEPARO NA PROGRAMAÇÃO AS AS
ATMPX := {} 				// SEPARO O NUMERO DA AS E O REGISTRO
FOR NX := 1 TO LEN(ODLGFRO:ACOLS)
	IF !ODLGFRO:ACOLS[NX,LEN(ODLGFRO:AHEADER)+2] .AND. !ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ES"
		XAS   := ODLGFRO:ACOLS[NX, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"}) ]
		NREGX := ODLGFRO:ACOLS[NX, LEN(ODLGFRO:AHEADER)+1]
		IF !EMPTY(XAS) .AND. ASCAN(ATMP,XAS) == 0
			AADD(ATMP, XAS)
			AADD(ATMPX,{XAS,NREGX})
		ENDIF
	ENDIF
NEXT

FOR NX := 1 TO LEN(ATMP)	// LOCALIZO AS AS E CRUZO AS DATAS

	IF ! FQ5->(DBSEEK(XFILIAL('FQ5')+ATMP[NX],.T.))
		MSGALERT(STR0206+ATMP[NX]+STR0207,STR0208) //'A AS: '###' NÃO FOI ENCONTRADA, VERIFIQUE!','AS NÃO ENCONTRADA'
		LRET := .F.
		EXIT
	ELSE
		ATMPDT := {}
		XDTTMP := FQ5->FQ5_DATINI
		WHILE XDTTMP <= FQ5->FQ5_DATFIM		// ARMAZENO OS DIAS DA AS NA MATRIZ ATMPDT, PARA CRUZAR COM A PROGRAMAÇÃO DIÁRIA
			AADD(ATMPDT, {XDTTMP, .F.})
			XDTTMP++
		ENDDO 

        IF LVLDTMD
			FOR NI := 1 TO LEN(ODLGFRO:ACOLS)
				IF !ODLGFRO:ACOLS[NI,LEN(ODLGFRO:AHEADER)+2] .AND. !ODLGFRO:ACOLS[NI,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "E;S;9;C;2;4;5;6" .AND. ;
					ODLGFRO:ACOLS[NI, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"}) ] == ATMP[NX]
	
					DDTINI := ODLGFRO:ACOLS[NI,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
					DDTFIM := ODLGFRO:ACOLS[NI,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
					XDTTMP := DDTINI
					WHILE XDTTMP <= DDTFIM							// VERIFICO SE A DATA PROGRAMADA ESTÁ DENTRO DO PERÍODO DA AS
						NPOS := ASCAN(ATMPDT, {|X| X[1]==XDTTMP})	// SE ESTIVER AJUSTO A MATRIZ, SENÃO AVISO E RETORNO .F.
						IF NPOS == 0
							IF ATMPDT[1,1] > DDTCORTE
								MSGALERT('A PROGRAMAÇÃO DE '+DTOC(XDTTMP)+' ESTÁ FORA DA AS ( '+DTOC(ATMPDT[1,1])+' A '+DTOC(ATMPDT[LEN(ATMPDT),1])+' ), VERIFIQUE!','DIVERGÊNCIA ENTRE AS E PROG. DIÁRIA')
								LRET := .F.
								EXIT
							ENDIF
						ELSE
							ATMPDT[NPOS,2] := .T.
						ENDIF
						XDTTMP++
					ENDDO 
				ENDIF
			NEXT NI 
			
			IF LRET
				CDTS := ""
				FOR NI := 1 TO LEN(ATMPDT)
					IF ! ATMPDT[NI, 2]
						DXDATA := ATMPDT[NI,1]
						IF SELECT("TEMP") > 0
							TEMP->(DBCLOSEAREA())
						ENDIF
						CQUERY := "SELECT FPO_FILIAL, FPO_FROTA, FPO_DTINI, FPO_DTFIM, FPO_NRAS "
						CQUERY += "FROM "  + RETSQLNAME("FPO") + " AS ZLG "
						CQUERY += "WHERE ZLG.D_E_L_E_T_ = ' ' AND " + ALLTRIM(STR(ATMPX[NX,2])) + " <> ZLG.R_E_C_N_O_ "
						CQUERY += "AND FPO_FROTA  = '" + CCODFROTA + "' AND FPO_STATUS IN ('9','C') AND "		// MESMO ACESSÓRIO PORÉM COM STATUS DIFERENTE DE ENTRADA/SAÍDA NF
						CQUERY +=     "FPO_DTINI <= '" + DTOS(DXDATA)    + "' AND FPO_DTFIM >= '" + DTOS(DXDATA) + "'"	 	// PERÍODO TOTALMENTE DENTRO DO LANÇAMENTO
						CQUERY := CHANGEQUERY(CQUERY)
						TCQUERY CQUERY NEW ALIAS "TEMP"
						IF TEMP->(RECNO()) # 0		
							LOOP
						ENDIF
						CDTS += IIF(!EMPTY(CDTS),", ","") + DTOC(ATMPDT[NI, 1])
					ENDIF
				NEXT NI 
				IF SELECT("TEMP") > 0
					TEMP->(DBCLOSEAREA())
				ENDIF

				IF ! EMPTY(CDTS)
					MSGALERT('A(S) DATA(S) '+CDTS+' NÃO TEM PROGRAMAÇÃO, FAVOR EFETUE A PROGRAMAÇÃO!','DIVERGÊNCIA ENTRE AS E PROG. DIÁRIA DE MÃO DE OBRA')
					LRET := .F.
					EXIT
				ENDIF
			ENDIF
		ENDIF
	ENDIF 
NEXT

IF LRET		// VERIFICAÇÃO SE TODAS AS DTQ ESTÃO PROGRAMADAS, VERIFICA EXISTÊNCIA DE PROGRAMAÇÃO E DATAS DE INÍCIO E TÉRMINO
	IF SELECT("TEMP") > 0
		TEMP->(DBCLOSEAREA())
	ENDIF

	CQUERY := "SELECT FQ5_SOT, FQ5_NOMCLI, FQ5_AS, FQ5_DATINI, FQ5_DATFIM FROM " + RETSQLNAME("FQ5") + " (NOLOCK) "
	CQUERY += " WHERE D_E_L_E_T_ = ''"
	CQUERY += " AND FQ5_STATUS = '6'"
	CQUERY += " AND FQ5_GUINDA = '"+ CCODFROTA +"'"
	CQUERY += " AND FQ5_DATINI > '" + DTOS(DDTCORTE) + "'"		// CORTE
	CQUERY += " ORDER BY FQ5_DATINI"
	TCQUERY CQUERY NEW ALIAS "TEMP"

	TCSETFIELD("TEMP","FQ5_DATINI","D",8,0)
	TCSETFIELD("TEMP","FQ5_DATFIM","D",8,0)
    
	NBURACO := 0
	
	WHILE ! EOF()

		ADIAS := {}
		FOR DI := TEMP->FQ5_DATINI TO TEMP->FQ5_DATFIM
			AADD(ADIAS, DI)
		NEXT DI 

		FOR _NX := 1 TO LEN(ODLGFRO:ACOLS)
			IF !ODLGFRO:ACOLS[_NX,LEN(ODLGFRO:AHEADER)+2] .AND. ;
			   !ODLGFRO:ACOLS[_NX, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ES" .AND. ;
			   (ODLGFRO:ACOLS[_NX, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})] == TEMP->FQ5_AS .OR. ;
			    ODLGFRO:ACOLS[_NX, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "9C" )

				FOR DI := ODLGFRO:ACOLS[_NX, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})] TO ODLGFRO:ACOLS[_NX, ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
					NPOS := ASCAN(ADIAS, DI)
					IF NPOS > 0
						ADEL(ADIAS, NPOS)
					ENDIF
				NEXT DI 
			ENDIF
		NEXT _NX

		NBURACO := 0
		FOR NI := 1 TO LEN(ADIAS)
			IF ! EMPTY( ADIAS[NI] )
				NBURACO++
			ENDIF
		NEXT

		IF NBURACO > 0
			EXIT
		ENDIF

		DBSKIP()                   	
	END

	IF SELECT("TEMP") > 0 
		TEMP->(DBCLOSEAREA()) 
	ENDIF

	// VALIDACAO DE PERIODOS IGUAIS
	FOR NX := 1 TO LEN(ODLGFRO:ACOLS)
		// POSICIONA NA LINHA ATUAL PARA VALIDAR COM TODAS AS LINHAS DO MESMO
		DDTIATU	:=	ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
		DDTFATU	:=	ODLGFRO:ACOLS[NX][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
		IF DDTIATU > DDTFATU
			XMSG := STR0147 + ALLTRIM(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]) + CRLF //"A PROGRAMAÇÃO DA AS: "
			XMSG += " DE " + DTOC(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})])
			XMSG += " ATÉ " + DTOC(ODLGFRO:ACOLS[NX,ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})])
			XMSG += STR0150 //" ESTÁ COM A DATA INICIAL MAIOR DO QUE A FINAL."
			LRET := .F.
			MSGALERT(STR0151+XMSG , STR0026)  //"ATENÇÃO: "###"GPO - LOCT049.PRW"
		ENDIF
	NEXT

ENDIF

RETURN LRET 



// ======================================================================= \\
FUNCTION LOCA05218(CPARFROTA, CPARAS)
// ======================================================================= \\
// --> CHAMADA: VALIDAÇÃO DE USUÁRIO DOS CAMPOS FPL_AS E FPO_NRAS 
// --> VALIDAÇÃO DE AS CADASTRADA MANUALMENTE.

LOCAL   LRET   := .T.
LOCAL   CQUERY
LOCAL   AAREA  := GETAREA()

OAUX := IF(OFOLDER:NOPTION==NFOLDERFRO, ODLGFRO, ODLGEQU)
IF OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ES"
	MSGALERT('ESTA LINHA NÃO PODE SER MODIFICADA!','VINCULO COM NF')
	RETURN .F.
ENDIF

IF EMPTY(CPARAS)	// AS EM BRANCO É PERMITIDO
	RETURN .T.
ENDIF

IF EMPTY(CPARFROTA)
	CPARFROTA := CCODFROTA
ENDIF

IF SELECT("TRAB") > 0
	DBSELECTAREA("TRAB")
	DBCLOSEAREA()
ENDIF

CQUERY := "SELECT COUNT(*) CONTA FROM " + RETSQLNAME("FQ5")+" (NOLOCK) WHERE D_E_L_E_T_ = '' "
CQUERY += "AND FQ5_GUINDA = '" + CPARFROTA + "' "
CQUERY += "AND FQ5_AS = '" + CPARAS + "' "
CQUERY += "AND FQ5_STATUS = '6' "

DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRAB", .F., .T.)

IF TRAB->(EOF()) .OR. TRAB->CONTA == 0
	MSGSTOP(STR0152 , STR0026) //"ATENÇÃO: AS NÃO ENCONTRADA OU NÃO NÃO VINCULADA NA FROTA"###"GPO - LOCT049.PRW"
	LRET := .F.
ENDIF

IF SELECT("TRAB") > 0
	DBSELECTAREA("TRAB")
	DBCLOSEAREA()
ENDIF

RESTAREA(AAREA)

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA05219()
// ======================================================================= \\
// --> CHAMADA: MENU - "PESQ. AS / VIAGEM"

LOCAL OCMB
LOCAL ACMB     := {STR0153,STR0154} //"POR AS"###"POR VIAGEM"
LOCAL CCMB     := ACMB[1]
LOCAL LRET     := .F.
LOCAL CXAS     := SPACE(27)
LOCAL CXVIAGEM := SPACE(06)
LOCAL NRET     := 0

PRIVATE OPANEL1, OPANEL2

DEFINE MSDIALOG ODLG FROM 0,0 TO 130,390 PIXEL TITLE STR0155 //"PESQUISA FROTA"
	@ 05,05 SAY STR0156 OF ODLG PIXEL //"ORDEM:"
	
	OCMB := TCOMBOBOX():NEW(13,05,{|U|IF(PCOUNT()>0,CCMB:=U,CCMB)},ACMB,120,08,ODLG,,{||FMUDAORD(CCMB, ACMB)},,,,.T.,,,,,,,,,"CCMB")
	
	OPANEL1 := TPANEL():NEW(25,00,"",ODLG,,,,,,150,50)
	
	@ 05,05 SAY STR0157 OF OPANEL1 PIXEL //"AS:"
	@ 13,05 MSGET CXAS PICTURE "!!-!!-99-99999-999-99-!!-99" SIZE 90,8 OF OPANEL1 PIXEL
	
	OPANEL2 := TPANEL():NEW(25,00,"",ODLG,,,,,,150,50)
	
	@ 05,05 SAY STR0158 OF OPANEL2 PIXEL //"VIAGEM:"
	@ 13,05 MSGET CXVIAGEM PICTURE "!!!!!!" SIZE 30,8 OF OPANEL2 PIXEL
	
	OPANEL1:SHOW()
	OPANEL2:HIDE()
	
	DEFINE SBUTTON  FROM 010,160 TYPE 1 ACTION (LRET:=.T., ODLG:END()) ENABLE OF ODLG PIXEL
	DEFINE SBUTTON  FROM 030,160 TYPE 2 ACTION ODLG:END() ENABLE OF ODLG PIXEL
ACTIVATE MSDIALOG ODLG CENTERED

IF LRET
	IF CCMB == ACMB[1]		// PRIMEIRA OPÇÃO - POR AS
		FQ5->(DBSETORDER(9))
		IF FQ5->(DBSEEK(XFILIAL("FQ5")+CXAS,.T.))
			ST9->(DBSETORDER(1))
			IF ST9->(DBSEEK(XFILIAL("ST9")+FQ5->FQ5_GUINDA, .T.))
				NRET := 1
			ELSE
				MSGSTOP(STR0159+ALLTRIM(FQ5->FQ5_GUINDA)+STR0160 , STR0026)  //"FROTA "###" NÃO ENCONTRADA"###"GPO - LOCT049.PRW"
			ENDIF
		ELSE
			MSGSTOP(STR0161 , STR0026) //"AS NÃO ENCONTRADA"###"GPO - LOCT049.PRW"
		ENDIF
	ELSE					// SEGUNDA OPÇÃO - POR VIAGEM
		FQ5->(DBSETORDER(1))
		IF FQ5->(DBSEEK(XFILIAL("FQ5")+CXVIAGEM,.T.))
			ST9->(DBSETORDER(1))
			IF ST9->(DBSEEK(XFILIAL("ST9")+FQ5->FQ5_GUINDA, .T.))
				NRET := 1
			ELSE
				MSGSTOP(STR0159+ALLTRIM(FQ5->FQ5_GUINDA)+STR0160 , STR0026) //"FROTA "###" NÃO ENCONTRADA"###"GPO - LOCT049.PRW"
			ENDIF
		ELSE
			MSGSTOP(STR0162 , STR0026)  //"VIAGEM NÃO ENCONTRADA"###"GPO - LOCT049.PRW"
		ENDIF
	ENDIF
ENDIF

RETURN IF(NRET==1,.T.,.F.)



// ======================================================================= \\
STATIC FUNCTION FMUDAORD(CCMB, ACMB)
// ======================================================================= \\
// --> FUNÇÃO DE SUPORTE DA PESQUISA DE BENS/FROTA POR AS E VIAGEM

IF CCMB == ACMB[1]
	OPANEL1:SHOW()
	OPANEL2:HIDE()
ELSE
	OPANEL1:HIDE()
	OPANEL2:SHOW()
ENDIF

RETURN NIL



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ VLDEMAIL  º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDA O ENVIO DE SOLICITACAO DE NOTA DE SAIDA CONFORME    º±±
±±º          ³ REGRA APRESENTADA ABAIXO                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºREGRA     ³ 1. T9_ACESSOR = "R" E FPO_STATUS = "R" - SOLICITA NF SAIDA º±±
±±º          ³ 2. FPO_STATUS = "E" NAO POSSUI RESERVA                     º±±
±±º          ³ 3. FPO_STATUS = "R" ENVIA E-MAIL SOLICITANDO NF SAIDA      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
/*
STATIC FUNCTION VLDEMAIL()
// --> CHAMADA: NÃO EXISTE CHAMADA - DESCONTINUADO 

IF POSICIONE("ST9",1,XFILIAL("ST9")+ALLTRIM(ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][2]),"T9_TIPOSE") == "A"  // VERIFICA SE É ACESSÓRIO
	IF LEN(ODLGEQU:ACOLS) == 0 
		AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
	ELSE
		//-->> REGRA PARA VERIFICAR SE O ACESSORIO ESTÁ NA FILIAL CORRENTE
		IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "A" .AND. ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][9] > 0 
			AVISO("ATENÇÃO","ULTIMO MOVIMENTO FOI UM ACERTO DE SAIDA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
		ELSE	
			IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "R" 
				IF LEN(ODLGEQU:ACOLS) > 1
					IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][6] > ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)-1][7]
						IF ST9->T9_ACESSOR == "R"
							IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "R"
								DLGEMAIL()
							ELSEIF POSICIONE("ST9",1,XFILIAL("ST9")+ALLTRIM(ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][2]),"T9_TIPOSE") == "A"  // VERIFICA SE É ACESSÓRIO
								AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
							ENDIF
						ELSE
							IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "R"
								DLGEMAIL()
							ELSEIF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "E"
								AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
							ELSEIF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "S"
								AVISO("ATENÇÃO","JÁ HÁ UMA NOTA EMITIDA PARA ESSE ACESSÓRIO",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
							ELSE
								AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
							ENDIF
						ENDIF
					ELSE
						IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][2] <> ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)-1][2]		
							IF ST9->T9_ACESSOR == "R"
								IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "R"
									DLGEMAIL()
								ELSE
									AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
								ENDIF
							ELSE
								IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "R"
									DLGEMAIL()
								ELSEIF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "E"
									AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
								ELSEIF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "S"
									AVISO("ATENÇÃO","JÁ HÁ UMA NOTA EMITIDA PARA ESSE ACESSÓRIO",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
								ELSE
									AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
								ENDIF
							ENDIF
						ELSE
							AVISO("ATENÇÃO","A DATA DE INÍCIO " + DTOC(ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][6]) + " DO EQUIPAMENTO " + ALLTRIM(ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][2]) + " DEVE SER MAIOR QUE A DATA FINAL DO MOVIMENTO ANTERIOR",{ "VOLTAR" },2,"DATA INVÁLIDA")						
						ENDIF
					ENDIF
				ELSE
					IF ST9->T9_ACESSOR == "R"
						IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "R"
							DLGEMAIL()
						ELSE
							AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
						ENDIF
					ELSE
						IF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "R"
							DLGEMAIL()
						ELSEIF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "E"
							AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
						ELSEIF ODLGEQU:ACOLS[LEN(ODLGEQU:ACOLS)][5] == "S"
							AVISO("ATENÇÃO","JÁ HÁ UMA NOTA EMITIDA PARA ESSE ACESSÓRIO",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
						ELSE
							AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
						ENDIF
					ENDIF		
				ENDIF
			ELSE
				AVISO("ATENÇÃO","NÃO HÁ RESERVA FEITA!",{ "VOLTAR" },2,"SOLICITAÇÃO NÃO PERMITIDA")
			ENDIF	
		ENDIF		
	ENDIF 
ELSE
	DLGEMAIL()
ENDIF

RETURN
*/



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ DLGEMAIL  º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ ABRE DIÁLOGO PARA ENVIAR E-MAIL AO DEPTO FISCAL.           º±±
±±º          ³ (VER PARAMETRO ABAIXO COM LISTA DE E-MAILS).               º±±
±±º          ³ O USUÁRIO DO OPERACIONAL INFORMARÁ QUAIS ITENS DEVERÃO SER º±±
±±º          ³ DESPACHADOS                                                º±±
±±º          ³  CHAMADA: MENU - "ENVIA E-MAIL SOLICITANDO NF"             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION DLGEMAIL()

LOCAL ODLG, OLST
LOCAL LOK      := .F.
LOCAL _LCANC   := .F.
LOCAL AITENS   := {}
LOCAL OOK      := LOADBITMAP( GETRESOURCES(), "LBOK")
LOCAL ONO      := LOADBITMAP( GETRESOURCES(), "LBNO")
LOCAL AAREAST9 := ST9->(GETAREA())
LOCAL AAREA    := GETAREA()
LOCAL CNRAS    := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS" }	)]
LOCAL CDEPTO   := STR0163 //"GUINDASTES"
LOCAL CNOMCLI  := ""
LOCAL CCNPJ    := ""
LOCAL CCODCLI  := ""
LOCAL CENDE    := ""
LOCAL CBAIRR   := ""
LOCAL CMUN     := ""
LOCAL CUF      := ""
LOCAL CCEP     := ""
LOCAL CTRANSP  := SPACE(40)
LOCAL COBS     := SPACE(250)
LOCAL CENDENT  := SPACE(250)
LOCAL AFRETE   := {STR0164,STR0165} //"DESTINATÁRIO"###"EMITENTE"
LOCAL CFRETE   := AFRETE[1]
LOCAL CWIDTH   := "900"  
LOCAL CNUMACER := ""  
LOCAL _CTITULO := ""
LOCAL NSALDO   := 0
LOCAL AADITENS := {}
LOCAL _ARET	   := {}
LOCAL NW       := 0 
LOCAL NI       := 0  
LOCAL NX       := 0 
LOCAL NY       := 0 
LOCAL _NK      := 0 

PRIVATE LENVIADOS := .F.
PRIVATE ODLGOP
PRIVATE ORADIO

FSALVAR000()

DEFINE MSDIALOG ODLGOP FROM 0,0 TO 200,280 PIXEL TITLE STR0166 //"LOCT049 - PROGRAMAÇÃO DE ACESSÓRIOS"

NRADIO := 1

@ 010,001 SAY STR0167 PIXEL OF ODLGOP //"SELECIONE O MOVIMENTO:"

ORADIO := TRADMENU():NEW(30,01,{'NOTA FISCAL','SAÍDA DE ACESSÓRIOS'},,ODLGOP,,,,,,,,100,150,,,,.T.)

OBTN := TBUTTON():NEW( 060, 020, 'CONFIRMA',ODLGOP,{|| ODLGOP:END() }, 040, 015,,,.F.,.T.,.F.,,.F.,,,.F. )
OBTN := TBUTTON():NEW( 060, 080, 'CANCELA',ODLGOP,{|| ODLGOP:END(), _LCANC := .T. }, 040, 015,,,.F.,.T.,.F.,,.F.,,,.F. )

ORADIO:BSETGET := {|U|IIF (PCOUNT()==0,NRADIO,NRADIO:=U)}
ORADIO:BWHEN := {|| .T. }

ACTIVATE MSDIALOG ODLGOP CENTERED 

IF _LCANC
	RETURN(.F.)
ENDIF	

_CTITULO := IF(NRADIO == 1,OEMTOANSI(STR0168),OEMTOANSI(STR0169)) //"ENVIO DE E-MAIL SOLICITANDO NF"###"SAÍDA DE ACESSÓRIOS"

ATUACACOLS()  // ATUALIZANDO A ACOLSFULLAC COM AS ALTERAÇÕES DA ACOLS TEMPORÁRIA - CRISTIAM ROSSI EM 01/06/2011
ATUMOACOLS()  // ATUALIZANDO A ACOLSFULLMO COM AS ALTERAÇÕES DA ACOLS TEMPORÁRIA - CRISTIAM ROSSI EM 09/06/2011

	FOR NX := 1 TO LEN(ODLGEQU:ACOLS)
		IF ! ODLGEQU:ACOLS[ NX, LEN(ODLGEQU:AHEADER)+2] .AND. !EMPTY(ODLGEQU:ACOLS[NX, ASCAN(ODLGEQU:AHEADER, {|X| ALLTRIM(X[2]) == "FPO_CODBEM"})])
			IF EMPTY(ODLGEQU:ACOLS[NX, ASCAN(ODLGEQU:AHEADER, {|X| ALLTRIM(X[2]) == "FPO_CARRET"}) ]) .AND. !(ODLGEQU:ACOLS[NX, ASCAN(ODLGEQU:AHEADER, {|X| ALLTRIM(X[2]) == "FPO_STATUS"}) ] $ "A|E|S|")
				MSGSTOP(STR0170+ODLGEQU:ACOLS[NX, ASCAN(ODLGEQU:AHEADER, {|X| ALLTRIM(X[2]) == "FPO_CODBEM"}) ],STR0171) //"PREENCHA O PACKING LIST (Nº CARRETA) DO ACESSÓRIO: "###"PACKING LIST EM BRANCO!"
				ODLGEQU:GOTO(NX)
				ODLGEQU:OBROWSE:REFRESH()
				RETURN .F.
			ENDIF 

			IF (ODLGEQU:ACOLS[NX, ASCAN(ODLGEQU:AHEADER, {|X| ALLTRIM(X[2]) == "FPO_STATUS"}) ]) == 'R' .AND. (ODLGEQU:ACOLS[NX, ASCAN(ODLGEQU:AHEADER, {|X| ALLTRIM(X[2]) == "FPO_DEVACE"}) ]) == '01'
				CNUMACER+= (ODLGEQU:ACOLS[NX, ASCAN(ODLGEQU:AHEADER, {|X| ALLTRIM(X[2]) == "FPO_CODBEM"}) ]) + '|'
			ENDIF
		ENDIF
	NEXT

ST9->(DBSETORDER(1))

// ADICIONAMOS A FROTA PRIMEIRO...
NTMP := 0
IF ST9->(DBSEEK(XFILIAL("ST9")+CCODFROTA))
	NTMP := ST9->T9_VALCPA
	DO CASE
		CASE ST9->T9_TIPOSE == "E"
			CDEPTO   := STR0172 //"EQUIPAMENTO"
		CASE ST9->T9_TIPOSE == "T"
			CDEPTO   := STR0173 //"TRANSPORTES"
		CASE ST9->T9_TIPOSE == "L"
			CDEPTO   := "LOCAÇÃO"
		OTHERWISE
			CDEPTO   := ST9->T9_TIPOSE
	ENDCASE
ENDIF

IF NRADIO == 1
	/*IF U_CHKNFBEM(CCODFROTA, .T.)		// VERIFICA SE O BEM "ESTÁ" NA EMPRESA
		AADD(AITENS,{.F.,;
			ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_MAILF"})],;
			"",;	// ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CARRET"})],;
			ALLTRIM(IIF(!EMPTY(ST9->T9_CODESTO),ST9->T9_CODESTO,CCODFROTA)),;
			ALLTRIM(ST9->T9_NOME) + STR0174 + ALLTRIM(ST9->T9_SERIE) + STR0175 + ALLTRIM(CCODFANTA),; //" - Nº SÉRIE: "###" - FROTA: "
			'UN',;
			1,;
			NTMP,;
			NTMP,;
			ODLGFRO:ACOLS[ODLGFRO:NAT][LEN(ODLGFRO:AHEADER)+1],;
			"FROTA"})
	ENDIF*/
ENDIF	

FOR NI := 1 TO LEN(ACOLSFULLAC)
	
	IF ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})] == CNRAS .AND. ;
		! ACOLSFULLAC[NI, LEN(ODLGEQU:AHEADER)+2] .AND. ;
		!EMPTY(ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]) .AND. ;
		!ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "E;S;A;9;C" .AND.;
		!ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})] $ CNUMACER  .AND.;
		EMPTY(ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NUMNF"})])		
			
		IF ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] == "A"
			LOOP			
		ENDIF
		
		NTMP := 0

		IF ST9->(DBSEEK(XFILIAL("ST9")+ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]))
			CTMP := ST9->T9_CODESTO
			NTMP := ST9->T9_VALCPA
		ELSE
			CTMP := ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]
		ENDIF

		IF EMPTY(CTMP)		// --> INCLUS0 PARA QUE NÃO APRESENTE ITENS COM O CODIGO ESTOQUE VAZIO.
			LOOP
		ENDIF
		
		NSALDO := 0

		IF ASCAN(AITENS, {|IT| IT[4]==CTMP } ) == 0		// SÓ INCLUIR SE NÃO EXISTIR NA LISTA (EVITAR MOSTRAR TODA PROGRAMAÇÃO)
			/*
			IF U_CHKNFBEM(ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})], .T.)		// VERIFICA SE O BEM "ESTÁ" NA EMPRESA
				AADD(AITENS,{.F.,;
				ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_MAILF"})],;
				ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CARRET"})],;
				CTMP,;		// ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})],;
				ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DESCAC"})],;
				'UN',;
				ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES"})],;
				NTMP,;
				ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES"})]*NTMP,;
				ACOLSFULLAC[NI][LEN(ODLGEQU:AHEADER)+1],;
				STR0176,; //"ACESSORIO"
				ACOLSFULLAC[NI][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})] })
			ENDIF
			*/
		ENDIF

	ENDIF
NEXT

ST9->(RESTAREA(AAREAST9))
RESTAREA(AAREA)

CPROJETO := ODLGEQU:ACOLS[ODLGEQU:NAT,ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_PROJET"})] 
COBRA    := ODLGEQU:ACOLS[ODLGEQU:NAT,ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_OBRA"})]

IF (SELECT("TQB") <> 0)
	DBSELECTAREA("TQB")
	DBCLOSEAREA()
ENDIF
CQUERY := "SELECT * "
CQUERY += "FROM "+RETSQLNAME("FP1") + " AS ZA1 "
CQUERY += "WHERE  ZA1.D_E_L_E_T_ = '' "
CQUERY += "  AND  FP1_PROJET = '" + CPROJETO +"' "
CQUERY += "  AND  FP1_OBRA   = '" + COBRA    +"' "
CQUERY := CHANGEQUERY(CQUERY)
TCQUERY CQUERY NEW ALIAS "TQB"

CENDENT := ALLTRIM(TQB->FP1_ENDORI) + " - " + ALLTRIM(TQB->FP1_BAIORI) + " - " + ALLTRIM(TQB->FP1_MUNORI) + " - " + ALLTRIM(TQB->FP1_ESTORI) + " - " + TRANSFORM(TQB->FP1_CEPORI,"@R 99999-999")

IF LEN(AITENS) == 0
	MSGSTOP(STR0177 , STR0026)  //"NÃO HÁ ITENS PARA SELECIONAR NF"###"GPO - LOCT049.PRW"
	RETURN .F.
ENDIF

DEFINE MSDIALOG ODLG FROM 00,00 TO 500,800 PIXEL TITLE _CTITULO
@ 5,5 SAY STR0178 OF ODLG PIXEL //"SELECIONE OS ITENS:"
@ 1,320 CHECKBOX OCHK VAR LENVIADOS PROMPT STR0179 SIZE 90,10 OF ODLG PIXEL ON CLICK VERIFENVIADOS(OLST,AITENS,ODLG) //"PERMITE SELEC. ITENS ENVIADOS"

@ 15,05 LISTBOX OLST FIELDS HEADERS "SEL",IF(NRADIO==1,STR0180,STR0181),STR0182,STR0183,STR0184,STR0185,STR0186, STR0187,STR0188 SIZE 393,150 OF ODLG PIXEL //"DT.E-MAIL"###"DT.MOVIM."###"P.LIST"###"CÓDIGO"###"DESCRIÇÃO"###"UM"###"QTD"###"PRC.UNIT."###"PRC.TOTAL"
OLST:SETARRAY( AITENS )

OLST:BLINE := {|| { IF( AITENS[OLST:NAT,1],OOK,ONO),;
AITENS[OLST:NAT,2],;
AITENS[OLST:NAT,3],;
AITENS[OLST:NAT,4],;
AITENS[OLST:NAT,5],;
AITENS[OLST:NAT,6],;
AITENS[OLST:NAT,7],;
TRANSFORM(AITENS[OLST:NAT,8],"@E 999,999,999,999,999.99"),;
TRANSFORM(AITENS[OLST:NAT,9],"@E 999,999,999,999,999.99")}}

OLST:BLDBLCLICK := {||TROCACOR(OLST,AITENS,ODLG,.T.)}

IF NRADIO == 1
	@ 170,05 SAY STR0189 OF ODLG PIXEL //"TRANSPORTADOR:"
	@ 169,50 MSGET OGET VAR CTRANSP PICTURE REPLICATE("!",40) SIZE 200,10 OF ODLG PIXEL

	@ 170,310 SAY STR0190 OF ODLG PIXEL //"FRETE:"
	@ 169,330 COMBOBOX OCMB VAR CFRETE ITEMS AFRETE SIZE 70,10 OF ODLG PIXEL

	@ 185,05 SAY STR0191 OF ODLG PIXEL //"OBSERVAÇÕES:"
	@ 184,50 MSGET OGET VAR COBS PICTURE REPLICATE("!",250) SIZE 300,10 OF ODLG PIXEL

	@ 200,05 SAY STR0192 OF ODLG PIXEL //"END. ENTREGA:"
	@ 199,50 MSGET OGET VAR CENDENT PICTURE REPLICATE("!",250) SIZE 300,10 OF ODLG PIXEL
ENDIF		

@ 225,305 	BUTTON OCONF PROMPT STR0115 SIZE 45 ,16 ACTION (LOK:=.T.,ODLG:END())  OF ODLG PIXEL //"CONFIRMA"
@ 225,355 	BUTTON OCANC PROMPT STR0116  SIZE 45 ,16 ACTION (ODLG:END())  OF ODLG PIXEL //"CANCELA"

ACTIVATE MSDIALOG ODLG CENTERED

IF LOK
	FOR NI := 1 TO LEN(AITENS)
		IF AITENS[NI][1]
			NPOS:=ASCAN(AADITENS,{|X| ALLTRIM(X[1]) == ALLTRIM(AITENS[NI,4])})
			IF  NPOS > 0
				AADITENS[NPOS][2]+= AITENS[NI,7]
			ELSE
			    AADD(AADITENS,{AITENS[NI,4],AITENS[NI,7]}) //ADICIONA NO ARRAY O PRODUTO E QUANTIDADE
			ENDIF 
		ENDIF
	NEXT

	FOR NY:= 1 TO LEN(AADITENS) 
		IF POSICIONE("ST9",1,XFILIAL("ST9")+ALLTRIM(AADITENS[NY][1]),"T9_TIPOSE") == "A"  // VERIFICA SE É ACESSÓRIO 
			NQTEST  := POSICIONE("SB2",2,XFILIAL("SB2")+"01"+AADITENS[NY][1], "B2_QATU"  )
			IF NQTEST < AADITENS[NY][2]
				MSGALERT(STR0193+ALLTRIM(AADITENS[NY][1])+STR0194, STR0067) //"O PRODUTO "###" NÃO TEM SALDO SUFICIENTE PARA ATENDER A QUANTIDADE SELECIONADA, FAVOR ALTERAR!!!"###"OPERAÇÃO CANCELADA"
			   	RETURN .F.
			ENDIF

			FOR NX := 1 TO LEN(ODLGEQU:ACOLS)
				IF ODLGEQU:ACOLS[NX,2] == "1" //.AND. (ODLGEQU:NAT <> NX)
					MSGINFO(STR0195 , STR0026) //"EXISTE PROGRAMAÇÃO DISPONIVEL MANUALMENTE, VERIFIQUE."###"GPO - LOCT049.PRW"
				ENDIF
			NEXT NX
		ENDIF
	NEXT NY 
	
	FOR NI := 1 TO LEN(AITENS)
		IF AITENS[NI,1]   //INDICA QUE O ITEN FOI SELECIONADO
			IF AITENS[NI,11] == "FROTA"
				IF NRADIO == 1
					XXAS     := ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]
					XXZLGSC6 := GETSXENUM("FPO","FPO_ZLGSC6")
					FOR NW := 1 TO LEN(ODLGFRO:ACOLS)
						IF ! ODLGFRO:ACOLS[NW][ LEN(ODLGFRO:AHEADER)+2 ] .AND. ;
							 ODLGFRO:ACOLS[NW][ ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})   ] == XXAS .AND. ;
							!ODLGFRO:ACOLS[NW][ ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"}) ] $ "E;S;A;9;C"

							ODLGFRO:ACOLS[NW][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_MAILF"})]  := DDATABASE
							ODLGFRO:ACOLS[NW][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_ZLGSC6"})] := XXZLGSC6
						ENDIF
					NEXT NW 
					ODLGFRO:OBROWSE:REFRESH()
				ENDIF
			ELSE
				IF NRADIO == 1
					XRECNO := ASCAN(ODLGEQU:ACOLS, {|X| X[LEN(ODLGEQU:AHEADER)+1] == AITENS[NI,10]})
					ODLGEQU:ACOLS[XRECNO][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_MAILF"})]  := DDATABASE
					ODLGEQU:ACOLS[XRECNO][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_ZLGSC6"})] := GETSXENUM("FPO","FPO_ZLGSC6")
				ELSE
					XRECNO := ASCAN(ODLGEQU:ACOLS, {|X| X[LEN(ODLGEQU:AHEADER)+1] == AITENS[NI,10]})

					_CZLGD3 := GETSXENUM("FPO","FPO_ZLGSD3")

					LJMSGRUN(STR0196,, {|| 	_ARET := INCMOV(ODLGEQU:ACOLS[XRECNO][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})],; //"AGUARDE..., EXECUTANDO PROCESSAMENTO..."
																				ODLGEQU:ACOLS[XRECNO][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_QTACES"})],;
																				ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})],;
																	   			_CZLGD3,;
																				"S" ) })

					IF LEN(_ARET) > 0 .AND. _ARET[1,1]

						FOR _NK := 1 TO LEN( ODLGEQU:ACOLS )
							IF GDFIELDGET("FPO_CODBEM", _NK,, ODLGEQU:AHEADER, ODLGEQU:ACOLS) == AITENS[NI,12]
								ODLGEQU:ACOLS[_NK][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_MAILF"})]	:= DDATABASE
								ODLGEQU:ACOLS[_NK][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_ZLGSD3"})]	:= _CZLGD3
								ODLGEQU:ACOLS[_NK][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NUMNF"})]	:= _ARET[1,2]
								ODLGEQU:ACOLS[_NK][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DEVACE"})]	:= "01"
							ENDIF
						NEXT

						CONFIRMSX8()
					ELSE
						ROLLBACKSX8()													
					ENDIF						
				ENDIF	

			ENDIF
		
			IF NRADIO == 1
				CONFIRMSX8()
			ENDIF	
		ENDIF
	NEXT 
		
	ODLGEQU:OBROWSE:REFRESH()
	
	FSALVAR000()	// GRAVAMOS AS INFORMAÇÕES PARA EXISTIR O REGISTRO E PODERMOS ATUALIZAR O CAMPO DE DATA DO E-MAIL

	// --> ALTERADO FORMA DE BUSCA DE DADOS PARA ATENDER NECESSIDADE DE SOLICITAÇÃO DE NF EM OUTRAS FILIAIS DO PROJETO.
	// --> ALTERADO A CONDIÇÃO AND DTQ.FQ5_AS = '"+CNRAS+"'". O SISTEMA ESTAVA FIXADO O NUMERO DE UMA AS. O CORRETO É A VARIAVEL "CNRAS" PARA COMPARAÇÃO.
	CQUERY := " SELECT A1_NOME, A1_CGC, ZA0_CLI+'/'+ZA0_LOJA CODIGO, A1_END, A1_BAIRRO, A1_MUN , A1_EST, A1_CEP "
	CQUERY += "	FROM "+RETSQLNAME("FP0")+" ZA0 "
	CQUERY += "		INNER JOIN "+RETSQLNAME("FQ5")+" (NOLOCK) DTQ ON DTQ.D_E_L_E_T_ = '' AND DTQ.FQ5_AS = '"+CNRAS+"'"
	CQUERY += "		INNER JOIN "+RETSQLNAME("SA1")+" SA1 ON SA1.D_E_L_E_T_ = '' AND SA1.A1_COD+SA1.A1_LOJA = ZA0.ZA0_CLI+ZA0.ZA0_LOJA "
	CQUERY += "	WHERE ZA0.D_E_L_E_T_ = '' "
	CQUERY += "		AND ZA0.ZA0_PROJET = DTQ.FQ5_SOT"
	TCQUERY CQUERY NEW ALIAS "TMP"

	IF TMP->(!EOF())
		CNOMCLI := TMP->A1_NOME
		CCNPJ   := TMP->A1_CGC
		CCODCLI := TMP->CODIGO
		CENDE   := TMP->A1_END
		CBAIRR  := TMP->A1_BAIRRO
		CMUN    := TMP->A1_MUN
		CUF     := TMP->A1_EST
		CCEP    := TMP->A1_CEP
	ENDIF     

	IF SELECT("TMP") > 0 
		TMP->(DBCLOSEAREA())
	ENDIF
	
	//CFROM := ALLTRIM(USRRETNAME(RETCODUSR())) + " <" + ALLTRIM(USRRETMAIL(RETCODUSR())) + ">" 
	// --> CRIADO O PARAMETRO MV_LOCX150 COM O E-MAIL DA FERNANDA ONDE SERÁ A PESSOA QUE RECEBERÁ AS SOLICITAÇÕES. 
	// --> CRIADO O "ALLTRIM( SUPERGETMV("MV_LOCX150",.F.,"FERNANDA.NASCIMENTO@.COM.BR") )" SUBSTITUINDO O PROCESSO MENCIONANDO ACIMA. 
	CDEST   := "" //GETMV("MV_LOCX150")
	CFROM   := GETMV("MV_RELFROM")
	CCOPIA  := ""
	CBODY := "<HTML><BODY>"
	CBODY += "<TABLE WIDTH='"+CWIDTH+"'><TR><TD ALIGN='CENTER'>"
	CBODY += "<H3>SOLICITAÇÃO DE EMISSÃO DE NOTA FISCAL</H3></TD></TR></TABLE>"
	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'><TR BGCOLOR='#DDDDDD'>"
	CBODY += "<TD><H6>SOLICITANTE:</H6>"+/*USRRETNAME(RETCODUSR())+*/"&NBSP;</TD>"
	CBODY += "<TD><H6>ÁREA:</H6>OPERACIONAL "+CDEPTO+"&NBSP;</TD>"
	CBODY += "<TD><H6>DATA:</H6>"+DTOC(DATE())+"&NBSP;</TD>"
	CBODY += "<TD><H6>HORA SOLICITAÇÃO:</H6>"+TIME()+"&NBSP;</TD>"
	CBODY += "<TD><H6>ENTREGA NF:</H6>&NBSP;</TD></TR></TABLE><BR>"
	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'>"
	CBODY += "<TR><TD><H6>EMPRESA (CLIENTE) EMITENTE:</H6>"+SM0->M0_NOME+"&NBSP;</TD>"
	CBODY += "<TD><H6>NATUREZA DE OPERAÇÃO:</H6>SIMPLES REMESSA</TD></TR>"
	CBODY += "</TABLE>"
	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'>"
	CBODY += "<TR><TD><H6>NOME DO CLIENTE:</H6>"+ CNOMCLI +"&NBSP;</TD>"
	CBODY += "<TD><H6>CNPJ:</H6>"+ CCNPJ +"&NBSP;</TD>"
	CBODY += "<TD><H6>CÓDIGO CLIENTE:</H6>"+ CCODCLI +"&NBSP;</TD></TR>"
	CBODY += "</TABLE>"
	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'>"
	CBODY += "<TR><TD><H6>ENDEREÇO:</H6>"+ CENDE +"&NBSP;</TD>"
	CBODY += "<TD><H6>BAIRRO:</H6>"+ CBAIRR +"&NBSP;</TD></TR>"
	CBODY += "</TABLE>"
	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'>"
	CBODY += "<TR><TD><H6>CIDADE:</H6>"+ CMUN +"&NBSP;</TD>"
	CBODY += "<TD><H6>ESTADO:</H6>"+ CUF +"&NBSP;</TD>"
	CBODY += "<TD><H6>CEP:</H6>"+ TRANSFORM(CCEP,"@R 99999-999") +"&NBSP;</TD></TR>"
	CBODY += "</TABLE>"
	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'>"
	CBODY += "<TR><TD><H6>CONDIÇÕES DE PAGAMENTO:</H6>&NBSP;</TD>"
	CBODY += "<TD><H6>AS Nº:</H6>"+CNRAS+"</TD></TR>"
	CBODY += "</TABLE><BR>"

	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'><TR BGCOLOR='#DDDDDD'>"
	CBODY += "<TH>CÓDIGO</TH>"
	CBODY += "<TH>DESCRIÇÃO DO PRODUTO</TH>"
	CBODY += "<TH>UN.MED.</TH>"
	CBODY += "<TH>QTDE.</TH>"
	CBODY += "<TH>PRC.UNIT.</TH>"
	CBODY += "<TH>PRC.TOTAL</TH>"
	CBODY += "<TH>PACK LIST</TH></TR>"

	ASORT(AITENS,,, { |X,Y| X[3]+X[4] < Y[3]+Y[4] })	// ORDENAR POR PACKING LIST + CÓDIGO

	FOR NI := 1 TO LEN(AITENS)
		IF AITENS[NI,1]
			CBODY += "<TR><TD>"+ AITENS[NI,04] +"&NBSP;</TD>"
			CBODY += "<TD>"    + AITENS[NI,05] +"&NBSP;</TD>"
			CBODY += "<TD>"    + AITENS[NI,06] +"&NBSP;</TD>"
			CBODY += "<TD>"    + TRANSFORM(AITENS[NI,07],"@E 999,999") +"&NBSP;</TD>"
			CBODY += "<TD>"    + TRANSFORM(AITENS[NI,08],"@E 999,999,999,999,999.99") +"&NBSP;</TD>"
			CBODY += "<TD>"    + TRANSFORM(AITENS[NI,09],"@E 999,999,999,999,999.99") +"&NBSP;</TD>"
			CBODY += "<TD>"    + AITENS[NI,03]+"&NBSP;</TD></TR>"
		ENDIF
	NEXT
	
	CBODY += "</TABLE><BR>"
	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'>"
	CBODY += "<TR><TD WIDTH='90%'><H6>TRANSPORTADORA:</H6>"+CTRANSP+"&NBSP;</TD>"
	CBODY += "<TD><H6>FRETE:</H6>"+CFRETE+"&NBSP;</TD></TR>"
	CBODY += "</TABLE><BR>"
	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'>"
	CBODY += "<TR><TD><H6>OBSERVAÇÕES:</H6>"+COBS+"&NBSP;</TD></TR>"
	CBODY += "</TABLE>"
	
	CBODY += "<TABLE BORDER='1' WIDTH='"+CWIDTH+"'>"
	CBODY += "<TR><TD><H6>ENDEREÇO DE ENTREGA:</H6>"+CENDENT+"&NBSP;</TD></TR>"
	CBODY += "</TABLE>"
	
	CBODY += "</BODY></HTML>"
	
	IF NRADIO == 1
		LOCA05909(CFROM, CDEST, CCOPIA, "SOLICITAÇÃO DE NF - SIMPLES REMESSA", CBODY,NIL,"")
	ENDIF	
	//		Y_ENVIAR(CFROM, CDEST, CFROM, "SOLICITAÇÃO DE NF - SIMPLES REMESSA", CBODY,"","",.T.)
	
ENDIF

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION INCMOV(CCODBEM, NQTDE, _CNRAS, _CDZLG, CTPMOV)
// ======================================================================= \\

LOCAL _ARESU		:= {}
LOCAL _AREGS		:= {}
LOCAL CCODMV		:= ""
//LOCAL LOK			:= .F.

PRIVATE LMSERROAUTO := .F.          

IF(CTPMOV == "S",CCODMV:="505",CCODMV:="005")
		
IF CTPMOV == "S"
	_CCODEST := POSICIONE("ST9",1,XFILIAL("ST9")+CCODBEM,"T9_CODESTO")
ELSE
	_CCODEST := CCODBEM
ENDIF	

DBSELECTAREA("SB1")
SB1->( DBSETORDER(1) )
IF SB1->( DBSEEK(XFILIAL("SB1")+_CCODEST) )

	BEGIN TRANSACTION   	

	_AREGS := {} 		

	AADD(_AREGS,{"D3_TM",CCODMV,})	
	AADD(_AREGS,{"D3_COD",SB1->B1_COD,})	
	AADD(_AREGS,{"D3_UM",SB1->B1_UM,})			
	AADD(_AREGS,{"D3_LOCAL",SB1->B1_LOCPAD,})	
	AADD(_AREGS,{"D3_QUANT",NQTDE,})	
	AADD(_AREGS,{"D3_EMISSAO",DDATABASE,})		        
	AADD(_AREGS,{"D3_NRAS",_CNRAS,})
	AADD(_AREGS,{"D3_ZLGSD3",_CDZLG,})

	MSEXECAUTO({|X,Y| MATA240(X,Y)},_AREGS,3)		

	IF LMSERROAUTO		
		MSGSTOP("NÃO FOI POSSIVEL EFETUAR O MOVIMENTO!" , "GPO - LOCT049.PRW")
		MOSTRAERRO()
	ELSE		
		MSGINFO("MOVIMENTO EFETUADO COM SUCESSO!" , "GPO - LOCT049.PRW") 
		AADD(_ARESU,{.T.,SD3->D3_DOC})
	ENDIF	

	END TRANSACTION
	
ELSE
	MSGSTOP("PRODUTO ["+ALLTRIM(_CCODEST)+"] NÃO CADASTRADO!" , "GPO - LOCT049.PRW") 
ENDIF	

RETURN(_ARESU) 



// ======================================================================= \\
STATIC FUNCTION VERIFENVIADOS(OLISTBOX,AVETOR,ODLG)
// ======================================================================= \\

LOCAL NI := 0 

IF ! LENVIADOS
	FOR NI:=1 TO LEN(AVETOR)
		IF !EMPTY(AVETOR[NI,2])
			FSELECIONA(AVETOR, NI, .T.)
		ENDIF
	NEXT NI 
ENDIF

ODLG:REFRESH()
OLISTBOX:REFRESH()
RETURN



// ======================================================================= \\
STATIC FUNCTION TROCACOR(OLISTBOX,AVETOR,ODLG,LVER)
// ======================================================================= \\

LOCAL CPCKLIST := AVETOR[OLISTBOX:NAT,3]
LOCAL LOPC     := AVETOR[OLISTBOX:NAT,1]
LOCAL NI       := 0 

IF LVER
	IF !LENVIADOS .AND. !EMPTY(AVETOR[OLISTBOX:NAT,2])
		RETURN NIL
	ENDIF
ENDIF	

IF AVISO("SELEÇÃO DE ITENS",IIF(LOPC,"DESMARCA","MARCA")+" TODOS OS ITENS DO P.LIST Nº ("+CPCKLIST+")",{"SIM","NÃO"},,"ATENCAO:") == 1
	FOR NI:=1 TO LEN(AVETOR)
		IF AVETOR[NI,3] == CPCKLIST
			FSELECIONA(AVETOR, NI, LOPC,LVER)
		ENDIF
	NEXT NI 
ELSE
	FSELECIONA(AVETOR, OLISTBOX:NAT, LOPC,LVER)
ENDIF

ODLG:REFRESH()
OLISTBOX:REFRESH()

RETURN



// ======================================================================= \\
STATIC FUNCTION FSELECIONA(AVETOR, NAT, LOPC, LVERI)
// ======================================================================= \\

IF LOPC
	AVETOR[NAT,1] := !LOPC
ELSE
	IF LVERI
		IF EMPTY(AVETOR[NAT,2]) .OR. LENVIADOS
			AVETOR[NAT,1] := !LOPC
		ENDIF
	ELSE 
		AVETOR[NAT,1] := !LOPC
	ENDIF	
ENDIF

RETURN



// ======================================================================= \\
STATIC FUNCTION ENVMAILMO(ADEL, AINC, AALT)
// ======================================================================= \\

LOCAL CHTMLPARAG := ""
LOCAL CHTMLCORPO := ""
LOCAL CASSUNTO   := ""
LOCAL _NPOS
LOCAL _NPOS2
LOCAL LCONTROL  := .F.
LOCAL CCODAS   	:= ""
LOCAL CNOMCLI   := ""

IF LEN(ADEL) # 0 .AND. EMPTY(CCODAS)
	CCODAS     := ADEL[1,2]
ENDIF

IF LEN(AINC) # 0 .AND. EMPTY(CCODAS)
	CCODAS     := AINC[1,2]
ENDIF

IF LEN(AALT) # 0 .AND. EMPTY(CCODAS)
	CCODAS     := AALT[1,2]
ENDIF

DBSELECTAREA("FQ5")
DBSETORDER(9)
DBSEEK(XFILIAL("FQ5")+CCODAS)
CNOMCLI  := FQ5->FQ5_NOMCLI
CMUNIC   := FQ5->FQ5_DESTIN

CHTMLPARAG := "<TABLE WIDTH='1049' BORDER='2' BORDERCOLOR='#000000'>" + CRLF + "<TR VALIGN='MIDDLE' BORDERCOLOR='#000000' BGCOLOR='#0033FF'>" + CRLF
FOR _NPOS := 1 TO LEN(AHEADERMO)
	IF _NPOS = 01
		CHTMLPARAG += "<TD WIDTH='034'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 02
		CHTMLPARAG += "<TD WIDTH='161'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 03
		CHTMLPARAG += "<TD WIDTH='064'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 04
		CHTMLPARAG += "<TD WIDTH='041'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 05
		CHTMLPARAG += "<TD WIDTH='140'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 06
		CHTMLPARAG += "<TD WIDTH='181'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 07
		CHTMLPARAG += "<TD WIDTH='068'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 08
		CHTMLPARAG += "<TD WIDTH='068'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 09
		CHTMLPARAG += "<TD WIDTH='085'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 10
		CHTMLPARAG += "<TD WIDTH='054'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSEIF _NPOS = 11
		CHTMLPARAG += "<TD WIDTH='083'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ELSE
		CHTMLPARAG += "<TD WIDTH='089'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + AHEADERMO[_NPOS, 1] + "</SPAN></DIV></TD>"
	ENDIF
NEXT
	
CHTMLPARAG += "<TD WIDTH='161'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + "CODIGO CLIENTE" + "</SPAN></DIV></TD>"
CHTMLPARAG += "<TD WIDTH='161'><DIV ALIGN='CENTER' CLASS='ESTILO18'><SPAN CLASS='ESTILO19'>" + "MUNICIPIO     " + "</SPAN></DIV></TD>"

CHTMLPARAG += CRLF + "</TR>" + CRLF

CHTMLCORPO := ""
IF LEN(ADEL) > 0
	FOR _NPOS := 1 TO LEN(ADEL) // LEN(ADEL - 2)
		IF !EMPTY(ADEL[_NPOS, 3])
			CHTMLCORPO += "<TR BORDERCOLOR='#999999'>"
			FOR _NPOS2 := 1 TO LEN(AHEADERMO)
				//					CHTMLCORPO += "<TD>"  // ORIGINAL
				CHTMLCORPO += "<TD BORDERCOLOR='#000000'><DIV ALIGN='CENTER'><SPAN CLASS='ESTILO14'>"
				DO CASE
				CASE VALTYPE(ADEL[_NPOS, _NPOS2]) == "D"
					CHTMLCORPO += DTOC(ADEL[_NPOS, _NPOS2])
				CASE VALTYPE(ADEL[_NPOS, _NPOS2]) == "N"
					CHTMLCORPO += VAL(ADEL[_NPOS, _NPOS2])
				CASE VALTYPE(ADEL[_NPOS, _NPOS2]) == "L"
					IF VALTYPE(ADEL[_NPOS, _NPOS2]) == "L"
						CHTMLCORPO += "V"
					ELSE
						CHTMLCORPO += "F"
					ENDIF
				OTHERWISE
					CHTMLCORPO += ADEL[_NPOS, _NPOS2]
				ENDCASE
				//					CHTMLCORPO += "</TD>"  // ORIGINAL
				CHTMLCORPO += "</SPAN></DIV></TD>"
			NEXT
			CHTMLCORPO += "<TD BORDERCOLOR='#000000'><DIV ALIGN='CENTER'><SPAN CLASS='ESTILO14'>"+TRANSFORM(ALLTRIM(CNOMCLI) ,"@X" )+"</SPAN></DIV></TD>"
			CHTMLCORPO += "<TD BORDERCOLOR='#000000'><DIV ALIGN='CENTER'><SPAN CLASS='ESTILO14'>"+TRANSFORM(ALLTRIM(CMUNIC)  ,"@X" )+"</SPAN></DIV></TD>"
			CHTMLCORPO += CRLF + "</TR>" + CRLF
			LCONTROL := .T.
		ELSE
			LCONTROL := .F.
		ENDIF
	NEXT
	CHTMLCORPO += "</TABLE>" + CRLF
	CASSUNTO := "DELEÇÃO DE MÃO DE OBRA NA PROGRAMAÇÃO"
	IF LCONTROL = .T.
		LOCA05909(ALLTRIM(GETMV("MV_RELFROM")), ALLTRIM(GETMV("MV_LOCX043",,"")), "", CASSUNTO, CHTMLPARAG + CHTMLCORPO, "", "")
	ENDIF
ENDIF

CHTMLCORPO := ""
IF LEN(AINC) > 0
	FOR _NPOS := 1 TO LEN(AINC)  //LEN(AINC - 2)
		IF !EMPTY(AINC[_NPOS, 3])
			CHTMLCORPO += "<TR>"
			FOR _NPOS2 := 1 TO LEN(AHEADERMO)
				//					CHTMLCORPO += "<TD>"  // ORIGINAL
				CHTMLCORPO += "<TD BORDERCOLOR='#000000'><DIV ALIGN='CENTER'><SPAN CLASS='ESTILO14'>"
				DO CASE
					CASE VALTYPE(AINC[_NPOS, _NPOS2]) == "D"
						CHTMLCORPO += DTOC(AINC[_NPOS, _NPOS2])
					CASE VALTYPE(AINC[_NPOS, _NPOS2]) == "N"
						CHTMLCORPO += VAL(AINC[_NPOS, _NPOS2])
					CASE VALTYPE(AINC[_NPOS, _NPOS2]) == "L"
						IF VALTYPE(AINC[_NPOS, _NPOS2]) == "L"
							CHTMLCORPO += "V"
						ELSE
							CHTMLCORPO += "F"
						ENDIF
					OTHERWISE
						CHTMLCORPO += AINC[_NPOS, _NPOS2]
				ENDCASE
				//					CHTMLCORPO += "</TD>"  // ORIGINAL
				CHTMLCORPO += "</SPAN></DIV></TD>"
			NEXT
			CHTMLCORPO += "<TD BORDERCOLOR='#000000'><DIV ALIGN='CENTER'><SPAN CLASS='ESTILO14'>"+TRANSFORM(ALLTRIM(CNOMCLI) ,"@X" )+"</SPAN></DIV></TD>"
			CHTMLCORPO += "<TD BORDERCOLOR='#000000'><DIV ALIGN='CENTER'><SPAN CLASS='ESTILO14'>"+TRANSFORM(ALLTRIM(CMUNIC)  ,"@X" )+"</SPAN></DIV></TD>"
			CHTMLCORPO += CRLF + "</TR>" + CRLF
			LCONTROL := .T.
		ELSE
			LCONTROL := .F.
		ENDIF
	NEXT
	CHTMLCORPO += "</TABLE>" + CRLF
	CASSUNTO := "INCLUSÃO DE MÃO DE OBRA NA PROGRAMAÇÃO"
	IF LCONTROL = .T.
		LOCA05909(ALLTRIM(GETMV("MV_RELFROM")), ALLTRIM(GETMV("MV_LOCX053",,"")), "", CASSUNTO, CHTMLPARAG + CHTMLCORPO, "", "")
	ENDIF
ENDIF
	
CHTMLCORPO := ""
IF LEN(AALT) > 0
	FOR _NPOS := 1 TO LEN(AALT) //LEN(AALT - 2)
		IF !EMPTY(AALT[_NPOS, 3])
			CHTMLCORPO += "<TR>"
			FOR _NPOS2 := 1 TO LEN(AHEADERMO)
				//					CHTMLCORPO += "<TD>"  // ORIGINAL
				CHTMLCORPO += "<TD BORDERCOLOR='#000000'><DIV ALIGN='CENTER'><SPAN CLASS='ESTILO14'>"
				DO CASE
					CASE VALTYPE(AALT[_NPOS, _NPOS2]) == "D"
						CHTMLCORPO += DTOC(AALT[_NPOS, _NPOS2])
					CASE VALTYPE(AALT[_NPOS, _NPOS2]) == "N"
						CHTMLCORPO += STR(AALT[_NPOS, _NPOS2])
					CASE VALTYPE(AALT[_NPOS, _NPOS2]) == "L"
						IF VALTYPE(AALT[_NPOS, _NPOS2]) == "L"
							CHTMLCORPO += "V"
						ELSE
							CHTMLCORPO += "F"
						ENDIF
					OTHERWISE
						CHTMLCORPO += AALT[_NPOS, _NPOS2]
				ENDCASE
				//					CHTMLCORPO += "</TD>"  // ORIGINAL
				CHTMLCORPO += "</SPAN></DIV></TD>"
			NEXT
			CHTMLCORPO += "<TD BORDERCOLOR='#000000'><DIV ALIGN='CENTER'><SPAN CLASS='ESTILO14'>"+TRANSFORM(ALLTRIM(CNOMCLI) ,"@X" )+"</SPAN></DIV></TD>"
			CHTMLCORPO += "<TD BORDERCOLOR='#000000'><DIV ALIGN='CENTER'><SPAN CLASS='ESTILO14'>"+TRANSFORM(ALLTRIM(CMUNIC)  ,"@X" )+"</SPAN></DIV></TD>"
			CHTMLCORPO += CRLF + "</TR>" + CRLF
			LCONTROL := .T.
		ELSE
			LCONTROL := .F.
		ENDIF
	NEXT
	CHTMLCORPO += "</TABLE>" + CRLF
	CASSUNTO := "ALTERAÇÃO DE MÃO DE OBRA NA PROGRAMAÇÃO"
	IF LCONTROL = .T.
		SEMAILTS(ALLTRIM(GETMV("MV_RELFROM")), ALLTRIM(GETMV("MV_LOCX034",,"")), "", CASSUNTO, CHTMLPARAG + CHTMLCORPO, "", "")
	ENDIF
ENDIF

RETURN 



// ======================================================================= \\
STATIC FUNCTION SEMAILTS(_CREMET, _CDEST, _CCC, _CASSUNTO, CBODY, _CANEX, _CCCO)	//LOCA05909("WORKFLOW <TOTVS@.COM.BR", "MARCOS_FEIJO@TERRA.COM.BR","FABIO.MARTINS@.COM.BR","ASSUNTO","CORPO","","")
// ENVIA EMAIL - ROTINA PADRÃO
// ======================================================================= \\

LOCAL CENVIA    	:= ALLTRIM(GETMV("MV_RELFROM")) 
LOCAL _CSERMAIL		:= ALLTRIM(GETMV("MV_RELSERV")) 
LOCAL _CDE     		:= ALLTRIM(GETMV("MV_RELACNT")) 
LOCAL _CSENHA		:= ALLTRIM(GETMV("MV_RELPSW")) 
LOCAL LSMTPAUTH  	:= GETMV("MV_RELAUTH",,.F.) 
LOCAL _LENVIADO		:= .F.
LOCAL _LCONECTOU	:= .F.
LOCAL _CMAILERROR	:= ""

	CONNECT SMTP SERVER _CSERMAIL ACCOUNT _CDE PASSWORD _CSENHA RESULT _LCONECTOU		// CONECTA AO SERVIDOR DE EMAIL

	IF !(_LCONECTOU)																	// SE NAO CONECTOU AO SERVIDOR DE EMAIL, AVISA AO USUARIO
		GET MAIL ERROR _CMAILERROR
		//conout("erro no email rotina loca052")
		//MSGINFO("NÃO FOI POSSÍVEL CONECTAR AO SERVIDOR DE EMAIL." + CHR(13) + CHR(10) +;
		//"PROCURE O ADMINISTRADOR DA REDE."				 + CHR(13) + CHR(10)+;
		//"ERRO RETORNADO: "								 + _CMAILERROR)
	ELSE
		IF LSMTPAUTH
			LAUTOK := MAILAUTH(_CDE,_CSENHA)
		ELSE
			LAUTOK := .T.
		ENDIF
		
		IF !LAUTOK
			MSGSTOP("NÃO FOI POSSIVEL AUTENTICAR NO SERVIDOR." , "GPO - LOCT049.PRW") 
		ELSE
			_CREMET := CAPITAL(STRTRAN(ALLTRIM(USRRETNAME(RETCODUSR())),"."," ")) + " <" + ALLTRIM(CENVIA) + ">"
			SEND MAIL FROM _CREMET TO _CDEST CC _CCC BCC _CCCO SUBJECT _CASSUNTO BODY CBODY RESULT _LENVIADO
			
			IF !(_LENVIADO)
				GET MAIL ERROR _CMAILERROR
				//conout("erro no e-mail rotina loca052")
				//MSGINFO("NÃO FOI POSSÍVEL ENVIAR O EMAIL."	+ CHR(13) + CHR(10) +;
				//"PROCURE O ADMINISTRADOR DA REDE."	+ CHR(13) + CHR(10) +;
				//"ERRO RETORNADO: "					+ _CMAILERROR)
			ENDIF
		ENDIF
		
		DISCONNECT SMTP SERVER
	ENDIF

RETURN



/*
// ======================================================================= \\
STATIC FUNCTION FPRECHECA(Y_COD,Y_PESQUISA,Y_DATA,Y_MSG)
// ======================================================================= \\
// --> CHAMADA: NÃO EXISTE CHAMADA - DESCONTINUADO 
// AVALIA AS PROGRAMACOES DE ACORDO COM AS ALTERACOES FEITAS NO CADASTRO DE AS.
//   Y_COD  	- CODIGO DO PRODUTO
//   Y_PESQUISA	- CHAVE DE PESQUISA
//   Y_DATA   	- DATA ALTERADA E VAI SER CHECADA
//   Y_MSG    	- NUMERO DO TIPO DE MENSAGEM ( NUMERICO ) ( VALORES 1 - DATA DE ENTRADA ; 2 - DATA DE SAIDA )

LOCAL AAREA  := GETAREA()
LOCAL Y_I := 1

DBSELECTAREA("FPO")
// FPO_FILIAL+FPO_PROJET+FPO_OBRA+FPO_NRAS+FPO_VIAGEM
IF SELECT("ATUAL") # 0 
	DBSELECTAREA("ATUAL") 
	ATUAL->(DBCLOSEAREA()) 
ENDIF
// SELECIONANDO PARA PROGRAMACOES DAS OUTRAS ASS PARA O MESMO PRODUTO DA AS COM STATUS TIPO 2/3/4/5/6/7/8/R
CQUERY := " SELECT FPO_FILIAL,FPO_PROJET,FPO_NRAS,FPO_OBRA,FPO_VIAGEM,FPO_NOMCLI,FPO_STATUS,FPO_DTINI,FPO_DTFIM,FPO_FROTA,FPO_CODBEM FROM " + RETSQLNAME('FPO')
CQUERY += " WHERE D_E_L_E_T_ = '' "
CQUERY += " AND FPO_FILIAL = '"+XFILIAL()+"'"
CQUERY += " AND FPO_FROTA = '" + Y_COD + "'"
CQUERY += " AND FPO_CODBEM <> ''"
CQUERY += " AND FPO_STATUS IN ('2','3','4','5','6','7','8','R')"
CQUERY += " AND (FPO_DTINI <= '"      + DTOS(Y_DATA) + "' AND FPO_DTFIM >='" + DTOS(Y_DATA) + "')"
CQUERY += " ORDER BY FPO_DTINI "
DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"ATUAL", .F., .T.)

TCSETFIELD("ATUAL","FPO_DTINI",   "D",8,0)
TCSETFIELD("ATUAL","FPO_DTFIM",   "D",8,0)
	
LCONFLITO := .F.
// SE EXISTIR
WHILE ! EOF()
	IF ATUAL->FPO_FILIAL+ATUAL->FPO_PROJET+ATUAL->FPO_OBRA+ATUAL->FPO_NRAS <> Y_PESQUISA
		LCONFLITO := .T.
		CMSG := "DATA DE "+IIF(Y_MSG == 1,"INICIO","FIM")+" DE PROGRAMACAO INFORMADA NÃO ESTÁ DISPONÍVEL - " + CHR(13)+CHR(10) + "FILIAL "+ATUAL->FPO_FILIAL+" /AS :"+ATUAL->FPO_NRAS+" ESTA USANDO A FROTA"
		//	CMSG := "JÁ EXISTE PROGRAMAÇÃO PARA ESTA FROTA ( " + Y_COD + " ) QUE NÃO PERTENCE A ESSA AS. PARA AS DATAS ENTRE "+CTOD(ATUAL->FPO_DTINI)+" E "+CTOD(ATUAL->FPO_DTFIM)
		MSGSTOP(CMSG, 'CONFLITO DE DATAS NA FROTA '+Y_COD)
	ENDIF
	DBSKIP()
ENDDO

IF LCONFLITO
	RESTAREA(AAREA)
	RETURN .T.
ENDIF

ATUAL->(DBCLOSEAREA())
RESTAREA(AAREA)

RETURN .F.
*/



// ======================================================================= \\
FUNCTION LOCA05220()		
// ======================================================================= \\
// --> VALIDADOR DE TELA. GET DADOS PARA EQUIPAMENTOS E ACESSORIOS

LOCAL AAREA 		:= GETAREA()
LOCAL LRET 			:= .T.
LOCAL NX   			:= 1
LOCAL NY   			:= 1
LOCAL NPOSDINI 		:= ASCAN(ODLGFRO:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_DTINI"  }  )	// POSICAO CAMPO DATA INICIAL PROGRAMACAO
LOCAL NPOSDFIM 		:= ASCAN(ODLGFRO:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_DTFIM"  }  )	// POSICAO CAMPO DATA FINAL PROGRAMACAO
LOCAL NPOSSTAT	 	:= ASCAN(ODLGFRO:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_STATUS" }  )	// POSICAO CAMPO STATUS DO ACESSÓRIO
LOCAL NPOSASFROTA	:= ASCAN(ODLGFRO:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_NRAS"   }  )	// POSICAO CAMPO Nº AS
LOCAL NPOSQTDE 		:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_QTACES" }  )	// POSICAO CAMPO QUANTIDADE DE ACESSÓRIOS
LOCAL NPOSDINIAC 	:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_DTINI"  }  )	// POSICAO CAMPO DATA INICIAL PROGRAMACAO
LOCAL NPOSDFIMAC	:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_DTFIM"  }  )	// POSICAO CAMPO DATA FINAL PROGRAMACAO
LOCAL NPOSSTATUS 	:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_STATUS" }  )	// POSICAO CAMPO STATUS DO ACESSÓRIO
LOCAL NPOSACESSO	:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_CODBEM" }  )	// POSICAO CAMPO CÓDIGO DO ACESSÓRIO
LOCAL NPOSAS		:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_NRAS"   }  )	// POSICAO CAMPO Nº AS
//LOCAL DDTINX 		:= CTOD("  /  /  ")
//LOCAL DDTIATU 	:= CTOD("  /  /  ")
//LOCAL DDTFN 		:= CTOD("  /  /  ")
//LOCAL CQUERY      := ""
//LOCAL CPROATU		:= ""
//LOCAL CPRONX		:= ""
//LOCAL NPOSPROJ 	:= ASCAN(ODLGFRO:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_PROJET" }  )  // POSICAO CAMPO PROJETO
//LOCAL NPOSFROT 	:= ASCAN(ODLGFRO:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_FROTA"  }  )	// POSICAO CAMPO CODIGO FROTA
//LOCAL NPOSCARR 	:= ASCAN(ODLGEQU:AHEADER, { |X| ALLTRIM(X[2]) == "FPO_CARRET" }  )	// POSICAO CAMPO SEQUENCIAL DE CARRETA ( EQUIPAMENTOS )
//LOCAL DDTFATU 	:= CTOD("  /  /  ")
//LOCAL W_PROJETO   := ""
//LOCAL W_AS        := ""
//LOCAL W_FROTA     := ""
//LOCAL W1_PROJETO  := ""
//LOCAL W1_AS       := ""

FOR NY := 1 TO LEN(ODLGFRO:ACOLS)
	IF !ODLGFRO:ACOLS[ NY, LEN(ODLGFRO:AHEADER)+2] .AND. !EMPTY(ODLGFRO:ACOLS[ NY, NPOSASFROTA])
		FOR NX := 1 TO LEN(ACOLSFULLAC)	//LEN(ODLGEQU:ACOLS)
			// --> VALIDAÇÕES NA ABA ACESSÓRIOS
			IF ACOLSFULLAC[NX, NPOSAS] == ODLGFRO:ACOLS[ NY, NPOSASFROTA] .AND. !ACOLSFULLAC[NX, LEN(ODLGEQU:AHEADER)+2]
				IF ! ACOLSFULLAC[ NX, LEN(ODLGEQU:AHEADER)+2]
					NQTDE := ACOLSFULLAC[ NX,NPOSQTDE]
					IF ALLTRIM(ACOLSFULLAC[NX, NPOSSTATUS]) == ""
						MSGSTOP("ACESSÓRIO: "+ALLTRIM(ACOLSFULLAC[ NX, NPOSACESSO])+" AS: "+ALLTRIM(ACOLSFULLAC[ NX, NPOSAS])+" ESTÁ SEM STATUS!","ATENÇÃO - FALTA DE INFORMAÇÃO !")
						RETURN .F.
					ENDIF
					IF EMPTY(ACOLSFULLAC[NX, NPOSDINIAC]) .OR. EMPTY(ACOLSFULLAC[NX, NPOSDFIMAC])
						MSGSTOP("ACESSÓRIO: "+ALLTRIM(ACOLSFULLAC[ NX, NPOSACESSO])+" AS: "+ALLTRIM(ACOLSFULLAC[ NX, NPOSAS])+" DEVE TER AS DATAS DE INÍCIO E FIM PREENCHIDAS!","ATENÇÃO - FALTA DE INFORMAÇÃO !")
						RETURN .F.
					ENDIF
				ENDIF 
			ENDIF
		NEXT NX 
	ENDIF
NEXT NY 

// VALIDAÇÕES NA ABA FROTA
FOR NX := 1 TO LEN(ODLGFRO:ACOLS)
	IF ! ODLGFRO:ACOLS[ NX, LEN(ODLGFRO:AHEADER)+2]
		IF ALLTRIM(ODLGFRO:ACOLS[NX, NPOSSTAT]) == ""
			MSGSTOP("OS STATUS DEVEM ESTAR PREENCHIDOS!","ATENÇÃO - STATUS EM BRANCO !")
			ODLGFRO:GOTO(NX)
			ODLGFRO:OBROWSE:REFRESH()
			RETURN .F.
		ENDIF
		IF EMPTY(ODLGFRO:ACOLS[NX, NPOSDINI]) .OR. EMPTY(ODLGFRO:ACOLS[NX, NPOSDFIM])
			MSGSTOP("AS DATAS DE INÍCIO E FIM DEVEM ESTAR PREENCHIDAS!","ATENÇÃO - DATA EM BRANCO !")
			ODLGFRO:GOTO(NX)
			ODLGFRO:OBROWSE:REFRESH()
			RETURN .F.
		ENDIF
	ENDIF 
NEXT NX 

RESTAREA(AAREA)

RETURN LRET 



// ======================================================================= \\
FUNCTION FLOCASB2(CCOD,NQTEMP)
// ======================================================================= \\
/*
FUNCAO QUE VERIFICA O SALDO DE FROTA/ACESSORIO NO ARQUIVO SB2 DE ACORDO COM O DOCUMENTO ETG08
RETORNA .F. SE ESTOQUE INSUFICIENTE (SB2) E .T. SE ESTOQUE SUFICIENTE
CCOD - CODIGO DA FROTA E/OU ACESSÓRIO A SER PESQUISADO
NQTEMP - QUANTIDADE A SER EMPENHADO PELA PROGRAMAÇÃO DA FROTA/ACESSORIO
/*/
LOCAL AAREA     := GETAREA()
LOCAL CCODEST   := POSICIONE("ST9",1,XFILIAL("ST9")+CCOD, "T9_CODESTO"  )
LOCAL XCALMOX   := "01"
LOCAL LRET      := .T.
LOCAL NX        := 0 
//LOCAL CTIPOAC := ST9->T9_ACESSOR
//LOCAL AQTEST  := {}
//LOCAL NQTDEST := 0

 // --> O SALDO NÃO DEVER SER CALCULADO E SIM O PEGAR O QUE ESTÁ NO SB2.
 //	AQTEST := CALCEST(CCODEST,XCALMOX,DDATABASE)
 //	NQTEST := AQTEST[1]

	NQTEST := POSICIONE("SB2",2,XFILIAL("SB2")+XCALMOX+CCODEST, "B2_QATU"  )
	NSOMA  := 0
	
	CQRYTAB := " SELECT * FROM " + RETSQLNAME("FPO") + " "
	CQRYTAB += "  WHERE D_E_L_E_T_ = '' "
	CQRYTAB += "    AND FPO_CODBEM = '" + ODLGEQU:ACOLS[ODLGEQU:NAT,2] + "' "
	CQRYTAB += "    AND FPO_NRAS <>  '" + ODLGEQU:ACOLS[ODLGEQU:NAT,1] + "' "
	CQRYTAB += "    AND FPO_STATUS IN ('R','1') "
	CQRYTAB += "    AND FPO_MAILF = '' "
	DBUSEAREA(.T., "TOPCONN", TCGENQRY(,,CHANGEQUERY(CQRYTAB)), "TRB", .F., .T.)
	WHILE !TRB->(EOF())
		NSOMA+=TRB->FPO_QTACES
		TRB->(DBSKIP())
	ENDDO	
	TRB->(DBCLOSEAREA())
	
	//-->> VALIDA O QUE ESTA EM TELA
	IF LEN(ODLGEQU:ACOLS) > LEN(ACOLSCOM) .AND. LEN(ODLGEQU:ACOLS) - LEN(ACOLSCOM) > 1
		FOR NX := LEN(ACOLSCOM)+1 TO LEN(ODLGEQU:ACOLS)-1
			IF ODLGEQU:ACOLS[ODLGEQU:NAT,2] == ODLGEQU:ACOLS[NX,2] .AND. ODLGEQU:ACOLS[ODLGEQU:NAT,5] == "R"
				NSOMA += ODLGEQU:ACOLS[NX,9]
			ENDIF			
		NEXT NX
	ENDIF	
    
	//-->> VALIDA O QUE ESTA EM REGISTRO
	IF LEN(ODLGEQU:ACOLS) > LEN(ACOLSCOM)
		FOR NX := 1 TO LEN(ACOLSCOM)
			IF ODLGEQU:ACOLS[ODLGEQU:NAT,2] == ODLGEQU:ACOLS[NX,2] .AND. ODLGEQU:ACOLS[ODLGEQU:NAT,5] == "R" .AND. EMPTY(ODLGEQU:ACOLS[NX,23])
				NSOMA += ODLGEQU:ACOLS[NX,9]
			ENDIF			
		NEXT NX
	ENDIF

	IF .F. .AND. NQTEST - NQTEMP - NSOMA < 0
		LRET := .F.
		MSGALERT("QUANTIDADE EM ESTOQUE :"+TRANSFORM(NQTEST,"@E 999,999")+CHR(13)+CHR(10)+"QUANTIDADE SOLICITADA :"+TRANSFORM(NQTEMP+NSOMA,"@E 999,999"),"ESTOQUE INSUFICIENTE")
	ENDIF

	RESTAREA(AAREA)

RETURN LRET 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ LC049VDT  ºAUTOR  ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ COMPONENTIZAÇÃO DA  VALIDAÇÃO DA  ALOCAÇÃO DE DATAS        º±±
±±º          ³ ENTRADAS: DATA INICIAL                                     º±±
±±º          ³           DATA FINAL                                       º±±
±±º          ³           EXCESSÕES                                        º±±
±±º          ³ SAIDAS:   PERIODO OK (.T.)                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ PROJETO AVATAR                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºPENDENCIA ³ O IDEAL É  SUSBSTITUIR TODAS AS OUTRAS VALIDAÇÕES POR ESTA º±±
±±º          ³ FUNÇÃO MAS  NÃO HÁ  TEMPO PARA  ISSO...                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß 
*/
FUNCTION LOCA05221(_DDTINI, _DDTFIM, CNSVALID, LVALPRO, LVALVAZ, _CFIELD, LFORCEVACOLS)

LOCAL _LRET     := .T. 							// PERIODO LIBERADO
LOCAL CPROATU	:= ''
LOCAL CPRONX	:= ''
LOCAL DDTIATU	:= CTOD('  /  /    ')
LOCAL DDTFATU	:= CTOD('  /  /    ')
LOCAL DDTINX	:= CTOD('  /  /    ')
LOCAL DDTFNX	:= CTOD('  /  /    ')
LOCAL NX        := 0

DEFAULT LVALPRO := .F. // NÃO VALIDA PROJETO                      
DEFAULT LVALVAZ := .T. // VALIDA DATA VAZIA                                                
DEFAULT LFORCEVACOLS := .F. // FORÇA VALIDAR O ACOLS

OAUX := IIF(OFOLDER:NOPTION==1, ODLGFRO, ODLGEQU)	// VERIFICAÇÃO SE AS DATAS ESTÃO EM CONFLITO

IF NTPSE == 'A' 
	OAUX	:= ODLGEQU
	IF (_CFIELD == "FPO_DTINI" .OR. _CFIELD == "FPO_DTFIM")
		LVALVAZ := .F. 
	ELSE
		LVALVAZ := .T. 
	ENDIF
ENDIF                                           

IF !OAUX:ACOLS[OAUX:NAT,LEN(OAUX:AHEADER)+2] .AND. !OAUX:ACOLS[OAUX:NAT,ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ "ES" .AND. ;	// NÃO DELETADO E STATUS != ES (ENTRADA/SAÍDA NF)
   ( OFOLDER:NOPTION <> 3 .OR. LFORCEVACOLS)
	CPROATU	:=	OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])==IF(OFOLDER:NOPTION==1,"FPO_PROJET","FPO_CODBEM")})]

	IF NTPSE == "A"  .AND. _CFIELD == "FPO_STATUS" .AND. _LRET
		IF  EMPTY(ALLTRIM(OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})])) .AND.;
			ALLTRIM(M->FPO_STATUS) == 'R'
			MSGSTOP("É NECESSÁRIO QUE O NUMERO DA AS SEJA INFORMADO!" ,'ATENÇÃO: INFORME AS DATAS CORRETAMENTE')
			_LRET := .F.
		ENDIF
	ENDIF

    IF LVALVAZ  .AND. _LRET
		DDTIATU	:=	OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
		DDTFATU	:=	OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]

    	IF DDTIATU == CTOD('  /  /    ') .OR. DDTFATU == CTOD('  /  /    ')
	    	MSGSTOP("VERIFIQUE AS DATAS" ,'ATENÇÃO: INFORME AS DATAS CORRETAMENTE')
			_LRET:= .F.
		ENDIF
	ELSEIF _LRET
		DDTIATU	:= _DDTINI
		DDTFATU	:= _DDTFIM
	ENDIF

	FOR NX := 1 TO LEN(OAUX:ACOLS)
			// NAO VALIDAR QUANDO FOR FOR A LINHA CORRENTE, SE ESTIVER DELETADO E STATUS != ES (ENTRADA/SAÍDA NF)
			IF OAUX:NAT != NX .AND. !OAUX:ACOLS[NX,LEN(OAUX:AHEADER)+2] .AND. !OAUX:ACOLS[NX,ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_STATUS"})] $ CNSVALID  .AND. _LRET
				CPRONX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2]) == IIF(OFOLDER:NOPTION==1,"FPO_PROJET","FPO_CODBEM")})]
				DDTINX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2]) == "FPO_DTINI"})]
				DDTFNX	:=	OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2]) == "FPO_DTFIM"})] 

				XTPACESSOR := ""
				IF NTPSE == "A" 
					CBEM	   :=  CCODFROTA	// OAUX:ACOLS[NX][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]
					XTPACESSOR := ST9->T9_ACESSOR
				ENDIF
				
				IF OFOLDER:NOPTION == 3 .AND. EMPTY(XTPACESSOR)
					CBEM := ODLGEQU:ACOLS[NX][ASCAN(ODLGEQU:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]
					XTPACESSOR := POSICIONE("ST9",1,XFILIAL("ST9")+CBEM,"T9_ACESSOR")
				ENDIF
				
				IF  ((DDTIATU >= DDTINX	.AND. DDTIATU <= DDTFNX) .OR. ( DDTFATU >= DDTINX .AND. DDTFATU <= DDTFNX)) .AND. ( IIF(LVALPRO, CPROATU == CPRONX, .T.) .AND. (NX <> OAUX:NAT))
					IF OFOLDER:NOPTION == 1
					    MSGSTOP("FAVOR CORRIJA AS DATAS: "+ CHAR(10) + DTOC(DDTIATU)+' A '+DTOC(DDTFATU)+'  !  '+DTOC(DDTINX)+' A '+DTOC(DDTFNX) ,'ATENÇÃO: IDENTIFICADO CONFLITO DE PERÍODOS')
						_LRET:= .F.
						OAUX:GOTO(NX)
						OAUX:OBROWSE:REFRESH()
						EXIT         
					ENDIF
				ENDIF
			ENDIF
		NEXT

ELSEIF ( OFOLDER:NOPTION == 3)
    AAREA := GETAREA()
	CDTIATU	:=	DTOS(_DDTINI)
	CDTFATU	:=	DTOS(_DDTFIM)
	_CODBEM := 	OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_CODBEM"})]
	_NRAS   := 	OAUX:ACOLS[OAUX:NAT][ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]

	IF SELECT("TEMP") > 0
		TEMP->(DBCLOSEAREA())
	ENDIF
	
	CQUERY := "SELECT FPO_FILIAL, FPO_FROTA, FPO_DTINI, FPO_DTFIM, FPO_NRAS, T9_ACESSOR "
	CQUERY += "FROM "  + RETSQLNAME("FPO") + " ZLG "
	CQUERY += "JOIN "  + RETSQLNAME("ST9") + " ST9 ON FPO_CODBEM = T9_CODBEM AND ST9.D_E_L_E_T_ = '' "
	CQUERY += "WHERE ZLG.D_E_L_E_T_ = ' ' "
	CQUERY += "AND FPO_CODBEM = '" + _CODBEM + "' AND FPO_STATUS NOT IN ('E','S','A') AND "		// MESMO ACESSÓRIO PORÉM COM STATUS DIFERENTE DE ENTRADA/SAÍDA NF
	CQUERY += "( FPO_DTINI BETWEEN '" + CDTIATU + "' AND '" + CDTFATU + "' OR "
	CQUERY += "  FPO_DTFIM BETWEEN '" + CDTIATU + "' AND '" + CDTFATU + "' OR "
	CQUERY += "  FPO_DTINI >= '" + CDTIATU + "' AND  FPO_DTINI <=  '" + CDTIATU + "' OR "
	CQUERY += "  FPO_DTINI >= '" + CDTFATU + "' AND  FPO_DTINI <= '" + CDTFATU + "' ) "

	CQUERY := CHANGEQUERY(CQUERY) 
	TCQUERY CQUERY NEW ALIAS "TEMP"
	
	IF TEMP->(!EOF())
		IF EMPTY(TEMP->FPO_FROTA)
			XMSG := "O ACESSÓRIO " + ALLTRIM(_CODBEM) + ", ENCONTRA-SE DISPONÍVEL NO PERÍODO DE "
			XMSG += SUBSTR(TEMP->FPO_DTINI,7,2) + "/" + SUBSTR(TEMP->FPO_DTINI,5,2) + "/" + SUBSTR(TEMP->FPO_DTINI,1,4)	+ " A "
			XMSG += SUBSTR(TEMP->FPO_DTFIM,7,2) + "/" + SUBSTR(TEMP->FPO_DTFIM,5,2) + "/" + SUBSTR(TEMP->FPO_DTFIM,1,4)	+ ", CONSULTE A PROGRAMAÇÃO DO MESMO!"
		ELSE
			XMSG := "O ACESSÓRIO " + ALLTRIM(_CODBEM) + ", ENCONTRA-SE INFORMADO NA FROTA " + ALLTRIM(TEMP->FPO_FROTA)
			XMSG += " - AS " + ALLTRIM(TEMP->FPO_NRAS) + ", NO PERÍODO DE "
			XMSG += SUBSTR(TEMP->FPO_DTINI,7,2) + "/" + SUBSTR(TEMP->FPO_DTINI,5,2) + "/" + SUBSTR(TEMP->FPO_DTINI,1,4)	+ " A "
			XMSG += SUBSTR(TEMP->FPO_DTFIM,7,2) + "/" + SUBSTR(TEMP->FPO_DTFIM,5,2) + "/" + SUBSTR(TEMP->FPO_DTFIM,1,4)	+ ", NA FILIAL " + TEMP->FPO_FILIAL
		ENDIF
		AVISO("ENCAVALAMENTO DE DATAS DO ACESSÓRIO",XMSG,{"OK"},2,"VERIFIQUE!")

		_LRET	:= .F.
	ELSE
		_LRET	:= .T.
	ENDIF
	
	IF SELECT("TEMP") > 0
		TEMP->(DBCLOSEAREA())
	ENDIF
	RESTAREA(AAREA)                                
	
	// CHAMAR RECURSIVA
	// VALIDO O ACOLS                                                                      
	LOCA05221(_DDTINI, _DDTFIM, CNSVALID, LVALPRO, LVALVAZ, _CFIELD, .T.)
ENDIF   

RETURN _LRET



// ======================================================================= \\
FUNCTION LOCA05222(CACESSORIO, DTINI, DTFIM)
// ======================================================================= \\

LOCAL AAREA    := GETAREA()
LOCAL LRET     := .T.
LOCAL CCODPROD
LOCAL NQTDESTO := 0
LOCAL CQUERY
LOCAL NSOMA    := 0
LOCAL NQTDZLG  := 0
LOCAL NX       := 0

CCODPROD:= POSICIONE("ST9",1,XFILIAL("ST9")+CACESSORIO, "T9_CODESTO") //CÓDIGO DO ESTOQUE PARA O ACESSÓRIO EM QUESTÃO.
NQTDESTO:= POSICIONE("SB2",1,XFILIAL("SB2")+CCODPROD, "B2_QATU") 
NSLDINI := POSICIONE("SB9",1,XFILIAL("SB9")+CCODPROD, "B9_QINI") 

//VERIFICA O SALDO GERADO   
CQUERY := " SELECT SUM(FPO_QTACES)FPO_QTACES "
CQUERY += " FROM "  + RETSQLNAME("FPO") + " ZLG "
CQUERY += " WHERE ZLG.D_E_L_E_T_ = ' ' "
CQUERY += " AND FPO_FILIAL = '"+XFILIAL("FPO")+"'"
CQUERY += " AND FPO_CODBEM = '" + CACESSORIO + "' AND FPO_STATUS NOT IN ('E','S','A')  "		// MESMO ACESSÓRIO PORÉM COM STATUS DIFERENTE DE ENTRADA/SAÍDA NF
CQUERY += " AND FPO_FROTA <> '" +SUBSTR(CFROTA,1,11)+"'"
CQUEFIL := " AND ( FPO_DTINI BETWEEN '" + DTINI + "' AND '" + DTFIM + "' "
CQUEFIL += " OR    FPO_DTFIM BETWEEN '" + DTINI + "' AND '" + DTFIM + "' "
CQUEFIL += " OR    FPO_DTINI >= '" + DTINI + "' AND  FPO_DTINI <=  '" + DTINI + "' "
CQUEFIL += " OR    FPO_DTINI >= '" + DTFIM + "' AND  FPO_DTFIM <=  '" + DTFIM + "' ) "

TCQUERY CQUERY+CQUEFIL NEW ALIAS "TMP"

IF TMP->(!EOF())
	NQTDZLG += TMP->FPO_QTACES	//SE ENCONTRADO VALOR ENCAVALADO DEVERÁ SUBTRAIR A QUANTIDADE DISPONIVEL.
ENDIF

//RETORNO DO SALDO EM ESTOQUE - VERIFICA A FILIAL CORRENTE
//VERIFICA O SALDO ATUAL E DO PRODUTO EM QUESTÃO

CQUERY := " SELECT ISNULL(SUM(D3_QUANT),0) -(SELECT ISNULL(SUM(D3_QUANT),0)  FROM "+RETSQLNAME("SD3")+" D3 WHERE D_E_L_E_T_ = '' AND D3.D3_FILIAL = '"+XFILIAL("SD3")+"' AND D3.D3_TM > 500  AND D3.D3_COD = '" + CCODPROD + "'  ) AS QTDESTO"
CQUERY += " FROM "+RETSQLNAME("SD3")+" D3 	
CQUERY += " WHERE D3.D_E_L_E_T_ = ''
CQUERY += "   AND D3.D3_FILIAL = '"+XFILIAL("SD3")+"'"
CQUERY += "   AND D3.D3_TM < 500
CQUERY += "   AND D3.D3_COD = '" + CCODPROD + "' "	

//VALOR TOTAL DOS PRODUTOS DENTRO DA EMPRESA DIFERENCIADO PELA FILIAL.
TCQUERY CQUERY NEW ALIAS "TMP2"

IF TMP2->(!EOF())
	NQTDLOC := TMP2->QTDESTO + NSLDINI// -> QUANTIDADE TOTAL DO ACESSÓRIO NA EMPRESA.
ENDIF 

IF NTPSE == "A"
	FOR NX := 1 TO LEN(ODLGEQU:ACOLS)
		IF ODLGEQU:ACOLS[ODLGEQU:NAT,2] == ODLGEQU:ACOLS[NX,2]  .AND. (ODLGEQU:NAT <> NX) //.AND. ODLGEQU:ACOLS[NX,5] == "R"
			IF ( DTOS(ODLGEQU:ACOLS[NX,3]) >= DTINI) .OR. ( DTOS(ODLGEQU:ACOLS[NX,4]) >= DTINI) // .OR. (DTOS(ODLGEQU:ACOLS[NX,7]) >= DTFIM)
				NSOMA += ODLGEQU:ACOLS[NX,7]
			ELSEIF (DTOS(ODLGEQU:ACOLS[NX,4]) >= DTFIM)
				NSOMA += ODLGEQU:ACOLS[NX,7]			
			ENDIF                                 
		ENDIF
	NEXT NX
ELSE
	FOR NX := 1 TO LEN(ODLGEQU:ACOLS)
		IF ODLGEQU:ACOLS[ODLGEQU:NAT,2] == ODLGEQU:ACOLS[NX,2] .AND. ODLGEQU:ACOLS[NX,5] == "R" .AND. (ODLGEQU:NAT <> NX)
			IF ( DTOS(ODLGEQU:ACOLS[NX,6]) >= DTINI) .OR. ( DTOS(ODLGEQU:ACOLS[NX,7]) >= DTINI) // .OR. (DTOS(ODLGEQU:ACOLS[NX,7]) >= DTFIM)
				NSOMA += ODLGEQU:ACOLS[NX,9]
			ELSEIF (DTOS(ODLGEQU:ACOLS[NX,7]) >= DTFIM)
				NSOMA += ODLGEQU:ACOLS[NX,9]			
			ENDIF                                 
		ENDIF
	NEXT NX
ENDIF

NQTDLOC -= NQTDZLG // NQTDLOC RECEBE A QUANTIDADE DOS PRODUTOS DENTRO DA EMPRESA - O VALOR PROGRAMADO
NQTDSLD := M->FPO_QTACES

IF .F. .AND. NQTDSLD > NQTDESTO
		LRET := .F.
		CMENSAGEM :="SEM SALDO DIPONÍVEL PARA O PERÍODO DE: "+CVALTOCHAR(STOD(DTINI))+" À "+CVALTOCHAR(STOD(DTFIM))+CHR(13)+CHR(10)// DO PERÍODO VALIDAÇÃO DO SALDO DISPONÍVEL NO PERÍODO 
		CMENSAGEM +="ESTOQUE ATUAL    :"+TRANSFORM(NQTDESTO,"@E 999,999")+CHR(13)+CHR(10)
		CMENSAGEM +="ESTOQUE PREVISTO :"+TRANSFORM(NQTDLOC,"@E 999,999")+CHR(13)+CHR(10)
		CMENSAGEM +="QUANTIDADE SOLICITADA :"+TRANSFORM(NSOMA+NQTDZLG+NQTDSLD,"@E 999,999")
		MSGALERT(CMENSAGEM,"ESTOQUE INSUFICIENTE DENTRO DO PERIODO " )
	//ENDIF
ENDIF

TMP->(DBCLOSEAREA())
TMP2->(DBCLOSEAREA())

RESTAREA(AAREA)      

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION MOVACES()
// ======================================================================= \\
// --> CHAMADA: MENU - "RETORNO DE ACESSÓRIOS" 

LOCAL _CNRAS	:= ODLGFRO:ACOLS[ODLGFRO:NAT][ASCAN(ODLGFRO:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]
LOCAL OOK       := LOADBITMAP( GETRESOURCES(), "LBOK"       )
LOCAL ONO   	:= LOADBITMAP( GETRESOURCES(), "LBNO"       )
LOCAL LOK		:= .F.
LOCAL _ARET		:= {}
LOCAL _AITRET	:= {}	
LOCAL _NI       := 0 

PRIVATE OLBX
PRIVATE ODLGMOV

_CQRY := " "
_CQRY += "	SELECT	A.FPO_MAILF, A.FPO_CARRET, B.T9_CODESTO, A.FPO_DESCAC, B1_UM, A.FPO_QTACES, B.T9_VALCPA, A.FPO_CODBEM, "
_CQRY += "		ROUND(B.T9_VALCPA*A.FPO_QTACES,2) AS TOTAL, A.FPO_ZLGSD3, "
_CQRY += "		(SELECT R_E_C_N_O_ FROM "+RETSQLNAME("FPO")+" D WHERE D.FPO_FILIAL = A.FPO_FILIAL "
_CQRY += "		AND D.FPO_NRAS = A.FPO_NRAS AND D.FPO_STATUS = 'R' "
_CQRY += "		AND D.FPO_CODBEM = A.FPO_CODBEM "
_CQRY += "		AND D.FPO_ZLGSD3 <> '' AND D.D_E_L_E_T_ = '' ) AS R_E_C_N_O_ "
		
_CQRY += "		FROM "+RETSQLNAME("FPO")+" A " 
_CQRY += "		INNER JOIN "+RETSQLNAME("ST9")+" B ON A.FPO_CODBEM = B.T9_CODBEM AND B.D_E_L_E_T_ = '' "
_CQRY += "		INNER JOIN "+RETSQLNAME("SB1")+" C ON C.B1_COD = B.T9_CODESTO AND C.D_E_L_E_T_ = '' "
		
_CQRY += "		WHERE "
_CQRY += "			A.FPO_FILIAL = '"+XFILIAL("FPO")+"' "
_CQRY += "			AND A.FPO_NRAS = '"+_CNRAS+"' "
_CQRY += "			AND A.FPO_STATUS = 'R' "
_CQRY += "			AND A.FPO_ZLGSD3 <> '' "
_CQRY += "			AND A.FPO_DEVACE = '01' "
_CQRY += "			AND A.D_E_L_E_T_ = '' "

IF SELECT("TMPZLG") > 0
	TMPFPO->( DBCLOSEAREA() )	
ENDIF	

TCQUERY _CQRY NEW ALIAS "TMPZLG"

WHILE TMPFPO->( !EOF() )
	AADD(_AITRET,{.F.,;
		STOD(TMPFPO->FPO_MAILF),;
		TMPFPO->FPO_CARRET,;
		TMPFPO->T9_CODESTO,;
		TMPFPO->FPO_DESCAC,;
		TMPFPO->B1_UM,;
		TMPFPO->FPO_QTACES,;
		TMPFPO->T9_VALCPA,;
		TMPFPO->TOTAL,;
		TMPFPO->FPO_ZLGSD3,;
		TMPFPO->R_E_C_N_O_})
	
	TMPFPO->( DBSKIP() )	
ENDDO			
	
IF LEN(_AITRET) > 0
	
	DEFINE MSDIALOG ODLGMOV FROM 00,00 TO 400,800 PIXEL TITLE "RETORNO DE ACESSÓRIOS"
	@ 5,5 SAY "SELECIONE OS ITENS:" OF ODLGMOV PIXEL

	@ 15,05 LISTBOX OLBX FIELDS HEADERS "SEL","DT.SAÍDA","P.LIST","CÓDIGO","DESCRIÇÃO","UM","QTD", "PRC.UNIT.","PRC.TOTAL" SIZE 393,150 OF ODLGMOV PIXEL
	OLBX:SETARRAY( _AITRET )

	OLBX:BLINE := {|| { IF( _AITRET[OLBX:NAT,1],OOK,ONO),;
	_AITRET[OLBX:NAT,2],;
	_AITRET[OLBX:NAT,3],;
	_AITRET[OLBX:NAT,4],;
	_AITRET[OLBX:NAT,5],;
	_AITRET[OLBX:NAT,6],;
	TRANSFORM(_AITRET[OLBX:NAT,7],"@E 999999"),;
	TRANSFORM(_AITRET[OLBX:NAT,8],"@E 999,999,999,999,999.99"),;
	TRANSFORM(_AITRET[OLBX:NAT,9],"@E 999,999,999,999,999.99")}}

	OLBX:BLDBLCLICK := {||TROCACOR(OLBX,_AITRET,ODLGMOV,.F.)}

	@ 180,305 	BUTTON OCONF PROMPT "CONFIRMA" SIZE 45 ,16 ACTION ( LOK:=.T.,ODLGMOV:END() )  OF ODLGMOV PIXEL
	@ 180,355 	BUTTON OCANC PROMPT "CANCELA"  SIZE 45 ,16 ACTION ( ODLGMOV:END() ) OF ODLGMOV PIXEL

	ACTIVATE MSDIALOG ODLGMOV CENTERED

	IF LOK
	    FOR _NI := 1 TO LEN(_AITRET)
			IF _AITRET[_NI,1]
				LJMSGRUN("AGUARDE..., EXECUTANDO PROCESSAMENTO...",, {|| _ARET := INCMOV(_AITRET[_NI,4], _AITRET[_NI,7], _CNRAS, _AITRET[_NI,10], "D") })
				IF _ARET[1,1]
					DBSELECTAREA("FPO")
					FPO->( DBGOTO(_AITRET[_NI,11]) )
					RECLOCK("FPO",.F.)
					FPO->FPO_DEVACE := "02"
					FPO->( MSUNLOCK() )
				ENDIF
			ENDIF
		NEXT _NI
    ENDIF

ELSE
	MSGSTOP("NAO EXISTEM REGISTROS PARA PROCESSAMENTO!" , "GPO - LOCT049.PRW") 
ENDIF	

ODLGEQU:OBROWSE:REFRESH()

RETURN NIL



// ======================================================================= \\
FUNCTION LOCA05223( _CPAR1, _CPAR2 )
// ======================================================================= \\

LOCAL   _LRET     := .T.

DEFAULT _CPAR1    := ""
DEFAULT _CPAR2    := ""

IF READVAR() == "M->FPO_STATUS"
	IF !EMPTY(_CPAR1)
		IF EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]) .AND. M->FPO_STATUS $ _CPAR1
			MSGALERT("STATUS INVÁLIDO. ESSE STATUS REQUER UMA AS, CADASTRE-A PRIMEIRO" , "GPO - LOCT049.PRW") 
			_LRET := .F.
		ENDIF
	ENDIF
	IF !EMPTY(_CPAR2)
		IF !EMPTY(OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_NRAS"})]) .AND. M->FPO_STATUS $ _CPAR2
			MSGALERT("STATUS INVÁLIDO. PARA ESSE STATUS NÃO PODE HAVER AS CADASTRADA!" , "GPO - LOCT049.PRW") 
			_LRET := .F.
		ENDIF
	ENDIF
ENDIF

RETURN _LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ ITVALHR   º AUTOR ³ IT UP BUSINESS     º DATA ³ 17/12/2019 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ ROTINAS PARA VALIDAR OS HORARIOS                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA05224()

LOCAL _LRET 	:= .T.   
LOCAL _CHORAINI	:= ""

IF UPPER(ALLTRIM(FUNNAME())) == "LOCA052"
	IF     UPPER(ALLTRIM(READVAR())) == "M->FPO_HRINI"
        _DDTINI     := ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]	                    
        _DDTFIM     := ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]	                    
		_CHORAINI	:= M->FPO_HRINI
		_CHORAFIM	:= ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRFIM"})]
	
	ELSEIF UPPER(ALLTRIM(READVAR())) == "M->FPO_HRFIM" 
        _DDTINI     := ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]	                    
        _DDTFIM     := ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]	                    
		_CHORAINI	:= ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})]
		_CHORAFIM	:= M->FPO_HRFIM
	
	ELSEIF UPPER(ALLTRIM(READVAR())) == "M->FPO_DTINI" 
        _DDTINI     := M->FPO_DTINI
        _DDTFIM     := ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})]
		_CHORAINI	:= ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})]
		_CHORAFIM	:= M->FPO_HRFIM
	
	ELSEIF UPPER(ALLTRIM(READVAR())) == "M->FPO_DTFIM" 
        _DDTINI     := ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]	                    
        _DDTFIM     := M->FPO_DTFIM	                    
		_CHORAINI	:= ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_HRINI"})]
		_CHORAFIM	:= M->FPO_HRFIM
		
	ENDIF
		 
	IF !EMPTY(_CHORAFIM)
		IF _DDTINI	== _DDTFIM
			IF (_CHORAINI > _CHORAFIM) .AND. (_CHORAFIM != "0000")
				_LRET := .F.
				_CRET := "O HORÁRIO NÃO PODE ULTRAPASSAR DE UM DIA PARA O OUTRO."
			ENDIF 
			IF _CHORAINI == _CHORAFIM
				_LRET := .F.
				_CRET := "O HORÁRIO INÍCIO E TÉRMINO DEVEM SER DIFERENTES."
			ENDIF
		ENDIF
	ENDIF

ENDIF

IF !_LRET
	MSGALERT("ATENÇÃO: "+_CRET , "GPO - LOCT049.PRW") 
ENDIF

RETURN _LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ ZLGDTINI º AUTOR ³ IT UP BUSINESS     º DATA ³ 19/12/2018  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ GATILHAR A DATA FINAL COM A DATA INICIAL                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA05225()

IF UPPER(ALLTRIM(FUNNAME())) == "LOCA052"
	ACOLS[N][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTFIM"})] := M->FPO_DTINI 	
ENDIF

RETURN .T.



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ ZLGDTFIM  º AUTOR ³ IT UP BUSINESS     º DATA ³ 19/12/2018 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ NAO PERMITIR A DATA FINAL SER <> DA INICIAL                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA05226()

LOCAL _LRET := .T.

IF UPPER(ALLTRIM(FUNNAME())) == "LOCA052"
	IF M->FPO_DTFIM <> OAUX:ACOLS[OAUX:NAT, ASCAN(OAUX:AHEADER,{|X|ALLTRIM(X[2])=="FPO_DTINI"})]
	 //	MSGALERT("AS DATAS INICIO E FINAL NÃO PODEM SER DIFERENTES.","ATENÇÃO!")
	 //	_LRET := .F.
	ENDIF
ENDIF

RETURN _LRET



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ DELZLG    º AUTOR ³ IT UP BUSINESS     º DATA ³ 29/08/2019 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDA E EXECUTA A DELEÇÃO DA ZLG                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA05227()  		// VALIDA DELEÇÃO DA ZLG

LOCAL _LRET		:= .T.

IF EXISTBLOCK("LC49DZLG") 		// PONTO DE ENTRADA PARA VALIDAÇÕES ADICIONAIS NA DELEÇÃO DAS LINHAS DA ZLG
	_LRET := EXECBLOCK("LC49DZLG",.T.,.T.,{ODLGFRO})
ENDIF

ODLGFRO:OBROWSE:REFRESH()

RETURN _LRET
