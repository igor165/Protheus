#INCLUDE "loca005.ch" 

/*/{PROTHEUS.DOC} LOCA005.PRW
ITUP BUSINESS - TOTVS RENTAL
CONTROLE DE MINUTA
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/

#INCLUDE "RWMAKE.CH"
#INCLUDE "TOTVS.CH"
#INCLUDE "FWBROWSE.CH"
#INCLUDE "TOPCONN.CH"


FUNCTION LOCA005
LOCAL   AROTINAUSU
LOCAL   CFILTRO

PRIVATE LVERZBX								// HABILITA CONTROLE DE MINUTA
PRIVATE CCADASTRO := STR0001 //"CONTROLE DE MINUTA"
PRIVATE AROTINA   := {}
PRIVATE CDELFUNC  := ".T." 					// VALIDACAO PARA A EXCLUSAO. PODE-SE UTILIZAR EXECBLOCK
PRIVATE CSTRING   := "FPF"

//IF !LOCA061() 							// --> VALIDAÇÃO DO LICENCIAMENTO (WS) DO GPO 
//	RETURN 
//ENDIF 

//	U_AJREMOCAO()							// CRIA PARÂMETROS, TABELAS, CONSULTAS E ETC - DESCONTINUADO, POIS ESTÁ NO WIZARD DE INSTALAÇÃO.

	LVERZBX := GETMV("MV_LOCX097") 			// HABILITA CONTROLE DE MINUTA

	IF !LVERZBX 							// HABILITA CONTROLE DE MINUTA
		MSGALERT("MV_LOCX097 ==> CONTROLE DE MINUTA DESABILITADO." , STR0002) //"GPO - CADZBX.PRW"
		RETURN NIL
	ENDIF

	AADD(AROTINA,{STR0003       ,"AXVISUAL"    ,0,2}) //"VISUALIZAR"
	AADD(AROTINA,{STR0004          ,"LOCA00503"   ,0,6}) //"LEGENDA"
	AADD(AROTINA,{STR0005    ,"LOCA00504"   ,0,6}) //"ACEITA MINUTA"
	AADD(AROTINA,{STR0006     ,"LOCA00505"   ,0,6}) //"BAIXA MINUTA"
	AADD(AROTINA,{STR0007   ,"LOCA00506"   ,0,6}) //"CANCELA MINUTA"
	AADD(AROTINA,{STR0008   ,"LOCA00507"   ,0,6}) //"ESTORNA MINUTA"
//	AADD(AROTINA,{"IMPRIMIR MINUTA"  ,"LOCA00524"   ,0,6})
	AADD(AROTINA,{STR0009,"LOCA00502",0,6}) //"IMPR.PARTE DIARIA"
	AADD(AROTINA,{STR0010  ,"LOCA00501" ,0,6}) //"MOBILIZ/DESMOB."
	AADD(AROTINA,{STR0011    ,"LOCA00508"   ,0,6}) //"TROCA RECURSO"

	IF EXISTBLOCK("LOCA006") 				// PONTO DE ENTRADA PARA ALTERAR O AROTINA
		AROTINAUSU := EXECBLOCK("LOCA006",.F.,.F.,AROTINA) 
		IF VALTYPE(AROTINAUSU)=="A"
			AROTINA := ACLONE(AROTINAUSU)
		ENDIF
	ENDIF

	IF __CUSERID == "000000" 				// ADMIN 
	 //	AADD(AROTINA , {"COMPATIBILIZA BASE" , "LOCA00523" , 0 , 3}) 
	 //	LOCA00523() 
	ENDIF 

	DBSELECTAREA(CSTRING)
	DBSETORDER(1)

	CFILTRO := "FPF_FILIAL='"+XFILIAL("FPF")+"'"

	MBROWSE(6,1,22,75,CSTRING,,,,,,LOCA00503(),,,,,,,,CFILTRO)
 
RETURN NIL



// ======================================================================= \\
FUNCTION LOCA00501() 
// ======================================================================= \\
// --> "MOBILIZ/DESMOB." --> IMPRESSÃO MOBILIZAÇÃO/DESMOBILIZAÇÃO DE CONTRAPESOS

LOCAL AAREA   := GETAREA()
LOCAL NMOBDES := AVISO( STR0012, STR0013, {STR0014,STR0015,STR0016}) //"IMPRESSÃO DE MOB./DESMOB."###"ROTINA PARA IMPRESSÃO DE CONTRAPESOS, SELECIONE A OPÇÃO:"###"MOBILIZ."###"DESMOB."###"CANCELAR"

IF ! STRZERO(NMOBDES,1) $ "1;2"	 										// CANCELADO PELO USUÁRIO
	RETURN NIL 
ENDIF 

//U_RELMINUEQ( 1 , IIF( NMOBDES==1 , STR0017 , STR0018) ) 	// 1 ABRE DIALOGO DE IMPRESSAO //"MOBILIZAÇÃO"###"DESMOBILIZAÇÃO"

RESTAREA(AAREA)

RETURN NIL



// ======================================================================= \\
FUNCTION LOCA00502() 
// ======================================================================= \\
// --> "IMPR.PARTE DIARIA" --> IMPRESSÃO PARTE DIÁRIA

LOCAL AAREA  := GETAREA()
LOCAL NENTRET
LOCAL NOPC   := 1
/*
LOCAL ORADIO
LOCAL ODLG 
LOCAL LEND   := .T.
LOCAL AOPC   := {}

AADD( AOPC , "TRANSPORTE RODOVIARIO" )
AADD( AOPC , "FRETE PLATAFORMA" )
AADD( AOPC , "PLATAFORMA" )
AADD( AOPC , "GUINDASTE" )
AADD( AOPC , "FRETE DE LOCAÇÃO" )
IF FPF->FPF_STATUS != "2"
	MSGSTOP("A MINUTA PRECISA ESTAR CONFIRMADA!" , "GPO - CADZBX.PRW") 
	RETURN NIL 
ENDIF 
DEFINE MSDIALOG ODLG TITLE "IMPRESSÃO MINUTA" FROM 0,0 TO 220,350 PIXEL
	@ 05, 05 SAY "SELECIONE A OPÇÃO DESEJADA:" OF ODLG PIXEL
	ORADIO := TRADMENU():NEW(20,10,AOPC,{|U| IIF(PCOUNT()==0, NOPC, NOPC:=U)},ODLG,,,,,,,,100,40,,,,.T.)
	TBUTTON():NEW(090,005,'SAIR',ODLG,{|| LEND := .T., ODLG:END() },40,15,,,,.T.) 		// SAI DA ROTINA
	TBUTTON():NEW(090,130,'OK'  ,ODLG,{|| LEND := .F., ODLG:END() },40,15,,,,.T.)
ACTIVATE MSDIALOG ODLG CENTERED
*/
DO CASE
CASE FPF->FPF_TIPOSE == "L"
	NOPC := 3
CASE FPF->FPF_TIPOSE == "T"
	NOPC := 1
OTHERWISE
	NOPC := 4
ENDCASE

FP0->( DBSETORDER(1) )
FP0->( DBSEEK( XFILIAL("FP0") + FPF->FPF_PROJET) )

ST9->( DBSETORDER(1) )
ST9->( DBSEEK( XFILIAL("ST9") + FPF->FPF_FROTA) )

DO CASE
CASE NOPC == 1 
	// --> SOMENTE SE FOR FQ5_TPAS == F OU T (FRANK ZWARG FUGA EM 16/08/16 A PEDIDO DO ANDERSON)
	FQ5->( DBSETORDER(9) )	//	FQ5_FILIAL, FQ5_AS, FQ5_VIAGEM
	FQ5->( DBSEEK( XFILIAL("FQ5") + FPF->FPF_AS, .T. ) )
	IF     FQ5->FQ5_TPAS == "T"
		CDESCTIPO:= STR0019 //"TRANSPORTE RODOVIARIO"
		LOCR029( 1, CDESCTIPO )
	ELSEIF FQ5->FQ5_TPAS == "F"
	    LOCR027( 1 )  
	ENDIF

CASE NOPC == 2
	NENTRET := AVISO( STR0020, STR0021, {STR0022,STR0023,STR0016}) //"IMPRESSÃO DE ENTREGA/RETIRADA"###"IMPRESSÃO DA MINUTA, SELECIONE A OPÇÃO:"###"ENTREGA"###"RETIRADA"###"CANCELAR"
	IF STRZERO(NENTRET,1) $ "1;2"
		CDESCTIPO := IIF( NENTRET == 1, STR0024, STR0025 ) //"ENTREGA DE EQUIPAMENTO"###"RETIRADA DE EQUIPAMENTO"
		//U_RELMINFRT( 1, CDESCTIPO )
	ENDIF

CASE NOPC == 3
	NENTRET := AVISO( STR0020, STR0021, {STR0022,STR0023,STR0016}) //"IMPRESSÃO DE ENTREGA/RETIRADA"###"IMPRESSÃO DA MINUTA, SELECIONE A OPÇÃO:"###"ENTREGA"###"RETIRADA"###"CANCELAR"
	IF STRZERO(NENTRET,1) $ "1;2"
		CDESCTIPO := IIF( NENTRET == 1, STR0024, STR0025 ) //"ENTREGA DE EQUIPAMENTO"###"RETIRADA DE EQUIPAMENTO"
		LOCR028( 1, CDESCTIPO )
	ENDIF

CASE NOPC == 4
	LOCR030()

CASE NOPC == 5
	LOCR027(1) 
		
ENDCASE

RESTAREA(AAREA)

RETURN NIL 



// ======================================================================= \\
FUNCTION LOCA00503(NRECNO)
// ======================================================================= \\
// --> "LEGENDA"

LOCAL NPOS,ASTATUS,ALEGENDA,ACORES

ASTATUS  := FSTATUS("MBROWSE") 				// MONTA OS STATUS

ALEGENDA := {}
FOR NPOS:=1 TO LEN(ASTATUS)
	AADD(ALEGENDA,{ASTATUS[LEN(ALEGENDA)+1,1],ASTATUS[LEN(ALEGENDA)+1,2]})
NEXT

IF NRECNO==NIL 								// CHAMADA PELO MBROWSE NÃO PASSA O RECNO()
	ACORES := {} 
	FOR NPOS:=1 TO LEN(ASTATUS)
		AADD(ACORES,{ASTATUS[LEN(ACORES)+1,3],ASTATUS[LEN(ACORES)+1,1]})
	NEXT
	RETURN(ACORES)
ELSE 										// CHAMADA PELO AROTINA PASSA O RECNO()
	BRWLEGENDA(CCADASTRO,OEMTOANSI("STATUS"),ALEGENDA)
	RETURN(.T.)
ENDIF

RETURN



// ======================================================================= \\
STATIC FUNCTION FSTATUS(CQUAL)  
// ======================================================================= \\
// --> MONTA OS STATUS
LOCAL ASTATUS := {} 

DO CASE
CASE UPPER(CQUAL)==UPPER("MBROWSE")
	AADD(ASTATUS,{"BR_VERDE"   ,STR0026  ,'FPF_STATUS=="1"'}) //"MINUTA PREVISTA"
	AADD(ASTATUS,{"BR_AZUL"    ,STR0027,'FPF_STATUS=="2"'}) //"MINUTA CONFIRMADA"
	AADD(ASTATUS,{"BR_VERMELHO",STR0028   ,'FPF_STATUS=="3"'}) //"MINUTA BAIXADA"
	AADD(ASTATUS,{"BR_PINK"    ,STR0029 ,'FPF_STATUS=="4"'}) //"MINUTA ENCERRADA"
	AADD(ASTATUS,{"BR_PRETO"   ,STR0030 ,'FPF_STATUS=="5"'}) //"MINUTA CANCELADA"
	AADD(ASTATUS,{"BR_MARROM"  ,STR0031    ,'FPF_STATUS=="6"'}) //"MINUTA MEDIDA"
CASE UPPER(CQUAL)==UPPER("FWBROWSE")
	AADD(ASTATUS,{"BR_VERDE"   ,STR0026  ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,NPOSSTA]=="1"'}) //"MINUTA PREVISTA"
	AADD(ASTATUS,{"BR_AZUL"    ,STR0027,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,NPOSSTA]=="2"'}) //"MINUTA CONFIRMADA"
	AADD(ASTATUS,{"BR_VERMELHO",STR0028   ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,NPOSSTA]=="3"'}) //"MINUTA BAIXADA"
	AADD(ASTATUS,{"BR_PINK"    ,STR0029 ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,NPOSSTA]=="4"'}) //"MINUTA ENCERRADA"
	AADD(ASTATUS,{"BR_PRETO"   ,STR0030 ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,NPOSSTA]=="5"'}) //"MINUTA CANCELADA"
	AADD(ASTATUS,{"BR_MARROM"  ,STR0031    ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,NPOSSTA]=="6"'}) //"MINUTA MEDIDA"
CASE UPPER(CQUAL)==UPPER("LOCA00516")
	AADD(ASTATUS,{"BR_VERDE"   ,STR0026  ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,8]=="1"'}) //"MINUTA PREVISTA"
	AADD(ASTATUS,{"BR_AZUL"    ,STR0027,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,8]=="2"'}) //"MINUTA CONFIRMADA"
	AADD(ASTATUS,{"BR_VERMELHO",STR0028   ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,8]=="3"'}) //"MINUTA BAIXADA"
	AADD(ASTATUS,{"BR_PINK"    ,STR0029 ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,8]=="4"'}) //"MINUTA ENCERRADA"
	AADD(ASTATUS,{"BR_PRETO"   ,STR0030 ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,8]=="5"'}) //"MINUTA CANCELADA"
	AADD(ASTATUS,{"BR_MARROM"  ,STR0031    ,'OBROWSE:DATA():AARRAY[OBROWSE:NAT,8]=="6"'}) //"MINUTA MEDIDA"
ENDCASE

RETURN(ASTATUS)



// ======================================================================= \\
FUNCTION LOCA00504() 
// ======================================================================= \\
// --> "ACEITA MINUTA"

ACEIT2() 

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION ACEIT2()
// ======================================================================= \\
// --> "ACEITA MINUTA" - ACEITE DA MINUTA CONSIDERANDO DATA E HORA

LOCAL AINFO,APOSOBJ
LOCAL ODLG, ACOLS0
LOCAL AAREA        := GETAREA()
LOCAL CPERG        := "LOCP071"
LOCAL CTITJAN      := STR0032 //"ACEITE DA MINUTA"
LOCAL AZLGSTATUS   := {}
LOCAL AOBJECTS     := {}
LOCAL ASIZEAUT     := MSADVSIZE()
LOCAL ACPOSIM      := {"FPF_MINUTA","FPF_PROJET","FPF_OBRA","FPF_DATA","FPF_FROTA","FPF_AS","FPF_HORAI","FPF_HORAF","FPF_STATUS"}
LOCAL AALTER       := {"FPF_HORAI" ,"FPF_HORAF", "FPF_STATUS"}
LOCAL AHEADER      := {}
LOCAL ACOLS        := {}
LOCAL CBXSTAT      := ""
LOCAL NI           := 0 
LOCAL NZLGSTATUS   := 0 
//LOCAL CZLGSTATUS := "R"  //1=DISPO;2=MOB;3=TRAB;4=DESMOBI;5=MONTA;6=DESMONT;9=M.PREV;C=M.CORR;R=RESERVADO;E=ENTRADA NF;S=SAIDA NF;A=ACERTO

PRIVATE NRECNOATU
PRIVATE CPROD
PRIVATE CPROA
PRIVATE COBRD
PRIVATE COBRA
PRIVATE CNASD
PRIVATE CNASA
PRIVATE CFROD
PRIVATE CFROA
PRIVATE DDATD
PRIVATE DDATA

//VALIDPERG(CPERG)

IF ! PERGUNTE(CPERG,.T.) 
	RETURN NIL
ENDIF

NRECNOATU := IF(MV_PAR01==1,0,FPF->(RECNO())) 	// CONSIDERA PARAMETROS ABAIXO?
CPROD     := MV_PAR02 						// PROJETO DE
CPROA     := MV_PAR03 						// PROJETO ATE
COBRD     := MV_PAR04 						// OBRA DE
COBRA     := MV_PAR05 						// OBRA ATE
CNASD     := MV_PAR06 						// AS DE
CNASA     := MV_PAR07 						// AS ATE
CFROD     := MV_PAR08 						// FROTA DE
CFROA     := MV_PAR09 						// FROTA ATE
DDATD     := MV_PAR10 						// DATA DE
DDATA     := MV_PAR11 						// DATA ATE

XZLGSTATUS := MONTACOMBO("FPO_STATUS") 		// CARREGA OS ITENS DO COMBOBOX DA SX3
FOR NZLGSTATUS:=1 TO LEN(XZLGSTATUS)
	IF ALLTRIM(XZLGSTATUS[NZLGSTATUS,3]) $ "2;3;4;5;6;9;R"
		AADD(AZLGSTATUS, XZLGSTATUS[NZLGSTATUS,2] )
		CBXSTAT += IIF( EMPTY(CBXSTAT),"",";" ) + ALLTRIM( XZLGSTATUS[NZLGSTATUS,2] )
	ENDIF
NEXT NZLGSTATUS 

	IF EXISTBLOCK("ZBXACTEL")				// PONTO DE ENTRADA PARA INCLUSAO DE CAMPOS NA TELA DE ACEITE DE MINUTA
		ACPOSIM := EXECBLOCK("ZBXACTEL",.T.,.T.,{ACPOSIM})
	ENDIF
AADD(AHEADER, {"", "SELECAO", "@BMP", 5, 0, /*VALID*/, /*USADO*/, "C" } )
(LOCXCONV(1))->( DBSETORDER(2) )
FOR NI := 1 TO LEN(ACPOSIM)
	IF (LOCXCONV(1))->( DBSEEK( ACPOSIM[NI], .T. ) )
		CVALID := ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_VALID"))   
		CBOX   := ALLTRIM(GetSx3Cache(&(LOCXCONV(2)),"X3_CBOX"))    
		IF ALLTRIM( GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") ) $ "FPF_HORAI;FPF_HORAF"      
			CVALID += IIF( EMPTY(CVALID), "", ".AND.") + "LOCA00512()"
		ENDIF
		IF ALLTRIM( GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") ) == "FPF_STATUS"
			CBOX := CBXSTAT
		ENDIF
		
		AADD(AHEADER, {GetSx3Cache(&(LOCXCONV(2)),"X3_TITULO"), GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO"),;
		GetSx3Cache(&(LOCXCONV(2)),"X3_PICTURE"), GetSx3Cache(&(LOCXCONV(2)),"X3_TAMANHO"), GetSx3Cache(&(LOCXCONV(2)),"X3_DECIMAL"), CVALID, /*USADO*/,;
		GetSx3Cache(&(LOCXCONV(2)),"X3_TIPO"), GetSx3Cache(&(LOCXCONV(2)),"X3_F3"), /*SX3->X3_CONTEXT*/ ,CBOX,;
		GetSx3Cache(&(LOCXCONV(2)),"X3_RELACAO"), /*SX3->X3_WHEN*/, /*SX3->X3_VISUAL*/, GetSx3Cache(&(LOCXCONV(2)),"X3_VLDUSER"),;
		GetSx3Cache(&(LOCXCONV(2)),"X3_PICTVAR"), GetSx3Cache(&(LOCXCONV(2)),"X3_OBRIGAT") } )
	ENDIF
NEXT NI 

AADD(AHEADER, {"", "RECORD", "", 9, 0, /*VALID*/, /*USADO*/, "N" } )

FMONTAZBX("QRYZBX",CPERG) 					// MONTA A QUERY

WHILE ! EOF()
	ACOLS0 := {}
	AADD( ACOLS0, IIF(NRECNOATU==0, "LBNO", "LBOK") )

	FOR NI := 2 TO LEN( AHEADER ) - 1
		AADD( ACOLS0, FIELDGET( FIELDPOS( AHEADER[NI,2] ) ) )
		IF AHEADER[NI,2] == "FPF_HORAI " .AND. EMPTY( ATAIL( ACOLS0 ) )
			ATAIL( ACOLS0 ) := FQ5_HORINI
		ENDIF
		IF AHEADER[NI,2] == "FPF_HORAF " .AND. EMPTY( ATAIL( ACOLS0 ) )
			ATAIL( ACOLS0 ) := FQ5_HORFIM
		ENDIF
		IF AHEADER[NI,2] == "FPF_STATUS" 	//.AND. EMPTY( ATAIL( ACOLS0 ) )
			ATAIL( ACOLS0 ) := "R"
		ENDIF
	NEXT

	AADD( ACOLS0, FPF_RECNO )				// RECNO
	AADD( ACOLS0, .F. )
	AADD( ACOLS, ACOLS0 )
	DBSKIP()
ENDDO 

DBCLOSEAREA()
RESTAREA(AAREA) 

IF LEN(ACOLS) == 0
	MSGALERT(STR0033 , STR0002) //"NÃO EXISTEM MINUTAS NO INTERVALO SELECIONADO."###"GPO - CADZBX.PRW"
	RETURN NIL
ENDIF


AADD(AOBJECTS,{100,010,.T., .T. } )  		// ENCHOICE
AADD(AOBJECTS,{100,090,.T., .T. } )  		// MSGETDADOS

AINFO   :={ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
APOSOBJ :=MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )

DEFINE MSDIALOG ODLG FROM ASIZEAUT[7],0 TO ASIZEAUT[6],ASIZEAUT[5] TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL
	OGETD := MSNEWGETDADOS():NEW( APOSOBJ[1][1], APOSOBJ[1][2], APOSOBJ[2][3], APOSOBJ[2][4], 2 , /*CLINHAOK*/, /*CTUDOOK*/, /*CINICPOS*/, AALTER,,,,, "ALLWAYSTRUE()", ODLG, AHEADER, ACOLS )
	OGETD:OBROWSE:BLDBLCLICK   := {|| MUDASEL( OGETD ) }
	OGETD:OBROWSE:BHEADERCLICK := {| OOBJ, NCOL| MUDATOT( OOBJ, NCOL, OGETD ) }
ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR( ODLG, {|| TOKACEIT(OGETD, ODLG) },{|| CLOSE(ODLG)})

RETURN NIL



// ======================================================================= \\
FUNCTION LOCA00505() 
// ======================================================================= \\
// --> "BAIXA MINUTA" 

FZBXBAIX() 

RETURN



// ======================================================================= \\
STATIC FUNCTION FZBXBAIX()
// ======================================================================= \\
// --> "BAIXA MINUTA" 

LOCAL CPERG      := "LOCP072"
LOCAL CTITJAN    := STR0034 //"BAIXA DA MINUTA"
LOCAL AOBJECTS , AINFO , APOSGET , APOSOBJ , ASIZEAUT 
LOCAL ABUTTONS   := {}
LOCAL BMARK      := { || IF(LOCA00510(OBROWSE),'LBOK','LBNO') }
LOCAL BLDBLCLICK := { |OBROWSE| LOCA00509(OBROWSE) }
LOCAL BHEADERCLI := { |OBROWSE| LOCA00511(OBROWSE) }
LOCAL OPANEL1 , OPANEL2 , ACOLS , ACOLS0 , AHEADER , BHEADER , AESTRU , CCAMPO , NSTATUS , ASTATUS , LOK := .F. 
LOCAL NMOTIP , XMOTIP , AMOTIP 
LOCAL NPOS       := 0 

PRIVATE CHALMI , CHALMF , CHJANI , CHJANF , COBS 

//VALIDPERG(CPERG)
IF !PERGUNTE(CPERG,.T.)
	RETURN
ENDIF

PRIVATE NRECNOATU := IIF(MV_PAR01==1 , 0 , FPF->(RECNO()))  // CONSIDERA PARAMETROS ABAIXO?
PRIVATE CPROD     := MV_PAR02 								// PROJETO DE
PRIVATE CPROA     := MV_PAR03 								// PROJETO ATE
PRIVATE COBRD     := MV_PAR04 								// OBRA DE
PRIVATE COBRA     := MV_PAR05 								// OBRA ATE
PRIVATE CNASD     := MV_PAR06 								// AS DE
PRIVATE CNASA     := MV_PAR07 								// AS ATE
PRIVATE CFROD     := MV_PAR08 								// FROTA DE
PRIVATE CFROA     := MV_PAR09 								// FROTA ATE
PRIVATE DDATD     := MV_PAR10 								// DATA DE
PRIVATE DDATA     := MV_PAR11 								// DATA ATE

XMOTIP := MONTACOMBO("FPP_MOTIVO")  		// CARREGA OS ITENS DO COMBOBOX DA SX3
AMOTIP := {}
FOR NMOTIP:=1 TO LEN(XMOTIP)
	AADD(AMOTIP,XMOTIP[NMOTIP,2])
NEXT

PRIVATE NPOSMAR , NPOSPRO , NPOSOBR , NPOSDAT , NPOSFRO , NPOSNAS , NPOSMIN , NPOSMED , NPOSHOI , NPOSHOF , NPOSHOP , NPOSMOT , NPOSMIM , NPOSSTA
PRIVATE NPOSALI , NPOSALF , NPOSJAI , NPOSJAF , NPOSOBS , AOBJGET

PRIVATE OBROWSE , ODLG
PRIVATE OSAYHRINI, OSAYHRFIM, OSAYHRPR, OSAYMOTPR, OSAYALMIN, OSAYALMFI, OSAYJANIN, OSAYJANFI, OSAYOBS, OSAYMIMAN
PRIVATE OGETHRINI, OGETHRFIM, OGETHRPR, OGETMOTPR, OGETALMIN, OGETALMFI, OGETJANIN, OGETJANFI, OGETOBS, OGETMIMAN
PRIVATE CHORAI,CHORAF,CHORAP,CMOTIP,CMINUM
PRIVATE CMARCA
PRIVATE ARECNOSZBX  						// GUARDA OS RECNOS DO ZBX

CHORAI := SPACE(05)
CHORAF := SPACE(05)
CHORAP := SPACE(05)
CMOTIP := SPACE(01)
CMINUM := SPACE(06)

CHALMI := SPACE(05)
CHALMF := SPACE(05)
CHJANI := SPACE(05)
CHJANF := SPACE(05)
COBS   := ""

XMOTIP := MONTACOMBO("FPP_MOTIVO") 			// CARREGA OS ITENS DO COMBOBOX DA SX3
AMOTIP := {}
FOR NMOTIP:=1 TO LEN(XMOTIP)
	AADD(AMOTIP,XMOTIP[NMOTIP,2])
NEXT

AOBJGET := ARRAY(10)						// OBJETOS GET PARA EDIÇÃO

//WHILE .T.
	CMARCA     := GETMARK()
	ARECNOSZBX := {} 						// GUARDA OS RECNOS DO ZBX
	ACOLS      := {} 

	FMONTAZBX("QRYZBX",CPERG) 				// MONTA A QUERY

	QRYFPF->(DBGOTOP())
	WHILE QRYFPF->(!EOF())
		FPF->( DBGOTO( QRYFPF->FPF_RECNO ) )

		AESTRU:={}    
		CCAMPO:=""          ;QRYFPF->(AADD(AESTRU,{IF(NRECNOATU==0,SPACE(LEN(CMARCA)),CMARCA),""    ,""                             ,""                           ,""                              ,0,00                              ,0                               }));NPOSMAR:=LEN(AESTRU)
		CCAMPO:="FPF_PROJET";QRYFPF->(AADD(AESTRU,{&CCAMPO ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSPRO:=LEN(AESTRU)
		CCAMPO:="FPF_OBRA"  ;QRYFPF->(AADD(AESTRU,{&CCAMPO ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSOBR:=LEN(AESTRU)
		CCAMPO:="FPF_DATA"  ;QRYFPF->(AADD(AESTRU,{&CCAMPO ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSDAT:=LEN(AESTRU)
		CCAMPO:="FPF_FROTA" ;QRYFPF->(AADD(AESTRU,{&CCAMPO ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSFRO:=LEN(AESTRU)
		
		IF FPF->(FIELDPOS("FPF_XNOMRE")) > 0
		   CCAMPO:="FPF_XNOMRE" ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSNOM:=LEN(AESTRU)
        ENDIF
		
		CCAMPO:="FPF_AS"    ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSNAS:=LEN(AESTRU)
		CCAMPO:="FPF_MINUTA";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMIN:=LEN(AESTRU)
		CCAMPO:="FPF_NROMED";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMED:=LEN(AESTRU)
		CCAMPO:="FPF_HORAI" ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOI:=LEN(AESTRU)
		CCAMPO:="FPF_HORAF" ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOF:=LEN(AESTRU)

		CCAMPO:="FPF_BXALMI" ;FPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSALI:=LEN(AESTRU)
		CCAMPO:="FPF_BXALMF" ;FPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSALF:=LEN(AESTRU)
		CCAMPO:="FPF_BXJANI" ;FPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSJAI:=LEN(AESTRU)
		CCAMPO:="FPF_BXJANF" ;FPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSJAF:=LEN(AESTRU)
		CCAMPO:="FPF_BXOBS"  ;FPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSOBS:=LEN(AESTRU)

		CCAMPO:="FPF_HRPARA";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOP:=LEN(AESTRU)
		CCAMPO:="FPF_MOTIVO";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMOT:=LEN(AESTRU)
		CCAMPO:="FPF_MINUTM";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMIM:=LEN(AESTRU)
		CCAMPO:="FPF_STATUS";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSSTA:=LEN(AESTRU)
	
		QRYFPF->(AADD(ARECNOSZBX,FPF_RECNO))  //GUARDA OS RECNOS DO ZBX
	
		ACOLS0:={}
		FOR NPOS:=1 TO LEN(AESTRU)
			AADD(ACOLS0,AESTRU[NPOS,1])
		NEXT
		AADD(ACOLS,ACOLS0)
	
		QRYFPF->(DBSKIP())
	ENDDO 
	
	IF LEN(ACOLS)==0
		MSGALERT(STR0033 , STR0002) //"NÃO EXISTEM MINUTAS NO INTERVALO SELECIONADO."###"GPO - CADZBX.PRW"
		RETURN
	ENDIF

	AHEADER := {}
	FOR NPOS:=2 TO LEN(AESTRU)
		BHEADER := "{||ACOLS[OBROWSE:AT(),"+STRZERO(NPOS,2)+"]}"
		AADD(AHEADER,{AESTRU[NPOS,3],&BHEADER,AESTRU[NPOS,4],AESTRU[NPOS,5],AESTRU[NPOS,6],AESTRU[NPOS,7],AESTRU[NPOS,8]})
	NEXT NPOS 
	
	IF OMAINWND:NCLIENTWIDTH > 800
		AOBJECTS:={}
		AADD(AOBJECTS,{100,010,.T., .T. } )	// ENCHOICE
		AADD(AOBJECTS,{100,090,.T., .T. } )	// MSGETDADOS
	ELSE
		AOBJECTS:={}
		AADD(AOBJECTS,{100,012,.T., .T. } )	// ENCHOICE
		AADD(AOBJECTS,{100,088,.T., .T. } )	// MSGETDADOS
	ENDIF
	ASIZEAUT := MSADVSIZE()
	AINFO    := {ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
	APOSOBJ  := MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )
	APOSGET  := MSOBJGETPOS((ASIZEAUT[3]-ASIZEAUT[1]),315,{{004,024,240,270}} )
	
	DEFINE MSDIALOG ODLG FROM ASIZEAUT[7],0 TO ASIZEAUT[6],ASIZEAUT[5] TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL
	@ APOSOBJ[1,1],APOSOBJ[1,2] MSPANEL OPANEL1 PROMPT "" SIZE 10,40 OF ODLG
	@ APOSOBJ[2,1],APOSOBJ[2,2] MSPANEL OPANEL2 PROMPT "" SIZE 10,10 OF ODLG
	OPANEL1:ALIGN:=CONTROL_ALIGN_TOP
	OPANEL2:ALIGN:=CONTROL_ALIGN_ALLCLIENT

	@ 005,005 SAY      OSAYHRINI PROMPT OEMTOANSI(STR0035 )  SIZE 050, 8 OF OPANEL1 PIXEL  //"HORA INICIAL:"
	@ 004,040 MSGET    OGETHRINI VAR CHORAI PICTURE "99:99"          SIZE  15, 8 OF OPANEL1 PIXEL VALID LOCA00520(ACOLS,AHEADER)

	@ 018,005 SAY      OSAYHRFIM PROMPT OEMTOANSI(STR0036   )  SIZE 050, 8 OF OPANEL1 PIXEL  //"HORA FINAL:"
	@ 018,040 MSGET    OGETHRFIM VAR CHORAF PICTURE "99:99"          SIZE  15, 8 OF OPANEL1 PIXEL VALID LOCA00520(ACOLS,AHEADER)

	@ 005,085 SAY      OSAYHRPR PROMPT OEMTOANSI(STR0037   )  SIZE 050, 8 OF OPANEL1 PIXEL  //"HORA PARADA:"
	@ 004,130 MSGET    OGETHRPR VAR CHORAP  PICTURE "99:99"          SIZE  15, 8 OF OPANEL1 PIXEL 

	@ 018,085 SAY      OSAYMOTPR PROMPT OEMTOANSI(STR0038 ) SIZE 050, 8 OF OPANEL1 PIXEL  //"MOTIVO PARADA:"
	@ 017,130 COMBOBOX OGETMOTPR VAR CMOTIP ITEMS AMOTIP             SIZE  50, 8 OF OPANEL1 PIXEL  // 3=TRANSPORTES;9=MAN PREV;0=MO;C=MAN CORR

	@ 005,195 SAY      OSAYALMIN PROMPT OEMTOANSI(STR0039) SIZE 050, 8 OF OPANEL1 PIXEL  //"ALMOÇO INICIAL:"
	@ 004,235 MSGET    OGETALMIN VAR CHALMI PICTURE "99:99"          SIZE  15, 8 OF OPANEL1 PIXEL VALID LOCA00520(ACOLS,AHEADER)

	@ 018,195 SAY      OSAYALMFI PROMPT OEMTOANSI(STR0040  ) SIZE 050, 8 OF OPANEL1 PIXEL  //"ALMOÇO FINAL:"
	@ 018,235 MSGET    OGETALMFI VAR CHALMF PICTURE "99:99"          SIZE  15, 8 OF OPANEL1 PIXEL VALID LOCA00520(ACOLS,AHEADER)

	@ 005,275 SAY      OSAYJANIN PROMPT OEMTOANSI(STR0041) SIZE 050, 8 OF OPANEL1 PIXEL  //"JANTAR INICIAL:"
	@ 004,315 MSGET    OGETJANIN VAR CHJANI PICTURE "99:99"          SIZE  15, 8 OF OPANEL1 PIXEL VALID LOCA00520(ACOLS,AHEADER)

	@ 018,275 SAY      OSAYJANFI PROMPT OEMTOANSI(STR0042  ) SIZE 050, 8 OF OPANEL1 PIXEL  //"JANTAR FINAL:"
	@ 018,315 MSGET    OGETJANFI VAR CHJANF PICTURE "99:99"          SIZE  15, 8 OF OPANEL1 PIXEL VALID LOCA00520(ACOLS,AHEADER)

	@ 005,355 SAY      OSAYOBS   PROMPT OEMTOANSI(STR0043           ) SIZE 050, 8 OF OPANEL1 PIXEL  //"OBS:"
	@ 004,370 GET      OGETOBS   VAR COBS MEMO                       SIZE 160,30 OF OPANEL1 PIXEL 

	@ 005,540 SAY      OSAYMIMAN PROMPT OEMTOANSI(STR0044 ) SIZE 050, 8 OF OPANEL1 PIXEL  //"MINUTA MANUAL:"
	@ 014,540 MSGET    OGETMIMAN VAR CMINUM PICTURE "@X"             SIZE 030, 8 OF OPANEL1 PIXEL 

	OBROWSE := FWBROWSE():NEW() 
	OBROWSE:SETDATAARRAY()
	OBROWSE:SETARRAY(ACOLS)
	OBROWSE:ADDMARKCOLUMNS(BMARK,BLDBLCLICK,BHEADERCLI)

	ASTATUS := FSTATUS("FWBROWSE")  		// MONTA OS STATUS
	FOR NSTATUS:=1 TO LEN(ASTATUS)
		OBROWSE:ADDLEGEND(ASTATUS[NSTATUS,3],ASTATUS[NSTATUS,1],ASTATUS[NSTATUS,2])
	NEXT

	IF EXISTBLOCK("ZBXBXBUT")				// PONTO DE ENTRADA PARA INCLUSAO DE BOTOES NAS ACOES RELACIONADAS DA BAIXA DA MINUTA
		ABUTTONS := EXECBLOCK("ZBXBXBUT",.T.,.T.,{ABUTTONS,ODLG,ACOLS})
	ENDIF

	OBROWSE:SETCOLUMNS(AHEADER)
	OBROWSE:SETOWNER(OPANEL2)
	OBROWSE:DISABLEREPORT()
	OBROWSE:DISABLECONFIG()
	OBROWSE:ACTIVATE()
	ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{||LOK:=.T.,IF(FBAIXAM(OBROWSE,CHORAI,CHORAF,CHORAP,CMOTIP,CMINUM, CHALMI, CHALMF, CHJANI, CHJANF, COBS),CLOSE(ODLG),)},{||LOK:=.F.,CLOSE(ODLG)},,ABUTTONS)

	IF !LOK
		IF EXISTBLOCK("ZBXCANBX")			// PONTO DE ENTRADA AO CANCELAR O PROCESSO DE BAIXA DE MINUTA
			EXECBLOCK("ZBXCANBX",.T.,.T.,{ACOLS})
		ENDIF	   
	ENDIF

//	IF LOK .OR. NRECNOATU>0
//		EXIT
//	ENDIF
//ENDDO 

RETURN 



// ======================================================================= \\
FUNCTION LOCA00506() 
// ======================================================================= \\
// --> "CANCELA MINUTA"

FZBXCANC() 

RETURN



// ======================================================================= \\
STATIC FUNCTION FZBXCANC()
// ======================================================================= \\
// --> "CANCELA MINUTA"

LOCAL CPERG      := "LOCP073"
LOCAL CTITJAN    := STR0045 //"CANCELAMENTO DA MINUTA"
LOCAL AOBJECTS , AINFO , APOSGET , APOSOBJ , ASIZEAUT 
LOCAL ABUTTONS   := {}
LOCAL BMARK      := { || IF(LOCA00510(OBROWSE),'LBOK','LBNO') }
LOCAL BLDBLCLICK := { |OBROWSE| LOCA00509(OBROWSE) }
LOCAL BHEADERCLI := { |OBROWSE| LOCA00511(OBROWSE) }
LOCAL ODLG , OPANEL1 , OPANEL2 , ACOLS , ACOLS0 , AHEADER , BHEADER , AESTRU , CCAMPO , NSTATUS , ASTATUS , LOK := .F. 
LOCAL CMOTCAN , OMOTCAND , CMOTCAND 
LOCAL NPOS       := 0 

//VALIDPERG(CPERG)
IF !PERGUNTE(CPERG,.T.)
	RETURN
ENDIF

PRIVATE NRECNOATU := IF(MV_PAR01==1,0,FPF->(RECNO()))  //CONSIDERA PARAMETROS ABAIXO?
PRIVATE CPROD     := MV_PAR02 				// PROJETO DE
PRIVATE CPROA     := MV_PAR03 				// PROJETO ATE
PRIVATE COBRD     := MV_PAR04 				// OBRA DE
PRIVATE COBRA     := MV_PAR05 				// OBRA ATE
PRIVATE CNASD     := MV_PAR06 				// AS DE
PRIVATE CNASA     := MV_PAR07 				// AS ATE
PRIVATE CFROD     := MV_PAR08 				// FROTA DE
PRIVATE CFROA     := MV_PAR09 				// FROTA ATE
PRIVATE DDATD     := MV_PAR10 				// DATA DE
PRIVATE DDATA     := MV_PAR11 				// DATA ATE

CMOTCAN  := SPACE(02)
CMOTCAND := SPACE(40)

PRIVATE NPOSMAR,NPOSPRO,NPOSOBR,NPOSDAT,NPOSFRO,NPOSNAS,NPOSMIN,NPOSMED,NPOSHOI,NPOSHOF,NPOSHOP,NPOSMOT,NPOSMIM,NPOSSTA
PRIVATE OBROWSE
PRIVATE CMARCA
PRIVATE ARECNOSZBX 							// GUARDA OS RECNOS DO ZBX

WHILE .T.
	CMARCA     := GETMARK()
	ARECNOSZBX := {} 						// GUARDA OS RECNOS DO ZBX
	ACOLS      := {}
	
	FMONTAZBX("QRYZBX",CPERG) 				// MONTA A QUERY

	QRYFPF->(DBGOTOP())
	WHILE QRYFPF->(!EOF())
		AESTRU:={}
		CCAMPO:=""          ;QRYFPF->(AADD(AESTRU,{IF(NRECNOATU==0,SPACE(LEN(CMARCA)),CMARCA),""    ,""                             ,""                           ,""                              ,0,00                              ,0                               }));NPOSMAR:=LEN(AESTRU)
		CCAMPO:="FPF_PROJET";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSPRO:=LEN(AESTRU)
		CCAMPO:="FPF_OBRA"  ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSOBR:=LEN(AESTRU)
		CCAMPO:="FPF_DATA"  ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSDAT:=LEN(AESTRU)
		CCAMPO:="FPF_FROTA" ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSFRO:=LEN(AESTRU)
		CCAMPO:="FPF_AS"    ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSNAS:=LEN(AESTRU)
		CCAMPO:="FPF_MINUTA";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMIN:=LEN(AESTRU)
		CCAMPO:="FPF_NROMED";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMED:=LEN(AESTRU)
		CCAMPO:="FPF_HORAI" ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOI:=LEN(AESTRU)
		CCAMPO:="FPF_HORAF" ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOF:=LEN(AESTRU)
		CCAMPO:="FPF_HRPARA";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOP:=LEN(AESTRU)
		CCAMPO:="FPF_MOTIVO";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMOT:=LEN(AESTRU)
		CCAMPO:="FPF_MINUTM";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMIM:=LEN(AESTRU)
		CCAMPO:="FPF_STATUS";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSSTA:=LEN(AESTRU)
	
		QRYFPF->(AADD(ARECNOSZBX,FPF_RECNO))  //GUARDA OS RECNOS DO ZBX
	
		ACOLS0 := {}
		FOR NPOS:=1 TO LEN(AESTRU)
			AADD(ACOLS0 , AESTRU[NPOS][1])
		NEXT NPOS 
		AADD(ACOLS,ACOLS0)
	
		QRYFPF->(DBSKIP())
	ENDDO 
	
	IF LEN(ACOLS)==0
		MSGALERT(STR0033 , STR0002) //"NÃO EXISTEM MINUTAS NO INTERVALO SELECIONADO."###"GPO - CADZBX.PRW"
		RETURN
	ENDIF
	
	AHEADER := {}
	FOR NPOS:=2 TO LEN(AESTRU)
		BHEADER:="{||ACOLS[OBROWSE:AT(),"+STRZERO(NPOS,2)+"]}"
		AADD(AHEADER,{AESTRU[NPOS,3],&BHEADER,AESTRU[NPOS,4],AESTRU[NPOS,5],AESTRU[NPOS,6],AESTRU[NPOS,7],AESTRU[NPOS,8]})
	NEXT
	
	IF OMAINWND:NCLIENTWIDTH > 800
		AOBJECTS:={}
		AADD(AOBJECTS,{100,010,.T., .T. } )  //ENCHOICE
		AADD(AOBJECTS,{100,090,.T., .T. } )  //MSGETDADOS
	ELSE
		AOBJECTS:={}
		AADD(AOBJECTS,{100,012,.T., .T. } )  //ENCHOICE
		AADD(AOBJECTS,{100,088,.T., .T. } )  //MSGETDADOS
	ENDIF
	ASIZEAUT:=MSADVSIZE()
	AINFO   :={ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
	APOSOBJ :=MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )
	APOSGET :=MSOBJGETPOS((ASIZEAUT[3]-ASIZEAUT[1]),315,{{004,024,240,270}} )

	DEFINE MSDIALOG ODLG FROM ASIZEAUT[7],0 TO ASIZEAUT[6],ASIZEAUT[5] TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL
		@ APOSOBJ[1,1],APOSOBJ[1,2] MSPANEL OPANEL1 PROMPT "" SIZE 10,40 OF ODLG
		@ APOSOBJ[2,1],APOSOBJ[2,2] MSPANEL OPANEL2 PROMPT "" SIZE 10,10 OF ODLG
		OPANEL1:ALIGN:=CONTROL_ALIGN_TOP
		OPANEL2:ALIGN:=CONTROL_ALIGN_ALLCLIENT
	
		@ 005,005 SAY OEMTOANSI(STR0046) SIZE 100,8 OF OPANEL1 PIXEL //"MOTIVO DO CANCELAMENTO"
		@ 013,005 GET CMOTCAN SIZE 010,8 PICTURE "@!" F3 "ZX" VALID(FVERMOTCAN(CMOTCAN,@CMOTCAND,OMOTCAND))
		@ 013,055 MSGET OMOTCAND VAR CMOTCAND SIZE 100,008 OF ODLG PIXEL WHEN .F.
	
		OBROWSE:=FWBROWSE():NEW()
		OBROWSE:SETDATAARRAY()
		OBROWSE:SETARRAY(ACOLS)
		OBROWSE:ADDMARKCOLUMNS(BMARK,BLDBLCLICK,BHEADERCLI)
		
		ASTATUS := FSTATUS("FWBROWSE") 		// MONTA OS STATUS
		FOR NSTATUS:=1 TO LEN(ASTATUS)
			OBROWSE:ADDLEGEND(ASTATUS[NSTATUS,3],ASTATUS[NSTATUS,1],ASTATUS[NSTATUS,2])
		NEXT
		
		OBROWSE:SETCOLUMNS(AHEADER)
		OBROWSE:SETOWNER(ODLG)
		OBROWSE:DISABLEREPORT()
		OBROWSE:DISABLECONFIG()
		OBROWSE:ACTIVATE()
	ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{||LOK:=.T.,IF(FCANCELAM(OBROWSE,CMOTCAN),CLOSE(ODLG),)},{||LOK:=.F.,CLOSE(ODLG)},,ABUTTONS)

	IF !LOK .OR. NRECNOATU>0
		EXIT
	ENDIF
ENDDO 

RETURN



// ======================================================================= \\
FUNCTION LOCA00507() 
// ======================================================================= \\
// --> "ESTORNA MINUTA" 

FZBXESTO() 

RETURN



// ======================================================================= \\
STATIC FUNCTION FZBXESTO()
// ======================================================================= \\
// --> "ESTORNA MINUTA" 

LOCAL CPERG      := "LOCP074"
LOCAL CTITJAN    := STR0047 //"ESTORNO DA MINUTA"
LOCAL AOBJECTS,AINFO,APOSGET,APOSOBJ,ASIZEAUT
LOCAL ABUTTONS   := {}
LOCAL BMARK      := { || IF(LOCA00510(OBROWSE),'LBOK','LBNO') }
LOCAL BLDBLCLICK := { |OBROWSE| LOCA00509(OBROWSE) }
LOCAL BHEADERCLI := { |OBROWSE| LOCA00511(OBROWSE) }
LOCAL ODLG,ACOLS,ACOLS0,AHEADER,BHEADER,AESTRU,CCAMPO,NSTATUS,ASTATUS,LOK:=.F.
LOCAL NPOS       := 0 

//VALIDPERG(CPERG)
IF !PERGUNTE(CPERG,.T.)
	RETURN
ENDIF

PRIVATE NRECNOATU := IF(MV_PAR01==1,0,FPF->(RECNO()))  //CONSIDERA PARAMETROS ABAIXO?
PRIVATE CPROD     := MV_PAR02 				// PROJETO DE
PRIVATE CPROA     := MV_PAR03 				// PROJETO ATE
PRIVATE COBRD     := MV_PAR04 				// OBRA DE
PRIVATE COBRA     := MV_PAR05 				// OBRA ATE
PRIVATE CNASD     := MV_PAR06 				// AS DE
PRIVATE CNASA     := MV_PAR07 				// AS ATE
PRIVATE CFROD     := MV_PAR08 				// FROTA DE
PRIVATE CFROA     := MV_PAR09 				// FROTA ATE
PRIVATE DDATD     := MV_PAR10 				// DATA DE
PRIVATE DDATA     := MV_PAR11 				// DATA ATE

PRIVATE NPOSMAR,NPOSPRO,NPOSOBR,NPOSDAT,NPOSFRO,NPOSNAS,NPOSMIN,NPOSMED,NPOSHOI,NPOSHOF,NPOSHOP,NPOSMOT,NPOSMIM,NPOSSTA
PRIVATE OBROWSE
PRIVATE CMARCA
PRIVATE ARECNOSZBX 				   			// GUARDA OS RECNOS DO ZBX

WHILE .T.
	CMARCA     := GETMARK()
	ARECNOSZBX := {} 						// GUARDA OS RECNOS DO ZBX
	ACOLS      := {}

	FMONTAZBX("QRYZBX",CPERG) 				// MONTA A QUERY

	QRYFPF->(DBGOTOP())
	WHILE QRYFPF->(!EOF())
		AESTRU:={}
		CCAMPO:=""          ;QRYFPF->(AADD(AESTRU,{IF(NRECNOATU==0,SPACE(LEN(CMARCA)),CMARCA),""    ,""                             ,""                           ,""                              ,0,00                              ,0                               }));NPOSMAR:=LEN(AESTRU)
		CCAMPO:="FPF_PROJET";QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSPRO:=LEN(AESTRU)
		CCAMPO:="FPF_OBRA"  ;QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSOBR:=LEN(AESTRU)
		CCAMPO:="FPF_DATA"  ;QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSDAT:=LEN(AESTRU)
		CCAMPO:="FPF_FROTA" ;QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSFRO:=LEN(AESTRU)
		CCAMPO:="FPF_AS"    ;QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSNAS:=LEN(AESTRU)
		CCAMPO:="FPF_MINUTA";QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMIN:=LEN(AESTRU)
		CCAMPO:="FPF_NROMED";QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMED:=LEN(AESTRU)
		CCAMPO:="FPF_HORAI" ;QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOI:=LEN(AESTRU)
		CCAMPO:="FPF_HORAF" ;QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOF:=LEN(AESTRU)
		CCAMPO:="FPF_HRPARA";QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOP:=LEN(AESTRU)
		CCAMPO:="FPF_MOTIVO";QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMOT:=LEN(AESTRU)
		CCAMPO:="FPF_MINUTM";QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMIM:=LEN(AESTRU)
		CCAMPO:="FPF_STATUS";QRYFPF->(AADD(AESTRU,{&CCAMPO                                   ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSSTA:=LEN(AESTRU)
	
		QRYFPF->(AADD(ARECNOSZBX,FPF_RECNO))  //GUARDA OS RECNOS DO ZBX
	
		ACOLS0 := {} 
		FOR NPOS:=1 TO LEN(AESTRU)
			AADD(ACOLS0,AESTRU[NPOS,1])
		NEXT NPOS 
		AADD(ACOLS,ACOLS0)
	
		QRYFPF->(DBSKIP())
	ENDDO 
	
	IF LEN(ACOLS)==0
		MSGALERT(STR0033 , STR0002) //"NÃO EXISTEM MINUTAS NO INTERVALO SELECIONADO."###"GPO - CADZBX.PRW"
		RETURN
	ENDIF
	
	AHEADER := {} 
	FOR NPOS:=2 TO LEN(AESTRU)
		BHEADER:="{||ACOLS[OBROWSE:AT(),"+STRZERO(NPOS,2)+"]}"
		AADD(AHEADER,{AESTRU[NPOS,3],&BHEADER,AESTRU[NPOS,4],AESTRU[NPOS,5],AESTRU[NPOS,6],AESTRU[NPOS,7],AESTRU[NPOS,8]})
	NEXT
	
	IF OMAINWND:NCLIENTWIDTH > 800
		AOBJECTS:={}
		AADD(AOBJECTS,{100,010,.T., .T. } ) 	// ENCHOICE
		AADD(AOBJECTS,{100,090,.T., .T. } ) 	// MSGETDADOS
	ELSE
		AOBJECTS:={}
		AADD(AOBJECTS,{100,012,.T., .T. } ) 	// ENCHOICE
		AADD(AOBJECTS,{100,088,.T., .T. } ) 	// MSGETDADOS
	ENDIF
	ASIZEAUT := MSADVSIZE()
	AINFO    := {ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
	APOSOBJ  := MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )
	APOSGET  := MSOBJGETPOS((ASIZEAUT[3]-ASIZEAUT[1]),315,{{004,024,240,270}} )
	
	DEFINE MSDIALOG ODLG FROM ASIZEAUT[7],0 TO ASIZEAUT[6],ASIZEAUT[5] TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL
		OBROWSE:=FWBROWSE():NEW()
		OBROWSE:SETDATAARRAY()
		OBROWSE:SETARRAY(ACOLS)
		OBROWSE:ADDMARKCOLUMNS(BMARK,BLDBLCLICK,BHEADERCLI)
		
		ASTATUS := FSTATUS("FWBROWSE") 			// MONTA OS STATUS
		FOR NSTATUS:=1 TO LEN(ASTATUS)
			OBROWSE:ADDLEGEND(ASTATUS[NSTATUS,3],ASTATUS[NSTATUS,1],ASTATUS[NSTATUS,2])
		NEXT
		
		OBROWSE:SETCOLUMNS(AHEADER)
		OBROWSE:SETOWNER(ODLG)
		OBROWSE:DISABLEREPORT()
		OBROWSE:DISABLECONFIG()
		OBROWSE:ACTIVATE()
	ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{||LOK:=.T.,IF(FESTORNAM(OBROWSE),CLOSE(ODLG),)},{||LOK:=.F.,CLOSE(ODLG)},,ABUTTONS)

	IF !LOK .OR. NRECNOATU>0
		EXIT
	ENDIF
ENDDO 

RETURN 



// ======================================================================= \\
FUNCTION LOCA00508() 
// ======================================================================= \\
// --> "TROCA EQUIPAMENTO"

FZBXTROC() 

RETURN



// ======================================================================= \\
STATIC FUNCTION FZBXTROC()
// ======================================================================= \\
// --> "TROCA EQUIPAMENTO"

LOCAL ODLG
LOCAL OFROTAD,OFROTAP,ODESCD,ODESCP
LOCAL CFROTAD,CFROTAP,CDESCD,CDESCP,CF3 
LOCAL DDATAD,DDATAA,CAS

IF FPF->(!FPF_STATUS$"1,5") 				// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
	MSGALERT(STR0048 , "GPO - CADZBX.PRW") //"TROCA PERMITIDA APENAS PARA MINUTA COM STATUS 1=PREVISTA OU 5=CANCELADA."
	RETURN
ENDIF

DDATAD  := FPF->FPF_DATA
DDATAA  := FPF->FPF_DATA
CAS     := FPF->FPF_AS
CFROTAD := FPF->FPF_FROTA
CFROTAP := FPF->(SPACE(LEN(FPF_FROTA)))
CDESCD  := ""
CDESCP  := ""

IF SUBSTR(CAS,2,1) == "2"					// MAO DE OBRA
	CF3 := "SRA"
ELSE
	CF3 := "ST9ZBX"
ENDIF

FTRAZDESC(CFROTAD,@CDESCD,ODESCD) 			// PREENCHE O CAMPO COM O NOME DO BEM
FTRAZDESC(CFROTAP,@CDESCP,ODESCP) 			// PREENCHE O CAMPO COM O NOME DO BEM

DEFINE MSDIALOG ODLG FROM 0,0 TO 200,700 PIXEL TITLE OEMTOANSI(STR0049) //"TROCA DE RECURSO"
	@ 005,005 SAY OEMTOANSI(STR0050)     SIZE 100,030 OF ODLG PIXEL //"DO RECURSO"
	@ 013,005 MSGET OFROTAD VAR CFROTAD       SIZE 080,008 OF ODLG PIXEL WHEN .F.
	@ 005,100 SAY OEMTOANSI(STR0051     ) SIZE 100,030 OF ODLG PIXEL //"DESCRIÇÃO"
	@ 013,100 MSGET ODESCD  VAR CDESCD        SIZE 200,008 OF ODLG PIXEL WHEN .F.
	@ 030,005 SAY OEMTOANSI(STR0052  ) SIZE 100,030 OF ODLG PIXEL //"PARA RECURSO"
	@ 038,005 MSGET OFROTAP VAR CFROTAP       SIZE 080,008 OF ODLG PIXEL F3 CF3 VALID(FVERFROTA(CFROTAD,CFROTAP,@CDESCP,ODESCP,CAS))
	@ 030,100 SAY OEMTOANSI(STR0051     ) SIZE 100,030 OF ODLG PIXEL //"DESCRIÇÃO"
	@ 038,100 MSGET ODESCP  VAR CDESCP        SIZE 200,008 OF ODLG PIXEL WHEN .F.
	@ 070,120 BUTTON STR0053       SIZE 50,15 ACTION ( IIF(FTROCAFRO(CFROTAD,CFROTAP,DDATAD,DDATAA,OFROTAP,CAS), CLOSE(ODLG), )) OF ODLG PIXEL //"OK"
	@ 070,180 BUTTON STR0016 SIZE 50,15 ACTION CLOSE(ODLG) OF ODLG PIXEL //"CANCELAR"
ACTIVATE MSDIALOG ODLG CENTERED

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION FVERFROTA(CFROTAD,CFROTAP,CDESCP,ODESCP,CAS)
// ======================================================================= \\
LOCAL LRET := .T.

FTRAZDESC(CFROTAP,@CDESCP,ODESCP) 			// PREENCHE O CAMPO COM O NOME DO BEM 

IF ! EMPTY(CFROTAP) 
	IF !FVERSIGLAS({CFROTAD,CFROTAP}) 
		LRET := .F. 
	ENDIF 
ENDIF 

RETURN LRET 



// ======================================================================= \\
STATIC FUNCTION VALIDPERG(CPERG)
// ======================================================================= \\
/*
LOCAL NPOS,NPOS1,APERG

CPERG := PADR(SUBSTR(CPERG,1,LEN(SX1->X1_GRUPO)),LEN(SX1->X1_GRUPO))
APERG := {}

DO CASE
CASE UPPER(ALLTRIM(CPERG))==UPPER("LOCA00504") ;
.OR. UPPER(ALLTRIM(CPERG))==UPPER("LOCA00505") ;
.OR. UPPER(ALLTRIM(CPERG))==UPPER("LOCA00506") ;
.OR. UPPER(ALLTRIM(CPERG))==UPPER("LOCA00507")
//	           {X1_GRUPO,X1_ORDEM,X1_PERGUNT                    ,X1_PERSPA,X1_PERENG,X1_VARIAVL,X1_TIPO,X1_TAMANH0          ,X1_DECIMAL,X1_PRESEL,X1_GSC,X1_VALID,X1_VAR01  ,X1_DEF01      ,X1_DEFSPA1    ,X1_DEFENG1    ,X1_CNT01,X1_VAR02 ,X1_DEF02       ,X1_DEFSPA2  ,X1_DEFENG2  ,X1_CNT02,X1_VAR03,X1_DEF03         ,X1_DEFSPA3       ,X1_DEFENG3       ,X1_CNT03,X1_VAR04,X1_DEF04       ,X1_DEFSPA4     ,X1_DEFENG4     ,X1_CNT04,X1_VAR05,X1_DEF05        ,X1_DEFSPA5      ,X1_DEFENG5      ,X1_CNT05,X1_F3,X1_PYME,X1_GPSSXG,X1_HELP,X1_PICTURE})
	AADD(APERG,{CPERG   ,"01"    ,"CONSIDERA PARAMETROS ABAIXO?",""       ,""       ,"MV_CHA"  ,"N"    ,01                  ,00        ,0        ,"C"   ,""      ,"MV_PAR01","SIM"         ,"SI"          ,"YES"         ,""      ,""       ,"NAO"          ,"NO"        ,"NO"        ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,""   ,"S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"02"    ,"PROJETO DE:"                 ,""       ,""       ,"MV_CHB"  ,"C"    ,LEN(FQ5->FQ5_SOT   ),00        ,0        ,"G"   ,""      ,"MV_PAR02",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,"FP0","S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"03"    ,"PROJETO ATE:"                ,""       ,""       ,"MV_CHC"  ,"C"    ,LEN(FQ5->FQ5_SOT   ),00        ,0        ,"G"   ,""      ,"MV_PAR03",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,"FP0","S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"04"    ,"OBRA DE:"                    ,""       ,""       ,"MV_CHD"  ,"C"    ,LEN(FQ5->FQ5_OBRA  ),00        ,0        ,"G"   ,""      ,"MV_PAR04",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,""   ,"S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"05"    ,"OBRA ATE:"                   ,""       ,""       ,"MV_CHE"  ,"C"    ,LEN(FQ5->FQ5_OBRA  ),00        ,0        ,"G"   ,""      ,"MV_PAR05",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,""   ,"S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"06"    ,"AS DE:"                      ,""       ,""       ,"MV_CHF"  ,"C"    ,LEN(FQ5->FQ5_AS    ),00        ,0        ,"G"   ,""      ,"MV_PAR06",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,"DTQAS","S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"07"    ,"AS ATE:"                     ,""       ,""       ,"MV_CHG"  ,"C"    ,LEN(FQ5->FQ5_AS    ),00        ,0        ,"G"   ,""      ,"MV_PAR07",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,"DTQAS","S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"08"    ,"FROTA DE:"                   ,""       ,""       ,"MV_CHH"  ,"C"    ,LEN(FQ5->FQ5_GUINDA),00        ,0        ,"G"   ,""      ,"MV_PAR08",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,"ST9","S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"09"    ,"FROTA ATE:"                  ,""       ,""       ,"MV_CHI"  ,"C"    ,LEN(FQ5->FQ5_GUINDA),00        ,0        ,"G"   ,""      ,"MV_PAR09",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,"ST9","S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"10"    ,"DATA DE:"                    ,""       ,""       ,"MV_CHJ"  ,"D"    ,08                  ,00        ,0        ,"G"   ,""      ,"MV_PAR10",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,""   ,"S"    ,""       ,""     ,""        })
	AADD(APERG,{CPERG   ,"11"    ,"DATA ATE:"                   ,""       ,""       ,"MV_CHK"  ,"D"    ,08                  ,00        ,0        ,"G"   ,""      ,"MV_PAR11",""            ,""            ,""            ,""      ,""       ,""             ,""          ,""          ,""      ,""      ,""               ,""               ,""               ,""      ,""      ,""             ,""             ,""             ,""      ,""      ,""              ,""              ,""              ,""      ,""   ,"S"    ,""       ,""     ,""        })
ENDCASE

SX1->(DBSETORDER(1))  						// X1_GRUPO+X1_ORDEM

FOR NPOS:=1 TO LEN(APERG)
	SX1->(DBSEEK(APERG[NPOS,1]+APERG[NPOS,2]))
	IF SX1->(EOF())
		SX1->(RECLOCK("SX1",.T.))
		FOR NPOS1:=1 TO SX1->(FCOUNT())
			IF NPOS1<=LEN(APERG[NPOS])
				SX1->(FIELDPUT(NPOS1,APERG[NPOS,NPOS1]))
			ENDIF
		NEXT
		SX1->(MSUNLOCK())
	ENDIF
NEXT
*/
RETURN



// ======================================================================= \\
STATIC FUNCTION FMONTAZBX(CALIASQRY,CPERG) 
// ======================================================================= \\
// --> MONTA A QUERY
LOCAL AESTRU , CQRY := "" , CCRLF := CHR(13)+CHR(10) 
LOCAL NPOS := 0 
Local _cCampos

// Feito desta forma pois estava apresentando como débios técnicos a logica antiva - Frank 06/04/2022
_cCampos := "FPF_MINUTA,FPF_AS,FPF_DATA,FPF_FROTA,FPF_PROJET,FPF_OBRA,FPF_NROMED,FPF_HORAI,FPF_HORAF,FPF_HRPARA,"
_cCampos += "FPF_MOTIVO,FPF_STATUS,FPF_MINUTM,FPF_FILIAL,FPF_RECNO,FQ5_HORINI,FQ5_HORFIM"

CQRY     += " SELECT "
CQRY     += " FPF_MINUTA, FPF_AS, FPF_DATA, FPF_FROTA, FPF_PROJET, FPF_OBRA," + CCRLF
CQRY     += " FPF_NROMED, FPF_HORAI, FPF_HORAF, FPF_HRPARA, FPF_MOTIVO, FPF_STATUS, FPF_MINUTM," + CCRLF
CQRY     += " FPF_FILIAL, ZBX.R_E_C_N_O_ AS FPF_RECNO," + CCRLF
CQRY     += " FQ5_HORINI, FQ5_HORFIM" + CCRLF
IF EXISTBLOCK("ZBXQRY")						// PONTO DE ENTRADA PARA INCLUSAO DE CAMPOS NA QUERY
	CQRY := EXECBLOCK("ZBXQRY",.T.,.T.,{CQRY})
ENDIF
CQRY     += " FROM " + RETSQLNAME("FPF") + " ZBX" + CCRLF
CQRY     += " JOIN " + RETSQLNAME("FQ5") + " DTQ ON FQ5_FILIAL='"+XFILIAL("FQ5")+"' AND FQ5_AS=FPF_AS AND DTQ.D_E_L_E_T_=' '"
CQRY     += " WHERE ZBX.D_E_L_E_T_=''" + CCRLF
CQRY     += " AND FPF_FILIAL = '" + XFILIAL("FPF") + "'" + CCRLF
DO CASE
CASE UPPER(CPERG)==UPPER("LOCA00504")
	CQRY += " AND FPF_STATUS = '1'" + CCRLF	// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
CASE UPPER(CPERG)==UPPER("LOCA00505")
	CQRY += " AND FPF_STATUS = '2'" + CCRLF	// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
CASE UPPER(CPERG)==UPPER("LOCA00506")
	CQRY += " AND FPF_STATUS = '1'" + CCRLF 
CASE UPPER(CPERG)==UPPER("LOCA00507")
	CQRY += " AND FPF_STATUS IN ('2','3','4','5')" + CCRLF 
ENDCASE
IF NRECNOATU==0
	CQRY += " AND FPF_PROJET BETWEEN '" + CPROD       + "' AND '" + CPROA       + "'" + CCRLF
	CQRY += " AND FPF_OBRA BETWEEN '"   + COBRD       + "' AND '" + COBRA       + "'" + CCRLF
	CQRY += " AND FPF_AS BETWEEN '"     + CNASD       + "' AND '" + CNASA       + "'" + CCRLF
	CQRY += " AND FPF_FROTA BETWEEN '"  + CFROD       + "' AND '" + CFROA       + "'" + CCRLF
	CQRY += " AND FPF_DATA BETWEEN '"   + DTOS(DDATD) + "' AND '" + DTOS(DDATA) + "'" + CCRLF
ELSE
	CQRY += " AND ZBX.R_E_C_N_O_ = " + ALLTRIM(STR(NRECNOATU)) + CCRLF
ENDIF
IF EXISTBLOCK("ZBXQRYWH")					// PONTO DE ENTRADA PARA INCLUSAO DE CONDIÇÕES NO WHERE
	CQRY += EXECBLOCK("ZBXQRYWH",.T.,.T.,{NRECNOATU, CPERG})
ENDIF
CQRY     += " ORDER BY FPF_AS,FPF_DATA " + CCRLF
CQRY     := CHANGEQUERY(CQRY)

IF !SELECT(CALIASQRY)==0 
	(CALIASQRY)->(DBCLOSEAREA()) 
ENDIF

DBUSEAREA(.T., "TOPCONN", TCGENQRY(,,CQRY), CALIASQRY, .F., .T.)

AESTRU := FPF->(DBSTRUCT())
FOR NPOS:=1 TO LEN(AESTRU)
	IF AESTRU[NPOS,2]<>"C" .AND. AESTRU[NPOS,2]<>"M"
		//IF (CALIASQRY)->(!TYPE(AESTRU[NPOS,1])=="U")
		If alltrim(AESTRU[NPOS,1]) $ _cCampos
			TCSETFIELD(CALIASQRY,AESTRU[NPOS,1],AESTRU[NPOS,2],AESTRU[NPOS,3],AESTRU[NPOS,4])
		ENDIF
	ENDIF
NEXT NPOS 

RETURN



// ======================================================================= \\
FUNCTION LOCA00509(OBROWSE)
// ======================================================================= \\

LOCAL LRET

IF EMPTY(OBROWSE:DATA():AARRAY[OBROWSE:AT(),NPOSMAR])
	OBROWSE:DATA():AARRAY[OBROWSE:AT(),NPOSMAR]:=CMARCA
ELSE
	OBROWSE:DATA():AARRAY[OBROWSE:AT(),NPOSMAR]:=SPACE(01)
ENDIF

LRET := LOCA00510(OBROWSE)

RETURN(LRET)



// ======================================================================= \\
FUNCTION LOCA00510(OBROWSE)
// ======================================================================= \\

LOCAL LRET

LRET := (!EMPTY(OBROWSE:DATA():AARRAY[OBROWSE:AT(),NPOSMAR])) 

RETURN(LRET)



// ======================================================================= \\
FUNCTION LOCA00511(OBROWSE)
// ======================================================================= \\

LOCAL NPOS

FOR NPOS:=1 TO LEN(OBROWSE:DATA():AARRAY)
	IF EMPTY(OBROWSE:DATA():AARRAY[NPOS,NPOSMAR])
		OBROWSE:DATA():AARRAY[NPOS,NPOSMAR]:=CMARCA
	ELSE
		OBROWSE:DATA():AARRAY[NPOS,NPOSMAR]:=SPACE(01)
	ENDIF
NEXT

OBROWSE:REFRESH()

RETURN



// ======================================================================= \\
STATIC FUNCTION FGRAVAZLG( DINI , DFIM , CSTATUS , CHINI , CHFIM ) 
// ======================================================================= \\

LOCAL   LRET      := .F.
LOCAL   NPOSBARRA := AT("/",FQ5->FQ5_SOT)
LOCAL   _CQUERY   := ""

DEFAULT CHINI     := FQ5->FQ5_HORINI
DEFAULT CHFIM     := FQ5->FQ5_HORFIM

_CQUERY := " SELECT ZLG.R_E_C_N_O_ ZLGRECNO" + CRLF
_CQUERY += "   FROM " + RETSQLNAME("FPO") + " ZLG" + CRLF
_CQUERY += "  WHERE FPO_FILIAL = '" + XFILIAL("FPO") + "'" + CRLF
_CQUERY += "    AND FPO_PROJET = '" + FQ5->FQ5_SOT + "'" + CRLF
_CQUERY += "    AND FPO_NRAS   = '" + FQ5->FQ5_AS + "'" + CRLF
_CQUERY += "    AND FPO_FROTA  = '" + FPF->FPF_FROTA + "'" + CRLF
_CQUERY += "    AND FPO_DTINI  = '" + DTOS(DINI) + "'" + CRLF
_CQUERY += "    AND FPO_DTFIM  = '" + DTOS(DFIM) + "'" + CRLF
_CQUERY += "    AND FPO_HRINI  = '" + CHINI + "'" + CRLF
_CQUERY += "    AND FPO_HRFIM  = '" + CHFIM + "'" + CRLF
_CQUERY += "    AND ZLG.D_E_L_E_T_ = ''"

IF SELECT("TRBZLG") > 0
	TRBFPO->(DBCLOSEAREA())
ENDIF

TCQUERY _CQUERY NEW ALIAS "TRBZLG"

IF TRBFPO->(EOF())
	IF FPO->( RECLOCK("FPO", .T.) )
		FPO->FPO_FILIAL	:= XFILIAL("FPO")
		FPO->FPO_FROTA  := FPF->FPF_FROTA 	// FQ5->FQ5_GUINDA
		FPO->FPO_CODCLI	:= POSICIONE("FP0",1,XFILIAL("FP0")+FQ5->FQ5_SOT,"ZA0_CLI")
		FPO->FPO_LOJA	:= FP0->FP0_LOJA
		FPO->FPO_NOMCLI	:= POSICIONE("SA1",1,XFILIAL("SA1")+FP0->FP0_CLI+FP0->FP0_LOJA,"A1_NOME")
		FPO->FPO_LOCAL	:= ALLTRIM(SA1->A1_NREDUZ)+" / "+ALLTRIM(FQ5->FQ5_DESTIN)
		FPO->FPO_DTINI	:= DINI
		FPO->FPO_DTFIM	:= DFIM
		FPO->FPO_HRINI  := CHINI
		FPO->FPO_HRFIM  := CHFIM
		FPO->FPO_NRAS   := FQ5->FQ5_AS
		FPO->FPO_PROJET := FQ5->FQ5_SOT
		FPO->FPO_OBRA   := FQ5->FQ5_OBRA
		FPO->FPO_VIAGEM := FQ5->FQ5_VIAGEM
		FPO->FPO_STATUS := CSTATUS 			// 1=DISPO;2=MOB;3=TRAB;4=DESMOBI;5=MONTA;6=DESMONT;9=M.PREV;C=M.CORR;R=RESERVADO;E=ENTRADA NF;S=SAIDA NF;A=ACERTO
		IF NPOSBARRA > 0 					// VERIFICA SE EXISTE REVISÃO
			IF FPF->FPF_TIPOSE == "E"
				FPO->FPO_REVISA := STRZERO(POSICIONE("FP4",3,FQ5->FQ5_FILORI+FQ5->FQ5_AS+FQ5->FQ5_VIAGEM,"FP4_REVNAS"),2)
			ELSEIF FPF->FPF_TIPOSE == "L"
				FPO->FPO_REVISA := STRZERO(POSICIONE("FPA",3,FQ5->FQ5_FILORI+FQ5->FQ5_AS+FQ5->FQ5_VIAGEM,"FPA_REVNAS"),2)
			ENDIF
		ENDIF
		FPO->FPO_MINUTA := FPF->FPF_MINUTA
		FPO->FPO_REGORI := "A" 				// --> A=AUTOMATICO / M=MANUAL
		FPO->(MSUNLOCK())
		LRET := .T.
	ENDIF
ENDIF 

TRBFPO->(DBCLOSEAREA())

RETURN LRET 



// ======================================================================= \\
STATIC FUNCTION FGRAVAZLE( DINI, DFIM, CSTATUS, CHINI, CHFIM, _ADADOSAS)
// ======================================================================= \\

LOCAL   LRET      := .F.
LOCAL   AAREA     := GETAREA()

DEFAULT CHINI     := FQ5->FQ5_HORINI
DEFAULT CHFIM     := FQ5->FQ5_HORFIM
DEFAULT _ADADOSAS := {}

IF LEN( _ADADOSAS ) == 3 .AND. _ADADOSAS[3] > 0		// POSIÇÃO DA DTQ
	FQ5->( DBGOTO( _ADADOSAS[3] ) )
ENDIF

IF FQ5->FQ5_TPAS == "F"								// É UMA AS DE FRETE, NÃO TEM BEM E NÃO IRÁ GERAR PROGRAMAÇÃO.
	RETURN .T.
ENDIF

ST9->(DBSETORDER(1))
IF ST9->(DBSEEK(XFILIAL("ST9") + FPF->FPF_FROTA )) 	// POSICIONA NO ST9
	IF RECLOCK("FPM", .T.)
		FPM->FPM_FILIAL := XFILIAL("FPM")
		FPM->FPM_FROTA  := FPF->FPF_FROTA
		FPM->FPM_ANOMES := SUBSTR(DTOS(DINI),1,6)
		FPM->FPM_DTPROG := DINI
		FPM->FPM_DIASEM := DIASEMANA(DINI)
		FPM->FPM_CODBEM := ""
		FPM->FPM_DESCRI := ST9->T9_NOME
		FPM->FPM_AS     := FQ5->FQ5_AS
		FPM->FPM_PROJET := FQ5->FQ5_SOT
		FPM->FPM_OBRA   := FQ5->FQ5_OBRA
		FPM->FPM_LOCALI := FQ5->(ALLTRIM(FQ5_NOMCLI)+" / "+ALLTRIM(FQ5_DESTIN))
		FPM->FPM_VIAGEM := FQ5->FQ5_VIAGEM
		FPM->FPM_TIPO   := FQ5->FQ5_TPAS
		FPM->FPM_STATUS := CSTATUS
		FPM->FPM_HORA   := TIME()
		FPM->FPM_HRINI  := CHINI
		FPM->FPM_HRFIM  := CHFIM
//		FPM->FPM_CODMOT := CCODMOT
//		FPM->FPM_NOMMOT := CNOMMOT
		FPM->FPM_MINUTA := FPF->FPF_MINUTA
		FPM->(MSUNLOCK())
		LRET := .T.
	ENDIF
ENDIF

RESTAREA(AAREA) 

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION MUDATOT( OOBJ , NCOL , OGETD )
// ======================================================================= \\
// --> VALIDA SE EXISTEM CONFLITOS NA PROGRAMAÇÃO DAS FROTAS

LOCAL   CSEL
LOCAL   N       := 1

PRIVATE ACOLS   := OGETD:ACOLS
PRIVATE AHEADER := OGETD:AHEADER

STATIC  NSECOND := 0

IF INT( NSECOND - SECONDS() ) == 0
	RETURN .F.
ENDIF

IF NCOL == 1
	CSEL := IIF( GDFIELDGET("SELECAO") == "LBOK ", "LBNO ", "LBOK " ) 
	FOR N := 1 TO LEN( ACOLS )
		GDFIELDPUT("SELECAO" , CSEL)  
	NEXT N 
ELSE
	ASORT(ACOLS,,,{|_A1,_A2| _A1[NCOL] <= _A2[NCOL] })
ENDIF

OGETD:REFRESH()

NSECOND := SECONDS()

RETURN .T.



// ======================================================================= \\
STATIC FUNCTION TOKACEIT( OGETD, ODLG )
// ======================================================================= \\
// --> VALIDA SE EXISTEM CONFLITOS NA PROGRAMAÇÃO DAS FROTAS

LOCAL   LRET     := .T.
LOCAL   NI, NJ, CMSG
LOCAL   NSELECTS := 0

PRIVATE ACOLS    := OGETD:ACOLS
PRIVATE AHEADER  := OGETD:AHEADER

FQ5->( DBSETORDER(9) )

FOR NI := 1 TO LEN( ACOLS )

	IF ALLTRIM(GDFIELDGET("SELECAO", NI)) == "LBOK" //"SELECAO"

		FQ5->( DBSEEK( XFILIAL("FQ5") + GDFIELDGET("FPF_AS", NI), .T. ) )
		NSELECTS++

		FOR NJ := 1 TO LEN( ACOLS )
			IF ALLTRIM(GDFIELDGET("SELECAO", NJ)) == "LBOK" .AND. NI != NJ //"SELECAO"
				IF ! EMPTY( GDFIELDGET("FPF_FROTA",NI) ) .AND. ;
					GDFIELDGET("FPF_DATA",NI) == GDFIELDGET("FPF_DATA",NJ) .AND. ;
					GDFIELDGET("FPF_FROTA",NI) == GDFIELDGET("FPF_FROTA",NJ) .AND. ;
                	    FVALID( GDFIELDGET("FPF_HORAI",NI), GDFIELDGET("FPF_HORAF",NI), GDFIELDGET("FPF_HORAI",NJ), GDFIELDGET("FPF_HORAF",NJ) ) .AND. ;
                	    FQ5->FQ5_TPAS != "F"

					CMSG := STR0055+ALLTRIM(GDFIELDGET("FPF_DATA",NI)) //"AS PROGRAMAÇÕES DA FROTA: "
					CMSG += " EM "+DTOC(GDFIELDGET("FPF_DATA",NJ))
					CMSG += STR0056 + GDFIELDGET("FPF_MINUTA",NI) + " E " + GDFIELDGET("FPF_MINUTA",NJ) //", MINUTAS "
					CMSG += STR0057 //" ESTÃO EM CONFLITO, VERIFIQUE!"

					AVISO( STR0058, CMSG, {"OK"}, 2 ) //"CONFLITO DE PROGRAMAÇÃO!"
					RETURN NIL
				ENDIF
			ENDIF
		NEXT NJ 

	ENDIF

NEXT NI 

IF NSELECTS == 0
	MSGALERT(STR0059 , STR0002) //"NÃO HÁ MINUTAS SELECIONADAS"###"GPO - CADZBX.PRW"
	RETURN NIL
ENDIF

IF LRET
	LRET := FACEITM2()
ENDIF

IF LRET
	ODLG:END()
ENDIF

RETURN NIL 



// ======================================================================= \\
STATIC FUNCTION FVALID( CINIX, CFIMX, CINIY, CFIMY )
// ======================================================================= \\
// --> VALIDA SE EXISTE CONFLITO ENTRE OS INTERVALOS DE HORAS

LOCAL BENTRE := { |XELEM, XINI, XFIM|  XELEM >= XINI .AND. XELEM <= XFIM } 

IF EVAL( BENTRE,  CINIX, CINIY, CFIMY )		// CHINIX ESTÁ ENTRE CHINIY E CHFIMY ?
	RETURN .T.
ENDIF

IF EVAL( BENTRE,  CFIMX, CINIY, CFIMY )		// CHFIMX ESTÁ ENTRE CHINIY E CHFIMY ?
	RETURN .T.
ENDIF

IF EVAL( BENTRE,  CINIY, CINIX, CFIMX )		// CHINIY ESTÁ ENTRE CHINIX E CHFIMX ?
	RETURN .T.
ENDIF

IF EVAL( BENTRE,  CFIMY, CINIX, CFIMX )		// CHFIMY ESTÁ ENTRE CHINIX E CHFIMX ?
	RETURN .T.
ENDIF

RETURN .F.



// ======================================================================= \\
STATIC FUNCTION MUDASEL( OGETD )
// ======================================================================= \\
// --> CONTROLE SE MUDA A SELEÇÃO [MARCADO/DESMARCADO] OU EDITA A CÉLULA

PRIVATE ACOLS   := OGETD:ACOLS
PRIVATE AHEADER := OGETD:AHEADER
PRIVATE N       := OGETD:NAT

IF ! GDDELETED( N )
	IF ALLTRIM(AHEADER[OGETD:OBROWSE:COLPOS, 2]) $ STR0060 //"FPF_HORAI;FPF_HORAF;FPF_STATUS"
		OGETD:EDITCELL()
	ELSE
		GDFIELDPUT("SELECAO", IIF(GDFIELDGET("SELECAO") == "LBOK ", "LBNO ", "LBOK ") ) 
	ENDIF
ENDIF

RETURN NIL



// ======================================================================= \\
STATIC FUNCTION ISHORA( CPARHORA, LQUIET )
// ======================================================================= \\
// --> VALIDAÇÃO SE O PARÂMETRO É UMA HORA VÁLIDA

LOCAL   CHORA  := ALLTRIM( CPARHORA )
LOCAL   NHORA, NMIN

DEFAULT LQUIET := .F.

CHORA := STRTRAN( CHORA, ":", "" )

IF LEN( CHORA ) > 4
	CHORA := LEFT( CHORA, 4 )
ENDIF

IF LEN( CHORA ) != 4
	IF ! LQUIET
		MSGALERT( STR0061 , STR0002) //"FORMATO DE HORA INVÁLIDO, VERIFIQUE!"###"GPO - CADZBX.PRW"
	ENDIF
	//CONOUT("ISINUSER(CADZBX.PRW) - FALTA DATA A SER PESQUISADA" + DTOC(DATE()) + " " + TIME())
	RETURN .F.
ENDIF

NHORA := VAL( LEFT(  CHORA, 2 ) )
NMIN  := VAL( RIGHT( CHORA, 2 ) )

IF NHORA > 24 .OR. NHORA < 0
	IF ! LQUIET
		MSGALERT( STR0061 , "GPO - CADZBX.PRW" ) //"FORMATO DE HORA INVÁLIDO, VERIFIQUE!"
	ENDIF
	RETURN .F.
ENDIF

IF NMIN > 59 .OR. NMIN < 0 .OR. ( NHORA==24 .AND. NMIN > 0 )
	IF ! LQUIET
		MSGALERT( STR0061 , STR0002 ) //"FORMATO DE HORA INVÁLIDO, VERIFIQUE!"###"GPO - CADZBX.PRW"
	ENDIF
	RETURN .F.
ENDIF

CPARHORA := CHORA		// CASO SEJA PASSADO O PARÂMETRO COM @, GUARDA VALOR NORMALIZADO

RETURN .T.



// ======================================================================= \\
FUNCTION LOCA00512()
// ======================================================================= \\
// --> VALIDAÇÃO DO LANÇAMENTO DAS HORAS INICIAL E FINAL

LOCAL XVAR  := READVAR()
LOCAL CVAL  := ALLTRIM( &(XVAR) )

IF EMPTY( CVAL )
	RETURN .T.
ENDIF

IF ! ISHORA( @CVAL )
	RETURN .F.
ENDIF

IF XVAR == "M->FPF_HORAI"
	COUTRAH := ALLTRIM( GDFIELDGET("FPF_HORAF") )
	IF ! EMPTY( COUTRAH )
		IF CVAL > COUTRAH
			MSGALERT( STR0062 , STR0002 ) //"HORA INICIAL NÃO PODE SER MAIOR QUE HORA FINAL, VERIFIQUE!"###"GPO - CADZBX.PRW"
			RETURN .F.
		ENDIF
	ENDIF
ELSE
	COUTRAH := ALLTRIM( GDFIELDGET("FPF_HORAI") )
	IF ! EMPTY( COUTRAH )
		IF CVAL < COUTRAH
			MSGALERT( STR0063 , STR0002 ) //"HORA FINAL NÃO PODE SER MENOR QUE HORA INICIAL, VERIFIQUE!"###"GPO - CADZBX.PRW"
			RETURN .F.
		ENDIF
	ENDIF
ENDIF

RETURN .T.



// ======================================================================= \\
STATIC FUNCTION FACEITM2()
// ======================================================================= \\
// --> ACEITE DAS MINUTAS COM DATA/HORA

LOCAL   AAREA     := GETAREA()
LOCAL   NGRAVADOS := 0
LOCAL   CMSG      := ""
LOCAL   NI        := 0 
LOCAL   CMOTO     := SPACE(6)
LOCAL   CAJUD     := SPACE(6)
LOCAL   CTITULO   := ""
LOCAL   CGRPAND   := ""
LOCAL   _LGERZLG  := SUPERGETMV("MV_LOCX239",.F.,.T.)
LOCAL   _CTPPROJ  := ""
Local   _ZBXACVLD := EXISTBLOCK("ZBXACVLD")

IF SBM->(FIELDPOS("BM_XACESS")) > 0
	CGRPAND := LOCA00189()
ELSE
	CGRPAND := SUPERGETMV("MV_LOCX014",.F.,"")
ENDIF

IF ! MSGYESNO(STR0064) //"CONFIRMA O ACEITE DAS MINUTAS SELECIONADAS ??"
	RETURN .F.
ENDIF

FOR NI := 1 TO LEN( ACOLS )

	IF ALLTRIM(GDFIELDGET("SELECAO", NI)) == "LBOK"		
		LGRAVA := .F.

	 //	FQ5->(DBSETORDER(9))  // FQ5_FILIAL + FQ5_AS + FQ5_VIAGEM
		DBSELECTAREA("FQ5")
		FQ5->(DBCLEARFILTER())
		FQ5->(DBSETFILTER({|| ALLTRIM(FQ5->FQ5_AS) == ALLTRIM(GDFIELDGET('FPF_AS', NI)) .AND. FQ5_FILIAL =XFILIAL("FQ5") },"ALLTRIM(FQ5->FQ5_AS) == ALLTRIM(GDFIELDGET('FPF_AS', NI)) .AND. FQ5_FILIAL =XFILIAL('FQ5')"))
		FQ5->(DBGOTOP())
            
	 //	IF ! FQ5->( DBSEEK( XFILIAL("FQ5") + GDFIELDGET("FPF_AS", NI), .T. ) )	// POSICIONA NA DTQ
		IF EMPTY(FQ5->FQ5_CONTRA)	
			CMSG += STR0065+STRZERO(NI,3)+STR0066+ALLTRIM( GDFIELDGET("FPF_AS", NI) ) + STR0067 + CRLF //"LINHA: "###" - AS: "###", NÃO ENCONTRADA!"
			FQ5->(DBCLEARFILTER())
		ELSE
			FQ5->(DBCLEARFILTER())
			
			FPF->( DBGOTO( GDFIELDGET("RECORD", NI) ) )

			DO CASE
			CASE FPF->FPF_TIPOSE == "E" 				// EQUIPAMENTO
				_CTPPROJ := POSICIONE("FP4" , 3 , XFILIAL("FP4")+FQ5->FQ5_AS+FQ5->FQ5_VIAGEM , "FP4_TIPOSE") 
				IF ! LOCA00517( _CTPPROJ , GDFIELDGET("FPF_FROTA",NI) , GDFIELDGET("FPF_DATA",NI) , GDFIELDGET("FPF_HORAI",NI) , GDFIELDGET("FPF_HORAF",NI) ) 
					FP4->(DBSETORDER(3)) 				// FP4_FILIAL + FP4_AS + FP4_VIAGEM
				    IF FP4->( DBSEEK(XFILIAL("FP4") + FQ5->FQ5_AS + FQ5->FQ5_VIAGEM) ) 
						IF _LGERZLG
							IF FP4->FP4_TIPOSE != "M" 	// M=MAO DE OBRA
								IF FGRAVAZLG( GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_STATUS", NI), GDFIELDGET("FPF_HORAI", NI), GDFIELDGET("FPF_HORAF", NI) )
									LGRAVA := .T.
								ENDIF
							ENDIF
						ELSE
							LGRAVA := .T.
						ENDIF
					ENDIF
					
					FPA->( DBSETORDER(3) )  			// FPA_FILIAL + FPA_AS + FPA_VIAGEM
				    IF FPA->( DBSEEK( XFILIAL("FPA") + FQ5->FQ5_AS + FQ5->FQ5_VIAGEM ) )
						IF ALLTRIM(POSICIONE("SB1",1,XFILIAL("SB1") + FPA->FPA_PRODUT,"B1_GRUPO")) $ ALLTRIM(CGRPAND)
							LGRAVA := .T.
						ELSE
							IF _LGERZLG
								IF FGRAVAZLG( GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_STATUS", NI), GDFIELDGET("FPF_HORAI", NI), GDFIELDGET("FPF_HORAF", NI) )
									LGRAVA := .T.
								ENDIF
							ELSE
								LGRAVA := .T.
							ENDIF
						ENDIF
					ENDIF
				ENDIF

			CASE FPF->FPF_TIPOSE == "T" 				// TRANSPORTE
				CTITULO   := STR0068+GDFIELDGET("FPF_MINUTA", NI)+STR0069+DTOC( GDFIELDGET("FPF_DATA", NI) ) //"MINUTA: "###" EM "
				LOCA05923( GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_DATA", NI), FQ5->FQ5_AS, FQ5->FQ5_NOMCLI, FQ5->FQ5_SOT, FQ5->FQ5_OBRA, FQ5->FQ5_VIAGEM, .F. /*LREVIS*/, FQ5->FQ5_SEQCAR, @CMOTO, @CAJUD, CTITULO)
				XVIAGEM   := ""
				_ADADOSAS := GETAS( FPF->FPF_AS )
				IF LEN( _ADADOSAS ) > 0
					XVIAGEM := _ADADOSAS[1][2]	
				ENDIF
				LOCA00522( FPF->FPF_PROJET, XVIAGEM, , , , , , , FPF->FPF_FROTA, CMOTO, CAJUD )	// INTEGRAÇÃO DIÁRIO DE BORDO / OCORRÊNCIAS
				IF FGRAVAZLE( GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_STATUS", NI), GDFIELDGET("FPF_HORAI", NI), GDFIELDGET("FPF_HORAF", NI), _ADADOSAS)
					LGRAVA := .T.
				ENDIF

			CASE FPF->FPF_TIPOSE == "M"	// MAO DE OBRA
				LGRAVA  := .F.
				FQ5->( DBSETORDER(9) )	// FILIAL + AS + VIAGEM
				IF FQ5->( DBSEEK( XFILIAL("FQ5") + FPF->FPF_AS, .T. ) )
					CTITULO := STR0068+FPF->FPF_MINUTA+STR0069+DTOC( FPF->FPF_DATA ) //"MINUTA: "###" EM "
					LGRAVA  := .T.
				ENDIF

			ENDCASE

		ENDIF

		IF LGRAVA
			FPF->( DBGOTO( GDFIELDGET("RECORD", NI) ) )
			IF _ZBXACVLD //EXISTBLOCK("ZBXACVLD")	// PONTO DE ENTRADA PARA INCLUSAO DE BOTOES NAS ACOES RELACIONADAS DA BAIXA DA MINUTA
				LGRAVA := EXECBLOCK("ZBXACVLD",.T.,.T.,{GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_STATUS", NI), GDFIELDGET("FPF_HORAI", NI), GDFIELDGET("FPF_HORAF", NI)})
			ENDIF
			IF LGRAVA
				NGRAVADOS++
               	IF RECLOCK("FPF", .F.)
					FPF->FPF_HORAI  := GDFIELDGET("FPF_HORAI", NI)
					FPF->FPF_HORAF  := GDFIELDGET("FPF_HORAF", NI)
					FPF->FPF_STATUS := "2"  //1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
					FPF->FPF_DTOCOR := DDATABASE
					FPF->(MSUNLOCK())
				ENDIF
			ENDIF
		ENDIF

	ENDIF
NEXT

IF !EMPTY( CMSG )
	AVISO(STR0070, CMSG, {"OK"}, 3) //"OCORRÊNCIAS NO ACEITE DA MINUTA"
ENDIF

IF NGRAVADOS > 0
	MSGALERT(STR0071 , STR0002) //"ACEITE DE MINUTAS EXECUTADO COM SUCESSO."###"GPO - CADZBX.PRW"
ELSE
	MSGALERT(STR0072 , STR0002) //"NENHUM ACEITE FOI EXECUTADO."###"GPO - CADZBX.PRW"
	RESTAREA(AAREA) 
	RETURN .F.
ENDIF

RESTAREA(AAREA) 

RETURN .T. 



// ======================================================================= \\
STATIC FUNCTION FBAIXAM(OBROWSE,CHORAI,CHORAF,CHORAP,CMOTIP,CMINUM, CHALMI, CHALMF, CHJANI, CHJANF, COBS)
// ======================================================================= \\

LOCAL NPOS , NPOSAUX , ATABAUX 
LOCAL AAREAZBX  := FPF->(GETAREA()) 
LOCAL NGRAVADOS := 0
Local _ZBXBXFIM := EXISTBLOCK("ZBXBXFIM") 

DO CASE
CASE EMPTY(CHORAI) .OR. EMPTY(CHORAF)
	MsgAlert(STR0073,STR0002) //"FAVOR INFORMAR HORA INICIAL E HORA FINAL !!"###"Rental")
	RETURN(.F.)
CASE (EMPTY(CHORAP) .OR. CHORAP == "00:00") .AND. !EMPTY(CMOTIP) .AND. ALLTRIM(CHORAP) <> ":"
	MsgAlert(STR0075,STR0002) //'FAVOR INFORMAR O CAMPO HORA PARADA"###"Rental"
	RETURN(.F.)
CASE !EMPTY(CHORAP) .AND. CHORAP != "00:00" .AND.  EMPTY(CMOTIP) .AND. ALLTRIM(CHORAP) <> ":"
	MsgAlert(STR0076,STR0002) //"FAVOR INFORMAR MOTIVO PARADA !!"###"Rental")
	RETURN(.F.)
ENDCASE

ATABAUX := OBROWSE:DATA():AARRAY
NPOSAUX := 0
AEVAL(ATABAUX,{|X|IF(X[1]==CMARCA,NPOSAUX++,)})

DO CASE
CASE NPOSAUX == 0
	MSGALERT(STR0077 , STR0002) //"ATENÇÃO ==> FAVOR SELECIONAR PELO MENOS UMA MINUTA."###"GPO - CADZBX.PRW"
	RETURN(.F.)
ENDCASE

IF EXISTBLOCK("ZBXBXVLD")	// PONTO DE ENTRADA PARA VALIDAR A BAIXA DA MINUTA
	IF !EXECBLOCK("ZBXBXVLD",.T.,.T.,{ATABAUX, ARECNOSZBX})
		RETURN(.F.)
	ENDIF
ENDIF

IF ! MSGYESNO(STR0078) //"CONFIRMA A BAIXA DAS MINUTAS SELECIONADAS ??"
	RETURN(.F.)
ENDIF

FPF->(DBSETORDER(2))  						// 2=FPF_FILIAL+FPF_MINUTA

FOR NPOS:=1 TO LEN(ATABAUX)
	IF ATABAUX[NPOS,NPOSMAR]==CMARCA
	//	FPF->(DBGOTO(ARECNOSZBX[NPOS]))  	// POSICIONA NO ZBX
		IF FPF->(DBSEEK(XFILIAL("FPF") + ATABAUX[NPOS,NPOSMIN]))
			BEGIN TRANSACTION
				IF LOCA00513( FPF->FPF_MINUTA, CHORAI, CHORAF, CHORAP, CMOTIP, CMINUM, CHALMI, CHALMF, CHJANI, CHJANF, COBS, "" /*CMSGRET*/, .T. /*LPOSIC*/ )	// ATUALIZA ZBX-MINUTA
					NGRAVADOS++
					OBROWSE:DATA():AARRAY[NPOS,NPOSSTA] := FPF->FPF_STATUS
					OBROWSE:DATA():AARRAY[NPOS,NPOSHOI] := STRTRAN(CHORAI, ":", "" )
					OBROWSE:DATA():AARRAY[NPOS,NPOSHOF] := STRTRAN(CHORAF, ":", "" )
					OBROWSE:DATA():AARRAY[NPOS,NPOSHOP] := STRTRAN(CHORAP, ":", "" )
					OBROWSE:DATA():AARRAY[NPOS,NPOSMOT] := STRTRAN(CMOTIP, ":", "" )
					OBROWSE:DATA():AARRAY[NPOS,NPOSMIM] := CMINUM
					OBROWSE:DATA():AARRAY[NPOS,NPOSALI] := STRTRAN(CHALMI, ":", "" )
					OBROWSE:DATA():AARRAY[NPOS,NPOSALF] := STRTRAN(CHALMF, ":", "" )
					OBROWSE:DATA():AARRAY[NPOS,NPOSJAI] := STRTRAN(CHJANI, ":", "" )
					OBROWSE:DATA():AARRAY[NPOS,NPOSJAF] := STRTRAN(CHJANF, ":", "" )
					OBROWSE:DATA():AARRAY[NPOS,NPOSOBS] := COBS
					IF _ZBXBXFIM //EXISTBLOCK("ZBXBXFIM")	// PONTO DE ENTRADA NO FINAL DA BAIXA DA MINUTA
						EXECBLOCK("ZBXBXFIM",.T.,.T.,{FPF->FPF_MINUTA, OBROWSE})
					ENDIF
				ENDIF
			END TRANSACTION
        ENDIF
	ENDIF
NEXT

OBROWSE:REFRESH(.T.)
OBROWSE:SETFOCUS()

IF NGRAVADOS>0
	MSGINFO(STR0079 , STR0002) //"BAIXA EXECUTADA COM SUCESSO."###"GPO - CADZBX.PRW"
ELSE
	MSGALERT(STR0080 , STR0002) //"NENHUMA BAIXA FOI EXECUTADA."###"GPO - CADZBX.PRW"
ENDIF

RESTAREA(AAREAZBX)

RETURN(.T.) 



// ======================================================================= \\
FUNCTION LOCA00513(CMINUTA, CHORAI, CHORAF, CHORAP, CMOTIP, CMINUM, CHALMI, CHALMF, CHJANI, CHJANF, COBS, CMSGRET, LPOSIC)
// ======================================================================= \\
// --> ROTINA QUE REALIZA A BAIXA DA MINUTA.... FUTURAMENTE A SER UTILIZADA PELO WEBSERVICE DO FLUIG
LOCAL   LRET := .T.

DEFAULT LPOSIC := .F.

CMSGRET := ""

IF ! LPOSIC
	FPF->( DBSETORDER() )
	IF ! FPF->( DBSEEK( XFILIAL("FPF") + CMINUTA ) )
		CMSGRET := STR0068+CMINUTA+STR0081 //"MINUTA: "###" NAO ENCONTRADA!"
		RETURN .F.
	ENDIF
ENDIF

IF FPF->( RECLOCK("FPF", .F. ) )
	FPF->FPF_FILIAL := XFILIAL("FPF")
 //	FPF->FPF_HORAI  := CHORAI
 //	FPF->FPF_HORAF  := CHORAF
	FPF->FPF_HREALI := STRTRAN(CHORAI,":","")
	FPF->FPF_HREALF := STRTRAN(CHORAF,":","")
	FPF->FPF_HRPARA := STRTRAN(CHORAP,":","")
	FPF->FPF_MOTIVO := CMOTIP
	FPF->FPF_MINUTM := CMINUM
	FPF->FPF_BXALMI := STRTRAN(CHALMI,":","")
	FPF->FPF_BXALMF := STRTRAN(CHALMF,":","")
	FPF->FPF_BXJANI := STRTRAN(CHJANI,":","")
	FPF->FPF_BXJANF := STRTRAN(CHJANF,":","")
	FPF->FPF_BXOBS  := COBS
	FPF->FPF_STATUS := "3"  //1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
	FPF->FPF_DTOCOR := DDATABASE
	FPF->(MSUNLOCK())
	LRET    := .T.
ELSE
	CMSGRET := STR0082 //"NAO FOI POSSIVEL GRAVAR AS INFORMACOES"
	LRET    := .F.
ENDIF

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION FVERMOTCAN(CMOTCAN , CMOTCAND , OMOTCAND) 
// ======================================================================= \\

LOCAL LRET := .T.

CMOTCAND := POSICIONE("SX5",1,XFILIAL("SX5")+"ZX"+CMOTCAN,"X5_DESCRI")  //POSICIONA NO MOTIVO DO CANCELAMENTO

IF VALTYPE(OMOTCAND)=="O"
	OMOTCAND:REFRESH()
ENDIF

IF EMPTY(CMOTCAND)
	MSGALERT(STR0083 , STR0002) //"MOTIVO DO CANCELAMENTO NÃO ENCONTRADO."###"GPO - CADZBX.PRW"
	LRET:=.F.
ENDIF

RETURN(LRET)



// ======================================================================= \\
STATIC FUNCTION FCANCELAM(OBROWSE,CMOTCAN)
// ======================================================================= \\

LOCAL NPOS , NPOSAUX , ATABAUX 
LOCAL AAREAZBX  := FPF->(GETAREA())
LOCAL NGRAVADOS := 0 
Local _ZBXCANMI := EXISTBLOCK("ZBXCANMI")

DO CASE
CASE EMPTY(CMOTCAN)
	MSGALERT(STR0084 , STR0002) //"FAVOR INFORMAR O MOTIVO DO CANCELAMENTO."###"Rental"
	RETURN(.F.)
CASE CMOTCAN == "03"
	MSGALERT(STR0085 , STR0002) //'MOTIVO "03 - AS CANCELADA" NÃO PODE SER UTILIZADA EM CANCELAMENTOS MANUAIS.'###"Rental"
	RETURN(.F.)	
ENDCASE

ATABAUX := OBROWSE:DATA():AARRAY
NPOSAUX := 0
AEVAL(ATABAUX,{|X|IF(X[1]==CMARCA,NPOSAUX++,)})

DO CASE
CASE NPOSAUX==0
	MSGALERT(STR0086 , STR0002) //"ATENÇÃO ==> FAVOR SELECIONAR PELO MENOS UMA MINUTA."###"GPO - CADZBX.PRW"
	RETURN(.F.)
ENDCASE

IF !MSGYESNO(STR0087 , STR0002)  //"CONFIRMA O CANCELAMENTO DAS MINUTAS SELECIONADAS ??"###"GPO - CADZBX.PRW"
	RETURN(.F.)
ENDIF

FPF->(DBSETORDER(2))  //2=FPF_FILIAL+FPF_MINUTA

FOR NPOS:=1 TO LEN(ATABAUX)
	IF ATABAUX[NPOS,NPOSMAR]==CMARCA

		IF FPF->(DBSEEK(XFILIAL("FPF") + ATABAUX[NPOS,NPOSMIN]))		
			// QUERY PARA VERIFICAR SE HOUVE MEDICOES - INICIO
			_LPODECANC := .T.
			CQRY := "SELECT COUNT(*) AS TOT "
			CQRY += " FROM " + RETSQLNAME("FPP") + " ZLM"
			CQRY += " WHERE FPP_FILIAL = '" + XFILIAL("FPP") + "'"
			CQRY += " AND FPP_MINUTA = '"+FPF->FPF_MINUTA+"'"
			CQRY += " AND FPP_DTMEDI <> '' "
			CQRY += " AND D_E_L_E_T_ = '' "
			IF !SELECT("QZLM")==0 
				QFPP->(DBCLOSEAREA()) 
			ENDIF
			DBUSEAREA(.T., "TOPCONN", TCGENQRY(,,CQRY), "QZLM", .F., .T.)
			IF QFPP->TOT > 0
				_LPODECANC := .F.
			ENDIF	
			QFPP->(DBCLOSEAREA())
			// QUERY PARA VERIFICAR SE HOUVE MEDICOES - FINAL 
			
			IF _LPODECANC
				IF FPF->(RECLOCK("FPF",.F.))
					FPF->FPF_STATUS := "5"  //1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
					FPF->FPF_MOTCAN := CMOTCAN  //MOTIVO DO CANCELAMENTO
					FPF->FPF_DTOCOR := DDATABASE
					FPF->(MSUNLOCK())
	
					FKILLPROG( FPF->FPF_TIPOSE, FPF->FPF_MINUTA )	// REMOVE PROGRAMACAO
	
					IF _ZBXCANMI //EXISTBLOCK("ZBXCANMI")	// PONTO DE ENTRADA NO CANCELAMENTO DA MINUTA
						EXECBLOCK("ZBXCANMI",.T.,.T.,{FPF->FPF_MINUTA, FPF->FPF_STATUS, FPF->FPF_AS})
					ENDIF
					
					NGRAVADOS++
					OBROWSE:DATA():AARRAY[NPOS,NPOSSTA]:=FPF->FPF_STATUS
				ENDIF
			ENDIF
		ENDIF
	ENDIF
NEXT NPOS

OBROWSE:REFRESH(.T.)
OBROWSE:SETFOCUS()

IF NGRAVADOS>0
	MSGALERT(STR0088 , STR0002) //"CANCELAMENTO EXECUTADO COM SUCESSO."###"GPO - CADZBX.PRW"
ELSE
	MSGALERT(STR0089 , STR0002) //"NENHUM CANCELAMENTO FOI EXECUTADO."###"GPO - CADZBX.PRW"
ENDIF

RESTAREA(AAREAZBX)

RETURN(.T.) 



// ======================================================================= \\
STATIC FUNCTION FESTORNAM(OBROWSE)
// ======================================================================= \\

LOCAL AVERZBX 
LOCAL AVERZLM 
//LOCAL AERROSZBX := {} 
//LOCAL AERROSZLM := {} 

LOCAL NPOS,NPOSAUX,ATABAUX
LOCAL AAREAZBX := FPF->(GETAREA())
LOCAL CSTATUS
LOCAL NLIDOS := 0 , NGRAVADOS := 0 
Local _ZBXESTVL := EXISTBLOCK("ZBXESTVL")
Local _ZBXESTMI := EXISTBLOCK("ZBXESTMI")

ATABAUX := OBROWSE:DATA():AARRAY
NPOSAUX := 0
AEVAL(ATABAUX,{|X|IF(X[1]==CMARCA,NPOSAUX++,)})

DO CASE
CASE NPOSAUX==0
	MSGALERT(STR0086 , STR0002) //"ATENÇÃO ==> FAVOR SELECIONAR PELO MENOS UMA MINUTA."###"GPO - CADZBX.PRW"
	RETURN(.F.)
ENDCASE

IF !MSGYESNO(STR0090 , STR0002) //"CONFIRMA O ESTORNO DAS MINUTAS SELECIONADAS ??"###"GPO - CADZBX.PRW"
	RETURN(.F.)
ENDIF

FPF->(DBSETORDER(2))  //2=FPF_FILIAL+FPF_MINUTA

FOR NPOS:=1 TO LEN(ATABAUX)
	IF ATABAUX[NPOS,NPOSMAR]==CMARCA
		CSTATUS:=""
		DO CASE
		CASE ATABAUX[NPOS,NPOSSTA]=="2"  //1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
		//	IF FDELZLG(ATABAUX[NPOS,NPOSNAS],ATABAUX[NPOS,NPOSDAT])  //EXCLUI A PROGRAMAÇÃO
			CSTATUS:="1"
		//	ENDIF

		CASE ATABAUX[NPOS,NPOSSTA]=="3"  //1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
			IF ! FVERZLG(ATABAUX[NPOS,NPOSNAS],ATABAUX[NPOS,NPOSDAT])  //VERIFICA SE EXISTE PROGRAMAÇÃO
				CSTATUS := "2"
			ELSE
		//		MSGALERT("EXISTE PROGRAMAÇÃO DIÁRIA NO DIA "+DTOC(ATABAUX[NPOS,NPOSDAT])+". ESTORNO NÃO EXECUTADO." , "GPO - CADZBX.PRW")
				CSTATUS := "2"
			ENDIF

		CASE ATABAUX[NPOS,NPOSSTA]=="5"  //1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
			AVERZBX := LOCA00514("FESTORNAM",ATABAUX[NPOS,NPOSFRO],ATABAUX[NPOS,NPOSFRO],ATABAUX[NPOS,NPOSDAT],ATABAUX[NPOS,NPOSDAT],ATABAUX[NPOS,NPOSNAS], ATABAUX[NPOS,NPOSHOI],ATABAUX[NPOS,NPOSHOF]) 		// VERIFICA SE EXISTE ZBX
			IF LEN(AVERZBX)==0
				CSTATUS := "1"
			ELSE
				MSGALERT(STR0091+DTOC(ATABAUX[NPOS,NPOSDAT])+STR0092+ALLTRIM(AVERZBX[1,3])+STR0093 , STR0002) //"EXISTE MINUTA NO DIA "###" AS: "###". ESTORNO NÃO EXECUTADO."###"GPO - CADZBX.PRW"
				CSTATUS := ""
			ENDIF
			IF EMPTY(CSTATUS)
				AVERZLM := LOCA00515("FESTORNAM",ATABAUX[NPOS,NPOSFRO],ATABAUX[NPOS,NPOSFRO],ATABAUX[NPOS,NPOSDAT],ATABAUX[NPOS,NPOSDAT],ATABAUX[NPOS,NPOSNAS])  //VERIFICA SE EXISTE ZLM
				IF LEN(AVERZLM)==0
					CSTATUS := "1"
				ELSE
					MSGALERT(STR0094+DTOC(ATABAUX[NPOS,NPOSDAT])+STR0092+ALLTRIM(AVERZLM[1,2])+STR0093 , STR0002) //"EXISTE MEDIÇÃO NO DIA "###" AS: "###". ESTORNO NÃO EXECUTADO."###"GPO - CADZBX.PRW"
					CSTATUS := ""
				ENDIF
			ENDIF

		ENDCASE

		NLIDOS++
		IF !EMPTY(CSTATUS)
		    FPF->(DBSETORDER(2))  					// 2=FPF_FILIAL+FPF_MINUTA
		    IF FPF->(DBSEEK(XFILIAL("FPF") + ATABAUX[NPOS,NPOSMIN]))		
				
				LESTOK := .T.
				IF _ZBXESTVL //EXISTBLOCK("ZBXESTVL")			// PONTO DE ENTRADA PARA VALIDAR SE PODE REALIZAR O ESTORNO
		   		   LESTOK := EXECBLOCK("ZBXESTVL",.T.,.T.,{CSTATUS, ATABAUX[NPOS,NPOSSTA]})
				ENDIF				    
				IF LESTOK 
					IF FPF->(RECLOCK("FPF",.F.))
						FPF->FPF_STATUS := CSTATUS  // 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
						IF CSTATUS == "2"
						//	FPF->FPF_HORAI  := SPACE(01)
						//	FPF->FPF_HORAF  := SPACE(01)
							FPF->FPF_HREALI := ""
							FPF->FPF_HREALF := ""
							FPF->FPF_BXALMI := ""
							FPF->FPF_BXALMF := ""
							FPF->FPF_BXJANI := ""
							FPF->FPF_BXJANF := ""
							FPF->FPF_BXOBS  := ""
							FPF->FPF_HRPARA := ""
							FPF->FPF_MOTIVO := ""
							FPF->FPF_MINUTM := ""
						ENDIF
						FPF->(MSUNLOCK())

						IF CSTATUS == "1" 
						 //	FKILLPROG( FPF->FPF_TIPOSE, FPF->FPF_MINUTA )	// REMOVE PROGRAMACAO
							IF ATABAUX[NPOS,NPOSSTA] == "5"
								FPF->(RECLOCK("FPF",.F.))
								FPF->FPF_MOTCAN := ""
								FPF->(MSUNLOCK())
								// RECUPERA A PROGRAMAÇÃO DIARIA DA MINUTA QUE ESTAVA CANCELADA
								/* removido por questao das pendencias técnicas
								_CQRYZLG := " UPDATE " + RETSQLNAME("FPO") + " " + CRLF
								_CQRYZLG += " SET   D_E_L_E_T_ = '' " + CRLF
								_CQRYZLG += " WHERE FPO_NRAS   = '" + FPF->FPF_AS      + "' " + CRLF
								_CQRYZLG += "   AND FPO_MINUTA = '" + FPF->FPF_MINUTA  + "' " + CRLF
								_CQRYZLG += "   AND D_E_L_E_T_ = '*' " + CRLF
								TCSQLEXEC(_CQRYZLG)					  
								*/
						   ELSEIF ATABAUX[NPOS,NPOSSTA] == "2" 
								// VOLTA O STATUS DA PROGRAMAÇÃO DIARIA PARA R=RESERVADO
								/* removido pelas pendencias tecnicas
								_CQRYZLG := " UPDATE " + RETSQLNAME("FPO") + " " + CRLF
								_CQRYZLG += " SET   FPO_STATUS = 'R' " + CRLF
								_CQRYZLG += " WHERE FPO_NRAS   = '" + FPF->FPF_AS      + "' " + CRLF
								_CQRYZLG += "   AND FPO_MINUTA = '" + FPF->FPF_MINUTA  + "' " + CRLF
								_CQRYZLG += "   AND D_E_L_E_T_ = '' " + CRLF 
								TCSQLEXEC(_CQRYZLG) 
								*/
							ENDIF
						ENDIF

						IF _ZBXESTMI //EXISTBLOCK("ZBXESTMI")	// PONTO DE ENTRADA NO FINAL DA BAIXA DA MINUTA
							EXECBLOCK("ZBXESTMI",.T.,.T.,{FPF->FPF_MINUTA, CSTATUS, ATABAUX[NPOS,NPOSSTA], FPF->FPF_AS})
						ENDIF

						NGRAVADOS++
						OBROWSE:DATA():AARRAY[NPOS,NPOSSTA]:=FPF->FPF_STATUS
					ENDIF 
				ENDIF 
			ENDIF
		ENDIF
	ENDIF
NEXT

OBROWSE:REFRESH(.T.)
OBROWSE:SETFOCUS()

//IF LEN(AERROSZBX)>0
//	IF MSGYESNO("ESTORNO NÃO PODE SER EXECUTADO. DESEJA VISUALIZAR OS ERROS ??")
//		LOCA00516(AERROSZBX,"INCONSISTÊNCIAS")  //VISUALIZA OS ERROS
//	ENDIF
//ELSE
//	MSGALERT("ESTORNO EXECUTADO COM SUCESSO." , "GPO - CADZBX.PRW")
//ENDIF

IF NGRAVADOS > 0
	MSGALERT(STR0095 , STR0002) //"ESTORNO EXECUTADO COM SUCESSO."###"GPO - CADZBX.PRW"
ELSE
	MSGALERT(STR0096 , STR0002) //"NENHUM ESTORNO FOI EXECUTADO."###"GPO - CADZBX.PRW"
ENDIF

RESTAREA(AAREAZBX)

RETURN .T.



// ======================================================================= \\
STATIC FUNCTION FTRAZDESC(CFROTA,CDESC,ODESC) 
// ======================================================================= \\
// --> PREENCHE O CAMPO COM O NOME DO BEM

CDESC := POSICIONE("ST9",1,XFILIAL("ST9")+CFROTA,"T9_NOME")  //PREENCHE O CAMPO COM O NOME DO BEM

IF EMPTY(CDESC)
	CDESC := POSICIONE("SRA",1,XFILIAL("SRA")+CFROTA,"RA_NOME")
ENDIF

IF VALTYPE(ODESC)=="O" 
	ODESC:REFRESH() 
ENDIF 

RETURN 



// ======================================================================= \\
STATIC FUNCTION FVERSIGLAS(ATROCA) 
// ======================================================================= \\
// --> VALIDA SE AS SIGLAS SÃO IGUAIS, CONFORME FUNÇÃO VALIDTROCAEQ(ATROCA) DO LOCT111 

LOCAL AAREAST9 := ST9->(GETAREA())
LOCAL AAREASRA := SRA->(GETAREA())
LOCAL LRET     := .T.
LOCAL CFAMILIA := ""
//LOCAL CEQUIATU := SUBSTR(ATROCA[1],1,3)//+SUBSTR(ATROCA[1],6,3)  //123XX678
//LOCAL CEQUINOV := SUBSTR(ATROCA[2],1,3)//+SUBSTR(ATROCA[2],6,3)  //123XX678

ST9->(DBSETORDER(1))  							// T9_FILIAL+T9_CODBEM
IF ST9->(DBSEEK(XFILIAL("ST9")+ATROCA[1]))
	CFAMILIA := ST9->T9_CODFAMI
ENDIF

IF !ST9->(DBSEEK(XFILIAL("ST9")+ATROCA[2]))  	// POSICIONA NO ST9
	SRA->(DBSETORDER(1))  						// RA_FILIAL+RA_MAT
	IF !SRA->(DBSEEK(XFILIAL("SRA")+ATROCA[2]))	// POSICIONA NO SRA
		MSGALERT(STR0097+ALLTRIM(ATROCA[2])+ STR0131, STR0002) //"O RECURSO SELECIONADO "###"É INVÁLIDO"###GPO - CADZBX.PRW"
		LRET := .F.
	ENDIF
ENDIF

IF !EMPTY(CFAMILIA) .AND. LRET .AND. SUBSTR(CAS,2,1) <> "2"
	IF CFAMILIA <> ST9->T9_CODFAMI
		MSGALERT(STR0098 , STR0002) //"A FAMÍLIA DO BEN DA TROCA NÃO É CORRESPONDENTE AO BEM ORIGINAL."###"GPO - CADZBX.PRW"
		LRET := .F.
	ENDIF
ENDIF

IF ST9->T9_TIPOSE <> "E" .AND. LRET .AND. SUBSTR(CAS,2,1) <> "2"
	MSGALERT(STR0099 , STR0002) //"ESTE RECURSO NÃO É UM EQUIPAMENTO."###"GPO - CADZBX.PRW"
	LRET := .F.
ENDIF
/*
IF (CEQUIATU <> CEQUINOV) .AND. LRET
	MSGALERT("O RECURSO SELECIONADO ("+ALLTRIM(ATROCA[2])+"), NÃO TEM O MESMO TIPO OU CONFIGURAÇÃO DO QUE FOI VENDIDO ("+ALLTRIM(ATROCA[1])+")." , "GPO - CADZBX.PRW")
	LRET := .F.
ENDIF
*/
SRA->(RESTAREA(AAREASRA))
ST9->(RESTAREA(AAREAST9))

RETURN(LRET)



// ======================================================================= \\
STATIC FUNCTION FTROCAFRO(CFROTAD,CFROTAP,DDATAD,DDATAA,OFROTAP,CAS)
// ======================================================================= \\

LOCAL LRET := .T.
LOCAL CMSG
LOCAL NI
LOCAL AVERZBX

IF EMPTY(CFROTAP)
	MSGALERT(STR0100 , STR0002) //"FAVOR INFORMAR PARA QUAL RECURSO."###"GPO - CADZBX.PRW"
	OFROTAP:SETFOCUS()
	RETURN .F.
ENDIF

AVERZBX := LOCA00514("FTROCAFRO",CFROTAP,CFROTAP,DDATAD,DDATAA,CAS, FPF->FPF_HORAI, FPF->FPF_HORAF)  //VERIFICA SE EXISTE ZBX

IF LEN(AVERZBX)==0
	LRET := MSGYESNO(STR0101+ALLTRIM(CFROTAD)+STR0102+ALLTRIM(CFROTAP)+" ??") //"CONFIRMA A TROCA DO RECURSO "###" PARA "
ELSE
	IF LEN(AVERZBX) == 1
		CMSG := STR0103 + DTOC(FPF->FPF_DATA) + STR0104 +CRLF+CRLF //"NO DIA "###" EXISTE A SEGUINTE PROGRAMACAO:"
	ELSE
		CMSG := STR0103 + DTOC(FPF->FPF_DATA) + STR0105 +CRLF+CRLF //"NO DIA "###" EXISTEM AS SEGUINTES PROGRAMACOES:"
	ENDIF
	FOR NI := 1 TO LEN( AVERZBX )
		CMSG += STR0068+ AVERZBX[NI,4] + STR0106+ALLTRIM( AVERZBX[NI,6] ) +STR0066+ALLTRIM( AVERZBX[NI,3] )+STR0107+TRANSFORM(AVERZBX[NI,7], "@R 99:99")+STR0108+TRANSFORM(AVERZBX[NI,8], "@R 99:99")+ CRLF  //"MINUTA: "###" - PROJETO: "###" - AS: "###" DAS "###" AS "
	NEXT
	CMSG += CRLF + STR0109 //"CONTINUA?"
	LRET := .F.
	IF AVISO(STR0110, CMSG, {"SIM","NAO"}, 3 ) == 1 //"CONFLITO DE PROGRAMACAO"
		LRET := .T.
	ENDIF
ENDIF

IF LRET
	// --> TROCA NA TABELA DE TURNOS
	DBSELECTAREA("FPE")
	FPE->(DBCLEARFILTER())
	FPE->(DBSETFILTER({|| ALLTRIM(FPE->FPE_PROJET) == ALLTRIM(FPF->FPF_PROJET) .AND. ALLTRIM(FPE->FPE_OBRA) == ALLTRIM(FPF->FPF_OBRA) .AND. ALLTRIM(FPE->FPE_FROTA) == ALLTRIM(FPF->FPF_FROTA) .AND. FPE_FILIAL =XFILIAL('FPE') },"ALLTRIM(FPE->FPE_PROJET) == ALLTRIM(FPF->FPF_PROJET) .AND. ALLTRIM(FPE->FPE_OBRA) == ALLTRIM(FPF->FPF_OBRA) .AND. ALLTRIM(FPE->FPE_FROTA) == ALLTRIM(FPF->FPF_FROTA) .AND. FPE_FILIAL =XFILIAL('FPE')"))
	FPE->(DBGOTOP())
	IF ! EMPTY(FPE->FPE_PROJET)
		RECLOCK("FPE",.F.)
		FPE->FPE_FROTA := CFROTAP
    	MSUNLOCK()
	ENDIF
    
	DBSELECTAREA("FQ5")
	FQ5->(DBCLEARFILTER())
	FQ5->(DBSETFILTER({|| ALLTRIM(FQ5->FQ5_AS) == ALLTRIM(FPF->FPF_AS)},"ALLTRIM(FQ5->FQ5_AS) == ALLTRIM(FPF->FPF_AS)"))
	FQ5->(DBGOTOP())
             		    
	DBSELECTAREA("FPS")
	FPS->(DBCLEARFILTER())
	FPS->(DBSETFILTER({|| ALLTRIM(FPS->FPS_PROJET) == ALLTRIM(FPF->FPF_PROJET) .AND. ALLTRIM(FPS->FPS_OBRA) == ALLTRIM(FPF->FPF_OBRA)  .AND. ALLTRIM(FPS->FPS_VIAGEM) == ALLTRIM(FQ5->FQ5_VIAGEM)},"ALLTRIM(FPS->FPS_PROJET) == ALLTRIM(FPF->FPF_PROJET) .AND. ALLTRIM(FPS->FPS_OBRA) == ALLTRIM(FPF->FPF_OBRA)  .AND. ALLTRIM(FPS->FPS_VIAGEM) == ALLTRIM(FQ5->FQ5_VIAGEM)"))
	FPS->(DBGOTOP())
	IF ! EMPTY(FPS->FPS_PROJET)
		RECLOCK("FPS",.F.)
		FPS->FPS_X5COD := CFROTAP
		MSUNLOCK()
	ENDIF 
		    
	IF FPF->(RECLOCK("FPF",.F.))
		FPF->FPF_FROTA := CFROTAP
		FPF->(MSUNLOCK())

		XVIAGEM   := ""
		_ADADOSAS := GETAS( FPF->FPF_AS )
		IF LEN( _ADADOSAS ) > 0
			XVIAGEM := _ADADOSAS[1][2]	
		ENDIF

		LOCA00522( FPF->FPF_PROJET, XVIAGEM, , , , , , , CFROTAP )	// INTEGRAÇÃO DIÁRIO DE BORDO /OCORRÊNCIAS

		DO CASE
		CASE FPF->FPF_TIPOSE == "E"	// EQUIPAMENTO
			FPO->( DBORDERNICKNAME( "MINUTAZLG" ) )
			IF FPO->( DBSEEK( XFILIAL("FPO") + FPF->FPF_MINUTA, .T. ) )
				RECLOCK("FPO",.F.)
				FPO->FPO_FROTA := CFROTAP
				MSUNLOCK()
			ENDIF
		CASE FPF->FPF_TIPOSE == "T"
			FPM->( DBORDERNICKNAME( "MINUTAZLE" ) )
			IF FPM->( DBSEEK( XFILIAL("FPM") + FPF->FPF_MINUTA, .T. ) )
				RECLOCK("FPM",.F.)
				FPM->FPM_FROTA := CFROTAP
				MSUNLOCK()
			ENDIF
		ENDCASE
			
		IF EXISTBLOCK("ZBXTEQFM") //PONTO DE ENTRADA NO FINAL DA ATUALIZAÇÃO DE TROCA DE EQUIPAMENTO DA MINUTA.
			EXECBLOCK("ZBXTEQFM",.T.,.T.,{CFROTAP})
		ENDIF

	ENDIF

ENDIF

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION FVERZLG( CNRAS, DDATA ) 
// ======================================================================= \\
// --> VERIFICA SE EXISTE PROGRAMAÇÃO
LOCAL   AAREA    := GETAREA()
LOCAL   AAREAZLG := FPO->( GETAREA() )
LOCAL   LRET     := .F.

FPO->( DBSETORDER(5) ) 							// FPO_FILIAL+FPO_NRAS+FPO_FROTA+FPO_CODBEM
FPO->( DBSEEK(XFILIAL("FPO")+CNRAS) )
WHILE FPO->(!EOF() .AND. FPO_NRAS==CNRAS) 		// WHILE FPO->(!EOF()) .AND. FPO->FPO_FILIAL == XFILIAL("FPO") .AND. FPO->FPO_NRAS == CNRAS
	IF FPO->(DDATA>=FPO_DTINI .AND. DDATA<=FPO_DTFIM)
		IF FPO->(RECLOCK("FPO",.F.))
			FPO->(DBDELETE())
			FPO->(MSUNLOCK())
		ENDIF
	ENDIF
	FPO->(DBSKIP())
ENDDO 

FPO->(RESTAREA(AAREAZLG)) 
RESTAREA(AAREA) 

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA00514(CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS, CHINI, CHFIM, CEXCEPT) 
// ======================================================================= \\
// --> VERIFICA SE EXISTE ZBX
LOCAL ARET

ARET := FVERZBX(CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS, CHINI, CHFIM, CEXCEPT) 

RETURN(ARET)



// ======================================================================= \\
STATIC FUNCTION FVERZBX(CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS, CHINI, CHFIM, CEXCEPT) 
// ======================================================================= \\
// --> VERIFICA SE EXISTE ZBX
LOCAL ARET  := {}

FMONTAVER("QRYVER",CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS, CHINI, CHFIM, CEXCEPT)  //MONTA A QUERY

QRYVER->(DBGOTOP())
WHILE QRYVER->(!EOF())
	DO CASE
	CASE UPPER(CROTINA)==UPPER("FESTORNAM")
		QRYVER->(AADD(ARET,{FPF_RECNO,FPF_DATA,FPF_AS,FPF_MINUTA,FPF_STATUS, FPF_PROJET, FPF_HORAI, FPF_HORAF}))
	CASE UPPER(CROTINA)==UPPER("ZA5LINOK")
		QRYVER->(AADD(ARET,{FPF_RECNO,FPF_DATA,FPF_AS,FPF_MINUTA,FPF_STATUS, FPF_PROJET, FPF_HORAI, FPF_HORAF}))
	CASE UPPER(CROTINA)==UPPER("LOCA013")
		QRYVER->(AADD(ARET,{FPF_RECNO,FPF_DATA,FPF_AS,FPF_MINUTA,FPF_STATUS, FPF_PROJET, FPF_HORAI, FPF_HORAF}))
	CASE UPPER(CROTINA)==UPPER("FTROCAFRO")
		QRYVER->(AADD(ARET,{FPF_RECNO,FPF_DATA,FPF_AS,FPF_MINUTA,FPF_STATUS, FPF_PROJET, FPF_HORAI, FPF_HORAF}))
	CASE UPPER(CROTINA)==UPPER("FACEMINUTA")
		QRYVER->(AADD(ARET,{FPF_RECNO,FPF_DATA,FPF_AS,FPF_MINUTA,FPF_STATUS, FPF_PROJET, FPF_HORAI, FPF_HORAF}))
	CASE UPPER(CROTINA)==UPPER("LOCA048")
		QRYVER->(AADD(ARET,{FPF_RECNO,FPF_DATA,FPF_AS,FPF_MINUTA,FPF_STATUS, FPF_PROJET, FPF_HORAI, FPF_HORAF}))
	ENDCASE
	QRYVER->(DBSKIP())
ENDDO 

RETURN(ARET) 



// ======================================================================= \\
STATIC FUNCTION FMONTAVER(CALIASQRY,CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS, CHINI, CHFIM, CEXCEPT)
// ======================================================================= \\
// --> MONTA A QUERY
LOCAL AESTRU
LOCAL CQRY      := ""
LOCAL CCRLF     := CHR(13)+CHR(10)
LOCAL NPOS      := 0 
Local _cCampos

DEFAULT CHINI   := "0000"
DEFAULT CHFIM   := "2400"
DEFAULT CEXCEPT := ""

CHINI := ALLTRIM( CHINI )
CHFIM := ALLTRIM( CHFIM )
	
_cCampos := "FPF_MINUTA,FPF_AS,FPF_DATA,FPF_FROTA,FPF_PROJET,FPF_OBRA,FPF_NROMED,FPF_HORAI,FPF_HORAF,FPF_HRPARA,"
_cCampos += "FPF_MOTIVO,FPF_STATUS,FPF_MINUTM,FPF_FILIAL,FPF_RECNO"

CQRY := "SELECT"
CQRY += " ZBX.FPF_MINUTA, ZBX.FPF_AS, ZBX.FPF_DATA, ZBX.FPF_FROTA, ZBX.FPF_PROJET, ZBX.FPF_OBRA," + CCRLF
CQRY += " ZBX.FPF_NROMED, ZBX.FPF_HORAI, ZBX.FPF_HORAF, ZBX.FPF_HRPARA, ZBX.FPF_MOTIVO, ZBX.FPF_STATUS, ZBX.FPF_MINUTM," + CCRLF
CQRY += " ZBX.FPF_FILIAL, ZBX.R_E_C_N_O_ AS FPF_RECNO" + CCRLF
CQRY += " FROM " + RETSQLNAME("FPF") + " ZBX" + CCRLF
CQRY += " WHERE ZBX.FPF_FILIAL = '" + XFILIAL("FPF") + "'" + CCRLF
DO CASE
CASE UPPER(CROTINA)==UPPER("FESTORNAM")
	CQRY += " AND ZBX.FPF_AS <> '" + CAS + "'" + CCRLF
CASE UPPER(CROTINA)==UPPER("ZA5LINOK")
	CQRY += " AND ZBX.FPF_AS <> '" + CAS + "'" + CCRLF
	CQRY += " AND ZBX.FPF_STATUS IN ('2','3','4','5','6')" + CCRLF  	// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
CASE UPPER(CROTINA)==UPPER("LOCA013")  									// GERA CONTRATO
	CQRY += " AND ZBX.FPF_AS <> '" + CAS + "'" + CCRLF
 //	CQRY += " AND ZBX.FPF_STATUS IN ('1','2','3','4','5','6')" + CCRLF  // 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
	CQRY += " AND ZBX.FPF_STATUS NOT IN ('5')" + CCRLF  				// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
CASE UPPER(CROTINA)==UPPER("FTROCAFRO")  								// TROCA FROTA
	CQRY += " AND ZBX.FPF_AS <> '" + CAS + "'" + CCRLF
	CQRY += " AND ZBX.FPF_STATUS IN ('2','3','4','5','6')" + CCRLF  	// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
CASE UPPER(CROTINA)==UPPER("FACEMINUTA")
	CQRY += " AND ZBX.FPF_STATUS IN ('2','3','4','6')" + CCRLF  		// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
//SE UPPER(CROTINA)==UPPER("LOCA048")  									// MEDIÇÃO
 //	CQRY += " AND ZBX.FPF_STATUS IN ('3')" + CCRLF  					// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
ENDCASE
IF ! EMPTY( CEXCEPT )
	CQRY += " AND " + ALLTRIM(CEXCEPT) + CCRLF
ENDIF
//CQRY += " AND FPF_FROTA <> ''" + CCRLF
//CQRY += " AND FPF_FROTA BETWEEN '"+CFROTAD+"' AND '"+CFROTAA+"' " + CCRLF
IF UPPER(CROTINA) == "LOCA048"
	CQRY += " AND ZBX.FPF_AS = '" + CAS + "'" + CCRLF
	CQRY += " AND ZBX.FPF_DATA BETWEEN '" + DTOS(DDATAD) + "' AND '" + DTOS(DDATAA) + "'" + CCRLF
ELSE
	CQRY += " AND ZBX.FPF_FROTA BETWEEN '" + CFROTAD + "' AND '" + CFROTAA + "'" + CCRLF
	/*
	CQRY += " AND ZBX.FPF_DATA BETWEEN '" + DTOS(DDATAD) + "' AND '" + DTOS(DDATAA) + "'" + CCRLF
	CQRY += " AND (FPF_HORAI BETWEEN '" + CHINI + "' AND '" + CHFIM + "'" + CRLF
	CQRY +=   " OR FPF_HORAF BETWEEN '" + CHINI + "' AND '" + CHFIM + "'" + CRLF
	CQRY +=   " OR '" + CHINI + "' BETWEEN FPF_HORAI AND FPF_HORAF " + CRLF
	CQRY +=   " OR '" + CHFIM + "' BETWEEN FPF_HORAI AND FPF_HORAF )" + CRLF
	*/
	CQRY += " AND ( ( ZBX.FPF_DATA BETWEEN '" + DTOS(DDATAD) + "' AND '" + DTOS(DDATAA) + "' AND ZBX.FPF_HORAI > '" + TRANSFORM(CHINI,"@R 99:99") + "' AND ZBX.FPF_HORAI < '" + TRANSFORM(CHFIM,"@R 99:99") + "' ) " + CRLF
	CQRY +=   " OR  ( ZBX.FPF_DATA BETWEEN '" + DTOS(DDATAD) + "' AND '" + DTOS(DDATAA) + "' AND ZBX.FPF_HORAF > '" + TRANSFORM(CHINI,"@R 99:99") + "' AND ZBX.FPF_HORAF < '" + TRANSFORM(CHFIM,"@R 99:99") + "' ) " + CRLF
	CQRY +=   " OR  ( ZBX.FPF_DATA BETWEEN '" + DTOS(DDATAD) + "' AND '" + DTOS(DDATAA) + "' AND ZBX.FPF_HORAI = '" + TRANSFORM(CHINI,"@R 99:99") + "' AND ZBX.FPF_HORAF = '" + TRANSFORM(CHFIM,"@R 99:99") + "' ))" + CRLF
ENDIF
CQRY += " AND ZBX.D_E_L_E_T_ = ' ' " + CCRLF
CQRY += " ORDER BY ZBX.FPF_FROTA , ZBX.FPF_DATA " + CCRLF
CQRY := CHANGEQUERY( CQRY )
	
IF !SELECT(CALIASQRY)==0 
	(CALIASQRY)->(DBCLOSEAREA()) 
ENDIF

DBUSEAREA(.T., "TOPCONN", TCGENQRY(,,CQRY), CALIASQRY, .F., .T.)

AESTRU := FPF->(DBSTRUCT())
FOR NPOS:=1 TO LEN(AESTRU)
	IF AESTRU[NPOS,2]<>"C" .AND. AESTRU[NPOS,2]<>"M"
		//IF (CALIASQRY)->(!TYPE(AESTRU[NPOS,1])=="U")
		If alltrim(AESTRU[NPOS,1]) $ _cCampos
			TCSETFIELD(CALIASQRY,AESTRU[NPOS,1],AESTRU[NPOS,2],AESTRU[NPOS,3],AESTRU[NPOS,4])
		ENDIF
	ENDIF
NEXT NPOS 

RETURN 



// ======================================================================= \\
FUNCTION LOCA00515(CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS) 
// ======================================================================= \\
// --> VERIFICA SE EXISTE ZLM
LOCAL ARET

ARET := FVERZLM(CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS) 

RETURN(ARET)



// ======================================================================= \\
STATIC FUNCTION FVERZLM(CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS) 
// ======================================================================= \\
// --> VERIFICA SE EXISTE ZLM
LOCAL ARET := {} 

FMONTAZLM("QRYZLM",CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS)  //MONTA A QUERY

QRYFPP->(DBGOTOP())
WHILE QRYFPP->(!EOF())
	DO CASE
	CASE UPPER(CROTINA)==UPPER("FESTORNAM")
		QRYFPP->(AADD(ARET,{FPP_DTMEDI,FPN_AS}))
	ENDCASE
	QRYFPP->(DBSKIP())
ENDDO 

RETURN(ARET) 



// ======================================================================= \\
STATIC FUNCTION FMONTAZLM(CALIASQRY,CROTINA,CFROTAD,CFROTAA,DDATAD,DDATAA,CAS) 
// ======================================================================= \\
// --> MONTA A QUERY
LOCAL AESTRU , CQRY := "" , CCRLF := CHR(13)+CHR(10) 
LOCAL NPOS := 0 
Local _cCampos := ""

_cCampos := "FPN_COD,FPN_AS,FPP_FROTA,FPP_DTMEDI,FPN_FILIAL,FPN_RECNO"

CQRY     += " SELECT ZLF.FPN_COD    , ZLF.FPN_AS , ZLM.FPP_FROTA , ZLM.FPP_DTMEDI , " + CCRLF
CQRY     += "        ZLF.FPN_FILIAL , ZLF.R_E_C_N_O_ AS FPN_RECNO" + CCRLF
CQRY     += " FROM "+RETSQLNAME("FPN")+" ZLF" + CCRLF
CQRY     += "        LEFT JOIN "+RETSQLNAME("FPP")+" ZLM ON ZLF.FPN_FILIAL = ZLM.FPP_FILIAL AND ZLM.FPP_COD = ZLF.FPN_COD AND ZLM.D_E_L_E_T_ = '' " + CCRLF
CQRY     += " WHERE  ZLF.D_E_L_E_T_ = ''" + CCRLF
CQRY     += "   AND  ZLF.FPN_FILIAL = '"  + XFILIAL("FPN") + "'" + CCRLF
DO CASE
CASE UPPER(CROTINA)==UPPER("FESTORNAM")
	CQRY += "   AND  ZLF.FPN_AS = '" + CAS + "'" + CCRLF
	CQRY += "   AND  ZLM.FPP_FROTA  BETWEEN '" + CFROTAD      + "' AND '" + CFROTAA      + "'" + CCRLF
	CQRY += "   AND  ZLM.FPP_DTMEDI BETWEEN '" + DTOS(DDATAD) + "' AND '" + DTOS(DDATAA) + "'" + CCRLF
	CQRY += " ORDER BY ZLM.FPP_FROTA , ZLM.FPP_DTMEDI" + CCRLF
ENDCASE
CQRY := CHANGEQUERY( CQRY )
IF !SELECT(CALIASQRY)==0 
	(CALIASQRY)->(DBCLOSEAREA()) 
ENDIF
DBUSEAREA(.T., "TOPCONN", TCGENQRY(,,CQRY), CALIASQRY, .F., .T.)

AESTRU := FPN->(DBSTRUCT())
FOR NPOS:=1 TO LEN(AESTRU)
	IF AESTRU[NPOS][2]<>"C" .AND. AESTRU[NPOS][2]<>"M"
		//IF (CALIASQRY)->(!TYPE(AESTRU[NPOS,1])=="U")
		If alltrim(AESTRU[NPOS,1]) $ _cCampos
			TCSETFIELD(CALIASQRY,AESTRU[NPOS,1],AESTRU[NPOS,2],AESTRU[NPOS,3],AESTRU[NPOS,4])
		ENDIF
	ENDIF
NEXT NPOS 

RETURN



// ======================================================================= \\
FUNCTION LOCA00516(AERROS,CTITJAN) 				
// ======================================================================= \\
// --> VISUALIZA OS ERROS 
// --> FUNÇAO CHAMADA POR: GRCONTR.PRW / LOCT035.PRW / LOCT111.PRW
LOCAL NPOS , ACOLS , ACOLS0 , AHEADER , BHEADER , ODLG , ABUTTONS := {} 
LOCAL NSTATUS , ASTATUS := FSTATUS("LOCA00516") 		// MONTA OS STATUS

PRIVATE OBROWSE

ACOLS := {} 
FOR NPOS:=1 TO LEN(AERROS)
	ACOLS0:={}
	AADD(ACOLS0,AERROS[NPOS,1])
	AADD(ACOLS0,AERROS[NPOS,2])
	AADD(ACOLS0,AERROS[NPOS,3])
	AADD(ACOLS0,AERROS[NPOS,4])
	AADD(ACOLS0,AERROS[NPOS,5])
	AADD(ACOLS0,AERROS[NPOS,6])
	AADD(ACOLS0,AERROS[NPOS,8])
	AADD(ACOLS0,AERROS[NPOS,7])
	AADD(ACOLS,ACOLS0)
NEXT

AHEADER := {}
BHEADER := "{||ACOLS[OBROWSE:AT(),1]}";AADD(AHEADER,{OEMTOANSI("EQUIPAMENTO"   ),&BHEADER,"C","@!",1,10,0})
BHEADER := "{||ACOLS[OBROWSE:AT(),2]}";AADD(AHEADER,{OEMTOANSI("NRO AS"        ),&BHEADER,"C","@!",1,10,0})
BHEADER := "{||ACOLS[OBROWSE:AT(),3]}";AADD(AHEADER,{OEMTOANSI("INÍCIO"        ),&BHEADER,"D","@E",1,08,0})
BHEADER := "{||ACOLS[OBROWSE:AT(),4]}";AADD(AHEADER,{OEMTOANSI("FIM"           ),&BHEADER,"D","@E",1,08,0})
BHEADER := "{||ACOLS[OBROWSE:AT(),5]}";AADD(AHEADER,{OEMTOANSI("DATA"          ),&BHEADER,"D","@E",1,08,0})
BHEADER := "{||ACOLS[OBROWSE:AT(),6]}";AADD(AHEADER,{OEMTOANSI("MINUTA"        ),&BHEADER,"C","@!",1,10,0})
BHEADER := "{||ACOLS[OBROWSE:AT(),7]}";AADD(AHEADER,{OEMTOANSI("INCONSISTÊNCIA"),&BHEADER,"C","@!",1,60,0})
BHEADER := "{||ACOLS[OBROWSE:AT(),8]}";AADD(AHEADER,{OEMTOANSI("STATUS"        ),&BHEADER,"C","@!",1,01,0})

DEFINE MSDIALOG ODLG FROM 100,0 TO 500,1000 TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL
	OBROWSE:=FWBROWSE():NEW()
	OBROWSE:SETDATAARRAY()
	OBROWSE:SETARRAY(ACOLS)
	FOR NSTATUS:=1 TO LEN(ASTATUS)
		OBROWSE:ADDLEGEND(ASTATUS[NSTATUS,3],ASTATUS[NSTATUS,1],ASTATUS[NSTATUS,2])
	NEXT
	OBROWSE:SETCOLUMNS(AHEADER)
	OBROWSE:SETOWNER(ODLG)
	OBROWSE:DISABLEREPORT()
	OBROWSE:DISABLECONFIG()
	OBROWSE:ACTIVATE()
ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{||CLOSE(ODLG)},{||CLOSE(ODLG)},,ABUTTONS)

RETURN



// ======================================================================= \\
FUNCTION LOCA00517( CTPPRJ , CFROTA , DDATA , CHINI , CHFIM , LQUIET ) 
// ======================================================================= \\
// --> RETORNA SE A FROTA ESTÁ EM USO

DEFAULT CHINI  := "00:00" 
DEFAULT CHFIM  := "24:00" 
DEFAULT LQUIET := .F. 

// --> CONSISTÊNCIAS DOS PARÂMETROS PASSADOS
IF EMPTY(CTPPRJ) 
	IF ! LQUIET 
		MSGALERT(STR0111+ALLTRIM(FQ5->FQ5_AS)+STR0112+FQ5->FQ5_VIAGEM+"]." , STR0002)  //"FALTA O TIPO DO PROJETO (FP4_TIPOSE) REFERENTE A AS:["###"] - VIAGEM:["###"Rental"
	ENDIF 
	//CONOUT("ISINUSER(CADZBX.PRW) - FALTA TIPO DO PROJETO" + DTOC(DATE()) + " " + TIME()) 
	RETURN .T. 
ENDIF 

IF EMPTY(CFROTA) .AND. CTPPRJ <> "M" 
	IF ! LQUIET
		MSGALERT(STR0113 , STR0002) //"FALTA A FROTA"###"GPO - CADZBX.PRW"
	ENDIF
	//CONOUT("ISINUSER(CADZBX.PRW) - FALTA FROTA" + DTOC(DATE()) + " " + TIME())
	RETURN .T. 
ENDIF 

IF EMPTY(DDATA) 
	IF ! LQUIET
		MSGALERT(STR0114 , STR0002)  //"FALTA A DATA A SER PESQUISADA"###"GPO - CADZBX.PRW"
	ENDIF
	//CONOUT("ISINUSER(CADZBX.PRW) - FALTA DATA A SER PESQUISADA" + DTOC(DATE()) + " " + TIME())
	RETURN .T. 
ENDIF 

IF ! ISHORA(@CHINI , LQUIET) .OR. !ISHORA(@CHFIM , LQUIET) 
	RETURN ARETORNO 
ENDIF 

// --> VERIFICAÇÃO DAS PROGRAMAÇÕES.
DO CASE
CASE CTPPRJ $ "E;G;P;L;M"		// EQUIPAMENTO E PLATAFORMA
	RETURN   FZLGEMUSO(CFROTA , DDATA , CHINI , CHFIM , LQUIET) 
CASE CTPPRJ == "T"				// TRANSPORTE
	RETURN LOCA00518(CFROTA , DDATA , CHINI , CHFIM , LQUIET) 
ENDCASE 

RETURN .F.



// ======================================================================= \\
STATIC FUNCTION FZLGEMUSO(CFROTA , DDATA , CHINI , CHFIM , LQUIET) 
// ======================================================================= \\
// --> VERIFICA SE EXISTE PROGRAMAÇÃO - FROTA EQUIPAMENTO EM USO NO PERÍODO? .T. / .F.
LOCAL   AAREA    := GETAREA()
LOCAL   AAREAZLG := FPO->( GETAREA() )
LOCAL   AAREAZBX := FPF->( GETAREA() )
LOCAL   LRET     := .F.
LOCAL   CMSG     := ""

DEFAULT CHINI    := "0000"
DEFAULT CHFIM    := "2400"
DEFAULT LQUIET   := .F.

FPO->( DBSETORDER(3) )		// FPO_FILIAL + FPO_FROTA + DTOS(FPO_DTINI) + FPO_CODBEM
FPO->( DBSEEK( XFILIAL("FPO") + CFROTA + DTOS(DDATA), .T. ) )

WHILE ! FPO->( EOF() ) .AND. FPO->FPO_FILIAL == XFILIAL("FPO") .AND. FPO->FPO_FROTA == CFROTA .AND. FPO->FPO_DTINI <= DDATA
	IF FVALID( CHINI, CHFIM, FPO->FPO_HRINI, FPO->FPO_HRFIM )
		IF ! LQUIET
		//	ALERT("FROTA EM USO NO PERÍODO EM "+DTOC(DDATA)+" DAS "+TRANSFORM(FPO->FPO_HRINI,"@R 99:99")+" AND "+TRANSFORM(FPO->FPO_HRFIM,"@R 99:99") )
			FPF->( DBSETORDER(1) )	//	FPF_FILIAL, FPF_FROTA, FPF_DATA, FPF_MINUTA, R_E_C_N_O_, D_E_L_E_T_
			FPF->( DBSEEK(XFILIAL("FPF")+CFROTA+DTOS(DDATA)), .T. )

			CMSG += STR0115+DTOC(DDATA) + STR0107 //"FROTA EM USO EM "###" DAS "
			CMSG += TRANSFORM(FPO->FPO_HRINI,"@R 99:99")+" AS "+TRANSFORM(FPO->FPO_HRFIM,"@R 99:99") + CRLF
			CMSG += STR0068+ FPF->FPF_MINUTA +STR0106 + ALLTRIM(FPO->FPO_PROJET) + STR0066 + FPO->FPO_NRAS //"MINUTA: "###" - PROJETO: "###" - AS: "
			MSGALERT( STR0116+CMSG , STR0002 ) //"CONFLITO DE PROGRAMAÇÃO: "###"Rental"
		ENDIF
		LRET := .T.
		EXIT
	ENDIF

	FPO->( DBSKIP() )
ENDDO 

FPF->( RESTAREA(AAREAZBX) )
FPO->( RESTAREA(AAREAZLG) )
RESTAREA(AAREA) 

RETURN LRET



// ======================================================================= \\
FUNCTION LOCA00518( CFROTA , DDATA , CHINI , CHFIM , LQUIET ) 
// ======================================================================= \\
// --> VERIFICA SE EXISTE PROGRAMAÇÃO - FROTA TRANSPORTE EM USO NO PERÍODO? .T. / .F.
LOCAL   AAREA    := GETAREA()
LOCAL   AAREAZLE := FPM->( GETAREA() )
LOCAL   LRET     := .F.
LOCAL   CANOMES  := LEFT( DTOS( DDATA ), 6 )

DEFAULT CHINI    := "0000"
DEFAULT CHFIM    := "2400"
DEFAULT LQUIET   := .F.

FPM->( DBSETORDER(1) )		// FPM_FILIAL + FPM_ANOMES + FPM_FROTA + DTOS(FPM_DTPROG) + FPM_CODBEM
FPM->( DBSEEK( XFILIAL("FPM") + CANOMES + CFROTA + DTOS(DDATA), .T. ) )

WHILE ! FPM->( EOF() ) .AND. FPM->FPM_FILIAL == XFILIAL("FPM") .AND. FPM->FPM_FROTA == CFROTA .AND. FPM->FPM_DTPROG <= DDATA
	IF FVALID( CHINI, CHFIM, FPM->FPM_HRINI, FPM->FPM_HRFIM )
		IF ! LQUIET
			MSGALERT(STR0117+DTOC(DDATA)+STR0107+TRANSFORM(FPM->FPM_HRINI,"@R 99:99")+" AND "+TRANSFORM(FPM->FPM_HRFIM,"@R 99:99") , STR0002)  //"FROTA EM USO NO PERÍODO EM "###" DAS "###"GPO - CADZBX.PRW"
		ENDIF
		LRET := .T.
		EXIT
	ENDIF
	FPM->( DBSKIP() )
ENDDO 

FPM->( RESTAREA(AAREAZLE) )
RESTAREA(AAREA) 

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION FKILLPROG( CTIPOSE , CMINUTA )
// ======================================================================= \\
// --> REMOVE PROGRAMACAO
LOCAL AAREA     := GETAREA()
LOCAL CALIAS    := ""
LOCAL CKEY      := ""
LOCAL CCOND     := ""
LOCAL CNICKNAME := ""

IF EMPTY( CTIPOSE ) .OR. EMPTY( CMINUTA )
	ALERT("(FKILLPROG) INFORME A MINUTA!")
	RETURN NIL
ENDIF

DO CASE
CASE CTIPOSE $ "E;L"
	CALIAS    := "FPO"
	CNICKNAME := "MINUTAZLG"
	CKEY      := XFILIAL("FPO") + CMINUTA
	CCOND     := " ! FPO->( EOF() ) .AND. FPO->FPO_FILIAL=='"+XFILIAL('FPO')+"' .AND. FPO->FPO_MINUTA == '"+CMINUTA+"'"

CASE CTIPOSE == "T"
	CALIAS    := "FPM"
	CNICKNAME := "MINUTAZLE"
	CKEY      := XFILIAL("FPM") + CMINUTA
	CCOND     := " ! FPM->( EOF() ) .AND. FPM->FPM_FILIAL=='"+XFILIAL('FPM')+"' .AND. FPM->FPM_MINUTA == '"+CMINUTA+"'"

	FPF->( DBSETORDER(2) )	// FILIAL + MINUTA
	IF FPF->( DBSEEK( XFILIAL("FPF") + CMINUTA ) )
		CALIASQRY := GETNEXTALIAS()
		CQUERY := "SELECT R_E_C_N_O_ RECORD FROM "+RETSQLNAME("FPL")
		CQUERY += " WHERE FPL_FILIAL = '"+XFILIAL("FPL")+"'"
		CQUERY += " AND FPL_AS = '" + FPF->FPF_AS + "'"
		CQUERY += " AND FPL_DTINI = '" + DTOS(FPF->FPF_DATA) + "'"
		CQUERY += " AND D_E_L_E_T_= ' '"
		DBUSEAREA(.T., "TOPCONN", TCGENQRY(,,CQUERY), CALIASQRY, .F., .T.)

		WHILE ! (CALIASQRY)->( EOF() )
			FPL->( DBGOTO( (CALIASQRY)->RECORD ) )
			RECLOCK("FPL", .F.)
			FPL->( DBDELETE() )
			MSUNLOCK()
			(CALIASQRY)->( DBSKIP() )
		ENDDO 
		(CALIASQRY)->( DBCLOSEAREA() )

		CQUERY := "SELECT R_E_C_N_O_ RECORD FROM "+RETSQLNAME("FPQ")
		CQUERY += " WHERE FPQ_FILIAL = '"+XFILIAL("FPQ")+"'"
		CQUERY += " AND FPQ_AS = '" + FPF->FPF_AS + "'"
		CQUERY += " AND FPQ_DATA = '" + DTOS(FPF->FPF_DATA) + "'"
		CQUERY += " AND D_E_L_E_T_= ' '"
		DBUSEAREA(.T., "TOPCONN", TCGENQRY(,,CQUERY), CALIASQRY, .F., .T.)

		WHILE ! (CALIASQRY)->( EOF() )
			FPQ->( DBGOTO( (CALIASQRY)->RECORD ) )
			RECLOCK("FPQ", .F.)
			FPQ->( DBDELETE() )
			MSUNLOCK()
			(CALIASQRY)->( DBSKIP() )
		ENDDO 
		(CALIASQRY)->( DBCLOSEAREA() )
	ENDIF
ENDCASE

DBSELECTAREA( CALIAS )
DBORDERNICKNAME( CNICKNAME )
DBSEEK( CKEY, .T. )

WHILE &( CCOND )
	RECLOCK( CALIAS, .F. )
	DBDELETE()
	DBSKIP()
ENDDO 

RESTAREA(AAREA)

RETURN NIL



// ======================================================================= \\
FUNCTION LOCA00519( CAS )
// ======================================================================= \\
// --> REMOVE PROGRAMACAO E CANCELA MINUTA
LOCAL AAREA  := GETAREA()
LOCAL LRET   := .F.

IF EMPTY( CAS )
	RETURN .F.
ENDIF

FPF->( DBSETORDER(4) )	// FILIAL + AS + MINUTA
FPF->( DBSEEK( XFILIAL("FPF") + CAS ) )
WHILE !FPF->( EOF() ) .AND. FPF->FPF_FILIAL == XFILIAL("FPF") .AND. FPF->FPF_AS == CAS
	IF FPF->FPF_STATUS <> "1"
	   LRET := .F.
	ENDIF
	FPF->( DBSKIP() )
ENDDO

IF LRET
    FPF->( DBSEEK( XFILIAL("FPF") + CAS ) )    
	WHILE ! FPF->( EOF() ) .AND. FPF->FPF_FILIAL == XFILIAL("FPF") .AND. FPF->FPF_AS == CAS
		RECLOCK("FPF",.F.)
		FPF->FPF_STATUS := "5"  						// 1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
		FPF->FPF_MOTCAN := "03"  						// MOTIVO DO CANCELAMENTO | SERVICO CANCELADO | CANCELAMENTO AS
		FPF->FPF_DTOCOR := DDATABASE
		MSUNLOCK()

		FKILLPROG( FPF->FPF_TIPOSE, FPF->FPF_MINUTA )	// REMOVE PROGRAMACAO

		FPF->( DBSKIP() )
	ENDDO 
ENDIF 

RESTAREA( AAREA )

RETURN LRET



// ======================================================================= \\
STATIC FUNCTION GETAS(CAS) 
// ======================================================================= \\
// --> RETORNA GETAS(NÚMERO DA AS), RETORNA ALGUNS CAMPOS EM FORMATO ARRAY. 
// --> NÃO EXISTE NENHUMA CHAMADA PARA ESTA FUNCTION 
LOCAL AAS      := {}
LOCAL AAREA    := GETAREA()
LOCAL AAREADTQ := FQ5->(GETAREA())

IF ! EMPTY(CAS) 
	FQ5->(DBSETORDER(9)) 
	IF FQ5->( DBSEEK(XFILIAL("FQ5") + CAS , .T.) ) 
		AADD( AAS , {FQ5->FQ5_AS  ,  FQ5->FQ5_VIAGEM  ,  FQ5->(RECNO())} ) 		// DEIXAR O RECNO POR ÚLTIMO
	ENDIF 
ENDIF 

FQ5->( RESTAREA(AAREADTQ) ) 
RESTAREA(AAREA) 

RETURN ACLONE(AAS) 



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ ITVALXT  º AUTOR ³ IT UP BUSINESS     º DATA ³  12/20/18   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDACAO DOS HORARIOS NA BAIXA DA MINUTA                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA00520(ACOLS,AHEADER) 

LOCAL _CTEMP1
LOCAL _CTEMP2
LOCAL _LBLOQ	:= .F.       

IF EXISTBLOCK("ZBXBXVHR")	// PONTO DE ENTRADA PARA VALIDACAO DOS HORARIOS DA BAIXA DA MINUTA.
	_LBLOQ := EXECBLOCK("ZBXBXVHR",.T.,.T.,{ACOLS, AHEADER})
	IF _LBLOQ
		RETURN .F.
	ENDIF
ENDIF

// --> VALIDACAO DO HORARIO INICIAL E HORARIO FINAL -------------------------
IF CHORAI <> "  :  "  .AND. !EMPTY(CHORAI)          
	_CTEMP1 := SUBSTR(CHORAI,1,2)+SUBSTR(CHORAI,4,2)
	IF _CTEMP1 > "2400"
		MSGALERT(STR0118,STR0119) //"HORÁRIO INICIAL INVÁLIDO."###"ATENÇÃO!"
		RETURN .F.
	ENDIF
ENDIF

IF CHORAF <> "  :  "  .AND. !EMPTY(CHORAF)          
	_CTEMP2 := SUBSTR(CHORAF,1,2)+SUBSTR(CHORAF,4,2)
	IF _CTEMP2 > "2400"
		MSGALERT(STR0120,STR0119) //"HORÁRIO FINAL INVÁLIDO."###"ATENÇÃO!"
		RETURN .F.
	ENDIF
ENDIF

IF CHORAI <> "  :  " .AND. CHORAF <> "  :  " .AND. !EMPTY(CHORAI) .AND. !EMPTY(CHORAF)
	
	IF _CTEMP1 == "2400"
		_CTEMP1 := "0000"
	ENDIF                            
	
	IF _CTEMP1 > "2400"
		MSGALERT(STR0118 , STR0002) //"HORÁRIO INICIAL INVÁLIDO."###"Rental"
		RETURN .F.
	ENDIF
	
	IF _CTEMP2 > "2400"
		MSGALERT(STR0120 , STR0002) //"HORÁRIO FINAL INVÁLIDO."###"Rental"
		RETURN .F.
	ENDIF
	
	IF _CTEMP1 == _CTEMP2  .OR. (_CTEMP1 == "0000" .AND. _CTEMP2 == "2400")
		MSGALERT(STR0121 , STR0002) //"O HORÁRIO INICIAL E FINAL NÃO PODEM SER IGUAIS."###"GPO - CADZBX.PRW"
		IF _CTEMP1 == "2400"
		 //	MSGALERT("O HORÁRIO INICIAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00","ATENÇÃO!")
		ELSEIF _CTEMP2 == "2400"
		 //	MSGALERT("O HORÁRIO FINAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00","ATENÇÃO!")
		ENDIF
		RETURN .F.
	ENDIF
	   
	IF _CTEMP1 > _CTEMP2
		MSGALERT(STR0122 , STR0002)  //"OS HORÁRIOS NÃO PODEM CARACTERIZAR A MUDANÇA DE DIAS."###"Rental"
		IF _CTEMP1 == "2400"
		 //	MSGALERT("O HORÁRIO INICIAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00","ATENÇÃO!")
		ELSEIF _CTEMP2 == "2400"
		 //	MSGALERT("O HORÁRIO FINAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00","ATENÇÃO!")
		ENDIF
		RETURN .F.  
	ENDIF
ENDIF    

// --> VALIDACAO DO ALMOÇO INICIAL E HORARIO FINAL --------------------------
IF CHALMI <> "  :  "  .AND. !EMPTY(CHALMI)          
	_CTEMP1 := SUBSTR(CHALMI,1,2)+SUBSTR(CHALMI,4,2)
	IF _CTEMP1 > "2400"
		MSGALERT(STR0123 , STR0002) //"HORÁRIO DE ALMOÇO INICIAL INVÁLIDO."###"GPO - CADZBX.PRW"
		RETURN .F.
	ENDIF
ENDIF

IF CHALMF <> "  :  "  .AND. !EMPTY(CHALMF)          
	_CTEMP2 := SUBSTR(CHALMF,1,2)+SUBSTR(CHALMF,4,2)
	IF _CTEMP2 > "2400"
		MSGALERT(STR0124 , STR0002) //"HORÁRIO DE ALMOÇO FINAL INVÁLIDO."###"GPO - CADZBX.PRW"
		RETURN .F.
	ENDIF
ENDIF

IF CHALMI <> "  :  " .AND. CHALMF <> "  :  " .AND. !EMPTY(CHALMI) .AND. !EMPTY(CHALMF)
	IF _CTEMP1 == "2400"
		_CTEMP1 := "0000"
	ENDIF                            
	
	IF _CTEMP1 > "2400"
		MSGALERT(STR0123 , STR0002) //"HORÁRIO DE ALMOÇO INICIAL INVÁLIDO."###"GPO - CADZBX.PRW"
		RETURN .F.
	ENDIF
	
	IF _CTEMP2 > "2400"
		MSGALERT(STR0124 , STR0002) //"HORÁRIO DE ALMOÇO FINAL INVÁLIDO."###"GPO - CADZBX.PRW"
		RETURN .F.
	ENDIF
	
	IF _CTEMP1 == _CTEMP2  .OR. (_CTEMP1 == "0000" .AND. _CTEMP2 == "2400")
		MSGALERT(STR0125 , STR0002) //"O HORÁRIO DE ALMOÇO INICIAL E FINAL NÃO PODEM SER IGUAIS."###"Rental"
		IF _CTEMP1 == "2400"
		//	MSGALERT("O HORÁRIO DE ALMOÇO INICIAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00" , "GPO - CADZBX.PRW")
		ELSEIF _CTEMP2 == "2400"
		//	MSGALERT("O HORÁRIO DE ALMOÇO FINAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00" , "GPO - CADZBX.PRW")
		ENDIF
		RETURN .F.
	ENDIF
	   
	IF _CTEMP1 > _CTEMP2
		MSGALERT(STR0126) //"OS HORÁRIOS DE ALMOÇO NÃO PODEM CARACTERIZAR A MUDANÇA DE DIAS."
		IF _CTEMP1 == "2400"
		 //	MSGALERT("O HORÁRIO DE ALMOÇO INICIAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00" , "GPO - CADZBX.PRW")
		ELSEIF _CTEMP2 == "2400"
		 //	MSGALERT("O HORÁRIO DE ALMOÇO FINAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00" , "GPO - CADZBX.PRW")
		ENDIF
		RETURN .F.  
	ENDIF
ENDIF    

// --> VALIDACAO DO JANTAR INICIAL E HORARIO FINAL --------------------------
IF CHJANI <> "  :  "  .AND. !EMPTY(CHJANI)          
	_CTEMP1 := SUBSTR(CHJANI,1,2)+SUBSTR(CHJANI,4,2)
	IF _CTEMP1 > "2400"
		MSGALERT(STR0127,STR0002) //"HORÁRIO DE JANTAR INICIAL INVÁLIDO."###"GPO - CADZBX.PRW"
		RETURN .F.
	ENDIF
ENDIF

IF CHJANF <> "  :  "  .AND. !EMPTY(CHJANF)          
	_CTEMP2 := SUBSTR(CHJANF,1,2)+SUBSTR(CHJANF,4,2)
	IF _CTEMP2 > "2400"
		MSGALERT(STR0128,STR0002) //"HORÁRIO DE JANTAR FINAL INVÁLIDO."###"Rental"
		RETURN .F.
	ENDIF
ENDIF

IF CHJANI <> "  :  " .AND. CHJANF <> "  :  " .AND. !EMPTY(CHJANI) .AND. !EMPTY(CHJANF)
	IF _CTEMP1 == "2400"
		_CTEMP1 := "0000"
	ENDIF                            
	
	IF _CTEMP1 > "2400"
		MSGALERT(STR0127,STR0002) //"HORÁRIO DE JANTAR INICIAL INVÁLIDO."###"Rental"
		RETURN .F.
	ENDIF
	
	IF _CTEMP2 > "2400"
		MSGALERT(STR0128,STR0002) //"HORÁRIO DE JANTAR FINAL INVÁLIDO."###"GPO - CADZBX.PRW"
		RETURN .F.
	ENDIF
	
	IF _CTEMP1 == _CTEMP2  .OR. (_CTEMP1 == "0000" .AND. _CTEMP2 == "2400")
		MSGALERT(STR0129,STR0002) //"O HORÁRIO DE JANTAR INICIAL E FINAL NÃO PODEM SER IGUAIS."###"GPO - CADZBX.PRW"
		IF _CTEMP1 == "2400"
		 //	MSGALERT("O HORÁRIO DE JANTAR INICIAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00","GPO - CADZBX.PRW")
		ELSEIF _CTEMP2 == "2400"
		 //	MSGALERT("O HORÁRIO DE JANTAR FINAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00","GPO - CADZBX.PRW")
		ENDIF
		RETURN .F.
	ENDIF
	
	IF _CTEMP1 > _CTEMP2
		MSGALERT(STR0130 , STR0002) //"OS HORÁRIOS DE JANTAR NÃO PODEM CARACTERIZAR A MUDANÇA DE DIAS."###"GPO - CADZBX.PRW"
		IF _CTEMP1 == "2400"
		 //	MSGALERT("O HORÁRIO DE JANTAR INICIAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00" , "GPO - CADZBX.PRW")
		ELSEIF _CTEMP2 == "2400"
		 //	MSGALERT("O HORÁRIO DE JANTAR FINAL 24:00 É CONSIDERADO NA VALIDAÇÃO COMO 00:00" , "GPO - CADZBX.PRW")
		ENDIF
		RETURN .F.  
	ENDIF
ENDIF    

RETURN .T.



/*/{PROTHEUS.DOC} FILST9ZBX
@DESCRIPTION FILTRO PARA CONSULTA PADRAO ST9ZBX.
@TYPE FUNCTION

@AUTHOR IT UP BUSINESS
@SINCE 06/12/2018
@VERSION 1.0
/*/
FUNCTION LOCA00521( _DDATA, _CHRINI, _CHRFIM, _CFROTAD  )

LOCAL   _CFILTRO  := ""
LOCAL	_AAREA	  := GETAREA()
LOCAL 	_CFAMILIA := ""
LOCAL	AFILT9QRY := {}

ST9->(DBSETORDER(1))
IF ST9->(DBSEEK(XFILIAL("ST9")+_CFROTAD))
	_CFAMILIA := ST9->T9_CODFAMI
ENDIF

_CFILTRO := "	T9_CODBEM NOT IN(SELECT DISTINCT ZLG.FPO_FROTA "
_CFILTRO += "	FROM " + RETSQLNAME("FPO") + " ZLG "
_CFILTRO += "	WHERE '" + DTOS(_DDATA) + "' BETWEEN ZLG.FPO_DTINI AND ZLG.FPO_DTFIM "
_CFILTRO += "		AND ( "
_CFILTRO += "			(FPO_HRINI >= '" + STRTRAN(_CHRINI,":","") + "' AND FPO_HRINI < '" + STRTRAN(_CHRFIM,":","") + "') "
_CFILTRO += "			OR (FPO_HRFIM > '" + STRTRAN(_CHRINI,":","") + "' AND FPO_HRFIM <= '" + STRTRAN(_CHRFIM,":","") + "') "
_CFILTRO += "			OR (FPO_HRINI >= '" + STRTRAN(_CHRINI,":","") + "' AND FPO_HRFIM <= '" + STRTRAN(_CHRFIM,":","") + "') "
_CFILTRO += "			OR (FPO_HRINI <= '" + STRTRAN(_CHRINI,":","") + "' AND FPO_HRFIM >= '" + STRTRAN(_CHRFIM,":","") + "')) "
_CFILTRO += "		AND ZLG.D_E_L_E_T_ = '' "

IF EXISTBLOCK("FILT9QRY")	// PONTO DE ENTRADA PARA INCLUSAO DE FILTRO NA BUSCA DO EQUIPAMENTO. RETORNO[WHERE ZLG, WHERE ST9]
	AFILT9QRY := EXECBLOCK("FILT9QRY", .T., .T., {_DDATA, _CHRINI, _CHRFIM, _CFROTAD})
ENDIF

IF (LEN(AFILT9QRY) > 0) .AND. (VALTYPE(AFILT9QRY[1]) == "C") .AND. !(EMPTY(AFILT9QRY[1]))
	_CFILTRO += " " + AFILT9QRY[1] + " "
ENDIF

_CFILTRO += "	) "

_CFILTRO += "       AND T9_TIPOSE = 'E' "
IF !EMPTY(_CFAMILIA)
	_CFILTRO += "   AND T9_CODFAMI = '"+_CFAMILIA+"' "
ENDIF 

IF (LEN(AFILT9QRY) > 1) .AND. (VALTYPE(AFILT9QRY[2]) == "C") .AND. !(EMPTY(AFILT9QRY[2]))
	_CFILTRO += " " + AFILT9QRY[2] + " "
ENDIF

RESTAREA(_AAREA)

RETURN "@"+_CFILTRO		// #LOCA05922( FPF->FPF_DATA, FPF->FPF_HORAI, FPF->FPF_HORAF )



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ APTVIAGEM º AUTOR ³ IT UP BUSINESS     º DATA ³ __/__/____ º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ INTEGRAÇÃO COM DIÁRIO DE BORDO - ROTINA DE OCORRÊNCIAS     º±±
±±º          ³ ORIGINALMENTE DESENVOLVIDO NA TWA                          º±±
±±º          ³ CHAMADA: CADZBX.PRW / GRCONTR.PRW                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA00522( CPROJETO, CVIAGEM, DDTINCL, CCODCLI, CLOJCLI, CNOMCLI, CPEDCLI, CSOLIC, CBEM, CMOTORIS, CAJUDANT )
// SINTAXE: LOCA00522(CPROJETO,CVIAGEM,FP0->FP0_DATINC,FP0->FP0_CLI,FP0->FP0_LOJA,FP0->FP0_CLINOM,FP4->FP4_PEDCLI,FP4->FP4_SOLICT,FP4->FP4_GUINDA) 

LOCAL   AAREAX   := GETAREA()
LOCAL   AAREAST9 := ST9->(GETAREA())
LOCAL   AAREAZA0 := FP0->(GETAREA())
LOCAL   AAREADA4 := DA4->(GETAREA())
LOCAL   LST9

DEFAULT DDTINCL  := DDATABASE
DEFAULT CCODCLI  := ""
DEFAULT CLOJCLI  := ""
DEFAULT CNOMCLI  := ""
DEFAULT CPEDCLI  := ""
DEFAULT CSOLIC   := ""
DEFAULT CMOTORIS := ""
DEFAULT CAJUDANT := ""

IF ! EMPTY( CMOTORIS )
    DA4->(DBSETORDER(1))
	IF DA4->(DBSEEK(XFILIAL("DA4")+CMOTORIS))
		CMOTORIS := DA4->DA4_NOME
	ELSE
		CMOTORIS := ""
	ENDIF		
	DA4->(RESTAREA(AAREADA4))
ENDIF

IF ! EMPTY( CAJUDANT )
    DA4->(DBSETORDER(1))
	IF DA4->( DBSEEK( XFILIAL("DA4")+CAJUDANT ) )
		CAJUDANT := DA4->DA4_NOME
	ELSE
		CAJUDANT := ""
	ENDIF		
	DA4->(RESTAREA(AAREADA4))
ENDIF

IF EMPTY( CCODCLI )
	FP0->(DBSETORDER(1))
	IF FP0->( DBSEEK( XFILIAL("FP0")+CPROJETO ) )
		DDTINCL := FP0->FP0_DATINC
		CCODCLI := FP0->FP0_CLI
		CLOJCLI := FP0->FP0_LOJA
		CNOMCLI := FP0->FP0_CLINOM
	ENDIF
	FP0->(RESTAREA(AAREAZA0))
ENDIF

ST9->(DBSETORDER(1))
LST9 := ST9->( DBSEEK( XFILIAL("ST9") + CBEM ) )

FQA->(DBSETORDER(1))
IF ! FQA->( DBSEEK(XFILIAL("FQA") + CVIAGEM) )
	RECLOCK("FQA",.T.)
	FQA->FQA_FILIAL := XFILIAL("FQA")
	FQA->FQA_VIAGEM := CVIAGEM 
	FQA->FQA_PROJET := CPROJETO
	FQA->FQA_DTINCL := DDTINCL
ELSE
	RECLOCK("FQA",.F.) 
ENDIF

FQA->FQA_CODCLI := CCODCLI
FQA->FQA_LOJCLI := CLOJCLI
FQA->FQA_CLINOM := CNOMCLI

IF !EMPTY(CPEDCLI) 
	FQA->FQA_PEDCLI := CPEDCLI
ENDIF

IF !EMPTY(CSOLIC) 
	FQA->FQA_SOLICT := CSOLIC
ENDIF

IF LST9
	FQA->FQA_VEICUL := ST9->T9_NOME
	FQA->FQA_PLACA  := ST9->T9_PLACA
ENDIF

//IF !EMPTY(CMOTORIS)
	FQA->FQA_NOMMOT := CMOTORIS
//ENDIF

//IF !EMPTY(CAJUDANT)
	FQA->FQA_NOMAJU := CAJUDANT
//ENDIF

FQA->(MSUNLOCK()) 

ST9->(RESTAREA(AAREAST9))

RESTAREA(AAREAX)

RETURN NIL



/*
// ======================================================================= \\
FUNCTION LOCA00523() 
// ======================================================================= \\
// --> "COMPATIBILIZA BASE"    ( CHAMADA COMENTADA - DESCONTINUADO ) 
LOCAL AAREA     := GETAREA()
LOCAL ASX5      := {}
LOCAL NI 

IF ! ISINCALLSTACK("LOCA005") 
	RETURN NIL 
ENDIF 

// SX5
AADD( ASX5 , {XFILIAL("SX5"),"00","ZX","MOTIVOS CANCELAMENTO MINUTA","MOTIVOS CANCELAMENTO MINUTA","MOTIVOS CANCELAMENTO MINUTA"} )
AADD( ASX5 , {XFILIAL("SX5"),"ZX","01","SERVICO ADIADO"             ,"SERVICO ADIADO"             ,"SERVICO ADIADO"             } )
AADD( ASX5 , {XFILIAL("SX5"),"ZX","02","SERVICO CANCELADO"          ,"SERVICO CANCELADO"          ,"SERVICO CANCELADO"          } )

IF ! SX5->( DBSEEK(XFILIAL("SX5")+"00"+"ZX" , .T.) ) 
	FOR NI := 1 TO LEN( ASX5 )
		RECLOCK("SX5" , .T.)
		SX5->X5_FILIAL  := ASX5[NI][1]
		SX5->X5_TABELA  := ASX5[NI][2]
		SX5->X5_CHAVE   := ASX5[NI][3]
		SX5->X5_DESCRI  := ASX5[NI][4]
		SX5->X5_DESCSPA := ASX5[NI][5]
		SX5->X5_DESCENG := ASX5[NI][6]
		MSUNLOCK()
	NEXT
ENDIF

RESTAREA(AAREA) 

RETURN NIL
*/


/*
// ======================================================================= \\
FUNCTION LOCA00524() 
// ======================================================================= \\
// --> "IMPRIMIR MINUTA" 
FZBXIMPR() 

RETURN
*/


/*
// ======================================================================= \\
STATIC FUNCTION FZBXIMPR()
// ======================================================================= \\
// --> CHAMADA POR: ZBXIMPR()

LOCA00525()

RETURN
*/


/*
// ======================================================================= \\
FUNCTION LOCA00525()
// ======================================================================= \\
// --> CHAMADA POR: ZBXIMPR() >> FZBXIMPR() 

LOCAL CPERG     := PADR("LOCA00525",LEN(SX1->X1_GRUPO))
LOCAL AREGS     := {}

PRIVATE LVERZBX := SUPERGETMV("MV_LOCX097",,.F.)  //HABILITA CONTROLE DE MINUTA

	AADD(AREGS,{CPERG,"01", "PROJETO DE ?  	", "","","MV_CH1", "C", 22,0,0,"G","","MV_PAR01","","","","","","","","","","","","","","","","","","","","","","","","","ZA0T","","","","" })
	AADD(AREGS,{CPERG,"02", "PROJETO ATE?  	", "","","MV_CH2", "C", 22,0,0,"G","","MV_PAR02","","","","","","","","","","","","","","","","","","","","","","","","","ZA0T","","","","" })
	AADD(AREGS,{CPERG,"03", "OBRA DE ?  	", "","","MV_CH3", "C", 03,0,0,"G","","MV_PAR03","","","","","","","","","","","","","","","","","","","","","","","","","","","","","" })
	AADD(AREGS,{CPERG,"04", "OBRA ATE ?  	", "","","MV_CH4", "C", 03,0,0,"G","","MV_PAR04","","","","","","","","","","","","","","","","","","","","","","","","","","","","","" })
 //	AADD(AREGS,{CPERG,"03", "NR. AS ?  		", "","","MV_CH3", "C", 27,0,0,"G","","MV_PAR03","","","","","","","","","","","","","","","","","","","","","","","","","DTQVIA","","","","" })
 //	AADD(AREGS,{CPERG,"04", "EQUIPAMENTO ?  ", "","","MV_CH4", "C", 16,0,0,"G","","MV_PAR04","","","","","","","","","","","","","","","","","","","","","","","","","ST9","","","","" })
	AADD(AREGS,{CPERG,"05", "QTD. VIAS ?  	", "","","MV_CH5", "N", 02,0,0,"G","","MV_PAR05","","","","","","","","","","","","","","","","","","","","","","","","","","","","","" })
	AADD(AREGS,{CPERG,"06", "DATA DE?     	", "","","MV_CH6", "D", 08,0,0,"G","","MV_PAR06","","","","","","","","","","","","","","","","","","","","","","","","","","","","","" }) 
	AADD(AREGS,{CPERG,"07", "DATA ATE?     	", "","","MV_CH7", "D", 08,0,0,"G","","MV_PAR07","","","","","","","","","","","","","","","","","","","","","","","","","","","","","" })
 //	AADD(AREGS,{CPERG,"08", "NR. MINUTA ?  	", "","","MV_CH8", "N", 06,0,0,"G","","MV_PAR08","","","","","","","","","","","","","","","","","","","","","","","","","","","","","" })

	VALPERGSX1(CPERG,AREGS)
	IF PERGUNTE(CPERG,.T.)
		LOCR003IMP() 
	ENDIF

 //	LOCAL OREPORT := NIL
 //	LOCAL AAREA	  := GETAREA()    
 //	OREPORT       := REPORTDEF()
 //	IF OREPORT <> NIL
 //		OREPORT:PRINTDIALOG()
 //	ENDIF 
 //	RESTAREA(AAREA)

RETURN              
*/


/*
// ======================================================================= \\
STATIC FUNCTION VALPERGSX1(CPERG,AREGS) 
// ======================================================================= \\
// --> GRAVA GRUPO DE PERGUNTAS NA SX1 
// --> CHAMADA POR: LOCR003M() 
LOCAL I 	:= 0
LOCAL J 	:= 0 
LOCAL AAREA	:= GETAREA()                             

DBSELECTAREA("SX1")
DBSETORDER(1)
FOR I:= 1 TO LEN(AREGS)
	IF !DBSEEK(PADR(CPERG,LEN(X1_GRUPO))+AREGS[I,2])
		RECLOCK("SX1", .T.)
		FOR J := 1 TO LEN(AREGS[1])
			FIELDPUT(J,AREGS[I,J])
		NEXT J
		MSUNLOCK()
	ENDIF
NEXT I 

RESTAREA(AAREA)

RETURN
*/


/*
// ======================================================================= \\
STATIC FUNCTION LOCR003IMP()
// ======================================================================= \\

LOCAL AAREA  := GETAREA() 
LOCAL NCONT  := 0 
LOCAL CQUERY := ""
LOCAL AITENS := {}
LOCAL AOBRA  := {}

//	TRB01->FQ5_SOT,TRB01->FQ5_OBRA,TRB01->FQ5_NOMCLI,TRB01->FP1_NOMORI,ALLTRIM(TRB01->FP1_MUNORI)+" / "+TRB01->FP1_ESTORI
//UERY     := " SELECT DTQ.*,ZA1.* " 
CQUERY     := " SELECT DISTINCT DTQ.FQ5_SOT,DTQ.FQ5_OBRA,DTQ.FQ5_NOMCLI,ZA1.FP1_NOMORI,ZA1.FP1_MUNORI,ZA1.FP1_ESTORI, MIN(DTQ.FQ5_DATINI) AS INI, MAX(DTQ.FQ5_DATFIM) AS FIM " 
CQUERY     += " FROM "+RETSQLNAME("FQ5")+" DTQ "
CQUERY     += " LEFT OUTER JOIN "+RETSQLNAME("FP1")+" ZA1 "	
CQUERY     += " ON (ZA1.FP1_PROJET = DTQ.FQ5_SOT AND ZA1.FP1_OBRA = DTQ.FQ5_OBRA AND ZA1.D_E_L_E_T_='') "	
CQUERY     += " WHERE DTQ.D_E_L_E_T_='' "
CQUERY     += " AND DTQ.FQ5_FILIAL = '"+XFILIAL("FQ5")+"' " 
CQUERY     += " AND DTQ.FQ5_SOT BETWEEN '"+MV_PAR01+"' AND '"+MV_PAR02+"' "
CQUERY     += " AND DTQ.FQ5_OBRA BETWEEN '"+MV_PAR03+"' AND '"+MV_PAR04+"' "
IF !LVERZBX 			//HABILITA CONTROLE DE MINUTA
	CQUERY += " AND DTQ.FQ5_DATINI BETWEEN '"+DTOS(MV_PAR06)+"' AND '"+DTOS(MV_PAR07)+"' "
	CQUERY += " AND DTQ.FQ5_DATFIM BETWEEN '"+DTOS(MV_PAR06)+"' AND '"+DTOS(MV_PAR07)+"' "
ELSE
	CQUERY += " AND ('"+DTOS(MV_PAR06)+"' BETWEEN DTQ.FQ5_DATINI AND DTQ.FQ5_DATFIM "
	CQUERY += "   OR '"+DTOS(MV_PAR07)+"' BETWEEN DTQ.FQ5_DATINI AND DTQ.FQ5_DATFIM) "
ENDIF
 	//UERY     += " AND DTQ.FQ5_TPAS = 'G' "
CQUERY     += " GROUP BY DTQ.FQ5_SOT,DTQ.FQ5_OBRA,DTQ.FQ5_NOMCLI,ZA1.FP1_NOMORI,ZA1.FP1_MUNORI,ZA1.FP1_ESTORI "
CQUERY     := CHANGEQUERY(CQUERY)
IF SELECT("TRB01") > 0 
	TRB01->(DBCLOSEAREA()) 
ENDIF 
TCQUERY CQUERY NEW ALIAS "TRB01" 

TCSETFIELD("TRB01","INI","D",08,00)  
TCSETFIELD("TRB01","FIM","D",08,00)

NCONT := 0

DBSELECTAREA("TRB01")  
TRB01->(DBGOTOP())
TRB01->(DBEVAL({|| NCONT++},,{|| !EOF()})) 
TRB01->(DBGOTOP())

IF NCONT > 0
	WHILE TRB01->(!EOF())    
	//	AITENS := {TRB01->FQ5_AS,TRB01->FQ5_GUINDA,TRB01->FQ5_DATINI,TRB01->FQ5_DATFIM}
	//	NPOS := ASCAN(AOBRA,{|X| X[1]+X[2] == TRB01->FQ5_SOT+TRB01->FQ5_OBRA})
	//	IF NPOS > 0
	//		AADD(AOBRA[NPOS, 6],AITENS)
	//	ELSE
	//		AADD(AOBRA,{TRB01->FQ5_SOT,TRB01->FQ5_OBRA,TRB01->FQ5_NOMCLI,TRB01->FP1_NOMORI,ALLTRIM(TRB01->FP1_MUNORI)+" / "+TRB01->FP1_ESTORI,{AITENS}})
	//	ENDIF
		AADD(AOBRA,{TRB01->FQ5_SOT,TRB01->FQ5_OBRA,TRB01->FQ5_NOMCLI,TRB01->FP1_NOMORI,ALLTRIM(TRB01->FP1_MUNORI)+" / "+TRB01->FP1_ESTORI, TRB01->INI, TRB01->FIM})
	 //	AADD(AITENS,{TRB01->FQ5_AS,TRB01->FQ5_GUINDA,TRB01->FQ5_DATINI,TRB01->FQ5_DATFIM,TRB01->FQ5_NOMCLI,TRB01->FP1_NOMORI,ALLTRIM(TRB01->FP1_MUNORI)+" / "+TRB01->FP1_ESTORI})
       	TRB01->(DBSKIP())
	ENDDO
ENDIF

IF SELECT("TRB01") > 0
	TRB01->(DBCLOSEAREA())
ENDIF 

IF LEN(AOBRA) > 0
	PROCESSA( {|| LOCR003PDF(AOBRA) }, "AGUARDE...","IMPRIMINDO RELATÓRIO...",.F.)
ELSE
	MSGALERT("NÃO HÁ DADOS, VERIFIQUE OS FILTROS." , "GPO - CADZBX.PRW")
ENDIF

RESTAREA(AAREA)

RETURN
*/


/*
// ======================================================================= \\
STATIC FUNCTION LOCR003PDF(AITENS)
// ======================================================================= \\
// --> CHAMADA POR: ZBXIMPR() >> FZBXIMPR() >> LOCR003M() >> LOCR003IMP()   <DESCONTINUADA> 

LOCAL OPDF     := IDPDF():NEW("P",'MM','A4')//A4 210 LARGURA X 297 ALTURA
LOCAL NLMARGIN := 10
LOCAL NRMARGIN := 200  
LOCAL NPOS     := 5  
LOCAL CDIRTEMP := ALLTRIM(GETTEMPPATH())
LOCAL CNOMEARQ := "REL_"+STRTRAN(TIME(),":","")+".PDF"		 
LOCAL NQTDVIAS := MV_PAR05	
LOCAL AITAS    := {}
LOCAL NMINUTA  := 0 		// GETMV("MV_LOCX060")
LOCAL LMINUTA  := .F.
LOCAL DDTINI
LOCAL DDTFIM
LOCAL NVIAS    := 1   
LOCAL CDESCEQU := ""     

IF NQTDVIAS == 0
	NQTDVIAS := 1	
ENDIF

FOR NVIAS := 1 TO NQTDVIAS     

	FOR NI := 1 TO LEN(AITENS)
	 //	AADD(AOBRA,{TRB01->FQ5_SOT,TRB01->FQ5_OBRA,TRB01->FQ5_NOMCLI,TRB01->FP1_NOMORI,ALLTRIM(TRB01->FP1_MUNORI)+" / "+TRB01->FP1_ESTORI, TRB01->INI, TRB01->FIM})
    	DDTINI := AITENS[NI,6]
    	DDTFIM := AITENS[NI,7]
    	
    	FOR DDIA := DDTINI TO DDTFIM
			IF DDIA<MV_PAR06 .OR. DDIA>MV_PAR07
				LOOP
			ENDIF
    		AEQUIP := GETEQUIP(AITENS[NI,1],AITENS[NI,2],DDIA,MV_PAR03)    		
    		IF LEN(AEQUIP) > 0
	    		NPOS := 5  
			 //	IF !LVERZBX  //HABILITA CONTROLE DE MINUTA
			 //		IF EMPTY(MV_PAR08) //.OR. LEN(MV_PAR08) < 6 
			 //    		NMINUTA	:= GETMV("MV_LOCX060")             
			 //    	ELSE
			 //    		NMINUTA := IIF(LMINUTA,NMINUTA,MV_PAR08)
			 //			LMINUTA := .T.
			 //		ENDIF
			 //	ENDIF
			    OPDF:ADDPAGE()
				// --> MUDA A COR DA LINHA
			 //	OPDF:SETDRAWCOLOR(10, 10, 250)
				    
				// --> BORDA
				OPDF:LINE(5,5,205,5)
				OPDF:LINE(5,5,5,290)
				OPDF:LINE(205,5,205,290)
				OPDF:LINE(5,290,205,290)
				
				NPOS += 5 
				OPDF:IMAGE('\SYSTEM\MINUTA.JPG',NLMARGIN+1,NPOS-1,50,7,'JPG')  
				IF LVERZBX  //HABILITA CONTROLE DE MINUTA
					OPDF:SETFONT('ARIAL','B',10)
					OPDF:TEXT(NLMARGIN+155,NPOS+5,"MINUTA Nº: "+STRZERO(NMINUTA,6))
				ENDIF
				OPDF:SETFONT('ARIAL','',06)
				NPOS += 10
				OPDF:TEXT(NLMARGIN,NPOS-1,ALLTRIM(SM0->M0_NOMECOM))
				NPOS += 3
				OPDF:TEXT(NLMARGIN,NPOS-1,ALLTRIM(SM0->M0_ENDCOB)+" - CEP: "+ALLTRIM(TRANSFORM(SM0->M0_CEPCOB,"@E 99999-999")))
				NPOS += 3
				OPDF:TEXT(NLMARGIN,NPOS-1,ALLTRIM(SM0->M0_CIDCOB)+" - FONE/FAX: "+ALLTRIM(SM0->M0_TEL))
				NPOS += 3                                                                              
				OPDF:TEXT(NLMARGIN,NPOS-1,"EMAIL: TRANSREMOCAO@TRANSREMOCAO.COM.BR")
						
			 //	NPOS += 15 
			 //	OPDF:SETFILLCOLOR(255,0,0) 
			 //	OPDF:CELL(20,NPOS, "TESTE", , , , .T.) 
				
				NPOS += 5 
				OPDF:LINE(NLMARGIN,NPOS,NRMARGIN,NPOS) 
				NPOS += 20 
					                               
		        OPDF:SETFONT('ARIAL','',07) 
			 //	AADD(AOBRA,{TRB01->FQ5_SOT,TRB01->FQ5_OBRA,TRB01->FQ5_NOMCLI,TRB01->FP1_NOMORI,ALLTRIM(TRB01->FP1_MUNORI)+" / "+TRB01->FP1_ESTORI,{AITENS}})			
				OPDF:TEXT(NLMARGIN,NPOS-16,"CLIENTE")
				OPDF:TEXT(NLMARGIN+100,NPOS-16,"DATA")
				OPDF:TEXT(NLMARGIN,NPOS-6,"OBRA")
				OPDF:TEXT(NLMARGIN+100,NPOS-6,"LOCAL")
				OPDF:SETFONT('ARIAL','B',08)    
				OPDF:TEXT(NLMARGIN+1,NPOS-11,AITENS[NI,3])
				OPDF:TEXT(NLMARGIN+1,NPOS-1,AITENS[NI,4])
				OPDF:TEXT(NLMARGIN+101,NPOS-11,DTOC(DDIA))
				OPDF:TEXT(NLMARGIN+101,NPOS-1,AITENS[NI,5])
				OPDF:LINE(NLMARGIN,NPOS-10,NRMARGIN,NPOS-10)
				OPDF:LINE(NLMARGIN,NPOS-20,NLMARGIN,NPOS)
				OPDF:LINE(NRMARGIN,NPOS-20,NRMARGIN,NPOS)
				OPDF:LINE(NLMARGIN+100,NPOS-20,NLMARGIN+100,NPOS) 
				OPDF:LINE(NLMARGIN,NPOS,NRMARGIN,NPOS)
				
				NPOS += 5
				OPDF:LINE(NLMARGIN,NPOS,NRMARGIN,NPOS) 
				OPDF:LINE(NLMARGIN,NPOS-5,NLMARGIN,NPOS) 
				OPDF:LINE(NRMARGIN,NPOS-5,NRMARGIN,NPOS) 
					
				NPOS += 5
				IF !LVERZBX  //HABILITA CONTROLE DE MINUTA
					OPDF:SETFONT('ARIAL','',10)
					OPDF:TEXT(NLMARGIN,NPOS-1,"AS")
					OPDF:TEXT(NLMARGIN+50,NPOS-1,"EQUIPAMENTO")
					OPDF:TEXT(NLMARGIN+100,NPOS-1,"INÍCIO")
					OPDF:TEXT(NLMARGIN+130,NPOS-1,"FIM")
					OPDF:TEXT(NLMARGIN+160,NPOS-1,"TOTAL")     
					OPDF:LINE(NLMARGIN,NPOS,NRMARGIN,NPOS)
					OPDF:LINE(NLMARGIN,NPOS-5,NLMARGIN,NPOS)
					OPDF:LINE(NRMARGIN,NPOS-5,NRMARGIN,NPOS)       
					OPDF:LINE(NLMARGIN+50,NPOS-5,NLMARGIN+50,NPOS)
					OPDF:LINE(NLMARGIN+100,NPOS-5,NLMARGIN+100,NPOS)
					OPDF:LINE(NLMARGIN+130,NPOS-5,NLMARGIN+130,NPOS)
					OPDF:LINE(NLMARGIN+160,NPOS-5,NLMARGIN+160,NPOS)
		    		
		    		OPDF:SETFONT('ARIAL','',08)
		    		FOR NX := 1 TO LEN(AEQUIP)
						NPOS += 5   
						CDESCEQU := GETDESC(AEQUIP[NX,1])
						OPDF:TEXT(NLMARGIN+1,NPOS-1,AEQUIP[NX,1])
						OPDF:TEXT(NLMARGIN+51,NPOS-1,IIF(EMPTY(CDESCEQU),SUBSTR(GETBEM(AEQUIP[NX,2]),1,25),SUBSTR(CDESCEQU,1,25)))
						OPDF:LINE(NLMARGIN,NPOS,NRMARGIN,NPOS)
						OPDF:LINE(NLMARGIN,NPOS-5,NLMARGIN,NPOS)
						OPDF:LINE(NRMARGIN,NPOS-5,NRMARGIN,NPOS)       
						OPDF:LINE(NLMARGIN+50,NPOS-5,NLMARGIN+50,NPOS)
						OPDF:LINE(NLMARGIN+100,NPOS-5,NLMARGIN+100,NPOS)
						OPDF:LINE(NLMARGIN+130,NPOS-5,NLMARGIN+130,NPOS)
						OPDF:LINE(NLMARGIN+160,NPOS-5,NLMARGIN+160,NPOS) 
		    		NEXT NX                 
				ELSE
					OPDF:SETFONT('ARIAL','',10)
					OPDF:TEXT(NLMARGIN+000,NPOS-1,"MINUTA")
					OPDF:TEXT(NLMARGIN+017,NPOS-1,"AS")
					OPDF:TEXT(NLMARGIN+050,NPOS-1,"EQUIPAMENTO")
					OPDF:TEXT(NLMARGIN+100,NPOS-1,"INÍCIO")
					OPDF:TEXT(NLMARGIN+130,NPOS-1,"FIM")
					OPDF:TEXT(NLMARGIN+160,NPOS-1,"TOTAL")     
					OPDF:LINE(NLMARGIN,NPOS-0,NRMARGIN,NPOS)
					OPDF:LINE(NLMARGIN,NPOS-5,NLMARGIN,NPOS)
					OPDF:LINE(NRMARGIN,NPOS-5,NRMARGIN,NPOS)       
					OPDF:LINE(NLMARGIN+017,NPOS-5,NLMARGIN+017,NPOS)
					OPDF:LINE(NLMARGIN+050,NPOS-5,NLMARGIN+050,NPOS)
					OPDF:LINE(NLMARGIN+100,NPOS-5,NLMARGIN+100,NPOS)
					OPDF:LINE(NLMARGIN+130,NPOS-5,NLMARGIN+130,NPOS)
					OPDF:LINE(NLMARGIN+160,NPOS-5,NLMARGIN+160,NPOS)
		    		OPDF:SETFONT('ARIAL','',08)
	    			FOR NX := 1 TO LEN(AEQUIP)
						NPOS += 5   
						CDESCEQU := GETDESC(AEQUIP[NX,1]) 		// TRAZ O CAMPO CONFIGURAÇÃO DA ABA LOCAÇÃO (FP4_CONFIG)
						IF EMPTY(CDESCEQU)
							CDESCEQU := GETBEM(AEQUIP[NX,2]) 	// TRAZ A DESCRIÇÃO (T6_NOME) DA FAMÍLIA (T9_CODFAMI) DO BEM
						ENDIF
						OPDF:TEXT(NLMARGIN+001,NPOS-1,AEQUIP[NX,3])  //MINUTA
						OPDF:TEXT(NLMARGIN+018,NPOS-1,AEQUIP[NX,1])  //AS
						OPDF:TEXT(NLMARGIN+051,NPOS-1,SUBSTR(CDESCEQU,1,25))
						OPDF:LINE(NLMARGIN,NPOS-0,NRMARGIN,NPOS)
						OPDF:LINE(NLMARGIN,NPOS-5,NLMARGIN,NPOS)
						OPDF:LINE(NRMARGIN,NPOS-5,NRMARGIN,NPOS)       
						OPDF:LINE(NLMARGIN+017,NPOS-5,NLMARGIN+017,NPOS)
						OPDF:LINE(NLMARGIN+050,NPOS-5,NLMARGIN+050,NPOS)
						OPDF:LINE(NLMARGIN+100,NPOS-5,NLMARGIN+100,NPOS)
						OPDF:LINE(NLMARGIN+130,NPOS-5,NLMARGIN+130,NPOS)
						OPDF:LINE(NLMARGIN+160,NPOS-5,NLMARGIN+160,NPOS)	    			
		    		NEXT NX                 
				ENDIF
		    		                          
	    		OPDF:SETFONT('ARIAL','',10)
	    		NPOS += 10
				
				OPDF:TEXT(NLMARGIN,NPOS-1,"OBSERVAÇÕES","C",190) 
				FOR NX := 1 TO 5 
					NPOS += 5
					OPDF:LINE(NLMARGIN,NPOS,NRMARGIN,NPOS) 
				NEXT NX 
					
				NPOS += 20                                                
				OPDF:TEXT(NLMARGIN,NPOS-1,REPLICATE("_",50),"C",190)         
				NPOS += 5
				OPDF:TEXT(NLMARGIN,NPOS-1,"CLIENTE","C",190)
				
				NPOS += 20 
				OPDF:TEXT(NLMARGIN,NPOS-1,REPLICATE("_",50),"C",190)
				NPOS += 5
				OPDF:TEXT(NLMARGIN,NPOS-1,"RESPONSÁVEL TRANSREMOÇÃO","C",190) 
			 //	IF !LVERZBX  //HABILITA CONTROLE DE MINUTA
			 //		IF LMINUTA
			 //			NMINUTA++
			 //		ELSE
			 //			PUTMV("MV_LOCX060",NMINUTA+1)
			 //		ENDIF
			 //	ENDIF
			ENDIF
    	NEXT DDIA

    NEXT NI	  

NEXT NVIAS
	
OPDF:OUTPUT(CDIRTEMP+CNOMEARQ)
SHELLEXECUTE( "OPEN", CDIRTEMP+CNOMEARQ,"", CDIRTEMP, 1 )

RETURN
*/


/*
// ======================================================================= \\
STATIC FUNCTION GETEQUIP(CPROJET , COBRA , DDIA , CVIAGEM)
// ======================================================================= \\
// --> CHAMADA POR: ZBXIMPR() >> FZBXIMPR() >> LOCR003M() >> LOCR003IMP() >> LOCR003PDF()   <DESCONTINUADA> 
LOCAL ARET 		:= {}
LOCAL AAREA		:= GETAREA()
LOCAL AAREADTQ	:= FQ5->(GETAREA())
LOCAL AAREAZA0	:= FP0->(GETAREA())

IF LVERZBX 					// HABILITA CONTROLE DE MINUTA
	FPF->(DBSETORDER(1)) 	// FPF_FILIAL+FPF_FROTA+DTOS(FPF_DATA)+FPF_MINUTA
ENDIF

DBSELECTAREA("FQ5")
DBSETORDER(8)
DBSEEK(XFILIAL("FQ5")+CPROJET+COBRA)
	
WHILE !FQ5->(EOF()) .AND. FQ5->(FQ5_SOT+FQ5_OBRA) == CPROJET+COBRA
	DBSELECTAREA("FP0")
 	DBSETORDER(1)
    DBSEEK(XFILIAL("FP0")+FQ5->FQ5_SOT)
 //	IF FQ5->FQ5_TPAS <> "G"
	IF FP0->FP0_TIPOSE != "E"
		FQ5->(DBSKIP())
		LOOP
	ENDIF 
 //	IF ALLTRIM(FQ5->FQ5_VIAGEM) <> ALLTRIM(CVIAGEM) .AND. !EMPTY(CVIAGEM)
 //		FQ5->(DBSKIP())
 //		LOOP
 //	ENDIF 
	IF DTOS(FQ5->FQ5_DATINI) <= DTOS(DDIA) .AND. DTOS(FQ5->FQ5_DATFIM) >= DTOS(DDIA)
		IF !LVERZBX  //HABILITA CONTROLE DE MINUTA
	    	AADD(ARET,{FQ5->FQ5_AS,FQ5->FQ5_GUINDA})
		ELSE
			FPF->(DBSEEK(XFILIAL("FPF")))
			WHILE FPF->(!EOF() .AND. FPF_FILIAL==XFILIAL("FPF"))
				IF FPF->(FPF_STATUS$"1")  //1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
					FPF->(DBSKIP())
					LOOP
				ENDIF
				IF FPF->(FPF_AS<>FQ5->FQ5_AS)
					FPF->(DBSKIP())
					LOOP
				ENDIF
		    	IF FPF->(FPF_DATA<>DDIA)
					FPF->(DBSKIP())
					LOOP
		    	ENDIF
		    	FPF->(AADD(ARET,{FQ5->FQ5_AS,FQ5->FQ5_GUINDA,FPF_MINUTA,FPF_DATA}))
				FPF->(DBSKIP())
	    	ENDDO 
  		ENDIF
    ENDIF
	FQ5->(DBSKIP())
ENDDO

RESTAREA(AAREAZA0)	
RESTAREA(AAREADTQ)
RESTAREA(AAREA)

RETURN(ARET)
*/


/*
// ======================================================================= \\
STATIC FUNCTION GETDESC(CAS)  
// ======================================================================= \\
// --> TRAZ O CAMPO CONFIGURAÇÃO DA ABA LOCAÇÃO (FP4_CONFIG)
// --> CHAMADA POR: ZBXIMPR() >> FZBXIMPR() >> LOCR003M() >> LOCR003IMP() >> LOCR003PDF()   <DESCONTINUADA> 
LOCAL CRET 		:= ""
LOCAL AAREA		:= GETAREA()
LOCAL AAREAZA5	:= FP4->(GETAREA())

DBSELECTAREA("FP4")
DBSETORDER(3)
IF DBSEEK(XFILIAL("FP4")+CAS)
	IF !LVERZBX  			//HABILITA CONTROLE DE MINUTA 
		IF FP4->FP4_TIPOSE == "M"
			CRET := FP4->FP4_CONFIG
		ENDIF
	ELSE
		CRET := FP4->FP4_CONFIG  
	ENDIF
ENDIF

RESTAREA(AAREAZA5)
RESTAREA(AAREA)

RETURN(CRET)
*/


/*
// ======================================================================= \\
STATIC FUNCTION GETBEM(CBEM) 
// ======================================================================= \\
// --> TRAZ A DESCRIÇÃO (T6_NOME) DA FAMÍLIA (T9_CODFAMI) DO BEM 
// --> CHAMADA POR: ZBXIMPR() >> FZBXIMPR() >> LOCR003M() >> LOCR003IMP() >> LOCR003PDF()   <DESCONTINUADA> 
LOCAL CRET     := ""
LOCAL AAREA    := GETAREA()
LOCAL AAREAST9 := ST9->(GETAREA())
LOCAL AAREAST6 := ST6->(GETAREA())

DBSELECTAREA("ST9")
DBSETORDER(1)
IF DBSEEK(XFILIAL("ST9")+CBEM)
	DBSELECTAREA("ST6")
	DBSETORDER(1)
	IF DBSEEK(XFILIAL("ST6")+ST9->T9_CODFAMI)
		CRET := ST6->T6_NOME
	ENDIF
ENDIF
    
RESTAREA(AAREAST6)
RESTAREA(AAREAST9)
RESTAREA(AAREA)

RETURN(CRET)
*/


/*
// ======================================================================= \\
STATIC FUNCTION FZBXACEI()
// ======================================================================= \\
// --> "ACEITA MINUTA" --> FUNÇÃO DESCONTINUADA - SUBSTITUIDA PELA ACEIT2() 

LOCAL CPERG      := "LOCA00504"
LOCAL CTITJAN    := "ACEITE DA MINUTA"
LOCAL AOBJECTS,AINFO,APOSGET,APOSOBJ,ASIZEAUT
LOCAL ABUTTONS   := {}
LOCAL BMARK      := { || IF(LOCA00510(OBROWSE),'LBOK','LBNO') }
LOCAL BLDBLCLICK := { |OBROWSE| LOCA00509(OBROWSE) }
LOCAL BHEADERCLI := { |OBROWSE| LOCA00511(OBROWSE) }
LOCAL ODLG,OPANEL1,OPANEL2,ACOLS,ACOLS0,AHEADER,BHEADER,AESTRU,CCAMPO,NSTATUS,ASTATUS,LOK:=.F.
LOCAL NZLGSTATUS,XZLGSTATUS,AZLGSTATUS,OZLGSTATUS,CZLGSTATUS

VALIDPERG(CPERG)
IF !PERGUNTE(CPERG,.T.)
	RETURN
ENDIF

PRIVATE NRECNOATU := IF(MV_PAR01==1,0,FPF->(RECNO()))  //CONSIDERA PARAMETROS ABAIXO?
PRIVATE CPROD     := MV_PAR02 			// PROJETO DE
PRIVATE CPROA     := MV_PAR03 			// PROJETO ATE
PRIVATE COBRD     := MV_PAR04 			// OBRA DE
PRIVATE COBRA     := MV_PAR05 			// OBRA ATE
PRIVATE CNASD     := MV_PAR06 			// AS DE
PRIVATE CNASA     := MV_PAR07 			// AS ATE
PRIVATE CFROD     := MV_PAR08 			// FROTA DE
PRIVATE CFROA     := MV_PAR09 			// FROTA ATE
PRIVATE DDATD     := MV_PAR10 			// DATA DE
PRIVATE DDATA     := MV_PAR11 			// DATA ATE

XZLGSTATUS := MONTACOMBO("FPO_STATUS")  //CARREGA OS ITENS DO COMBOBOX DA SX3
AZLGSTATUS := {}
FOR NZLGSTATUS:=1 TO LEN(XZLGSTATUS)
	AADD(AZLGSTATUS,XZLGSTATUS[NZLGSTATUS,2])
NEXT

CZLGSTATUS := "R" 				// 1=DISPO;2=MOB;3=TRAB;4=DESMOBI;5=MONTA;6=DESMONT;9=M.PREV;C=M.CORR;R=RESERVADO;E=ENTRADA NF;S=SAIDA NF;A=ACERTO

PRIVATE NPOSMAR,NPOSPRO,NPOSOBR,NPOSDAT,NPOSFRO,NPOSNAS,NPOSMIN,NPOSMED,NPOSHOI,NPOSHOF,NPOSHOP,NPOSMOT,NPOSMIM,NPOSSTA
PRIVATE OBROWSE
PRIVATE CMARCA
PRIVATE ARECNOSZBX 				// GUARDA OS RECNOS DO ZBX

WHILE .T.
	CMARCA     := GETMARK()
	ARECNOSZBX := {} 			// GUARDA OS RECNOS DO ZBX
	ACOLS      := {}

	FMONTAZBX("QRYZBX",CPERG) 	// MONTA A QUERY

	QRYFPF->(DBGOTOP())
	WHILE QRYFPF->(!EOF())
		AESTRU:={}
		CCAMPO:=""          ;QRYFPF->(AADD(AESTRU,{IF(NRECNOATU==0,SPACE(LEN(CMARCA)),CMARCA),""    ,""                             ,""                           ,""                              ,0,00                              ,0                               }));NPOSMAR:=LEN(AESTRU)
		CCAMPO:="FPF_PROJET";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSPRO:=LEN(AESTRU)
		CCAMPO:="FPF_OBRA"  ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSOBR:=LEN(AESTRU)
		CCAMPO:="FPF_DATA"  ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSDAT:=LEN(AESTRU)
		CCAMPO:="FPF_FROTA" ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSFRO:=LEN(AESTRU)
		CCAMPO:="FPF_AS"    ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSNAS:=LEN(AESTRU)
		CCAMPO:="FPF_NROMED";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMED:=LEN(AESTRU)
		CCAMPO:="FPF_HORAI" ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOI:=LEN(AESTRU)
		CCAMPO:="FPF_HORAF" ;QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOF:=LEN(AESTRU)
		CCAMPO:="FPF_HRPARA";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSHOP:=LEN(AESTRU)
		CCAMPO:="FPF_MOTIVO";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSMOT:=LEN(AESTRU)
		CCAMPO:="FPF_STATUS";QRYFPF->(AADD(AESTRU,{&CCAMPO           ,CCAMPO,GETSX3CACHE(CCAMPO,"X3_TITULO"),GETSX3CACHE(CCAMPO,"X3_TIPO"),GETSX3CACHE(CCAMPO,"X3_PICTURE"),1,GETSX3CACHE(CCAMPO,"X3_TAMANHO"),GETSX3CACHE(CCAMPO,"X3_DECIMAL")}));NPOSSTA:=LEN(AESTRU)

		QRYFPF->(AADD(ARECNOSZBX,FPF_RECNO))  //GUARDA OS RECNOS DO ZBX
	
		ACOLS0:={}
		FOR NPOS:=1 TO LEN(AESTRU)
			AADD(ACOLS0,AESTRU[NPOS,1])
		NEXT
		AADD(ACOLS,ACOLS0)
	
		QRYFPF->(DBSKIP())
	ENDDO 
	
	IF LEN(ACOLS)==0
		MSGALERT("NÃO EXISTEM MINUTAS NO INTERVALO SELECIONADO." , "GPO - CADZBX.PRW")
		RETURN
	ENDIF
	
	AHEADER:={}
	FOR NPOS:=2 TO LEN(AESTRU)
		BHEADER:="{||ACOLS[OBROWSE:AT(),"+STRZERO(NPOS,2)+"]}"
		AADD(AHEADER,{AESTRU[NPOS,3],&BHEADER,AESTRU[NPOS,4],AESTRU[NPOS,5],AESTRU[NPOS,6],AESTRU[NPOS,7],AESTRU[NPOS,8]})
	NEXT
	
	IF OMAINWND:NCLIENTWIDTH > 800
		AOBJECTS:={}
		AADD(AOBJECTS,{100,010,.T., .T. } )  //ENCHOICE
		AADD(AOBJECTS,{100,090,.T., .T. } )  //MSGETDADOS
	ELSE
		AOBJECTS:={}
		AADD(AOBJECTS,{100,012,.T., .T. } )  //ENCHOICE
		AADD(AOBJECTS,{100,088,.T., .T. } )  //MSGETDADOS
	ENDIF
	ASIZEAUT:=MSADVSIZE()
	AINFO   :={ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
	APOSOBJ :=MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )
	APOSGET :=MSOBJGETPOS((ASIZEAUT[3]-ASIZEAUT[1]),315,{{004,024,240,270}} )
	
	DEFINE MSDIALOG ODLG FROM ASIZEAUT[7],0 TO ASIZEAUT[6],ASIZEAUT[5] TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL
		@ APOSOBJ[1,1],APOSOBJ[1,2] MSPANEL OPANEL1 PROMPT "" SIZE 10,40 OF ODLG
		@ APOSOBJ[2,1],APOSOBJ[2,2] MSPANEL OPANEL2 PROMPT "" SIZE 10,10 OF ODLG
		OPANEL1:ALIGN:=CONTROL_ALIGN_TOP
		OPANEL2:ALIGN:=CONTROL_ALIGN_ALLCLIENT
		
		@ 005,005 SAY OEMTOANSI("STATUS DA PROGRAMAÇÃO DIÁRIA") SIZE 100,8 OF OPANEL1 PIXEL
		@ 013,005 COMBOBOX OZLGSTATUS VAR CZLGSTATUS ITEMS AZLGSTATUS SIZE 80,008 OF OPANEL1 PIXEL
		
		OBROWSE:=FWBROWSE():NEW()
		OBROWSE:SETDATAARRAY()
		OBROWSE:SETARRAY(ACOLS)
		OBROWSE:ADDMARKCOLUMNS(BMARK,BLDBLCLICK,BHEADERCLI)
		
		ASTATUS:=FSTATUS("FWBROWSE")  //MONTA OS STATUS
		FOR NSTATUS:=1 TO LEN(ASTATUS)
			OBROWSE:ADDLEGEND(ASTATUS[NSTATUS,3],ASTATUS[NSTATUS,1],ASTATUS[NSTATUS,2])
		NEXT
		
		OBROWSE:SETCOLUMNS(AHEADER)
		OBROWSE:SETOWNER(OPANEL2)
		OBROWSE:DISABLEREPORT()
		OBROWSE:DISABLECONFIG()
		
		OBROWSE:ACTIVATE()
	ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{||LOK:=.T.,IF(FACEITAM(OBROWSE,CZLGSTATUS),CLOSE(ODLG),)},{||LOK:=.F.,CLOSE(ODLG)},,ABUTTONS)

	IF !LOK .OR. NRECNOATU>0
		EXIT
	ENDIF
ENDDO 

RETURN
*/


/*
// ======================================================================= \\
STATIC FUNCTION FDELZLG(CNRAS,DDATA) 
// ======================================================================= \\
// --> EXCLUI A PROGRAMAÇÃO - FUNÇÃO DESCONTINUADA - CHAMADA VIA: FESTORNAM() 
LOCAL AAREAZLG := FPO->(GETAREA())
LOCAL LRET := .T.

FPO->(DBSETORDER(5))  //FPO_FILIAL+FPO_NRAS+FPO_FROTA+FPO_CODBEM
FPO->(DBSEEK(XFILIAL("FPO")+CNRAS))
WHILE FPO->(!EOF() .AND. FPO_NRAS==CNRAS)
	IF FPO->(DDATA>=FPO_DTINI .AND. DDATA<=FPO_DTFIM)
		IF FPO->(RECLOCK("FPO",.F.))
			FPO->(DBDELETE())
			FPO->(MSUNLOCK())
		ENDIF
	ENDIF
	FPO->(DBSKIP())
ENDDO 

FPO->(RESTAREA(AAREAZLG))

RETURN(LRET)
*/



/*
// ======================================================================= \\
STATIC FUNCTION FACEITAM(OBROWSE , CZLGSTATUS) 
// ======================================================================= \\

LOCAL   NPOS , NPOSAUX , ATABAUX
LOCAL   AAREAZBX  := FPF->(GETAREA())
LOCAL   AAREADTQ  := FQ5->(GETAREA())
LOCAL   AAREAZA5  := FP4->(GETAREA())
LOCAL   NGRAVADOS := 0 
LOCAL   LGRAVA    := .F.
LOCAL   _LGERZLG  := SUPERGETMV("MV_LOCX239",.F.,.T.) 

IF EMPTY(CZLGSTATUS)
	MSGALERT('FAVOR INFORMAR O STATUS.' , "GPO - CADZBX.PRW")
	RETURN .F.
ENDIF

ATABAUX := OBROWSE:DATA():AARRAY
NPOSAUX := 0
AEVAL(ATABAUX,{|X|IF(X[1]==CMARCA,NPOSAUX++,)})

DO CASE
CASE NPOSAUX==0
	MSGALERT("ATENÇÃO ==> FAVOR SELECIONAR PELO MENOS UMA MINUTA." , "GPO - CADZBX.PRW")
	RETURN(.F.)
ENDCASE

IF !MSGYESNO("CONFIRMA O ACEITE DAS MINUTAS SELECIONADAS ??")
	RETURN(.F.)
ENDIF

FP4->(DBSETORDER(3)) 		// 3 = FP4_FILIAL+FP4_AS+FP4_VIAGEM
FQ5->(DBSETORDER(9)) 		// 9 = FQ5_FILIAL+FQ5_AS+FQ5_VIAGEM

FOR NPOS:=1 TO LEN(ATABAUX)
	IF ATABAUX[NPOS,NPOSMAR]==CMARCA
		IF FQ5->(DBSEEK(XFILIAL("FQ5")+ATABAUX[NPOS,NPOSNAS])) 					// POSICIONA NA DTQ

			DO CASE
			CASE FQ5->FQ5_TPAS == "E"
				IF !FVALIDAZLG(ATABAUX[NPOS,NPOSNAS],ATABAUX[NPOS,NPOSDAT]) 	// VALIDA O ZLG
					LOOP
				ENDIF
			    FP4->(DBSEEK(XFILIAL("FP4")+FQ5->FQ5_AS+FQ5->FQ5_VIAGEM))  		// POSICIONA NO ZA5
				IF _LGERZLG .AND. FP4->FP4_TIPOSE != "M"  						// M=MAO DE OBRA
					FGRAVAZLG(ATABAUX[NPOS,NPOSDAT],ATABAUX[NPOS,NPOSDAT],CZLGSTATUS)
					U_L111MOT2(FQ5->FQ5_DATINI,FQ5->FQ5_DATFIM,FQ5->FQ5_AS,FQ5->FQ5_NOMCLI,FQ5->FQ5_SOT,FQ5->FQ5_OBRA,FQ5->FQ5_VIAGEM,LREVIS,FQ5->FQ5_SEQCAR)  //EXECUTA XMOTO2
				ENDIF
			CASE FQ5->(FQ5_TPAS=="T")
				ZA6->(DBSEEK(FQ5->(FQ5_FILORI+FQ5_SOT+FQ5_OBRA+FQ5_SEQVIA))) 	// POSICIONA NO ZA6
			 //	FGRAVAZLE(ATABAUX[NPOS,NPOSDAT],ATABAUX[NPOS,NPOSDAT],CZLGSTATUS,CCODMOT,CNOMMOT)
				IF FQ5->(EMPTY(FQ5_JUNTO))
					IF !U_L111MOTO(FQ5->FQ5_DATINI,FQ5->FQ5_DATFIM,FQ5->FQ5_AS,FQ5->FQ5_NOMCLI,FQ5->FQ5_SOT,FQ5->FQ5_OBRA,FQ5->FQ5_VIAGEM,LREVIS,FQ5->FQ5_SEQCAR)  //EXECUTA XMOTORISTA
						LOK:=.F.
					ENDIF
				ENDIF
			ENDCASE

		 //	FPF->(DBGOTO(ARECNOSZBX[NPOS]))  									// POSICIONA NO ZBX
			FPF->(DBSETORDER(2))  												// 2=FPF_FILIAL+FPF_MINUTA
		    IF FPF->(DBSEEK(XFILIAL("FPF") + ATABAUX[NPOS,NPOSMIN]))		
				IF EXISTBLOCK("ZBXACVLD")										// PONTO DE ENTRADA PARA INCLUSAO DE BOTOES NAS ACOES RELACIONADAS DA BAIXA DA MINUTA
					LGRAVA := EXECBLOCK("ZBXACVLD",.T.,.T.,{GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_DATA", NI), GDFIELDGET("FPF_STATUS", NI), GDFIELDGET("FPF_HORAI", NI), GDFIELDGET("FPF_HORAF", NI)})
				ELSE
					LGRAVA := .T.
				ENDIF
				IF LGRAVA	
					IF FPF->(RECLOCK("FPF",.F.))
						FPF->FPF_STATUS := "2"  //1=PREVISTA,2=CONFIRMADA,3=BAIXADA,4=ENCERRADA,5=CANCELADA,6=MEDIDA
						FPF->(MSUNLOCK())
						NGRAVADOS++
						OBROWSE:DATA():AARRAY[NPOS,NPOSSTA]:=FPF->FPF_STATUS
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDIF
NEXT

OBROWSE:REFRESH(.T.)
OBROWSE:SETFOCUS()

IF NGRAVADOS>0
	MSGALERT("ACEITE DE MINUTAS EXECUTADO COM SUCESSO." , "GPO - CADZBX.PRW")
ELSE
	MSGALERT("NENHUM ACEITE FOI EXECUTADO." , "GPO - CADZBX.PRW")
ENDIF

RESTAREA(AAREAZBX) 
RESTAREA(AAREADTQ) 
RESTAREA(AAREAZA5) 

RETURN(.T.) 
*/ 



/*
// ======================================================================= \\
STATIC FUNCTION FVALIDAZLG( CNRAS, DDATA )  
// ======================================================================= \\
// --> VERIFICA SE EXISTE PROGRAMAÇÃO

LOCAL   LRET  := .T.

IF FVERZLG(CNRAS,DDATA) 		// VERIFICA SE EXISTE PROGRAMAÇÃO
	MSGALERT("EXISTE PROGRAMAÇÃO DIÁRIA NO DIA "+DTOC(DDATA)+". MINUTA DESSE DIA NÃO FOI ACEITA." , "GPO - CADZBX.PRW")
	LRET := .F.
ENDIF

RETURN LRET
*/
