#INCLUDE "loca053.ch" 
/*/{PROTHEUS.DOC} LOCA053.PRW
ITUP BUSINESS - TOTVS RENTAL
TIME SHEET
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/

#INCLUDE "PROTHEUS.CH"                                                                                                                     
#INCLUDE "TOPCONN.CH"

FUNCTION LOCA053()
LOCAL _CUSER		:= RETCODUSR(SUBSTR(CUSUARIO,7,15))  //RETORNA O CÓDIGO DO USUÁRIO
LOCAL _F            := 0 

PRIVATE _CFILATU	:= SM0->M0_CODFIL
PRIVATE CUSER		:= SPACE(15)
PRIVATE CPASS		:= SPACE(10)
PRIVATE CREG		:= SPACE(03)
PRIVATE ABROWSE		:= {}
PRIVATE AROTINA		:= {}
PRIVATE CMARCA		:= GETMARK()
PRIVATE CCADASTRO	:= STR0001 //"TIME SHEET"
PRIVATE MMSG		:= ""
PRIVATE CPERG		:= "LOCP021"
PRIVATE _CCC 		:= ""
PRIVATE _CTPSERV	:= ""
PRIVATE _DTATVI , _DTATVF 									// --> TRATAMENTO DE FUNCIONARIO EM ATIVIDADE(NAO DEMITIDO)

//IF !LOCA061() 											// --> VALIDAÇÃO DO LICENCIAMENTO (WS) DO GPO 
//	RETURN 
//ENDIF 

REGTOMEMORY("FPQ",.T.)

IF FQ1->(DBSEEK(XFILIAL("FQ1") + _CUSER + "LOCA053",.T.)) 	// PROCURA O CÓDIGO DE USUÁRIO NA TABELA DE USUÁRIOS ANALIZADORES DE PROMOÇÕES (SZ5)
	_CCC := FQ1->FQ1_CC
ELSE
	MSGALERT(STR0002 , STR0003)  //"ATENÇÃO: SOMENTE USUÁRIOS PRÉ-CADASTRADOS PODEM EFETUAR ESSE LANÇAMENTO."###"GPO - LOCT053.PRW"
	RETURN .F.
ENDIF

IF FQ1->(DBSEEK(XFILIAL("FQ1") + _CUSER + "LOCT053B",.T.)) 	// PROCURA O CÓDIGO DE USUÁRIO NA TABELA DE USUÁRIOS ANALIZADORES DE PROMOÇÕES (SZ5)
	_CTPSERV := FQ1->FQ1_CC
ELSE
	_CTPSERV := ""
ENDIF
/*
MV_PAR01 = PERÍODO DE
MV_PAR02 = PERÍODO ATÉ
MV_PAR03 = ALERTA VT
*/
// CRIA PERGUNTAS SE NÃO EXISTIR
AMV_PAR := VALPARAM(1)
IF LEN(AMV_PAR) > 0
   MV_PAR01 := AMV_PAR[1]
   MV_PAR02 := AMV_PAR[2]
ELSE
	MSGALERT(STR0004 , STR0003)  //"PROCESSO CANCELADO!"###"GPO - LOCT053.PRW"
	RETURN 
ENDIF 

_DTATVI := MV_PAR01
_DTATVF := MV_PAR02

//AADD(AROTINA , {"PESQUISAR"  , "AXPESQUI"    , 0 , 1} )		// PESQUISAR
  AADD(AROTINA , {STR0005    , "LOCA05302(1)" , 0 , 1} )		// MANUTENÇÃO DA LOCAÇÃO DO FUNCIONÁRIO NAS OBRAS //"LOCAÇÃO"
//AADD(AROTINA , {"INTEGRAÇÃO" , "LOCA05309(1)" , 0 , 2} )		// INTEGRAÇÃO DE FUNCIONÁRIOS EM OBRAS
//AADD(AROTINA , {"COPIA AS"   , "LOCA05309(2)" , 0 , 3} )		// CÓPIA LANÇAMENTO DE UMA DATA PARA OUTRA POR AS
//AADD(AROTINA , {"COPIA PROJ" , "LOCA05309(3)" , 0 , 4} )		// CÓPIA LANÇAMENTO DE UMA DATA PARA OUTRA POR PROJETO
  AADD(AROTINA , {STR0006    , "LOCA05309(4)" , 0 , 5} )		// GERA LANÇAMENTOS EM UMA DATA //"GERAÇÃO"
  AADD(AROTINA , {STR0007 , "LOCA05302(5)" , 0 , 6} )		// GERA LANÇAMENTOS EM UMA DATA //"VISUALIZAR"
  AADD(AROTINA , {STR0008    , "LOCA05301"    , 0 , 7} )		// LEGENDA //"LEGENDA"

IF SELECT("QRY") > 0
	QRY->(DBCLOSEAREA())
ENDIF
_CQUERY := " SELECT DISTINCT SRA.RA_FILIAL, SRA.RA_MAT ,  SRA.RA_NOME  , SRA.RA_CODFUNC, SRA.RA_TSHEET, SRA.RA_DSHEET , SRA.RA_CC, "
//_CQUERY += "                 SRJ.RJ_FUNCAO, SRJ.RJ_DESC, ZLO.FPQ_FILIAL, ZLO.FPQ_MAT   , ZLO.FPQ_DATA , ZLO.FPQ_STATUS, ZLO.FPQ_DSTS, SRA.RA_DEMISSA "
_CQUERY += "                 SRJ.RJ_FUNCAO, SRJ.RJ_DESC, ZLO.FPQ_FILIAL, ZLO.FPQ_MAT   , ZLO.FPQ_DATA , ZLO.FPQ_STATUS, SRA.RA_DEMISSA "
_CQUERY += " FROM   " + RETSQLNAME("SRA") + " SRA "
_CQUERY += " INNER JOIN " + RETSQLNAME("SRJ") + " SRJ ON SRA.RA_FILIAL  = SRJ.RJ_FILIAL AND SRA.RA_CODFUNC = SRJ.RJ_FUNCAO AND SRJ.D_E_L_E_T_ = '' "
_CQUERY += " LEFT  JOIN " + RETSQLNAME("FPQ") + " ZLO ON ZLO.FPQ_FILMAT = SRA.RA_FILIAL AND ZLO.FPQ_MAT    = SRA.RA_MAT  "
_CQUERY += "                                         AND ZLO.FPQ_DATA   = '" + DTOS(DDATABASE) + "' AND ZLO.D_E_L_E_T_ = '' "
_CQUERY += " WHERE  SRA.RA_TSHEET = 'S' "    
_CQUERY += "        AND (SRA.RA_DEMISSA  = '' OR SRA.RA_DEMISSA BETWEEN  '"+DTOS(_DTATVI)+"' AND '"+DTOS(_DTATVF)+"'  ) "    
_CQUERY += "        AND  SRA.D_E_L_E_T_ = '' "
_CQUERY += " ORDER BY SRA.RA_FILIAL, SRA.RA_MAT "
_CQUERY := CHANGEQUERY(_CQUERY)
TCQUERY _CQUERY NEW ALIAS "QRY"

TCSETFIELD("QRY","RA_DEMISSA","D",8,0)
	
DBSELECTAREA("QRY")
DBGOTOP()

ACAMPOS := {}
ATAM := TAMSX3("RA_FILIAL")
AADD(ACAMPOS,{ "RA_FILIAL"	,ATAM[3],ATAM[1],ATAM[2] } )
ATAM := TAMSX3("RA_MAT")
AADD(ACAMPOS,{ "RA_MAT"		,ATAM[3],ATAM[1],ATAM[2] } )
ATAM := TAMSX3("RA_CC")
AADD(ACAMPOS,{ "RA_CC"		,ATAM[3],ATAM[1],ATAM[2] } )
ATAM := TAMSX3("RA_DESCCC")
AADD(ACAMPOS,{ "RA_DESCCC"	,ATAM[3],ATAM[1],ATAM[2] } )
ATAM := TAMSX3("RA_NOME")
AADD(ACAMPOS,{ "RA_NOME"	,ATAM[3],ATAM[1],ATAM[2] } )
ATAM := TAMSX3("RA_CODFUNC")
AADD(ACAMPOS,{ "RA_CODFUNC"	,ATAM[3],ATAM[1],ATAM[2] } )
ATAM := TAMSX3("RA_DESCFUN")
AADD(ACAMPOS,{ "RA_DESCFUN"	,ATAM[3],ATAM[1],ATAM[2] } )
ATAM := TAMSX3("RA_DSHEET")
AADD(ACAMPOS,{ "RA_DSHEET"	,ATAM[3],ATAM[1],ATAM[2] } )
ATAM := TAMSX3("FPQ_STATUS")
AADD(ACAMPOS,{ "FPQ_STATUS"	,ATAM[3],ATAM[1],ATAM[2] } )
//ATAM := TAMSX3("FPQ_DSTS")
//AADD(ACAMPOS,{ "FPQ_DSTS"	,ATAM[3],ATAM[1],ATAM[2] } )
//ATAM := TAMSX3("RA_VT")
//AADD(ACAMPOS,{ "RA_VT"		,ATAM[3],ATAM[1],ATAM[2] } ) removido da 94
ATAM := TAMSX3("RA_DEMISSA")
AADD(ACAMPOS,{ "RA_DEMISSA"	,ATAM[3],ATAM[1],ATAM[2] } )
AADD(ACAMPOS,{ "ED_MSBLQL"	,"C"    ,1      ,0       } )

// --> CRIA ARQUIVO DE TRABALHO.
//CNOMARQ := CRIATRAB(ACAMPOS)
IF (SELECT("TRB") <> 0)
	DBSELECTAREA("TRB")
	DBCLOSEAREA()
ENDIF
//DBUSEAREA(.T.,,CNOMARQ,"TRB",NIL,.F.)
//INDREGUA("TRB",CNOMARQ,"RA_FILIAL + RA_MAT",,,"SELECIONANDO REGISTROS...")

CT53  := "T53"+SUBSTR(TIME(),1,2)+SUBSTR(TIME(),4,2)+SUBSTR(TIME(),7,2)
CTI53 := "TI53"+SUBSTR(TIME(),1,2)+SUBSTR(TIME(),4,2)+SUBSTR(TIME(),7,2)
IF TCCANOPEN(CT53)
   	TCDELFILE(CT53)
ENDIF
DBCREATE(CT53, ACAMPOS, "TOPCONN")
DBUSEAREA(.T., "TOPCONN", CT53, ("TRB"), .F., .F.)
DBCREATEINDEX(CTI53, "RA_FILIAL + RA_MAT"         , {|| RA_FILIAL + RA_MAT         })
TRB->( DBCLEARINDEX() ) //FORÇA O FECHAMENTO DOS INDICES ABERTOS
DBSETINDEX(CTI53) //ACRESCENTA A ORDEM DE INDICE PARA A ÁREA ABERTA



DBSELECTAREA("QRY")
DBGOTOP()
WHILE QRY->(!EOF()) 
	_CSEG := IIF(SUBSTR(QRY->RA_CC,1,2) == "BR",POSICIONE("FP0",1,XFILIAL("FP0")+ALLTRIM(QRY->RA_CC),"ZA0_TIPOSE"),"")
	DBSELECTAREA("TRB")
	RECLOCK("TRB",.T.)
	TRB->RA_FILIAL  := QRY->RA_FILIAL
	TRB->RA_MAT     := QRY->RA_MAT
	TRB->RA_CC      := QRY->RA_CC
	TRB->RA_DESCCC	:= IIF(_CSEG=="E",STR0009,; //"EQUIPAMENTOS"
					   IIF(_CSEG=="L",STR0010,; //"LOCAÇOES"
					   IIF(_CSEG=="T",STR0011,""))) //"TRANSPORTE"
	TRB->RA_NOME	:= QRY->RA_NOME
	TRB->RA_CODFUNC	:= QRY->RA_CODFUNC
	TRB->RA_DSHEET 	:= QRY->RA_DSHEET   
	TRB->RA_DESCFUN	:= QRY->RJ_DESC		   
	TRB->FPQ_STATUS	:= QRY->FPQ_STATUS  
	//TRB->FPQ_DSTS	:= QRY->FPQ_DSTS
	//TRB->RA_VT     	:= QRY->RA_VT removido da 94
    TRB->RA_DEMISSA := QRY->RA_DEMISSA

	// POSSUI PERMISSÃO PARA ACESSO AO CENTRO DE CUSTO ESPECÍFICO OU O CENTRO DE CUSTO INICIA COM "BR" 
	// E O USUÁRIO POSSUI PERMISSÃO PARA ACESSO AOS SERVIÇOS IGUAIS AO DO PROJETO NO COMERCIAL
	IF  ALLTRIM(QRY->RA_CC) $ _CCC .OR. ;
		(SUBSTR(QRY->RA_CC,1,2) == "BR" .AND. POSICIONE("FP0",1,XFILIAL("FP0")+ALLTRIM(QRY->RA_CC),"ZA0_TIPOSE") $ _CTPSERV) .OR. ;
		"ALL" $ UPPER(ALLTRIM(_CCC+_CTPSERV))
		TRB->ED_MSBLQL	:= "2"	//LIBERADO
	ELSE
		TRB->ED_MSBLQL	:= "1"	//BLOQUEADO
	ENDIF		
	MSUNLOCK("TRB")
	QRY->(DBSKIP())
ENDDO

ASTRU := TRB->(DBSTRUCT())
     
DBSELECTAREA("QRY")
DBCLOSEAREA()

FOR _F := 1 TO LEN(ASTRU)-1
	DBSELECTAREA("SX3")
	DBSETORDER(2)
	IF DBSEEK(ALLTRIM(ASTRU[_F,1]),.T.)
		DO CASE
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "RA_FILIAL"      
			_CDESCRICAO := STR0012 //"FIL. MAT"
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "RA_MAT"
			_CDESCRICAO := STR0013 //"MATRICULA"
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "RA_CC"
			_CDESCRICAO := STR0014 //"C/C"
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "RA_DESCCC"
			_CDESCRICAO := STR0015 //"SERVIÇO"
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "RA_NOME"
			_CDESCRICAO := STR0016 //"FUNCIONÁRIO"
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "RA_CODFUNC"
			_CDESCRICAO := STR0017 //"CÓDIGO"
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "RA_DESCFUN"
			_CDESCRICAO := STR0018 //"FUNÇÃO"
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "RA_DSHEET"
			_CDESCRICAO := STR0019 //"ACUMULADO"
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "FPQ_STATUS"
			_CDESCRICAO := STR0020 + DTOC(DDATABASE) //"STATUS EM "
		//CASE &(LOCXCONV(2)) = "FPQ_DSTS"
		//	_CDESCRICAO := "DESC. STATUS "
		CASE GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO") = "RA_DEMISSA"
			_CDESCRICAO := STR0021 //"DEMISSÃO"
		ENDCASE
		
		AADD(ABROWSE, {_CDESCRICAO, GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO"), GetSx3Cache(&(LOCXCONV(2)),"X3_TIPO"),;
		GetSx3Cache(&(LOCXCONV(2)),"X3_TAMANHO"), GetSx3Cache(&(LOCXCONV(2)),"X3_DECIMAL"),GetSx3Cache(&(LOCXCONV(2)),"X3_PICTURE")})
	ENDIF
NEXT _F
                    
ACORES := { {'TRB->RA_DSHEET<80 .AND. EMPTY(TRB->RA_DEMISSA) ', 'BR_VERDE'    }, ;
            {'TRB->RA_DSHEET>=90  .AND. EMPTY(TRB->RA_DEMISSA) ', 'BR_VERMELHO' }, ;
            {'TRB->RA_DSHEET>=80 .AND. TRB->RA_DSHEET<90  .AND. EMPTY(TRB->RA_DEMISSA) ', 'BR_AMARELO'  },;
            {'!EMPTY(TRB->RA_DEMISSA) ','BR_PRETO'} }

CEXPFILTRO := ""

DBSELECTAREA('TRB') 
DBGOTOP()
MBROWSE( 6, 1,22,75,"TRB",ABROWSE,,,,1,ACORES,,,,,,,,CEXPFILTRO)

TRB->(DBCLOSEAREA())

//FERASE( CNOMARQ + ".DBF" )
//FERASE( CNOMARQ + ORDBAGEXT() )

TCSQLEXEC("DROP TABLE "+CT53)
TCSQLEXEC("DROP TABLE "+CTI53)

RETURN



// ======================================================================= \\
FUNCTION LOCA05301()
// ======================================================================= \\
// --> "LEGENDA"
ALEGENDA := { {'BR_VERDE'    , STR0052}, ; //'NORMAL (MENOS DE 80 DIAS TRABALHADOS)'
			  {'BR_VERMELHO' , STR0053 }, ; //'FOLGAR (90 DIAS OU MAIS TRABALHADOS)'
              {'BR_AMARELO'  , STR0054},; //'ATENÇÃO (QUASE 90 DIAS TRABALHADOS)'
              {'BR_PRETO'    , STR0055} } //'FUNCIONÁRIO DEMITIDO'

BRWLEGENDA(CCADASTRO,STR0008 ,ALEGENDA) //"LEGENDA"

RETURN .T.



// ======================================================================= \\
FUNCTION LOCA05302(POPC)
// ======================================================================= \\
// --> POPC: 1="LOCAÇÃO" | 5="VISUALIZAR"

LOCAL CTITJAN      := STR0001 //"TIME SHEET"
LOCAL NSTYLE 
LOCAL AAREATRB     := GETAREA()
LOCAL LVALMVULM    := .F. //GETMV("MV_LOCX086")			// GETMV("MV_LOCX086",.F.,1) == 1
LOCAL CFUNC		   := TRIM(TRB->RA_MAT)+" - "+TRIM(TRB->RA_NOME)  

PRIVATE NOPC       := POPC  
PRIVATE OARIAL12N1 := TFONT():NEW("ARIAL",12,16,,.T.,,,,.T.,.F.)
PRIVATE OARIAL12N2 := TFONT():NEW("ARIAL",12,16,,.T.,,,,.T.,.F.)   
PRIVATE ODLGLO , OFOLDERLO , OFUNC , ODIAS 
//PRIVATE CFUNC    := TRIM(TRB->RA_MAT)+" - "+TRIM(TRB->RA_NOME) 
PRIVATE NDIAS      := TRB->RA_DSHEET
PRIVATE _NACUMI    := 0
PRIVATE _NACUMF    := 0

PRIVATE AHEADER    := {}
PRIVATE ACOLS      := {}       

PRIVATE NFOLDERLO  := 1
PRIVATE OFONT1     := OARIAL12N1  //SAY
PRIVATE OFONT2     := OARIAL12N2  //GET
PRIVATE AOBJECTS   := {}
PRIVATE AINFO      := {}
PRIVATE APOSGET    := {}
PRIVATE APOSOBJ    := {}    

PRIVATE CKEYP      := ""
PRIVATE	CKEYS      := ""

NSTYLE := GD_INSERT + GD_UPDATE + GD_DELETE     

IF LVALMVULM
	IF DDATABASE <= IIF(FINDFUNCTION("MVULMES"),MVULMES(),GETMV("MV_ULMES"))
		HELP(" ",1,"MV_ULMES")
		RETURN .F.
	ENDIF
ENDIF
                     
IF TRB->ED_MSBLQL == "1"
	MSGALERT(STR0022 + ALLTRIM(_CCC) + STR0023 + ALLTRIM(_CTPSERV) + "." , STR0003)  //"ATENÇÃO: VOCÊ NÃO TEM ACESSO A ESTE FUNCIONÁRIO, ACESSO SOMENTE PARA VISUALIZAÇÃO DE LANÇAMENTOS. VOCÊ POSSUI ACESSO AOS CENTROS DE CUSTO "###", E AOS SEGMENTOS "###"GPO - LOCT053.PRW"
	NOPC := POPC := 5
ENDIF                                      

_DFOLMES := GETMV("MV_FOLMES")     
_DFOLMES :=_DFOLMES+"01"
_DFOLMES := MONTHSUB(STOD(_DFOLMES),1)

IF LASTDAY(_DFOLMES) > MV_PAR02 .AND. NOPC != 5//NÃO PODE SER VISUALIZAR          
	MSGINFO(STR0024 + CRLF +STR0025 , STR0003)  //"EDIÇÃO NÃO PERMITIDA - FOLHA DE PAGAMENTO JÁ FECHADA"###"UTILIZE A OPÇÃO VISUALIZAR"###"GPO - LOCT053.PRW"
	RETURN
ENDIF
	
ASIZEAUT := MSADVSIZE()
IF OMAINWND:NCLIENTWIDTH > 800
	AADD( AOBJECTS, {  100, 008, .T., .T. } )  //ENCHOICE
	AADD( AOBJECTS, {  100, 092, .T., .T. } )  //MSGETDADOS
ELSE
	AADD( AOBJECTS, {  100, 030, .T., .T. } )  //ENCHOICE
	AADD( AOBJECTS, {  100, 070, .T., .T. } )  //MSGETDADOS
ENDIF

AINFO 	:= {ASIZEAUT[1],ASIZEAUT[2],ASIZEAUT[3],ASIZEAUT[4],3,3}
APOSOBJ := MSOBJSIZE( AINFO, AOBJECTS, .T. , .F. )
APOSGET := MSOBJGETPOS((ASIZEAUT[3]-ASIZEAUT[1]),315,{{004,024,240,270}} ) 

NLIN1   := APOSOBJ[2,1]
NCOL1   := APOSOBJ[2,2]
NLIN2   := APOSOBJ[2,4]-APOSOBJ[2,2]  //LARGURA
NCOL2   := APOSOBJ[2,3]-APOSOBJ[2,1]  //ALTURA

APAGES  := {}    
ATITLES := {}    
AADD(ATITLES,STR0026 + DTOC(MV_PAR01) + STR0027 + DTOC(MV_PAR02)) //"LOCAÇÕES DE "###" A "

DEFINE MSDIALOG ODLG FROM ASIZEAUT[7],0           TO ASIZEAUT[6],ASIZEAUT[5] TITLE OEMTOANSI(CTITJAN) OF OMAINWND PIXEL
	//         TFOLDER():NEW(<NROW>,<NCOL>,<CPROMPT>,<CDLGNAMEN>,<OWND> ,<NOPTION>,<NCLRFORE>,<NCLRBACK>,<.LPIXEL.>,<.LDESIGN.>,<NWIDTH>,<NHEIGHT>,<CMSG>)
	OFOLDER := TFOLDER():NEW(NLIN1+15 ,NCOL1 ,ATITLES  ,APAGES     ,ODLG   ,         ,          ,          ,.T.       ,.F.        ,NLIN2   ,NCOL2-15    ,      )
	OFOLDER:ADIALOGS[1]:OFONT:=ODLG:OFONT
	
	OFOLDER:BSETOPTION := {|NINDO|LOCA05306(NINDO,OFOLDER:NOPTION,@ODLG,@OFOLDER)} 
	
	NLIN1 := APOSOBJ[1,1]
	NCOL1 := APOSOBJ[1,2]
	NLIN2 := APOSOBJ[1,3]
	NCOL2 := APOSOBJ[1,4]
	@ NLIN1,NCOL1 TO NLIN2+15,NCOL2 OF ODLG PIXEL
	
	@ NLIN1+15,NCOL1+005 SAY   OEMTOANSI(STR0028) 		SIZE 070,8   		OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT1        //"FUNCIONÁRIO:"
	@ NLIN1+14,NCOL1+080 MSGET OFUNC  VAR CFUNC SIZE 320,8				   WHEN .F. OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT2      
	@ NLIN1+15,NCOL1+405 SAY   OEMTOANSI(STR0029)   		SIZE 065,8   		OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT1        //"ACUMULADO:"
	@ NLIN1+14,NCOL1+480 MSGET ODIAS  VAR NDIAS PICTURE "999" 	SIZE 040,8 WHEN .F. OF ODLG PIXEL COLOR CLR_BLUE FONT OFONT2      
	
	IF NFOLDERLO > 0
		NLIN1 := 002
		NCOL1 := 003
		NLIN2 := APOSOBJ[2,3]-APOSOBJ[2,1]-35  //ALTURA
		NCOL2 := APOSOBJ[2,4]-07
		FFOLDERLO(NFOLDERLO,NLIN1,NCOL1,NLIN2,NCOL2)
	ENDIF       
ACTIVATE MSDIALOG ODLG CENTERED ON INIT ENCHOICEBAR(ODLG,{||FSALVAR(ODLG)},{||FSAIR(ODLG)},,) //ABUTTONS) 

RESTAREA(AAREATRB)

RETURN 



// ======================================================================= \\
STATIC FUNCTION FFOLDERLO(NFOLDER,NLIN1,NCOL1,NLIN2,NCOL2)
// ======================================================================= \\

LOCAL ACAMPOSSIM := {} 
LOCAL NSTYLE     := GD_INSERT + GD_UPDATE + GD_DELETE  
LOCAL CALIAS , CCHAVE , CCONDICAO , NINDICE , CFILTRO  

IIF(NOPC <> 5,NSTYLE,NSTYLE:=0)

CALIAS    := "FPQ"
CCHAVE    := TRB->RA_FILIAL + TRB->RA_MAT + TRB->RA_FILIAL
CCONDICAO := 'FPQ->FPQ_FILIAL + FPQ->FPQ_MAT + FPQ->FPQ_FILMAT == "'+CCHAVE+'"
NINDICE   := 2  
CFILTRO   := 'FPQ->FPQ_FILIAL + FPQ->FPQ_MAT + FPQ->FPQ_FILMAT == "'+CCHAVE+'" .AND. FPQ->FPQ_DATA >= _DTATVI .AND. FPQ->FPQ_DATA <= _DTATVF'

AADD(ACAMPOSSIM,{"FPQ_DATA"  	,"" })
AADD(ACAMPOSSIM,{"FPQ_HRINI"    ,"" })
AADD(ACAMPOSSIM,{"FPQ_HRFIN"    ,"" })
AADD(ACAMPOSSIM,{"FPQ_AGENDA"  	,"" })
AADD(ACAMPOSSIM,{"FPQ_SERVIC"  	,"" })
AADD(ACAMPOSSIM,{"FPQ_STATUS"   ,"" })
//AADD(ACAMPOSSIM,{"FPQ_DSTS"     ,"V"})
AADD(ACAMPOSSIM,{"FPQ_VT"       ,"" })
AADD(ACAMPOSSIM,{"FPQ_AS"  	    ,"" })
AADD(ACAMPOSSIM,{"FPQ_PROJET"   ,"" })
AADD(ACAMPOSSIM,{"FPQ_OBRA"	    ,"" })
AADD(ACAMPOSSIM,{"FPQ_DESC"	    ,"" })
AADD(ACAMPOSSIM,{"FPQ_HORAS"	,"" })
AADD(ACAMPOSSIM,{"FPQ_OBS"     	,"" })
AADD(ACAMPOSSIM,{"FPQ_TIPINC"  	,"" })
AADD(ACAMPOSSIM,{"FPQ_XHINIR"   ,"" })
AADD(ACAMPOSSIM,{"FPQ_XHFIMR"   ,"" })

// --> PONTO DE ENTRADA PARA ADIÇÃO DE NOVOS CAMPOS NA LOCAÇÃO DE MÃO DE OBRA.
IF EXISTBLOCK("LOC53ZLO", .F., .F.)
	ACAMPOSSIM := EXECBLOCK("LOC53ZLO", .F., .F., { ACAMPOSSIM })
ENDIF

AHEADER := FHEADER(ACAMPOSSIM)
ACOLS   := FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)                                  

DBSELECTAREA("FPQ")
FPQ->(DBSETORDER(2)) 

//                            NTOP ,NLEFT,NBOTTOM,NRIGHT ,NSTYLE ,CLINHAOK       ,CTUDOOK ,CINICPOS ,AALTER ,NFREEZE,NMAX,CFIELDOK,CSUPERDEL,CDELOK,OWND                     ,AHEADER,ACOLS}
ODLGLO := MSNEWGETDADOS():NEW(NLIN1,NCOL1 ,NLIN2  ,NCOL2  ,NSTYLE,"LOCA05305()"  ,       ,			,       ,       ,110 ,"LOCA05304()"  ,         ,.T.   ,OFOLDER:ADIALOGS[NFOLDER],AHEADER,ACOLS)
ODLGLO:OBROWSE:BCHANGE:={||LOCA05303()} 		// OBROWSE:BADD 
ODLGLO:OBROWSE:BDELETE := {||LOCA05312() } 

RETURN 



// ======================================================================= \\
FUNCTION LOCA05303()
// ======================================================================= \\
// INCLUSÃO DE UMA NOVA LINHA

LOCAL _LRET		:= .T.

IF ODLGLO:NAT > 1
	IF EMPTY(ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DATA" })])
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DATA"})]   := CTOD("  /  /  ")
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_HRINI"})]  := "  :  "
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_HRFIN"})]  := "  :  "
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_STATUS"})] := ODLGLO:ACOLS[(ODLGLO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_STATUS" })]
		//ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DSTS"})]   := ODLGLO:ACOLS[(ODLGLO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DSTS"   })]
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_VT"})]     := ODLGLO:ACOLS[(ODLGLO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_VT" })]
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_AS"})]     := ODLGLO:ACOLS[(ODLGLO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_AS" })]
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_PROJET"})] := ODLGLO:ACOLS[(ODLGLO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_PROJET" })]
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_OBRA"})]   := ODLGLO:ACOLS[(ODLGLO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_OBRA" })]
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DESC"})]   := ODLGLO:ACOLS[(ODLGLO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DESC" })]
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_HORAS"})]  := ODLGLO:ACOLS[(ODLGLO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_HORAS" })]
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_OBS"})]    := ODLGLO:ACOLS[(ODLGLO:NAT)-1][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_OBS" })]
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_XHINIR"})] := "  :  "
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_XHFIMR"})] := "  :  "
		ODLGLO:OBROWSE:REFRESH()
	ENDIF
ENDIF

RETURN _LRET



// ======================================================================= \\
FUNCTION LOCA05304()
// ======================================================================= \\
// VALIDA SE A CAMPO ESTÁ OK

LOCAL _CCPO := ALLTRIM(READVAR())
LOCAL _LRET := .T.
LOCAL _ZLODATA := IIF(_CCPO=="M->FPQ_DATA", M->FPQ_DATA, ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DATA" })] )

IF _CCPO $ "M->FPQ_DATA"
	IF _ZLODATA > TRB->RA_DEMISSA .AND. !EMPTY(TRB->RA_DEMISSA)
		_LRET := .F.
		MSGALERT(STR0030+DTOC(TRB->RA_DEMISSA)+STR0031 , STR0003)  //"FUNCIONÁRIO DEMITIDO EM "###", NÃO É POSSÍVEL EFETUAR LANÇAMENTOS SUPERIORES A ESTA DATA!"###"GPO - LOCT053.PRW"
	ENDIF
ENDIF

IF _CCPO == "M->FPQ_STATUS" 
	IF ALLTRIM(M->FPQ_STATUS) == "000004" .AND. EMPTY(ACOLS[N, ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_AS"})])
		_LRET := .F.
		MSGALERT(STR0032 , STR0003)  //"STATUS OBRA: AS EM BRANCO, FAVOR SELECIONE"###"GPO - LOCT053.PRW"
	ENDIF
	IF ALLTRIM(M->FPQ_STATUS) == "000005" 
		_LRET := .F.
		MSGALERT(STR0033 , STR0003) //"STATUS INTEGRAÇAO: ESTE STATUS NÃO PODE SER SELECIONADO"###"GPO - LOCT053.PRW"
	ENDIF
ENDIF

RETURN(_LRET)



// ======================================================================= \\
FUNCTION LOCA05305()
// ======================================================================= \\
// VALIDA SE A LINHA ESTÁ OK 

LOCAL LRET := .T.          

LRET := LOCA05307("9")

RETURN LRET                                                                         



// ======================================================================= \\
STATIC FUNCTION FCOLS(AHEADER,CALIAS,NINDICE,CCHAVE,CCONDICAO,CFILTRO)
// ======================================================================= \\

LOCAL NPOS,ACOLS0,ACOLS:={}

(CALIAS)->(DBSETORDER(NINDICE))
(CALIAS)->(DBSEEK(CCHAVE,.T.))
WHILE (CALIAS)->(!EOF() .AND. &CCONDICAO)
	IF !(CALIAS)->(&CFILTRO)
		(CALIAS)->(DBSKIP())
        LOOP
	ELSE
		_NACUMI := ACUMUL(_NACUMI, FPQ->FPQ_STATUS)
	ENDIF
	ACOLS0:={}
	FOR NPOS:=1 TO LEN(AHEADER)
		IF !AHEADER[NPOS,10]=="V" 		// X3_CONTEXT
			(CALIAS)->(AADD(ACOLS0,FIELDGET(FIELDPOS(AHEADER[NPOS,2]))))
		ELSE
			(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
		ENDIF
	NEXT
	AADD(ACOLS0,(CALIAS)->(RECNO())  )  // NÚMERO DO REGISTRO
	AADD(ACOLS0,.F.  )  				// DELETED     
	AADD(ACOLS,ACOLS0)  	  
	(CALIAS)->(DBSKIP()) 
ENDDO 

IF EMPTY(ACOLS)
	ACOLS0 := {} 
	FOR NPOS:=1 TO LEN(AHEADER)
		(CALIAS)->(AADD(ACOLS0,CRIAVAR(AHEADER[NPOS,2])))
	NEXT
	AADD(ACOLS0,.F.  )  				// DELETED
	AADD(ACOLS,ACOLS0)
ENDIF

RETURN(ACLONE(ACOLS))
                   


// ======================================================================= \\
STATIC FUNCTION FHEADER(ACAMPOSSIM)
// ======================================================================= \\
LOCAL NPOS,ATABAUX,AHEADER:={}

DBSELECTAREA("SX3")
DBSETORDER(2)  //X3_CAMPO
FOR NPOS:=1 TO LEN(ACAMPOSSIM)
	IF (LOCXCONV(1))->(DBSEEK(ALLTRIM(ACAMPOSSIM[NPOS,1])))
		ATABAUX:={}
		AADD(ATABAUX,TRIM(X3TITULO()))
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CAMPO")        )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_PICTURE")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_TAMANHO")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_DECIMAL")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VALID")        )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_USADO")        )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_TIPO")         )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_F3")           )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CONTEXT")      )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_CBOX")         )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_RELACAO")      )  
		AADD(ATABAUX,".T."           )
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VISUAL")       )  
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_VLDUSER")      ) 
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_PICTVAR")      )                                                 
		AADD(ATABAUX,GetSx3Cache(&(LOCXCONV(2)),"X3_OBRIGAT")      )                              
		AADD(AHEADER,ATABAUX         )
	ENDIF
NEXT

DBSETORDER(1)  //X3_ARQUIVO+X3_ORDEM

RETURN(ACLONE(AHEADER))



// ======================================================================= \\
FUNCTION LOCA05306(NINDO , NESTOU , ODLG , OFOLDER) 
// ======================================================================= \\
LOCAL LRET := .T. 

OFOLDER:REFRESH()
ODLG:REFRESH()

SETFOCUS()

RETURN(LRET)



// ======================================================================= \\
STATIC FUNCTION FSALVAR(ODLG) 
// ======================================================================= \\

IF .T. 				// MSGYESNO("CONFIRMA A ATUALIZAÇÃO DAS TABELAS ??")
	FSALVAR000()
	IF .T. 			// MSGYESNO("TABELAS ATUALIZADAS COM SUCESSO. DESEJA SAIR ??")
		ODLG:END()
	ENDIF
ENDIF

RETURN 



// ======================================================================= \\
STATIC FUNCTION FSAIR(ODLG)
// ======================================================================= \\

IF .T. 				// MSGYESNO("SAIR SEM GRAVAR. CONFIRMA ??")
	ODLG:END()
ENDIF

RETURN



// ======================================================================= \\
STATIC FUNCTION FSALVAR000()
// ======================================================================= \\
PROCESSA({||FSALVAR001()} , STR0034)  //"AGUARDE... ATUALIZANDO AS TABELAS"

RETURN



// ======================================================================= \\
STATIC FUNCTION FSALVAR001()
// ======================================================================= \\

PROCREGUA(LEN(OFOLDER:ADIALOGS))

INCPROC(STR0035 + TRB->RA_MAT + " - " + TRB->RA_NOME) //"ATUALIZANDO... LOCAÇÕES DO FUNCIONÁRIO "

IF NFOLDERLO>0
	FSALVARLO("FPQ",ODLGLO:AHEADER,ODLGLO:ACOLS)
ENDIF

RETURN 



// ======================================================================= \\
STATIC FUNCTION FSALVARLO(CALIAS,AHEADER,ACOLS)
// ======================================================================= \\

LOCAL NPOS 
LOCAL _CULTSTS         := SPACE(LEN(TRB->FPQ_STATUS))
Local _MV_FOLMES := GETMV("MV_FOLMES",,"")

_NACUMF := 0

DBSELECTAREA(CALIAS)  
DBSETORDER(1)  
FOR NPOS:=1 TO LEN(ACOLS)

	IF LEN(ACOLS[NPOS]) == (LEN(AHEADER)+2)
		_LDEL := ACOLS[NPOS,LEN(AHEADER)+2]
		_NREC := ACOLS[NPOS,LEN(AHEADER)+1]
	ELSE
		_LDEL := ACOLS[NPOS,LEN(AHEADER)+1]
		_NREC := 0
	ENDIF

	IF !_LDEL 	//DELETED ?
		IF _NREC == 0 // REGISTRO NOVO
			RECLOCK(CALIAS,.T.)
		ELSE
			FPQ->(DBGOTO(_NREC))
			RECLOCK(CALIAS,.F.)
		ENDIF          
		FGRAVATUDO(CALIAS,AHEADER,ACOLS[NPOS])  //GRAVA TODOS OS CAMPOS DO ACOLS
		(CALIAS)->FPQ_FILIAL := TRB->RA_FILIAL
		(CALIAS)->FPQ_FILMAT := TRB->RA_FILIAL
		(CALIAS)->FPQ_MAT    := TRB->RA_MAT
		MSUNLOCK()
		_NACUMF := ACUMUL(_NACUMF, FPQ->FPQ_STATUS)
		IF FPQ->FPQ_DATA == DDATABASE 
			_CULTSTS := FPQ->FPQ_STATUS
		ENDIF
	ENDIF
     
	IF _LDEL	//DELETED ?
		IF _NREC <> 0
			// BEGIN - TRAVAR ALTERAÇÕES SE A FOLHA ESTIVER FECHADA
			FPQ->(DBGOTO(_NREC))
			CPERIODO := CVALTOCHAR(YEAR(FPQ->FPQ_DATA)) + STRZERO(MONTH(FPQ->FPQ_DATA),2)
			
			IF _MV_FOLMES <= CPERIODO    
				RECLOCK("FPQ",.F.)
				DBDELETE()
				MSUNLOCK() 	
			ELSE 
				MSGINFO(STR0036 , STR0037)  //"EXCLUSÃO NÃO PERMITIDO FOLHA DE PAGAMENTO JÁ FECHADA"###"OAS - LOCT053.PRW"
			ENDIF 
			/*FPQ->(DBGOTO(_NREC))
			RECLOCK("FPQ",.F.)
			DBDELETE()
			MSUNLOCK() */    
			// END   - TRAVAR ALTERAÇÕES SE A FOLHA ESTIVER FECHADA			
		ENDIF
     ENDIF
NEXT

//ATUAL. NÚMERO DE DIAS ACUMULADOS NO SRA
IF SRA->(DBSEEK(TRB->RA_FILIAL + TRB->RA_MAT))
	IF SRA->RA_FOLGA == "S"	// TRATA O ACUMULADO DE DIAS PARA PAGAR A FOLGA DO FUNCIONÁRIO
		RECLOCK("SRA",.F.)
		SRA->RA_DSHEET := SRA->RA_DSHEET - (_NACUMI) + (_NACUMF)
		MSUNLOCK()     

		//ATUAL. NÚMERO DE DIAS ACUMULADOS NO ARQUIVO TEMPORÁRIO
		RECLOCK("TRB",.F.)
		TRB->RA_DSHEET := TRB->RA_DSHEET - (_NACUMI) + (_NACUMF)
		MSUNLOCK()     
	ENDIF
ENDIF

//ATUAL. O STATUS DO DIA ATUAL NO ARQUIVO TEMPORÁRIO
RECLOCK("TRB",.F.)
TRB->FPQ_STATUS:= _CULTSTS
MSUNLOCK()     

RETURN    



// ======================================================================= \\
STATIC FUNCTION FGRAVATUDO(CALIAS,AHEADER,ACOLS)  
// ======================================================================= \\
// GRAVA TODOS OS CAMPOS DO ACOLS

LOCAL NPOS,CCAMPO

FOR NPOS:=1 TO LEN(AHEADER)
	CCAMPO := AHEADER[NPOS,2]
	(CALIAS)->(&CCAMPO) := ACOLS[NPOS] 
NEXT

RETURN(.T.)



// ======================================================================= \\
FUNCTION LOCA05307(_COPC,_CCAMPO)
// ======================================================================= \\

LOCAL _LRET 	:= .T.
LOCAL _CDATA  	:= IIF(_COPC $ "9|3|"    ,ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DATA" })]  ,M->FPQ_DATA)
LOCAL _CSTATUS	:= IIF(_COPC $ "9|6|3|4|",ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_STATUS" })],M->FPQ_STATUS)
LOCAL _CAS		:= IIF(_COPC $ "9|"      ,ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_AS" })]    ,M->FPQ_AS)
LOCAL _NHORAS	:= IIF(_COPC $ "9|"      ,ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_HORAS" })] ,M->FPQ_HORAS)
//LOCAL _CVT		:= IIF(_COPC $ "9|"      ,ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_VT" })]    ,M->FPQ_VT)
LOCAL _CHRINI  	:= ""
LOCAL _CHRFIN  	:= ""
LOCAL NL        := 0 

IF _COPC == "1" .OR. _COPC == "9"			// DATA OU VALIDAÇÃO DA LINHA OK
	IF     _CCAMPO == "FPQ_DATA"
		IF _CDATA < _DTATVI .OR. _CDATA > _DTATVF
			_LRET := .F.
			MSGALERT(STR0038 + DTOC(_DTATVI) + " A " + DTOC(_DTATVF) + ")." , STR0003) //"DATA INVÁLIDA, FORA DOS PARÂMETROS FORNECIDOS ("###"GPO - LOCT053.PRW"
		ENDIF
	ELSEIF _CCAMPO == "FPQ_HRFIN" .OR. _CCAMPO == "FPQ_HRINI"
		_CDATA  := ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2]) == "FPQ_DATA"  })]
		IF _CCAMPO == "FPQ_HRFIN"
			_CHRINI := ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2]) == "FPQ_HRINI" })]
			_CHRFIN := M->FPQ_HRFIN
		ELSE
			_CHRINI := M->FPQ_HRINI
			_CHRFIN := ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2]) == "FPQ_HRFIN" })]	
		ENDIF
		IF !EMPTY(SUBSTR(_CHRINI,1,2)) .AND. !EMPTY(SUBSTR(_CHRINI,4,2)) .AND. ; 
		   !EMPTY(SUBSTR(_CHRFIN,1,2)) .AND. !EMPTY(SUBSTR(_CHRFIN,4,2)) 
			FOR NL := 1 TO LEN(ODLGLO:ACOLS)
				_CDTATU  := ODLGLO:ACOLS[NL][ASCAN(AHEADER,{|X|ALLTRIM(X[2]) == "FPQ_DATA"})]
				_CHRIATU := ODLGLO:ACOLS[NL][ASCAN(AHEADER,{|X|ALLTRIM(X[2]) == "FPQ_HRINI"})]
				_CHRFATU := ODLGLO:ACOLS[NL][ASCAN(AHEADER,{|X|ALLTRIM(X[2]) == "FPQ_HRFIN"})]
				IF _CDATA == _CDTATU .AND. NL <> ODLGLO:NAT
					IF (_CHRINI < _CHRIATU  .AND. _CHRFIN >  _CHRIATU)  .OR.  (_CHRINI < _CHRFATU  .AND. _CHRFIN >  _CHRFATU) .OR.; 
					   (_CHRINI < _CHRIATU  .AND. _CHRFIN >  _CHRFATU)  .OR.  (_CHRINI > _CHRIATU  .AND. _CHRFIN <  _CHRFATU) .OR.; 	         
					   (_CHRINI == _CHRIATU .AND. _CHRFIN == _CHRFATU)	            
						MSGALERT(STR0039 , STR0003) //"JÁ EXISTE UM LANÇAMENTO NO MESMO PERÍODO!"###"GPO - LOCT053.PRW"
						_LRET := .F.
						EXIT
					ENDIF   
				ENDIF
			NEXT NL	
		ENDIF
	ELSE
		IF _CDATA < _DTATVI .OR. _CDATA > _DTATVF
			_LRET := .F.
			MSGALERT(STR0038 + DTOC(_DTATVI) + " A " + DTOC(_DTATVF) + ")." , STR0003) //"DATA INVÁLIDA, FORA DOS PARÂMETROS FORNECIDOS ("###"GPO - LOCT053.PRW"
		ENDIF
	ENDIF 
ENDIF
	
IF _COPC == "2" .OR. _COPC == "9" 			// STATUS OU VALIDAÇÃO DA LINHA OK
ENDIF

IF _COPC == "6" .OR. _COPC == "9" 			// VT OU VALIDAÇÃO DA LINHA OK
	// ra_vt removido da 94
	//DO CASE
	//CASE TRB->RA_VT == "S" .AND. _CSTATUS == "000000" .AND. (EMPTY(_CVT) .OR. _CVT == "N")
	//	_LRET := .F.
	//	MSGALERT("ESTE FUNCIONÁRIO RECEBE VALE TRANSPORTE." , "GPO - LOCT053.PRW")
	//CASE TRB->RA_VT == "S" .AND. _CSTATUS == "000004" .AND. (EMPTY(_CVT) .OR. _CVT == "N") .AND. MV_PAR03 == 1
	//	MSGALERT("AVISO ! ESTE FUNCIONÁRIO RECEBE VALE TRANSPORTE.")
	//CASE TRB->RA_VT == "N" .AND. _CSTATUS == "000000" .AND. _CVT == "S"
	//	_LRET := .F.
	//	MSGALERT("ESTE FUNCIONÁRIO NÃO RECEBE VALE TRANSPORTE." , "GPO - LOCT053.PRW")
	//CASE TRB->RA_VT == "N" .AND. _CSTATUS == "000004" .AND. _CVT == "S" .AND. MV_PAR05 == 1
	//	MSGALERT("AVISO ! ESTE FUNCIONÁRIO NÃO RECEBE VALE TRANSPORTE." , "GPO - LOCT053.PRW")
	//ENDCASE
ENDIF 

IF _COPC == "3" .OR. _COPC == "9" 			// AS OU VALIDAÇÃO DA LINHA OK
	DO CASE
	CASE ALLTRIM(_CSTATUS)=="000004" .AND. EMPTY(_CAS)
		_LRET := .F.
		MSGALERT(STR0040) //"NÃO É PERMITIDO DEIXAR A AS EM BRANCO PARA STATUS IGUAL A OBRA."
	CASE !EMPTY(_CAS) .AND. ALLTRIM(FQ5->FQ5_AS) == ALLTRIM(_CAS)
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_PROJET" })]	:= M->FPQ_PROJET 	:= FQ5->FQ5_SOT
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_OBRA" })]	:= M->FPQ_OBRA		:= FQ5->FQ5_OBRA
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DESC" })]	:= M->FPQ_DESC		:= FQ5->FQ5_NOMCLI
	CASE !EMPTY(_CAS)
		_LRET := LOCA05308(_CAS)
	CASE EMPTY(_CAS)
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_PROJET" })]	:= M->FPQ_PROJET 	:= ""
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_OBRA" })]	:= M->FPQ_OBRA		:= ""
		ODLGLO:ACOLS[ODLGLO:NAT][ASCAN(AHEADER,{|X|ALLTRIM(X[2])=="FPQ_DESC" })]	:= M->FPQ_DESC		:= ""
	ENDCASE		
ENDIF

IF _COPC == "4" .OR. _COPC == "9" 			// HORAS OU VALIDAÇÃO DA LINHA OK 
	IF _CSTATUS == "000005" .AND. EMPTY(_NHORAS)

	ELSEIF _CSTATUS <> "000005" .AND. !EMPTY(_NHORAS)
		_LRET := .F.
		MSGALERT(STR0041) //"NÃO SE PODE INFORMAR A QUANTIDADE DE HORAS QUANDO O STATUS NÃO FOR 000005=INTEGRAÇÃO."
	ENDIF
ENDIF
	
IF _COPC == "5" .AND. !EMPTY(MV_PAR06)			// VALIDA A DATA DA AS COM O PERÍODO INFORMADO
ENDIF

RETURN _LRET



// ======================================================================= \\
FUNCTION LOCA05308(_CAS, _LAVISO, _LOBRIG)
// ======================================================================= \\

LOCAL _AAREA     := GETAREA()
LOCAL _AAREADTQ  := FQ5->(GETAREA())
LOCAL _LRET      := .F.

DEFAULT _LAVISO  := .T.
DEFAULT _LOBRIG  := .T.

IF EMPTY(_CAS)
	IF _LAVISO
		AVISO(STR0042,STR0043,{"OK"}) //"VALIDAÇÃO - (AS_OK)"###"AS EM BRANCO!"
	ENDIF
	IF ! _LOBRIG
		RETURN .T.
	ENDIF
	RETURN .F.
ENDIF

FQ5->(DBSETORDER(9))
IF FQ5->(DBSEEK(XFILIAL("FQ5")+_CAS))
	IF ! ((!EMPTY(FQ5->FQ5_DATFEC) .OR. !EMPTY(FQ5->FQ5_DATENC) .AND. FQ5->FQ5_STATUS == "1") .OR. FQ5->FQ5_STATUS == "6") .AND. FQ5->FQ5_TPAS != "F" .AND. EMPTY(FQ5->FQ5_JUNTO)
		IF _LAVISO
			AVISO(STR0042,STR0044,{"OK"}) //"VALIDAÇÃO - (AS_OK)"###"AS NÃO ESTÁ ACEITA!"
		ENDIF
		_LRET := .F.
	ELSE
		_LRET := .T.
	ENDIF
ELSE
	_LRET := .F.
	AVISO(STR0042,STR0045,{"OK"}) //"VALIDAÇÃO - (AS_OK)"###"AS NÃO ENCONTRADA!"
ENDIF

FQ5->(RESTAREA(_AAREADTQ))
RESTAREA(_AAREA)

RETURN _LRET



// ======================================================================= \\
STATIC FUNCTION ACUMUL(_NQTD, _CSTS) 
// ======================================================================= \\
//LOCAL _NQTD
//LOCAL _CSTS

//TRABALHOU EM OBRA, SERVIÇO INTERNO / EXTERNO, NO PÁTIO OU JUSTIFICOU (AUMENTA UM DIA TRABALHADO)
IF     _CSTS $  "000004|000005|000006|00007|000008|" 
	_NQTD++
//FOLGOU (DIMINUI 18 DIAS TRABALHADOS. OBS: A CADA 90 DIAS TRABALHADOS O FUNCIONÁRIO TEM DIREITO A 5 DIAS DE FOLGA, OU SEJA A CADA 18 DIAS TRABALHADOS 1 É FOLGA)
ELSEIF _CSTS == "000009"
	_NQTD += 18
ELSEIF _CSTS == "000002"
	_NQTD -= 18
ENDIF

RETURN _NQTD



// ======================================================================= \\
FUNCTION LOCA05309(POPC)
// ======================================================================= \\
// BOTÕES DE INTEGRAÇÃO, CÓPIA E GERAÇÃO
LOCAL NOPC		:= POPC
LOCAL ARTO 		:= ACLONE(AROTINA)	//GUARDO A ROTINA ORIGINAL
LOCAL PO_PAR01	:= MV_PAR01
LOCAL PO_PAR02	:= MV_PAR02
LOCAL PO_PAR03	:= MV_PAR03
LOCAL PO_PAR04	:= MV_PAR04
LOCAL CCADORI	:= CCADASTRO
LOCAL LVALMVULM := .F. //GETMV("MV_LOCX086")//GETMV("MV_LOCX086",.F.,1) == 1

IF LVALMVULM
	IF DDATABASE <= IIF(FINDFUNCTION("MVULMES"),MVULMES(),GETMV("MV_ULMES"))
		HELP(" ",1,"MV_ULMES")
		RETURN .F.
	ENDIF
ENDIF

AFIELDSI := {}
AADD(AFIELDSI,{"RA_OKTRANS","C",OEMTOANSI("   ")        })
AADD(AFIELDSI,{"RA_FILIAL" ,"C",OEMTOANSI(STR0012)   }) //"FIL. MAT"
AADD(AFIELDSI,{"RA_MAT"    ,"C",OEMTOANSI(STR0046)  }) //"MATRÍCULA"
AADD(AFIELDSI,{"RA_NOME"   ,"C",OEMTOANSI(STR0016)}) //"FUNCIONÁRIO"
AADD(AFIELDSI,{"RA_CODFUNC","C",OEMTOANSI(STR0017)     }) //"CÓDIGO"
AADD(AFIELDSI,{"RA_DESCFUN","C",OEMTOANSI(STR0018)     }) //"FUNÇÃO"
AADD(AFIELDSI,{"RA_DSHEET" ,"C",OEMTOANSI(STR0019)  }) //"ACUMULADO"

ACAMPI := {}
ATAM := TAMSX3("RA_OKTRANS")
AADD(ACAMPI , {"RA_OKTRANS" ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("RA_FILIAL")
AADD(ACAMPI , {"RA_FILIAL"  ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("RA_MAT")
AADD(ACAMPI , {"RA_MAT"     ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("RA_NOME")
AADD(ACAMPI , {"RA_NOME"    ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("RA_CODFUNC")
AADD(ACAMPI , {"RA_CODFUNC" ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("RA_DESCFUN")
AADD(ACAMPI , {"RA_DESCFUN" ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("RA_DSHEET")
AADD(ACAMPI , {"RA_DSHEET"  ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_STATUS")
AADD(ACAMPI , {"FPQ_STATUS" ,ATAM[3],ATAM[1],ATAM[2]} )
//ATAM := TAMSX3("FPQ_DSTS")
//AADD(ACAMPI , {"FPQ_DSTS"   ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_VT")
AADD(ACAMPI , {"FPQ_VT"     ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_HORAS")
AADD(ACAMPI , {"FPQ_HORAS"  ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_AS")
AADD(ACAMPI , {"FPQ_AS"     ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_PROJET")
AADD(ACAMPI , {"FPQ_PROJET" ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_OBRA")
AADD(ACAMPI , {"FPQ_OBRA"   ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_DESC")  
AADD(ACAMPI , {"FPQ_DESC"   ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("RA_DEMISSA")
AADD(ACAMPI , {"RA_DEMISSA" ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_HRINI")
AADD(ACAMPI , {"FPQ_HRINI"  ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_HRFIN")
AADD(ACAMPI , {"FPQ_HRFIN"  ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_XHINIR")
AADD(ACAMPI , {"FPQ_XHINIR" ,ATAM[3],ATAM[1],ATAM[2]} )
ATAM := TAMSX3("FPQ_XHFIMR")
AADD(ACAMPI , {"FPQ_XHFIMR" ,ATAM[3],ATAM[1],ATAM[2]} )

// --> CRIA ARQUIVO DE TRABALHO.
//CNOMARQI := CRIATRAB(ACAMPI)

IF (SELECT("INT") <> 0)
	DBSELECTAREA("INT")
	DBCLOSEAREA()
ENDIF 
//DBUSEAREA(.T.,,CNOMARQI,"INT",NIL,.F.)
//INDREGUA("INT",CNOMARQI,"RA_FILIAL + RA_MAT",,,"SELECIONANDO REGISTROS...")

CT53B  := "T53B"+SUBSTR(TIME(),1,2)+SUBSTR(TIME(),4,2)+SUBSTR(TIME(),7,2)
CTI53B := "TI53B"+SUBSTR(TIME(),1,2)+SUBSTR(TIME(),4,2)+SUBSTR(TIME(),7,2)
IF TCCANOPEN(CT53B)
   	TCDELFILE(CT53B)
ENDIF
DBCREATE(CT53B, ACAMPI, "TOPCONN")
DBUSEAREA(.T., "TOPCONN", CT53B, ("INT"), .F., .F.)
DBCREATEINDEX(CTI53B, "RA_FILIAL + RA_MAT"         , {|| RA_FILIAL + RA_MAT         })
INT->( DBCLEARINDEX() ) //FORÇA O FECHAMENTO DOS INDICES ABERTOS
DBSETINDEX(CTI53B) //ACRESCENTA A ORDEM DE INDICE PARA A ÁREA ABERTA

DBSELECTAREA("INT")
CMARCA    := GETMARK()

DO CASE
CASE NOPC == 1	// INTEGRAÇÃO
	/*
	MV_PAR01 = PERÍODO DE
	MV_PAR02 = PERÍODO ATÉ
	MV_PAR03 = HORA INICIO
	MV_PAR04 = HORA FIM
	MV_PAR05 = NRO. A.S.
	MV_PAR06 = QUANTIDADE DE HORAS DIÁRIAS GASTA NA INTEGRAÇÃO
	*/
	AMV_PAR := VALPARAM(2)
	IF LEN(AMV_PAR) > 0 
		MV_PAR01  := AMV_PAR[1]
		MV_PAR02  := AMV_PAR[2]
		MV_PAR03  := AMV_PAR[3]
		MV_PAR04  := AMV_PAR[4]	
		MV_PAR04  := AMV_PAR[5]	
		MV_PAR04  := AMV_PAR[6]	
	ELSE
		// RETORNO CAMPOS ORIGINAIS
		AROTINA   := ACLONE(ARTO)
		CCADASTRO := CCADORI
		MV_PAR01  := PO_PAR01
		MV_PAR02  := PO_PAR02
		MV_PAR03  := PO_PAR03
		MV_PAR04  := PO_PAR04

		INT->(DBCLOSEAREA())
		//FERASE( CNOMARQI + ".DBF" )
		//FERASE( CNOMARQI + ORDBAGEXT() )

		TCSQLEXEC("DROP TABLE "+CT53B)
		TCSQLEXEC("DROP TABLE "+CTI53B)

		// RETORNO PARA ÁREA TEMPORÁRIA
		DBSELECTAREA("TRB")
		DBGOTOP()

		RETURN
	ENDIF

	_CQUERY := " SELECT SRA.RA_OKTRANS, SRA.RA_FILIAL, SRA.RA_MAT   , SRA.RA_NOME, SRA.RA_CODFUNC, SRA.RA_TSHEET, "
	_CQUERY += "        SRA.RA_DSHEET , SRA.RA_CC    , SRJ.RJ_FUNCAO, SRJ.RJ_DESC, SRA.RA_DEMISSA  "
	_CQUERY += " FROM   " + RETSQLNAME("SRA") + " SRA "
	_CQUERY += " INNER JOIN " + RETSQLNAME("SRJ") + " SRJ ON SRJ.D_E_L_E_T_ = '' AND SRA.RA_FILIAL  = SRJ.RJ_FILIAL AND SRA.RA_CODFUNC = SRJ.RJ_FUNCAO "
	_CQUERY += " WHERE  SRA.D_E_L_E_T_ = '' AND "
	_CQUERY += "       SRA.RA_TSHEET = 'S' " 
	_CQUERY += "       AND ((SRA.RA_DEMISSA  BETWEEN  '"+DTOS(_DTATVI)+"' AND '"+DTOS(_DTATVF)+"' ) OR SRA.RA_DEMISSA = '' ) "  // NAO MOSTRA DEMITIDOS 
	_CQUERY += " ORDER BY SRA.RA_FILIAL, SRA.RA_MAT, SRA.RA_NOME, SRA.RA_CODFUNC "
	_CQUERY := CHANGEQUERY(_CQUERY)	
	MEMOWRIT("C:\A\LOCT053.TXT",_CQUERY)
	TCQUERY _CQUERY NEW ALIAS "QRY"

	TCSETFIELD("QRY","RA_DEMISSA","D",8,0)
		
	DBSELECTAREA('QRY')
	DBGOTOP()
	WHILE QRY->(!EOF()) 
		// POSSUI PERMISSÃO PARA ACESSO AO CENTRO DE CUSTO ESPECÍFICO OU O 
		// CENTRO DE CUSTO INICIA COM "BR" E O USUÁRIO POSSUI PERMISSÃO PARA ACESSO AOS SERVIÇOS IGUAIS AO DO PROJETO NO COMERCIAL
		IF ALLTRIM(QRY->RA_CC) $ _CCC .OR. ; 
		   (SUBSTR(QRY->RA_CC,1,2) == "BR" .AND. POSICIONE("FP0",1,XFILIAL("FP0")+ALLTRIM(QRY->RA_CC),"ZA0_TIPOSE") $ _CTPSERV) .OR. ; 
		   "ALL" $ UPPER(ALLTRIM(_CCC+_CTPSERV))			
			
			DBSELECTAREA("INT") 
			RECLOCK("INT",.T.) 
			INT->RA_OKTRANS := "   "
			INT->RA_FILIAL  := QRY->RA_FILIAL
			INT->RA_MAT     := QRY->RA_MAT
			INT->RA_NOME	:= QRY->RA_NOME
			INT->RA_CODFUNC	:= QRY->RA_CODFUNC
			INT->RA_DSHEET 	:= QRY->RA_DSHEET   
			INT->RA_DESCFUN	:= QRY->RJ_DESC		   
			INT->RA_DEMISSA := QRY->RA_DEMISSA
			MSUNLOCK("INT")
		ENDIF
		QRY->(DBSKIP())
	ENDDO

	DBSELECTAREA("QRY") 		// FECHA ALIAS
	QRY->(DBCLOSEAREA())  		// FECHA ALIAS

	AROTINA := {}
	AADD(AROTINA,{STR0056       , "LOCA05310(1)",0,1} )	//"PESQUISAR"												// PESQUISAR UM FUNCIONÁRIO
	AADD(AROTINA,{STR0047 , "LOCA05310(2)",0,2} )													// INVERTE SELEÇÃO //"INVERTE SELEÇÃO"
	AADD(AROTINA,{STR0048 , ; //"GERA INTEGRAÇÃO"
	"LOCA05310(3, MV_PAR01, MV_PAR02, MV_PAR03, MV_PAR04, '000005', 'N', MV_PAR05, MV_PAR06, NIL)",0,3} ) 	// GERAR OS LANÇAMENTOS DE INTEGRAÇÃO NO ZLO

	CDELFUNC  := ".T."
	CCADASTRO := OEMTOANSI(STR0049) //"SELECIONE OS FUNCIONÁRIOS - <ENTER> MARCA/DESMARCA"

	DBSELECTAREA("INT")
	INT->(DBGOTOP()) 
                
	MARKBROW("INT","RA_OKTRANS" ,,AFIELDSI,,CMARCA)

	INT->(DBCLOSEAREA())

	//FERASE( CNOMARQI + ".DBF" )
	//FERASE( CNOMARQI + ORDBAGEXT() )

	TCSQLEXEC("DROP TABLE "+CT53B)
	TCSQLEXEC("DROP TABLE "+CTI53B)

CASE NOPC == 2	// CÓPIA AS
	/*
	MV_PAR01 = DATA DE ORIGEM
	MV_PAR02 = NRO. A.S.
	MV_PAR03 = DATA INICIAL A SER GERADA
	MV_PAR04 = DATA FINAL   A SER GERADA
	*/
	// CRIA PERGUNTAS SE NÃO EXISTIR
	AMV_PAR := VALPARAM(3)
	IF LEN(AMV_PAR) > 0
	   MV_PAR01   := AMV_PAR[1]
	   MV_PAR02   := AMV_PAR[2]
	   MV_PAR03   := AMV_PAR[3]
	   MV_PAR04   := AMV_PAR[4]
	ELSE
		// RETORNO CAMPOS ORIGINAIS
		AROTINA   := ACLONE(ARTO)
		CCADASTRO := CCADORI
		MV_PAR01  := PO_PAR01
		MV_PAR02  := PO_PAR02

		INT->(DBCLOSEAREA())
		//FERASE( CNOMARQI + ".DBF" )
		//FERASE( CNOMARQI + ORDBAGEXT() )

		TCSQLEXEC("DROP TABLE "+CT53B)
		TCSQLEXEC("DROP TABLE "+CTI53B)

		// RETORNO PARA ÁREA TEMPORÁRIA
		DBSELECTAREA("TRB")
		DBGOTOP()

		RETURN
	ENDIF

	_CQUERY := "SELECT DISTINCT SRA.RA_MAT,    SRA.RA_OKTRANS, SRA.RA_FILIAL,  SRA.RA_NOME , SRA.RA_CODFUNC, SRA.RA_TSHEET, "
	_CQUERY += "                SRA.RA_DSHEET, SRA.RA_CC     , SRJ.RJ_FUNCAO,  SRJ.RJ_DESC , ZLO.FPQ_STATUS, ZLO.FPQ_VT   , "
	_CQUERY += "                ZLO.FPQ_HORAS, ZLO.FPQ_PROJET, ZLO.FPQ_OBRA ,  ZLO.FPQ_DESC, SRA.RA_DEMISSA, ZLO.FPQ_HRINI, "
	_CQUERY += "                ZLO.FPQ_HRFIN, ZLO.FPQ_XHINIR, ZLO.FPQ_XHFIMR "
	_CQUERY += "FROM   " + RETSQLNAME("SRA") + " SRA INNER JOIN "
	_CQUERY +=             RETSQLNAME("FPQ") + " ZLO ON "
	_CQUERY += "       ZLO.D_E_L_E_T_ = '' AND "
	_CQUERY += "       SRA.RA_MAT = ZLO.FPQ_MAT AND "
	_CQUERY += "       ZLO.FPQ_DATA = '" + DTOS(MV_PAR01) + "' AND "
	_CQUERY += "       ZLO.FPQ_AS = '" + MV_PAR02 + "' INNER JOIN "
	_CQUERY +=             RETSQLNAME("SRJ") + " SRJ ON "
	_CQUERY += "       SRJ.D_E_L_E_T_ = '' AND "
	_CQUERY += "       SRA.RA_CODFUNC = SRJ.RJ_FUNCAO "
	_CQUERY += "WHERE  SRA.D_E_L_E_T_ = '' AND "
	_CQUERY += "       SRA.RA_FILIAL = '" + _CFILATU + "' AND "
	_CQUERY += "       SRA.RA_TSHEET = 'S' "                                           
	_CQUERY += "       AND ((SRA.RA_DEMISSA  BETWEEN  '"+DTOS(_DTATVI)+"' AND '"+DTOS(_DTATVF)+"' ) OR SRA.RA_DEMISSA = '' ) "  // NAO MOSTRA DEMITIDOS 
	_CQUERY := CHANGEQUERY(_CQUERY)
	TCQUERY _CQUERY NEW ALIAS "QRY"

	TCSETFIELD("QRY","RA_DEMISSA","D",8,0) 

	DBSELECTAREA("QRY")
	DBGOTOP()

	WHILE QRY->(!EOF()) 
		//POSSUI PERMISSÃO PARA ACESSO AO CENTRO DE CUSTO ESPECÍFICO OU O 
		//CENTRO DE CUSTO INICIA COM "BR" E O USUÁRIO POSSUI PERMISSÃO PARA ACESSO AOS SERVIÇOS IGUAIS AO DO PROJETO NO COMERCIAL
		IF ALLTRIM(QRY->RA_CC) $ _CCC .OR. ;
		   (SUBSTR(QRY->RA_CC,1,2) == "BR" .AND. POSICIONE("FP0",1,XFILIAL("FP0")+ALLTRIM(QRY->RA_CC),"ZA0_TIPOSE") $ _CTPSERV) .OR. ;
		   "ALL" $ UPPER(ALLTRIM(_CCC+_CTPSERV))
				
			DBSELECTAREA("INT")
			RECLOCK("INT",.T.)
			INT->RA_OKTRANS := CMARCA
			INT->RA_FILIAL  := QRY->RA_FILIAL
			INT->RA_MAT     := QRY->RA_MAT
			INT->RA_NOME	:= QRY->RA_NOME
			INT->RA_CODFUNC	:= QRY->RA_CODFUNC
			INT->RA_DSHEET 	:= QRY->RA_DSHEET   
			INT->RA_DESCFUN	:= QRY->RJ_DESC		   
			INT->FPQ_STATUS	:= QRY->FPQ_STATUS
			//INT->FPQ_DSTS	:= POSICIONE("SX5", 1, XFILIAL("SX5") + "75" + QRY->FPQ_STATUS, "X5_DESCRI" )
			INT->FPQ_VT		:= QRY->FPQ_VT
			INT->FPQ_HORAS	:= QRY->FPQ_HORAS
			INT->FPQ_PROJET	:= QRY->FPQ_PROJET
			INT->FPQ_OBRA	:= QRY->FPQ_OBRA
			INT->FPQ_DESC	:= QRY->FPQ_DESC
			INT->RA_DEMISSA := QRY->RA_DEMISSA
			INT->FPQ_HRINI  := QRY->FPQ_HRINI
			INT->FPQ_HRFIN  := QRY->FPQ_HRFIN
			INT->FPQ_XHINIR := QRY->FPQ_XHINIR
			INT->FPQ_XHFIMR := QRY->FPQ_XHFIMR
			MSUNLOCK("INT")
		ENDIF
		QRY->(DBSKIP())
	ENDDO

	DBSELECTAREA("QRY") 	// FECHA ALIAS
	QRY->(DBCLOSEAREA())  	// FECHA ALIAS

	AROTINA := {}
	AADD(AROTINA,{STR0050       , "LOCA05310(1)",0,1} )					// PESQUISAR UM FUNCIONÁRIO //"PESQUISAR"
	AADD(AROTINA,{STR0047 , "LOCA05310(2)",0,2} )					// INVERTE SELEÇÃO //"INVERTE SELEÇÃO"
	AADD(AROTINA,{STR0051        , ; //"COPIA AS"
	"LOCA05310(4, MV_PAR03, MV_PAR04, NIL, NIL, NIL, NIL, MV_PAR02, NIL, NIL)",0,3} )	// COPIA OS LANÇAMENTOS DE UM DIA / AS PARA UM PERÍODO

	CDELFUNC  := ".T."
	CCADASTRO := OEMTOANSI(STR0049) //"SELECIONE OS FUNCIONÁRIOS - <ENTER> MARCA/DESMARCA"

	DBSELECTAREA("INT")
	INT->(DBGOTOP()) 
                
	MARKBROW("INT","RA_OKTRANS" ,,AFIELDSI,,CMARCA)

	INT->(DBCLOSEAREA())
	//FERASE( CNOMARQI + ".DBF" )
	//FERASE( CNOMARQI + ORDBAGEXT() )

	TCSQLEXEC("DROP TABLE "+CT53B)
	TCSQLEXEC("DROP TABLE "+CTI53B)

CASE NOPC == 3	// COPIA PROJETO
	/*
	MV_PAR01 = DATA DE ORIGEM
	MV_PAR02 = NRO. PROJETO
	MV_PAR03 = DATA INICIAL A SER GERADA
	MV_PAR04 = DATA FINAL   A SER GERADA
	*/
	AMV_PAR := VALPARAM(4)
	IF LEN(AMV_PAR) > 0
	   MV_PAR01 := AMV_PAR[1]
	   MV_PAR02 := AMV_PAR[2]
	   MV_PAR03 := AMV_PAR[3]
	   MV_PAR04 := AMV_PAR[4]
	ELSE
		// RETORNO CAMPOS ORIGINAIS
		AROTINA 	:= ACLONE(ARTO)
		CCADASTRO	:= CCADORI
		MV_PAR01	:= PO_PAR01
		MV_PAR02	:= PO_PAR02
		INT->(DBCLOSEAREA())

		//FERASE( CNOMARQI + ".DBF" )
		//FERASE( CNOMARQI + ORDBAGEXT() )
		TCSQLEXEC("DROP TABLE "+CT53B)
		TCSQLEXEC("DROP TABLE "+CTI53B)

		// RETORNO PARA ÁREA TEMPORÁRIA
		DBSELECTAREA("TRB")
		DBGOTOP()

		RETURN
	ENDIF

	_CQUERY := "SELECT DISTINCT SRA.RA_MAT, SRA.RA_OKTRANS  , SRA.RA_FILIAL , SRA.RA_NOME , SRA.RA_CODFUNC, SRA.RA_TSHEET, "
	_CQUERY += "                SRA.RA_DSHEET, SRA.RA_CC    , SRJ.RJ_FUNCAO , SRJ.RJ_DESC , ZLO.FPQ_STATUS, ZLO.FPQ_VT, "
	_CQUERY += "                ZLO.FPQ_HORAS, ZLO.FPQ_AS   , ZLO.FPQ_PROJET, ZLO.FPQ_OBRA, ZLO.FPQ_DESC  , SRA.RA_DEMISSA, "
	_CQUERY += "                ZLO.FPQ_HRINI, ZLO.FPQ_HRFIN, ZLO.FPQ_XHINIR, ZLO.FPQ_XHFIMR "
	_CQUERY += "FROM   " + RETSQLNAME("SRA") + " SRA INNER JOIN "
	_CQUERY +=             RETSQLNAME("FPQ") + " ZLO ON "
	_CQUERY += "       ZLO.D_E_L_E_T_ = '' AND "
	_CQUERY += "       SRA.RA_MAT = ZLO.FPQ_MAT AND "
	_CQUERY += "       ZLO.FPQ_DATA = '" + DTOS(MV_PAR01) + "' AND "
	_CQUERY += "       ZLO.FPQ_PROJET = '" + MV_PAR02 + "' INNER JOIN "
	_CQUERY +=             RETSQLNAME("SRJ") + " SRJ ON "
	_CQUERY += "       SRJ.D_E_L_E_T_ = '' AND "
	_CQUERY += "       SRA.RA_CODFUNC = SRJ.RJ_FUNCAO "
	_CQUERY += "WHERE  SRA.D_E_L_E_T_ = '' AND "
	_CQUERY += "       SRA.RA_FILIAL = '" + _CFILATU + "' AND "
	_CQUERY += "       SRA.RA_TSHEET = 'S' "
	_CQUERY += "       AND ((SRA.RA_DEMISSA  BETWEEN  '"+DTOS(_DTATVI)+"' AND '"+DTOS(_DTATVF)+"' ) OR SRA.RA_DEMISSA = '' ) "  // NAO MOSTRA DEMITIDOS 
	_CQUERY := CHANGEQUERY(_CQUERY)	
 //	MEMOWRIT("L:\SYSTEMPROA\LOCT053.TXT",_CQUERY)
	TCQUERY _CQUERY NEW ALIAS "QRY"

    TCSETFIELD("QRY","RA_DEMISSA","D",8,0)
		
	DBSELECTAREA("QRY")
	DBGOTOP()

	WHILE QRY->(!EOF()) 
		//POSSUI PERMISSÃO PARA ACESSO AO CENTRO DE CUSTO ESPECÍFICO OU O 
		//CENTRO DE CUSTO INICIA COM "BR" E O USUÁRIO POSSUI PERMISSÃO PARA ACESSO AOS SERVIÇOS IGUAIS AO DO PROJETO NO COMERCIAL
		IF ALLTRIM(QRY->RA_CC) $ _CCC .OR. ;
		   (SUBSTR(QRY->RA_CC,1,2) == "BR" .AND. POSICIONE("FP0",1,XFILIAL("FP0")+ALLTRIM(QRY->RA_CC),"ZA0_TIPOSE") $ _CTPSERV) .OR. ;
		   "ALL" $ UPPER(ALLTRIM(_CCC+_CTPSERV))
			
			DBSELECTAREA("INT")
			RECLOCK("INT",.T.)
			INT->RA_OKTRANS := CMARCA
			INT->RA_FILIAL  := QRY->RA_FILIAL
			INT->RA_MAT     := QRY->RA_MAT
			INT->RA_NOME	:= QRY->RA_NOME
			INT->RA_CODFUNC	:= QRY->RA_CODFUNC
			INT->RA_DSHEET 	:= QRY->RA_DSHEET   
			INT->RA_DESCFUN	:= QRY->RJ_DESC		   
			INT->FPQ_STATUS	:= QRY->FPQ_STATUS
			//INT->FPQ_DSTS	:= POSICIONE("SX5", 1, XFILIAL("SX5") + "75" + QRY->FPQ_STATUS, "X5_DESCRI" )
			INT->FPQ_VT		:= QRY->FPQ_VT
			INT->FPQ_HORAS	:= QRY->FPQ_HORAS
			INT->FPQ_AS    	:= QRY->FPQ_AS    
			INT->FPQ_PROJET	:= QRY->FPQ_PROJET
			INT->FPQ_OBRA	:= QRY->FPQ_OBRA
			INT->FPQ_DESC	:= QRY->FPQ_DESC
			INT->RA_DEMISSA := QRY->RA_DEMISSA
			INT->FPQ_HRINI  := QRY->FPQ_HRINI
			INT->FPQ_HRFIN  := QRY->FPQ_HRFIN
			INT->FPQ_XHINIR := QRY->FPQ_XHINIR
			INT->FPQ_XHFIMR := QRY->FPQ_XHFIMR			
			MSUNLOCK("INT")
		ENDIF
		QRY->(DBSKIP())
	ENDDO

	DBSELECTAREA("QRY") 	// FECHA ALIAS
	QRY->(DBCLOSEAREA())  	// FECHA ALIAS

	AROTINA := {}
	AADD(AROTINA,{STR0056       , "LOCA05310(1)",0,1} ) //"PESQUISAR"					// PESQUISAR UM FUNCIONÁRIO
	AADD(AROTINA,{STR0057 , "LOCA05310(2)",0,2} )					// INVERTE SELEÇÃO
	AADD(AROTINA,{STR0058   , ; //"Cópia projeto"
	"LOCA05310(5, MV_PAR03, MV_PAR04, NIL, NIL, NIL, NIL, NIL, NIL, MV_PAR02)",0,3} )	// COPIA OS LANÇAMENTOS DE UM DIA / PROJETO PARA UM PERÍODO

	CDELFUNC  := ".T."
	CCADASTRO := OEMTOANSI(STR0059) // "SELECIONE OS FUNCIONÁRIOS - <ENTER> MARCA/DESMARCA"

	DBSELECTAREA("INT")
	INT->(DBGOTOP()) 
                
	MARKBROW("INT","RA_OKTRANS" ,,AFIELDSI,,CMARCA)

	INT->(DBCLOSEAREA())
	//FERASE( CNOMARQI + ".DBF" )
	//FERASE( CNOMARQI + ORDBAGEXT() )
	TCSQLEXEC("DROP TABLE "+CT53B)
	TCSQLEXEC("DROP TABLE "+CTI53B)

CASE NOPC == 4	// GERAÇÃO
	/*
	MV_PAR01 = PERÍODO DE
	MV_PAR02 = PERÍODO ATÉ
	MV_PAR03 = STATUS
	MV_PAR04 = NRO. A.S.
	*/
	// CRIA PERGUNTAS SE NÃO EXISTIR
	AMV_PAR := VALPARAM(5)
	IF LEN(AMV_PAR) > 0
	   MV_PAR01 := AMV_PAR[1]
	   MV_PAR02 := AMV_PAR[2]
	   MV_PAR03 := AMV_PAR[3]
	   MV_PAR04 := AMV_PAR[4]
	   MV_PAR05 := AMV_PAR[5]
	   MV_PAR06 := AMV_PAR[6]
	ELSE
		// RETORNO CAMPOS ORIGINAIS
		AROTINA 	:= ACLONE(ARTO)
		CCADASTRO	:= CCADORI
		MV_PAR01	:= PO_PAR01
		MV_PAR02	:= PO_PAR02

		INT->(DBCLOSEAREA())
		//FERASE( CNOMARQI + ".DBF" )
		//FERASE( CNOMARQI + ORDBAGEXT() )
		TCSQLEXEC("DROP TABLE "+CT53B)
		TCSQLEXEC("DROP TABLE "+CTI53B)

		// RETORNO PARA ÁREA TEMPORÁRIA
		DBSELECTAREA("TRB")
		DBGOTOP()

		RETURN
	ENDIF

	IF ALLTRIM(MV_PAR03) == '000004' .AND. EMPTY(MV_PAR04)
		MSGALERT(STR0060,STR0061) //"O STATUS OBRA PRECISA TER UMA AS INFORMADA!"###"CONSISTENCIA"
		// RETORNO PARA ÁREA TEMPORÁRIA
		DBSELECTAREA("TRB")
		DBGOTOP()
		RETURN
	ENDIF

	_CQUERY := " SELECT SRA.RA_OKTRANS, SRA.RA_FILIAL, SRA.RA_MAT   , SRA.RA_NOME, SRA.RA_CODFUNC, SRA.RA_TSHEET, "
	_CQUERY += "        SRA.RA_DSHEET , SRA.RA_CC    , SRJ.RJ_FUNCAO, SRJ.RJ_DESC, SRA.RA_DEMISSA  "
	_CQUERY += " FROM   " + RETSQLNAME("SRA") + " SRA "
	_CQUERY += " INNER JOIN " + RETSQLNAME("SRJ") + " SRJ ON SRJ.D_E_L_E_T_ = '' AND SRA.RA_FILIAL  = SRJ.RJ_FILIAL AND SRA.RA_CODFUNC = SRJ.RJ_FUNCAO "
	_CQUERY += " WHERE  SRA.D_E_L_E_T_ = '' AND "
	_CQUERY += "       SRA.RA_TSHEET = 'S' " 
	_CQUERY += "       AND ((SRA.RA_DEMISSA  BETWEEN  '"+DTOS(_DTATVI)+"' AND '"+DTOS(_DTATVF)+"' ) OR SRA.RA_DEMISSA = '' ) "  // NAO MOSTRA DEMITIDOS 
	_CQUERY += " ORDER BY SRA.RA_FILIAL, SRA.RA_MAT "
	_CQUERY := CHANGEQUERY(_CQUERY)
	TCQUERY _CQUERY NEW ALIAS "QRY"

 	TCSETFIELD("QRY","RA_DEMISSA","D",8,0)
		
	DBSELECTAREA('QRY')
	DBGOTOP()
	WHILE QRY->(!EOF()) 
		//POSSUI PERMISSÃO PARA ACESSO AO CENTRO DE CUSTO ESPECÍFICO OU O 
		//CENTRO DE CUSTO INICIA COM "BR" E O USUÁRIO POSSUI PERMISSÃO PARA ACESSO AOS SERVIÇOS IGUAIS AO DO PROJETO NO COMERCIAL
		IF ALLTRIM(QRY->RA_CC) $ _CCC .OR. ;
		   (SUBSTR(QRY->RA_CC,1,2) == "BR" .AND. POSICIONE("FP0",1,XFILIAL("FP0")+ALLTRIM(QRY->RA_CC),"ZA0_TIPOSE") $ _CTPSERV) .OR. ; 
		   "ALL" $ UPPER(ALLTRIM(_CCC+_CTPSERV))
//		IF ALLTRIM(QRY->RA_FILIAL) $ _CCC
			DBSELECTAREA("INT")
			RECLOCK("INT",.T.)
			INT->RA_OKTRANS := "   "
			INT->RA_FILIAL  := QRY->RA_FILIAL
			INT->RA_MAT     := QRY->RA_MAT
			INT->RA_NOME	:= QRY->RA_NOME
			INT->RA_CODFUNC	:= QRY->RA_CODFUNC
			INT->RA_DSHEET 	:= QRY->RA_DSHEET   
			INT->RA_DESCFUN	:= QRY->RJ_DESC
			INT->RA_DEMISSA := QRY->RA_DEMISSA		   
			MSUNLOCK("INT")
		ENDIF
		QRY->(DBSKIP())
	ENDDO

	DBSELECTAREA("QRY") 		// FECHA ALIAS
	DBCLOSEAREA() 				// FECHA ALIAS

	AROTINA := {}
	AADD(AROTINA,{STR0062       , "LOCA05310(1)",0,1} )	//"PESQUISAR"						// PESQUISAR UM FUNCIONÁRIO
	AADD(AROTINA,{STR0063 , "LOCA05310(2)",0,2} )	//"INVERTE SELEÇÃO"						// INVERTE SELEÇÃO
	AADD(AROTINA,{STR0064         , ;                     //"GERAÇÃO"
	"LOCA05310(3, MV_PAR01, MV_PAR02, MV_PAR03, MV_PAR04, MV_PAR05, 'N', MV_PAR06, 0, NIL)",0,3} )		// GERAR OS LANÇAMENTOS DE INTEGRAÇÃO NO ZLO

	CDELFUNC  := ".T."
	CCADASTRO := OEMTOANSI(STR0065)

	DBSELECTAREA("INT")
	INT->(DBGOTOP()) 
                
	MARKBROW("INT","RA_OKTRANS" ,,AFIELDSI,,CMARCA)

	INT->(DBCLOSEAREA())
	//FERASE( CNOMARQI + ".DBF" )
	//FERASE( CNOMARQI + ORDBAGEXT() )

	TCSQLEXEC("DROP TABLE "+CT53B)
	TCSQLEXEC("DROP TABLE "+CTI53B)

ENDCASE

// RETORNO CAMPOS ORIGINAIS
AROTINA 	:= ACLONE(ARTO)
CCADASTRO	:= CCADORI
//MV_PAR01	:= PO_PAR01
//MV_PAR02	:= PO_PAR02
PERGUNTE(CPERG,.F.)

// RETORNO PARA ÁREA TEMPORÁRIA
DBSELECTAREA("TRB")
DBGOTOP()

RETURN 



// ======================================================================= \\
FUNCTION LOCA05310(POPC, _PPERINI, _PPERFIM, _PHRINI, _PHRFIM, _PSTATUS, _PVT, _PAS, _PHORAS, _PPROJET)
// ======================================================================= \\

PROCESSA( {||FINTE2X(POPC, _PPERINI, _PPERFIM, _PHRINI, _PHRFIM, _PSTATUS, _PVT, _PAS, _PHORAS, _PPROJET)}, STR0066 ,STR0067,.F.) //"PROCESSANDO"###"AGUARDE FINALIZAÇÃO..."

RETURN .T.                                                                                          



// ======================================================================= \\
STATIC FUNCTION FINTE2X(POPC, _PPERINI, _PPERFIM, _PHRINI, _PHRFIM, _PSTATUS, _PVT, _PAS, _PHORAS, _PPROJET)
// ======================================================================= \\

LOCAL NOPC	 := POPC  
LOCAL NPASSO := 0                                  
LOCAL _F     := 0 
LOCAL _LOK   := .T.

PROCREGUA(0)

DO CASE
CASE NOPC == 1	// PESQUISAR FUNCIONÁRIO
CASE NOPC == 2	// INVERTE SELEÇÃO
	NREG := 0
	DBSELECTAREA("INT")
	NREG := RECNO()
	DBGOTOP()
	WHILE !EOF()
		INCPROC(3)
		IF INT->RA_OKTRANS <> CMARCA
			RECLOCK("INT",.F.)
			INT->RA_OKTRANS := CMARCA
			MSUNLOCK("INT")
		ELSE
			RECLOCK("INT",.F.)
			INT->RA_OKTRANS := ''
			MSUNLOCK("INT")
		ENDIF
		DBSELECTAREA("INT")
		DBSKIP()
	ENDDO
	DBSELECTAREA("INT") 
	DBGOTO(NREG)

CASE NOPC == 3	// GERA INTEGRAÇÃO
	// PRIMEIRO VERIFICO SE FOI ESCOLHIDO TODOS CASO NAO TENHA NENHUM PRENCHIDO JA MARCO AUTOMATICAMENTE
	NREG := 0

	DBSELECTAREA("INT")
	NREG := RECNO()
	DBGOTOP()
	WHILE !EOF()
		INCPROC(3)
		IF INT->RA_OKTRANS = CMARCA
			NPASSO++
		ENDIF
		DBSELECTAREA("INT")
		DBSKIP()
	ENDDO
	DBSELECTAREA("INT") 
	DBGOTO(NREG)
	IF NPASSO = 0  
		NREG := 0
		DBSELECTAREA("INT")
		NREG := RECNO()
		DBGOTOP()
		WHILE !EOF()
			INCPROC(3)
			IF INT->RA_OKTRANS <> CMARCA
				RECLOCK('INT',.F.)
				INT->RA_OKTRANS := CMARCA
				MSUNLOCK("INT")
			ELSE
				RECLOCK('INT',.F.)
				INT->RA_OKTRANS := ''
				MSUNLOCK("INT")
			ENDIF
			DBSELECTAREA("INT")
			DBSKIP()
		ENDDO
		DBSELECTAREA("INT") 
		DBGOTO(NREG)
	ENDIF
	// FIM DA TRATATIVA
	M->FPQ_FILIAL     := XFILIAL("FPQ")
	M->FPQ_STATUS     := _PSTATUS
	//M->FPQ_DSTS	      := POSICIONE("SX5", 1, XFILIAL("SX5") + "75" + _PSTATUS, "X5_DESCRI" )
	M->FPQ_VT         := _PVT
	M->FPQ_AS         := _PAS
	// BUSCO OS CAMPOS DE PROJETO / OBRA E CLIENTE
	FQ5->(DBSETORDER(9))
	IF FQ5->(DBSEEK(XFILIAL("FQ5")+M->FPQ_AS))
		M->FPQ_PROJET := FQ5->FQ5_SOT
		M->FPQ_OBRA   := FQ5->FQ5_OBRA
		M->FPQ_DESC   := FQ5->FQ5_NOMCLI
	ELSE
		M->FPQ_PROJET := ""
		M->FPQ_OBRA   := ""
		M->FPQ_DESC   := ""
	ENDIF
	M->FPQ_OBS        := STR0068 //"LANCAMENTO GERADO AUTOMATICAMENTE"
	M->FPQ_HORAS      := _PHORAS

	DBSELECTAREA("INT")
	NREG := RECNO()
	DBGOTOP()
	WHILE !EOF()
		INCPROC(3)
		IF INT->RA_OKTRANS == CMARCA	// GRAVO A INTEGRAÇÃO DO FUNCIONÁRIOS NO PERÍODO INFORMADO
			FOR _F := 0 TO _PPERFIM-_PPERINI
				M->FPQ_FILIAL := INT->RA_FILIAL
				M->FPQ_FILMAT := INT->RA_FILIAL
				M->FPQ_MAT	:= INT->RA_MAT 
				M->FPQ_DATA := (_PPERINI + _F) 
				M->FPQ_HRINI  := _PHRINI
				M->FPQ_HRFIN  := _PHRFIM
				M->FPQ_XHINIR := _PHRINI
				M->FPQ_XHFIMR := _PHRFIM
				// TRATAMENTO DOS DEMITIDOS
				IF EMPTY(INT->RA_DEMISSA)  .OR.  M->FPQ_DATA <= INT->RA_DEMISSAO
					// G R A V O 
				  _LOK := LOCA05311(M->FPQ_FILIAL, M->FPQ_FILMAT, M->FPQ_MAT, M->FPQ_DATA, M->FPQ_STATUS, M->FPQ_VT, M->FPQ_AS, M->FPQ_PROJET, M->FPQ_OBRA, M->FPQ_DESC, M->FPQ_OBS, M->FPQ_HORAS, M->FPQ_HRINI, M->FPQ_HRFIN, M->FPQ_XHINIR, M->FPQ_XHFIMR)
				ENDIF 
			NEXT _F
		ENDIF
		DBSELECTAREA('INT')
		DBSKIP()
	ENDDO   
	
	// ELE NAO TRAZ A MARCA NA TABELA INT FOI FORÇADO QUANDO CLICAR PARA IMPRIMIR TODOS//
	NREG := 0
	DBSELECTAREA('INT')
	NREG := RECNO()
	DBGOTOP()
	WHILE !EOF()
		INCPROC(3)
		IF INT->RA_OKTRANS <> CMARCA
			RECLOCK('INT',.F.)
			INT->RA_OKTRANS := CMARCA
			MSUNLOCK("INT")
		ELSE
			RECLOCK('INT',.F.)
			INT->RA_OKTRANS := ''
			MSUNLOCK("INT")
		ENDIF
		DBSELECTAREA('INT')
		DBSKIP()
	ENDDO
	DBSELECTAREA('INT') 
	DBGOTO(NREG)
	IF _LOK	
		MSGINFO(STR0069 + ALLTRIM(_PSTATUS) + STR0070 + CHR(13) + CHR(10) + ; //"LANÇAMENTOS DO STATUS "###" GERADOS CORRETAMENTE."
				 STR0071 + DTOC(_PPERINI) + STR0072 + DTOC(_PPERFIM) + ".") //"LANÇAMENTOS GERADOS NO PERÍODO DE "###" A "
	ENDIF 
			 
CASE NOPC == 4	// COPIO AS
	M->FPQ_FILIAL	:= XFILIAL("FPQ")
	M->FPQ_AS    	:= _PAS
	M->FPQ_OBS		:= STR0073 //"LANCAMENTO COPIADO DA AS AUTOMATICAMENTE"
	DBSELECTAREA('INT')
	NREG := RECNO()
	DBGOTOP()
	WHILE !EOF()
		INCPROC(3)
		IF INT->RA_OKTRANS == CMARCA	// GRAVO A CÓPIA DO FUNCIONÁRIOS NO PERÍODO INFORMADO
			FOR _F := 0 TO _PPERFIM-_PPERINI
				M->FPQ_FILIAL	:= INT->RA_FILIAL
				M->FPQ_FILMAT	:= INT->RA_FILIAL
				M->FPQ_MAT		:= INT->RA_MAT
				M->FPQ_STATUS	:= INT->FPQ_STATUS
				M->FPQ_PROJET 	:= INT->FPQ_PROJET
				M->FPQ_OBRA		:= INT->FPQ_OBRA
				M->FPQ_DESC		:= INT->FPQ_DESC
				M->FPQ_VT		:= INT->FPQ_VT
				M->FPQ_HORAS	:= INT->FPQ_HORAS
				M->FPQ_DATA 	:= (_PPERINI + _F)
			    M->FPQ_HRINI    := INT->FPQ_HRINI   
			    M->FPQ_HRFIN    := INT->FPQ_HRFIN   
			    M->FPQ_XHINIR   := INT->FPQ_XHINIR  
			    M->FPQ_XHFIMR   := INT->FPQ_XHFIMR  
				IF EMPTY(INT->RA_DEMISSA) .OR. M->FPQ_DATA <= INT->RA_DEMISSAO
					// G R A V O 
				  _LOK := LOCA05311(M->FPQ_FILIAL, M->FPQ_FILMAT, M->FPQ_MAT, M->FPQ_DATA, M->FPQ_STATUS, M->FPQ_VT, M->FPQ_AS, M->FPQ_PROJET, M->FPQ_OBRA, M->FPQ_DESC, M->FPQ_OBS, M->FPQ_HORAS, M->FPQ_HRINI, M->FPQ_HRFIN, M->FPQ_XHINIR, M->FPQ_XHFIMR)
			    ENDIF 
			NEXT _F 
		ENDIF 

		DBSELECTAREA('INT')
		DBSKIP()
	ENDDO
	DBSELECTAREA('INT') ; DBGOTO(NREG)
	IF _LOK
		MSGINFO(STR0074 + ALLTRIM(_PAS) + STR0075 + CHR(13) + CHR(10) + ; //"CÓPIA DOS LANÇAMENTOS DA AS "###" GERADOS CORRETAMENTE."
				 STR0076 + DTOC(_PPERINI) + STR0077 + DTOC(_PPERFIM) + ".") //"LANÇAMENTOS GERADOS NO PERÍODO DE "###" A "
	ENDIF

CASE NOPC == 5	// COPIO PROJETO
	M->FPQ_FILIAL	:= XFILIAL("FPQ")
	M->FPQ_OBS		:= STR0078 //"LANCAMENTO COPIADO DO PROJETO AUTOMATICAMENTE"
	DBSELECTAREA('INT')
	NREG := RECNO()
	DBGOTOP()
	WHILE !EOF()
		INCPROC(3)
		IF INT->RA_OKTRANS == CMARCA	// GRAVO A CÓPIA DO FUNCIONÁRIOS NO PERÍODO INFORMADO
			FOR _F := 0 TO _PPERFIM-_PPERINI
				M->FPQ_FILIAL	:= INT->RA_FILIAL
				M->FPQ_FILMAT	:= INT->RA_FILIAL
				M->FPQ_MAT		:= INT->RA_MAT
				M->FPQ_STATUS	:= INT->FPQ_STATUS
				M->FPQ_AS    	:= INT->FPQ_AS
				M->FPQ_PROJET 	:= INT->FPQ_PROJET
				M->FPQ_OBRA		:= INT->FPQ_OBRA
				M->FPQ_DESC		:= INT->FPQ_DESC
				M->FPQ_VT		:= INT->FPQ_VT
				M->FPQ_HORAS	:= INT->FPQ_HORAS
				M->FPQ_DATA 	:= (_PPERINI + _F)
			    M->FPQ_HRINI    := INT->FPQ_HRINI   
			    M->FPQ_HRFIN    := INT->FPQ_HRFIN   
			    M->FPQ_XHINIR   := INT->FPQ_XHINIR  
			    M->FPQ_XHFIMR   := INT->FPQ_XHFIMR 
				IF EMPTY(INT->RA_DEMISSA) .OR.   M->FPQ_DATA <= INT->RA_DEMISSAO
					// G R A V O 
					_LOK := LOCA05311(M->FPQ_FILIAL, M->FPQ_FILMAT, M->FPQ_MAT, M->FPQ_DATA, M->FPQ_STATUS, M->FPQ_VT, M->FPQ_AS, M->FPQ_PROJET, M->FPQ_OBRA, M->FPQ_DESC, M->FPQ_OBS, M->FPQ_HORAS, M->FPQ_HRINI, M->FPQ_HRFIN, M->FPQ_XHINIR, M->FPQ_XHFIMR)
				ENDIF
			NEXT _F
		ENDIF

		DBSELECTAREA('INT')
		DBSKIP()
	ENDDO
	DBSELECTAREA('INT') 
	DBGOTO(NREG)

	IF _LOK
		MSGINFO(STR0079 + ALLTRIM(_PPROJET) + STR0080 + CHR(13) + CHR(10) + ; //"CÓPIA DOS LANÇAMENTOS DO PROJETO "###" GERADOS CORRETAMENTE."
				 STR0081 + DTOC(_PPERINI) + STR0082 + DTOC(_PPERFIM) + ".") //"LANÇAMENTOS GERADOS NO PERÍODO DE "###" A "
	ENDIF 
ENDCASE                                              

SLEEP(2000)
SYSREFRESH()

RETURN .T.



// ======================================================================= \\
FUNCTION LOCA05311(_PFILIAL, _PFILMAT , _PMAT, _PDATA, _PSTATUS, _PVT, _PAS, _PPROJET, _POBRA, _PDESC, _POBS, _PHORAS, _PHRINI, _PHRFIM, _PXHINIR, _PXHFIMR)
// ======================================================================= \\

//LOCAL _PFILIAL
//LOCAL _PFILMAT
//LOCAL _PMAT
//LOCAL _PDATA
//LOCAL _PSTATUS
//LOCAL _PVT
//LOCAL _PAS
//LOCAL _PPROJET
//LOCAL _POBRA
//LOCAL _PDESC
//LOCAL _POBS
//LOCAL _PHORAS
//LOCAL _PHRINI
//LOCAL _PHRFIM
//LOCAL _PXHINIR
//LOCAL _PXHFIMR
LOCAL _LFLAG := .T.				
LOCAL _PNOME := POSICIONE("SRA",1,_PFILMAT + _PMAT, "RA_NOME")
Local _MV_FOLMES := GETMV("MV_FOLMES",,"")

// VERIFICO SE JÁ EXISTE ALGUM LANÇAMENTO NO DIA
FPQ->(DBSETORDER(2))
IF FPQ->(DBSEEK(_PFILMAT + _PMAT + _PFILMAT + DTOS(_PDATA)))

	WHILE FPQ->(!EOF()) .AND. FPQ->FPQ_FILIAL == _PFILMAT .AND. FPQ->FPQ_MAT  == _PMAT .AND. ;
                             FPQ->FPQ_FILMAT == _PFILMAT .AND. FPQ->FPQ_DATA == _PDATA 
		IF (_PHRINI <  FPQ->FPQ_HRINI .AND. _PHRFIM >  FPQ->FPQ_HRINI) .OR. (_PHRINI <  FPQ->FPQ_HRFIN .AND. _PHRFIM >  FPQ->FPQ_HRFIN) .OR.; 
		   (_PHRINI <  FPQ->FPQ_HRINI .AND. _PHRFIM >  FPQ->FPQ_HRFIN) .OR. (_PHRINI >  FPQ->FPQ_HRINI .AND. _PHRFIM <  FPQ->FPQ_HRFIN) .OR.;
		   (_PHRINI <> FPQ->FPQ_HRINI .AND. _PHRFIM == FPQ->FPQ_HRFIN) .OR. (_PHRINI == FPQ->FPQ_HRINI .AND. _PHRFIM <> FPQ->FPQ_HRFIN) .OR.;		   		   
		   (_PHRINI == FPQ->FPQ_HRINI .AND. _PHRFIM == FPQ->FPQ_HRFIN) 
			IF MSGYESNO(STR0083 + ALLTRIM(_PFILMAT) + "/" + ALLTRIM(_PMAT) + " - " + ALLTRIM(_PNOME) + ; //"JÁ EXISTE UM LANÇAMENTO PARA O FUNCIONÁRIO "
						STR0084 + DTOC(_PDATA) + " - " + ALLTRIM(FPQ->FPQ_HRINI) + STR0085 + ALLTRIM(FPQ->FPQ_HRFIN) + STR0086 , STR0087) //" NA DATA "###" ATÉ "###", DESEJA SOBREPOR ? "###"GPO - LOCT053.PRW"
						
				IF FPQ->FPQ_TIPINC == "M"
					// ATUAL. TODOS OS FLAGS E STATUS POR CAUSA DA EXCLUSÃO
					// ATUAL. NÚMERO DE DIAS ACUMULADOS NO SRA
					_NACUME := (ACUMUL(0, FPQ->FPQ_STATUS)) * (-1)	//INVERTER O ACUMULADO
			
					IF SRA->(DBSEEK(FPQ->FPQ_FILMAT + FPQ->FPQ_MAT))
						IF SRA->RA_FOLGA == "S"	// TRATA O ACUMULADO DE DIAS PARA PAGAR A FOLGA DO FUNCIONÁRIO
							RECLOCK("SRA",.F.)
							SRA->RA_DSHEET := SRA->RA_DSHEET + (_NACUME)
							MSUNLOCK()     
			
							//ATUAL. NÚMERO DE DIAS ACUMULADOS NO ARQUIVO TEMPORÁRIO
							IF TRB->(DBSEEK(SRA->RA_NOME))
								RECLOCK("TRB",.F.)
								TRB->RA_DSHEET := TRB->RA_DSHEET + (_NACUME)
								MSUNLOCK() 
							ENDIF
							RECLOCK("INT",.F.)
							INT->RA_DSHEET := INT->RA_DSHEET + (_NACUME)
							MSUNLOCK() 
						ENDIF    
					ENDIF
			
					//ATUAL. O STATUS DO DIA ATUAL NO ARQUIVO TEMPORÁRIO 
					IF FPQ->FPQ_DATA == DDATABASE .AND. TRB->(DBSEEK(SRA->RA_NOME)) 
						RECLOCK("TRB",.F.) 
						TRB->FPQ_STATUS:= SPACE(LEN(FPQ->FPQ_STATUS)) 
						MSUNLOCK() 
					ENDIF 
	                
					// EXCLUO O REGISTRO JÁ EXISTENTE
					// BEGIN - TRAVAR ALTERAÇÕES SE A FOLHA ESTIVER FECHADA
					CPERIODO := CVALTOCHAR(YEAR(FPQ->FPQ_DATA)) + STRZERO(MONTH(FPQ->FPQ_DATA),2)
					IF _MV_FOLMES <= CPERIODO    
						RECLOCK('FPQ',.F.)
						FPQ->(DBDELETE())
						MSUNLOCK('FPQ')
					ELSE 
						MSGALERT(STR0088 , STR0087) //"EXCLUSÃO NÃO PERMITIDO FOLHA DE PAGAMENTO JÁ FECHADA"###"GPO - LOCT053.PRW"
						_LFLAG := .F.
					ENDIF 
					// END   - BIALE`TRAVAR ALTERAÇÕES SE A FOLHA ESTIVER FECHADA  
				ELSE
					MSGALERT(STR0089 , STR0087) //"Não é possível sobrepor um registro que foi gerado automaticamente através de outra rotina."###"Rental"
					_LFLAG := .F.
				ENDIF								
			ELSE
				MSGALERT(STR0090 + ALLTRIM(_PFILMAT) + "/" + ALLTRIM(_PMAT) + " - " + ALLTRIM(_PNOME) + ; //"NÃO FOI GERADO O LANÇAMENTO PARA O FUNCIONÁRIO "
						 STR0091 + DTOC(_PDATA) + " - " + ALLTRIM(_PHRINI) + STR0092 + ALLTRIM(_PHRFIM) + STR0093 , STR0087) //" NA DATA "###" ATÉ "###", FAVOR VERIFICAR SUA INFORMAÇÃO! "###"GPO - LOCT053.PRW"
						_LFLAG := .F.
			ENDIF
		ENDIF
		FPQ->(DBSKIP())
	ENDDO

ENDIF
				
IF _LFLAG
	// BEGIN - TRAVAR ALTERAÇÕES SE A FOLHA ESTIVER FECHADA
	CPERIODO := CVALTOCHAR(YEAR(DATE())) + STRZERO(MONTH(DATE()),2)    
	IF _MV_FOLMES <= CPERIODO    
		RECLOCK("FPQ",.T.)
		FPQ->FPQ_FILIAL := _PFILMAT
		FPQ->FPQ_FILMAT	:= _PFILMAT
		FPQ->FPQ_MAT	:= _PMAT
		FPQ->FPQ_DATA	:= _PDATA
		FPQ->FPQ_HRINI	:= _PHRINI
		FPQ->FPQ_HRFIN  := _PHRFIM 
		FPQ->FPQ_AGENDA	:= "2"
		FPQ->FPQ_STATUS	:= _PSTATUS
		//FPQ->FPQ_DSTS	:= POSICIONE("SX5", 1, XFILIAL("SX5") + "75" + _PSTATUS, "X5_DESCRI" )
		FPQ->FPQ_VT		:= _PVT
		FPQ->FPQ_AS		:= _PAS
		FPQ->FPQ_PROJET	:= _PPROJET
		FPQ->FPQ_OBRA	:= _POBRA
		FPQ->FPQ_DESC	:= _PDESC
		FPQ->FPQ_HORAS	:= _PHORAS
		FPQ->FPQ_OBS	:= _POBS
		FPQ->FPQ_TIPINC	:= "M"
		FPQ->FPQ_XHINIR	:= _PXHINIR
		FPQ->FPQ_XHFIMR := _PXHFIMR 
		MSUNLOCK('FPQ')

		_NACUMN := (ACUMUL(0, _PSTATUS))
		IF SRA->(DBSEEK(_PFILMAT + _PMAT))
			IF SRA->RA_FOLGA == "S"	// TRATA O ACUMULADO DE DIAS PARA PAGAR A FOLGA DO FUNCIONÁRIO
				RECLOCK("SRA",.F.)
				SRA->RA_DSHEET := SRA->RA_DSHEET + (_NACUMN)
				MSUNLOCK()     
				IF TRB->(DBSEEK(SRA->RA_NOME))
					RECLOCK("TRB",.F.)
					TRB->RA_DSHEET := TRB->RA_DSHEET + (_NACUMN)
					MSUNLOCK()     
				ENDIF
				RECLOCK("INT",.F.)
				INT->RA_DSHEET := INT->RA_DSHEET + (_NACUMN)
				MSUNLOCK()     
			ENDIF
		ENDIF

		TRB->(DBGOTOP())
		_NREGX := 0
		WHILE !TRB->(EOF())
			IF TRB->RA_NOME == SRA->RA_NOME
				_NREGX := TRB->(RECNO())
				EXIT
			ENDIF
			TRB->(DBSKIP())
		ENDDO

		IF _PDATA == DDATABASE .AND. _NREGX > 0
			RECLOCK("TRB",.F.)
			TRB->FPQ_STATUS:= _PSTATUS
			MSUNLOCK()     
		ENDIF
	ELSE 
		MSGALERT(STR0094 , STR0087) //"INCLUSÃO NÃO PERMITIDA FOLHA DE PAGAMENTO JÁ FECHADA"###"GPO - LOCT053.PRW"
		_LFLAG := .F.
	ENDIF
	// END   - TRAVAR ALTERAÇÕES SE A FOLHA ESTIVER FECHADA							
ENDIF

RETURN _LFLAG 



/*
+------------+-----------+--------+--------------------+-------+------------+
| PROGRAMA:  | VALPARAM  | AUTOR: | IT UP BUSINESS     | DATA: | JUNHO/19   |
+------------+-----------+--------+--------------------+-------+------------+
| DESCRIÇÃO: | FUNÇÃO QUE MONTA O PARAMBOX                                  |
+------------+--------------------------------------------------------------+
| USO:       | ESPECIFICO GPO                                     		    |
+------------+--------------------------------------------------------------+
*/ 
STATIC FUNCTION VALPARAM(NTIPO)

LOCAL APARAMBOX := {}
LOCAL ARET 		:= {}  
LOCAL CDTINI    := CTOD("")  
LOCAL CDTFIM    := CTOD("")  

PRIVATE LCANCEL := .F.
    
DEFAULT NTIPO   := 1
    
IF     NTIPO == 1
    // PARAMETROS INICIAIS.. 
	AADD(APARAMBOX,{1,STR0095        , CDTINI    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO DE "
	AADD(APARAMBOX,{1,STR0096        , CDTFIM    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO ATÉ"
 //	AADD(APARAMBOX,{2,"ALERTA SOBRE VT "   , 1         , {"SIM", "NÃO"}    , 50                    , ""     , .T.           }) // COMBO 
	
ELSEIF NTIPO == 2
    // PARAMETROS INICIAIS.. 
	AADD(APARAMBOX,{1,STR0095        , CDTINI    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO DE "
	AADD(APARAMBOX,{1,STR0096        , CDTFIM    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO ATÉ"
	AADD(APARAMBOX,{1,STR0097        , SPACE(05) , "@E 99:99"        , "ATVLDHORA(MV_PAR03)" , ""     , ""  , 30 , .T.}) // "HORA INICIO"
	AADD(APARAMBOX,{1,STR0098           , SPACE(05) , "@E 99:99"        , "ATVLDHORA(MV_PAR04)" , ""     , ""  , 30 , .T.}) // "HORA FIM"
	AADD(APARAMBOX,{1,STR0099              , SPACE(27) , "@!"              , ""                    , "DTQA" , ""  , 80 , .T.}) // "Nº AS"
	AADD(APARAMBOX,{1,STR0100 , SPACE(02) , "99"              , ""                    , ""     , ""  , 20 , .T.}) // "QTD HRS INTEGRAÇÃO"

ELSEIF NTIPO == 3
    // PARAMETROS INICIAIS.. 
	AADD(APARAMBOX,{1,STR0101        , CDTFIM    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "DATA ORIGEM"
	AADD(APARAMBOX,{1,STR0099              , SPACE(27) , "@!"              , "NAOVAZIO()"          , "DTQA" , ""  , 80 , .T.}) // "Nº AS"
	AADD(APARAMBOX,{1,STR0095        , CDTINI    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO DE "
	AADD(APARAMBOX,{1,STR0096        , CDTFIM    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO ATÉ"

ELSEIF NTIPO == 4
    // PARAMETROS INICIAIS.. 
	AADD(APARAMBOX,{1,STR0101        , CDTFIM    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "DATA ORIGEM"
	AADD(APARAMBOX,{1,STR0102         , SPACE(22) , "@!"              , "NAOVAZIO()"          , "FP0"  , ""  , 80 , .T.}) // "Nº PROJETO"
	AADD(APARAMBOX,{1,STR0095        , CDTINI    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO DE "
	AADD(APARAMBOX,{1,STR0096        , CDTFIM    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO ATÉ"

ELSEIF NTIPO == 5
    // PARAMETROS INICIAIS.. 
	AADD(APARAMBOX,{1,STR0095        , CDTINI    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO DE "
	AADD(APARAMBOX,{1,STR0096        , CDTFIM    , "@E XX/XX/XXXX"   , ""                    , ""     , ""  , 50 , .T.}) // "PERÍODO ATÉ"
	AADD(APARAMBOX,{1,STR0097        , SPACE(05) , "@E 99:99"        , "ATVLDHORA(MV_PAR03)" , ""     , ""  , 30 , .T.}) // "HORA INICIO"
	AADD(APARAMBOX,{1,STR0098           , SPACE(05) , "@E 99:99"        , "ATVLDHORA(MV_PAR04)" , ""     , ""  , 30 , .T.}) // "HORA FIM"
	AADD(APARAMBOX,{1,STR0103             , SPACE(06) , "@E 999999"       , "EXISTCPO('SX5','75' + MV_PAR05).AND. TRIM(MV_PAR05) != '000005'","75"     ,""  ,20, .T.}) // "STATUS"
	AADD(APARAMBOX,{1,STR0099              , SPACE(27) , "@!"              , "LOCA05308(MV_PAR06,.F.,TRIM(MV_PAR05)=='000004')" ,"DTQAS" ,""  ,80, .F.}) // "Nº AS"

ENDIF    

IF PARAMBOX(APARAMBOX,STR0104,@ARET,,,,,,,,.F.)       			//"PARÂMETROS"
	IF NTIPO == 2
		IF VALTYPE(ARET[6]) == "C"
			ARET[6] := VAL(ARET[6])
		ENDIF
	ENDIF 
ENDIF

RETURN ARET   



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ DELZLO    º AUTOR ³ IT UP BUSINESS     º DATA ³ 29/08/2019 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ VALIDA E EXECUTA A DELEÇÃO DA ZLO                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA05312()  		// VALIDA DELEÇÃO DA ZLO

LOCAL _LRET := .T.

IF EXISTBLOCK("LC53DZLO") 		// PONTO DE ENTRADA PARA VALIDAÇÕES ADICIONAIS NA DELEÇÃO DAS LINHAS DA ZLO
   _LRET := EXECBLOCK("LC53DZLO",.T.,.T.,{ODLGLO})
ENDIF

ODLGLO:OBROWSE:REFRESH()

RETURN _LRET



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFUNO    ³ VALIDPERG º AUTOR ³ IT UP BUSINESS     º DATA ³ 30/06/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRIO ³ VERIFICA A EXISTENCIA DAS PERGUNTAS CRIANDO-AS CASO SEJA   º±±
±±º          ³ NECESSARIO (CASO NAO EXISTAM).                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ PROGRAMA PRINCIPAL                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
// --> NÃO EXISTE CHAMADA DA FUNÇÃO !
/*
STATIC FUNCTION VALIDPERG(POPC , PPERG)

LOCAL NOPC    := POPC
LOCAL CPERG   := PADR(PPERG,10)
LOCAL _SALIAS := ALIAS()
LOCAL AREGS   := {}
LOCAL I,J

DBSELECTAREA("SX1")
DBSETORDER(1)

DO CASE
CASE NOPC == 1 // PERGUNTAS DO PRIMEIRO BROWSE DE FUNCIONÁRIOS
	// GRUPO/ORDEM/PERGUNTA/VARIAVEL/TIPO/TAMANHO/DECIMAL/PRESEL/GSC/VALID/VAR01/DEF01/CNT01/VAR02/DEF02/CNT02/VAR03/DEF03/CNT03/VAR04/DEF04/CNT04/VAR05/DEF05/CNT05
	AADD(AREGS,{CPERG,"01","PERÍODO DE ?"          ,"PERÍODO DE ?"         ,"PERÍODO DE ?"         ,"MV_CH1" ,"D",8,0,0,"G","","MV_PAR01","","","","","","","","","","","","","",""})
	AADD(AREGS,{CPERG,"02","PERÍODO ATÉ ?"         ,"PERÍODO ATÉ ?"        ,"PERÍODO ATÉ ?"        ,"MV_CH2" ,"D",8,0,0,"G","","MV_PAR02","","","","","","","","","","","","","",""})
	AADD(AREGS,{CPERG,"03","ALERTA SOBRE VT ?"     ,"ALERA SOBRE VT ?"     ,"ALERTA SOBRE VT ?"    ,"MV_CH3" ,"N",1,0,1,"C","","MV_PAR03","SIM","SIM","SIM","","","NÃO","NÃO","NÃO","","","","","",""})
CASE NOPC == 2 // PERGUNTAS DO BOTÃO DE INTEGRAÇÃO
	//          GRUPO/ORDEM/PERGUNTA                                                            /VARIAVEL /TIPO/TAMANHO/DECIMAL/PRESEL/GSC/VALID          /VAR01     /DEF01/DEF01/DEF01/CNT01/VAR02/DEF02/DEF02/DEF02/CNT02/VAR03/DEF03/DEF03/DEF03/CNT03/VAR04/DEF04/DEF04/DEF04/CNT04/VAR05/DEF05/DEF05/DEF05/CNT05/F3    /PYME/SXG/HELP/PICTURE/IDFIL
	AADD(AREGS,{CPERG,"01" ,"PERÍODO DE ?"         ,"PERÍODO DE ?"         ,"PERÍODO DE ?"         ,"MV_CH1" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR01",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"02" ,"PERÍODO ATÉ ?"        ,"PERÍODO ATÉ ?"        ,"PERÍODO ATÉ ?"        ,"MV_CH2" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR02",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"03" ,"NRO. DA A.S. ?"       ,"NRO. DA A.S. ?"       ,"NRO. DA A.S. ?"       ,"MV_CH3" ,"C" ,27     ,0      ,0     ,"G",""             ,"MV_PAR03",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,"DTQA","S"  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"04" ,"QTD HRS INTEGRAÇÃO ?" ,"QTD HRS INTEGRAÇÃO ?" ,"QTD HRS INTEGRAÇÃO ?" ,"MV_CH4" ,"N" ,02     ,0      ,0     ,"G",""             ,"MV_PAR04",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
CASE NOPC == 3 // PERGUNTAS DO BOTÃO DE CÓPIA POR AS
	AADD(AREGS,{CPERG,"01" ,"DATA DE ORIGEM ?"     ,"DATA DE ORIGEM ?"     ,"DATA DE ORIGEM ?"     ,"MV_CH1" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR01",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"02" ,"NRO. DA A.S. ?"       ,"NRO. DA A.S. ?"       ,"NRO. DA A.S. ?"       ,"MV_CH2" ,"C" ,27     ,0      ,0     ,"G","NAOVAZIO()"   ,"MV_PAR03",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,"DTQA","S"  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"03" ,"PERÍODO GERAÇÃO DE ?" ,"PERÍODO GERAÇÃO DE ?" ,"PERÍODO GERAÇÃO DE ?" ,"MV_CH3" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR02",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"04" ,"PERÍODO GERAÇÃO ATÉ ?","PERÍODO GERAÇÃO ATÉ ?","PERÍODO GERAÇÃO ATÉ ?","MV_CH4" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR02",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
CASE NOPC == 4 // PERGUNTAS DO BOTÃO DE CÓPIA POR PROJETO
	AADD(AREGS,{CPERG,"01" ,"DATA DE ORIGEM ?"     ,"DATA DE ORIGEM ?"     ,"DATA DE ORIGEM ?"     ,"MV_CH1" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR01",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"02" ,"NRO. DO PROJETO ?"    ,"NRO. DO PROJETO ?"    ,"NRO. DO PROJETO ?"    ,"MV_CH2" ,"C" ,22     ,0      ,0     ,"G","NAOVAZIO()"   ,"MV_PAR03",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,"FP0","S"  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"03" ,"PERÍODO GERAÇÃO DE ?" ,"PERÍODO GERAÇÃO DE ?" ,"PERÍODO GERAÇÃO DE ?" ,"MV_CH3" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR02",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"04" ,"PERÍODO GERAÇÃO ATÉ ?","PERÍODO GERAÇÃO ATÉ ?","PERÍODO GERAÇÃO ATÉ ?","MV_CH4" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR02",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
CASE NOPC == 5 // PERGUNTAS DO BOTÃO DE GERAÇÃO
	AADD(AREGS,{CPERG,"01" ,"PERÍODO DE ?"         ,"PERÍODO DE ?"         ,"PERÍODO DE ?"         ,"MV_CH1" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR01",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"02" ,"PERÍODO ATÉ ?"        ,"PERÍODO ATÉ ?"        ,"PERÍODO ATÉ ?"        ,"MV_CH2" ,"D" ,08     ,0      ,0     ,"G",""             ,"MV_PAR02",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""    ,""  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"03" ,"STATUS ?"             ,"STATUS ?"             ,"STATUS ?"             ,"MV_CH3" ,"C" ,06     ,0      ,0     ,"G","EXISTCPO('SX5','75'+MV_PAR03).AND.TRIM(MV_PAR03)!='000005'"   ,"MV_PAR03",""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,"75"  ,"S"  ,"" ,""  ,""     ,""})
	AADD(AREGS,{CPERG,"04" ,"NRO. DA A.S. ?"       ,"NRO. DA A.S. ?"       ,"NRO. DA A.S. ?"       ,"MV_CH4" ,"C" ,27     ,0      ,0     ,"G","LOCA05308(MV_PAR04,.F.,TRIM(MV_PAR03)=='000004')"             ,"MV_PAR04"    ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,""   ,"DTQAS","S"  ,"" ,""  ,""     ,""})
ENDCASE

FOR I:=1 TO LEN(AREGS)
    IF !DBSEEK(CPERG+AREGS[I,2])
        RECLOCK("SX1",.T.)
        FOR J:=1 TO FCOUNT()
            IF J <= LEN(AREGS[I])
                FIELDPUT(J,AREGS[I,J])
            ENDIF
        NEXT J 
        MSUNLOCK()
    ENDIF 
NEXT I 

DBSELECTAREA(_SALIAS)

RETURN
*/
