#INCLUDE "loca039.ch" 
/*/{PROTHEUS.DOC} LOCA039.PRW
ITUP BUSINESS - TOTVS RENTAL
ESTORNO DE VALE
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/
#INCLUDE "PROTHEUS.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "TOPCONN.CH"

FUNCTION LOCA039()
LOCAL LRET		  := .T.
LOCAL _CABANCO	  := ""
LOCAL _CAAGENCIA  := ""
LOCAL _CANUMCON	  := ""
LOCAL _CBANCO	  := ""
LOCAL _CAGENCIA	  := ""
LOCAL _CNUMCON	  := ""

PRIVATE _DDTTB	  := DDATABASE
PRIVATE CXOPTBAN  := PADR(LOCA04502(1),LEN(SA6->A6_COD))			// C”DIGO DO BANCO DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE CXOPTAG   := PADR(LOCA04502(2),LEN(SA6->A6_AGENCIA))		// C”DIGO DA AG NCIA DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE CXOPTCC   := PADR(LOCA04502(3),LEN(SA6->A6_NUMCON))		// C”DIGO DA C/C DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE CXOPGBAN  := PADR(LOCA04502(4),LEN(SA6->A6_COD)) 		// C”DIGO DO BANCO DO CAIXA OPERACIONAL GUINDASTE
PRIVATE CXOPGAG   := PADR(LOCA04502(5),LEN(SA6->A6_AGENCIA))		// C”DIGO DA AG NCIA DO CAIXA OPERACIONAL GUINDASTE
PRIVATE CXOPGCC   := PADR(LOCA04502(6),LEN(SA6->A6_NUMCON))		// C”DIGO DA C/C DO CAIXA OPERACIONAL GUINDASTE
PRIVATE _CTIPOTB  := PADR(LOCA04502(15),LEN(SE1->E1_MOEDA))		// TIPO DA MOEDA NA TRANSFER NCIA "TB"
PRIVATE CFILIAL	  := XFILIAL("SE2") 							// REMENDO POIS NA FINA340 EST¡ DECLARADO NIL 

IF LOCA04416()
	IF CHKESTOR() 
		IF MSGYESNO(STR0001 + FPH->FPH_NRVALE + " ?" , STR0002)  //"CONFIRMA O ESTORNO DO VALE NR. "###"GPO - LOCF113.PRW"
			// BUSCO O FORNECEDOR DO MOTORISTA
			DA4->(DBSETORDER(1))
			DA4->(DBSEEK(XFILIAL("DA4") + FPH->FPH_MOTORI,.F.))
			
			SA2->(DBSETORDER(1))
			IF !SA2->(DBSEEK(XFILIAL("SA2")+ DA4->DA4_FORNEC + DA4->DA4_LOJA,.F.))
				MSGSTOP(STR0003 + ALLTRIM(SA2->A2_COD) + "/"  + ALLTRIM(SA2->A2_LOJA) + "-" + ALLTRIM(SA2->A2_NOME) + STR0004 + FPH->FPH_MOTORI + STR0005 , STR0002)  //"FORNECEDOR "###", VINCULADO AO MOTORISTA "###", N√O ENCONTRADO !!!, VERIFIQUE O CADASTRO DO MOTORISTA."###"GPO - LOCF113.PRW"
				LRET := .F.
			ENDIF
			
			// CAMPOS PADR’ES
			CPREFIXO := "ADT"
			CNUM     := LEFT(FPH->FPH_NRVALE+SPACE(10) , LEN(SE1->E1_NUM))
			CPARCELA := ""
			CTIPO    := "PA"
			CFORNECE := SA2->A2_COD
			CLOJA    := SA2->A2_LOJA
			CHIST    := STR0006 //"ESTORNO DE TRANSFERENCIA."
			
			CCHAVE := XFILIAL("SE2")+CPREFIXO+CNUM+PADR(CPARCELA,3)+CTIPO+CFORNECE+CLOJA
		ELSE
			LRET := .F.
		ENDIF
	ELSE
		LRET := .F.
	ENDIF
ELSE
	LRET := .F.
ENDIF

// ESTORNA O TÕTULO DO FINANCEIRO
IF LRET
	SE2->(DBSETORDER(1))
	SE2->(DBSEEK(XFILIAL("SE2") + CPREFIXO + CNUM + PADR(CPARCELA,3) + CTIPO + CFORNECE + CLOJA))
	ASE2 		:= {}

	_CABANCO 	:= _CBANCO
	_CAAGENCIA 	:= _CAGENCIA
	_CANUMCON	:= _CNUMCON

	_CBANCO	 	:= IIF(FPH->FPH_TIPAD=="1",CXOPGBAN,CXOPTBAN)
	_CAGENCIA 	:= IIF(FPH->FPH_TIPAD=="1",CXOPGAG ,CXOPTAG )
	_CNUMCON  	:= IIF(FPH->FPH_TIPAD=="1",CXOPGCC ,CXOPTCC )
	
	// PREENCHE O ARRAY
	AADD(ASE2,{"E2_FILIAL" , XFILIAL("SE2")		, NIL})
	AADD(ASE2,{"E2_PREFIXO", CPREFIXO			, NIL})
	AADD(ASE2,{"E2_NUM"    , CNUM				, NIL})
	AADD(ASE2,{"E2_PARCELA", PADR(CPARCELA,TAMSX3("E2_PARCELA")[1])	, NIL})//AADD(ASE2,{"E2_PARCELA", PADR(CPARCELA,1)	, NIL})
	AADD(ASE2,{"E2_TIPO"   , PADR(CTIPO,TAMSX3("E2_TIPO")[1])		, NIL})//AADD(ASE2,{"E2_TIPO"   , PADR(CTIPO,3)		, NIL})
	AADD(ASE2,{"E2_FORNECE", CFORNECE			, NIL})
	AADD(ASE2,{"E2_LOJA"   , CLOJA			  	, NIL})
 //	AADD(ASE2,{"AUTBANCO"  , _CBANCO            , NIL})
 //	AADD(ASE2,{"AUTAGENCIA", _CAGENCIA          , NIL})
 //	AADD(ASE2,{"AUTCONTA"  , _CNUMCON           , NIL})
	
	// VARIAVEIS MENSAGEM DE ERRO
	LMSERROAUTO := .F.
	LMSHELPAUTO := .T.
	
	// EXCLUI CONTAS A PAGAR
	MSEXECAUTO( { |X,Y,Z| FINA050(X,Y,Z)}, ASE2  ,,5)
	
	//CONTROLA MENSAGEM DE ERRO
	IF LMSERROAUTO
		LRET := .F.
		MOSTRAERRO()
		MSGALERT(STR0007 + ALLTRIM(FPH->FPH_NRVALE) + STR0008 , STR0002) //"N√O FOI POSSIVEL ESTORNAR O TITULO PARA O VALE "###". INFORME O TI"###"GPO - LOCF113.PRW"

	ELSEIF FPH->FPH_MODFOR == "2"		// DEP”SITO
		IF SELECT("TRB1") > 0
			DBSELECTAREA("TRB1")
			DBCLOSEAREA()
		ENDIF

		// Removido por Frank, pois nao tempos mais esta funcionalidade de usar o SE5 e estava dando 
		// debitos tecnicos por usar a SE5 em 06/04/2022

		/*
		CQUERY := " SELECT  SE5.R_E_C_N_O_ AS _NREGSE5 "
		CQUERY += " FROM  "+RETSQLNAME("SE5")+" SE5 "
		CQUERY += " WHERE   SE5.D_E_L_E_T_  = ''                  "
		CQUERY +=   " AND ((SE5.E5_DOCUMEN LIKE '%ADT"+ALLTRIM(FPH->FPH_NRVALE)+"%' AND SE5.E5_DOCUMEN LIKE '%PA "+CFORNECE+CLOJA+"%') OR "
		CQUERY +=   "      (SE5.E5_KEY     LIKE '%ADT"+ALLTRIM(FPH->FPH_NRVALE)+"%' AND SE5.E5_KEY     LIKE '%PA "+CFORNECE+CLOJA+"%') )  "
		CQUERY := CHANGEQUERY(CQUERY)
		DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRB1", .F., .T.)

	 //	TRB1->(DBGOTOP())
		WHILE TRB1->(!EOF())
			DBSELECTAREA("SE5")
			SE5->(DBGOTO(TRB1->_NREGSE5))
			IF !SE5->(EOF())
		     	RECLOCK("SE5",.F.)
				SE5->(DBDELETE())
				SE5->(MSUNLOCK())
			ENDIF
			TRB1->(DBSKIP())
		ENDDO
		
		DBSELECTAREA("TRB1")
		TRB1->(DBCLOSEAREA()) 
		*/
	ELSEIF FPH->FPH_MODFOR == "1"		// CAIXA
		IF SELECT("TRB") > 0
			DBSELECTAREA("TRB")
			DBCLOSEAREA()
		ENDIF
		
		// Removido por Frank, pois nao tempos mais esta funcionalidade de usar o SE5 e estava dando 
		// debitos tecnicos por usar a SE5 em 06/04/2022
		/*
		CQUERY := "SELECT	SE5.R_E_C_N_O_ POSIC, SE5.E5_PREFIXO, SE5.E5_NUMERO, SE5.E5_PARCELA, SE5.E5_TIPO, SE5.E5_CLIFOR, SE5.E5_LOJA, SE5.E5_VALOR, SE5.E5_TIPODOC "
		CQUERY += "FROM		"+RETSQLNAME("SE5")+" SE5 "
		CQUERY += "WHERE	( SE5.E5_HISTOR	LIKE '%" + ALLTRIM(FPH->FPH_NRVALE) + "%' OR SE5.E5_KEY LIKE '%" + ALLTRIM(FPH->FPH_NRVALE) + "%' ) AND "
		CQUERY += "			SE5.E5_CLIFOR	= '" + CFORNECE + "' AND "
		CQUERY += "			SE5.E5_LOJA		= '" + CLOJA    + "' AND "
		CQUERY += "			SE5.E5_FORNECE	= '" + CFORNECE + "' AND "
		CQUERY += "			SE5.D_E_L_E_T_	= '' "
		CQUERY += "ORDER BY	SE5.R_E_C_N_O_, SE5.E5_PREFIXO, SE5.E5_NUMERO, SE5.E5_PARCELA, SE5.E5_TIPO, SE5.E5_CLIFOR, SE5.E5_LOJA, SE5.E5_VALOR, SE5.E5_TIPODOC"
		CQUERY := CHANGEQUERY(CQUERY)
		DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRB", .F., .T.)
		
		TRB->(DBGOTOP())
		WHILE ! TRB->(EOF()) // DELETO AS PA'S 
			SE5->(DBGOTO(TRB->POSIC)) //E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR

			RECLOCK("SE5",.F.)
			SE5->(DBDELETE())
			SE5->(MSUNLOCK())  

			TRB->(DBSKIP())
		ENDDO
		                   
		TRB->(DBCLOSEAREA())
		*/
	ENDIF       	
ENDIF

// ESTORNO A TB NO CASO DO VALE TER SIDO PAGO VIA DEP”SITO
IF LRET .AND. FPH->FPH_MODFOR == "2"	// DEP”SITO

	// Removido por Frank, pois nao tempos mais esta funcionalidade de usar o SE5 e estava dando 
	// debitos tecnicos por usar a SE5 em 06/04/2022

/*

	// FA«O UMA QUERY PARA LEVANTAR TODOS AS TBS DESTE PROCESSO
	IF SELECT("TRB") > 0
		DBSELECTAREA("TRB")
		DBCLOSEAREA()
	ENDIF
	
	CQUERY := "SELECT	SE5.E5_RECPAG, SE5.E5_BANCO, SE5.E5_AGENCIA, SE5.E5_CONTA, SE5.E5_NATUREZ, SE5.E5_HISTOR, SE5.E5_DATA, SE5.E5_PROCTRA, SE5.R_E_C_N_O_ AS _NREGSE5 "
	CQUERY += "FROM " + RETSQLNAME("SE5") + " SE5 "
	CQUERY += "WHERE SE5.E5_MOEDA    = '" + _CTIPOTB + "' AND "
	CQUERY += "		 SE5.D_E_L_E_T_  = ''                 AND "      
	CQUERY += "		 SE5.E5_HISTOR LIKE '%" + FPH->FPH_NRBV + "%' AND "
	CQUERY += "		(SE5.E5_NUMCHEQ  = '" + FPH->FPH_NRVALE + "' OR "
	CQUERY += "		 SE5.E5_DOCUMEN  = '" + FPH->FPH_NRVALE + "') AND "
	CQUERY += "		 SE5.E5_PROCTRA NOT IN ("
	CQUERY += "SELECT	DISTINCT SE5.E5_PROCTRA "
	CQUERY += "FROM " + RETSQLNAME("SE5") + " SE5 "
	CQUERY += "WHERE SE5.E5_MOEDA    = '" + _CTIPOTB + "' AND "
	CQUERY += "		 SE5.D_E_L_E_T_  = ''                 AND "
	CQUERY += "		 SE5.E5_HISTOR LIKE '%" + FPH->FPH_NRBV + "%' AND "
	CQUERY += "		(SE5.E5_NUMCHEQ  = '" + FPH->FPH_NRVALE + "' OR "
	CQUERY += "		 SE5.E5_DOCUMEN  = '" + FPH->FPH_NRVALE + "') AND "
 //	CQUERY += "		 SE5.E5_HISTOR LIKE 'ESTORNO%')" // NAO GERA UMA TB DE ESTORNO MAS SIM UMA TB DO TIPO 'TE' O 'E' SEJA ESTORNO...
	CQUERY += "		 SE5.E5_TIPODOC = 'TE')"
	CQUERY := CHANGEQUERY(CQUERY)
	DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRB", .F., .T.)
	
	_NREGTRB := _NREGP := _NREGR := 0
	
	TRB->(DBGOTOP())
	WHILE TRB->(!EOF())		//GRAVO A TB DE ESTORNO INVERTENDO OS BANCOS DO A PAGAR COM O A RECEBER
		_DDTTB := CTOD(SUBSTR(TRB->E5_DATA,7,2) + "/" + SUBSTR(TRB->E5_DATA,5,2) + "/" + SUBSTR(TRB->E5_DATA,1,4))
		IF TRB->E5_RECPAG == "P"
			_CABANCO   := _CBANCO   := TRB->E5_BANCO
			_CAAGENCIA := _CAGENCIA	:= TRB->E5_AGENCIA
			_CANUMCON  := _CNUMCON  := TRB->E5_CONTA
			_CNATDES   := TRB->E5_NATUREZ 
			_NREGP++ 
		ENDIF 
		
		IF TRB->E5_RECPAG == "R"
			_CBANTB  := TRB->E5_BANCO
			_CAGETB  := TRB->E5_AGENCIA
			_CCCTB   := TRB->E5_CONTA
			_CNATORI := TRB->E5_NATUREZ
			_NREGR++
		ENDIF
		
		_NREGTRB++

		TRB->(DBSKIP())
	ENDDO
	
	DO CASE
	CASE _NREGTRB == 0 			// N√O ENCONTROU TB'S
		MSGSTOP(STR0009 , STR0002) //"N√O FOI ENCONTRADA NO SISTEMA NENHUMA TB REFERÀNTE A ESTE VALE, PORTANTO O VALE N√O PODER¡ SER ESTORNADO, E VOLTAR¡ PARA O STATUS DE 'APROVA«√O'."###"GPO - LOCF113.PRW"
		LRET := .F.
	CASE _NREGTRB >  2 			// ENCONTROU MAIS QUE UMA TB
		MSGSTOP(STR0010 , STR0002)  //"FOI ENCONTRADA MAIS DE UMA TB REFERÀNTE A ESTE VALE, PORTANTO O VALE N√O PODER¡ SER ESTORNADO."###"GPO - LOCF113.PRW"
		LRET := .F.
	CASE _NREGTRB == 2 .AND. _NREGP == 1 .AND. _NREGR == 1	//S” ENCONTROU A TB A SER ESTORNADA
		// GERA O ESTORNO DA TB DO BANCO PARA O CAIXA OPERACIONAL
		AFINA100 := { {"AUTNRODOC"  , FPH->FPH_NRVALE , NIL},;
		              {"AUTDTMOV"   , _DDTTB		  , NIL},;
		              {"AUTBANCO"   , _CBANTB	      , NIL},;
		              {"AUTAGENCIA"	, _CAGETB	      , NIL},;
		              {"AUTCONTA"   , _CCCTB	      , NIL} }
		
		// VARIAVEIS MENSAGEM DE ERRO
		LMSERROAUTO := .F.
		LMSHELPAUTO := .T.
		
		MSEXECAUTO({|X,Y,Z| FINA100(X,Y,Z)},0,AFINA100,8)
		
		IF LMSERROAUTO

			MSGSTOP(STR0011 , STR0002)  //"N√O FOI POSSÕVEL ESTORNAR A TB, SER¡ APRESENTADO O ERRO NA SEQ‹ NCIA, CORRIJA O LAN«AMENTO E TENTE NOVAMENTE."###"GPO - LOCF113.PRW"
			LRET := .F.
			MOSTRAERRO()

		ELSE

			// DELETO O CHEQUE
			SEF->(DBSETORDER(1))
			IF SEF->(DBSEEK(XFILIAL("SEF")+_CBANCO+_CAGENCIA+_CNUMCON+FPH->FPH_NRVALE)) 
				IF SEF->EF_IMPRESS <> "S"
					// DELETO O REGISTRO DO CHEQUE
					RECLOCK("SEF",.F.)
					SEF->(DBDELETE())
					SEF->(MSUNLOCK())
				ENDIF
			ENDIF 
				
		  	// ESTORNO A TB
			SE5->(DBSETORDER(17)) 					// E5_FILIAL+E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ+E5_TIPODOC+E5_SEQ                          
			
			IF SE5->(DBSEEK( XFILIAL("SE5")+_CBANCO+_CAGENCIA+_CNUMCON+PADR(FPH->FPH_NRVALE,TAMSX3("E5_NUMCHEQ")[1]," ")+"TR" )) 
				RECLOCK("SE5",.F.)
				SE5->E5_TIPODOC := "TE"  			// MARCO COMO ESTORNADO O REGISTRO.
				SE5->(MSUNLOCK())
			ENDIF

			// DELETO AS TBS ESTORNADAS DO TB - FA«O ISSO PARA LIMPAR ESTES  REGISTROS DA  CONCILIA«√O
			SE5->(DBSETORDER(10)) 					// E5_FILIAL+E5_DOCUMEN
			IF SE5->(DBSEEK( XFILIAL("SE5")+PADR(FPH->FPH_NRVALE,TAMSX3("E5_NUMCHEQ")[1]," ") )) 
				WHILE !SE5->(EOF()) .AND. ALLTRIM(SE5->E5_DOCUMEN) == ALLTRIM(FPH->FPH_NRVALE)
		     		IF	SE5->E5_BANCO == _CBANTB .AND. SE5->E5_AGENCIA == _CAGETB .AND. SE5->E5_CONTA == _CCCTB
				     	IF SE5->E5_TIPODOC == "TE" 	// DELETO A LINHA PRINCIPAL
							RECLOCK("SE5",.F.)
							SE5->(DBDELETE())
							SE5->(MSUNLOCK())
				     	ENDIF
		     		ENDIF
				   	SE5->(DBSKIP())
				ENDDO
			ENDIF                                

			// DELETO OS ESTORNOS DAS TBS ESTORNADAS DO TB - FA«O ISSO PARA LIMPAR ESTES  REGISTROS DA  CONCILIA«√O
			SE5->(DBSETORDER(10)) 					// E5_FILIAL+E5_DOCUMEN
			IF SE5->(DBSEEK( XFILIAL("SE5")+PADR(FPH->FPH_NRVALE,TAMSX3("E5_NUMCHEQ")[1]," ") )) 
				WHILE !SE5->(EOF()) .AND. ALLTRIM(SE5->E5_DOCUMEN) == ALLTRIM(FPH->FPH_NRVALE)
					IF 	SE5->E5_BANCO == _CBANCO .AND. SE5->E5_AGENCIA == _CAGENCIA .AND. SE5->E5_CONTA == _CNUMCON
						IF SE5->E5_TIPODOC == "TR" .AND. STR0012 $ UPPER(E5_HISTOR) // DELETO A LINHA DO ESTORNO //"ESTORNO"
							RECLOCK("SE5",.F.)
							SE5->(DBDELETE())
							SE5->(MSUNLOCK())
						ENDIF
					ENDIF
				   	SE5->(DBSKIP())
			     ENDDO 
			ENDIF 
									
			// DELETO AS TBS ESTORNADAS DO BANCO - FA«O ISSO PARA LIMPAR ESTES  REGISTROS DA  CONCILIA«√O
			SE5->(DBSETORDER(17)) 					// E5_FILIAL+E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ+E5_TIPODOC+E5_SEQ
			IF SE5->(DBSEEK( XFILIAL("SE5")+_CBANCO+_CAGENCIA+_CNUMCON+PADR(FPH->FPH_NRVALE,TAMSX3("E5_NUMCHEQ")[1]," ") )) 
				WHILE !SE5->(EOF()) .AND. ALLTRIM(SE5->E5_NUMCHEQ) == ALLTRIM(FPH->FPH_NRVALE)
		     		IF 	SE5->E5_BANCO == _CBANCO .AND. SE5->E5_AGENCIA == _CAGENCIA .AND. SE5->E5_CONTA == _CNUMCON							     		
			     		IF SE5->E5_TIPODOC == 'TE'
							RECLOCK("SE5",.F.)
							SE5->(DBDELETE())
							SE5->(MSUNLOCK())
			     		ENDIF
			    	ENDIF
					SE5->(DBSKIP())
				ENDDO
			ENDIF
						
			// DELETO OS ESTORNOS DA TBS ESTORNADAS DO BANCO - FA«O ISSO PARA LIMPAR ESTES  REGISTROS DA  CONCILIA«√O
			SE5->(DBSETORDER(17)) 					// E5_FILIAL+E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ+E5_TIPODOC+E5_SEQ
			IF SE5->(DBSEEK( XFILIAL("SE5")+_CBANTB+_CAGETB+_CCCTB+PADR(FPH->FPH_NRVALE,TAMSX3("E5_NUMCHEQ")[1]," ") )) 
				WHILE !SE5->(EOF()) .AND. ALLTRIM(SE5->E5_NUMCHEQ) == ALLTRIM(FPH->FPH_NRVALE)
			   		IF 	SE5->E5_BANCO == _CBANTB .AND. SE5->E5_AGENCIA == _CAGETB .AND. SE5->E5_CONTA == _CCCTB
			     		IF SE5->E5_TIPODOC == "TR" .AND. STR0012 $ UPPER(E5_HISTOR) 	// DELETO A LINHA DO ESTORNO //"ESTORNO"
				     		RECLOCK("SE5",.F.) 
							SE5->(DBDELETE()) 
							SE5->(MSUNLOCK()) 
			     		ENDIF 
			    	ENDIF 
					SE5->(DBSKIP()) 
				ENDDO 
			ENDIF 

		ENDIF
	OTHERWISE                                        
		MSGSTOP(STR0013 , STR0002) //"FOI ENCONTRADA INREGULARIEDADES NAS TBS REFERÀNTE A ESTE VALE, PORTANTO O VALE N√O PODER¡ SER ESTORNADO."###"GPO - LOCF113.PRW"
		LRET := .F.
	ENDCASE
*/
ENDIF

// VOLTO O STATUS DE ABERTO DO VALE
RECLOCK("FPH",.F.)
	FPH->FPH_APROVA := .F.
	FPH->FPH_DTAPRO := CTOD("//")
	FPH->FPH_SALDO  := FPH->FPH_VALOR
	FPH->FPH_USUPRO := ""
FPH->(MSUNLOCK())

IF LRET
	MSGALERT("ESTORNO REALIZADO COM SUCESSO..." , "GPO - LOCF113.PRW") 
ELSE
	MSGALERT("ESTORNO N√O FOI REALIZADO." , "GPO - LOCF113.PRW") 
	RETURN(.F.)
ENDIF

RETURN LRET

       

// ======================================================================= \\ 
STATIC FUNCTION CHKESTOR()
// ======================================================================= \\ 
// TRATA ESTORNOS DA OPERACAO
LOCAL LRET := .T.
LOCAL CQRY := ""

IF !FPH->FPH_APROVA    

	LRET := .F.
	MSGALERT("ATEN«√O, VALE N√O APROVADO, N√O … NECESS¡RIO FAZER ESTORNO!" , "GPO - LOCF113.PRW")

ELSE

	// Removido por Frank, pois nao tempos mais esta funcionalidade de usar o SE5 e estava dando 
	// debitos tecnicos por usar a SE5 em 06/04/2022

/*

	IF !EMPTY(FPH->FPH_NRBV)
		CQRY :=	"" 
		CQRY += " SELECT FPI_STATUS " 
		CQRY += " FROM "+RETSQLNAME("FPI")+" " 
		CQRY += " WHERE  FPI_FILIAL = '"+FPH->FPH_FILIAL+"' AND FPI_NRBV = '"+FPH->FPH_NRBV+"' AND D_E_L_E_T_ = '' "
		DBUSEAREA(.T.,"TOPCONN",TCGENQRY(,,CQRY),"TRB1",.T.,.F.)  
		TCSETFIELD("TRB1","ESTOK","N",5,0)
    	DBSELECTAREA("TRB1")
    	IF	TRB1->FPI_STATUS $ ("F/P") 
    		LRET := .F.
    		MSGALERT("ATEN«√O, O VALE N√O PODE SER ESTORNADO POIS O BV ESTA FECHADO OU APROVADO!" , "GPO - LOCF113.PRW") 
    	ENDIF
		DBSELECTAREA("TRB1")
		TRB1->(DBCLOSEAREA()) 
	ENDIF

	// VERIFICA SE ESTA CONCILIADO A TRANSFERENCIA, SE VIR ESTOK <> 0 NAO PODE
	CQRY     := ""
	CQRY     += " SELECT SUM(ESTOK) ESTOK "
	CQRY     += " FROM ( "
	CQRY     +=        " SELECT COUNT(*) ESTOK  "
	CQRY     +=        " FROM "+RETSQLNAME("SE5")+" E5   "
	CQRY     +=        " WHERE  E5.D_E_L_E_T_ = ''  "
	CQRY     +=          " AND  E5_FILIAL = '"+XFILIAL("SE5")+"'  "
	CQRY     +=          " AND  E5_DATA = '"+DTOS(FPH->FPH_DTAPRO)+"'  "
	CQRY     +=          " AND  E5_TIPO = 'PA'    "
	CQRY     +=          " AND  E5_HISTOR LIKE '%"+FPH->FPH_NRVALE+"%' "
	IF FPH->FPH_MODFOR == "2"						// DEP”SITO
		CQRY +=          " AND E5_RECONC =  '' "  	// TITULOS CONCILIADOS
	ELSE
	    CQRY +=          " AND E5_RECONC <>  '' "  	// TITULOS CONCILIADOS
	ENDIF
    NXREGS := 1
    IF FPH->FPH_MODFOR == "2"
		NXREGS := 3
	    CQRY +=          " UNION ALL  " 
	    CQRY +=        " SELECT COUNT(*) ESTOK  "  
	    CQRY +=        " FROM "+RETSQLNAME("SE5")+"  E5   "  
	    CQRY +=        " WHERE  E5.D_E_L_E_T_ = ''      " 
	    CQRY +=          " AND  E5_FILIAL = '"+XFILIAL("SE5")+"'   "
	    CQRY +=          " AND  E5_MOEDA = 'TB' AND E5_TIPODOC = 'TR'  "
	    CQRY +=          " AND (E5_NUMCHEQ = '"+FPH->FPH_NRVALE+"' OR E5_DOCUMEN = '"+FPH->FPH_NRVALE+"' )   "
	    CQRY +=          " AND  E5_DATA = '"+DTOS(FPH->FPH_DTAPRO)+"'                                       "
    ENDIF
    CQRY +=          " ) AS X " 
    DBUSEAREA(.T.,"TOPCONN",TCGENQRY(,,CQRY),"TRB1",.T.,.F.)  
    TCSETFIELD("TRB1","ESTOK","N",5,0)

    DBSELECTAREA("TRB1")
    
    IF FPH->FPH_MODFOR == "1" .AND. TRB1->ESTOK <> 0 
    	LRET := .F.
    	MSGALERT("TRANSFERENCIAS REALIZADAS DO VALE J¡ FORAM CONCILIADAS! PROCESSO CANCELADO!" , "GPO - LOCF113.PRW")
    ENDIF
         
    DBSELECTAREA("TRB1")
    TRB1->(DBCLOSEAREA())

    CQRY := ""
    CQRY += " SELECT E2_VALOR , E2_SALDO "
    CQRY += " FROM "+RETSQLNAME("SE2")+" SE2 "
    CQRY +=        " LEFT JOIN "+RETSQLNAME("DA4")+" DA4 ON DA4.D_E_L_E_T_ = '' AND DA4_FILIAL = '"+XFILIAL("DA4")+"' "
    CQRY += "                                                                   AND DA4_FORNEC = E2_FORNECE "
    CQRY += "                                                                   AND DA4_LOJA   = E2_LOJA "
    CQRY +=        " LEFT JOIN "+RETSQLNAME("FPH")+" ZL1 ON ZL1.D_E_L_E_T_ = '' AND FPH_FILIAL = '"+XFILIAL("FPH")+"' "
    CQRY += "                                                                   AND FPH_MOTORI = DA4_COD  "
    CQRY += " WHERE  SE2.D_E_L_E_T_ = ''   "
    CQRY +=   " AND  SE2.E2_FILIAL = '"+XFILIAL("SE2")+"'   "
    CQRY +=   " AND  FPH_NRVALE = '"+FPH->FPH_NRVALE+"'  AND E2_NUM = '"+FPH->FPH_NRVALE+"'   "
    DBUSEAREA(.T.,"TOPCONN",TCGENQRY(,,CQRY),"TRB2",.T.,.F.)
    TCSETFIELD("TRB2","E2_VALOR","N",17,2)
    TCSETFIELD("TRB2","E2_SALDO","N",17,2)
    
    IF TRB2->(E2_VALOR <> E2_SALDO)
         LRET := .F.
         MSGALERT("TITULO DE ADIANTAMENTO BAIXADO TOTAL/PARCIAL, PROCESSO DE ESTORNO CANCELADO!" , "GPO - LOCF113.PRW") 
    ENDIF
*/    
ENDIF        

TRB2->(DBCLOSEAREA()) 

RETURN(LRET)
