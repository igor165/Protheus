#INCLUDE "locr004.ch" 
#INCLUDE "TOTVS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "COLORS.CH"
#INCLUDE "RPTDEF.CH"                                                                                           
#INCLUDE "FWPRINTSETUP.CH"

/*/{PROTHEUS.DOC} LOCR004.PRW
ITUP BUSINESS - TOTVS RENTAL
IMPRESSÃO DE CHECKLIST QUANTIATIVO/ROMANEIO
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/

FUNCTION LOCR004()
RETURN LOC05103()

FUNCTION LOC05103()

LOCAL   _AAREAOLD := GETAREA()
LOCAL   _AAREASZ0 := FQ2->(GETAREA())
LOCAL   _AAREASZ1 := FQ3->(GETAREA())
LOCAL 	_NLAYOUT  := SUPERGETMV("MV_LOCX212",,2)
Local	cImpResum := ""
LOCAL   _APERGS	:= {}
LOCAL   _ARET		:= {}


PRIVATE CPERG     := "LOCP019"

IF ALIAS() == "FQ2"
	IF _NLAYOUT == 2
		AADD( _APERGS ,{2,STR0066,1 ,{STR0067 , STR0068 },80,"",.T.}) //"TIPO DA MEDIÇÃO : "###"LOCAÇÃO"###"SERVIÇO"
		_ARET   := {}       
	
		WHILE PARAMBOX(_APERGS ,STR0066,_ARET,,,,,,,,.F.)  //"Formato da impressao"
			IF LEN(_ARET) == 0
				LOOP
			ENDIF        
			EXIT
		ENDDO

		If len(_aRet) == 0
			Return
		EndIF

		If valtype(_aRet[1]) == "N"
			cImpResum := _aRet[1]
		Else
			If substr(_aRet[1],1,1) == "A"
				cImpResum := 2
			Else
				cImpResum := 1
			EndIF
		EndIf

		PROCESSA({|| IMPROM2(cImpResum) }, STR0001, STR0002, .T.) //"IMPRIMINDO CHECKLIST..."###"AGUARDE..."
	ELSE
		PROCESSA({|| IMPROM() }, STR0001, STR0002, .T.) //"IMPRIMINDO CHECKLIST..."###"AGUARDE..."
	ENDIF
ELSEIF PERGPARAM(CPERG)
	IF _NLAYOUT == 2
		DBSELECTAREA("FQ2")
		FQ2->(DBSETORDER(3))
		IF FQ2->(DBSEEK(XFILIAL("FQ2") + MV_PAR01))
			PROCESSA({|| IMPROM2() }, STR0001, STR0002, .T.) //"IMPRIMINDO CHECKLIST..."###"AGUARDE..."
		ENDIF
	ELSE
		DBSELECTAREA("FQ2")
		FQ2->(DBSETORDER(3))
		IF FQ2->(DBSEEK(XFILIAL("FQ2") + MV_PAR01))
			//PROCESSA({|| IMPROM1() }, STR0001, STR0002, .T.) //"IMPRIMINDO CHECKLIST..."###"AGUARDE..."
		ENDIF
	ENDIF
ENDIF

RESTAREA( _AAREASZ1 )
RESTAREA( _AAREASZ0 )
RESTAREA( _AAREAOLD )

RETURN



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³FUNCAO    ³ IMPROM2  ³ AUTOR ³ FRANK ZWARG FUGA    ³ DATA ³ 13/08/2016 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³DESCRICAO ³ DEFINICAO DO LAYOUT DO RELATORIO VERSAO II                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
STATIC FUNCTION IMPROM2(cImpResum)

LOCAL   LADJUSTTOLEGACY := .F.
LOCAL   LDISABLESETUP   := .F.
LOCAL   CARQUIVO        := ""
LOCAL   CTEMP
LOCAL	LRETORNA		:= .F.
LOCAL	NRETORNA		:= 0
LOCAL   _CTITULO        := ""
Local	cProdAux		:= ""
Local	cProdAtu		:= ""
Local	cItem			:= "0000"
Local	nX				:= 0
Local 	cWhereFq3		:= ""
Local	aProdItem		:= {}
Local	aProdAux		:= {}
Local   _MV_LOC022 := SUPERGETMV("MV_LOCX022",,.F.)

PRIVATE OREPORT             
PRIVATE NLIN            := 10
PRIVATE NLINOLD		    := 10
PRIVATE NLINMAX		    := 10
PRIVATE NMINLEFT        := 10
PRIVATE NMAXWIDTH       := 584
PRIVATE NMAXHEIGHT      := 2900
PRIVATE NMEIO		    := ((NMAXWIDTH+NMINLEFT)/2)

DO CASE
CASE ALLTRIM(FQ2->FQ2_TPROMA) == "0" 	// EXPEDIÇÃO
	CARQUIVO := STR0003 + ALLTRIM(FQ2->FQ2_NUM) + "_" + DTOS(DATE()) + ".PDF" //"CHECKLIST EXPEDIÇÃO "
	_CTITULO := STR0004 //"ROMANEIO DE EXPEDIÇÃO"
CASE ALLTRIM(FQ2->FQ2_TPROMA) == "1" 	// RETORNO
	CARQUIVO := STR0005   + ALLTRIM(FQ2->FQ2_NUM) + "_" + DTOS(DATE()) + ".PDF" //"CHECKLIST RETORNO "
	_CTITULO := STR0006 //"ROMANEIO DE RETORNO"
OTHERWISE
	CARQUIVO := STR0007           + ALLTRIM(FQ2->FQ2_NUM) + "_" + DTOS(DATE()) + ".PDF" //"CHECKLIST "
	_CTITULO := STR0008 //"ROMANEIO"
ENDCASE

OREPORT := FWMSPRINTER():NEW(CARQUIVO, 6, LADJUSTTOLEGACY,, LDISABLESETUP, , , , , , .F., )

OREPORT:SETPORTRAIT()
OREPORT:SETPAPERSIZE(9)
OREPORT:SETVIEWPDF(.T.)

OFONT1    := TFONTEX():NEW(OREPORT,"TIMES NEW ROMAN",14,14,.T.,.T.,.F.) 	// 1
OFONT2    := TFONTEX():NEW(OREPORT,"TIMES NEW ROMAN",12,12,.T.,.T.,.F.) 	// 1
OFONT3    := TFONTEX():NEW(OREPORT,"TIMES NEW ROMAN",10,10,.T.,.T.,.F.) 	// 1
OFONT4    := TFONTEX():NEW(OREPORT,"TIMES NEW ROMAN",08,08,.F.,.F.,.F.) 	// 1
OFONT5    := TFONTEX():NEW(OREPORT,"CAMBRIA"        ,06,06,.F.,.F.,.F.) 	// 1
OFONT6    := TFONTEX():NEW(OREPORT,"CAMBRIA"        ,08,08,.F.,.F.,.T.) 	// 1

OREPORT:STARTPAGE()

NLIN := 00 		// 

OREPORT:SAY( NLIN+15, NMINLEFT+200, _CTITULO, OFONT1:OFONT )
NLIN += 25

OREPORT:BOX( NLIN, NMINLEFT	   					, NLIN+15, NMAXWIDTH/3 )
OREPORT:BOX( NLIN, NMAXWIDTH/3					, NLIN+15, (NMAXWIDTH/3 + NMAXWIDTH/3) )
OREPORT:BOX( NLIN, (NMAXWIDTH/3 + NMAXWIDTH/3)	, NLIN+15, NMAXWIDTH 			 )

NLIN += 10 		// NLIN TOTAL: 40

OREPORT:SAY( NLIN, NMINLEFT+10, STR0009+ALLTRIM(FQ2->FQ2_NUM), OFONT3:OFONT ) //"Nº ROMANEIO: "
OREPORT:SAY( NLIN, (NMAXWIDTH/3)+10, STR0010+ALLTRIM(FQ2->FQ2_ASF), OFONT3:OFONT ) //"Nº ASF: "
OREPORT:SAY( NLIN, (NMAXWIDTH/3 + NMAXWIDTH/3)+10, STR0011+DTOC(FQ2->FQ2_DATA), OFONT3:OFONT ) //"DATA: "

NLIN += 5

OREPORT:BOX( NLIN, NMINLEFT	   					, NLIN+15, NMAXWIDTH )

NLIN += 10

//Jose Eulalio - 29/09/2022 - SIGALOC94-518 - Impressão do Romaneio, considerando a AS posicionada
//Posiciona na FQ3
FQ3->(DBSETORDER(1))
FQ3->(DBSEEK(XFILIAL("FQ3")+FQ2->FQ2_NUM))
//monta lista com pedidos do romaneio
If !FQ3->(EOF()) 
	WHILE !FQ3->(EOF()) .AND. FQ3->FQ3_FILIAL+FQ3->FQ3_NUM == XFILIAL("FQ3")+FQ2->FQ2_NUM
		If !Empty(cWhereFq3)
			cWhereFq3 += "," 
		EndIf
		cWhereFq3 += "'" + FQ3->FQ3_AS + "'"
		FQ3->(DBSKIP())
	ENDDO
EndIf
IF FQ2->FQ2_TPROMA == "0"
	CTEMP := STR0012 //"NOTA FISCAL DE REMESSA: "
	_CQUERY := " SELECT C5_NOTA, C5_SERIE, C5_NUM " + CRLF
	_CQUERY += "   FROM " + RETSQLNAME("SC5") + " SC5" + CRLF
	_CQUERY += "  WHERE C5_FILIAL = '" + XFILIAL("SC5") + "'" + CRLF
	_CQUERY += "    AND C5_XPROJET = '" + ALLTRIM(FQ2->FQ2_PROJET) + "'" + CRLF
	_CQUERY += "    AND C5_XTIPFAT = 'R'" + CRLF
	_CQUERY += "    AND SC5.D_E_L_E_T_ = ''" + CRLF
	//Jose Eulalio - 29/09/2022 - SIGALOC94-518 - Impressão do Romaneio, considerando a AS posicionada
	If !Empty(cWhereFq3)
		_CQUERY += "    AND C5_NUM IN ( SELECT C6_NUM " + CRLF
		_CQUERY += "   FROM " + RETSQLNAME("SC6") + " SC6" + CRLF
		_CQUERY += "  WHERE C6_FILIAL = '" + XFILIAL("SC6") + "'" + CRLF
		_CQUERY += "  	AND C6_XAS IN (" + cWhereFq3 + ") " + CRLF
		_CQUERY += "    AND SC6.D_E_L_E_T_ = ''" + CRLF
		_CQUERY += "    ) " + CRLF
	EndIf
	IF SELECT("TRBGER") > 0
		TRBGER->(DBCLOSEAREA())
	ENDIF
	_CQUERY := CHANGEQUERY(_CQUERY) 
	TCQUERY _CQUERY NEW ALIAS "TRBGER"
	IF !TRBGER->(EOF())
		CTEMP += TRBGER->C5_NOTA+STR0013+TRBGER->C5_SERIE+STR0014+TRBGER->C5_NUM //" SERIE: "###" PEDIDO: "
	ELSE
		CTEMP += STR0015 //"NAO LOCALIZADO."
	ENDIF
	TRBGER->(DBCLOSEAREA())
ELSE
	LRETORNA := .T.
	CTEMP := STR0016 //"NOTA FISCAL DE RETORNO:"
	_CQUERY := " SELECT F1_DOC, F1_SERIE " + CRLF
	_CQUERY += "   FROM " + RETSQLNAME("SF1") + " SF1" + CRLF
	_CQUERY += "  WHERE F1_FILIAL = '" + XFILIAL("SF1") + "'" + CRLF
	_CQUERY += "    AND F1_IT_ROMA = '" + ALLTRIM(FQ2->FQ2_NUM) + "'" + CRLF
	_CQUERY += "    AND SF1.D_E_L_E_T_ = ''" + CRLF
	IF SELECT("TRBGER") > 0
		TRBGER->(DBCLOSEAREA())
	ENDIF
	_CQUERY := CHANGEQUERY(_CQUERY) 
	TCQUERY _CQUERY NEW ALIAS "TRBGER"
	IF !TRBGER->(EOF())
		CTEMP += TRBGER->F1_DOC+STR0013+TRBGER->F1_SERIE //" SERIE: "
	ELSE
		CTEMP += STR0015 //"NAO LOCALIZADO."
	ENDIF
	TRBGER->(DBCLOSEAREA())

ENDIF

OREPORT:SAY( NLIN, NMINLEFT+10, CTEMP, OFONT3:OFONT )

NLIN += 5

OREPORT:BOX( NLIN, NMINLEFT	   					, NLIN+15, NMAXWIDTH )

NLIN += 10

CTEMP := STR0017+ALLTRIM(FQ2->FQ2_PLACA)+STR0018+ALLTRIM(FQ2->FQ2_MOTORI)+STR0019+ALLTRIM(FQ2->FQ2_CPFMOT) //"PLACA: "###" MOTORISTA: "###" CPF: "

OREPORT:SAY( NLIN, NMINLEFT+10, CTEMP, OFONT3:OFONT )

NLIN += 5

OREPORT:BOX( NLIN, NMINLEFT	   					, NLIN+15, NMAXWIDTH )

NLIN += 10

CTEMP := STR0020+ALLTRIM(FQ2->FQ2_TRANSP) //"TRANSPORTADORA: "

OREPORT:SAY( NLIN, NMINLEFT+10, CTEMP, OFONT3:OFONT )

NLIN += 5

OREPORT:BOX( NLIN, NMINLEFT	   		, NLIN+15, NMAXWIDTH*0.10 )
OREPORT:BOX( NLIN, NMAXWIDTH*0.10	, NLIN+15, NMAXWIDTH )
OREPORT:BOX( NLIN, NMAXWIDTH*0.55	, NLIN+15, NMAXWIDTH )
OREPORT:BOX( NLIN, NMAXWIDTH*0.70	, NLIN+15, NMAXWIDTH)
OREPORT:BOX( NLIN, NMAXWIDTH*0.85	, NLIN+15, NMAXWIDTH)

NLIN += 10

OREPORT:SAY( NLIN, NMINLEFT+05, STR0021, OFONT3:OFONT ) //"ITEM"
OREPORT:SAY( NLIN, (NMAXWIDTH*0.10)+05, STR0022, OFONT3:OFONT ) //"DESCRIÇÃO DO ITEM"
OREPORT:SAY( NLIN, (NMAXWIDTH*0.55)+05, STR0023, OFONT3:OFONT ) //"QTD.CARREGADA"
OREPORT:SAY( NLIN, (NMAXWIDTH*0.70)+05, STR0024, OFONT3:OFONT ) //"QTD.RETORNADA"
OREPORT:SAY( NLIN, (NMAXWIDTH*0.85)+05, STR0025, OFONT3:OFONT ) //"SALDO A RETORNAR"

FQ3->(DBSETORDER(1))
FQ3->(DBSEEK(XFILIAL("FQ3")+FQ2->FQ2_NUM))
WHILE !FQ3->(EOF()) .AND. FQ3->FQ3_FILIAL+FQ3->FQ3_NUM == XFILIAL("FQ3")+FQ2->FQ2_NUM
	FPA->(DBSETORDER(3))
	FPA->(DBSEEK(XFILIAL("FPA")+FQ3->FQ3_AS))
	IF !EMPTY(SUBSTR(FPA->FPA_SEQEST,1,1)) .AND. EMPTY(SUBSTR(FPA->FPA_SEQEST,5,1)) // ESTRUTURA PAI
		FQ3->(DBSKIP())
		LOOP
	ENDIF

	//Proteção para não causar erro quando não é alterado o pergunte
	If ValType(cImpResum) == "N"
		cImpResum := cValToChar(cImpResum)
	EndIf

	//Impressão Normal
	If cImpResum == "2"

		NLIN += 5

		OREPORT:BOX( NLIN, NMINLEFT	   		, NLIN+15, NMAXWIDTH*0.10 )
		OREPORT:BOX( NLIN, NMAXWIDTH*0.10	, NLIN+15, NMAXWIDTH )
		OREPORT:BOX( NLIN, NMAXWIDTH*0.55	, NLIN+15, NMAXWIDTH )
		OREPORT:BOX( NLIN, NMAXWIDTH*0.70	, NLIN+15, NMAXWIDTH)
		OREPORT:BOX( NLIN, NMAXWIDTH*0.85	, NLIN+15, NMAXWIDTH)

		NLIN += 10

		OREPORT:SAY( NLIN, NMINLEFT+05, 		FQ3->FQ3_ITEM, OFONT3:OFONT )

		IF !EMPTY(FQ3->FQ3_NOMBEM)
			CTEMP := FQ3->FQ3_NOMBEM
		ELSE	
			CTEMP := FQ3->FQ3_DESPROD
		ENDIF
		OREPORT:SAY( NLIN, (NMAXWIDTH*0.10)+05, CTEMP, OFONT3:OFONT )

		NRETORNA := 0

		IF !EMPTY(FQ3->FQ3_QTD) .AND. FQ2->FQ2_TPROMA == "0"
			CTEMP := FQ3->FQ3_QTD
			IF LRETORNA
				NRETORNA := CTEMP
			ENDIF
		ELSE
			FPA->(DBSETORDER(3))
			IF FPA->(DBSEEK(XFILIAL("FPA")+FQ3->FQ3_AS))
				CTEMP := FPA->FPA_QUANT
				IF LRETORNA
					NRETORNA := CTEMP
				ENDIF
			ELSE
				CTEMP := 0
				NRETORNA := 0
			ENDIF
		ENDIF

		// TRATAMENTO PARA RETORNO PARCIAL - FRANK Z FUGA 23/09/2020
		
		IF !_MV_LOC022
			// NÃO UTILIZA O CONTROLE DE RETORNO PARCIAL.
			NRETORNA := 0
			FPA->(DBSETORDER(3))
			IF FPA->(DBSEEK(XFILIAL("FPA")+FQ3->FQ3_AS))
				IF !EMPTY(FPA->FPA_NFRET)
					FP0->(DBSETORDER(1))
					FP0->(DBSEEK(XFILIAL("FP0")+FPA->FPA_PROJET))
					SD1->(DBSETORDER(1))
					SD1->(DBSEEK(XFILIAL("SD1")+FPA->FPA_NFRET+FPA->FPA_SERRET+FP0->FP0_CLI + FP0->FP0_LOJA+SUBSTR(FPA->FPA_PRODUT,1,TAMSX3("D1_COD")[1])+FPA->FPA_ITERET))
					NRETORNA := SD1->D1_QUANT
				ENDIF
			ENDIF			
		ELSE
			
			// USA O CONTROLE DE RETORNO PARCIAL. CORRETO
			NRETORNA := 0
			FPA->(DBSETORDER(3))
			IF FPA->(DBSEEK(XFILIAL("FPA")+FQ3->FQ3_AS))
				FQZ->(DBSETORDER(2))
				FQZ->(DBSEEK(XFILIAL("FQZ")+FPA->FPA_PROJET))
				WHILE !FQZ->(EOF()) .AND. FQZ->(FQZ_FILIAL+FQZ_PROJET) == XFILIAL("FQZ")+FPA->FPA_PROJET
					IF ALLTRIM(FQZ->FQZ_COD) == ALLTRIM(FPA->FPA_PRODUT) .AND. ALLTRIM(FQZ->FQZ_AS) == ALLTRIM(FPA->FPA_AS)
						IF FQZ->FQZ_MSBLQL == "2"

							SF1->(DBSETORDER(1))
							IF SF1->(DBSEEK(XFILIAL("SF1")+FQZ->FQZ_DOC+FQZ->FQZ_SERIE))
								IF SF1->F1_IT_ROMA == FQ2->FQ2_NUM
									SD1->(DBSETORDER(1))
									IF SD1->(DBSEEK(XFILIAL("SD1")+FQZ->FQZ_DOC+FQZ->FQZ_SERIE+SF1->F1_FORNECE + SF1->F1_LOJA+SUBSTR(FPA->FPA_PRODUT,1,TAMSX3("D1_COD")[1])+FQZ->FQZ_ITEM))						
										NRETORNA += SD1->D1_QUANT
									ENDIF
								ENDIF						
							ENDIF


							
						ENDIF
					ENDIF
					FQZ->(DBSKIP())
				ENDDO
			ENDIF			


		ENDIF


		CTEMP += NRETORNA
		OREPORT:SAY( NLIN, (NMAXWIDTH*0.55)+30, ALLTRIM(STR(CTEMP)), OFONT3:OFONT )
		OREPORT:SAY( NLIN, (NMAXWIDTH*0.70)+30, ALLTRIM(STR(NRETORNA)), OFONT3:OFONT )
		OREPORT:SAY( NLIN, (NMAXWIDTH*0.85)+30, ALLTRIM(STR(CTEMP-NRETORNA)), OFONT3:OFONT )

		IF NLIN > 700 .AND. !FQ3->(EOF())
			OREPORT:ENDPAGE()
			OREPORT:STARTPAGE()
			NLIN := 25
		ENDIF

	Else

	//Impressão Resumida (aglutinada por produto)

		IF !EMPTY(FQ3->FQ3_QTD) .AND. FQ2->FQ2_TPROMA == "0"
			CTEMP := FQ3->FQ3_QTD
			IF LRETORNA
				NRETORNA := CTEMP
			ENDIF
		ELSE
			FPA->(DBSETORDER(3))
			IF FPA->(DBSEEK(XFILIAL("FPA")+FQ3->FQ3_AS))
				CTEMP := FPA->FPA_QUANT
				IF LRETORNA
					NRETORNA := CTEMP
				ENDIF
			ELSE
				CTEMP := 0
				NRETORNA := 0
			ENDIF
		ENDIF

		// TRATAMENTO PARA RETORNO PARCIAL - FRANK Z FUGA 23/09/2020
		
		IF !_MV_LOC022
			// NÃO UTILIZA O CONTROLE DE RETORNO PARCIAL.
			NRETORNA := 0
			FPA->(DBSETORDER(3))
			IF FPA->(DBSEEK(XFILIAL("FPA")+FQ3->FQ3_AS))
				IF !EMPTY(FPA->FPA_NFRET)
					FP0->(DBSETORDER(1))
					FP0->(DBSEEK(XFILIAL("FP0")+FPA->FPA_PROJET))
					SD1->(DBSETORDER(1))
					SD1->(DBSEEK(XFILIAL("SD1")+FPA->FPA_NFRET+FPA->FPA_SERRET+FP0->FP0_CLI + FP0->FP0_LOJA+SUBSTR(FPA->FPA_PRODUT,1,TAMSX3("D1_COD")[1])+FPA->FPA_ITERET))
					NRETORNA := SD1->D1_QUANT
				ENDIF
			ENDIF			
		ELSE

			IF !EMPTY(FQ3->FQ3_NOMBEM)
				cProdAtu := FQ3->FQ3_NOMBEM
			ELSE	
				cProdAtu := FQ3->FQ3_DESPROD
			ENDIF
			
			// USA O CONTROLE DE RETORNO PARCIAL. CORRETO
			NRETORNA := 0
			FPA->(DBSETORDER(3))
			IF FPA->(DBSEEK(XFILIAL("FPA")+FQ3->FQ3_AS))
				FQZ->(DBSETORDER(2))
				FQZ->(DBSEEK(XFILIAL("FQZ")+FPA->FPA_PROJET))
				WHILE !FQZ->(EOF()) .AND. FQZ->(FQZ_FILIAL+FQZ_PROJET) == XFILIAL("FQZ")+FPA->FPA_PROJET
					IF ALLTRIM(FQZ->FQZ_COD) == ALLTRIM(FPA->FPA_PRODUT) .AND. ALLTRIM(FQZ->FQZ_AS) == ALLTRIM(FPA->FPA_AS)
						IF FQZ->FQZ_MSBLQL == "2"

							SF1->(DBSETORDER(1))
							IF SF1->(DBSEEK(XFILIAL("SF1")+FQZ->FQZ_DOC+FQZ->FQZ_SERIE))
								IF SF1->F1_IT_ROMA == FQ2->FQ2_NUM
									SD1->(DBSETORDER(1))
									IF SD1->(DBSEEK(XFILIAL("SD1")+FQZ->FQZ_DOC+FQZ->FQZ_SERIE+SF1->F1_FORNECE + SF1->F1_LOJA+SUBSTR(FPA->FPA_PRODUT,1,TAMSX3("D1_COD")[1])+FQZ->FQZ_ITEM))						
										NRETORNA += SD1->D1_QUANT
									ENDIF
								ENDIF						
							ENDIF


							
						ENDIF
					ENDIF
					FQZ->(DBSKIP())
				ENDDO
			ENDIF			


		ENDIF

		//carrega array com itens

		FPA->(DBSETORDER(3))
		FPA->(DBSEEK(XFILIAL("FPA")+FQ3->FQ3_AS))

		Aadd(aProdAux,{}) //produtos
		
		SB1->(dbSetOrder(1))
		SB1->(dbSeek(xFilial("SB1")+FPA->FPA_PRODUT))

		Aadd(aProdAux[Len(aProdAux)],cProdAtu		) 	//aProdItem[X][1] - PRODUTO
		Aadd(aProdAux[Len(aProdAux)],CTEMP			) 	//aProdItem[X][2] - CTEMP
		Aadd(aProdAux[Len(aProdAux)],NRETORNA		) 	//aProdItem[X][3] - NRETORNA
		Aadd(aProdAux[Len(aProdAux)],CTEMP-NRETORNA	) 	//aProdItem[X][4] - CTEMP - NRETORNA
		Aadd(aProdAux[Len(aProdAux)],FPA->FPA_PRODUT) 	//aProdItem[X][5] - Código do produto
		Aadd(aProdAux[Len(aProdAux)],SB1->B1_DESC) 	    //aProdItem[X][6] - Descricao do produto
	
	EndIf

	FQ3->(DBSKIP())

ENDDO

//Proteção para não causar erro quando não é alterado o pergunte
If ValType(cImpResum) == "N"
	cImpResum := cValToChar(cImpResum)
EndIf
//Imprime resumido
If cImpResum == "1"

	//ordena itens
	aProdAux := aSort(aProdAux,,,{|x,y| x[5] < y[5] })

	//aglutina itens
	For nX := 1 To Len(aProdAux)
		
		If cProdAux <> aProdAux[nX][5]

			Aadd(aProdItem,{}) //produtos
			
			Aadd(aProdItem[Len(aProdItem)],aProdAux[nX][6]) 	//aProdItem[X][6] - Descricao do produto
			Aadd(aProdItem[Len(aProdItem)],aProdAux[nX][2]) 	//aProdItem[X][2] - CTEMP
			Aadd(aProdItem[Len(aProdItem)],aProdAux[nX][3]) 	//aProdItem[X][3] - NRETORNA
			Aadd(aProdItem[Len(aProdItem)],aProdAux[nX][4]) 	//aProdItem[X][4] - CTEMP - NRETORNA

			cProdAux := aProdAux[nX][5] 

		Else
			aProdItem[Len(aProdItem)][2] += aProdAux[nX][2] 	//aProdItem[X][2] - CTEMP
			aProdItem[Len(aProdItem)][3] += aProdAux[nX][3] 	//aProdItem[X][3] - NRETORNA
			aProdItem[Len(aProdItem)][4] += aProdAux[nX][4] 	//aProdItem[X][3] - CTEMP - NRETORNA
		EndIf

	Next nX

	//imprime os itens
	For nX := 1 To Len(aProdItem)
		NLIN += 5

		OREPORT:BOX( NLIN, NMINLEFT	   		, NLIN+15, NMAXWIDTH*0.10 )
		OREPORT:BOX( NLIN, NMAXWIDTH*0.10	, NLIN+15, NMAXWIDTH )
		OREPORT:BOX( NLIN, NMAXWIDTH*0.55	, NLIN+15, NMAXWIDTH )
		OREPORT:BOX( NLIN, NMAXWIDTH*0.70	, NLIN+15, NMAXWIDTH)
		OREPORT:BOX( NLIN, NMAXWIDTH*0.85	, NLIN+15, NMAXWIDTH)

		NLIN += 10

		cItem := Soma1(cItem)

		OREPORT:SAY( NLIN, NMINLEFT+05, 		cItem							, OFONT3:OFONT )
		OREPORT:SAY( NLIN, (NMAXWIDTH*0.10)+05, aProdItem[nX][1]				, OFONT3:OFONT )
		OREPORT:SAY( NLIN, (NMAXWIDTH*0.55)+30, ALLTRIM(STR(aProdItem[nX][2]))	, OFONT3:OFONT )
		OREPORT:SAY( NLIN, (NMAXWIDTH*0.70)+30, ALLTRIM(STR(aProdItem[nX][3]))	, OFONT3:OFONT )
		OREPORT:SAY( NLIN, (NMAXWIDTH*0.85)+30, ALLTRIM(STR(aProdItem[nX][4]))	, OFONT3:OFONT )

		IF NLIN > 700 .AND. !FQ3->(EOF())
			OREPORT:ENDPAGE()
			OREPORT:STARTPAGE()
			NLIN := 25
		ENDIF

	Next nX
EndIf

OREPORT:ENDPAGE()

OREPORT:SETVIEWPDF( .T. )
OREPORT:PREVIEW()
FREEOBJ(OREPORT)
OREPORT := NIL

RETURN
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³FUNCAO    ³ IMPROM   ³ AUTOR ³ IT UP BUSINESS      ³ DATA ³ 11/08/2016 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³DESCRICAO ³ DEFINICAO DO LAYOUT DO RELATORIO                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
STATIC FUNCTION IMPROM()

LOCAL   LADJUSTTOLEGACY := .F.
LOCAL   LDISABLESETUP   := .F.
LOCAL   CARQUIVO        := ""
LOCAL   _NX             := 0
LOCAL   CLOGO			:= ""
LOCAL   _CQUERY         := ""
LOCAL   _COBS           := ""
LOCAL   _LIMPAR		    := .T.
LOCAL   _AINSUMO		:= {}
LOCAL   CINSUMO		    := ""
LOCAL   LPASSOU         := .F.
LOCAL   I               := 0 

PRIVATE OREPORT             
PRIVATE NLIN            := 10
PRIVATE NLINOLD		    := 10
PRIVATE NLINMAX		    := 10
PRIVATE NMINLEFT        := 10
PRIVATE NMAXWIDTH       := 584
PRIVATE NMAXHEIGHT      := 2900
PRIVATE NMEIO		    := ((NMAXWIDTH+NMINLEFT)/2)

DO CASE
CASE ALLTRIM(FQ2->FQ2_TPROMA) == "0" 	// EXPEDIÇÃO
	CARQUIVO := STR0003 + ALLTRIM(FQ2->FQ2_NUM) + "_" + DTOS(DATE()) + ".PDF" //"CHECKLIST EXPEDIÇÃO "
CASE ALLTRIM(FQ2->FQ2_TPROMA) == "1" 	// RETORNO
	CARQUIVO := STR0005   + ALLTRIM(FQ2->FQ2_NUM) + "_" + DTOS(DATE()) + ".PDF" //"CHECKLIST RETORNO "
OTHERWISE
	CARQUIVO := STR0007           + ALLTRIM(FQ2->FQ2_NUM) + "_" + DTOS(DATE()) + ".PDF" //"CHECKLIST "
ENDCASE

OREPORT := FWMSPRINTER():NEW(CARQUIVO, 6, LADJUSTTOLEGACY,, LDISABLESETUP, , , , , , .F., )

OREPORT:SETPORTRAIT()
OREPORT:SETPAPERSIZE(9)
OREPORT:SETVIEWPDF(.T.)

OFONT1    := TFONTEX():NEW(OREPORT,"TIMES NEW ROMAN",14,14,.T.,.T.,.F.) 	// 1
OFONT2    := TFONTEX():NEW(OREPORT,"TIMES NEW ROMAN",12,12,.T.,.T.,.F.) 	// 1
OFONT3    := TFONTEX():NEW(OREPORT,"TIMES NEW ROMAN",10,10,.T.,.T.,.F.) 	// 1
OFONT4    := TFONTEX():NEW(OREPORT,"TIMES NEW ROMAN",08,08,.F.,.F.,.F.) 	// 1
OFONT5    := TFONTEX():NEW(OREPORT,"CAMBRIA"        ,06,06,.F.,.F.,.F.) 	// 1
OFONT6    := TFONTEX():NEW(OREPORT,"CAMBRIA"        ,08,08,.F.,.F.,.T.) 	// 1

// LOGO
CLOGO := GETSRVPROFSTRING("STARTPATH","") + "LOGOTECNOGERA.BMP"

OREPORT:STARTPAGE()

NLIN := 25 		// NLIN TOTAL: 25
//MONTA AS CAIXAS FIXAS
//CABEÇALHO
OREPORT:BOX( NLIN, NMINLEFT	   			, NLIN+50, NMINLEFT+105 		 )
OREPORT:BOX( NLIN, NMINLEFT+105			, NLIN+50, ((NMEIO+NMAXWIDTH)/2) )
OREPORT:BOX( NLIN, ((NMEIO+NMAXWIDTH)/2), NLIN+50, NMAXWIDTH 			 )

OREPORT:SAYBITMAP(NLIN+5,NMINLEFT+3,CLOGO,0098,0040 )

NLIN += 15 		// NLIN TOTAL: 40

DO CASE
CASE ALLTRIM(FQ2->FQ2_TPROMA) == "0" 	// EXPEDIÇÃO
	OREPORT:SAY( NLIN+15, NMINLEFT+200, STR0026, OFONT1:OFONT ) //"CHECK LIST EXPEDIÇÃO"
CASE ALLTRIM(FQ2->FQ2_TPROMA) == "1" 	// RETORNO
	OREPORT:SAY( NLIN+15, NMINLEFT+200, STR0027, OFONT1:OFONT ) //"CHECK LIST RETORNO"
OTHERWISE
	OREPORT:SAY( NLIN+15, NMINLEFT+200, STR0028, OFONT1:OFONT ) //"CHECK LIST"
ENDCASE

OREPORT:SAY( NLIN+15, ((NMEIO+NMAXWIDTH)/2)+15, STR0029 + ALLTRIM(FQ2->FQ2_NUM), OFONT2:OFONT ) //"CONTROLE Nº "

NLIN += 40 //NLIN TOTAL: 75
//INFORMAÇÕES DO CABEÇALHO
OREPORT:BOX( NLIN, NMINLEFT	  , NLIN+60, NMINLEFT+75 )
OREPORT:BOX( NLIN, NMINLEFT+75, NLIN+60, NMAXWIDTH   )

DO CASE
CASE ALLTRIM(FQ2->FQ2_TPROMA) == "0" 	// EXPEDIÇÃO
	OREPORT:SAY( NLIN+7, NMINLEFT+3, STR0030, OFONT4:OFONT ) //"DATA EXPEDIÇÃO: "
CASE ALLTRIM(FQ2->FQ2_TPROMA) == "1" 	// RETORNO
	OREPORT:SAY( NLIN+7, NMINLEFT+3, STR0031, OFONT4:OFONT ) //"DATA RETORNO: "
OTHERWISE
	OREPORT:SAY( NLIN+7, NMINLEFT+3, STR0011, OFONT4:OFONT ) //"DATA: "
ENDCASE

OREPORT:SAY( NLIN+7, NMINLEFT+80, DTOC(FQ2->FQ2_DATA), OFONT4:OFONT )
OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )

NLIN += 10 //NLIN TOTAL: 95

OREPORT:SAY( NLIN+7, NMINLEFT+3, STR0032, OFONT4:OFONT ) //"CLIENTE: "
OREPORT:SAY( NLIN+7, NMINLEFT+80, ALLTRIM(FQ2->FQ2_NOMCLI), OFONT4:OFONT )
OREPORT:SAY( NLIN+7, ((NMEIO+NMAXWIDTH)/2), STR0033, OFONT4:OFONT ) //"PEDIDO: "
OREPORT:SAY( NLIN+7, ((NMEIO+NMAXWIDTH)/2)+30, ALLTRIM(FQ2->FQ2_PEDIDO), OFONT4:OFONT )
OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )

NLIN += 10 //NLIN TOTAL: 105

OREPORT:SAY( NLIN+7, NMINLEFT+3, STR0034, OFONT4:OFONT ) //"NOTA FISCAL: "
OREPORT:SAY( NLIN+7, NMINLEFT+80, ALLTRIM(FQ2->FQ2_NFSER), OFONT4:OFONT )
OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )

NLIN += 10 //NLIN TOTAL: 115

OREPORT:SAY( NLIN+7, NMINLEFT+3, STR0035, OFONT4:OFONT ) //"VEÍCULO: "
OREPORT:SAY( NLIN+7, NMINLEFT+80, ALLTRIM(POSICIONE("DUT",1,XFILIAL("DUT") + FQ2->FQ2_TIPOVEI,"DUT_DESCRI")), OFONT4:OFONT )
OREPORT:SAY( NLIN+7, NMEIO, STR0017, OFONT4:OFONT ) //"PLACA: "
OREPORT:SAY( NLIN+7, NMEIO+30, ALLTRIM(FQ2->FQ2_PLACA), OFONT4:OFONT )
OREPORT:SAY( NLIN+7, ((NMEIO+NMAXWIDTH)/2), STR0017, OFONT4:OFONT ) //"PLACA: "
OREPORT:SAY( NLIN+7, ((NMEIO+NMAXWIDTH)/2)+30, ALLTRIM(FQ2->FQ2_PLACA2), OFONT4:OFONT )
OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )

NLIN += 10 //NLIN TOTAL: 125

OREPORT:SAY( NLIN+7, NMINLEFT+3, STR0036, OFONT4:OFONT ) //"MOTORISTA: "
OREPORT:SAY( NLIN+7, NMINLEFT+80, ALLTRIM(FQ2->FQ2_MOTORI), OFONT4:OFONT )
OREPORT:SAY( NLIN+7, ((NMEIO+NMAXWIDTH)/2), STR0037, OFONT4:OFONT ) //"RG/CPF: "
OREPORT:SAY( NLIN+7, ((NMEIO+NMAXWIDTH)/2)+30, ALLTRIM(FQ2->FQ2_CPFMOT), OFONT4:OFONT )
OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )

NLIN += 10 //NLIN TOTAL: 135

OREPORT:SAY( NLIN+7, NMINLEFT+3, STR0038, OFONT4:OFONT ) //"TRANSPORTADOR: "
OREPORT:SAY( NLIN+7, NMINLEFT+80, ALLTRIM(FQ2->FQ2_TRANSP), OFONT4:OFONT )
OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )

NLIN += 10 //NLIN TOTAL: 145

OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMAXWIDTH,"-1"   )
OREPORT:SAY( NLIN+10, NMEIO-22, "GERADOR", OFONT2:OFONT )

NLIN += 15 //NLIN TOTAL: 160

NLINOLD := NLIN

OREPORT:BOX( NLIN, NMINLEFT    , NLIN+10, NMINLEFT+110 )
OREPORT:BOX( NLIN, NMINLEFT+75 , NLIN+10, NMINLEFT+210  )
OREPORT:BOX( NLIN, NMINLEFT+210, NLIN+10, NMEIO        )

OREPORT:BOX( NLIN, NMEIO       , NLIN+10, NMEIO+75     )
OREPORT:BOX( NLIN, NMEIO+75    , NLIN+10, NMEIO+210    )
OREPORT:BOX( NLIN, NMEIO+210   , NLIN+10, NMAXWIDTH    )

OREPORT:SAY( NLIN+7, NMINLEFT+25 , "TECG"	  , OFONT3:OFONT )
OREPORT:SAY( NLIN+7, NMINLEFT+120 , STR0039, OFONT3:OFONT ) //"HORÍMETRO"
OREPORT:SAY( NLIN+7, NMINLEFT+240, STR0040	  , OFONT3:OFONT ) //"DIESEL"

OREPORT:SAY( NLIN+7, NMEIO+25 , "TECG"	   , OFONT3:OFONT )
OREPORT:SAY( NLIN+7, NMEIO+120 , STR0039, OFONT3:OFONT ) //"HORÍMETRO"
OREPORT:SAY( NLIN+7, NMEIO+240, STR0040   , OFONT3:OFONT ) //"DIESEL"

NLIN += 10 //NLIN TOTAL: 170

_LIMPAR := .T.

_CQUERY := " SELECT FQ3_CODBEM TECG, FQ3_HORREAL HORIMETRO, FQ3_QTDDIES DIESEL" + CRLF
_CQUERY += "   FROM " + RETSQLNAME("FQ3") + " SZ1" + CRLF
_CQUERY += "  WHERE FQ3_FILIAL = '" + XFILIAL("FQ3") + "'" + CRLF
_CQUERY += "    AND FQ3_NUM    = '" + ALLTRIM(FQ2->FQ2_NUM) + "'" + CRLF
_CQUERY += "    AND FQ3_ASF    = '" + ALLTRIM(FQ2->FQ2_ASF) + "'" + CRLF
_CQUERY += "    AND FQ3_FAMBEM IN ('" + STRTRAN(ALLTRIM(GETMV("MV_LOCX009")),";","','") + "')" + CRLF
_CQUERY += "    AND SZ1.D_E_L_E_T_ = ''" + CRLF
_CQUERY += "  ORDER BY FQ3_FILIAL, FQ3_NUM, FQ3_FAMBEM, FQ3_ITEM"

IF SELECT("TRBGER") > 0
	TRBGER->(DBCLOSEAREA())
ENDIF

_CQUERY := CHANGEQUERY(_CQUERY) 
TCQUERY _CQUERY NEW ALIAS "TRBGER"

FOR _NX := 1 TO 4
	OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
	OREPORT:LINE( NLIN, NMINLEFT+75, NLIN+10, NMINLEFT+75 )
	OREPORT:LINE( NLIN, NMINLEFT+210, NLIN+10, NMINLEFT+210 )
	OREPORT:LINE( NLIN, NMEIO, NLIN+10, NMEIO )
	OREPORT:LINE( NLIN, NMEIO+75, NLIN+10, NMEIO+75 )
	OREPORT:LINE( NLIN, NMEIO+210, NLIN+10, NMEIO+210 )
	NLIN += 10
NEXT

NLIN := NLINOLD + 10

IF TRBGER->(!EOF())
	WHILE TRBGER->(!EOF())
		OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
		OREPORT:LINE( NLIN, NMINLEFT+75, NLIN+10, NMINLEFT+75 )
		OREPORT:LINE( NLIN, NMINLEFT+210, NLIN+10, NMINLEFT+210 )
		OREPORT:LINE( NLIN, NMEIO, NLIN+10, NMEIO )
		OREPORT:LINE( NLIN, NMEIO+75, NLIN+10, NMEIO+75 )
		OREPORT:LINE( NLIN, NMEIO+210, NLIN+10, NMEIO+210 )
		IF _LIMPAR
			OREPORT:SAY( NLIN+7, NMINLEFT+3  , ALLTRIM(TRBGER->TECG)     , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMINLEFT+140 , ALLTRIM(CVALTOCHAR(TRBGER->HORIMETRO)), OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMINLEFT+250, ALLTRIM(CVALTOCHAR(TRBGER->DIESEL))   , OFONT4:OFONT )
		ELSE
			OREPORT:SAY( NLIN+7, NMEIO+3  , ALLTRIM(TRBGER->TECG)     , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMEIO+140 , ALLTRIM(CVALTOCHAR(TRBGER->HORIMETRO)), OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMEIO+250, ALLTRIM(CVALTOCHAR(TRBGER->DIESEL))   , OFONT4:OFONT )
			NLIN += 10
		ENDIF
		_LIMPAR := !_LIMPAR
		TRBGER->(DBSKIP())
	ENDDO
	IF !_LIMPAR
		NLIN += 10
	ENDIF
ENDIF

TRBGER->(DBCLOSEAREA())

IF NLIN < NLINOLD + 50
	NLIN := NLINOLD + 50
ENDIF

OREPORT:LINE( NLINOLD, NMINLEFT, NLIN, NMINLEFT,,"-1" )
OREPORT:LINE( NLINOLD, NMEIO, NLIN, NMEIO,,"-1" )
OREPORT:LINE( NLINOLD, NMAXWIDTH, NLIN, NMAXWIDTH,,"-1" )

OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMAXWIDTH,"-1"   )
OREPORT:SAY( NLIN+10, NMEIO-15, STR0041, OFONT2:OFONT ) //"CABOS"

NLIN += 15

NLINOLD := NLIN

OREPORT:BOX( NLIN, NMINLEFT, NLIN+10, NMINLEFT+35   )
OREPORT:BOX( NLIN, NMINLEFT+35, NLIN+10, NMEIO-50 )
OREPORT:BOX( NLIN, NMEIO-50, NLIN+10, NMEIO )

OREPORT:BOX( NLIN, NMEIO, NLIN+10, NMEIO+35   )
OREPORT:BOX( NLIN, NMEIO+35, NLIN+10, NMAXWIDTH-50 )
OREPORT:BOX( NLIN, NMAXWIDTH-50, NLIN+10, NMAXWIDTH )

OREPORT:SAY( NLIN+7, NMINLEFT+10 , STR0042   , OFONT3:OFONT ) //"QTD"
OREPORT:SAY( NLIN+7, NMINLEFT+115 , STR0043, OFONT3:OFONT ) //"MODELO"
OREPORT:SAY( NLIN+7, NMEIO-40, STR0044, OFONT3:OFONT ) //"METROS"

OREPORT:SAY( NLIN+7, NMEIO+10 , STR0042	, OFONT3:OFONT ) //"QTD"
OREPORT:SAY( NLIN+7, NMEIO+115 , STR0043, OFONT3:OFONT ) //"MODELO"
OREPORT:SAY( NLIN+7, NMAXWIDTH-40, STR0044, OFONT3:OFONT ) //"METROS"

NLIN += 10

_LIMPAR := .T.

_CQUERY := " SELECT COUNT(*) QTD, ISNULL(T9_NOME,'') MODELO, '' METROS" + CRLF
_CQUERY += "   FROM " + RETSQLNAME("FQ3") + " SZ1 LEFT JOIN " + RETSQLNAME("ST9") + " ST9" + CRLF
_CQUERY += "     ON T9_FILIAL = '" + XFILIAL("ST9") + "'" + CRLF
_CQUERY += "    AND T9_CODBEM = FQ3_CODBEM" + CRLF
_CQUERY += "    AND ST9.D_E_L_E_T_ = ''" + CRLF
_CQUERY += "  WHERE FQ3_FILIAL = '" + XFILIAL("FQ3") + "'" + CRLF
_CQUERY += "    AND FQ3_NUM    = '" + ALLTRIM(FQ2->FQ2_NUM) + "'" + CRLF
_CQUERY += "    AND FQ3_ASF    = '" + ALLTRIM(FQ2->FQ2_ASF) + "'" + CRLF
_CQUERY += "    AND FQ3_FAMBEM IN ('" + STRTRAN(ALLTRIM(GETMV("MV_LOCX010")),";","','") + "')" + CRLF
_CQUERY += "    AND SZ1.D_E_L_E_T_ = ''" + CRLF
_CQUERY += "  GROUP BY T9_NOME" + CRLF
_CQUERY += "  ORDER BY MODELO"

IF SELECT("TRBCAB") > 0
	TRBCAB->(DBCLOSEAREA())
ENDIF

_CQUERY := CHANGEQUERY(_CQUERY) 
TCQUERY _CQUERY NEW ALIAS "TRBCAB"

FOR _NX := 1 TO 4
	OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
	OREPORT:LINE( NLIN, NMINLEFT+35, NLIN+10, NMINLEFT+35 )
	OREPORT:LINE( NLIN, NMEIO-50, NLIN+10, NMEIO-50 )
	OREPORT:LINE( NLIN, NMEIO, NLIN+10, NMEIO )
	OREPORT:LINE( NLIN, NMEIO+35, NLIN+10, NMEIO+35 )
	OREPORT:LINE( NLIN, NMAXWIDTH-50, NLIN+10, NMAXWIDTH-50 )
	NLIN += 10
NEXT

NLIN := NLINOLD + 10

IF TRBCAB->(!EOF())
	WHILE TRBCAB->(!EOF())
		OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
		OREPORT:LINE( NLIN, NMINLEFT+35, NLIN+10, NMINLEFT+35 )
		OREPORT:LINE( NLIN, NMEIO-50, NLIN+10, NMEIO-50 )
		OREPORT:LINE( NLIN, NMEIO, NLIN+10, NMEIO )
		OREPORT:LINE( NLIN, NMEIO+35, NLIN+10, NMEIO+35 )
		OREPORT:LINE( NLIN, NMAXWIDTH-50, NLIN+10, NMAXWIDTH-50 )
		IF _LIMPAR
			OREPORT:SAY( NLIN+7, NMINLEFT+15 , ALLTRIM(CVALTOCHAR(TRBCAB->QTD))   , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMINLEFT+38, ALLTRIM(TRBCAB->MODELO), OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMINLEFT+214, ALLTRIM(TRBCAB->METROS), OFONT4:OFONT )
		ELSE
			OREPORT:SAY( NLIN+7, NMEIO+15 , ALLTRIM(CVALTOCHAR(TRBCAB->QTD))   , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMEIO+38, ALLTRIM(TRBCAB->MODELO), OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMEIO+214, ALLTRIM(TRBCAB->METROS), OFONT4:OFONT )
			NLIN += 10
		ENDIF
		_LIMPAR := !_LIMPAR
		TRBCAB->(DBSKIP())
	ENDDO
	IF !_LIMPAR
		NLIN += 10
	ENDIF
ENDIF

TRBCAB->(DBCLOSEAREA())

IF NLIN < NLINOLD + 50
	NLIN := NLINOLD + 50
ENDIF

OREPORT:LINE( NLINOLD, NMINLEFT, NLIN, NMINLEFT,,"-1" )
OREPORT:LINE( NLINOLD, NMEIO, NLIN, NMEIO,,"-1" )
OREPORT:LINE( NLINOLD, NMAXWIDTH, NLIN, NMAXWIDTH,,"-1" )

OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMEIO,"-1"   )
OREPORT:BOX( NLIN, NMEIO, NLIN+15, NMAXWIDTH,"-1"   )
OREPORT:SAY( NLIN+10, ((NMINLEFT+NMEIO)/2)-30, STR0045, OFONT2:OFONT ) //"QTA / QTM"
OREPORT:SAY( NLIN+10, ((NMEIO+NMAXWIDTH)/2)-30, STR0046, OFONT2:OFONT ) //"TRANSFORMADOR"

NLIN += 15

NLINOLD := NLIN

OREPORT:BOX( NLIN, NMINLEFT, NLIN+10, ((NMINLEFT+NMEIO)/2)-50   )
OREPORT:BOX( NLIN, ((NMINLEFT+NMEIO)/2)-50, NLIN+10, (NMINLEFT+NMEIO)/2 )
OREPORT:BOX( NLIN, (NMINLEFT+NMEIO)/2, NLIN+10, NMEIO-50 )
OREPORT:BOX( NLIN, NMEIO-50, NLIN+10, NMEIO )

OREPORT:BOX( NLIN, NMEIO, NLIN+10, ((NMEIO+NMAXWIDTH)/2)-50   )
OREPORT:BOX( NLIN, ((NMEIO+NMAXWIDTH)/2)-50, NLIN+10, (NMEIO+NMAXWIDTH)/2 )
OREPORT:BOX( NLIN, (NMEIO+NMAXWIDTH)/2, NLIN+10, NMAXWIDTH-50 )
OREPORT:BOX( NLIN, NMAXWIDTH-50, NLIN+10, NMAXWIDTH )

OREPORT:SAY( NLIN+7, NMINLEFT+25 , STR0047, OFONT3:OFONT ) //"PATRIMÔNIO"
OREPORT:SAY( NLIN+7, NMINLEFT+110 , STR0048, OFONT3:OFONT ) //"AMP"
OREPORT:SAY( NLIN+7, NMINLEFT+165, STR0047, OFONT3:OFONT ) //"PATRIMÔNIO"
OREPORT:SAY( NLIN+7, NMEIO-35, STR0048, OFONT3:OFONT ) //"AMP"

OREPORT:SAY( NLIN+7, NMEIO+25 , STR0047, OFONT3:OFONT ) //"PATRIMÔNIO"
OREPORT:SAY( NLIN+7, NMEIO+110 , STR0049, OFONT3:OFONT ) //"KVA"
OREPORT:SAY( NLIN+7, NMEIO+165, STR0047, OFONT3:OFONT ) //"PATRIMÔNIO"
OREPORT:SAY( NLIN+7, NMAXWIDTH-35, STR0049, OFONT3:OFONT ) //"KVA"

NLIN += 10

_LIMPAR := .T.

_CQUERY := " SELECT FQ3_CODBEM PATRIMONIO, FQ3_AMP AMP" + CRLF
_CQUERY += "   FROM " + RETSQLNAME("FQ3") + " SZ1" + CRLF
_CQUERY += "  WHERE FQ3_FILIAL = '" + XFILIAL("FQ3") + "'" + CRLF
_CQUERY += "    AND FQ3_NUM    = '" + ALLTRIM(FQ2->FQ2_NUM) + "'" + CRLF
_CQUERY += "    AND FQ3_ASF    = '" + ALLTRIM(FQ2->FQ2_ASF) + "'" + CRLF
_CQUERY += "    AND FQ3_FAMBEM IN ('" + STRTRAN(ALLTRIM(GETMV("MV_LOCX011")),";","','") + "')" + CRLF
_CQUERY += "    AND SZ1.D_E_L_E_T_ = ''" + CRLF
_CQUERY += "  ORDER BY PATRIMONIO, FQ3_ITEM"

IF SELECT("TRBQT") > 0
	TRBQT->(DBCLOSEAREA())
ENDIF

_CQUERY := CHANGEQUERY(_CQUERY) 
TCQUERY _CQUERY NEW ALIAS "TRBQT"

FOR _NX := 1 TO 4
	OREPORT:LINE( NLIN, NMINLEFT   , NLIN, NMAXWIDTH )
	OREPORT:LINE( NLIN, ((NMINLEFT+NMEIO)/2)-50, NLIN+10, ((NMINLEFT+NMEIO)/2)-50 )
	OREPORT:LINE( NLIN, (NMINLEFT+NMEIO)/2, NLIN+10, (NMINLEFT+NMEIO)/2 )
	OREPORT:LINE( NLIN, NMEIO-50, NLIN+10, NMEIO-50 )
	OREPORT:LINE( NLIN, NMEIO, NLIN+10, NMEIO )
	OREPORT:LINE( NLIN, ((NMEIO+NMAXWIDTH)/2)-50, NLIN+10, ((NMEIO+NMAXWIDTH)/2)-50 )
	OREPORT:LINE( NLIN, (NMEIO+NMAXWIDTH)/2, NLIN+10, (NMEIO+NMAXWIDTH)/2 )
	OREPORT:LINE( NLIN, NMAXWIDTH-50, NLIN+10, NMAXWIDTH-50 )
	NLIN += 10
NEXT

NLIN := NLINOLD + 10

IF TRBQT->(!EOF())
	WHILE TRBQT->(!EOF())
		OREPORT:LINE( NLIN, NMINLEFT   , NLIN, NMAXWIDTH )
		OREPORT:LINE( NLIN, ((NMINLEFT+NMEIO)/2)-50, NLIN+10, ((NMINLEFT+NMEIO)/2)-50 )
		OREPORT:LINE( NLIN, (NMINLEFT+NMEIO)/2, NLIN+10, (NMINLEFT+NMEIO)/2 )
		OREPORT:LINE( NLIN, NMEIO-50, NLIN+10, NMEIO-50 )
		OREPORT:LINE( NLIN, NMEIO, NLIN+10, NMEIO )
		OREPORT:LINE( NLIN, ((NMEIO+NMAXWIDTH)/2)-50, NLIN+10, ((NMEIO+NMAXWIDTH)/2)-50 )
		OREPORT:LINE( NLIN, (NMEIO+NMAXWIDTH)/2, NLIN+10, (NMEIO+NMAXWIDTH)/2 )
		OREPORT:LINE( NLIN, NMAXWIDTH-50, NLIN+10, NMAXWIDTH-50 )
		IF _LIMPAR
			OREPORT:SAY( NLIN+7, NMINLEFT+3  , ALLTRIM(TRBQT->PATRIMONIO) , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMINLEFT+115 , ALLTRIM(CVALTOCHAR(TRBQT->AMP)), OFONT4:OFONT )
		ELSE
			OREPORT:SAY( NLIN+7, NMINLEFT+168 , ALLTRIM(TRBQT->PATRIMONIO) , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMEIO-30, ALLTRIM(CVALTOCHAR(TRBQT->AMP)), OFONT4:OFONT )
			NLIN += 10
		ENDIF
		_LIMPAR := !_LIMPAR
		TRBQT->(DBSKIP())
	ENDDO
	IF !_LIMPAR
		NLIN += 10
	ENDIF
ENDIF

TRBQT->(DBCLOSEAREA())

IF NLIN < NLINOLD + 50
	NLIN := NLINOLD + 50
ENDIF

NLINMAX := NLIN

NLIN := NLINOLD+10

_LIMPAR := .T.

_CQUERY := " SELECT FQ3_CODBEM PATRIMONIO, FQ3_KVA KVA" + CRLF
_CQUERY += "   FROM " + RETSQLNAME("FQ3") + " SZ1" + CRLF
_CQUERY += "  WHERE FQ3_FILIAL = '" + XFILIAL("FQ3") + "'" + CRLF
_CQUERY += "    AND FQ3_NUM    = '" + ALLTRIM(FQ2->FQ2_NUM) + "'" + CRLF
_CQUERY += "    AND FQ3_ASF    = '" + ALLTRIM(FQ2->FQ2_ASF) + "'" + CRLF
_CQUERY += "    AND FQ3_FAMBEM IN ('" + STRTRAN(ALLTRIM(GETMV("MV_LOCX012")),";","','") + "')" + CRLF
_CQUERY += "    AND SZ1.D_E_L_E_T_ = ''" + CRLF
_CQUERY += "  ORDER BY PATRIMONIO, FQ3_ITEM"

IF SELECT("TRBTRA") > 0
	TRBTRA->(DBCLOSEAREA())
ENDIF

_CQUERY := CHANGEQUERY(_CQUERY) 
TCQUERY _CQUERY NEW ALIAS "TRBTRA"

IF TRBTRA->(!EOF())
	WHILE TRBTRA->(!EOF())
		OREPORT:LINE( NLIN, NMINLEFT   , NLIN, NMAXWIDTH )
		OREPORT:LINE( NLIN, ((NMINLEFT+NMEIO)/2)-50, NLIN+10, ((NMINLEFT+NMEIO)/2)-50 )
		OREPORT:LINE( NLIN, (NMINLEFT+NMEIO)/2, NLIN+10, (NMINLEFT+NMEIO)/2 )
		OREPORT:LINE( NLIN, NMEIO-50, NLIN+10, NMEIO-50 )
		OREPORT:LINE( NLIN, NMEIO, NLIN+10, NMEIO )
		OREPORT:LINE( NLIN, ((NMEIO+NMAXWIDTH)/2)-50, NLIN+10, ((NMEIO+NMAXWIDTH)/2)-50 )
		OREPORT:LINE( NLIN, (NMEIO+NMAXWIDTH)/2, NLIN+10, (NMEIO+NMAXWIDTH)/2 )
		OREPORT:LINE( NLIN, NMAXWIDTH-50, NLIN+10, NMAXWIDTH-50 )
		IF _LIMPAR
			OREPORT:SAY( NLIN+7, NMEIO+3  , ALLTRIM(TRBTRA->PATRIMONIO) , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMEIO+115 , ALLTRIM(CVALTOCHAR(TRBTRA->KVA)), OFONT4:OFONT )
		ELSE
			OREPORT:SAY( NLIN+7, NMEIO+168 , ALLTRIM(TRBTRA->PATRIMONIO) , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMAXWIDTH-30, ALLTRIM(CVALTOCHAR(TRBTRA->KVA)), OFONT4:OFONT )
			NLIN += 10
		ENDIF
		_LIMPAR := !_LIMPAR
		TRBTRA->(DBSKIP())
	ENDDO
	IF !_LIMPAR
		NLIN += 10
	ENDIF
ENDIF

TRBTRA->(DBCLOSEAREA())

IF NLINMAX > NLIN
	NLIN := NLINMAX
ENDIF

OREPORT:LINE( NLINOLD, NMINLEFT, NLIN, NMINLEFT,,"-1" )
OREPORT:LINE( NLINOLD, NMEIO, NLIN, NMEIO,,"-1" )
OREPORT:LINE( NLINOLD, NMAXWIDTH, NLIN, NMAXWIDTH,,"-1" )

OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMAXWIDTH,"-1"   )
OREPORT:SAY( NLIN+10, NMEIO-60, STR0050, OFONT2:OFONT ) //"ACESSÓRIOS DIVERSOS"

NLIN += 15

NLINOLD := NLIN

OREPORT:BOX( NLIN, NMINLEFT, NLIN+10, NMINLEFT+35   )
OREPORT:BOX( NLIN, NMINLEFT+35, NLIN+10, NMINLEFT+210 )
OREPORT:BOX( NLIN, NMINLEFT+210, NLIN+10, NMEIO )

OREPORT:BOX( NLIN, NMEIO, NLIN+10, NMEIO+35   )
OREPORT:BOX( NLIN, NMEIO+35, NLIN+10, NMEIO+210 )
OREPORT:BOX( NLIN, NMEIO+210, NLIN+10, NMAXWIDTH )

OREPORT:SAY( NLIN+7, NMINLEFT+10 , STR0042   , OFONT3:OFONT ) //"QTD"
OREPORT:SAY( NLIN+7, NMINLEFT+95 , STR0051, OFONT3:OFONT ) //"EQUIPAMENTO"
OREPORT:SAY( NLIN+7, NMINLEFT+225, STR0047, OFONT3:OFONT ) //"PATRIMÔNIO"

OREPORT:SAY( NLIN+7, NMEIO+10 , STR0042	, OFONT3:OFONT ) //"QTD"
OREPORT:SAY( NLIN+7, NMEIO+95 , STR0051, OFONT3:OFONT ) //"EQUIPAMENTO"
OREPORT:SAY( NLIN+7, NMEIO+225, STR0047, OFONT3:OFONT ) //"PATRIMÔNIO"

NLIN += 10

_LIMPAR := .T.

_CQUERY := " SELECT COUNT(*) QTD, ISNULL(T9_NOME,'') EQUIPAMENTO, FQ3_CODBEM PATRIMONIO" + CRLF
_CQUERY += "   FROM " + RETSQLNAME("FQ3") + " SZ1 LEFT JOIN " + RETSQLNAME("ST9") + " ST9" + CRLF
_CQUERY += "     ON T9_FILIAL = '" + XFILIAL("ST9") + "'" + CRLF
_CQUERY += "    AND T9_CODBEM = FQ3_CODBEM" + CRLF
_CQUERY += "    AND ST9.D_E_L_E_T_ = ''" + CRLF
_CQUERY += "  WHERE FQ3_FILIAL = '" + XFILIAL("FQ3") + "'" + CRLF
_CQUERY += "    AND FQ3_NUM    = '" + ALLTRIM(FQ2->FQ2_NUM) + "'" + CRLF
_CQUERY += "    AND FQ3_ASF    = '" + ALLTRIM(FQ2->FQ2_ASF) + "'" + CRLF
_CQUERY += "    AND FQ3_FAMBEM IN ('" + STRTRAN(ALLTRIM(GETMV("MV_LOCX013")),";","','") + "')" + CRLF
_CQUERY += "    AND SZ1.D_E_L_E_T_ = ''" + CRLF
_CQUERY += "  GROUP BY T9_NOME, FQ3_CODBEM" + CRLF
_CQUERY += "  ORDER BY PATRIMONIO"

IF SELECT("TRBDIV") > 0
	TRBDIV->(DBCLOSEAREA())
ENDIF

_CQUERY := CHANGEQUERY(_CQUERY) 
TCQUERY _CQUERY NEW ALIAS "TRBDIV"

FOR _NX := 1 TO 4
	OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
	OREPORT:LINE( NLIN, NMINLEFT+35, NLIN+10, NMINLEFT+35 )
	OREPORT:LINE( NLIN, NMINLEFT+210, NLIN+10, NMINLEFT+210 )
	OREPORT:LINE( NLIN, NMEIO, NLIN+10, NMEIO )
	OREPORT:LINE( NLIN, NMEIO+35, NLIN+10, NMEIO+35 )
	OREPORT:LINE( NLIN, NMEIO+210, NLIN+10, NMEIO+210 )
	NLIN += 10
NEXT

NLIN := NLINOLD + 10

IF TRBDIV->(!EOF())
	WHILE TRBDIV->(!EOF())
		OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
		OREPORT:LINE( NLIN, NMINLEFT+35, NLIN+10, NMINLEFT+35 )
		OREPORT:LINE( NLIN, NMINLEFT+210, NLIN+10, NMINLEFT+210 )
		OREPORT:LINE( NLIN, NMEIO, NLIN+10, NMEIO )
		OREPORT:LINE( NLIN, NMEIO+35, NLIN+10, NMEIO+35 )
		OREPORT:LINE( NLIN, NMEIO+210, NLIN+10, NMEIO+210 )
		IF _LIMPAR
			OREPORT:SAY( NLIN+7, NMINLEFT+15 , ALLTRIM(CVALTOCHAR(TRBDIV->QTD))   , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMINLEFT+38 , ALLTRIM(TRBDIV->EQUIPAMENTO), OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMINLEFT+214, ALLTRIM(TRBDIV->PATRIMONIO), OFONT4:OFONT )
		ELSE
			OREPORT:SAY( NLIN+7, NMEIO+15 , ALLTRIM(CVALTOCHAR(TRBDIV->QTD))   , OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMEIO+38 , ALLTRIM(TRBDIV->EQUIPAMENTO), OFONT4:OFONT )
			OREPORT:SAY( NLIN+7, NMEIO+214, ALLTRIM(TRBDIV->PATRIMONIO), OFONT4:OFONT )
			NLIN += 10
		ENDIF
		_LIMPAR := !_LIMPAR
		TRBDIV->(DBSKIP())
	ENDDO
	IF !_LIMPAR
		NLIN += 10
	ENDIF
ENDIF

TRBDIV->(DBCLOSEAREA())

IF NLIN < NLINOLD + 50
	NLIN := NLINOLD + 50
ENDIF

OREPORT:LINE( NLINOLD, NMINLEFT, NLIN, NMINLEFT,,"-1" )
OREPORT:LINE( NLINOLD, NMEIO, NLIN, NMEIO,,"-1" )
OREPORT:LINE( NLINOLD, NMAXWIDTH, NLIN, NMAXWIDTH,,"-1" )

OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMAXWIDTH,"-1"   )
OREPORT:SAY( NLIN+10, NMEIO-60, STR0052, OFONT2:OFONT ) //"OBSERVAÇÕES GERAIS"

NLIN += 15

NLINOLD := NLIN

_COBS := ALLTRIM(FQ2->FQ2_OBS)
XT  := MLCOUNT(_COBS,155)
FOR I:=1 TO XT
	IF NLIN > 805
       OREPORT:LINE( NLINOLD, NMINLEFT, NLIN, NMINLEFT )
       OREPORT:LINE( NLINOLD, NMAXWIDTH, NLIN, NMAXWIDTH )
       OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
       OREPORT:ENDPAGE()	
       OREPORT:STARTPAGE()
       NLIN := 25
	   OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMAXWIDTH,"-1"   )
	   OREPORT:SAY( NLIN+10, NMEIO-60, STR0052, OFONT2:OFONT )       	 //"OBSERVAÇÕES GERAIS"
	   LPASSOU := .T.
	   NLIN += 15
	ENDIF
    OREPORT:LINE( NLIN+10, NMINLEFT, NLIN, NMINLEFT )
    OREPORT:LINE( NLIN+10, NMAXWIDTH, NLIN, NMAXWIDTH )
	OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
	OREPORT:SAY( NLIN+7, NMINLEFT+3, MEMOLINE(_COBS,155, I ), OFONT4:OFONT )
	NLIN += 10
NEXT                               

_CQUERY := " SELECT FQ3_PROD , FQ3_DESPROD, SUM(FQ3_QTD) FQ3_QTD "  + CRLF
_CQUERY += " FROM " + RETSQLNAME("FQ3") + " SZ1"                + CRLF
_CQUERY += " WHERE  FQ3_FILIAL = '" + XFILIAL("FQ3")+ "'"        + CRLF
_CQUERY += "    AND FQ3_NUM    = '" + ALLTRIM(FQ2->FQ2_NUM) + "'" + CRLF
_CQUERY += "    AND FQ3_ASF    = '" + ALLTRIM(FQ2->FQ2_ASF) + "'" + CRLF
_CQUERY += "    AND FQ3_ORDEM  <> '' "                           + CRLF
_CQUERY += "    AND SZ1.D_E_L_E_T_ = ''" + CRLF
_CQUERY += "  GROUP BY FQ3_PROD, FQ3_DESPROD" + CRLF
_CQUERY += "  ORDER BY FQ3_PROD"

IF SELECT("TRBINS") > 0
	TRBINS->(DBCLOSEAREA())
ENDIF

_CQUERY := CHANGEQUERY(_CQUERY) 
TCQUERY _CQUERY NEW ALIAS "TRBINS"

IF TRBINS->(EOF())
   FOR _NX := XT TO 5
	   OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
	   NLIN += 10
   NEXT
ELSE 
   WHILE TRBINS->(!EOF())
      CINSUMO := ALLTRIM(TRBINS->FQ3_PROD) + " - " + ALLTRIM(TRBINS->FQ3_DESPROD) + " - QTD: " + ALLTRIM(STR(TRBINS->FQ3_QTD))
      AADD(_AINSUMO, CINSUMO)
      TRBINS->(DBSKIP())
   ENDDO
   FOR _NX := 1 TO LEN(_AINSUMO)
	   IF NLIN > 805
          OREPORT:LINE( NLINOLD, NMINLEFT, NLIN, NMINLEFT )
          OREPORT:LINE( NLINOLD, NMAXWIDTH, NLIN, NMAXWIDTH )
	      OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )
	      OREPORT:ENDPAGE()	
	      OREPORT:STARTPAGE()
	      NLIN := 25
		  OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMAXWIDTH,"-1"   )
		  OREPORT:SAY( NLIN+10, NMEIO-60, STR0052, OFONT2:OFONT )       	 //"OBSERVAÇÕES GERAIS"
		  LPASSOU := .T.
		  NLIN += 15
	   ENDIF
       OREPORT:LINE( NLIN+10, NMINLEFT, NLIN, NMINLEFT )
       OREPORT:LINE( NLIN+10, NMAXWIDTH, NLIN, NMAXWIDTH )	   
	   OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )   
       OREPORT:SAY( NLIN+7, NMINLEFT+3, _AINSUMO[_NX], OFONT4:OFONT )
	   NLIN += 10
   NEXT     
ENDIF                   
TRBINS->(DBCLOSEAREA())

IF NLIN > 700
   OREPORT:LINE( NLIN, NMINLEFT, NLIN, NMAXWIDTH )   
   OREPORT:ENDPAGE()
   OREPORT:STARTPAGE()
   NLIN := 25
   FRODAPE()
ELSE
   FRODAPE()
ENDIF

OREPORT:ENDPAGE()

OREPORT:SETVIEWPDF( .T. )
OREPORT:PREVIEW()
FREEOBJ(OREPORT)
OREPORT := NIL

RETURN



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ PERGPARAM º AUTOR ³ IT UP BUSINESS     º DATA ³ 11/08/2016 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ PERGUNTA DO RELATÓRIO.                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
STATIC FUNCTION PERGPARAM(CPERG)

LOCAL APERGS  := {}
LOCAL _CAS	  := IIF(FIELDPOS("FQ5_AS")>0,SPACE(GETSX3CACHE("FQ5_AS","X3_TAMANHO")),SPACE(27))
LOCAL ARET    := {}
LOCAL LRET    := .F.

AADD( APERGS ,{1,STR0053 ,_CAS,"@!",'.T.',"DTQAS"  ,'.T.', 50,.F.}) //"ASF: "

IF PARAMBOX(APERGS ,STR0054,ARET, /*4*/, /*5*/, /*6*/, /*7*/, /*8*/, /*9*/, /*10*/, .F.) //"PARAMETROS "
	MV_PAR01 := ARET[1] //AS
	LRET     := .T. 
ENDIF

RETURN (LRET)




// ======================================================================= \\
STATIC FUNCTION FRODAPE()
// ======================================================================= \\

OREPORT:BOX( NLIN, NMINLEFT, NLIN+23, NMAXWIDTH,"-1"   )
OREPORT:SAY( NLIN+10, NMINLEFT+10, STR0055, OFONT5:OFONT ) //"CERTIFICAMOS QUE OS MATERIAIS ACIMA FORAM CARREGADOS/EXPEDIDOS CONFORME CONFERÊNCIA FÍSICA PELO COLABORADOR ABAIXO, SABENDO QUE APÓS ESTE PROCESSO, QUALQUER DANO OU PERDA"
NLIN += 07
OREPORT:SAY( NLIN+10, NMEIO-70, STR0056, OFONT5:OFONT ) //"SERÁ DE TOTAL RESPONSABILIDADE DO ÚLTIMO RECEBEDOR."
NLIN += 15

OREPORT:BOX( NLIN, NMINLEFT, NLIN+10, NMEIO   )
OREPORT:BOX( NLIN, NMEIO, NLIN+10, NMEIO+75   )
OREPORT:BOX( NLIN, NMEIO+75, NLIN+10, NMEIO+150 )
OREPORT:BOX( NLIN, NMEIO+150, NLIN+10, NMAXWIDTH )

OREPORT:SAY( NLIN+7, NMINLEFT+30, STR0057, OFONT3:OFONT ) //"EXPEDITOR / CONFERENTE"
OREPORT:SAY( NLIN+7, NMEIO+27, STR0058, OFONT3:OFONT ) //"DATA"
OREPORT:SAY( NLIN+7, NMEIO+100, STR0059, OFONT3:OFONT ) //"HORA"
OREPORT:SAY( NLIN+7, NMEIO+190, STR0060, OFONT3:OFONT ) //"ASSINATURA"

NLIN += 10                             

OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMEIO   )
OREPORT:BOX( NLIN, NMEIO, NLIN+15, NMEIO+75   )
OREPORT:BOX( NLIN, NMEIO+75, NLIN+15, NMEIO+150 )
OREPORT:BOX( NLIN, NMEIO+150, NLIN+15, NMAXWIDTH )

NLIN += 15

OREPORT:BOX( NLIN, NMINLEFT, NLIN+10, NMEIO   )
OREPORT:BOX( NLIN, NMEIO, NLIN+10, NMEIO+75   )
OREPORT:BOX( NLIN, NMEIO+75, NLIN+10, NMEIO+150 )
OREPORT:BOX( NLIN, NMEIO+150, NLIN+10, NMAXWIDTH )

OREPORT:SAY( NLIN+7, NMINLEFT+30, STR0061, OFONT3:OFONT ) //"MOTORISTA"
OREPORT:SAY( NLIN+7, NMEIO+27, STR0058, OFONT3:OFONT ) //"DATA"
OREPORT:SAY( NLIN+7, NMEIO+100, STR0059, OFONT3:OFONT ) //"HORA"
OREPORT:SAY( NLIN+7, NMEIO+190, STR0060, OFONT3:OFONT ) //"ASSINATURA"

NLIN += 10

OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMEIO   )
OREPORT:BOX( NLIN, NMEIO, NLIN+15, NMEIO+75   )
OREPORT:BOX( NLIN, NMEIO+75, NLIN+15, NMEIO+150 )
OREPORT:BOX( NLIN, NMEIO+150, NLIN+15, NMAXWIDTH )

NLIN += 15

OREPORT:BOX( NLIN, NMINLEFT, NLIN+10, NMEIO   )
OREPORT:BOX( NLIN, NMEIO, NLIN+10, NMEIO+75   )
OREPORT:BOX( NLIN, NMEIO+75, NLIN+10, NMEIO+150 )
OREPORT:BOX( NLIN, NMEIO+150, NLIN+10, NMAXWIDTH )

OREPORT:SAY( NLIN+7, NMINLEFT+30, STR0062, OFONT3:OFONT ) //"CLIENTE"
OREPORT:SAY( NLIN+7, NMEIO+27, STR0058, OFONT3:OFONT ) //"DATA"
OREPORT:SAY( NLIN+7, NMEIO+100, STR0059, OFONT3:OFONT ) //"HORA"
OREPORT:SAY( NLIN+7, NMEIO+190, STR0060, OFONT3:OFONT ) //"ASSINATURA"

NLIN += 10

OREPORT:BOX( NLIN, NMINLEFT, NLIN+15, NMEIO   )
OREPORT:BOX( NLIN, NMEIO, NLIN+15, NMEIO+75   )
OREPORT:BOX( NLIN, NMEIO+75, NLIN+15, NMEIO+150 )
OREPORT:BOX( NLIN, NMEIO+150, NLIN+15, NMAXWIDTH )

NLIN += 15

OREPORT:SAY( NLIN+7, ((NMINLEFT+NMEIO)/2)-60, STR0063, OFONT6:OFONT ) //"VIA 1 = EXPEDIÇÃO"
OREPORT:SAY( NLIN+7, NMEIO-40, STR0064, OFONT6:OFONT ) //"VIA 2 = MOTORISTA"
OREPORT:SAY( NLIN+7, ((NMEIO+NMAXWIDTH)/2)-20, STR0065, OFONT6:OFONT ) //"VIA 3 = CLIENTE"

RETURN 
