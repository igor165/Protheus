#INCLUDE "PROTHEUS.CH"  
#INCLUDE "TOPCONN.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "TBICONN.CH"

/*/{PROTHEUS.DOC} JOBITNF
ITUP BUSINESS - TOTVS RENTAL
ESTA FUNçãO TEM POR FINALIDADE A GERAçãO DAS NOTAS DE SAíDA PARA A INTEGRAçãO DO RM.
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 28/12/2020
@VERSION P12
/*/
              
FUNCTION LOCA074(_CEMPX, _CFILX)
LOCAL _CQUERY
LOCAL _NX
LOCAL _AGERAR	 := {}
LOCAL _NAGRUPA   := 1
LOCAL _ANOTAS    := {}
LOCAL _APVLNFS   := {}
LOCAL _LGERA     := .F.
LOCAL _DDATA

PREPARE ENVIRONMENT EMPRESA _CEMPX FILIAL _CFILX

IF SELECT("TMPSC6") > 0
	TMPSC6->( DBCLOSEAREA() )
ENDIF
_CQUERY := " SELECT SC6.R_E_C_N_O_ AS REG"
_CQUERY += " FROM "+RETSQLNAME("SC6")+ " SC6 (NOLOCK) "
_CQUERY += " WHERE  SC6.C6_FILIAL  = '"+XFILIAL("SC6")+"' "
_CQUERY += " AND SC6.D_E_L_E_T_ = '' "
_CQUERY += " AND SC6.C6_XRMNOTA <> '' AND SC6.C6_NOTA = '' "
_CQUERY += " AND SC6.C6_FILIAL = '"+_CFILX+"' "

DBUSEAREA( .T., "TOPCONN", TCGENQRY(,,_CQUERY), "TMPSC6", .F., .T.)
TMPSC6->(DBGOTOP())
_AGERAR := {}
WHILE !TMPSC6->(EOF())
	SC6->(DBGOTO(TMPSC6->REG))

	// CRIAR ARRAY PARA AGRUPAMENTO
	//            AGRUPADOR, RECNO SC6     , N.NOTA RM      , N.SERIE RM     , DATA GERACAO NOTA NO RM
	AADD(_AGERAR,{0,         SC6->(RECNO()), SC6->C6_XRMNOTA, SC6->C6_XRMSERI, SC6->C6_XRMDATA })
	_DDATA := SC6->C6_XRMDATA

	TMPSC6->(DBSKIP())
ENDDO
TMPSC6->( DBCLOSEAREA() )		

IF LEN(_AGERAR) > 0
	// PROCESSO PARA AGRUPAR PELA NUMERACAO DA NOTA E SERIE DA RM
	// ---------------------------------------------------------------
	_AGERAR 	:= ASORT(_AGERAR,,,{|X,Y| X[3]+X[4]<Y[3]+Y[4]})
	_NAGRUPA 	:= 1
	_CNRM 		:= _AGERAR[1][03]
	_CSRM 		:= _AGERAR[1][04]
	FOR _NX := 1 TO LEN(_AGERAR)
		IF _AGERAR[_NX][03] == _CNRM .AND. _AGERAR[_NX][04] == _CSRM
			_AGERAR[_NX][01] := _NAGRUPA
		ELSE
			_NAGRUPA ++
			_AGERAR[_NX][01] := _NAGRUPA
			_CNRM := _AGERAR[_NX][03]
			_CSRM := _AGERAR[_NX][04]
		ENDIF
	NEXT
	// ---------------------------------------------------------------
	// MONTAGEM DOS ITENS DA NOTA.
	_NAGRUPA := 1
	_APVLNFS := {}
	FOR _NX := 1 TO LEN(_AGERAR)
		SC6->(DBGOTO(_AGERAR[_NX][02]))
		SC9->(DBSETORDER(2))
		SC9->(DBSEEK(XFILIAL("SC9")+SC6->(C6_CLI+C6_LOJA+C6_NUM+C6_ITEM)))
		SC5->(DBSETORDER(3))
		SC5->(DBSEEK(XFILIAL("SC5")+SC6->(C6_CLI+C6_LOJA+C6_NUM)))
		SE4->(DBSETORDER(1))
		SE4->(DBSEEK(XFILIAL("SE4")+SC5->C5_CONDPAG))
		SB1->(DBSETORDER(1))
		SB1->(DBSEEK(XFILIAL("SB1")+SC6->C6_PRODUTO))
		SB2->(DBSETORDER(1))
		SB2->(DBSEEK(XFILIAL("SB2")+SC6->(C6_PRODUTO+C6_LOCAL)))
		SF4->(DBSETORDER(1))
		SF4->(DBSEEK(XFILIAL("SF4")+SC6->C6_TES))

		IF _AGERAR[_NX][01] == _NAGRUPA
			AADD( _ANOTAS , SC6->C6_NUM   	)
			AADD( _ANOTAS , SC6->C6_ITEM    )
			AADD( _ANOTAS , SC9->C9_SEQUEN  )
			AADD( _ANOTAS , SC9->C9_QTDLIB  )
			AADD( _ANOTAS , SC9->C9_PRCVEN  )
			AADD( _ANOTAS , SC9->C9_PRODUTO )
			AADD( _ANOTAS , .F.     		)
			AADD( _ANOTAS , SC9->(RECNO())  )
			AADD( _ANOTAS , SC5->(RECNO())  )
			AADD( _ANOTAS , SC6->(RECNO())  )
			AADD( _ANOTAS , SE4->(RECNO())  )
			AADD( _ANOTAS , SB1->(RECNO())  )
			AADD( _ANOTAS , SB2->(RECNO())  )
			AADD( _ANOTAS , SF4->(RECNO())  )
			AADD( _APVLNFS , ACLONE(_ANOTAS) )

			_ANOTAS := {}
		ELSE
			ITGERNFX(_APVLNFS, _DDATA)
			_APVLNFS := {}
			_NAGRUPA := _AGERAR[_NX][01]
			
			AADD( _ANOTAS , SC6->C6_NUM   	)
			AADD( _ANOTAS , SC6->C6_ITEM    )
			AADD( _ANOTAS , SC9->C9_SEQUEN  )
			AADD( _ANOTAS , SC9->C9_QTDLIB  )
			AADD( _ANOTAS , SC9->C9_PRCVEN  )
			AADD( _ANOTAS , SC9->C9_PRODUTO )
			AADD( _ANOTAS , .F.     		)
			AADD( _ANOTAS , SC9->(RECNO())  )
			AADD( _ANOTAS , SC5->(RECNO())  )
			AADD( _ANOTAS , SC6->(RECNO())  )
			AADD( _ANOTAS , SE4->(RECNO())  )
			AADD( _ANOTAS , SB1->(RECNO())  )
			AADD( _ANOTAS , SB2->(RECNO())  )
			AADD( _ANOTAS , SF4->(RECNO())  )
			AADD( _APVLNFS , ACLONE(_ANOTAS) )

			_ANOTAS := {}
		ENDIF
	NEXT
	ITGERNFX(_APVLNFS, _DDATA)
ENDIF

RETURN 

// FRANK FUGA 29/12/20
// INCLUSAO DA NOTA FISCAL
STATIC FUNCTION ITGERNFX(_APVLNFS, _DDATA)
LOCAL   _CSERIE   := SUPERGETMV("MV_LOCX201",.F.,"001") 

DDATABASE := _DDATA

PERGUNTE("MT460A",.F.)
MV_PAR11 := 1 // POSSIBILITAR AGLUTINAR PEDIDOS IGUAIS

_CNOTA := MAPVLNFS(_APVLNFS , _CSERIE , .F. , .F. , .F. , .T. , .F. , 0 , 0 , .T. , .F.) 
PUTGLBVALUE("CNF_PAR" , _CNOTA) 							// --> ALIMENTA NO. DA NF

RETURN


// FRANK FUGA - 29/12/2020
// CANCELAMENTO DA NOTA
FUNCTION LOCA07401(_CEMPX, _CFILX)
LOCAL _CQUERY
LOCAL _NX
LOCAL AAREA   := {}
LOCAL AHEADER := {}
LOCAL _AEXCL  := {}
LOCAL _LEXCL  := .T.

PRIVATE LMSERROAUTO := .F.
PRIVATE LMSHELPAUTO := .T.

PREPARE ENVIRONMENT EMPRESA _CEMPX FILIAL _CFILX

IF SELECT("TMPSC6") > 0
	TMPSC6->( DBCLOSEAREA() )
ENDIF
_CQUERY := " SELECT SC6.R_E_C_N_O_ AS REG"
_CQUERY += " FROM "+RETSQLNAME("SC6")+ " SC6 (NOLOCK) "
_CQUERY += " WHERE  SC6.C6_FILIAL  = '"+XFILIAL("SC6")+"' "
_CQUERY += " AND SC6.D_E_L_E_T_ = '' "
_CQUERY += " AND SC6.C6_XRMNOTA = '' AND SC6.C6_NOTA <> '' "
_CQUERY += " AND SC6.C6_SERIE = '"+SUPERGETMV("MV_LOCX201",.F.,"001")+"' "
_CQUERY += " AND SC6.C6_FILIAL = '"+_CFILX+"' "

DBUSEAREA( .T., "TOPCONN", TCGENQRY(,,_CQUERY), "TMPSC6", .F., .T.)
TMPSC6->(DBGOTOP())

WHILE !TMPSC6->(EOF())
	SC6->(DBGOTO(TMPSC6->REG))

	_LEXCL  := .T.
	FOR _NX:=1 TO LEN(_AEXCL)
		IF _AEXCL[_NX][01] == SC6->C6_NOTA .AND. _AEXCL[_NX][02] == SC6->C6_SERIE
			_LEXCL := .F.
			EXIT
		ENDIF
	NEXT

	IF !_LEXCL
		TMPSC6->(DBSKIP())
		LOOP
	ENDIF

    AAREA := GETAREA()
		
	AHEADER := {}
    AADD(AHEADER, {"F2_DOC",      PADR(SC6->C6_NOTA, TAMSX3("F2_DOC")[1]),      NIL}) // NÚMERO DA NOTA
    AADD(AHEADER, {"F2_SERIE",    PADR(SC6->C6_SERIE,TAMSX3("F2_SERIE")[1]),    NIL}) // SÉRIE

	AADD(_AEXCL,{SC6->C6_NOTA, SC6->C6_SERIE})

    // REALIZA A OPERAÇÃO
    MSEXECAUTO({|X| MATA520(X)}, AHEADER)

	RESTAREA(AAREA)

	TMPSC6->(DBSKIP())
ENDDO
TMPSC6->( DBCLOSEAREA() )	

RETURN






