#INCLUDE "loca038.ch" 
/*/{PROTHEUS.DOC} LOCA038.PRW
ITUP BUSINESS - TOTVS RENTAL
ESTORNO DE BV
@TYPE FUNCTION
@AUTHOR FRANK ZWARG FUGA
@SINCE 03/12/2020
@VERSION P12
@HISTORY 03/12/2020, FRANK ZWARG FUGA, FONTE PRODUTIZADO.
/*/
#INCLUDE "PROTHEUS.CH" 
#INCLUDE "RWMAKE.CH" 
#INCLUDE "TOPCONN.CH"

FUNCTION LOCA038()
LOCAL LRET	     := .T.

// Removi pois ainda nao usamos o BV e esta dando debitos tecnicos na totvs por questao do SE5
// Frank Z Fuga - 06/04/2022
/*
PRIVATE CXOPTBAN := PADR(LOCA04502(1),LEN(SA6->A6_COD))			// CÓDIGO DO BANCO   DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE CXOPTAG  := PADR(LOCA04502(2),LEN(SA6->A6_AGENCIA))		// CÓDIGO DA AGÊNCIA DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE CXOPTCC  := PADR(LOCA04502(3),LEN(SA6->A6_NUMCON))		// CÓDIGO DA C/C     DO CAIXA OPERACIONAL TRANSPORTE
PRIVATE CXOPGBAN := PADR(LOCA04502(4),LEN(SA6->A6_COD)) 			// CÓDIGO DO BANCO   DO CAIXA OPERACIONAL GUINDASTE
PRIVATE CXOPGAG  := PADR(LOCA04502(5),LEN(SA6->A6_AGENCIA))		// CÓDIGO DA AGÊNCIA DO CAIXA OPERACIONAL GUINDASTE
PRIVATE CXOPGCC  := PADR(LOCA04502(6),LEN(SA6->A6_NUMCON))		// CÓDIGO DA C/C     DO CAIXA OPERACIONAL GUINDASTE
PRIVATE CPREFIXO := "BV "
PRIVATE CNUM 	 := LEFT(FPI->FPI_NRBV+SPACE(10),LEN(SE2->E2_NUM))
PRIVATE CPARCELA := TAMSX3("E2_PARCELA")[1]
PRIVATE CTIPO    := "NCF"
PRIVATE CFORNECE := ""
PRIVATE CLOJA    := ""
PRIVATE CHIST    := ""

IF LOCA04416()
	IF MSGYESNO(STR0001 + FPI->FPI_NRBV + " ?" , STR0002)  //"CONFIRMA A ESTORNO DO BV NR. "###"GPO - LOCF112.PRW"
		// BUSCO O FORNECEDOR DO MOTORISTA 
		DA4->(DBSETORDER(1))
		DA4->(DBSEEK(XFILIAL("DA4") + FPI->FPI_MOTORI,.F.))
	
		SA2->(DBSETORDER(1))
		IF !SA2->(DBSEEK(XFILIAL("SA2")+ DA4->DA4_FORNEC + DA4->DA4_LOJA,.F.))
			MSGSTOP(STR0003 + ALLTRIM(SA2->A2_COD) + "/"  + ALLTRIM(SA2->A2_LOJA) + "-" + ALLTRIM(SA2->A2_NOME) + STR0004 + FPI->FPI_MOTORI + STR0005 , STR0002)  //"FORNECEDOR "###", VINCULADO AO MOTORISTA "###", NÃO ENCONTRADO !!!, VERIFIQUE O CADASTRO DO MOTORISTA."###"GPO - LOCF112.PRW"
			LRET := .F.
		ENDIF

		// CAMPOS PADRÕES
		CNUM      := LEFT(FPI->FPI_NRBV+SPACE(10), LEN(SE2->E2_NUM))
		CFORNECE  := SA2->A2_COD
		CLOJA     := SA2->A2_LOJA
		CHIST     := STR0006 + FPI->FPI_NRBV //"ESTORNO PAG. REF. DESP.DO BV "
		_CDESCRBX := STR0007 + FPI->FPI_NRBV //"ESTORNO BAIXA REF. DEVOL. BV "
		_NVALDEV  := FPI->FPI_DEVOLU + FPI->FPI_DESFOL + FPI->FPI_PENDEN
	ELSE
		LRET := .F.
	ENDIF
ELSE
	LRET := .F.
ENDIF

//BEGIN TRANSACTION

// BUSCO O FORNECEDOR DO MOTORISTA
DA4->(DBSETORDER(1))
DA4->(DBSEEK(XFILIAL("DA4") + FPI->FPI_MOTORI,.F.))
	
SA2->(DBSETORDER(1))
IF !SA2->(DBSEEK(XFILIAL("SA2")+ DA4->DA4_FORNEC + DA4->DA4_LOJA,.F.))
	MSGSTOP("FORNECEDOR " + ALLTRIM(SA2->A2_COD) + "/"  + ALLTRIM(SA2->A2_LOJA) + "-" + ALLTRIM(SA2->A2_NOME) + STR0004 + SUBSTR(AADIANT[NX, 05],1,6) + STR0005 , STR0002)  //", VINCULADO AO MOTORISTA "###", NÃO ENCONTRADO !!!, VERIFIQUE O CADASTRO DO MOTORISTA."###"GPO - LOCF112.PRW"
	LRET := .F.
ENDIF

// CAMPOS PADRÕES
CFORNECE  := SA2->A2_COD
CLOJA	  := SA2->A2_LOJA
CHIST     := STR0006 + FPI->FPI_NRBV //"ESTORNO PAG. REF. DESP.DO BV "
_CDESCRBX := STR0007 + FPI->FPI_NRBV //"ESTORNO BAIXA REF. DEVOL. BV "
_NVALDEV  := FPI->FPI_DEVOLU + FPI->FPI_DESFOL + FPI->FPI_PENDEN
_CBANCO	  := IIF(FPI->FPI_DEPTO=="1",CXOPGBAN,CXOPTBAN)		// 1=GUINDASTE;2=TRANSPORTE
_CAGENCIA := IIF(FPI->FPI_DEPTO=="1",CXOPGAG ,CXOPTAG )		// 1=GUINDASTE;2=TRANSPORTE
_CNUMCON  := IIF(FPI->FPI_DEPTO=="1",CXOPGCC ,CXOPTCC )		// 1=GUINDASTE;2=TRANSPORTE
_CCCUSTO  := LOCA05101(FPI->FPI_DEPTO)						// 1=GUINDASTE;2=TRANSPORTE

// EXCLUO A BAIXA DA PA REFERÊNTE AO VALOR DEVOLVIDO PELO MOTORISTA
IF LRET
	// FAÇO UMA QUERY PARA LEVANTAR TODOS OS TÍTULOS QUE FORAM BAIXADOS
	IF SELECT("TRB") > 0
		DBSELECTAREA("TRB")
		DBCLOSEAREA()
	ENDIF

	CQUERY := "SELECT SE5.E5_PREFIXO, SE5.E5_NUMERO, SE5.E5_PARCELA, SE5.E5_TIPO, SE5.E5_CLIFOR, SE5.E5_LOJA, SE5.E5_VALOR "
	CQUERY += "FROM " + RETSQLNAME("SE5")  + " SE5 "
	CQUERY +=       " INNER JOIN "+RETSQLNAME("FPH")+" ZL1 ON ZL1.FPH_NRVALE = SE5.E5_NUMERO       AND " 
	CQUERY +=										        " ZL1.FPH_NRBV   = '"+FPI->FPI_NRBV+"' AND " 
	CQUERY +=										        " ZL1.D_E_L_E_T_ = '' "
	CQUERY += "WHERE SE5.E5_PREFIXO =  'ADT' AND "
	CQUERY += "		 SE5.E5_TIPODOC <> 'PA ' AND "
	CQUERY += "		 SE5.E5_TIPODOC <> 'ES ' AND "
	CQUERY += "		 SE5.E5_RECPAG  =  'R'   AND "
	CQUERY += "		 SE5.E5_CLIFOR  = '" + CFORNECE + "' AND "
	CQUERY += "		 SE5.E5_LOJA    = '" + CLOJA    + "' AND "
	CQUERY += "		 SE5.E5_FORNECE = '" + CFORNECE + "' AND "
	CQUERY += "		 SE5.D_E_L_E_T_ = ''"
	CQUERY += "GROUP BY SE5.E5_PREFIXO, SE5.E5_NUMERO, SE5.E5_PARCELA, SE5.E5_TIPO, SE5.E5_CLIFOR, SE5.E5_LOJA, SE5.E5_VALOR "
	CQUERY := CHANGEQUERY(CQUERY)
	DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRB", .F., .T.)

	TRB->(DBGOTOP())
	WHILE ! TRB->(EOF())
		// PROCURO NO FINANCEIRO SE O VALE AINDA POSSUI SALDO
		SE2->(DBSETORDER(1)) 										// E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA
		IF SE2->(DBSEEK(XFILIAL("SE2") + TRB->E5_PREFIXO + TRB->E5_NUMERO + TRB->E5_PARCELA +TRB->E5_TIPO + TRB->E5_CLIFOR + TRB->E5_LOJA))
			IF SE2->E2_VALOR - SE2->E2_SALDO >= TRB->E5_VALOR 		// EFETUO O ESTORNO DO MOVIMENTO BANCÁRIO TOTAL
				LRET := LOCA03801(_CBANCO,_CAGENCIA,_CNUMCON,_CDESCRBX,TRB->E5_VALOR, 5)
			ELSEIF SE2->E2_VALOR - SE2->E2_SALDO < TRB->E5_VALOR 	// EFETUO O ESTORNO DO MOVIMENTO BANCÁRIO PARCIAL (NÃO DEVE ENTRAR AQUI NUNCA)
				LRET := LOCA03801(_CBANCO,_CAGENCIA,_CNUMCON,_CDESCRBX,(SE2->E2_VALOR - SE2->E2_SALDO), 5)
			ENDIF
		ENDIF
		TRB->(DBSKIP())
	ENDDO

	TRB->(DBCLOSEAREA())
ENDIF

// EXCLUI O TÍTULO NCF COM O TOTAL DAS DEPESAS
IF LRET
	SE2->(DBSETORDER(1))
	SE2->(DBSEEK(XFILIAL("SE2") + CPREFIXO + CNUM + PADR(CPARCELA,TAMSX3("E2_PARCELA")[1]) + CTIPO + CFORNECE + CLOJA))
	ASE2 := {}
	AADD(ASE2 , {"E2_FILIAL"  , XFILIAL("SE2")						   , NIL})
	AADD(ASE2 , {"E2_PREFIXO" , CPREFIXO							   , NIL})
	AADD(ASE2 , {"E2_NUM"     , CNUM								   , NIL})
	AADD(ASE2 , {"E2_PARCELA" , PADR(CPARCELA,TAMSX3("E2_PARCELA")[1]) , NIL})
	AADD(ASE2 , {"E2_TIPO"    , PADR(CTIPO,TAMSX3("E2_TIPO")[1]) 	   , NIL})
	AADD(ASE2 , {"E2_FORNECE" , CFORNECE       						   , NIL})
	AADD(ASE2 , {"E2_LOJA"    , CLOJA           					   , NIL})
	AADD(ASE2 , {"AUTBANCO"   , _CBANCO                				   , NIL})
	AADD(ASE2 , {"AUTAGENCIA" , _CAGENCIA              				   , NIL})
	AADD(ASE2 , {"AUTCONTA"   , _CNUMCON               				   , NIL})
				
	// VARIAVEIS MENSAGEM DE ERRO
	LMSERROAUTO := .F.
	LMSHELPAUTO := .T.
				
	// GRAVA CONTAS A PAGAR
	MSEXECAUTO({|X,Y,Z|FINA050(X,Y,Z)},ASE2,NIL,5)

	// CONTROLA MENSAGEM DE ERRO
	IF LMSERROAUTO
		ROLLBACKSX8()
		LRET := .F.
		MOSTRAERRO()
		MSGALERT(STR0008 + ALLTRIM(FPI->FPI_NRBV) + "! " , STR0002)  //"NÃO FOI POSSIVEL ESTORNAR O TITULO PARA O BV "###"GPO - LOCF112.PRW"
	ELSE
		CONFIRMSX8()
		LRET := .T.
	ENDIF
ENDIF

// SE EXISTIR MAIS DE UM TIPO DE DESPESA EU EXCLUO A TABELA DE MÚLTIPLAS NATUREZAS
IF LRET
	SEV->(DBSETORDER(1))
	SEV->(DBSEEK(XFILIAL("SEV") + CPREFIXO + FPI->FPI_NRBV + "   " + CTIPO + CFORNECE + CLOJA))
	WHILE ! SEV->(EOF()) .AND. SEV->EV_PREFIXO == CPREFIXO      .AND. ; 
	                           SEV->EV_NUM     == FPI->FPI_NRBV .AND. ; 
	                           SEV->EV_PARCELA == CPARCELA      .AND. ; 
	                           SEV->EV_TIPO    == CTIPO 	    .AND. ; 
	                           SEV->EV_CLIFOR  == CFORNECE      .AND. ; 
	                           SEV->EV_LOJA    == CLOJA		    .AND. ; 
	                           LRET 
		IF RECLOCK("SEV",.F.) 
			SEV->(DBDELETE()) 
			SEV->(MSUNLOCK())
		ELSE
			MSGSTOP(STR0009 , STR0002)  //"NÃO FOI POSSÍVEL EXCLUIR O REGISTRO DAS MULTIPLAS NATUREZAS REFERÊNTE A ESTE BV, VERIFIQUE O CADASTRO DAS MULTIPLAS NATUREZA."###"GPO - LOCF112.PRW"
			LRET := .F.
		ENDIF 
		SEV->(DBSKIP())
	ENDDO
ENDIF

// EXCLUO A TABELA ZL0-TABELA DE DESCONTOS REFERENTE A BVS PARA FOLHA COM A DIFERENÇA A SER DESCONTADA DO FUNCIONÁRIO
IF LRET
	ZL0->(DBSETORDER(2))
	ZL0->(DBSEEK(XFILIAL("ZL0") + FPI->FPI_MOTORI + FPI->FPI_NRBV))
	WHILE ! ZL0->(EOF()) .AND. ZL0->ZL0_MOTORI == FPI->FPI_MOTORI  .AND.  ZL0->ZL0_NRBV == FPI->FPI_NRBV  .AND.  LRET 
		IF RECLOCK("ZL0",.F.) 
			ZL0->(DBDELETE()) 
			ZL0->(MSUNLOCK()) 
		ELSE
			MSGSTOP(STR0010 , STR0002)  //"NÃO FOI POSSÍVEL EXCLUIR O DO DESCONTO EM FOLHA REFERÊNTE A ESTE BV, VERIFIQUE O CADASTRO DE DESCONTOS EM FOLHA (ZL0)."###"GPO - LOCF112.PRW"
			LRET := .F.
		ENDIF 
		ZL0->(DBSKIP())
	ENDDO
ENDIF                                           

// EXCLUO OS  REGISTROS DE MOVIMENTAÇÃO DA BV QUE  FORAM ESTORNADOS PARA QUE NÃO APAREÇÃO NA  TELA DA USUÁRIA MENOS OS DO  TIPO "PA"
IF LRET
	
	IF SELECT("TRB") > 0
		DBSELECTAREA("TRB")
		DBCLOSEAREA()
	ENDIF
	
	CQUERY := "SELECT SE5.E5_PREFIXO, SE5.E5_NUMERO, SE5.E5_PARCELA, SE5.E5_TIPO, SE5.E5_CLIFOR, SE5.E5_LOJA, SE5.E5_VALOR, SE5.E5_TIPODOC"
	CQUERY += "FROM  " + RETSQLNAME("SE5")  + " SE5 "
	CQUERY +=        " INNER JOIN " + RETSQLNAME("FPH") + " ZL1 ON SE5.E5_NUMERO  = ZL1.FPH_NRVALE AND "
	CQUERY +=										             " ZL1.FPH_NRBV   = '" + FPI->FPI_NRBV + "' AND "
	CQUERY +=										             " ZL1.D_E_L_E_T_ = '' "
	CQUERY += "WHERE SE5.E5_PREFIXO =  'ADT'             AND " 
	CQUERY +=      " SE5.E5_CLIFOR  = '" + CFORNECE + "' AND "
	CQUERY +=      " SE5.E5_LOJA    = '" + CLOJA    + "' AND "
	CQUERY +=      " SE5.E5_FORNECE = '" + CFORNECE + "' AND "
	CQUERY +=      " SE5.D_E_L_E_T_ = ''"
	CQUERY += "GROUP BY SE5.E5_PREFIXO, SE5.E5_NUMERO, SE5.E5_PARCELA, SE5.E5_TIPO, SE5.E5_CLIFOR, SE5.E5_LOJA, SE5.E5_VALOR, SE5.E5_TIPODOC "
	CQUERY := CHANGEQUERY(CQUERY)
	DBUSEAREA(.T.,"TOPCONN", TCGENQRY(,,CQUERY),"TRB", .F., .T.)
	
	TRB->(DBGOTOP())
	WHILE ! TRB->(EOF())
		SE5->(DBSETORDER(7))  							// E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR
		IF SE5->(DBSEEK(XFILIAL("SE5") + TRB->E5_PREFIXO + TRB->E5_NUMERO + TRB->E5_PARCELA +TRB->E5_TIPO + TRB->E5_CLIFOR + TRB->E5_LOJA))
			WHILE !SE5->(EOF()) .AND. ; 
			       TRB->E5_PREFIXO + TRB->E5_NUMERO + TRB->E5_CLIFOR + TRB->E5_LOJA == SE5->E5_PREFIXO + SE5->E5_NUMERO + SE5->E5_CLIFOR + SE5->E5_LOJA			
				IF ALLTRIM(SE5->E5_TIPODOC) <> "PA" 	// OS TIPOS DE  DOCUMENTO 'PA' DEVEM SER DELETADOS SOMENTE NO ESTORNO DO VALES
					RECLOCK("SE5",.F.)
					DBDELETE()
					MSUNLOCK()   
				ENDIF
				SE5->(DBSKIP()) 
			ENDDO
		ENDIF
		TRB->(DBSKIP())
	ENDDO
	
	TRB->(DBCLOSEAREA())                
	
ENDIF
	
// VOLTO O STATUS DE ABERTO DO BV
FPI->(RECLOCK("FPI",.F.))
FPI->FPI_APROV  := "N"
FPI->FPI_STATUS := "F"
FPI->FPI_USUAPR := ""
FPI->(MSUNLOCK())

IF LRET
	MSGALERT(STR0011 , STR0002)  //"ESTORNO REALIZADO COM SUCESSO..."###"GPO - LOCF112.PRW"
ELSE
	MSGALERT(STR0012 , STR0002)  //"ESTORNO NÃO FOI REALIZADO."###"GPO - LOCF112.PRW"
	//DISARMTRANSACTION() 
	RETURN(.F.) 
ENDIF 

//END TRANSACTION 
*/
RETURN LRET 



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPROGRAMA  ³ BAIXA_PA  º AUTOR ³ IT UP BUSINESS     º DATA ³ 12/03/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESCRICAO ³ BAIXA A PA                                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUSO       ³ ESPECIFICO GPO                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION LOCA03801(_XBANCO , _XAGENCIA , _XCONTA , _XDESCRBX , _XVALBX , _XTIPO , _DATABAIXA) 

LOCAL _LRET2 := .T.                  
LOCAL NRECNO := SE2->(RECNO())	

DEFAULT _DATABAIXA := DDATABASE

ABAIXA := {}

// BAIXAR TITULOS 
AADD(ABAIXA , { "E2_PREFIXO"  , SE2->E2_PREFIXO , NIL } )	
AADD(ABAIXA , { "E2_NUM"      , SE2->E2_NUM	    , NIL } )	
AADD(ABAIXA , { "E2_PARCELA"  , SE2->E2_PARCELA , NIL } )	
AADD(ABAIXA , { "E2_TIPO"     , SE2->E2_TIPO	, NIL } )	
AADD(ABAIXA , { "E2_FORNECE"  , SE2->E2_FORNECE , NIL } )	
AADD(ABAIXA , { "E2_LOJA"     , SE2->E2_LOJA	, NIL } )	
AADD(ABAIXA , { "AUTMOTBX"    , "NOR"       	, NIL } )	
AADD(ABAIXA , { "AUTBANCO"    , _XBANCO		    , NIL } )	
AADD(ABAIXA , { "AUTAGENCIA"  , _XAGENCIA		, NIL } )	
AADD(ABAIXA , { "AUTCONTA"    , _XCONTA		    , NIL } )	
AADD(ABAIXA , { "AUTDTBAIXA"  , _DATABAIXA  	, NIL } )	
AADD(ABAIXA , { "AUTHIST"     , _XDESCRBX       , NIL } )	
AADD(ABAIXA , { "AUTDESCONT"  , 0				, NIL } )	
AADD(ABAIXA , { "AUTMULTA"    , 0				, NIL } )	
AADD(ABAIXA , { "AUTJUROS"    , 0				, NIL } )	
AADD(ABAIXA , { "AUTOUTGAS"   , 0				, NIL } )	
AADD(ABAIXA , { "AUTVLRPG"    , _XVALBX		    , NIL } )	
AADD(ABAIXA , { "AUTVLRME"    , 0				, NIL } )	
AADD(ABAIXA , { "AUTCHEQUE"   , ""			    , NIL } )	
      
// VARIAVEIS MENSAGEM DE ERRO
LMSERROAUTO := .F.
LMSHELPAUTO := .T.
			
// GRAVA CONTAS A PAGAR
MSEXECAUTO({|X,Y| FINA080(X,Y)},ABAIXA,_XTIPO)

// CONTROLA MENSAGEM DE ERRO
IF LMSERROAUTO
    _LRET2 := .F.
	MOSTRAERRO()
	MSGALERT(STR0013+IIF(_XTIPO==3,STR0014,STR0015)+STR0016+ ALLTRIM(FPI->FPI_NRBV)+"." , STR0002)  //"NÃO FOI POSSIVEL EFETUAR "###"A BAIXA PARCIAL"###"O ESTORNO"###" REFERÊNTE AO BV "###"GPO - LOCF112.PRW"
ELSE
	IF _XTIPO == 5 		// ESTORNO
		DBSELECTAREA("SE2")
		DBGOTO(NRECNO)
	    RECLOCK("SE2", .F.)
	    SE2->E2_SALDO += _XVALBX
	    SE2->(MSUNLOCK()) 
	ENDIF 
ENDIF 

RETURN _LRET2
